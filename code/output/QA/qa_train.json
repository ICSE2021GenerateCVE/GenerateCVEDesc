{"data": [{"title": "", "paragraphs": [{"context": "This exploit tool is provided only to test networks for a  known vulnerability. Do not use this tool on systems you do not control,  and do not use this tool on networks you do not own without appropriate  consent from the network owner. As with most Apache exposures, the impacts vary between ports of the server:  NonUnix (Win32, Netware, OS2): These ports are most adversely affected  by this, as Apache's child process doesn't terminate normally unless the  parent process stops. This MPM offers the most protection against successful  exploitation, as its processes exit at the end of the request Depending on the MPM in use and the traffic rates  of the server, this may be used to the advantage of a potential attacker If multiple different Apache processes are utilized, an attacker can spread  the substantial leak between processes to dodge resource limits imposed on  Credit: iDEFENSE reported this issue to several security lists on April 8,  2003 following the Apache release announcement. Apache fixed the flaw about  a month after the initial disclosure of this vulnerability credits  the discovery of this vulnerability to an anonymous researcher.", "qas": [{"answers": [{"answer_start": 615, "text": "the MPM in use and the traffic rates  of the server"}], "question": "What is root cause?", "id": "9-0", "is_impossible": false}, {"answers": [{"answer_start": 845, "text": "dodge resource limits imposed on  Credit"}], "question": "What is impact?", "id": "9-1", "is_impossible": false}, {"answers": [{"answer_start": 795, "text": "spread  the substantial leak between processes"}], "question": "What is attack vector?", "id": "9-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Do not use this code to do anything illegal !   I do not want anyone to use this script  for malicious andor illegal purposes   Note : you are not allowed to editmodify this code", "qas": [{"answers": [], "question": "What is root cause?", "id": "15069-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15069-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15069-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Author will be not responsible for any damage.</font></b> Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7 Version: 3.3.2.26 (other versions may also be vulnerable) RegKey Safe for Script: True RegKey Safe for Init: All these methods are vulnerable to a stack based buffer overflow when you pass an overly long (greater than 6999 characters). This is the list of all vulnerable methods: Viewpoint Media Player is a web browser plug-in that enables users to view 3D content and other rich media, such as Flash content and video, on the Internet. Despite the arguable usefulness of Viewpoint, the vast majority of sites will stay away from it, and in practice not having Viewpoint installed is not going to be an issue. <b>This is a report at the moment of the overflow using first exploit:</b> ESP 0188B668 02681494 42 42 42 42 42", "qas": [{"answers": [], "question": "What is root cause?", "id": "4610-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4610-1", "is_impossible": true}, {"answers": [{"answer_start": 318, "text": "pass an overly long (greater than 6999 characters)"}], "question": "What is attack vector?", "id": "4610-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "SmarterTools SmarterMail is prone to a denial-of-service vulnerability when handling specially crafted HTTP GET, HEAD, PUT, POST, and TRACE requests. When the server eventually resets the request connection, it will crash. Remote attackers can exploit this issue to deny service to legitimate users. SmarterMail 5.0 is vulnerable; other versions may also be affected [+] Now we must wait for a connection reset to crash the server..", "qas": [{"answers": [], "question": "What is root cause?", "id": "31607-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "denial-of-service"}], "question": "What is impact?", "id": "31607-1", "is_impossible": false}, {"answers": [{"answer_start": 85, "text": "specially crafted HTTP GET, HEAD, PUT, POST, and TRACE requests"}], "question": "What is attack vector?", "id": "31607-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "STEP 2: Boot system and determine FQDN of the device. , this can be obtained by monitoring the network broadcast communication, which the system sends prior to loggin in. Create Computer Object in Active Directory with the same name as the target system. STEP 8: Login with the password defined in STEP 4. Access gained to the information stored to the FDE target system without previous knowledge of password or any other information. Password Caching enabled  Victim has cached credentials stored on the system from previous logon.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39442-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39442-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39442-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "but there's a lil note that when importing 'Devil_Inside.chmprj' a message  will pops up and tells that the project file format is outdated bla bla but after clicking  ok it will load into the program,and just go to FileMake Ebook. you can avoid the message by using chm ebook project data,i'm lazy to do that  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "8311-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8311-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8311-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Providing an object allows an attacker to execute AS2 code in the following loop (these lines come from flashplayer17_sa.exe 17.0.0.169): here we can override object.length and execute some code .text:004D6973 test eax, eax ; if that code frees the object pointed by ebx... ; get an item from the object .text:004D697F add esp, 4 .text:004D6982 test eax, eax ; we have either a filter or 0 here .text:004D6990 call sub_4CDB70 ; and a write-4 condition here Freeing the object pointed by ebx is easy indeed: flash_as2_filters_uaf_write4_poc.swf just crashes the program and flash_as2_filters_uaf_write4.swf crashes while writing to 0x41424344 Content of flash_as2_filters_uaf_write4_poc.fla Compile that with Flash CS5.5 and change the property \"s\" in the swf to \"3\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "37848-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "execute AS2 code in the following loop (these lines come from flashplayer17_sa.exe 17.0.0.169)"}], "question": "What is impact?", "id": "37848-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37848-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Depending on the malformed font file, the crashes are triggered at various locations in the win32k!scl_ApplyTranslation function: The crashes always occur while trying to access memory outside of a dynamically allocated destination buffer, leading to a pool-based buffer overflow, potentially allowing for remote code execution in the context of the Windows kernel. While we have not determined the specific root cause of the vulnerability, we have pinpointed the offending mutations to reside in the \"maxp\" and \"hmtx\" tables. The issue reproduces on Windows 7 and 8.1. It is easiest to reproduce with Special Pools enabled for win32k.sys (leading to an immediate crash when the bug is triggered), but it is also possible to observe a crash on a default Windows installation in win32k!scl_ApplyTranslation or another location in kernel space, as caused by the corrupted pool state, depending on the specific testcase used. While performing further analysis of some of the offending samples, we have found that sometimes buffers and structures in the pools align such that this condition causes an overwrite of function pointers residing in the font's fnt_GlobalGraphicStateType structure, consequently leading to crashes at invalid EIPs when one of these pointers is subsequently called. Several crashes such as the one shown below have been reproduced on Windows 7 32-bit with Special Pools enabled for win32k.sys: Typically the address is just plain bad or it is pointing at freed memory. We have encountered a number of Windows kernel crashes in the win32k!scl_ApplyTranslation function while processing corrupted TTF font files, such as: Invalid system memory was referenced.", "qas": [{"answers": [{"answer_start": 171, "text": "access memory outside of a dynamically allocated destination buffer"}], "question": "What is root cause?", "id": "37918-0", "is_impossible": false}, {"answers": [{"answer_start": 293, "text": "allowing for remote code execution in the context of the Windows kernel"}], "question": "What is impact?", "id": "37918-1", "is_impossible": false}, {"answers": [{"answer_start": 13, "text": "the malformed font file"}], "question": "What is attack vector?", "id": "37918-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Nokia N70 is reportedly prone to a remote denial-of-service vulnerability. A successful attack can allow an attacker to corrupt memory and to trigger a denial-of-service condition. Nokia model N70 is reported vulnerable to this issue; the specific firmware is currently unknown. This issue is reported to be a seperate issue than 16513 Arbitrary code execution may be possible as well, but this has not been confirmed. This program is free software; you can redistribute it andor modify  it under the terms of the GNU General Public License version 2 as  published by the Free Software Foundation;  THE SOFTWARE IS PROVIDED", "qas": [{"answers": [], "question": "What is root cause?", "id": "27232-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "27232-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "27232-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Messenger is prone to a denial-of-service vulnerability. Successful exploitation will cause the application to crash, effectively denying service. This issue affects version 7.5.0.814; other versions may also be vulnerable. The following examples are sufficient to trigger this issue:", "qas": [{"answers": [], "question": "What is root cause?", "id": "28099-0", "is_impossible": true}, {"answers": [{"answer_start": 24, "text": "denial-of-service"}], "question": "What is impact?", "id": "28099-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28099-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If you believe this happened as a result of a stack == 1009== overflow in your program's main thread (unlikely but ==1009== possible), you can try to increase the size of the ==1009== main thread stack using the --main-stacksize= flag It looks like a buffer overflow in memmove(). MacOS X 10.11 FTS Deep structure of the file system Buffer Overflow Affected software:  Apple Watch Sport, Apple Watch, Apple Watch Edition and Apple Watch Hermes   When the script will finish, you need back to top of directory. Segmentation fault: 11 11 Segmentation fault: 11 Segmentation fault: 11 ls: B: No such file or directory ls: B: No such file or directory Segmentation fault: 11 ls: B: No such file or directory", "qas": [{"answers": [{"answer_start": 249, "text": "a buffer overflow in memmove()"}], "question": "What is root cause?", "id": "38917-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "38917-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "38917-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "We force the program to interact  with X windows as little as possible  with this counter. The code below seems to work, but with the side effect that Left Ctrl stays down. XK_Hyper_R: if (pressed) else return True; return False; static void STREAM s;  Receive a message on the ISO layer, return code  static STREAM STREAM s; return NULL; return NULL; return NULL; return s; return s;  Initialise ISO transport data packet  STREAM STREAM s; return s; void  Receive ISO transport data packet  STREAM STREAM s; return NULL; return NULL; return s;  Establish a connection up to the ISO layer  if (!tcp_connect(server)) static void  Retrieve the server random from the incoming packet   We currently use null client keys. LICENCE_TAG_ISSUE: case LICENCE_TAG_REISSUE: case LICENCE_TAG_RESULT:  Establish a connection up to the MCS layer  if (!iso_connect(server)) return NULL; else return rdp_s; return rdp_s;  Initialise an RDP data packet  static STREAM STREAM s; return s;  Send an RDP data packet  static void  Output a string in Unicode  void  Parse a logon info packet  static void char *password, char *program, char *directory) STREAM s;   RDP_PDU_DATA: case 0:  Establish a connection up to the RDP layer  char *command, char *directory) if (!sec_connect(server)) It should be offline.\\n\\n\");  Receive a message on the TCP layer  STREAM if (!ui_select(sock))   Quick description of the exploit: This is a PoC remote exploit for the XRDP vulnerability found by Hamid Ebadi. XRDP 0.4.1 is the latest version at the time of this writing. I was able write alpha-numeric shellcode onto the stack. There may be distros where this isn't the case. Most of the code itself was taken from rdesktop, by Matthew Chapman. Segmentation fault (core dumped) But due to the alpha-numeric requirements for the return address, again, no dice.", "qas": [{"answers": [], "question": "What is root cause?", "id": "8469-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8469-1", "is_impossible": true}, {"answers": [{"answer_start": 1550, "text": "write alpha-numeric shellcode onto the stack"}], "question": "What is attack vector?", "id": "8469-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The zif_locale_parse function, which is exported to PHP as Locale::parseLocale, makes a call to get_icu_value_internal with potentially untrusted data. The exploitability of this vulnerability is dependent on the attack surface of a given application. In other scenarios this vulnerability may serve as a means to achieve privilege escalation. A call to Locale::parseLocale that triggers the exploitable condition. To fix the vulnerability, get_icu_value_internal should be modified to return a copy of loc_name rather than loc_name itself. PHP 5.5.12 suffers from a memory corruption vulnerability that could potentially be exploited to achieve remote code execution. The vulnerability exists due to inconsistent behavior in the get_icu_value_internal function of ext\\intl\\locale\\locale_methods.c. If a caller abides by contract and frees the return value of such a call, then the pointer passed via loc_name is freed again elsewhere, a double free occurs. By passing a specially crafted locale (figure 2), remote code execution may be possible.", "qas": [{"answers": [{"answer_start": 701, "text": "inconsistent behavior in the get_icu_value_internal function of ext\\intl\\locale\\locale_methods.c"}], "question": "What is root cause?", "id": "35358-0", "is_impossible": false}, {"answers": [{"answer_start": 314, "text": "achieve privilege escalation"}], "question": "What is impact?", "id": "35358-1", "is_impossible": false}, {"answers": [{"answer_start": 80, "text": "makes a call to get_icu_value_internal with potentially untrusted data"}], "question": "What is attack vector?", "id": "35358-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Original Author: A buffer overflow in variable 'buf' exists due to insufficient validation of variable 'name' in function", "qas": [{"answers": [{"answer_start": 67, "text": "insufficient validation of variable 'name' in function"}], "question": "What is root cause?", "id": "2303-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "2303-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "2303-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Francis Provencher from COSIG report the issue to PSIRT (ADOBE); 2016-02-09: Adobe release a patch (APSB16-03); 3) Technical details This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Photoshop CC & Bridge CC. User interaction is required to exploit this vulnerability in that the target must open a malicious file. By providing a malformed PNG file with an invalid uint32 Length, an attacker can cause an heap memory corruption. An attacker could leverage this to execute arbitrary code under the context of the application. Application: Adobe Photoshop CC & Bridge CC PNG file parsing memory corruption Platforms: Windows Versions: Bridge CC 6.1.1 and earlier versions Version: Photoshop CC 16.1.1 (2015.1.1) and earlier versions 1)", "qas": [{"answers": [], "question": "What is root cause?", "id": "39429-0", "is_impossible": true}, {"answers": [{"answer_start": 179, "text": "execute arbitrary code on vulnerable installations of Photoshop CC & Bridge CC"}], "question": "What is impact?", "id": "39429-1", "is_impossible": false}, {"answers": [{"answer_start": 368, "text": "providing a malformed PNG file with an invalid uint32 Length"}], "question": "What is attack vector?", "id": "39429-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Take a look here to see differences\" print \"-------------------------------------------------------------------------\" print \"\\nUNABLE", "qas": [{"answers": [], "question": "What is root cause?", "id": "3606-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "3606-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "3606-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability has been discovered by Laurent Gaffi&#65533;", "qas": [{"answers": [], "question": "What is root cause?", "id": "9969-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9969-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9969-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "/XP, Linux kernel 2.4 tree, and undisclosed Cisco systems are reported prone to this vulnerability; other products may also be affected. just a thousand kills win XP  printf(\"If source not specified, will send out from random ip's\\n\"); return inet_addr(buf); register long sum = 0; unsigned short oddbyte; register unsigned short answer; return answer; unsigned char *pkt; unsigned long j; for (i=0;i<NUM_PACKETS;i++) return 1; printf(\" Sending out series of small fragments\\r\\n\"); return 1; printf(\" Sending out tailing fragments\\r\\n\");  sending a large amount of the end fragments over and over. Multiple vendor implementations of the TCP stack are reported prone to a remote denial-of-service vulnerability. The issue is reported to present itself due to inefficiencies present when handling fragmented TCP packets. The discoverer of this issue has dubbed the attack style the \"New Dawn attack\"; it is a variation of a previously reported attack that was named the \"Rose Attack\". A remote attacker may exploit this vulnerability to deny service to an affected computer.", "qas": [{"answers": [{"answer_start": 758, "text": "inefficiencies present when handling fragmented TCP packets"}], "question": "What is root cause?", "id": "24634-0", "is_impossible": false}, {"answers": [{"answer_start": 678, "text": "denial-of-service"}], "question": "What is impact?", "id": "24634-1", "is_impossible": false}, {"answers": [{"answer_start": 539, "text": "sending a large amount of the end fragments over and over"}], "question": "What is attack vector?", "id": "24634-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: UnrealIRCd local configuration stack overflow  Version:", "qas": [{"answers": [], "question": "What is root cause?", "id": "18011-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18011-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18011-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "files, resulting in denial of service vulnerability and possibly loss of data. First chance exceptions are reported before any exception handling. This exception may be expected and handled", "qas": [{"answers": [], "question": "What is root cause?", "id": "39509-0", "is_impossible": true}, {"answers": [{"answer_start": 20, "text": "denial of service vulnerability and possibly loss of data"}], "question": "What is impact?", "id": "39509-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39509-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": ": This script will create a file called MASM_crash.txt  Step 3: Now open Masm32's QUICK EDITOR  Step 4: Go to Script  'Convert Text to Script'  Step 5: Open the MASM_crash.txt to convert  Step 6: That should crash the program .", "qas": [{"answers": [], "question": "What is root cause?", "id": "38259-0", "is_impossible": true}, {"answers": [{"answer_start": 208, "text": "crash the program"}], "question": "What is impact?", "id": "38259-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38259-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Attackers with physical access to a computer with the affected application installed can exploit these issues to bypass certain security restrictions and perform unauthorized actions. SafeGuard PrivateDisk 2.0 and 2.3 are vulnerable; other versions may also be affected This exploit 'tunnels' an ioctl request to the mounted volume device  for the volume file given in the argument, the request will forcibly  unmount the device", "qas": [{"answers": [], "question": "What is root cause?", "id": "35189-0", "is_impossible": true}, {"answers": [{"answer_start": 113, "text": "bypass certain security restrictions and perform unauthorized actions"}], "question": "What is impact?", "id": "35189-1", "is_impossible": false}, {"answers": [{"answer_start": 313, "text": "the mounted volume device  for the volume file given in the argument"}], "question": "What is attack vector?", "id": "35189-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "BlueDragon is prone to a remote denial-of-service vulnerability. This issue is due to the application's failure to efficiently handle malformed GET requests. An attacker can exploit this issue to cause the service to stop responding, effectively denying service to legitimate users. This issue affects version 6.2.1.286; other versions may also be vulnerable.", "qas": [{"answers": [{"answer_start": 104, "text": "failure to efficiently handle malformed GET requests"}], "question": "What is root cause?", "id": "28100-0", "is_impossible": false}, {"answers": [{"answer_start": 32, "text": "denial-of-service"}], "question": "What is impact?", "id": "28100-1", "is_impossible": false}, {"answers": [{"answer_start": 134, "text": "malformed GET requests"}], "question": "What is attack vector?", "id": "28100-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "by Luigi Auriemma void std_err(void); \" ret_addr is a memory address where you want to point the code flow.n\" instead freeze the server with CPU at 100%%n\" fputs(\"- Send connection request packetn\", stdout); fputs(\"- Send BOOM packet with return address overwritingn\", stdout); \"Error: please use a full offset of 4 hex numbers.n\" This text string is just the password you have used to join and it is encrypted using the other text string (the server challenge) sent by the server in its previous packet. My optimized algorithm is able to decode/encode the password stored in the packet sent by the client. It needs only 2 parameters:  pwd: the client's password stored in the packet  enc: the server challenge string LICENSE This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. \"Error: the return address cannot contain bytes greater than 0x3f (your: 0x%02x).n\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "422-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "422-1", "is_impossible": true}, {"answers": [{"answer_start": 118, "text": "freeze the server with CPU at 100%"}], "question": "What is attack vector?", "id": "422-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "$LPHOME/bin/dccscan is suid-root and can be executed by any user. In testing, this works even for printers to which the user is is not given any access in the LPPlus security configuration Permission denied  now, go to the printer and wait for the files to come out, or watch them  being queued as root, if you have access to dccstat", "qas": [{"answers": [{"answer_start": 0, "text": "$LPHOME/bin/dccscan is suid-root and can be executed by any user"}], "question": "What is root cause?", "id": "20193-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "20193-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "20193-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This file is part of the Metasploit Framework and may be subject to  redistribution and commercial restrictions. Please see the Metasploit  Framework web site for more information on licensing and terms of use. This module exploits a vulnerability in ActiveFax Server. The vulnerability is a stack based buffer overflow in the \"Import Users from File\" function, due to the insecure usage of strcpy while parsing the csv formatted file. end def exploit These badchars do not apply to the final payload if name =~/alpha/ end buffer << hunter buffer << egg file << buffer end end", "qas": [{"answers": [{"answer_start": 370, "text": "the insecure usage of strcpy while parsing the csv formatted file"}], "question": "What is root cause?", "id": "21139-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "21139-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21139-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "In our research which involved this program we found that this process store the credentials that you supplied for connecting, in clear text in the process memory.", "qas": [{"answers": [{"answer_start": 63, "text": "process store the credentials that you supplied for connecting, in clear text in the process memory"}], "question": "What is root cause?", "id": "40330-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "40330-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40330-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "File name is exp.m3u if we open exp.m3u whit RM Downloader Version 3.1.3.3.2010.06.26, we will see this \"run calc.exe\" 'KaHPeSeSe', # Found bug and wrote exploit end def exploit end end", "qas": [{"answers": [], "question": "What is root cause?", "id": "18611-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18611-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18611-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack-based buffer overflow in Word Builder 1.0. An attacker must send the file to the victim and the victim must open the file", "qas": [{"answers": [], "question": "What is root cause?", "id": "17489-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17489-1", "is_impossible": true}, {"answers": [{"answer_start": 89, "text": "send the file to the victim and the victim must open the file"}], "question": "What is attack vector?", "id": "17489-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Adobe Photoshop CS4 Extended suffers from a buffer overflow vulnerability when dealing with .ASL (styles) format file. The application failz to sanitize the user input resulting in a memory corruption, overwriting several memory registers which can aid the atacker to gain the power of executing arbitrary code or denial of service. This exception may be expected and handled.", "qas": [{"answers": [{"answer_start": 135, "text": "failz to sanitize the user input resulting in a memory corruption"}], "question": "What is root cause?", "id": "12753-0", "is_impossible": false}, {"answers": [{"answer_start": 268, "text": "gain the power of executing arbitrary code or denial of service"}], "question": "What is impact?", "id": "12753-1", "is_impossible": false}, {"answers": [{"answer_start": 202, "text": "overwriting several memory registers"}], "question": "What is attack vector?", "id": "12753-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "X server  allows unprivileged users with the ability to log in to the system via  physical console to escalate their privileges and run arbitrary code under  root privileges (CVE201814665) This exploit targets OpenBSD's cron in order to escalate privileges to  root on OpenBSD 6.3 and 6.4. Oct 27 14:50 usrlocalbinpwned  prepare the payload cp /bin", "qas": [{"answers": [], "question": "What is root cause?", "id": "45742-0", "is_impossible": true}, {"answers": [{"answer_start": 102, "text": "escalate their privileges and run arbitrary code under  root privileges"}], "question": "What is impact?", "id": "45742-1", "is_impossible": false}, {"answers": [{"answer_start": 56, "text": "log in to the system via  physical console"}], "question": "What is attack vector?", "id": "45742-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "ipsec, iis, exchange, etc) and (depending on the context) may require the machine to be rebooted. I've been able to construct an X.509 certificate that triggers the bug.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47414-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "47414-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "47414-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "RealServer 7.0 will crash if it receives a request for a specific file with an unspecified variable value.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19977-0", "is_impossible": true}, {"answers": [{"answer_start": 20, "text": "crash"}], "question": "What is impact?", "id": "19977-1", "is_impossible": false}, {"answers": [{"answer_start": 41, "text": "a request for a specific file with an unspecified variable value"}], "question": "What is attack vector?", "id": "19977-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: Internet Explorer 11  Crash PoC  Version: Tested on IE 11  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "37060-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "37060-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "37060-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability is related to setting socket options regarding the size of the send and receive buffers on a socketpair. By setting them to certain values, and performing a write the size of the value the options have been set to, FreeBSD can be made to panic.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19982-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "19982-1", "is_impossible": true}, {"answers": [{"answer_start": 162, "text": "performing a write the size of the value the options have been set to"}], "question": "What is attack vector?", "id": "19982-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "escape_size is controlled by the user.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40664-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40664-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40664-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "53 56 57 8B 45 F8 89 65-E8 50 8B 45 FC C7 45 FC\" print print \"Encreasing the number of characters will change the results of\" print \"this exploit. For example try with 1000000 of characters and see\" print \"I was unable to execute arbitrary code", "qas": [{"answers": [], "question": "What is root cause?", "id": "3229-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "3229-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "3229-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "; unsigned char *buffer; printf(\"Total Video Player local universal buffer overflow exploit\\n\"); printf(\"this exploit is for my best friends : Sup3r-crystal & mr.5rab & Hack back\\n\"); \"open it with tvp\\n\"); \"open it with tvp\\n\"); return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "7923-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7923-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7923-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Mozilla Firefox is prone to a remote memory-corruption vulnerability. Successful exploits will allow remote attackers to execute arbitrary code within the context of the affected browser or crash the browser, denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32961-0", "is_impossible": true}, {"answers": [{"answer_start": 121, "text": "execute arbitrary code within the context of the affected browser or crash the browser, denying service to legitimate users"}], "question": "What is impact?", "id": "32961-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32961-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "You must have ALTER permissions to exploit this bug!  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "4615-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4615-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4615-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This file is part of the Metasploit Framework and may be redistributed  according to the licenses defined in the Authors field below. In the  case of an unknown or missing license, this file defaults to the same  license as the core Framework (dual GPLv2 and Artistic). The vulnerability is caused due to a boundary error within the handling of URL parameters. sub new { sub Exploit  Jump back to the shellcode  Insert he payload at offset 300 to avoid corruption", "qas": [{"answers": [{"answer_start": 306, "text": "a boundary error within the handling of URL parameters"}], "question": "What is root cause?", "id": "1626-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "1626-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1626-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The error occurs when a swap file name for a file being opened is symbolically linked to a non-existent file. By conjecturing the name of a file to be edited by another user, it may be possible for a local user to create a malicious symbolic link to a non-existent file. This could cause the new target file to be created with the permissions of the user running vim.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20967-0", "is_impossible": true}, {"answers": [{"answer_start": 288, "text": "the new target file to be created with the permissions of the user running vim"}], "question": "What is impact?", "id": "20967-1", "is_impossible": false}, {"answers": [{"answer_start": 214, "text": "create a malicious symbolic link to a non-existent file"}], "question": "What is attack vector?", "id": "20967-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The SAS Deployment Manager is used for post-installation configuration tasks such as configuring some products, applying hot fixes, updating metadata, and uninstalling SAS Desc: The SASspk module (SASspk.dll) version 9.310.0.11307, has a function called 'RetrieveBinaryFile()' which has one parameter called 'bstrFileName' which takes arguments as strings as defined in the function itself as ISPKBinaryFile from the SASPackageRetrieve library. Stack-based buffer overflow was discovered in one of the fuzzing processes that could allow arbitrary code execution by an attacker when exploiting the non-sanitized 'bstrFileName' parameter.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25714-0", "is_impossible": true}, {"answers": [{"answer_start": 537, "text": "arbitrary code execution by an attacker when exploiting the non-sanitized 'bstrFileName' parameter"}], "question": "What is impact?", "id": "25714-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "25714-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "GnuTLS is prone to multiple remote vulnerabilities:  A remote codeexecution vulnerability  A denialofservice vulnerability   A signaturegeneration vulnerability  A signatureverification vulnerability An attacker can exploit these issues to potentially execute arbitrary code, trigger denial-of-service conditions, carry out attacks against data signed with weak signatures, and cause clients to accept expired or invalid certificates from servers.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32964-0", "is_impossible": true}, {"answers": [{"answer_start": 240, "text": "potentially execute arbitrary code, trigger denial-of-service conditions, carry out attacks against data signed with weak signatures, and cause clients to accept expired or invalid certificates from servers"}], "question": "What is impact?", "id": "32964-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32964-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overrun has been detected which has corrupted the program's internal state.", "qas": [{"answers": [], "question": "What is root cause?", "id": "3674-0", "is_impossible": true}, {"answers": [{"answer_start": 45, "text": "corrupted the program's internal state"}], "question": "What is impact?", "id": "3674-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "3674-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "SEH Overflow Exploit by n30m1nd   Exploit Title: Network Scanner Version 4.0.0.0 Copy the contents and, in the program, go to the \"TOOLS\" tab then click on \"Detect IP from hostname\" and paste the contents   MessageBoxA is called on an infinite loop since the exception handler is triggered all the time  Exploit code import struct  JUMP BACK to our shellcode!   As you can see in this exploit, the null byte is added by default at the end because strings are null terminated when read from an input box. This is why we write the payload minus 1 byte, payl[:-1], because we don't need to write the last null byte for the \"pop pop ret\" jump in the \"sehh\" variable.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40630-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40630-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40630-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "MailEnable is prone to a remote denial-of-service vulnerability. This issue allows remote attackers to crash the application, denying further service to legitimate users", "qas": [{"answers": [], "question": "What is root cause?", "id": "28103-0", "is_impossible": true}, {"answers": [{"answer_start": 32, "text": "denial-of-service"}], "question": "What is impact?", "id": "28103-1", "is_impossible": false}, {"answers": [{"answer_start": 103, "text": "crash the application, denying further service to legitimate users"}], "question": "What is attack vector?", "id": "28103-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The CMNC-200 IP Camera has a built-in web server that is vulnerable to denial of service attacks. Sending multiple requests in parallel to the web server may cause the camera to reboot.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15508-0", "is_impossible": true}, {"answers": [{"answer_start": 71, "text": "denial of service"}], "question": "What is impact?", "id": "15508-1", "is_impossible": false}, {"answers": [{"answer_start": 98, "text": "Sending multiple requests in parallel to the web server"}], "question": "What is attack vector?", "id": "15508-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability is located in the main executeable knowbase.exe. An attacker needs to manipulate the registry value and has to trick the victim to open and cancel the FileOpen dialogue. 43 43 43 43 43 43 43 43 CCCCCCCC Proof of Concept: The vulnerability can be exploited by local attackers. Successful exploitation requires user inter action by clicking the dialog file open or cancel. \"; The security risk of the local buffer overflow vulnerability is estimated as high(-). The information provided in this advisory is provided as it is without any warranty. Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability- Lab. All other rights, including the use of other media, are reserved by Vulnerability-Lab or its suppliers.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18681-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18681-1", "is_impossible": true}, {"answers": [{"answer_start": 88, "text": "manipulate the registry value and has to trick the victim to open and cancel the FileOpen dialogue"}], "question": "What is attack vector?", "id": "18681-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The imapd login process is susceptible to a buffer overflow attack which will crash the service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19377-0", "is_impossible": true}, {"answers": [{"answer_start": 78, "text": "crash"}], "question": "What is impact?", "id": "19377-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19377-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The registrar service that ships with version 10.20 (possibly others) of HP's HP-UX operating system contains a vulnerability that may allow a local user to read any file on the hosts filesystem. Default permissions on the /etc/opt/resmon/log directory allow users to overwrite the log file within it via \"mv\", which is normally created and written to by root when connections are made to the service. After mv'ing an existing log file to another location, a malicious user can create a symbolic link to an arbitrary file they do not have read access to with the filename registrar.log in etc/opt/resmon/log. If any connections are made to the registrar service after this, the mode of the file pointed to will change to 0644 (world readable) and log data will be appended to it. In addition to disclosing to the user restricted information, this may lead to an elevation of privileges for the local attacker.", "qas": [{"answers": [{"answer_start": 196, "text": "Default permissions on the /etc/opt/resmon/log directory"}], "question": "What is root cause?", "id": "20386-0", "is_impossible": false}, {"answers": [{"answer_start": 157, "text": "read any file on the hosts filesystem"}], "question": "What is impact?", "id": "20386-1", "is_impossible": false}, {"answers": [{"answer_start": 478, "text": "create a symbolic link to an arbitrary file they do not have read access to with the filename registrar.log in etc/opt/resmon/log"}], "question": "What is attack vector?", "id": "20386-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If VT control-characters are displayed in the xterm, they can be interpreted and used to cause a denial of service attack against the client (and even the host running the client). What makes it possible for remote users to exploit this vulnerability is a situation like this: An admin is tailing the http access log Attacker requests url with control characters in it This vulnerability also affects applications (such as other terminal emulators) derived from xterm code If an admin were to cat this log file, or happened to be doing  a \"tail f access_log\" at the time of attack they would find their  Embedding \"ESCAPE[4;65535;65535t\" (where escape is the escape character)  inside files, directories, etc will have the same effect as this code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19984-0", "is_impossible": true}, {"answers": [{"answer_start": 97, "text": "denial of service"}], "question": "What is impact?", "id": "19984-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19984-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "See attached for sample files that trigger the overflow conditions - these will not reliably crash the process, since the overflows are small and don't deterministically corrupt interesting data. Attached are crashers for the testcases which repeatedly cause the parsing of the files by the mediaserver process (via binder ipc), which will eventually cause the mediaserver to crash when the corrupted data is used. In mkvparser::Block::Block, there is a call to new[] By setting this count to 0, this will be passed by _Znaj/_Znwj as a call to malloc(1). The result of this new[] call is stored in the mkvparser::Block structure at offset 0x1c, and if we take the path resulting in a call to mkvparser::Block::BlockWithEbml (0xfe50), this function will write into this allocation at an offset of 8, overwriting the dword immediately following the allocation (0xfb54). Following a similar path through the code, but instead letting the count resolve to 1, we get an allocation of size 16.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41983-0", "is_impossible": true}, {"answers": [{"answer_start": 35, "text": "trigger the overflow conditions"}], "question": "What is impact?", "id": "41983-1", "is_impossible": false}, {"answers": [{"answer_start": 253, "text": "cause the parsing of the files by the mediaserver process"}], "question": "What is attack vector?", "id": "41983-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The IMail ldap service has an unchecked buffer, resulting in a classic buffer overflow vulnerability. While it does not crash the service, it drives CPU utilization up rendering the system essentially unusable.", "qas": [{"answers": [{"answer_start": 27, "text": "an unchecked buffer"}], "question": "What is root cause?", "id": "19378-0", "is_impossible": false}, {"answers": [{"answer_start": 142, "text": "drives CPU utilization up rendering the system essentially unusable"}], "question": "What is impact?", "id": "19378-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19378-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack-based buffer overflow in WordTrainer v3.0. An attacker must send the file to the victim and the victim must open the file.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17492-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17492-1", "is_impossible": true}, {"answers": [{"answer_start": 89, "text": "send the file to the victim"}], "question": "What is attack vector?", "id": "17492-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "[+] Exploit Title: Light Audio Player 1.0.14 Memory Corruption PoC [+] Tested on: WinXpWindows 7", "qas": [{"answers": [], "question": "What is root cause?", "id": "32481-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "32481-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "32481-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A local attacker in the news group could use this overflow to execute arbitary code with an effective userid of news, which could constitute an elevation in privileges, and the ability to alter news-owned binaries that could be run by root.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20777-0", "is_impossible": true}, {"answers": [{"answer_start": 130, "text": "constitute an elevation in privileges"}], "question": "What is impact?", "id": "20777-1", "is_impossible": false}, {"answers": [{"answer_start": 62, "text": "execute arbitary code with an effective userid of news"}], "question": "What is attack vector?", "id": "20777-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "When an NSKeyedUnarchiver decodes an object, it first allocates the object using allocWithZone, and then puts the object into a dictionary for temporary objects. For many classes, this is a placeholder object that will throw an \"uninitialized\" exception when accessed, but for some classes, this is the object that will eventually be returned by initWithCoder:. This means that when an initWithCoder: method decodes an object that has a reference to itself in it, the object might not be fully initialized. If the second dictionary decodes the same keyset as its keyset, it will get back a reference to the keyset that is in the process of being initialized. This means that if a key in the child keyset of this array is accessed in this dictionary, the value returned will be read from unallocated memory on the heap (this memory could also be written if a key in the child keyset is set, but it unusual for decoded dictionaries to be written to). To reproduce this issue in iMessage: 2) open sendMessage.py, and replace the sample receiver with the phone number or email of the target device 3) in injectMessage.js replace the marker \"PATH\" with the path of the obj file 4) in the local directory, run: This PoC does not crash very reliably in Springboard, though I think this issue is likely exploitable. To make reproducing this issue easier, I've attached a test program for Mac that reproduces the decoding issue. To reproduce the issue using this program: 1) Build the program: 2) Run the program with libgmalloc and the attached obj file: A log of this issue crashing in Springboard is attached. I recommend that this issue be resolved by removing custom encoding for the NSSharedDictionary class. Values are then stored and accessed by calculating a key's index based on its position in it keyset, and accessing that location in the value array. When a dictionary is initialized, it adds the length of its keyset as well as child keysets at each level, and initializes a value array of that length. This leads to the second dictionary calculating the length of its value array based on keyset not having a child keyset, even though it could have one.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47415-0", "is_impossible": true}, {"answers": [{"answer_start": 1567, "text": "crashing in Springboard"}], "question": "What is impact?", "id": "47415-1", "is_impossible": false}, {"answers": [{"answer_start": 1117, "text": "replace the marker \"PATH\" with the path of the obj file"}], "question": "What is attack vector?", "id": "47415-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "memory corruption Version : Microsoft Office professional Plus 2010 Bug : memory corruption during the handling of the pub files a context-dependent attacker can execute arbitrary code. Probably Exploitable - Data from Faulting Address controls subsequent Write Address starting at The data from the faulting address is later used as the target for a later write.", "qas": [{"answers": [{"answer_start": 0, "text": "memory corruption"}], "question": "What is root cause?", "id": "22310-0", "is_impossible": false}, {"answers": [{"answer_start": 162, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "22310-1", "is_impossible": false}, {"answers": [{"answer_start": 296, "text": "the faulting address"}], "question": "What is attack vector?", "id": "22310-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "By providing a malformed PNG file with an invialid uint32 CRC checksum, an attacker can cause an heap memory corruption.", "qas": [{"answers": [{"answer_start": 3, "text": "providing a malformed PNG file with an invialid uint32 CRC checksum"}], "question": "What is root cause?", "id": "39430-0", "is_impossible": false}, {"answers": [{"answer_start": 97, "text": "heap memory corruption"}], "question": "What is impact?", "id": "39430-1", "is_impossible": false}, {"answers": [{"answer_start": 13, "text": "a malformed PNG file with an invialid uint32 CRC checksum"}], "question": "What is attack vector?", "id": "39430-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "On Vista this exploit is way easier  the more challenging one was on XP, and here it is {Author has no responsibility over the damage you do with this!}", "qas": [{"answers": [], "question": "What is root cause?", "id": "7309-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7309-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7309-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It checks in with launchd to get a server port and then wraps that in a CFPort: It also asks to receive dead name notifications for other ports on that same server port: notify_port_in, // port that will die CFMachPortGetPort(pmServerMachPort), // notify port mig_server_callback is called off of the mach port run loop source to handle new messages on pmServerMachPort: \", deadRequest->not_port); return TRUE; This passes the message to the MIG-generated code for the powermanagement subsystem, if that fails (because the msgh_id doesn't match the subsystem for example) deadRequest is the message cast to a mach_dead_name_notification_t which is defined like this in mach/notify.h: This is a simple message, not a complex one. not_port is just a completely controlled integer which in this case will get passed directly to The powerd code expects that only the kernel will send a MACH_NOTIFY_DEAD_NAME message but actually anyone can send this and force the privileged process to drop a reference on a controlled mach port name :) Multiplexing these two things (notifications and a mach service) onto the same port isn't possible to do safely as the kernel doesn't prevent user->user spoofing of notification messages - You could use this bug to replace a mach port name in powerd (eg the bootstrap port, an IOService port etc) with a one for which the attacker holds the receieve right. ; return service_port; mach_port_name_t target_port = 0x1234; // the name of the port in the target namespace to destroy  send the fake notification message return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "40958-0", "is_impossible": true}, {"answers": [{"answer_start": 950, "text": "force the privileged process to drop a reference on a controlled mach port name"}], "question": "What is impact?", "id": "40958-1", "is_impossible": false}, {"answers": [{"answer_start": 875, "text": "send a MACH_NOTIFY_DEAD_NAME message"}], "question": "What is attack vector?", "id": "40958-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Code 4) Bug Heap overflow caused by the allocation of a certain amount of memory and the copying of arbitrary data during the decompression of the A quick trace of the sum operations performed with the entry size/offset values and then the function that performs the copying: 0106B59E |. 55 PUSH EBP ; copying function examples specific for the PoC msreader_2a.lit DES decryption of the data read by the file with output in the second allocated buffer The data copied in the heap buffer is exactly the one coming from the file and decrypted with DES, that's why the bytes visible during the copying can't be seen in the file. I have provided two proof-of-concepts where the first shows the exact location of the memcpy while the second will cause an exception during the \"call [ret+num]\" instruction (could take some seconds to be Modified bytes for msreader_2a.lit: 000005F6 84 40 ; from 0x230 to 0x40 000005F7 30 5F ; modified only to keep the size of the subsequent entry string Modified bytes for msreader_2b.lit: 3) The Code 4)", "qas": [{"answers": [], "question": "What is root cause?", "id": "17161-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17161-1", "is_impossible": true}, {"answers": [{"answer_start": 40, "text": "the allocation of a certain amount of memory"}], "question": "What is attack vector?", "id": "17161-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Dopewars is prone to a denial-of-service vulnerability that affects the server part of the application. An attacker can exploit this issue to crash the affected application, denying service to legitimate users. This issue affects Dopewars 1.5.12; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33269-0", "is_impossible": true}, {"answers": [{"answer_start": 23, "text": "denial-of-service"}], "question": "What is impact?", "id": "33269-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33269-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "designed to crash D-LINK DWL-2000AP+ printf(\"calloc out of memory\\n\");\\ char name[12]; char *inv,*s; return 0; return *((u_int*)ret); char *inv,*s; return 0; return 1; static char ret[16]; return ret; static char ret[18]; return ret; return 1; return 1; return 1; return 1;  get the list nota che ogni inf compare due volte in lista, una volta come AF_LINK e una AF_INET copy only the first time case IFT_ETHER: case This option has no return fd; void adv(){ printf( \"D-LINK DWL-2000AP+ with firmware version 2.11 is prone to two remote denial\\n\\ of service vulnerability because it fails to handle arp flooding. This exploit works in the 90%% of cases because sometimes the AP is able to ban\\n\\ the flooding client before the exploiting process is complete.\\n\\ D-LINK doesn't support this product anymore ARPHRD_ETHER: case", "qas": [{"answers": [{"answer_start": 583, "text": "fails to handle arp flooding"}], "question": "What is root cause?", "id": "2915-0", "is_impossible": false}, {"answers": [{"answer_start": 537, "text": "denial\\n\\ of service"}], "question": "What is impact?", "id": "2915-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "2915-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Usage The exploit consists of three parts: poc panics the kernel to demonstrate the present of a memory corruption, should work on all macOS versions. leak leaks the kernel slide, could be adapted to other versions but as-is works only on High Sierra. poc and leak need to be run as the user that is currently logged in via the GUI, and they log you out in order to perform the exploit.", "qas": [{"answers": [], "question": "What is root cause?", "id": "43415-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "43415-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "43415-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Code 1) For commercial use and distribution, the user must register the program. The Code", "qas": [{"answers": [], "question": "What is root cause?", "id": "19183-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "19183-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "19183-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "i'm injector and rooter in the site", "qas": [{"answers": [], "question": "What is root cause?", "id": "11628-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "11628-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "11628-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Platform: Microsoft Office 2010 on Windows 7 x86 Class: Time of check time of use leading to memory corruption The following crash was observed in Microsoft Office 2010 running under Windows 7 x86 with Application Verifier enabled. This crash is non-deterministic and will not reproduce in all instances but the crash demonstrated a high degree of reliability. File versions: First chance exceptions are reported before any exception handling. +0x461 must return a non-null value or else the same check in the crashing function is performed in the calling function. With a non-null return this same function is called again only this time the value at [eax+0x14h] is checked to be non-null. This time we follow the pointer at [[eax+0x14]+0x10] and check it to be non-null before passing it to the crashing function. Given the repeating calls to the same function and the non-determinism of the bug I suspect this is a time of check time of use bug on the object implementing these methods. In this crash the pointer being dereferenced in esi is being tested for a flag value. However, the pointer is referencing invalid memory generating an access violation.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41418-0", "is_impossible": true}, {"answers": [{"answer_start": 93, "text": "memory corruption"}], "question": "What is impact?", "id": "41418-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41418-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18225-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18225-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18225-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is not clear whether it is possible to execute arbitrary code on the host, however this trick can be successfully used by malware as an anti-vm BITS 32 SECTION .text", "qas": [{"answers": [], "question": "What is root cause?", "id": "9323-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9323-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9323-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Quick description of the exploit:   Providing the server with  \"LIST <long string here\" results in an arbitrary memory overwrite  vulnerability. I noticed even changing  the filename of the binary causes the offsets to change I picked an arbitrary  return address on the stack located  near where ESP was during  the exception. Under normal conditions EDX and ECX contain pointers located  in the data segment. However, after exploitation we control  we load EDX with (almost) any old return address on our stack,  and ECX with a pointer to our shellcode", "qas": [{"answers": [], "question": "What is root cause?", "id": "7875-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7875-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7875-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "UCanCode multiple vulnerabilities It's time to take a look to their software! False INSECURE METHODS: In these coontrols there are a lot of insecure methods which can be used to overwrite arbitrary files in user's pc. This product is so poor coded that remote code execution is possible using a lot of functions (and I'm lazy), so here it is the description of just one of it, \"AddDWordUserProperty\":", "qas": [{"answers": [], "question": "What is root cause?", "id": "40820-0", "is_impossible": true}, {"answers": [{"answer_start": 178, "text": "overwrite arbitrary files in user's pc"}], "question": "What is impact?", "id": "40820-1", "is_impossible": false}, {"answers": [{"answer_start": 131, "text": "a lot of insecure method"}], "question": "What is attack vector?", "id": "40820-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Executable search path is:  First chance exceptions are reported before any exception handling Unable to verify checksum for image00400000   ERROR: Module load completed but symbols could not be loaded for image00400000  First chance exceptions are reported before any exception handling First chance exceptions are reported before any exception handling", "qas": [{"answers": [], "question": "What is root cause?", "id": "21788-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21788-1", "is_impossible": true}, {"answers": [{"answer_start": 95, "text": "Unable to verify checksum for image00400000"}], "question": "What is attack vector?", "id": "21788-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "NetcPlus BrowseGate 2.80 will crash as the result of an invalid read error if a number of character strings consisting of 8 KB are inserted into GET request arguments through port 80. For example: Authorization: Basic(8 KB string of characters)<cr> Referer: http://referrer/(8 KB string of characters)<cr> will cause brwgate.exe to fail and a restart of the service is required in order to gain normal functionality.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20233-0", "is_impossible": true}, {"answers": [{"answer_start": 56, "text": "invalid read error"}], "question": "What is impact?", "id": "20233-1", "is_impossible": false}, {"answers": [{"answer_start": 78, "text": "a number of character strings consisting of 8 KB are inserted into GET request arguments through port 80"}], "question": "What is attack vector?", "id": "20233-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Paste the content into the field: 'From Addr' and 'To Addr'  4. Click 'Start' button and you will see a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46286-0", "is_impossible": true}, {"answers": [{"answer_start": 104, "text": "crash"}], "question": "What is impact?", "id": "46286-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46286-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "VMware Player and Workstation are prone to a remote denial-of-service vulnerability because the applications fail to perform adequate validation checks on user-supplied input. An attacker can exploit this issue to crash the 'vmware-authd' process, denying service to legitimate users. This issue was also covered in BID 39345 (VMware Hosted Products VMSA-2010-0007 Multiple Remote and Local Vulnerabilities); this BID is being retained to properly document the issue", "qas": [{"answers": [{"answer_start": 109, "text": "fail to perform adequate validation checks on user-supplied input"}], "question": "What is root cause?", "id": "33271-0", "is_impossible": false}, {"answers": [{"answer_start": 52, "text": "denial-of-service"}], "question": "What is impact?", "id": "33271-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33271-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is reported that Gattaca Server 2003 contains multiple denial of service vulnerabilities. These vulnerabilities allow a remote attacker to crash the application, denying service to legitimate users. Prior versions may also contain these vulnerabilities as well.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24282-0", "is_impossible": true}, {"answers": [{"answer_start": 58, "text": "denial of service"}], "question": "What is impact?", "id": "24282-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24282-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This will trigger the path to AfdRestartJoin  Allocate space for the input buffer  Copy input buffer to it  KERNEL INFO  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "18176-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18176-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18176-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Pointer to next SEH record  0x42424242 SE handler from socket import * 's=MPEG-1 or 2 Audio, streamed by the PoC Exploit o.", "qas": [{"answers": [], "question": "What is root cause?", "id": "4648-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4648-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4648-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "At (a) the uint32_t instr is declared uninitialized on the stack. At (b) the code tries to copyin the bytes of the exception-causing instruction from userspace note that the COPYIN macro doesn't itself check the return value of copyin, it just calls it. The bug is that we can force copyin to fail by unmapping the page containing the undefined instruction while it's being handled. (I tried to do this with XO memory but the kernel seems to be able to copyin that If the race windows align the thread executes the undefined instruction but when the sleh code tries to copyin the page is unmapped, the copying fails and the exception message we get has stale stack memory.", "qas": [{"answers": [{"answer_start": 170, "text": "the COPYIN macro doesn't itself check the return value of copyin"}], "question": "What is root cause?", "id": "45649-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "45649-1", "is_impossible": true}, {"answers": [{"answer_start": 301, "text": "unmapping the page containing the undefined instruction while it's being handled"}], "question": "What is attack vector?", "id": "45649-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "We did not find a working unicode address, otherwise this vulnerability would have been alot more fun! Do not use this code to do anything illegal ! Note : you are not allowed to edit/modify this code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "12081-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "12081-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "12081-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Server is vulnerable to a denial of Service when a malformed HTTP Request is done the webserver hangs  due to an stack overflow.", "qas": [{"answers": [{"answer_start": 110, "text": "an stack overflow"}], "question": "What is root cause?", "id": "22-0", "is_impossible": false}, {"answers": [{"answer_start": 26, "text": "denial of Service"}], "question": "What is impact?", "id": "22-1", "is_impossible": false}, {"answers": [{"answer_start": 49, "text": "a malformed HTTP Request"}], "question": "What is attack vector?", "id": "22-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A denial of service vulnerability exists that could allow an  attacker to send a specially crafted Internet Control Message  Protocol (ICMP) message to an affected system. An attacker who  successfully exploited this vulnerability could cause the affected  system to reset existing TCP connections, reduce the throughput  in existing TCP connections, or consume large amounts of CPU and  client < router < router < server  CLIENT < SERVER   (slow down the transmission rate for traffic)  (slow down the transmission rate for traffic)  This is provided as proofofconcept code only for educational  purposes and testing by authorized individuals with permission  to do so */ unsigned long dwCount; /* Number of times to send */ unsigned long Attack; void printf(\" -fp:int Target open TCP port number\\n\"); printf(\" (default: 0 = range of ports 0-65535)\\n\"); printf(\" (slow down the transmission rate)\\n\"); void case 'f': case 'p': case 'i': case 't': case 'p': case 'i': case 'n': case 'a':  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "948-0", "is_impossible": true}, {"answers": [{"answer_start": 74, "text": "send a specially crafted Internet Control Message  Protocol (ICMP) message to an affected system"}], "question": "What is impact?", "id": "948-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "948-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "www.kali.org  Program description: Hnb is an ncurses program to organize many kinds of data in one place, for  example addresses, todo lists, ideas, book reviews or to store snippets of   buffer overflow detected : usrbinhnb terminated print \"# HNB Organizer - Local Buffer Overflow by Juan Sacco\" print \"", "qas": [{"answers": [], "question": "What is root cause?", "id": "40025-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40025-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40025-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "the following is affected causing a denial of service Due to an overly long GET request to the ftp server", "qas": [{"answers": [{"answer_start": 61, "text": "an overly long GET request to the ftp server"}], "question": "What is root cause?", "id": "2334-0", "is_impossible": false}, {"answers": [{"answer_start": 36, "text": "denial of service"}], "question": "What is impact?", "id": "2334-1", "is_impossible": false}, {"answers": [{"answer_start": 61, "text": "an overly long GET request"}], "question": "What is attack vector?", "id": "2334-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This is provided as proofofconcept code only for educational  purposes and testing by authorized individuals with permission to unsigned char jobfile[] =  job header  unsigned char portbindsc[] =", "qas": [{"answers": [], "question": "What is root cause?", "id": "368-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "368-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "368-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It supports a variety of administrative tasks, including full remote access to the user's desktop. A vulnerability exists in some versions of Timbuktu. If a large number of connections are created to the Timbuktu server, the server will no longer accept new connections.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21234-0", "is_impossible": true}, {"answers": [{"answer_start": 237, "text": "no longer accept new connections"}], "question": "What is impact?", "id": "21234-1", "is_impossible": false}, {"answers": [{"answer_start": 155, "text": "a large number of connections are created to the Timbuktu server"}], "question": "What is attack vector?", "id": "21234-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer is prone to a denial-of-service condition when processing the 'OutlookExpress. A successful attack may cause the browser to fail due to a null-pointer dereference.", "qas": [{"answers": [{"answer_start": 164, "text": "a null-pointer dereference"}], "question": "What is root cause?", "id": "28144-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "28144-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28144-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The IMail IMonitor service can be crashed by exploiting a buffer overflow vulnerability.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19379-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "19379-1", "is_impossible": true}, {"answers": [{"answer_start": 45, "text": "exploiting a buffer overflow vulnerability"}], "question": "What is attack vector?", "id": "19379-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability is caused due to the IOCTL handler of the \"tmactmon.sys\" driver improperly processing user space parameters. This exploit execute arbitrary code in kernel space via a specially crafted IOCTL.", "qas": [{"answers": [{"answer_start": 82, "text": "improperly processing user space parameters"}], "question": "What is root cause?", "id": "8322-0", "is_impossible": false}, {"answers": [{"answer_start": 140, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "8322-1", "is_impossible": false}, {"answers": [{"answer_start": 183, "text": "a specially crafted IOCTL"}], "question": "What is attack vector?", "id": "8322-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Attached are three files which trigger the crash. Shadow bytes around the buggy address: 0x0c048000ce40: fa", "qas": [{"answers": [], "question": "What is root cause?", "id": "46096-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "the crash"}], "question": "What is impact?", "id": "46096-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46096-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "NULL pointer derefernce Xpdf allows local and remote attackers to overflow buffer on heap via integer overflow vulnerability. Xpdf is prone to NULL pointer dereference attack. don't know about it and try to convert colors and write in this memory by call: and the end of working loop is via this compare: So we overflow memory. This document and all the information it contains is provided \"as is\", without any warranty. The author is not responsible for the misuse of the information provided in this advisory. Permission is hereby granted to redistribute this advisory, providing that no changes are made and that the copyright notices and disclaimers remain intact.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9985-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9985-1", "is_impossible": true}, {"answers": [{"answer_start": 94, "text": "integer overflow vulnerability"}], "question": "What is attack vector?", "id": "9985-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " make these changes in php.ini if you have troubles   to launch this script:   usage: customize for your own pleasure, launch this script from Apache,   SunTzu: \"There is a proper season for making attacks with fire, and   special days for starting a conflagration. { echo 'No response from proxy...'; if ($proxy=='')", "qas": [{"answers": [], "question": "What is root cause?", "id": "1258-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1258-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1258-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "else char *tmp_buf;  Compute the length of the block we need", "qas": [{"answers": [], "question": "What is root cause?", "id": "38262-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "38262-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "38262-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft IIS versions 5.0 and 5.1 remote denial of service exploit that makes use of the vulnerability recently published by SPI dynamics Published on 31.05.2003 void graphitte() char lala[100]; return 0; return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "35-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "denial of service"}], "question": "What is impact?", "id": "35-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "35-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Tested localhost & many forums profile.php << By registering as many users as you can.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1064-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1064-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1064-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Successful exploitation, depending on the data entered, will allow the execution of arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20239-0", "is_impossible": true}, {"answers": [{"answer_start": 67, "text": "the execution of arbitrary code"}], "question": "What is impact?", "id": "20239-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20239-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a vulnerability in the DoABC tag handling within versions 9.x and 10.0 of Adobe Flash Player. jjd end def exploit  Create Arbitrary code execution is achieved by embedding a specially crafted Flash movie into a PDF document.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16687-0", "is_impossible": true}, {"answers": [{"answer_start": 143, "text": "Arbitrary code execution"}], "question": "What is impact?", "id": "16687-1", "is_impossible": false}, {"answers": [{"answer_start": 183, "text": "embedding a specially crafted Flash movie into a PDF document"}], "question": "What is attack vector?", "id": "16687-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This issue has been fixed in Firefox 3.5.4 and fix but fix for SREASONRES:20090625, used by openbsd was not good. US-CERT declared that will inform all vendors about this issue, however, they did not do it. Secunia has informed that this vulnerability was only detected in Mozilla Firefox, but nobody was aware that the problem affects other products like ( KDE, Chrome ) and it is based on \"CVE-2009-0689\". We do not see any other way to fix this issue in all products.", "qas": [{"answers": [], "question": "What is root cause?", "id": "10186-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "10186-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "10186-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Zahir Enterprise Plus 6 Stack Buffer Overflow\", This module exploits a stack buffer overflow in Zahir Enterprise Plus version 6 build 10b and below. The vulnerability is triggered when opening a CSV file containing CR/LF and overly long string characters via Import from other File.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45560-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45560-1", "is_impossible": true}, {"answers": [{"answer_start": 185, "text": "opening a CSV file containing CR/LF and overly long string characters via Import from other File"}], "question": "What is attack vector?", "id": "45560-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Inspection of mpengine.dll revealed that the code responsible for processing RAR archives appears to be a forked and modified version of the original unrar code; given that it still processes the VMSF_UPCASE filter (which was removed in unrar 5.0), it seems that the code is derived from a version of unrar older or equal than 4.2.4. It appears that this blanket conversion from signed to unsigned ended up introducing a new vulnerability, though: case VMSF_RGB: byte *SrcData=Mem,*DestData= SrcData+DataSize; The code clearly ensures that PosR is positive from here on. This causes a vulnerability later in the same function DestData[I+1]; An attacker that can set PosR to be -2, and DataSize to 1, will bypass the (PosR + 2 < DataSize) check. v50 above will then point to one byte *before* the allocated buffer (v50 respective DestData points into a buffer at index DataSize -- so adding -2 to index 1 This check is no longer present in the binary version of the same code in mpengine, most likely since most signed comparisons in this function have been turned unsigned.", "qas": [{"answers": [{"answer_start": 355, "text": "blanket conversion from signed to unsigned"}], "question": "What is root cause?", "id": "44402-0", "is_impossible": false}, {"answers": [{"answer_start": 705, "text": "bypass the (PosR + 2 < DataSize) check"}], "question": "What is impact?", "id": "44402-1", "is_impossible": false}, {"answers": [{"answer_start": 662, "text": "set PosR to be -2, and DataSize to 1"}], "question": "What is attack vector?", "id": "44402-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is possible for a malicous local user to overwrite arbitrary files on the filesystem by exploiting a vulnerability in the UCX POP server.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21856-0", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "overwrite arbitrary files on the filesystem"}], "question": "What is impact?", "id": "21856-1", "is_impossible": false}, {"answers": [{"answer_start": 91, "text": "exploiting a vulnerability in the UCX POP server"}], "question": "What is attack vector?", "id": "21856-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "IBM DB2 is reported prone to a denial of service vulnerability when DTS to string conversion is carried out. The vulnerability is exposed in the 'to_char' and 'to_date' conversion functions.", "qas": [{"answers": [{"answer_start": 68, "text": "DTS to string conversion is carried out"}], "question": "What is root cause?", "id": "24677-0", "is_impossible": false}, {"answers": [{"answer_start": 31, "text": "denial of service"}], "question": "What is impact?", "id": "24677-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24677-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer is prone to a denial-of-service condition when processing the 'ADODB.Recordset Filter Property' COM object. A successful attack may cause the browser to fail due to a null-pointer dereference", "qas": [{"answers": [{"answer_start": 193, "text": "a null-pointer dereference"}], "question": "What is root cause?", "id": "28145-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "28145-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28145-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Due to this function, an attacker may be able to put malicious code in the %%PageOrder: portion of a file. When this malicious file is opened with gv, the code would be executed in the security context of the user opening the file. define GARBAGE 100  Garbage for the end  of the evil_buffer  Bind shell port number 65535 char bindcode[]= /* 72 bytes */  and Align for the buffer long retaddr; // return address char buf[BUFSIZ]; // The evil buffer char *p; // Pointer to evil buffer  Get align and return address from parameters void ( ();  Point to buffer  Memset the buffer with NOP's  Write return address in buffer Jun 15 15:30ish\\n\");  In page order, the stack overflow occur.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21871-0", "is_impossible": true}, {"answers": [{"answer_start": 49, "text": "put malicious code in the %%PageOrder: portion of a file"}], "question": "What is impact?", "id": "21871-1", "is_impossible": false}, {"answers": [{"answer_start": 49, "text": "put malicious code in the %%PageOrder: portion of a file"}], "question": "What is attack vector?", "id": "21871-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This submission needs tweaking but a crash does occur print len(buffer) payload = buffer", "qas": [{"answers": [], "question": "What is root cause?", "id": "25131-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "crash"}], "question": "What is impact?", "id": "25131-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "25131-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "After further research it turned out to be a vulnerability  previously reported[1] and assigned with CVE20062444. For more details,  the version change log", "qas": [{"answers": [], "question": "What is root cause?", "id": "1880-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1880-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1880-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If you open the kr.aiff in Window Media Player(WMP), WMP will  crash, and this crash will ocurr in other media players as well void usage(void); FILE *fp; return 0; return 0; void usage(void)", "qas": [{"answers": [], "question": "What is root cause?", "id": "4682-0", "is_impossible": true}, {"answers": [{"answer_start": 63, "text": "crash"}], "question": "What is impact?", "id": "4682-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "4682-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The opcode 0x02 of the protocol is used for the handling of some strings received by the client and the calling of one of the functions depending by the type of data. They use all the same function starting from offset 00446795 for the parsing of the data and it's vulnerable to a stack overflow while copying the input data in a temporary buffer of about 60 bytes: 3)", "qas": [{"answers": [], "question": "What is root cause?", "id": "15992-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15992-1", "is_impossible": true}, {"answers": [{"answer_start": 302, "text": "copying the input data in a temporary buffer of about 60 bytes"}], "question": "What is attack vector?", "id": "15992-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "IISPop is vulnerable to a denial of service caused by a buffer overflow. By sending an unusually large amount of data to IISPop on TCP port 110, the application will terminate with an access violation. Arbitrary code execution may be possible", "qas": [{"answers": [], "question": "What is root cause?", "id": "22019-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "denial of service"}], "question": "What is impact?", "id": "22019-1", "is_impossible": false}, {"answers": [{"answer_start": 76, "text": "sending an unusually large amount of data to IISPop on TCP port 110"}], "question": "What is attack vector?", "id": "22019-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "During normal execution, Aserver executes \"ps\" via the system() libcall, relying on the PATH environment variable to do so. As a result, a user can modify their PATH environment variable so that it includes an arbitrary program called 'ps' before executing Aserver.  Aserver is a server program that ships with HPUX versions 10.x and above that is used to interface client applications with the audio hardware.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20396-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "20396-1", "is_impossible": true}, {"answers": [{"answer_start": 148, "text": "modify their PATH environment variable"}], "question": "What is attack vector?", "id": "20396-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "FTP This could potentially allow an authorized but non-privileged local user to execute arbitrary code with elevated privileges on the system. FileZilla is a free software, cross-platform FTP application, consisting of FileZilla Client and FileZilla Server.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39803-0", "is_impossible": true}, {"answers": [{"answer_start": 80, "text": "execute arbitrary code with elevated privileges on the system"}], "question": "What is impact?", "id": "39803-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39803-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This program is released under the terms of the GNU General Public License  (GPL), which is distributed with this software in the file \"COPYING\" The GPL specifies the terms under which users may copy and use this software", "qas": [{"answers": [], "question": "What is root cause?", "id": "10825-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "10825-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "10825-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The JLS Plugin (xjpegls.dll) library fails to properly sanitize user-supplied input resulting in a heap-based buffer overflow. With a specially crafted JLS compressed image file, a context-dependent attacker could potentially execute arbitrary code. If a user could be enticed to open a malicious JLS file, the attack could result in remote code execution. No solution at the time of writing. full-disclosure () lists grok org uk Future updates of this advisory, if any, will be reflected on this page, but may or may not be actively announced on mailing lists or newsgroups. In addition to posting on the website, a text version of this notice has been posted to the following e-mail and Usenet news recipients.", "qas": [{"answers": [{"answer_start": 37, "text": "fails to properly sanitize user-supplied input"}], "question": "What is root cause?", "id": "21741-0", "is_impossible": false}, {"answers": [{"answer_start": 99, "text": "heap-based buffer overflow"}], "question": "What is impact?", "id": "21741-1", "is_impossible": false}, {"answers": [{"answer_start": 132, "text": "a specially crafted JLS compressed image file"}], "question": "What is attack vector?", "id": "21741-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The mod_http2 module in the Apache HTTP Server 2.4.17 through 2.4.23, when the Protocols configuration includes h2 or h2c, does not restrict request-header length, which allows remote attackers to cause a denial of service (memory consumption) via crafted CONTINUATION frames in an HTTP/2 request.(https://access.redhat.com/security/cve/cve-2016-8740)", "qas": [{"answers": [{"answer_start": 123, "text": "does not restrict request-header length"}], "question": "What is root cause?", "id": "40909-0", "is_impossible": false}, {"answers": [{"answer_start": 205, "text": "denial of service"}], "question": "What is impact?", "id": "40909-1", "is_impossible": false}, {"answers": [{"answer_start": 248, "text": "crafted CONTINUATION frames in an HTTP/2 request"}], "question": "What is attack vector?", "id": "40909-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This exploit actually turned out very reliable :)   You can make a cleaner version of this exploit if you smash sudo_debug function pointer or a libc function pointer An error occurred while forking sudo\\n\"); return -1; return returnval; FILE *fp; char path[20]; char sudo_ver_cmd[50]; return returnval; printf(\"[-] Failed to write backdoor on the target, check your permissions\\n\" ); printf(\"[-] Failed to compile the backdoor, check the gcc path\\n\" ); printf(\"[-] Failed to write backdoor on the target, check your permissions\\n\" ); return returnval; void *", "qas": [{"answers": [], "question": "What is root cause?", "id": "25134-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "25134-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "25134-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "d ]  identifies chunk data type  [ 4 byte crc ]  covers the id and data  identifies a file as a png   the iDAT chunk. a chunk looks like:  [ 4 byte len ]  just the length of data  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "600-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "600-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "600-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Palm WebOS is prone to a remote denial-of-service vulnerability because it fails to properly validate user-supplied data. Attackers can leverage this issue to cause an affected device to reboot. Given the nature of this issue, attackers may also be able to run arbitrary code, but this has not been confirmed. Palm WebOS 1.1 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 75, "text": "fails to properly validate user-supplied data"}], "question": "What is root cause?", "id": "33280-0", "is_impossible": false}, {"answers": [{"answer_start": 32, "text": "denial-of-service"}], "question": "What is impact?", "id": "33280-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33280-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The information contained within this advisory is supplied \"as-is\" with no warranties or guarantees of fitness of use or otherwise. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40863-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40863-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40863-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A nice exploit for this software that was just recently  patched after a few other discoveries in it Author has no responsibility over the damage done use strict; use warnings; A x 10000 A x 10000 if you want the exploit to work if the CCD or IMG file are executed when passed as parameters to UltraISO.", "qas": [{"answers": [], "question": "What is root cause?", "id": "8343-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8343-1", "is_impossible": true}, {"answers": [{"answer_start": 232, "text": "the CCD or IMG file"}], "question": "What is attack vector?", "id": "8343-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Script provided 'as is', without any warranty", "qas": [{"answers": [], "question": "What is root cause?", "id": "9483-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9483-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9483-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Tested running the server under Windows XP SP2   The server doesn't do a sanitycheck on 'ContentLength' value from POST Header, allowing the attacker to control  the allocation size and the position in the 'pucPayload' char pointer to write", "qas": [{"answers": [], "question": "What is root cause?", "id": "4046-0", "is_impossible": true}, {"answers": [{"answer_start": 153, "text": "control  the allocation size and the position in the 'pucPayload' char pointer to write"}], "question": "What is impact?", "id": "4046-1", "is_impossible": false}, {"answers": [{"answer_start": 88, "text": "'ContentLength' value"}], "question": "What is attack vector?", "id": "4046-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If you want authentication with the server via HTTP's lame Basic  auth, put the proper string to encode BASE64 content, and use  '%s' to represent the credentials being encoded. For instance:  would result in:  If your decoder requires you to use STDIN to pass the password  (no pun intended), set $BASE64_USE_STDIN to nonzero and do not  use '%s' on the commandline If your encoder requires the password to be written to STDIN,  set this to a nonzero value. use IO::Socket; print STDOUT \"Enter the hostname/IP address of the server: \"; print STDOUT \"Enter the port of the server \\[80\\]: \"; print STDOUT \"Use authentication credentials for the session \\[Y/N\\]? \"What resource should be probed: \"; print STDOUT \"Exploit a DAV repository for this attack? If everything works, mod_dav will attempt to format a  message with apr_psprintf() to indicate that our  namespace is invalid, leading to a crash The perl chomp() function is broken on my distro,  so I hacked a fix to work around it. This note applies  another hackish fix, which seems to be the entire style  of this code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38-0", "is_impossible": true}, {"answers": [{"answer_start": 893, "text": "crash"}], "question": "What is impact?", "id": "38-1", "is_impossible": false}, {"answers": [{"answer_start": 858, "text": "namespace"}], "question": "What is attack vector?", "id": "38-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Please see the Metasploit  web site for more information on licensing and terms of use. Msf::Exploit::Remote::Seh This module exploits a stack-based buffer overflow vulnerability in version 1.11 of Corel PDF Fusion. The vulnerability exists while handling a XPS file with long entry names. In order for the payload to be executed, an attacker must convince the target user to open a specially crafted XPS file with Corel PDF Fusion. By doing so, the attacker can execute arbitrary code as the target user.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26805-0", "is_impossible": true}, {"answers": [{"answer_start": 463, "text": "execute arbitrary code as the target user"}], "question": "What is impact?", "id": "26805-1", "is_impossible": false}, {"answers": [{"answer_start": 348, "text": "convince the target user to open a specially crafted XPS file with Corel PDF Fusion"}], "question": "What is attack vector?", "id": "26805-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Abstract Advisory Information: The vulnerability laboratory core research team discovered a stack buffer overflow vulnerability in the official Kentico v9.0, v10.0 & v11.0 content management system software. A local stack buffer overflow vulnerability has been discovered in the official Kentico v9.0, v10.0 & v11.0 content management system software. The buffer overflow vulnerability allows local attackers to compromise the local system process by an overwrite of the active registers. The local buffer overflow vulnerability is located in the `Load XML Configuration` module for file imports. The non-exisiting input validation and the unrestricted context size allows local attackers to trigger a stack buffer overflow vulnerability. The security risk of the local buffer overflow vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 6.0. Exploitation of the stack buffer overflow vulnerability requires a low privilege or restricted system user account without user interaction. Successful exploitation of the vulnerability results in overwrite of the active registers to compromise of the computer system or process. Vulnerable Module(s): [+] Load XML Configuration Proof of Concept (PoC): The local buffer overflow vulnerability can be exploited by local attackers with low privileged or restricted system user account without user interaction. For security demonstration or to reproduce the software vulnerability follow the provided information and steps below to continue the process. Manual steps to reproduce the vulnerability .. The vulnerable values loaded and the process will permanently crash with different exceptions 9. The installation path and the iis website values are not exploitable, because of the active content restrictions of the process that drops an invalid argument exception to prevent. The vulnerability can be patched by a secure file size and input character restriction like on the iis scheme website input. The security risk of the local stack buffer overflow vulnerability in the kentico cms software is estimated as high. Vulnerability-Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability Labs or its suppliers have been advised of the possibility of such damages. The xml file impact input data of the configuration for the software. That results in compromise of the software process with system privileges. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data. Accept the program conditions and click to custom installation 3.", "qas": [{"answers": [{"answer_start": 601, "text": "non-exisiting input validation and the unrestricted context size"}], "question": "What is root cause?", "id": "43547-0", "is_impossible": false}, {"answers": [{"answer_start": 412, "text": "compromise the local system process"}], "question": "What is impact?", "id": "43547-1", "is_impossible": false}, {"answers": [{"answer_start": 451, "text": "an overwrite of the active registers"}], "question": "What is attack vector?", "id": "43547-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "this function table function to process, which under the deal 2000/xp/2003 0x4c message, there will be a function called SfnLOGONNOTIFY, this function again when the wParam == When the data directly from the lParam inside out, despite the use of the function of the SEH, but as long as the kernel passes the wrong address, will still lead to return 0; return 0; Common crash stack: kd> Vista no such problem Thanks to my colleagues LYL to help me discovered this vulnerability", "qas": [{"answers": [{"answer_start": 286, "text": "the kernel passes the wrong address"}], "question": "What is root cause?", "id": "12336-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "12336-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "12336-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "# Due to unicode the filename is NOT usable.", "qas": [{"answers": [{"answer_start": 9, "text": "unicode the filename is NOT usable"}], "question": "What is root cause?", "id": "1355-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "1355-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1355-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Windows Explorer is prone to a denial-of-service vulnerability. A remote attacker may exploit this vulnerability by presenting a malicious file to a victim user. Users do not have to open the file -- simply browsing a folder containing the malicious file is sufficient to trigger this issue. A successful exploit will crash the vulnerable application, effectively denying service. This issue may be related to BID 19365 (Microsoft Windows GDI32.DLL WMF Remote Denial of Service Vulnerability) or BID 21992 (Microsoft Windows Explorer WMF File Denial of Service Vulnerability).", "qas": [{"answers": [], "question": "What is root cause?", "id": "29659-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "denial-of-service"}], "question": "What is impact?", "id": "29659-1", "is_impossible": false}, {"answers": [{"answer_start": 126, "text": "presenting a malicious file to a victim user"}], "question": "What is attack vector?", "id": "29659-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Allocate a buffer of specified length, starting with s, containing c, terminated with t logmessage(LOG_DEBUG, \"attempting to parse libc fatal error message...\");  Verify this is a message we understand. Record the last seen anonymous map, in case the kernel didn't tag the heap If the kernel did tag the heap, then everything is easy If it didn't tag the heap, then we need the anonymous chunk before the stack. The value is just large enough to usuaully crash the heap into the stack without going OOM Looks like this will fit, compensate the pointers for alignment. logmessage(LOG_DEBUG, \"allocating space for argument structure...\");  This number of \"u\" arguments is used to spray the heap", "qas": [{"answers": [], "question": "What is root cause?", "id": "34421-0", "is_impossible": true}, {"answers": [{"answer_start": 455, "text": "crash the heap into the stack"}], "question": "What is impact?", "id": "34421-1", "is_impossible": false}, {"answers": [{"answer_start": 416, "text": "value is just large enough"}], "question": "What is attack vector?", "id": "34421-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The exploit will not give UAC warning the user account is administrator. this exploit", "qas": [{"answers": [], "question": "What is root cause?", "id": "35216-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "35216-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "35216-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This allows to remotely crash the application, thus causing a Denial of Service this exploit locally or from your remote attacking machine import socket port = 69 print \"[-] Error connecting\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "39516-0", "is_impossible": true}, {"answers": [{"answer_start": 24, "text": "crash the application, thus causing a Denial of Service"}], "question": "What is impact?", "id": "39516-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39516-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "AYDrvNT.sys create a device called \"AYDrvNT_ALYAC\" , and handles the device io control code = 0x223e2c , which can overwrite the system service descriptor table entry with arbitrary address.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15763-0", "is_impossible": true}, {"answers": [{"answer_start": 115, "text": "overwrite the system service descriptor table entry with arbitrary address"}], "question": "What is impact?", "id": "15763-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15763-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Gaim is prone to multiple vulnerabilities affecting the AIM and ICQ protocols. These issues may allow remote attackers to trigger a buffer overflow or a denial-of-service condition.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26139-0", "is_impossible": true}, {"answers": [{"answer_start": 122, "text": "trigger a buffer overflow or a denial-of-service condition"}], "question": "What is impact?", "id": "26139-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26139-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that multiple PC2Phone products are prone to a remote denial of service condition. The problem is said to occur when processing excessive data passed to the programs via a UDP packet and could result in the product crashing. The precise technical details regarding this issue are currently unknown, however as further information is made available this bid will be updated accordingly.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23086-0", "is_impossible": true}, {"answers": [{"answer_start": 75, "text": "denial of service"}], "question": "What is impact?", "id": "23086-1", "is_impossible": false}, {"answers": [{"answer_start": 191, "text": "a UDP packet"}], "question": "What is attack vector?", "id": "23086-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "ActiveX Controls mscomct2.ocx Animation Object Buffer Overflow (CVE-2008-4255) PoC\\n\"; print \"This file should be served via an UNC path\\n\"; print \"[->] Building evil.avi\\n\"; print \"[->] Building evil.html\\n\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "7431-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7431-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7431-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When Orb is first installed it registers several Direct Show filters with the system. When registered these filters are then called whenever a file which has a dependency on such a required filter is accessed. This vulnerability can be triggered remotely be embedding the crafted mp3 file into HTML. Also included is a Rebuild file for IDA Pro examining the crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "11632-0", "is_impossible": true}, {"answers": [{"answer_start": 354, "text": "the crash"}], "question": "What is impact?", "id": "11632-1", "is_impossible": false}, {"answers": [{"answer_start": 258, "text": "embedding the crafted mp3 file into HTML"}], "question": "What is attack vector?", "id": "11632-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " First chance exceptions are reported before any exception handling Module load completed but symbols could not be loaded for mpchc.exe  First chance exceptions are reported before any exception handling", "qas": [{"answers": [], "question": "What is root cause?", "id": "32513-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "32513-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "32513-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability exist due to the improper permissions, with the 'F' flag (Full) for 'Users' group, making the entire directory 'Minecraft' and its files and sub-dirs world-writable. This would allow an attacker the ability to inject code or replace the MinecraftLauncher executable and have it run in the context of the system.", "qas": [{"answers": [{"answer_start": 31, "text": "the improper permissions"}], "question": "What is root cause?", "id": "40494-0", "is_impossible": false}, {"answers": [{"answer_start": 228, "text": "inject code or replace the MinecraftLauncher executable and have it run in the context of the system"}], "question": "What is impact?", "id": "40494-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40494-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\\x74\\xC8\\x90\\x90' # to the end and its a new Beginning ;) print \"[+] Listening on [FTP] 21\" raw_input(\"[+] Done, press enter to quit\")", "qas": [{"answers": [], "question": "What is root cause?", "id": "8621-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8621-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8621-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Linux Kernel is prone to a vulnerability that allows attackers to bypass a security restriction. This issue is due to a failure in the kernel to properly sanitize user-supplied data. A local attacker who is bounded by the chroot can exploit this issue to bypass the chroot restriction and gain unauthorized access to the filesystem.", "qas": [{"answers": [{"answer_start": 122, "text": "a failure in the kernel to properly sanitize user-supplied data"}], "question": "What is root cause?", "id": "27766-0", "is_impossible": false}, {"answers": [{"answer_start": 70, "text": "bypass a security restriction"}], "question": "What is impact?", "id": "27766-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "27766-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Office is prone to a denial-of-service condition when the malformed WMF file is viewed in an Office application. Exploiting this issue allows remote attackers to crash applications, denying service to legitimate users. Microsoft Office 2003 is vulnerable to this issue; other versions may also be affected. Note: IrfanView version 3.99 is also vulnerable to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "29660-0", "is_impossible": true}, {"answers": [{"answer_start": 31, "text": "denial-of-service"}], "question": "What is impact?", "id": "29660-1", "is_impossible": false}, {"answers": [{"answer_start": 64, "text": "the malformed WMF file"}], "question": "What is attack vector?", "id": "29660-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The server \"commonly\" tolerates one shoot, but even when you only send one packet it will crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "6101-0", "is_impossible": true}, {"answers": [{"answer_start": 90, "text": "crash"}], "question": "What is impact?", "id": "6101-1", "is_impossible": false}, {"answers": [{"answer_start": 66, "text": "send one packet"}], "question": "What is attack vector?", "id": "6101-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack-based buffer overflow in Coolplayer 2.19.2.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17499-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17499-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17499-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The issue exists due to a lack of sufficient boundary checks performed on user-supplied data. A remote attacker may pass excessive data as an argument for an APOP command passed to the affected server. The attacker may exploit this issue to corrupt a saved instruction pointer and in doing so may potentially influence execution flow of the affected service into attacker-supplied instructions.", "qas": [{"answers": [{"answer_start": 24, "text": "a lack of sufficient boundary checks performed on user-supplied data"}], "question": "What is root cause?", "id": "23787-0", "is_impossible": false}, {"answers": [{"answer_start": 116, "text": "pass excessive data as an argument for an APOP command passed to the affected server"}], "question": "What is impact?", "id": "23787-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23787-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Bugs A] memory corruption : B] heap overflow Heap overflow/corruption (no additional analysis) during the handling of the PRG files: The only \"obstacle\" to the exploitation could be EDI handled at address 00B54CE5 because sometimes it's zero and other times", "qas": [{"answers": [], "question": "What is root cause?", "id": "17878-0", "is_impossible": true}, {"answers": [{"answer_start": 8, "text": "memory corruption"}], "question": "What is impact?", "id": "17878-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "17878-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Author will be not responsible for any damage.</font></b> Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7 RegKey Safe for Script: True RegkeySafe for Init:", "qas": [{"answers": [], "question": "What is root cause?", "id": "4474-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4474-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4474-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "this overflow is due to a simple oversight in the command line parser. ; long ret; printf(\"error: program did not execute properly, check the path.\\n\");", "qas": [{"answers": [{"answer_start": 24, "text": "a simple oversight in the command line parser"}], "question": "What is root cause?", "id": "186-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "186-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "186-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability was reported to the vendor and was patched in Foxit Reader 4.2.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15514-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15514-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15514-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can exploit this issue by supplying a malicious PDF file or webpage. Successful exploits may allow the attacker to execute arbitrary code in the context of a user running the affected application. Failed attempts will likely result in denial-of-service conditions. This issue was previously covered in BID 36638 (Adobe Reader and Acrobat October 2009", "qas": [{"answers": [], "question": "What is root cause?", "id": "33283-0", "is_impossible": true}, {"answers": [{"answer_start": 127, "text": "execute arbitrary code in the context of a user running the affected application"}], "question": "What is impact?", "id": "33283-1", "is_impossible": false}, {"answers": [{"answer_start": 38, "text": "supplying a malicious PDF file or webpage"}], "question": "What is attack vector?", "id": "33283-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Update the offset to return the offset for the next symbol on  the compressed stream", "qas": [{"answers": [], "question": "What is root cause?", "id": "20201-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "20201-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "20201-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "require 'msf/core' include Msf::Exploit::FILEFORMAT include Msf::Exploit::Remote::Seh This module exploits a buffer overflow in A-PDF WAV to MP3 v1.0.0. When the application is used to import a specially crafted m3u file, a buffer overflow occurs allowing arbitrary code execution", "qas": [{"answers": [], "question": "What is root cause?", "id": "16662-0", "is_impossible": true}, {"answers": [{"answer_start": 256, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "16662-1", "is_impossible": false}, {"answers": [{"answer_start": 192, "text": "a specially crafted m3u file"}], "question": "What is attack vector?", "id": "16662-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Kernel heap overflow in the function flow_divert_handle_app_map_create on OS X  and iOS. The vulnerability was patched in OS X El Capitan   This exploit has not been tested on iOS. Exploitation requires root privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44238-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "44238-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "44238-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability was confirmed on ASan build of WebKit nightly. Shadow bytes around the buggy address: 0x1c340000edc0:", "qas": [{"answers": [], "question": "What is root cause?", "id": "41814-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41814-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "41814-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This method abuses a design weakness in iChat Bonjour services, allowing an user  to conduct a denial of service attack against reachable clients by registering multiple \"1st\" = > firstname, # - first name of the user \"", "qas": [{"answers": [{"answer_start": 19, "text": "a design weakness in iChat Bonjour services"}], "question": "What is root cause?", "id": "3230-0", "is_impossible": false}, {"answers": [{"answer_start": 85, "text": "conduct a denial of service attack against reachable clients"}], "question": "What is impact?", "id": "3230-1", "is_impossible": false}, {"answers": [{"answer_start": 149, "text": "registering multiple \"1st\""}], "question": "What is attack vector?", "id": "3230-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " SSL server demonstration program  Copyright (C) 20062015, ARM Limited, All Rights Reserved  Licensed under the Apache License, Version 2.0 (the \"License\"); you may  not use this file except in compliance with the License You may obtain a copy of the License at  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied See the License for the specific language governing permissions and  limitations under the License This file is part of mbed TLS (https:tls.mbed.org)  Taken from mbed TLS programssslssl_server.c and modified to crash postfix", "qas": [{"answers": [], "question": "What is root cause?", "id": "41192-0", "is_impossible": true}, {"answers": [{"answer_start": 682, "text": "crash postfix"}], "question": "What is impact?", "id": "41192-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41192-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This file is part of the Metasploit Framework and may be subject to  redistribution and commercial restrictions. Reply Client Remote overflow Exploit', This module exploits a buffer overflow in the 32bit FTP 09.04.24 client that is triggered through an excessively long PASV reply command  Tested against xp SP3 english OptPort.new('SRVPORT', [ true, \"The FTP daemon port to listen on\", 21 ]), end end user = \"", "qas": [{"answers": [], "question": "What is root cause?", "id": "8623-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8623-1", "is_impossible": true}, {"answers": [{"answer_start": 250, "text": "an excessively long PASV reply command"}], "question": "What is attack vector?", "id": "8623-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability is caused due to an error when processing TIFF images with certain \"Rows Per Strip\" and \"Samples Per Pixel\" values, which can be exploited to cause a heap-based buffer overflow by tricking a user into opening a specially crafted TIFF image file. Remote code execution 1)", "qas": [{"answers": [{"answer_start": 35, "text": "an error when processing TIFF images"}], "question": "What is root cause?", "id": "18257-0", "is_impossible": false}, {"answers": [{"answer_start": 168, "text": "heap-based buffer overflow"}], "question": "What is impact?", "id": "18257-1", "is_impossible": false}, {"answers": [{"answer_start": 198, "text": "tricking a user into opening a specially crafted TIFF image file"}], "question": "What is attack vector?", "id": "18257-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A denial of service vulnerability has been reported in IBM DB2. This vulnerability is reported to only exist when DB2 is installed on Microsoft Windows operating systems. This issue is due to a failure of the application to properly ensure that only authorized users can signal the DB2 UDB instance to shutdown. This vulnerability allows attackers with local access to shutdown the DB2 UDB instance. This will result in the denial of database service to legitimate users Users may set the 'DB2SHUTDOWNSEM' + pid event to shutdown the database. This is due to a Windows permissions issue related to shared memory sections, culminating in various denial of service attacks.", "qas": [{"answers": [{"answer_start": 192, "text": "a failure of the application to properly ensure that only authorized users can signal the DB2 UDB instance to shutdown"}], "question": "What is root cause?", "id": "24679-0", "is_impossible": false}, {"answers": [{"answer_start": 2, "text": "denial of service"}], "question": "What is impact?", "id": "24679-1", "is_impossible": false}, {"answers": [{"answer_start": 481, "text": "set the 'DB2SHUTDOWNSEM' + pid event"}], "question": "What is attack vector?", "id": "24679-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Windows 7 32bit  Steps to Reproduce: Run the python exploit script, it will create a new  file with the name \"exploit.txt\" just copy the text inside \"exploit.txt\"  and start the program. Now paste the content of  \"exploit.txt\" into all three fields in the new window. Click \"Replace\" and you will see a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45241-0", "is_impossible": true}, {"answers": [{"answer_start": 303, "text": "crash"}], "question": "What is impact?", "id": "45241-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "45241-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Tested on: Windows 10 Single Language x64  Windows 7 x32 Service Pack 1 Steps to produce the crash: 2.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46417-0", "is_impossible": true}, {"answers": [{"answer_start": 93, "text": "crash"}], "question": "What is impact?", "id": "46417-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46417-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Here is the code used to parse them: char tmp[32]; long val; return REG_EBRACE; ctx->re points to the regex characters. This code blindly copies hex characters from the regex into the 32 byte stack buffer tmp until it encounters either a non-hex character or a '}'", "qas": [{"answers": [], "question": "What is root cause?", "id": "38263-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "38263-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "38263-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An issue in the handling of specific web requests by SureCom network devices has been identified. By placing a malformed request to the web configuration interface, it is possible for an attacker to deny service to legitimate users of a vulnerable device. print \"The server's not vulnerable and replied with \" .", "qas": [{"answers": [], "question": "What is root cause?", "id": "23788-0", "is_impossible": true}, {"answers": [{"answer_start": 199, "text": "deny service to legitimate users of a vulnerable device"}], "question": "What is impact?", "id": "23788-1", "is_impossible": false}, {"answers": [{"answer_start": 101, "text": "placing a malformed request to the web configuration interface"}], "question": "What is attack vector?", "id": "23788-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: Safari 5.02 stack overflow [dos] Browser crash:", "qas": [{"answers": [], "question": "What is root cause?", "id": "15558-0", "is_impossible": true}, {"answers": [{"answer_start": 57, "text": "crash"}], "question": "What is impact?", "id": "15558-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15558-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\" print \"ssh into the system a few times with an incorrect password\" print \" \" print 'Writing exploit to this file' print \"==============================================\" print \" ssh in again to execute the command\" print \"==============================================", "qas": [{"answers": [], "question": "What is root cause?", "id": "35234-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "35234-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "35234-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "These issues arise in the SMTP server during NTLM authentication and may facilitate arbitrary code execution or denial-of-service conditions. MailEnable Professional 2.0 and MailEnable Enterprise 2.0 are reported vulnerable to these issues", "qas": [{"answers": [], "question": "What is root cause?", "id": "28735-0", "is_impossible": true}, {"answers": [{"answer_start": 84, "text": "arbitrary code execution or denial-of-service conditions"}], "question": "What is impact?", "id": "28735-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28735-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Desc: Traktor Pro suffers from a stack buffer overflow vulnerability when  parsing playlist files (.nml) resulting in a crash. The user input is not  properly sanitized which may give the attackers the possibility for an  arbitrary code execution on the affected system. Failure of exploitation  may result in a denial of service", "qas": [{"answers": [{"answer_start": 127, "text": "The user input is not  properly sanitized"}], "question": "What is root cause?", "id": "15580-0", "is_impossible": false}, {"answers": [{"answer_start": 120, "text": "crash"}], "question": "What is impact?", "id": "15580-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15580-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Desc: The vulnerability is caused due to a boundary error in  the processing of a project file, which can be exploited to  cause a stack based buffer overflow when a user opens e.g Successful exploitation allows  execution of arbitrary code on the affected machine ce 18 00 44 44 44 4444 44 44 44 44 44 44 44 ....DDDDDDDDDDDD  0018ce28 44 44 44 44 44 44 44 4444 44 44 44 44 44 44 44 DDDDDDDDDDDDDDDD  0018ce38 44 44 44 44 44 44 44 4444 44 44 44 44 44 44 44 DDDDDDDDDDDDDDDD  0018ce48 44 44 44 44 44 44 44 4444 44 44 44 44 44 44 44 DDDDDDDDDDDDDDDD  First chance exceptions are reported before any exception handling", "qas": [{"answers": [{"answer_start": 41, "text": "a boundary error in  the processing of a project file"}], "question": "What is root cause?", "id": "39443-0", "is_impossible": false}, {"answers": [{"answer_start": 131, "text": "stack based buffer overflow"}], "question": "What is impact?", "id": "39443-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39443-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "LPC (Local Procedure Call) is a message-passing service that allows threads and processes to communicate with each other on a local machine as opposed to RPC (Remote Procedure Call) that takes place between different hosts. If a server was to receive a LPC request from a client, the normal procedure for the server would be a call to NtAcceptConnectPort and NtCompleteConnectPort to complete the connection. If the server were to call upon NtReplyPort rather than NtAcceptConnectPort, the client would crash due to a kernel exception. In addition, if a client was to connect to either \\DbgSsApiPort or \\DbgUiApiPort and send random data, the client would crash. In both scenarios, reboot of the system would be required in order to regain normal functionality. This vulnerability can only be launched against a machine a user can interactively log onto, therefore remote exploitation is not possible. 1) Executing the following commands will cause a Blue Screen of Death and rebooting the system is required in order to regain normal functionality (NtReplyPort vulnerability). 2) Executing the following commands will cause a Blue Screen of Death and rebooting the system is required in order to regain normal functionality (DbgSsApiPort or \\DbgUiApiPort vulnerability).", "qas": [{"answers": [{"answer_start": 516, "text": "a kernel exception"}], "question": "What is root cause?", "id": "20254-0", "is_impossible": false}, {"answers": [{"answer_start": 503, "text": "crash"}], "question": "What is impact?", "id": "20254-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20254-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "9.2.1.1.2 buffer overflow exploit (MSF) require 'msf/core' include Msf::Exploit::FILEFORMAT include Msf::Exploit::Remote::Seh end def exploit sploit << \"\\xeb\\x06\\x90\\x90\" # short jump", "qas": [{"answers": [], "question": "What is root cause?", "id": "15081-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15081-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15081-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the depth parameter is an object with valueOf defined, this method can free the MovieClip, which is then used.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39040-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39040-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39040-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Linux kernel is prone to a local denial-of-service vulnerability that attackers can exploit to cause an affected computer to panic.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33289-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "denial-of-service"}], "question": "What is impact?", "id": "33289-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33289-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability in Microsoft Windows 2000 and NT 4 could allow a user to gain SYSTEM-level privileges on the local host. This may allow an application with minimal privileges to execute arbitrary code with the privileges of the process that is accessed. : There have been reports of a mass-mailing worm that exploits this vulnerability using the proof-of-concept exploit.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21344-0", "is_impossible": true}, {"answers": [{"answer_start": 73, "text": "gain SYSTEM-level privileges on the local host"}], "question": "What is impact?", "id": "21344-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21344-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Winterm 1125SE is affected by a remote denial of service vulnerability. This issue is due to the application failing to handle exceptional conditions in a proper manner. A successful attack causes the application to crash, denying service to legitimate users", "qas": [{"answers": [{"answer_start": 93, "text": "the application failing to handle exceptional conditions in a proper manner"}], "question": "What is root cause?", "id": "26145-0", "is_impossible": false}, {"answers": [{"answer_start": 39, "text": "denial of service"}], "question": "What is impact?", "id": "26145-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26145-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue may allow remote attackers to execute arbitrary machine code in the context of the affected application. This issue is specific to a patch applied to the Gentoo Linux version of mpg123. The following commands are sufficient to demonstrate this issue by crashing affected applications:", "qas": [{"answers": [], "question": "What is root cause?", "id": "28160-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "execute arbitrary machine code in the context of the affected application"}], "question": "What is impact?", "id": "28160-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28160-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Create folder with the name: Try to debug an executable with the name: test.exe.exe or lib.exe.dll", "qas": [{"answers": [], "question": "What is root cause?", "id": "37526-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "37526-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "37526-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "{ echo 'No response from '.htmlentities($host);", "qas": [{"answers": [], "question": "What is root cause?", "id": "1345-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1345-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1345-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " A local privilege escalation attack against the community supported  By default, configuration files are stored in ~$USER.realnetworks,  but all the files in there are group writeable. There are a number of ways to attack this, but after some poking it seems  that modifying the path to shared libraries and writing my own malicious  shared libraries was the easiest objdump quickly can tell us what the names of the 15  functions are, and we can stub out a bogus shared library pretty quickly.)   Next, compile the code below as a  shared library and copy it to the trojaned directory:   Neither the name of the organization nor the names of its contributors may  be used to endorse or promote products derived from this software without  specific prior written permission The next time the victim fires up realplayer 9, a nice little shell  will be listening on port 12345 for you:  id   Redistribution and use in source and binary forms, with or without modification,  are permitted provided that the following conditions are met:   Redistributions of source code must retain the above copyright notice,   To execute this  attack against a fellow local user, first edit their config file  (~victim.realnetworksRealShared_0_0) to have the 'dt_codecs' variable  point to a directory under your control, like tmpCodecs.", "qas": [{"answers": [], "question": "What is root cause?", "id": "93-0", "is_impossible": true}, {"answers": [{"answer_start": 9, "text": "privilege escalation"}], "question": "What is impact?", "id": "93-1", "is_impossible": false}, {"answers": [{"answer_start": 266, "text": "modifying the path to shared libraries and writing my own malicious  shared libraries"}], "question": "What is attack vector?", "id": "93-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Iperius Remote 1.7.0 Unquoted Service Path Elevation of Privilege  Tested on: Windows 7 x86  Shoutout to carbonated and ozzie_offsec Iperius Remote allows the user to install the application as a service with an unquoted service path running with SYSTEM privileges. It is important to note that the application installs itself as a service in the same location where the setup file in ran from. Provided that the end user initiates the installation from a directory with spaces in it's path, this could allow an authorized but non-privileged local user to execute arbitrary code with elevated privileges on the system. A successful attempt would require the local user to be able to insert their code in the system path undetected by the OS or other security applications where it could potentially be executed during application startup or reboot. If successful, the local user's code would execute with the elevated privileges of the application.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40427-0", "is_impossible": true}, {"answers": [{"answer_start": 212, "text": "unquoted service path running with SYSTEM privileges"}], "question": "What is impact?", "id": "40427-1", "is_impossible": false}, {"answers": [{"answer_start": 167, "text": "install the application as a service"}], "question": "What is attack vector?", "id": "40427-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Yes A statically allocated buffer is overwritter in the case that a very long Object Identifier is specified in stringified dotted notation to the smiGetNode function of libsmi[1]. Any software that uses the vulnerable function to find a definition from an Object Indentifier specified in stringified dotted notation that is given by the user. The SNMP packets from the protocol that travel over the network do not use this notation for OIDs This vulnerability was discovered and researched by Andr\u00e9s L\u00f3pez from Core Security Technologies. * The 'smiGetNode' function returns a 'SmiNode' struct given the name of a OID as a 'char *' in both either numeric (i.e This array is populated by a loop that calls 'strtok' and then subsecuently 'strtoul' in the case that the OID supplied as a 'char *' was in the form of subsecuent numbers separated by a period. That loop clearly overwrites past 'oid' boundaries when the string contained in 'node2' To verify if the version on 'libsmi' installed on a unix based system is vulnerable, the code example (smisubtree) from 'man libsmi'[2] can be used. Core Security Technologies contacts Juergen Schoenwaelder and Frank Strauss at their supplies e-mail addresses, telling about a found vulnerability and offering an advisory draft in either plain or Frank Strauss' e-mail address bounces Core Security Technologies' e-mail back, informing about a new e-mail address. Core Security Technologies sends the message again to the new address. Core Security Technologies sends and encripted draft of this advisory to Juergen Schoenwaelder and Vincent Bernat, with apologies due to the delay caused by Pedro Varangot being on leave due to health issues. The advisory draft mentions Juergen Schoenwaelder replies with a patch fixing the vulnerability, and correcting some tecnical information in the advisory draft regarding the impact of the vulnerability, stating that it is likely low and that Net-SNMP is not affected. Core Security Technologies replies to Juergen Schoenwaelder and Vincent Bernat agreeing that the impact of the vulnerability is low and removes the mention of Net-SNMP in the avisory. Core Security Technologies asks for a timeline regarding the release of a fixed version of libsmi stating that this advisory will be released anyway, because someone may be using libsmi in his software introducing a vulnerability he may not know about. No reply is received for this Core Security Technologies notifies Juergen Schoenwaelder and Vincent Bernat that October the 18th has been set as a tentative release date for this advisory, and that the release date is open to discussion if commitment to release a fixed version of libsmi in a given timeframe is given. Core Security Technologies incorporates Juergen Schoenwaelder's suggestions to the advisory, and again mentions that the advisory can be rescheduled if it is deemed necesary by the vendor. We conduct our research in several important areas of computer security including system vulnerabilities, cyber attack planning and simulation, source code auditing, and cryptography. Core Security Technologies develops strategic solutions that help security-conscious organizations worldwide develop and maintain a proactive process for securing their networks. The contents of this advisory are copyright (c) 2010 Core Security Technologies and (c) 2010 CoreLabs, and are licensed under a Creative This advisory has been signed with the GPG key of Core Security Technologies advisories team, which is available for download at This may result in arbitraty code execution by cleverly overwriting key pointers in memory The publication of this advisory was coordinated by Pedro Varangot 8. This constitutes a classical overflow that can likely be leveraged into arbitrary code execution reliably. Based in Boston, MA and Buenos Aires, Argentina, Core Security Technologies can be reached at 617-399-6980 or on the Web at [http://www.coresecurity.com].", "qas": [{"answers": [], "question": "What is root cause?", "id": "15293-0", "is_impossible": true}, {"answers": [{"answer_start": 3549, "text": "arbitraty code execution"}], "question": "What is impact?", "id": "15293-1", "is_impossible": false}, {"answers": [{"answer_start": 3577, "text": "cleverly overwriting key pointers in memory"}], "question": "What is attack vector?", "id": "15293-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It utilizes a SEH overflow and then a shellcode builderassembler  \"builds\"or \"assembles\" bytes that were deleted by transformation  of the buffer so that the shellcode will work without a flaw Read my notes & comments in the script for more info Author has no responsibility over the damage you do with this! It gets the location of the shellcode and then from there does the appropriate modifications to apply the correct hex bytes that were deleted off the buffer (0x80= bytes).", "qas": [{"answers": [], "question": "What is root cause?", "id": "7957-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7957-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7957-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This is a Proof of Concept code that was created for the sole purpose   of assisting system administrators in evaluating whether their applications   are vulnerable to this issue or not  require 'net/http' require 'net/https' require 'optparse' require 'openssl' opt.on(\"-u\",\"--url URL\",\"The url of the Servlet/JSP to test for Denial of Service\") NUMBER_OF_REQUSETS\",\"The number of requests to send to the server. # This is a Proof of Concept code that was created for the sole purpose #\" puts \"# of assisting system administrators in evaluating whether or not #\" puts \"# their applications are vulnerable to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "31615-0", "is_impossible": true}, {"answers": [{"answer_start": 327, "text": "Denial of Service"}], "question": "What is impact?", "id": "31615-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "31615-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "!usrbinenv python  Proof of concept:  Program received signal SIGSEGV, Segmentation fault", "qas": [{"answers": [], "question": "What is root cause?", "id": "1894-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1894-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1894-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Tested on: Windows 7 x64 Service Pack 1 Steps to produce the crash: 2.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46421-0", "is_impossible": true}, {"answers": [{"answer_start": 61, "text": "crash"}], "question": "What is impact?", "id": "46421-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46421-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Both of these issues were reported to the Apport maintainers and a fix was released on 2016-12-14. An additional problem where arbitrary commands can be called with the \u201cRelaunch\u201d action is tracked by CVE-2016-9951. I\u2019d like to thank Martin Pitt and the Ubuntu security team for getting a fix (https://bugs.launchpad.net/apport/+bug/1648806) released so quickly.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40937-0", "is_impossible": true}, {"answers": [{"answer_start": 127, "text": "arbitrary commands"}], "question": "What is impact?", "id": "40937-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40937-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "CC IFF file parsing memory corruption Platforms: Windows Versions: Bridge CC 6.1.1 and earlier versions Version: Photoshop CC 16.1.1 (2015.1.1) and earlier versions 1) By providing a malformed IFF file, an attacker can cause an heap memory corruption.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39431-0", "is_impossible": true}, {"answers": [{"answer_start": 228, "text": "heap memory corruption"}], "question": "What is impact?", "id": "39431-1", "is_impossible": false}, {"answers": [{"answer_start": 181, "text": "a malformed IFF file"}], "question": "What is attack vector?", "id": "39431-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " This exploit was originaly written by Manuel Santamarina Suarez, but it  was working by clicking on the link and then on the \"Yes\" button The exploit now simply works by clicking on the link Writing exploit into the file...\\n\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "1988-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1988-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1988-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the AwaitedPromise is replaced by the user script, the AwaitedPromise will be immediately overwritten after the call to Await, this may lead the generator to an incorrect state.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44540-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "44540-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "44540-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "; fputs(\"\\nError: this server uses an unknown client script version\\n\\n\", stdout); printf(\"\\n- try client script version %s\\n\", join2[j]); fputs(\"- server is protected by password, insert it:\\n \", stdout); \"- the server is NOT vulnerable, it has replied with the error 13:\\n \" \" Challenge response too long!\\n\", stdout); fputs(\"- seems the server is not vulnerable since it is not crashed yet\\n\", stdout);", "qas": [{"answers": [], "question": "What is root cause?", "id": "783-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "783-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "783-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Libsldap contains a buffer overflow vulnerability in it's handling of the 'LDAP_OPTIONS' environment variable. Local attackers can exploit this vulnerability in setuid/setgid programs linked to libsldap to elevate privileges. This library is linked to by a number of system utilities, many of them installed setuid or setgid.", "qas": [{"answers": [{"answer_start": 70, "text": "the 'LDAP_OPTIONS' environment variable"}], "question": "What is root cause?", "id": "20969-0", "is_impossible": false}, {"answers": [{"answer_start": 206, "text": "elevate privileges"}], "question": "What is impact?", "id": "20969-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20969-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "print 'Sending GET request'  Crash at A  16378 Program received signal SIGSEGV, Segmentation fault", "qas": [{"answers": [], "question": "What is root cause?", "id": "18457-0", "is_impossible": true}, {"answers": [{"answer_start": 29, "text": "Crash"}], "question": "What is impact?", "id": "18457-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "18457-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability was confirmed on the nightly ASan build. Shadow bytes around the buggy address: 0x0c22800dc390: fa fa fa fa fa fa", "qas": [{"answers": [], "question": "What is root cause?", "id": "42071-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "42071-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "42071-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue presents itself due to insufficient sanitization of user-supplied data. This issue can ultimately allow an attacker to compromise a computer by placing malicious files on the system and executing these files through other means. 2.1.2 and prior versions are reported vulnerable to this issue.", "qas": [{"answers": [{"answer_start": 34, "text": "insufficient sanitization of user-supplied data"}], "question": "What is root cause?", "id": "24684-0", "is_impossible": false}, {"answers": [{"answer_start": 130, "text": "compromise a computer"}], "question": "What is impact?", "id": "24684-1", "is_impossible": false}, {"answers": [{"answer_start": 155, "text": "placing malicious files on the system and executing these files through other means"}], "question": "What is attack vector?", "id": "24684-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "exit (-1); if (!argv[2]) else  Build the pseudoIPv4 header   Build option header with poison bytes   a value of 0x00 will suffice!@$%!  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "4047-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4047-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4047-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Linux Debian  Windows 7 Additional analysis: Textbook buffer overflow; a fixed size buffer gets allocated with szPath[256], and the first command line argument is stored without char szPath[256]; char szOut[256]; else return 1; Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41670-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41670-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "41670-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Total length of the packet", "qas": [{"answers": [], "question": "What is root cause?", "id": "1599-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1599-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1599-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A convenient web browser based administration interface makes it easy to monitor the status of the server remotely. If you could log on the server successfully, take the following steps and the Sysax Multi server will crash which would lead to Denial of Service attack: there are several ways to compromise the server, I list them here as 4.1, 4.2, and etc can not connect the server, please check.\\n\"; $ssh2->auth_password($user, $pass) || die \"you sure user name and password are correct?\\n\"; any of the following commands will cause the server carsh.", "qas": [{"answers": [], "question": "What is root cause?", "id": "13958-0", "is_impossible": true}, {"answers": [{"answer_start": 244, "text": "Denial of Service"}], "question": "What is impact?", "id": "13958-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "13958-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Blake Cornell  Exploits found with this code can be  found at Released under the VoIPER project  Do not hesitate to show enthusiasm and support  and help develop this further. It will try random data packaging at the end of a valid packet.", "qas": [{"answers": [], "question": "What is root cause?", "id": "8940-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8940-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8940-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack buffer overflow in XMPlay 3.3.0.4. The vulnerability is caused due to a boundary error within the parsing of playlists containing an overly long file name. end  Regenerate the payload   Transmit the response to the client  Handle This module uses the ASX file format.", "qas": [{"answers": [{"answer_start": 99, "text": "a boundary error within the parsing of playlists containing an overly long file name"}], "question": "What is root cause?", "id": "16556-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "16556-1", "is_impossible": true}, {"answers": [{"answer_start": 138, "text": "playlists containing an overly long file name"}], "question": "What is attack vector?", "id": "16556-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Office Publisher is prone to a remote denial-of-service vulnerability because the application fails to properly handle malformed files. Successfully exploiting this issue allows remote attackers to crash the affected application, denying service to legitimate users. Microsoft Office Publisher 2007 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 88, "text": "the application fails to properly handle malformed files"}], "question": "What is root cause?", "id": "29664-0", "is_impossible": false}, {"answers": [{"answer_start": 48, "text": "denial-of-service"}], "question": "What is impact?", "id": "29664-1", "is_impossible": false}, {"answers": [{"answer_start": 129, "text": "malformed files"}], "question": "What is attack vector?", "id": "29664-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It allows the user to intercept and display TCP/IP and other packets being transmitted or received over a network to which the computer is attached. It was found out that malformed network traffic (Geonet-based) can lead to an application crash (denial of service) if verbose output of tcpdump monitoring the network is used. The application decoder for the geonet protocol fails to perform external input validation and performs insufficient checking on length computations leading to an unsafe decrement and underflow in the function The affected variable is length which is later on used to print a memory chunk which eventually leads to a segfault. To reproduce start tcpdump on a network interface (running the program with sudo might hide the segfault message on certain environments, see dmesg for details) and use the following python program to generate a frame on the network (might also need sudo): ! Discovered 2014-11-11 Reported vendor by email 2014-11-12 Vendor made a fix available as repository patch 2014 The issue was found by using a slightly enhanced version of american fuzzy lop The function contains several unsafe computations updating the length variable.", "qas": [{"answers": [{"answer_start": 374, "text": "fails to perform external input validation and performs insufficient checking on length computations"}], "question": "What is root cause?", "id": "35359-0", "is_impossible": false}, {"answers": [{"answer_start": 227, "text": "application crash (denial of service)"}], "question": "What is impact?", "id": "35359-1", "is_impossible": false}, {"answers": [{"answer_start": 171, "text": "malformed network traffic"}], "question": "What is attack vector?", "id": "35359-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Vypress Tonecast is reported prone to a remote denial of service vulnerability. It is reported that, when handled, a sufficiently malformed audio stream will cause the affected software to crash. An attacker may exploit this condition to deny service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24691-0", "is_impossible": true}, {"answers": [{"answer_start": 47, "text": "denial of service"}], "question": "What is impact?", "id": "24691-1", "is_impossible": false}, {"answers": [{"answer_start": 115, "text": "a sufficiently malformed audio stream"}], "question": "What is attack vector?", "id": "24691-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, an attacker may be able to gain elevated privileges on a host with a vulnerable version of PPPoEd installed.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24570-0", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "gain elevated privileges"}], "question": "What is impact?", "id": "24570-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24570-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A specially crafted x509 certificate can cause a single out of bounds byte overwrite resulting in potential certificate validation vulnerabilities, denial of service and possible remote code execution. In order to trigger this vulnerability, the attacker needs to supply a malicious x509 certificate to either server or client application using this library. According to the vendor it is used in wide range of products including industrial control systems, IoT devices, VoIP hardware, routers and more. The vulnerability exists in x509 code that deals with string fields in DER certificates. The issue happens when the string is longer or equal to length of the allocated buffer. Following code highlights the issue for the case of commonName field: This value ends up as the size parameter to a memcpy call at [4]. Then, the same value is used as an index to NULL terminate the string at [5]. If the string length is bigger than size of the allocated buffer, NULL termination at index textSz will cause an off-by-one NULL byte write into adjacent memory variable on the stack or heap, depending on where the buffer was allocated. The vulnerability can be triggered by supplying the attached PoC x509 certificate to the certfileds example app from wolfssl-examples. A certificate that triggers this vulnerability can be generated using the following openssl command: CREDIT Discovered by Aleksandar Nikolic of Cisco Talos. Depending on the way the library is used, this could lead to further issues when doing certificate validation or potentially result in remote code execution. 'localityName' <== Memory access at offset 23872 overflows this variable HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext Shadow bytes around the buggy address:", "qas": [{"answers": [{"answer_start": 532, "text": "x509 code that deals with string fields in DER certificates"}], "question": "What is root cause?", "id": "41984-0", "is_impossible": false}, {"answers": [{"answer_start": 98, "text": "potential certificate validation vulnerabilities, denial of service and possible remote code execution"}], "question": "What is impact?", "id": "41984-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "A specially crafted x509 certificate"}], "question": "What is attack vector?", "id": "41984-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "2B45 F4 SUB EAX,DWORD PTR SS:[EBP-C] ; substract the size at the end of the chunk So through the controlling of the 32bit value after the AOLL tag and/or the 16bit one at the end of the chunk (offset 0x23ba of the provided PoC) is possible to exploit the integer overflow for performing the memmove of an arbitrary amount of data. 3) The Code 4)", "qas": [{"answers": [], "question": "What is root cause?", "id": "17162-0", "is_impossible": true}, {"answers": [{"answer_start": 243, "text": "exploit the integer overflow for performing the memmove of an arbitrary amount of data"}], "question": "What is impact?", "id": "17162-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "17162-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "$junk.$nseh.$seh.$venalign.$nops.$shell; # assemble the exploit portion of the buffer my $fill = \"\\x71\" ; # fill remainder of buffer with junk my $buffer = $sploit.$fill; # assemble the final buffer  write the exploit buffer to file print FILE $buffer;", "qas": [{"answers": [], "question": "What is root cause?", "id": "29798-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "29798-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "29798-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Local attackers can exploit this issue to corrupt memory and execute arbitrary code with kernel-level privileges. Successful exploits may facilitate a complete system compromise. This issue affects only Symantec and Norton antivirus products running on Microsoft Windows NT, Windows 2000, and Windows XP", "qas": [{"answers": [], "question": "What is root cause?", "id": "28763-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "corrupt memory and execute arbitrary code with kernel-level privileges"}], "question": "What is impact?", "id": "28763-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28763-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Snort is prone to multiple denial-of-service vulnerabilities because the application fails to properly process specially crafted IPv6 packets. Attackers can exploit these issues to crash the affected application, causing denial-of-service conditions. These issues affect Snort 2.8.5; other versions may also be vulnerable.", "qas": [{"answers": [{"answer_start": 85, "text": "fails to properly process specially crafted IPv6 packets"}], "question": "What is root cause?", "id": "33306-0", "is_impossible": false}, {"answers": [{"answer_start": 27, "text": "denial-of-service"}], "question": "What is impact?", "id": "33306-1", "is_impossible": false}, {"answers": [{"answer_start": 111, "text": "specially crafted IPv6 packets"}], "question": "What is attack vector?", "id": "33306-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Currently the module does not spawn as SYSTEM, however once achieving a shell, one can easily use incognito to impersonate the token Exploit::CheckCode::Safe end def exploit if is_system? if check == Exploit::CheckCode::Safe end else fail_with(Failure::BadConfig, \"Unknown target arch; unable to assign exploit code\") end print_status('Launching notepad to host the exploit...') Injecting payload into #{process.pid}...\")  invoke the exploit, passing in the address of the payload that  we want invoked on successful exploitation.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45562-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45562-1", "is_impossible": true}, {"answers": [{"answer_start": 443, "text": "passing in the address of the payload"}], "question": "What is attack vector?", "id": "45562-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "In this case instead of using the per-process device map directory we can use the fact that the anonymous token can support a per-user device map directory. If this doesn\u2019t exist (which seems to be rare it gets created) the kernel uses ZwCreateDirectoryObject inside SeGetTokenDeviceMap. This does have a limitation from the previous attack as it doesn\u2019t work if the process has a restricted token as NtImpersonateAnonymousToken returns STATUS_ACCESS_DENIED although I believe it would work from AppContainer assuming the device map hadn\u2019t already been created (otherwise not sure the DACL would allow access). You can compare the operation to the command shell\u2019s mklink tool that will fail to create the mount point at low integrity. 2) Execute the poc executable file as low integrity passing two arguments, the path to a directory to create (must be somewhere than can be written to as low integrity user such as AppData\\Temp\\Low) and the arbitrary file path to set the mount point to. For example: 3) While the PoC is running you can now list the directory and get access to its contents.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39310-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39310-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39310-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It will log all of the client's activities such as visited web sites, the time etc There's an optional client application if the administrator wishes to acquire the computer name and user   This service is always on regardless of the client's use.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18017-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18017-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18017-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When a for-in loop is executed, a JSPropertyNameEnumerator object is created at the beginning and used to store the information of the input object to the for-in loop. If it's the same, the \"this\" object of the get_by_id expression will be considered having the same structure as the input object to the for-in loop has. The problem is, it doesn't have anything to prevent the structure from which the cached structure ID from being freed.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45910-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45910-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45910-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This means, though the web server works normally, (due to Multithreading),No more Logs are generated.", "qas": [{"answers": [], "question": "What is root cause?", "id": "8524-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8524-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8524-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "TallSoft Quick TFTP Server 2.2 DoS  Category: Denial of Service from socket import * import sys, select  sufficient for the crash to work", "qas": [{"answers": [], "question": "What is root cause?", "id": "39627-0", "is_impossible": true}, {"answers": [{"answer_start": 46, "text": "Denial of Service"}], "question": "What is impact?", "id": "39627-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39627-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, an attacker may gain sensitive information about network resources.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23087-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "23087-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "23087-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This means an attacker can supply a length field larger than the stack based buffer, causing the user-controlled token data to overflow the stack buffer. On the device I'm working on (SM-G925V), the \"OTP\" service can be accessed from any user, including from the SELinux context \"untrusted_app\". Successfully exploiting this vulnerability should allow a user to elevate privileges to the TrustZone TEE. I've attached a small PoC which can be used to trigger the overflow.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40914-0", "is_impossible": true}, {"answers": [{"answer_start": 85, "text": "causing the user-controlled token data to overflow the stack buffer"}], "question": "What is impact?", "id": "40914-1", "is_impossible": false}, {"answers": [{"answer_start": 27, "text": "supply a length field larger than the stack based buffer"}], "question": "What is attack vector?", "id": "40914-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a vulnerability found in MicroP 0.1.1.1600. A stack-based buffer overflow occurs when the content of a .mppl file gets copied onto the stack, which overwrites the lpFileName parameter of a CreateFileA() function, and results arbitrary code execution under the context of the user.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17502-0", "is_impossible": true}, {"answers": [{"answer_start": 246, "text": "arbitrary code execution under the context of the user"}], "question": "What is impact?", "id": "17502-1", "is_impossible": false}, {"answers": [{"answer_start": 107, "text": "the content of a .mppl file gets copied onto the stack"}], "question": "What is attack vector?", "id": "17502-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The copyright notice above does not evidence any   actual or intended publication of such source code", "qas": [{"answers": [], "question": "What is root cause?", "id": "261-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "261-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "261-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is reported that an integer underflow vulnerability is present in the iptables logging rules of the Linux kernel 2.6 branch. A remote attacker may exploit this vulnerability to crash a computer that is running the affected kernel. The 2.6 Linux kernel is reported prone to this vulnerability, the 2.4 kernel is not reported to be vulnerable.", "qas": [{"answers": [{"answer_start": 69, "text": "the iptables logging rules of the Linux kernel 2.6 branch"}], "question": "What is root cause?", "id": "24696-0", "is_impossible": false}, {"answers": [{"answer_start": 180, "text": "crash a computer that is running the affected kernel"}], "question": "What is impact?", "id": "24696-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24696-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "PHP's xmlrpc extension library is prone to multiple denial-of-service vulnerabilities because it fails to properly handle crafted XML-RPC requests. Exploiting these issues allows remote attackers to cause denial-of-service conditions in the context of an application using the vulnerable library. PHP 5.3.1 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 97, "text": "fails to properly handle crafted XML-RPC requests"}], "question": "What is root cause?", "id": "33755-0", "is_impossible": false}, {"answers": [{"answer_start": 52, "text": "denial-of-service"}], "question": "What is impact?", "id": "33755-1", "is_impossible": false}, {"answers": [{"answer_start": 122, "text": "crafted XML-RPC requests"}], "question": "What is attack vector?", "id": "33755-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is reported that Symantec Norton AntiVirus is prone to a Script Blocker denial of service vulnerability. The privileges and zone required so that the script is successful in exploiting this issue are not known. Symantec is currently investigating this vulnerability and this BID will be updated, as further analysis is complete.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24288-0", "is_impossible": true}, {"answers": [{"answer_start": 75, "text": "denial of service"}], "question": "What is impact?", "id": "24288-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24288-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Now in the new window paste the content of \"exploit.txt\" into the field:\"Registration Name\"  and add the following into the \"Registration Code\" field:\"1234567891011121\" Click \"OK\" and you will see a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45245-0", "is_impossible": true}, {"answers": [{"answer_start": 199, "text": "crash"}], "question": "What is impact?", "id": "45245-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "45245-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "PRIV_CMD_SW_CTRL: if (copy_from_user(&prNdisReq->ndisOidContent[0], prNdisReq->ndisOidContent is in a static allocation of size 0x1000, and prIwReqData->data.length is a usermode controlled unsigned short, so the copy_from_user results in memory corruption. See \u200b hello-jni.tar.gz\u200b for a PoC (NDK required to build) that should redirect kernel code execution to 0x40404040.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39629-0", "is_impossible": true}, {"answers": [{"answer_start": 344, "text": "code execution"}], "question": "What is impact?", "id": "39629-1", "is_impossible": false}, {"answers": [{"answer_start": 328, "text": "redirect kernel code execution to 0x40404040"}], "question": "What is attack vector?", "id": "39629-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Module load completed but symbols could not be loaded for mplayerc.exe  First chance exceptions are reported before any exception handling", "qas": [{"answers": [], "question": "What is root cause?", "id": "32514-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "32514-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "32514-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Exploiting this vulnerability results in an overflown integer that is used to allocate a buffer on the heap. After the incorrect allocation, one or more user-supplied buffers are copied in the new buffer, resulting in a corruption of the heap. By exploiting this vulnerability, it is possible for an application running with Partial Trust permissions to to break from the CLR sandbox and run arbitrary code with Full Trust permissions. It has been verified that this vulnerability exists in the .NET Framework versions 2.0, 3.0, 3.5 & 4. Earlier versions of the .NET Framework may or may not be vulnerable as well as the affected class is also available the .NET Framework versions 1.0 & 1.1. KB2671605 [3] MS12025: Vulnerabilities in the .NET Framework could allow remote code execution: April 10, 2012 This issue was resolved with the release of MS12-025 [6]. It appears the fix was part of a security push for System. Introduction is used to pass a value, or an array of values, to an image encoder (GDI+). After allocation, the values of these constructor parameters are copied into the new buffer. For example the constructor EncoderParameter(Encoder, Int64) accepts a 64-bit (8-byte) long value, thus 8 bytes are allocated on the heap after which the value of the long parameter is copied into this heap buffer. For these methods, the number of allocated bytes is the size of one array member multiplied by the number of members in the array. In some cases it is possible to trigger an integer overflow resulting in the allocation of a buffer that is too small for the supplied constructor parameters. The .NET Framework limits the number of array members. One constructor method (EncoderParameter(Encoder, Int32[], Int32[], Int32[], Int32[])) appears to be very suitable for exploiting this vulnerability. The number of bytes that will be allocated is the number of members in the numerator1 array multiplied by 16 (four times the size of a 32-bit integer). Supplying an array containing 268,435,456 integer values is enough to trigger the overflow. The following proof of concept code can be used to trigger this vulnerability: using System; using System. Imaging; static class Crash static void Main() Running this code will cause the application to crash as it tries to write beyond a heap boundary: As demonstrated in the proof of concept, copying four large integer arrays into a heap buffer causes the program to crash. Since heap segments are a lot smaller than that, copying this amount of data will fail early in the process. This makes exploitation of this issue difficult. Since the exception is thrown by the .NET Framework, this exception can be handled by the application thus preventing the application from crashing. It was possible to successfully exploit this issue on the following Windows versions:   By exploiting this vulnerability, it is possible for an application running with Partial Trust permissions to to break from the CLR sandbox [10] (CAS) and run arbitrary code with Full Trust permissions. Examples of Partial Trusted applications include, ClickOnce, XAML Browser must be noted that the affected class is not available for SilverLight Limitations As noted above, this issue cannot be exploited using a SilverLight With the release of MS11-044 [11], Microsoft changed the way ClickOnce & XBAP applications are started. In this case the application will start immediately - as long as it does not request elevated permissions. Finally, with the release of Internet Explorer 9 Microsoft chose to disable XBAP applications in the Internet security zone. In a lot of cases, OutOfMemoryException exceptions will be thrown when trying to exploit this issue. Successful exploitation has been achieved on a 32-bit Windows XP system with 4GB of RAM. Both ingredients provide for an exploitable heap corruption as attackers control how much data is allocated on the heap and also how much data is copied into the allocated buffer. In particular, whenever such an application is started from the Internet security zone, a dialog is always shown even if the application does not request elevated permissions. Previously the application would just start. These methods do not check whether the resulting integer value (used for heap allocation) overflows. When validating the length of the supplied arrays, the method fails to check the length of the numerator2 parameter. Due to the missing check, it is possible to use the numerator2 parameter to control how much data is copied into the heap buffer.", "qas": [{"answers": [{"answer_start": 4334, "text": "the method fails to check the length of the numerator2 parameter"}], "question": "What is root cause?", "id": "18777-0", "is_impossible": false}, {"answers": [{"answer_start": 44, "text": "overflown integer that is used to allocate a buffer on the heap"}], "question": "What is impact?", "id": "18777-1", "is_impossible": false}, {"answers": [{"answer_start": 115, "text": "the incorrect allocation"}], "question": "What is attack vector?", "id": "18777-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Not sure if code execution is possible though.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9364-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9364-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9364-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This could potentially allow an authorized but non-privileged local user to execute arbitrary code with elevated privileges on the system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40438-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "execute arbitrary code with elevated privileges on the system"}], "question": "What is impact?", "id": "40438-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40438-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Mbedthis AppWeb is prone to a format-string vulnerability because the application fails to properly sanitize user-supplied input before passing it as the format specifier to a formatted-printing function. This issue affects only applications that were built with logging enabled and installed with no \"ErrorLog\" directive in 'appweb.conf'. Successful exploits may allow remote attackers to execute arbitrary code in the context of the vulnerable application. Failed exploit attempts will likely crash the application, denying further service to legitimate users. AppWeb 2.2.2 is reported vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 66, "text": "the application fails to properly sanitize user-supplied input before passing it as the format specifier to a formatted-printing function"}], "question": "What is root cause?", "id": "30187-0", "is_impossible": false}, {"answers": [{"answer_start": 390, "text": "execute arbitrary code in the context of the vulnerable application"}], "question": "What is impact?", "id": "30187-1", "is_impossible": false}, {"answers": [{"answer_start": 136, "text": "passing it as the format specifier to a formatted-printing function"}], "question": "What is attack vector?", "id": "30187-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "# overwrite the buffer at 262 bytes print \"[-] Error cant write file to systemn\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "10842-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "10842-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "10842-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "1- RemoteAddress suffers from a BoF when we pass a string over 2068 <br > 2- ProxyPrefix suffers from a BoF when we pass a string over 1044 <br > 3- ProxyName suffers from a BoF when we pass a string over 1044 <br> 4- Password suffers from a BoF when we pass a string over 1044 <br> 5- ProxyBypassList suffers from a BoF when we pass a string over 1044 <br > 6- LoginName suffers from a BoF when we pass a string over 1044 <br 7- CurrentDirectory suffers from a BoF when we pass a string over 1044 <br><br> Stack Dump:", "qas": [{"answers": [], "question": "What is root cause?", "id": "7460-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7460-1", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "pass a string over 2068"}], "question": "What is attack vector?", "id": "7460-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If a parameter an object with valueOf defined, this method can free the MovieClip, which is then used.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39041-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39041-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39041-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Windows 7 sheed AntiVirus installs a service with an unquoted service path To properly exploit this vulnerability, the local attacker must insert an executable file in the path of the service. Upon service restart or system reboot, the malicious code will be run with elevated privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40497-0", "is_impossible": true}, {"answers": [{"answer_start": 232, "text": "the malicious code will be run with elevated privileges"}], "question": "What is impact?", "id": "40497-1", "is_impossible": false}, {"answers": [{"answer_start": 139, "text": "insert an executable file in the path of the service"}], "question": "What is attack vector?", "id": "40497-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "All Panda Security 2016 Home User products for Windows are vulnerable to privilege escalation, which allows a local attacker to execute code as SYSTEM from any account (Guest included), thus completely compromising the affected host. However, the ACLs assigned to the directory itself, and to the rest of the installed files, allow any user to modify those files and/or substitute them with malicious ones. A local attacker can easily execute code with SYSTEM account privileges by modifying or substituting the main executable module of this service, 'Panda_URL_Filteringb.exe', which will run at the next reboot of the host. Any use of this information is at the user's risk and discretion and is provided with no warranties. Nettitude and the author cannot be held liable for any impact resulting from the use of this information. A local attacker can elevate his privileges from any user account and execute code as SYSTEM.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39670-0", "is_impossible": true}, {"answers": [{"answer_start": 128, "text": "execute code as SYSTEM from any account (Guest included), thus completely compromising the affected host"}], "question": "What is impact?", "id": "39670-1", "is_impossible": false}, {"answers": [{"answer_start": 482, "text": "modifying or substituting the main executable module of this service, 'Panda_URL_Filteringb.exe'"}], "question": "What is attack vector?", "id": "39670-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "allows userassisted remote attackers to execute arbitrary commands via a crafted image name that is mishandled during a \"Run a plugin\" action. \" 2) Open the renamed file in shutter 3) Click the \"Run a plugin\" option and select any plugin from the list and click \"Run\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "41435-0", "is_impossible": true}, {"answers": [{"answer_start": 40, "text": "execute arbitrary commands"}], "question": "What is impact?", "id": "41435-1", "is_impossible": false}, {"answers": [{"answer_start": 71, "text": "a crafted image name that is mishandled during a \"Run a plugin\" action"}], "question": "What is attack vector?", "id": "41435-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Rational ClearCase has been reported to be prone to a denial of service condition. It is possible to cause this condition by portscanning a system running the vulnerable version of ClearCase. This issue was demonstrated using the nmap portscanning utility. An attacker can exploit this vulnerability by making two consecutive portscans of a vulnerable system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22031-0", "is_impossible": true}, {"answers": [{"answer_start": 54, "text": "denial of service"}], "question": "What is impact?", "id": "22031-1", "is_impossible": false}, {"answers": [{"answer_start": 125, "text": "portscanning a system running the vulnerable version of ClearCase"}], "question": "What is attack vector?", "id": "22031-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Buffer overflow on htmlspecialchars/entities with $double=false Long entities can cause a buffer overflow because the loop only guarantees 40 bytes available in beginning.", "qas": [{"answers": [{"answer_start": 114, "text": "the loop only guarantees 40 bytes available in beginning"}], "question": "What is root cause?", "id": "18458-0", "is_impossible": false}, {"answers": [{"answer_start": 90, "text": "buffer overflow"}], "question": "What is impact?", "id": "18458-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "18458-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "return false; This code always assumes that the current instruction is an op_call instruction.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45911-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45911-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45911-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "These packages are the  recommended GUI configuration components and listen on  a user specified port from 10000tcp to 65535tcp. RSSMON has hardened SELinux policies  applied which hinder exploitation of this vulnerability  be limiting access to network resources.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40938-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40938-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40938-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Which lines up quite nicely with our inlined disassembly of the function: .text:004D3BB9 read in the data for parsing  find a valid chunk print ' The returned short pointer is then used as the source in a memcpy with a controllable destination; write-what-where. test eax, eax ; test if d == 0 n2 refs to a location on the heap; may be exploitable if we stack Fg44 chunks with valid headers and malformed content, so the chunk is allocated, then free'd, and hopefully our pointer dips into one of those free'd chunks.", "qas": [{"answers": [], "question": "What is root cause?", "id": "34135-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "34135-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "34135-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Paste the content into the field: 'Target'  4. Click 'TCP lookup' button and you will see a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46287-0", "is_impossible": true}, {"answers": [{"answer_start": 92, "text": "crash"}], "question": "What is impact?", "id": "46287-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "Paste the content into the field: 'Target'  4"}], "question": "What is attack vector?", "id": "46287-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA function to show the hex dump of a buffer to show the hex dump on the screen: to write the hex dump in a file or other streams: (if you know C you know what FILE *stream means This modified CRC32 algorithm is used for some operations like the password authentication, in fact the password is a checksum comparison. unsigned long read_bits( // number read unsigned long bits, // how much bits to read unsigned char *in, // buffer from which to read the number unsigned long in_bits // position of the buffer in bits unsigned long seek_bits, unsigned long write_bits( // position where the stored number finishs unsigned long data, // number to store unsigned long bits, // how much bits to occupy unsigned char *out, // buffer on which to store the number unsigned long out_bits // position of the buffer in bits unsigned long seek_bits, Header file used for manage errors in Windows It support socket and errno too (this header replace the previous sock_errX.h) none)\\n\" \"-w PASS the password to use if the server is protected\\n\" \"-i shows server informations and exits. \" \"-t SEC seconds to wait when the server is full, default is 1\\n\" \"-v NUM version number to use for joining a server, by default the number\\n\" \" is automatically scanned finding the exact server version\\n\" \" \"-m 0xOFF enable a server's option that lets clients to send a memory location\\n\" \" that will be read by the server (PS2 servers don't support it)\\n\" \"-f NUM another test option that enable the usage of internal IPs (NAT).\\n\" Use -f 1 to enable client's NAT, 2 for\\n\" \" the server or 3 to enable both\\n\"  BUILD INFO PACKET  bits = write_bits(time(NULL), 32, b, bits); */  END INFO PACKET  fputs(\"\\nError: socket timeout, probably the server uses another port\\n\\n\", stdout);  BUILD JOIN PACKET  bits = write_bits(guest, 1, b, bits); */ if(src_nat) { /* LAN IP and port of the client */ if(dst_nat) { /* LAN IP and port of the server received\\n\" \"Error: seems the server is password protected, use the -w option and specify\\n\" \" the correct password\\n\" printf(\" wrong version (%d), I try to scan the next version\\n\", server_ver++); fputs(\"\\nError: unknown error, check the following dump:\\n\", stdout);  STAR WARS BATTLEFRONT 1.1  read_bits(32, data, bits); \" The version of this server is not compatible with the query protocol used by\\n\" \" this tool. All the informations until Password should be correct\\n\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "655-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "655-1", "is_impossible": true}, {"answers": [{"answer_start": 279, "text": "write the hex dump in a file or other streams"}], "question": "What is attack vector?", "id": "655-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "sets up a shared memory event queue; at the end of this shared memory buffer it puts a mach message which it sends whenever it wants to notify a client that there's data available in the queue. As a client we can modify this mach message such that the server (hidd on MacOS, backboardd on iOS) will send us an arbitrary mach port from its namespace with an arbitrary disposition. This is a minimal PoC to demonstrate the issue. Attaching two PoCS: deja-xnu: exploit for this issue on iOS 11.4.1 to get code execution as backboardd, and then trigger p0 issue 1658 dq8: exploit for this issue, and a new exploit for the original pangu variant of this issue to get a real tfp0 on iOS 7.1.2 Proof of Concept:", "qas": [{"answers": [], "question": "What is root cause?", "id": "45650-0", "is_impossible": true}, {"answers": [{"answer_start": 502, "text": "code execution as backboardd"}], "question": "What is impact?", "id": "45650-1", "is_impossible": false}, {"answers": [{"answer_start": 136, "text": "notify a client that there's data available in the queue"}], "question": "What is attack vector?", "id": "45650-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overrun exists in the 'netpr' program, part of the SUNWpcu (LP) package included with Solaris, from Sun Microsystems. By specifying a long buffer containing machine executable code, it is possible to execute arbitrary commands as root. On Sparc, the exploits provided will spawn a root shell, whereas on x86 it will create a setuid root shell in /tmp where hostname is the name of a host running the printer service on  is the number of bytes to add to the stack pointer to calculate your  target return address; try 1000 to 1000 in increments of 100 for  All", "qas": [{"answers": [], "question": "What is root cause?", "id": "19911-0", "is_impossible": true}, {"answers": [{"answer_start": 209, "text": "execute arbitrary commands as root"}], "question": "What is impact?", "id": "19911-1", "is_impossible": false}, {"answers": [{"answer_start": 131, "text": "pecifying a long buffer containing machine executable code"}], "question": "What is attack vector?", "id": "19911-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability exists due to insufficient boundary checks performed by these utilities when referencing the XLOCALEDIR environment variable. A local attacker can exploit this vulnerability by setting the XLOCALEDIR environment variable to an overly long value. When the vulnerable utilities are executed, the buffer overflow vulnerability will be triggered Its a strcpy in the xf86 libraries that we exploit, using  the bug to get the root privileges. long retaddr; char buffer[6000];  options of this exploit  case 'h': case 't':", "qas": [{"answers": [{"answer_start": 32, "text": "insufficient boundary checks performed by these utilities"}], "question": "What is root cause?", "id": "22320-0", "is_impossible": false}, {"answers": [{"answer_start": 412, "text": "using  the bug to get the root privileges"}], "question": "What is impact?", "id": "22320-1", "is_impossible": false}, {"answers": [{"answer_start": 195, "text": "setting the XLOCALEDIR environment variable to an overly long value"}], "question": "What is attack vector?", "id": "22320-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can crash the software by using .mls file. Proof of Concept (PoC): This vulnerabilities can be exploited by local attackers with userinteraction .. Security Risk: The security risk of the vulnerability is estimated as medium because of the local crash method. Attackers can crash the software local by user inter action over mls (playlist)", "qas": [{"answers": [], "question": "What is root cause?", "id": "35869-0", "is_impossible": true}, {"answers": [{"answer_start": 16, "text": "crash"}], "question": "What is impact?", "id": "35869-1", "is_impossible": false}, {"answers": [{"answer_start": 38, "text": "using .mls file"}], "question": "What is attack vector?", "id": "35869-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " This is an exploit for Bug 1 described in http:www.exploitdb.comexploits26558  Credit for discovering the vulnerability goes to Julien Ahrens from Inshell Security   The exploit will generate a winamp.ini file that will cause winamp to run the payload upon startup   I tried an alpha3 encoded egghunter but could not fit it in a single buffer and unfortunately it did not work, it wrote an invalid address on the stack then tried to access it   So I wrote from scratch a venetian shellcode that will write the egghunter onto the stack then executes it  The egg and shellcode can be found in plain ASCII in memory  Tested against Windows XP Pro SP3  Note: If you add winamp as an exception to DEP the return address becomes 0x003100F0 Ahead  write NOPs in locations that will stop later execution  Note: If you add winamp as an exception to DEP the return address becomes 0x003100F0", "qas": [{"answers": [], "question": "What is root cause?", "id": "27874-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "27874-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "27874-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Author will be not responsible for any damage.</font></b> Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7 <b> Remote execution depends on Internet Explorer settings</b> ESP=0188C9A4: A0 3F 9B 02 41 41 41 41-41 41 41 41 41", "qas": [{"answers": [], "question": "What is root cause?", "id": "4716-0", "is_impossible": true}, {"answers": [{"answer_start": 138, "text": "Remote execution"}], "question": "What is impact?", "id": "4716-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "4716-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can exploit this issue by tricking a victim into visiting a malicious webpage to execute arbitrary code and to cause denial-of-service conditions. This issue was previously covered in BID 36843 (Mozilla Firefox and SeaMonkey MFSA 2009-52 through -64 Multiple Vulnerabilities). This issue is related to BID 35510 (Multiple BSD Distributions 'gdtoa/misc.c' Memory Corruption Vulnerability), but because of differences in the code base, it is being assigned its own record.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33312-0", "is_impossible": true}, {"answers": [{"answer_start": 93, "text": "execute arbitrary code and to cause denial-of-service conditions"}], "question": "What is impact?", "id": "33312-1", "is_impossible": false}, {"answers": [{"answer_start": 38, "text": "tricking a victim into visiting a malicious webpage"}], "question": "What is attack vector?", "id": "33312-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module attempts to exploit a race condition in mail.local with SUID bit set on: Successful exploitation relies on a crontab job with root privilege, which may take up to 10min to execute. OptInt.new('ListenerTimeout', [true, 'Number of seconds to wait for the exploit', 603]) end def exploit  lots of this file's format is based on pkexec.rb  direct copy of code from exploitdb static int FILE *fh; return rv; static int char buf[1024];", "qas": [{"answers": [], "question": "What is root cause?", "id": "40385-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40385-1", "is_impossible": true}, {"answers": [{"answer_start": 24, "text": "exploit a race condition in mail.local with SUID bit set on"}], "question": "What is attack vector?", "id": "40385-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Apple Safari is prone to a denial-of-service vulnerability because it fails to adequately sanitize user-supplied input. Attackers can exploit this issue to cause denial-of-service conditions on a user's computer. Beta is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 70, "text": "fails to adequately sanitize user-supplied input"}], "question": "What is root cause?", "id": "30188-0", "is_impossible": false}, {"answers": [{"answer_start": 27, "text": "denial-of-service"}], "question": "What is impact?", "id": "30188-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30188-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "High Oxide Webserver v2.0.4 is prone to a remote Denial of Service vulnerability as it fails to handle crafted requests from the client properly. Technical Description: The vulnerability is caused by an error in handling some crafted characters in HTTP GET requests, which causes the server to crash. Successful exploitation could allow an attacker to crash a vulnerable server.", "qas": [{"answers": [{"answer_start": 87, "text": "fails to handle crafted requests from the client properly"}], "question": "What is root cause?", "id": "19986-0", "is_impossible": false}, {"answers": [{"answer_start": 49, "text": "Denial of Service"}], "question": "What is impact?", "id": "19986-1", "is_impossible": false}, {"answers": [{"answer_start": 103, "text": "crafted requests from the client"}], "question": "What is attack vector?", "id": "19986-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Synopsis A specially crafted web-page can cause the Javascript engine of Microsoft Internet Explorer 8 to free memory used for a string. The code will keep a reference to the string and can be forced to reuse it when compiling a regular expression. An attacker would need to get a target user to open a specially crafted web-page. Disabling Javascript should prevent an attacker from triggering the vulnerable code path This Po\u00adC attempts to exploit a useafterfree bug in Microsoft Internet  Force OLEAUT32 to free the string  Reuse the freed memory   This work by Sky\u00adLined is licensed under a Creative Commons Description Recompiling the regular expression pattern during a replace can cause the code to reuse a freed string, but only if the string is freed from the cache by allocating and freeing a number of strings of certain size, as explained by Alexander Sotirov in his Heap Feng-Shui presentation. March 2015: This vulnerability was found through fuzzing. March 2015: This vulnerability was submitted to ZDI. This vulnerability was acquired by ZDI. Microsoft addressed this issue in MS15-018. November 2016: Details of this issue are released.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40798-0", "is_impossible": true}, {"answers": [{"answer_start": 48, "text": "the Javascript engine of Microsoft Internet Explorer 8 to free memory used for a string"}], "question": "What is impact?", "id": "40798-1", "is_impossible": false}, {"answers": [{"answer_start": 9, "text": "A specially crafted web-page"}], "question": "What is attack vector?", "id": "40798-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "PHP is prone to a denial-of-service vulnerability because it fails to properly sanitize user-supplied input. An attacker who can run PHP code on a vulnerable computer may exploit this vulnerability to crash PHP and the webserver, denying service to legitimate users. This issue affects all versions of PHP.", "qas": [{"answers": [{"answer_start": 61, "text": "fails to properly sanitize user-supplied input"}], "question": "What is root cause?", "id": "29692-0", "is_impossible": false}, {"answers": [{"answer_start": 18, "text": "denial-of-service"}], "question": "What is impact?", "id": "29692-1", "is_impossible": false}, {"answers": [{"answer_start": 129, "text": "run PHP code on a vulnerable computer"}], "question": "What is attack vector?", "id": "29692-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A divide by 0 error occurs in tcp_select_initial_window  when processing user supplied TCP_MAXSEG facilitating a  local denialofservice condition (kernel oops!) in all  can be triggered easily with a call to setsockopt() on  a listening network socket and then establishing a TCP  connection to the awaiting socket.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16263-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16263-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16263-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the input is not an array but an object, then the length property of the object is going to be retrieved and converted to scalar. Due to the specifics of how jscript implements variable, this will only result in the crash if the entire memory block that holds the \"this\" variable gets freed. This is why the PoC uses an object with a large number of elements in addition to the \"length\" element. var vars = {};  all of these work, just uncomment the one you want to test Debug log: First chance exceptions are reported before any exception handling. When jscript executes an Array method (such as Array.join), it first retrieves the length of an array.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44404-0", "is_impossible": true}, {"answers": [{"answer_start": 215, "text": "the crash"}], "question": "What is impact?", "id": "44404-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "44404-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "ISC DHCP is prone to multiple denial-of-service vulnerabilities. An attacker can exploit these issues to cause the affected application to crash, resulting in a denial-of-service condition.", "qas": [{"answers": [], "question": "What is root cause?", "id": "37538-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "denial-of-service"}], "question": "What is impact?", "id": "37538-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37538-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the depth or movie name parameter provided is an object with toString or valueOf defined, this method can free the MovieClip, which is then used.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39042-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39042-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39042-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "There is a lack of sufficient bounds checking in DNS request and reply functions. As a result, it is possible for a remote attacker to cause a denial of service to legitimate users of dnrd. It is not known whether it is possible to execute arbitrary attacker-supplied instructions as a result of this vulnerability. It will run on a number of Unix and Linux distributions.", "qas": [{"answers": [{"answer_start": 9, "text": "a lack of sufficient bounds checking in DNS request and reply functions"}], "question": "What is root cause?", "id": "21236-0", "is_impossible": false}, {"answers": [{"answer_start": 135, "text": "cause a denial of service to legitimate users of dnrd"}], "question": "What is impact?", "id": "21236-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21236-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "D-Link DWL-G700AP HTTPD is prone to a remote denial-of-service vulnerability. This issue is due to a failure in the 'httpd' service to properly handle malformed data. An attacker can exploit this issue to crash the affected webserver, effectively denying service to legitimate users. This issue is reported to affect firmware versions 2.00 and 2.01; other firmware versions may also be vulnerable. After executing this the accesspoint cannot be configured anymore because the only way to administrate the AP is the administration with your browser. : case 'c': case 'h': else ip = argv[i]; else", "qas": [{"answers": [{"answer_start": 99, "text": "a failure in the 'httpd' service to properly handle malformed data"}], "question": "What is root cause?", "id": "27241-0", "is_impossible": false}, {"answers": [{"answer_start": 45, "text": "denial-of-service"}], "question": "What is impact?", "id": "27241-1", "is_impossible": false}, {"answers": [{"answer_start": 18, "text": "HTTP"}], "question": "What is attack vector?", "id": "27241-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a buffer overflow in Simple Open Music Player v1.0.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16663-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16663-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16663-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The following code exploits this vulnerability to run root shell { return -1; return -1; printf(\"failed - system patched or not MP\\n\"); return -1; return 0; Patch for this vulnerability, as in CVS: static int", "qas": [{"answers": [], "question": "What is root cause?", "id": "9488-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9488-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9488-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Server 2.0.1 POST request Denial of Service\" print \" Sending to the webserver a 'POST /%' will cause an abnormal print \" of the program that requires the reboot of the webserver.\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "3715-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "Denial of Service"}], "question": "What is impact?", "id": "3715-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "3715-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It takes three arguments: a pointer to a hashed (or obfuscated) shared library name, a pointer to a hashed (or obfuscated) exported function name, and a pointer to the function used for implementation. The implementation of this function just sets up a large array of title IDs (a title ID is a 64 bit integer that identifies \"something that runs on the console\", like a system application, firmware component or game, this has been used by Nintendo since the Wii and DSi, on console and handheld respectively) on the stack, then indexes it using the provided argument **without checking** and returns the array[index] to the emulator. Even better, it returns the old value (although I never needed to use this functionality when exploiting). The array is unfortunately near the end of `.data`, but that doesn't really matter, as it's stored *before* a nice array of KPAD C++ objects with vtables that I can clobber -- and if a pointer inside one of the objects happens to not be NULL, this same function makes a vtable call twice! Compiling the PoC Linked at the top of the page is an archive including the PoC itself as `calc.rpx` plus source plus modified and additional import library dependencies (as source and binaries). But then I found the perfect pair of gadgets: When the first one gets called, `rcx` has the address of the vtable array, and `rax` has the address of the first element of the vtable array (which isn't actually used, so it's a perfect place to put a gadget address). The ROP chain itself just grabs the address of the shellcode inside emulated RAM, `memcpy`s it to RWX memory allocated for the dynamic recompiler, and jumps there. Exploiting this seems easy, just get the return address from the stack (index `37`), but it seems this isn't totally reliable, so instead I make a dummy call, then use index `52`, which seems to return an address inside the `cemu.exe` `.text` more reliably. , it overwrites the vtable pointers, sets up the ROP chain, sets up the stack pivot, makes that pointer non-NULL, and makes a dummy call to `KPADSetConnectCallback` to get ROP. It's because I initially thought the pointer that got checked for being NULL was a boolean or something else, and I'd only zeroed out the lower 32 bits of it.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41021-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41021-1", "is_impossible": true}, {"answers": [{"answer_start": 1471, "text": "put a gadget address"}], "question": "What is attack vector?", "id": "41021-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Motorola SB4200 is prone to a remote denial-of-service vulnerability. This may permit an attacker to crash affected devices, denying further network services to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "28739-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "denial-of-service"}], "question": "What is impact?", "id": "28739-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28739-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Kerio MailServer is prone to a denial-of-service vulnerability due to a flaw when handling malformed network traffic. Successful exploits will result in denial-of-service conditions usrbinenv python  Permission to use, copy, modify, and distribute this software for any  purpose with or without fee is hereby granted, provided that the above  copyright notice and this permission notice appear in all copies Program terminated with signal 11, Segmentation fault.", "qas": [{"answers": [{"answer_start": 70, "text": "a flaw when handling malformed network traffic"}], "question": "What is root cause?", "id": "29039-0", "is_impossible": false}, {"answers": [{"answer_start": 31, "text": "denial-of-service"}], "question": "What is impact?", "id": "29039-1", "is_impossible": false}, {"answers": [{"answer_start": 91, "text": "malformed network traffic"}], "question": "What is attack vector?", "id": "29039-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a vulnerability in Tunnelblick 3.2.8 on Mac OS X. The vulnerability exists in the setuid openvpnstart, where an insufficient validation of path names allows execution of arbitrary shell scripts as root. clean end def exploit print_status(\"Dropping", "qas": [{"answers": [], "question": "What is root cause?", "id": "24578-0", "is_impossible": true}, {"answers": [{"answer_start": 178, "text": "execution of arbitrary shell scripts as root"}], "question": "What is impact?", "id": "24578-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24578-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "0A ; dynamic 64bit number, any value >= 4 (for this PoC) exploits the bug 3)", "qas": [{"answers": [], "question": "What is root cause?", "id": "17163-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17163-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17163-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\" characters  which makes it possible to do a path traversal and write anywhere in the system(where the user has writing permissions) This simple POC will write to the homeroot.bashrc the file test.txt to get command execution when the bash is run", "qas": [{"answers": [], "question": "What is root cause?", "id": "40440-0", "is_impossible": true}, {"answers": [{"answer_start": 209, "text": "command execution"}], "question": "What is impact?", "id": "40440-1", "is_impossible": false}, {"answers": [{"answer_start": 155, "text": "write to the homeroot.bashrc the file test.txt to get command execution when the bash is run"}], "question": "What is attack vector?", "id": "40440-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Starts Freeproxy Internet Suite  Run this exploit locally or from your remote attacking machine. Multiple sends may be necessary to crash the application.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39517-0", "is_impossible": true}, {"answers": [{"answer_start": 132, "text": "crash the application"}], "question": "What is impact?", "id": "39517-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39517-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "*ptr; case 'b': case 's': case 'p': case 'h':", "qas": [{"answers": [], "question": "What is root cause?", "id": "20970-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "20970-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "20970-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "RKP provides two commands which produce a value using the 64-bit hypervisor key, namely: Both of these commands convert the given virtual address from the kernel VAS to a physical address, but fail to verify the resulting address either via \"physmap\", or by checking that the given address does not reside in the physical address range of RKP itself. This means an attacker can issue these RKP calls in order to corrupt RKP memory or write to regions which are S2-protected by EL2 (for example, the EL0/1 translation tables). When the aforementioned commands are executed, they read the value of the HYP-mode physical timer (CNTHP_TVAL_EL2) and then write the value (timer_value XOR 64bit_cfpropp_key) into the attacker-controlled memory location. Note that the 64-bit key is not secret, as it can be deduced by the attacker by requesting the hypervisor to \"encrypt\" a given 64-bit value, and then XOR-ing it back again with the original value to obtain the key. Here is an outline of an attack scenario in which an attacker can gain code execution within RKP (EL2) from EL1: 1. =- allowing the attacker to use these commands (or any other RKP memory corruption) in order to directly modify RKP code. Get code execution in EL1 2. This mitigation leverages a 64-bit key stored in the hypervisor in order to encrypt the return addresses and frame pointers stored on a given kernel task's stack.", "qas": [{"answers": [{"answer_start": 193, "text": "fail to verify the resulting address"}], "question": "What is root cause?", "id": "41211-0", "is_impossible": false}, {"answers": [{"answer_start": 412, "text": "corrupt RKP memory or write to regions which are S2-protected by EL2"}], "question": "What is impact?", "id": "41211-1", "is_impossible": false}, {"answers": [{"answer_start": 378, "text": "issue these RKP calls"}], "question": "What is attack vector?", "id": "41211-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Open SpotIE.txt and copy the content to clipboard  3.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47418-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "47418-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "47418-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer is prone to a denial-of-service vulnerability because of an error in processing an HTML 'href' tag with a very large title. An attacker can exploit this vulnerability to cause the application to stop responding, denying service to legitimate users.", "qas": [{"answers": [{"answer_start": 85, "text": "an error in processing an HTML 'href' tag with a very large title"}], "question": "What is root cause?", "id": "28164-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "28164-1", "is_impossible": false}, {"answers": [{"answer_start": 108, "text": "an HTML 'href' tag with a very large title"}], "question": "What is attack vector?", "id": "28164-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "For simplicity's sake, we'll consider the case when JITting fails (so ignoring the call to blitReactor) - We're performing repeated additions of floating point values, and in this case the attacker has sufficient control over the input values to arrange matters so that this has interesting results. Below shows the results of the calculation performed in the code, and a second calculation where a multiplication is used instead of the iterative addition: 1000: 717.749878 717.749878 Up to here the precision used the values are still identical 2046: 1467.391724 1467.391724 At this point, the first significant errors start to occur, but note 2047: 1468.108398 1468.108521 that the \"incorrect\" result is smaller than the more precise one. The result here is that we end up taking our sample values for the last row of the result from one-row-past-the-end of the source buffer. ca The bug is however also present in the JIT version of the function, and the attached PoC when run on a normal chrome build (with --disable-gpu, or forcing swiftshader as per my previously reported issue) x = xStart; For context, dest->copyInternal will simply cast x and y to type int, and use them to read the colour at (x, y) from the source surface, then write it to (i, j) in the destination surface. The example used in the PoC is when the source width is 5828, and the destination width is 8132. Shadow bytes around the buggy address The very rough heap-spray implemented makes it likely the leaked memory will contain pointers to the chrome binary, to libswiftshader, and to the heap.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45060-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45060-1", "is_impossible": true}, {"answers": [{"answer_start": 123, "text": "repeated additions of floating point values"}], "question": "What is attack vector?", "id": "45060-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Successful exploits may allow an attacker to execute arbitrary code in the context of the user running the affected application. Failed exploit attempts will result in a denial-of-service condition. This issue was previously covered in BID 36843 (Mozilla Firefox and SeaMonkey MFSA 2009-52 through -64 Multiple Vulnerabilities), but has been assigned its own record to better document it.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33314-0", "is_impossible": true}, {"answers": [{"answer_start": 45, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "33314-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33314-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "/etc/ntp.keys trustedkey 1 requestkey 1 controlkey 1 and in /etc/ntp.keys 1 M 1111111 1 is KEY ID 1111111 is MD5 password Hostname and Port is hardcoded in the code. deal with md5.h headers  Use the system MD5 if available, otherwise libisc's. In this case consider the key missing. return name;  getpass_keytype()  shared between ntpq and ntpdc, only vaguely  related to the rest of ssl_init.c. return (0); return (0); return (1); FILE *fi; char pbuf[20]; else void return 0; char *cfgcmd; char *resp; char buffer[1024]; Configure settings in address struct Initialize size variable to be used later on  sendrequest  format and send a request packet char *qdata  Check to make sure the data will fit in one packet return 1;  Fill in the packet  If we have data, copy and pad it out to a 32bit boundary Get the keyid and the password if we don't have one. Sending 36 octets Packet data: 51 92 d0 41 Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39445-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39445-1", "is_impossible": true}, {"answers": [{"answer_start": 856, "text": "Sending 36 octets Packet data"}], "question": "What is attack vector?", "id": "39445-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If Ctrl+C key is pressed then the threads are killed exit  Detect number of arguments being passed to the program  Infinite Loop  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "46337-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "46337-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "46337-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Windows XP is reported prone to a denial of service vulnerability. The issue exists due to a lack of sufficient sanitization performed on WAV file header values before they are processed. An attacker may exploit this vulnerability to deny service to legitimate users.", "qas": [{"answers": [{"answer_start": 101, "text": "a lack of sufficient sanitization performed on WAV file header values before they are processed"}], "question": "What is root cause?", "id": "24699-0", "is_impossible": false}, {"answers": [{"answer_start": 44, "text": "denial of service"}], "question": "What is impact?", "id": "24699-1", "is_impossible": false}, {"answers": [{"answer_start": 148, "text": "WAV file"}], "question": "What is attack vector?", "id": "24699-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "XP/2003 full patch Vulnerability Details: Win32k.sys in DispatchMessage when the last call to xxxDefWindowProc, this function in dealing with some Message, will call gapfnScSendMessage message, there will be SfnINSTRING function called this function when the lParam is not empty, direct that the lParam is a memory pointer, and pull data directly from the address despite the use of the function of the SEH, but as long as the kernel address transmission errors will still cause the system BSOD return 0; return 0; Common crash stack: kd>", "qas": [{"answers": [], "question": "What is root cause?", "id": "12337-0", "is_impossible": true}, {"answers": [{"answer_start": 522, "text": "crash"}], "question": "What is impact?", "id": "12337-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "12337-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: Buffer overflow vulnerability in GetGo Download Manager proxy options 5.3.0.2712  Tested on Windows 8 64 bits  Attack Type: Remote  Impact: Code Execution to be vulnerable victim must have a proxy selected that will maliciously return data in response select proxy ip of host running this script incase You have vm running the software set port of proxy on getgo under proxy settings as well now when you download any page or any file the program incorrectly parses the response and passes request to malicious host triggering overlfow print \"\\n[+] Listening on %d ...", "qas": [{"answers": [{"answer_start": 451, "text": "the program incorrectly parses the response and passes request to malicious host"}], "question": "What is root cause?", "id": "43432-0", "is_impossible": false}, {"answers": [{"answer_start": 156, "text": "Code Execution"}], "question": "What is impact?", "id": "43432-1", "is_impossible": false}, {"answers": [{"answer_start": 499, "text": "passes request to malicious host"}], "question": "What is attack vector?", "id": "43432-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Now start notepad++ and in menu tab, go in settings and then select style configurator and now select test file in theme select option Now hit \"save and close\" button, it will crash with an error message Thanks Rahul Pratap Singh", "qas": [{"answers": [], "question": "What is root cause?", "id": "37558-0", "is_impossible": true}, {"answers": [{"answer_start": 176, "text": "crash with an error message"}], "question": "What is impact?", "id": "37558-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37558-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The driver MRXSMB.SYS is responsible for performing SMB  client operations and processing the responses returned  by an SMB server service. A  malicious SMB server can respond with specially crafted  Transaction response data that will cause an overflow  wherever the data is handled, either in MRXSMB.SYS or  in client code to which it provides data. One example  would be if the  file name length field  and the  short file name length field  in a Trans2 FIND_FIRST2 response packet can be supplied  with inappropriately large values in order to cause an  excessive memcpy to occur when the data is handled In the case of these examples an attacker could leverage  file: links, that when clicked by a remote user, would  lead to code execution. \" // Word Count (WCT): 42 \"\\x01\\x00\\x00\\x00\" // Create action: The file existed and was opened (1)", "qas": [{"answers": [], "question": "What is root cause?", "id": "1065-0", "is_impossible": true}, {"answers": [{"answer_start": 245, "text": "overflow"}], "question": "What is impact?", "id": "1065-1", "is_impossible": false}, {"answers": [{"answer_start": 181, "text": "specially crafted  Transaction response data"}], "question": "What is attack vector?", "id": "1065-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The effect of this issue is that this function may be used to perform file operations on directories outside of those specified by the open_basedir setting. This vulnerability may not be exploited to overwrite existing files. // set size limit in bytes if ($file){ echo \"The file <tt>$file</tt>", "qas": [{"answers": [], "question": "What is root cause?", "id": "21347-0", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "perform file operations on directories"}], "question": "What is impact?", "id": "21347-1", "is_impossible": false}, {"answers": [{"answer_start": 131, "text": "the open_basedir setting"}], "question": "What is attack vector?", "id": "21347-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Installed signal handler\\n\");  Let us create core files  return 1;  exploit the flaw  return 1;  Forge the string for our core dump  return 1; printf(\"[+] Malicious string forged\\n\"); return 1;   printf(\"[+] Waiting for exploit to succeed (~%ld seconds)\\n\", 60 - (te.tv_sec%60)); printf(\"[-] It looks like the exploit failed\\n\"); return 1;", "qas": [{"answers": [], "question": "What is root cause?", "id": "2005-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "2005-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "2005-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "As a result, an arbitrary object can be passed as the property variable to the op_get_direct_pname handler which uses the property variable directly as a string object without any check.", "qas": [{"answers": [{"answer_start": 13, "text": "an arbitrary object can be passed as the property variable to the op_get_direct_pname handler"}], "question": "What is root cause?", "id": "45912-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "45912-1", "is_impossible": true}, {"answers": [{"answer_start": 113, "text": "uses the property variable directly as a string object without any check"}], "question": "What is attack vector?", "id": "45912-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "2.Vulnerability Description A vulnerability has been found in this devices: 3.Affected Products CVE-2013-3543, all camera devices using AXIS Media Control (AMC) are affected The vulnerability affects to the latest version of the software (6.2.10.11 which was released on October 19, 2012) In the vendor web, you could see that \u201cAXIS Media Control is the recommended method for viewing video images in Microsoft Internet Explorer.\u201d Vulnerability which can be exploited by remote malicious person to overwrite arbitrary files with garbage data on a vulnerable system. The vulnerability exists due to the ActiveX control including insecure \"StartRecord()\", \"SaveCurrentImage()\" and \"StartRecordMedia()\" methods in \"AxisMediaControlEmb.dll\" DLL. This can be exploited to corrupt or create arbitrary files in the context of the current user. In the following example we will corrupt regedit.exe using one of ActiveX vulnerable methods: When we click on one of the buttons, we could see that regedit.exe is overwritten with garbage: The following code could be used to test the vulnerability: function startRecord(){ function saveCurrentImage(){ function startRecordMedia(){ 6.Report Timeline 20130524: Students team notifies the Axis Customer Support of the vulnerability 20130524: : Axis team reports to the technical support to analyze the vulnerability.", "qas": [{"answers": [{"answer_start": 598, "text": "the ActiveX control including insecure \"StartRecord()\", \"SaveCurrentImage()\" and \"StartRecordMedia()\" methods in \"AxisMediaControlEmb.dll\" DLL"}], "question": "What is root cause?", "id": "26173-0", "is_impossible": false}, {"answers": [{"answer_start": 498, "text": "overwrite arbitrary files with garbage data on a vulnerable system"}], "question": "What is impact?", "id": "26173-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26173-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This exploit will Create File(.rdp) and when decoding\" print \"The file with Cain(Remote Desktop Password Decoder)\" print \"Will Add administrator user(user) with password(pass)", "qas": [{"answers": [], "question": "What is root cause?", "id": "7329-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7329-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7329-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "David Litchfield, has illustrated multiple vulnerabilities in the Oracle 9i XML Database (XDB), during a seminar on \"Variations in exploit methods between Linux and Windows\" presented at the Blackhat conference.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1365-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1365-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1365-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The author is not responsible for any misuse of the information contained herein and prohibits any malicious use of all security related information or exploits by the author or elsewhere. Proof of Concept: Below you can find company file created in QB 2009 and modified to start \"Notepad.exe\" upon every user login (Admin, no pass). QBX (accountant's transfer copies) and QBM (portable company files) are even easier to modify but supposed to be send to outside accountant for processing during normal workflow.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39804-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39804-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39804-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue is likely due to memory corruption but it is not known if it could be further exploitable to execute arbitrary code.", "qas": [{"answers": [{"answer_start": 28, "text": "memory corruption"}], "question": "What is root cause?", "id": "23793-0", "is_impossible": false}, {"answers": [{"answer_start": 104, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "23793-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23793-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "(the application will Crash)\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "17471-0", "is_impossible": true}, {"answers": [{"answer_start": 22, "text": "Crash"}], "question": "What is impact?", "id": "17471-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "17471-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "waiting for the timer to execute  [. don't kill the exploit binary, the kernel will crash  Needed for local root char dummy[2048]; char buffer[2048]; printf(\"[.] waiting for the timer to execute\\n\");  Executes func() from process context. don't kill the exploit binary, the kernel will crash\\n\"); don't kill the exploit binary, the kernel will crash\\n\");  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "41458-0", "is_impossible": true}, {"answers": [{"answer_start": 84, "text": "crash"}], "question": "What is impact?", "id": "41458-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41458-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Usage: when you created the file is open with SciTE, and move the scroll bars Greetz: Greetz myself for find the bug, and all the people of undersecurity.net", "qas": [{"answers": [], "question": "What is root cause?", "id": "9133-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9133-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9133-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Attacks can be launched on a Cyberstop host if a request is submitted containing an unusual number of arbitrary characters. Simple script to send a long 'A^s' command to the server,  resulting in the server crashing Cyberstop web server will stop responding, a restart of the application may be required in order to regain normal functionality", "qas": [{"answers": [], "question": "What is root cause?", "id": "21237-0", "is_impossible": true}, {"answers": [{"answer_start": 196, "text": "the server crashing"}], "question": "What is impact?", "id": "21237-1", "is_impossible": false}, {"answers": [{"answer_start": 47, "text": "a request is submitted containing an unusual number of arbitrary characters"}], "question": "What is attack vector?", "id": "21237-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Vulnerability exists in the function win32k!ReadLayoutFile(), that parses keyboard layout files data. However, pool corruption is not fully-controllable, and reliable code execution exploit development is quite a difficult task.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18894-0", "is_impossible": true}, {"answers": [{"answer_start": 167, "text": "code execution"}], "question": "What is impact?", "id": "18894-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "18894-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Tested on : Windows 10  64bit  Steps to Reproduce  Run the python exploit script, it will create a new  file with the name \"exploit.txt\" Now Paste the content of \"exploit.txt\" into the field:", "qas": [{"answers": [], "question": "What is root cause?", "id": "45246-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45246-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45246-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When the setter is called, the parameter is converted to a string early, as a part of the new use-after-free prevention changes. This conversion can invoke script, which if the this object is a MovieClip, can delete the object, deleting the thread the call is made from, which can lead to a use-after-free.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40308-0", "is_impossible": true}, {"answers": [{"answer_start": 291, "text": "use-after-free"}], "question": "What is impact?", "id": "40308-1", "is_impossible": false}, {"answers": [{"answer_start": 209, "text": "delete the object, deleting the thread the call is made from"}], "question": "What is attack vector?", "id": "40308-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "you need read access to the  ata device in dev to be able to open() the device.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9134-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9134-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9134-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Files (x86)\\Zortam Mp3 Media Studio\\zmmspro.exe\" with very weak file permissions granting any user full permission to the exe. This allows opportunity for code execution against any other user running the application.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40418-0", "is_impossible": true}, {"answers": [{"answer_start": 155, "text": "code execution"}], "question": "What is impact?", "id": "40418-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40418-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Webmin does not filter script code from output that may be displayed by the web interface, such as log files, etc. This may enable a local attacker, with write privileges to such files, to cause arbitrary script code to be executed by the root user. Additionally, an attacker who can contrive a way to inject malicious script code into other types of output displayed by the Webmin interface may also exploit this issue. This may enable the attacker to steal cookie-based authentication credentials from the root user, eventually resulting in an escalation of privileges for the local attacker. Insert the following line into the virtusers file, and wait for the root user to visit that page: Or the following into the /etc/aliases file: Potentially more likely to be exploited however, would be a malicious local user who has _no_ access to webmin, who could change a file that webmin views through the HTML interface (where the code being read in is not checked for HTML). (Although chfn doesn't let you specify a username this long, but you get the idea.)", "qas": [{"answers": [], "question": "What is root cause?", "id": "21348-0", "is_impossible": true}, {"answers": [{"answer_start": 195, "text": "arbitrary script code to be executed by the root user"}], "question": "What is impact?", "id": "21348-1", "is_impossible": false}, {"answers": [{"answer_start": 302, "text": "inject malicious script code into other types of output displayed by the Webmin interface"}], "question": "What is attack vector?", "id": "21348-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer is reported prone to a remote denial of service vulnerability. The issue presents itself due to a malfunction that occurs when certain font tags are encountered and rendered. When a page that contains the malicious HTML code is viewed, Internet Explorer and all instances of Internet Explorer that are spawned from the instance used to view the malicious page, will crash.", "qas": [{"answers": [{"answer_start": 124, "text": "a malfunction that occurs when certain font tags are encountered and rendered"}], "question": "What is root cause?", "id": "24705-0", "is_impossible": false}, {"answers": [{"answer_start": 58, "text": "denial of service"}], "question": "What is impact?", "id": "24705-1", "is_impossible": false}, {"answers": [{"answer_start": 229, "text": "the malicious HTML code"}], "question": "What is attack vector?", "id": "24705-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "FTP Server 5.0 through 7.0 via a list (ls) -R command containing a wildcard. For this exploit to work in most cases, you need 1) a valid ftp account: The server is not running.\") print_status('Directory found, skipped creating a directory') print_status('Attempting to create a directory ...')", "qas": [{"answers": [], "question": "What is root cause?", "id": "17476-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17476-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17476-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The DxgkDdiEscape handler for 0x70000d5 lacks bounds checks: do do This handler copies data to/from a global array, but lacks any form of bounds checking, as |escape->size| is controlled by the user. A PoC is attached that should cause a crash (Win 10 x64, 372.54): A kernel component has corrupted a critical data structure. The corruption could potentially allow a malicious user to gain control of this machine. Arg2: ffffd00022de52c0, Address of the trap frame for the exception that caused the bugcheck Arg3: ffffd00022de5218, Address of the exception record for the exception that caused the bugcheck Proof of Concept:", "qas": [{"answers": [], "question": "What is root cause?", "id": "40666-0", "is_impossible": true}, {"answers": [{"answer_start": 238, "text": "crash"}], "question": "What is impact?", "id": "40666-1", "is_impossible": false}, {"answers": [{"answer_start": 289, "text": "corrupted a critical data structure"}], "question": "What is attack vector?", "id": "40666-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been discovered in the Opera web browser that could lead to remote code execution. The problem is said to trigger when handling malformed HTML HREF values and may result in a buffer overrun occuring within heap memory. As a result of this issue, an attacker may be capable of executing arbitrary code on a victim user by coaxing them to a malicious web site, or possibly by transmitting a malicious HTML e-mail message to an Opera mail client.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23263-0", "is_impossible": true}, {"answers": [{"answer_start": 80, "text": "remote code execution"}], "question": "What is impact?", "id": "23263-1", "is_impossible": false}, {"answers": [{"answer_start": 139, "text": "handling malformed HTML HREF values"}], "question": "What is attack vector?", "id": "23263-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If anyone can Overwrite the SEH chain or eip by some how method , just send your exploit's code to ( Jacky_thekiller@hotmail.com ) and i will be very happy of that ^.^ my $file=\"Crash.aap\"; my $junk=\"A\"x50000; # A Random buffer to just make a crash .", "qas": [{"answers": [], "question": "What is root cause?", "id": "10881-0", "is_impossible": true}, {"answers": [{"answer_start": 243, "text": "crash"}], "question": "What is impact?", "id": "10881-1", "is_impossible": false}, {"answers": [{"answer_start": 212, "text": "A Random buffer"}], "question": "What is attack vector?", "id": "10881-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "As already discussed in a number of reports in this tracker (#285, #286, #287, #288, #289, #292), VMware Workstation (current version 12.1.1 build-3770994) ships with a feature called \"Virtual Printers\", which enables the virtualized operating systems to access printers installed on the Host. Due to its nature, the application implements support for a variety of complex protocols and file formats, such as the printing protocol, EMFSPOOL format, and further embedded EMFs, fonts, images etc. For reasons which are not fully clear to me, one of the operations is to copy the contents of the CMAP table into the NAME table in memory - or, if the latter is larger than the former, create a completely new NAME table with CMAP's data. As you can see, the function doesn't perform any bounds checking of the values (offsets, sizes) loaded from table headers. While controlling the pointer to the CMAP section data (relative to the start of the font buffer) may be useful, being able to cheat about the NAME table size enables an attacker to cause a much more dangerous memory corruption on the heap. 0xAAAAAAAA), we will encounter an immediate crash in the memset() function, as shown below: First chance exceptions are reported before any exception handling. If the NAME table size is increased by a smaller degree, such that the memset() call doesn't hit unmapped page boundary, the code may successfully finish the call and proceed to copying the contents of the CMAP section into the small NAME memory area, which would finally result in a typical heap-based buffer overflow condition with controlled length and data. When launched in a guest system, it should trigger the crash shown above in the vprintproxy.exe process on the host. When such a record is encountered while processing the printing request data, some complex logic is executed to load the font into the program's internal structures.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40398-0", "is_impossible": true}, {"answers": [{"answer_start": 1039, "text": "cause a much more dangerous memory corruption on the heap"}], "question": "What is impact?", "id": "40398-1", "is_impossible": false}, {"answers": [{"answer_start": 210, "text": "enables the virtualized operating systems to access printers installed on the Host"}], "question": "What is attack vector?", "id": "40398-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "An attacker with permissions to execute PHP code on an affected computer may exploit this issue to crash PHP and kill all remaining webserver threads. This will result in denial-of-service conditions. Although this issue is local in nature, a remote attacker may exploit it by using other latent vulnerabilities such as a remote file-include issues; other remote attack vectors are also possible.", "qas": [{"answers": [], "question": "What is root cause?", "id": "29693-0", "is_impossible": true}, {"answers": [{"answer_start": 32, "text": "execute PHP code on an affected computer"}], "question": "What is impact?", "id": "29693-1", "is_impossible": false}, {"answers": [{"answer_start": 277, "text": "using other latent vulnerabilities such as a remote file-include issues"}], "question": "What is attack vector?", "id": "29693-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The issue occurs when an overly long command is submitted, which may be due to a buffer overrun. This problem may make it possible for an attacker to gain unauthorized access to a vulnerable system.", "qas": [{"answers": [{"answer_start": 79, "text": "a buffer overrun"}], "question": "What is root cause?", "id": "23267-0", "is_impossible": false}, {"answers": [{"answer_start": 150, "text": "gain unauthorized access to a vulnerable system"}], "question": "What is impact?", "id": "23267-1", "is_impossible": false}, {"answers": [{"answer_start": 22, "text": "an overly long command is submitted"}], "question": "What is attack vector?", "id": "23267-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "shareddelete.fla compiles to shareddelete.swf and contains the code that causes the use-after-free. loadswf.as compiles to loadswf.swf, and sets up the heap to cause a crash. To make the issue occur, put loadswf.swf and shareddelete.swf in the same folder on a webserver (the PoCs don't always work locally due to flash network sandboxing), and load loadswf.swf. This PoC only works on 64-bit systems, but the issue would work on a 32-bit system with proper heap set-up.", "qas": [{"answers": [], "question": "What is root cause?", "id": "37850-0", "is_impossible": true}, {"answers": [{"answer_start": 80, "text": "the use-after-free"}], "question": "What is impact?", "id": "37850-1", "is_impossible": false}, {"answers": [{"answer_start": 200, "text": "put loadswf.swf and shareddelete.swf in the same folder on a webserver"}], "question": "What is attack vector?", "id": "37850-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It prevents malicious programs from transmitting the data of your computer to hacker's computers.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16021-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "transmitting the data of your computer to hacker's computers"}], "question": "What is impact?", "id": "16021-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "16021-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Note that is not possible to exploit the visible integer overflow caused by malloc(size + 1) because the function that reads the data goes in endless loop,", "qas": [{"answers": [{"answer_start": 101, "text": "the function that reads the data goes in endless loop"}], "question": "What is root cause?", "id": "17164-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "17164-1", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "malloc(size + 1)"}], "question": "What is attack vector?", "id": "17164-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The afd.sys  driver runs in kernel mode and manages the Winsock TCPIP  An elevation of privilege vulnerability exists where the AFD  improperly validates input passed from user mode to the kernel An attacker must have valid logon credentials and be able to  log on locally to exploit the vulnerability An attacker who successfully exploited this vulnerability could  run arbitrary code in kernel mode (i.e [*] Locating required OS components\\n\");  retrieve system information  locate \"ZwQuerySystemInformation\" in the \"ntdll.dll\" module  allocate memory for the list of loaded modules return -1;  retrieve the list of loaded modules  locate \"ntkrnlpa.exe\" or \"ntoskrnl.exe\" in the retrieved list of loaded modules  base address of the loaded module (kernel space)  offset address (relative to the parent process) of the loaded module (user space) return -1;  free allocated buffer space  determine the address of the \"HalDispatchTable\" process (kernel space)  locate the offset previous step's result [plus] the address of \"HalDispatchTable\" in user space  Relative Virtual Address  the address of an item after it is loaded into memory, with the base address of the image file subtracted from it ZwDeviceIoControlFile\" routine in the \"ntdll.dll\" module return -1;  SETUP EXPLOITATION PREREQUISITE printf(\"[*] Setting up exploitation prerequisite\\n\"); WORD wVersionRequested;  initiate the use of the Winsock DLL return -1;  create socket return -1;  connect to a closed port  connect to port 0 on the local machine printf(\" [*] Connecting to closed port\\n\"); return -1;  CREATE TOKEN STEALING SHELLCODE printf(\"[ PUSH EDX Save EDX on the stack (save context) // PUSH EBX Save EBX on the stack (save context) ERROR_NOACCESS  AFD socket connect request unsuccessful  target is patched return -1;  in case of any other error message else  print the error code return -1;  elevate privileges of the current process printf(\" [*] Elevating privileges to SYSTEM\\n\");  spawn shell (with elevated privileges)  spawn SYSTEM shell within the current shell (remote shell friendly)  clean up and exit printf(\"\\n the target machine's OS is Windows XP SP3  in case the OS version is 5.2, service pack 2, not R2  the target machine's OS is Windows Server 2003 SP2   in case the OS version is 6.0, service pack 1, workstation  the target machine's OS is Windows Vista SP1   workstation  the target machine's OS is Windows Vista SP2  in case the OS version is 6.0, no service pack, server  Because Windows Server 2008 is based on the Windows NT 6.0 Service Pack 1 kernel, the RTM release is considered to be Service Pack 1;  accordingly, the first service pack is called Service Pack 2 the target machine's OS is Windows Server 2008  in case the OS version is 6.0, service pack 2, server  the target machine's OS is Windows Server 2008 the target machine's OS is Windows 7  in case the OS version is 6.1, service pack 1 (note: the \"HalDispatchTable\" process within the target module (user space) return -1;  calculate the address of \"HalDispatchTable\" in kernel space  1. identify the base address of the target module in kernel space  2. RET 8 Return  allocate memory (RWE permissions) for the shellcode  in case of ERROR_INVALID_ADDRESS  Attempt to access invalid address  occurs since a fixed address is being reserved  in case of any other error else return -1;  copy the shellcode to the allocated memory  EXPLOIT", "qas": [{"answers": [{"answer_start": 124, "text": "the AFD  improperly validates input passed from user mode to the kernel"}], "question": "What is root cause?", "id": "40564-0", "is_impossible": false}, {"answers": [{"answer_start": 367, "text": "run arbitrary code in kernel mode"}], "question": "What is impact?", "id": "40564-1", "is_impossible": false}, {"answers": [{"answer_start": 154, "text": "input passed from user mode to the kernel"}], "question": "What is attack vector?", "id": "40564-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A local attacker may be able to exploit this issue to bypass access control and make restricted system calls, which may result in an elevation of privileges A buggy kernel will let the test do something, print, and exit 1; a fixed kernel will make it exit with SIGKILL before it does anything.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32829-0", "is_impossible": true}, {"answers": [{"answer_start": 54, "text": "bypass access control and make restricted system calls, which may result in an elevation of privileges"}], "question": "What is impact?", "id": "32829-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32829-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Attackers can leverage these issues to execute arbitrary code within the context of the vulnerable application. Failed attacks will likely cause denial-of-service conditions. MySQL 4.0.0 through 5.0.75 are vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33077-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "execute arbitrary code within the context of the vulnerable application"}], "question": "What is impact?", "id": "33077-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33077-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability is due to improper bounds checking when copying data to local buffers. An attacker can exploit this vulnerability by sending an overly long request to the vulnerable server. This will trigger the buffer overflow condition, resulting in memory corruption. Ovewriting sensitive memory with malicious values may allow an attacker to execute arbitrary code on the target system.", "qas": [{"answers": [{"answer_start": 28, "text": "improper bounds checking when copying data to local buffers"}], "question": "What is root cause?", "id": "22033-0", "is_impossible": false}, {"answers": [{"answer_start": 254, "text": "memory corruption"}], "question": "What is impact?", "id": "22033-1", "is_impossible": false}, {"answers": [{"answer_start": 135, "text": "sending an overly long request to the vulnerable server"}], "question": "What is attack vector?", "id": "22033-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The file that causes the AV is attached:", "qas": [{"answers": [], "question": "What is root cause?", "id": "29707-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "29707-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "29707-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Beyond Remote 2.2.5.3  Denial of Service (PoC)  Steps to Reproduce: Run the python exploit script, it will create a new file  file with the name \"mre.txt\". Copy the content of the new file \"mre.txt\" than click \"Update Options\" than  click \"Proxy Settings\" Paste the content into field \"Proxy Password\" click \"OK\"  It will cause the DOS situation.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45457-0", "is_impossible": true}, {"answers": [{"answer_start": 23, "text": "Denial of Service"}], "question": "What is impact?", "id": "45457-1", "is_impossible": false}, {"answers": [{"answer_start": 256, "text": "Paste the content into field \"Proxy Password\""}], "question": "What is attack vector?", "id": "45457-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "package Msf::Exploit::novell_messenger_acceptlang; use strict; use base \"Msf::Exploit\"; use Pex::Text; 'VHOST' => [0, 'DATA', 'The virtual host name of the server'], This module exploits a stack overflow in Novell GroupWise Messenger Server v2.0. To overwrite the return address on the stack, we must first pass a memcpy() operation that uses pointers we supply.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1679-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1679-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1679-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker who gains access to an unprivileged shellapplication executed  with the application runas An attacker who gains access to a service with flags INTERACT_WITH_DESKTOP  Due to an invalid keyboard input validation, its possible to send keys to any  application of the Desktop", "qas": [{"answers": [{"answer_start": 185, "text": "an invalid keyboard input validation"}], "question": "What is root cause?", "id": "1197-0", "is_impossible": false}, {"answers": [{"answer_start": 65, "text": "executed  with the application"}], "question": "What is impact?", "id": "1197-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1197-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: Tuniac 100723 Denial of Service Vulnerability  Import d4rk.m3u file , click play and then boooooooooom ;) my $jnk=\"http://\".", "qas": [{"answers": [], "question": "What is root cause?", "id": "14689-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "Denial of Service"}], "question": "What is impact?", "id": "14689-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "14689-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow vulnerability has been reported for Moby NetSuite that may result in a denial of service condition. An attacker can exploit this vulnerability by issuing a malformed POST request. When NetSuite attempts to service the malformed POST request, it will crash resulting in a denial of service. Restarting the service is neccessary to restore functionality.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22053-0", "is_impossible": true}, {"answers": [{"answer_start": 89, "text": "denial of service condition"}], "question": "What is impact?", "id": "22053-1", "is_impossible": false}, {"answers": [{"answer_start": 164, "text": "issuing a malformed POST request"}], "question": "What is attack vector?", "id": "22053-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Click on the link!!!\", $format);", "qas": [{"answers": [], "question": "What is root cause?", "id": "1927-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1927-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1927-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": ": you need a file of recorded music in .wav,and then open it with JetAudio and booom! use strict; use diagnostics; my $file= \"c:\\filerecorder.wav\" #the file must be recorded with music Greetz:", "qas": [{"answers": [], "question": "What is root cause?", "id": "9139-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9139-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9139-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Windows Media Player is prone to a remote memory-corruption vulnerability when handling specially crafted AVI files. An attacker can exploit this issue by enticing an unsuspecting user to open a malicious file with the vulnerable application. A successful exploit may allow arbitrary code to run in the context of the currently logged-in user. Windows Media Player 11 is vulnerable; other versions may also be affected. The vendor has not been able to replicate this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33770-0", "is_impossible": true}, {"answers": [{"answer_start": 284, "text": "arbitrary code to run in the context of the currently logged-in user"}], "question": "What is impact?", "id": "33770-1", "is_impossible": false}, {"answers": [{"answer_start": 98, "text": "specially crafted AVI files"}], "question": "What is attack vector?", "id": "33770-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If it is called with a number parameter, which is an object with valueOf defined, and this function frees the parent of the TextField parameter, the object is used after it is freed.", "qas": [{"answers": [{"answer_start": 91, "text": "function frees the parent of the TextField parameter, the object is used after it is freed"}], "question": "What is root cause?", "id": "39043-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "39043-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39043-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the LPC Zone allocated memory cannot handle the volume of messages received, then memory is transferred from the kernel to the LPC Zone. Under normal circumstances, the memory should be diverted back to the kernel from the LPC Zone once it is no longer in use. Reboot of the system is required in order to regain normal functionality.", "qas": [{"answers": [{"answer_start": 3, "text": "the LPC Zone allocated memory cannot handle the volume of messages received"}], "question": "What is root cause?", "id": "20255-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "20255-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "20255-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The default is 0  so you'll be out of luck most of the time So it is not going to be the script kiddies' new killer shit :)  if you invent a better way to escalate privileges by sending arbitrary signals to  the parent process \"Setting coredump limits and running the exploit...\\n\" touch /tmp/.a", "qas": [{"answers": [], "question": "What is root cause?", "id": "8369-0", "is_impossible": true}, {"answers": [{"answer_start": 155, "text": "escalate privileges"}], "question": "What is impact?", "id": "8369-1", "is_impossible": false}, {"answers": [{"answer_start": 178, "text": "sending arbitrary signals to  the parent process"}], "question": "What is attack vector?", "id": "8369-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Master of Orion III is reported prone to multiple remote denial of service vulnerabilities. These issues occur because the application does not handle exceptional conditions in a proper manner. 1.2.5 and prior versions are reportedly affected by these issues.", "qas": [{"answers": [{"answer_start": 119, "text": "the application does not handle exceptional conditions in a proper manner"}], "question": "What is root cause?", "id": "24708-0", "is_impossible": false}, {"answers": [{"answer_start": 57, "text": "denial of service"}], "question": "What is impact?", "id": "24708-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24708-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Suricata is developed by the OISF, its supporting vendors and the community Attack Description: If as a server side you break a normal TCP 3 way handshake packets order and inject some response data before 3whs is complete then data still will be received by the a client but some IDS engines may skip content checks on that. Attack scenario TCP flow scheme: Client <- [PSH, ACK] [Seq=1 Ack= 1] <- Evil Server # Injection before the 3whs is completed IDS signature checks for tcp stream or http response body will be skipped in the case of data injection. Successful exploitation leads to a complete TCP-Stream response or HTTP response signatures bypass and may be used to prevent malicious payloads from network detection. Timeline Summary: 2018-01-25: Issue submitted to the bug tracker. 2018-02-14: Suricata 4.0.4 containing the fix has been released.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44247-0", "is_impossible": true}, {"answers": [{"answer_start": 591, "text": "complete TCP-Stream response or HTTP response signatures bypass and may be used to prevent malicious payloads from network detection"}], "question": "What is impact?", "id": "44247-1", "is_impossible": false}, {"answers": [{"answer_start": 173, "text": "inject some response data before 3whs is complete"}], "question": "What is attack vector?", "id": "44247-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Negative height and width values cause a program crash (memory corruption) and SEH corruption. Remote code execution may be possible.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39518-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "program crash (memory corruption) and SEH corruption"}], "question": "What is impact?", "id": "39518-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "Negative height and width values"}], "question": "What is attack vector?", "id": "39518-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "These issues are due to boundary condition checking failures, access validation failures and failures to handle exceptional conditions. An attacker may leverage these issues to trigger a denial of service condition, execute arbitrary code, gain access to sensitive server files and rejoin a server that they have been banned from.", "qas": [{"answers": [{"answer_start": 24, "text": "boundary condition checking failures, access validation failures and failures to handle exceptional conditions"}], "question": "What is root cause?", "id": "24710-0", "is_impossible": false}, {"answers": [{"answer_start": 177, "text": "trigger a denial of service condition, execute arbitrary code, gain access to sensitive server files and rejoin a server that they have been banned from"}], "question": "What is impact?", "id": "24710-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24710-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Horde Framework and IMP are prone to a vulnerability that allows a local attacker to delete arbitrary files in the context of the user running the application. A successful attack can reduce the integrity of affected computers and may aid in further attacks. An attacker could exploit this issue by creating a file '/tmp/x /etc/passwd /tmpmswordx' and running the affected cron script. This will result in the deletion of '/tmp/x', '/etc/passwd', and '/tmp/mswordx'.", "qas": [{"answers": [], "question": "What is root cause?", "id": "29746-0", "is_impossible": true}, {"answers": [{"answer_start": 85, "text": "delete arbitrary files in the context of the user running the application"}], "question": "What is impact?", "id": "29746-1", "is_impossible": false}, {"answers": [{"answer_start": 299, "text": "creating a file '/tmp/x /etc/passwd /tmpmswordx' and running the affected cron script"}], "question": "What is attack vector?", "id": "29746-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "return false; if ( tail >= head )  Is there enough room at the end for the entry? iOS/MacOS kernel memory corruption due to integer overflow in IOHIDResourceQueue::enqueueReport IOHIDResourceQueue inherits from IOSharedDataQueue and adds its own ::enqueueReport method, which seems to be mostly copy-pasted from IOSharedDataQueue and IODataQueue's ::enqueue methods.", "qas": [{"answers": [{"answer_start": 124, "text": "integer overflow in IOHIDResourceQueue::enqueueReport"}], "question": "What is root cause?", "id": "45651-0", "is_impossible": false}, {"answers": [{"answer_start": 82, "text": "iOS/MacOS kernel memory corruption"}], "question": "What is impact?", "id": "45651-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "45651-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This is caused by the fact that the function operates (reads from and writes to) on memory well beyond of the dynamically allocated buffers, leading to a pool-based buffer overflow of controlled size and content, consequently allowing for remote code execution in the context of the Windows kernel. It appears that the culprit of the vulnerability is the lack of handling of a corner case explicitly mentioned in the \"The TrueType Instruction Set, Part 2\" specification [1]: \"This instruction operates on points in the glyph zone pointed to by zp2. Applying IUP to zone 0 is an error. It is easiest to reproduce with Special Pools enabled for win32k.sys (leading to an immediate crash when the bug is triggered), but it is also possible to observe a crash on a default Windows installation in the form of a crash in win32k!itrp_IUP or another location in kernel space, as caused by the corrupted pool state, depending on the specific testcase used. We have encountered a number of Windows kernel crashes in the win32k!itrp_IUP function (a handler of the IUP[] TTF program instruction) while processing corrupted TTF font files, such as: Invalid system memory was referenced.", "qas": [{"answers": [{"answer_start": 32, "text": "the function operates (reads from and writes to) on memory well beyond of the dynamically allocated buffers,"}], "question": "What is root cause?", "id": "37919-0", "is_impossible": false}, {"answers": [{"answer_start": 154, "text": "pool-based buffer overflow of controlled size and content, consequently allowing for remote code execution in the context of the Windows kernel"}], "question": "What is impact?", "id": "37919-1", "is_impossible": false}, {"answers": [{"answer_start": 882, "text": "the corrupted pool state"}], "question": "What is attack vector?", "id": "37919-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Apple Safari web browser is prone to a denial-of-service vulnerability when parsing certain malformed DHTML elements. An attacker can exploit this issue to crash an affected browser.", "qas": [{"answers": [], "question": "What is root cause?", "id": "28165-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "denial-of-service"}], "question": "What is impact?", "id": "28165-1", "is_impossible": false}, {"answers": [{"answer_start": 92, "text": "malformed DHTML elements"}], "question": "What is attack vector?", "id": "28165-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a vulnerability found in Windows Object Linking and Embedding (OLE) allowing arbitrary code execution, bypassing the patch MS14-060, for the vulnerability publicly known as \"Sandworm\", on systems with Python for Windows installed. Please keep in mind that some other setups such as those using Office 2010 SP1 may be less stable, and may end up with a crash due to a failure in the CPackage::CreateTempFileName function Haifei Li', # Vulnerability discovery and exploit technique ['Windows 7 SP1 with Python for Windows / Office 2010 SP2 / Office 2013', {}], end def exploit end unless File.directory?(file) end end  add the otherwise skipped \"hidden\" file  put our own OLE streams  create the ppsx end end file << contents end stm << data end end  write to disk end end", "qas": [{"answers": [{"answer_start": 386, "text": "a failure in the CPackage::CreateTempFileName function"}], "question": "What is root cause?", "id": "35235-0", "is_impossible": false}, {"answers": [{"answer_start": 98, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "35235-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "35235-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Msf::Exploit::Seh This module exploits a stack based buffer overflow in Any Sound Recorder 2.93, when with the name \"hack.txt\". Copy the content of the \"hack.txt\",Start Any Sound Recorder 2.93 click \"Enter Key Code\" Paste the content into field \"User Name\" click \"Register\" end def exploit handler end end", "qas": [{"answers": [], "question": "What is root cause?", "id": "45744-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45744-1", "is_impossible": true}, {"answers": [{"answer_start": 216, "text": "Paste the content into field \"User Name\""}], "question": "What is attack vector?", "id": "45744-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Successfully exploiting these issues will allow an attacker to execute arbitrary code with the privileges of the user running the affected application. Failed exploit attempts will likely crash the application.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30894-0", "is_impossible": true}, {"answers": [{"answer_start": 63, "text": "execute arbitrary code with the privileges of the user running the affected application"}], "question": "What is impact?", "id": "30894-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30894-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability that was abused  a total lack of bounds checking on memory bank mapping  was somewhat obvious. It\u2019s a full drive-by download in the context of Fedora. The strong reliability of this exploit makes it work inside Fedora\u2019s tracker-extract process, which has highly variable heap state that has frustrated my other exploit attempts. On Ubuntu, the faulty code is installed and on the attack surface by default, if you select the \u201cmp3\u201d option during install -- which I certainly always do. Of course, the gstreamer framework will happily offer to install gstreamer1-plugins-bad-free-extras, with a very nice UI, if the victim simply tries to open the relevant media file.", "qas": [{"answers": [{"answer_start": 358, "text": "the faulty code is installed and on the attack surface by default"}], "question": "What is root cause?", "id": "40943-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "40943-1", "is_impossible": true}, {"answers": [{"answer_start": 27, "text": "abused  a total lack of bounds checking on memory bank mapping"}], "question": "What is attack vector?", "id": "40943-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " User needs to change the following extension with the one mentioned above exploit = junk", "qas": [{"answers": [], "question": "What is root cause?", "id": "14587-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "14587-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "14587-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Msf::Exploit::Remote::Seh This module exploits a buffer overflow in Digital Music Pad Version 8.2.3.3.4 When opening a malicious pls file with the Digital Music Pad, a remote attacker could overflow a buffer and execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15134-0", "is_impossible": true}, {"answers": [{"answer_start": 190, "text": "overflow a buffer and execute arbitrary code"}], "question": "What is impact?", "id": "15134-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15134-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Shadow gap: cc To reproduce the issue: 1) apply new.patch to your webrtc directory 3) download the attached filed into the same directory Proof of Concept: Shadow bytes around the buggy address: 0x0c0c7fff8600:", "qas": [{"answers": [], "question": "What is root cause?", "id": "45443-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45443-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45443-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerable method uses a fixed size (128 bytes) heap-allocated buffer to copy the name of an arbitrary element. By setting the name of the element to something larger the buffer is overflown. The vulnerable code does something like this: The element_name is supplied by the user and can be more than 128 characters long. For example, loading the supplied POC in Preview or selecting the file in Finder and hitting <space> will trigger the bug.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38264-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "38264-1", "is_impossible": true}, {"answers": [{"answer_start": 22, "text": "uses a fixed size (128 bytes) heap-allocated buffer to copy the name of an arbitrary element"}], "question": "What is attack vector?", "id": "38264-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This time I should, however I have neither the time, nor the desire to do so. If IPv6 connectivity to a victim is possible (which is always the case on local networks), a fragmented packet with multiple but one large extension header leads to a complete freeze of the operating system. No log message or warning window is generated, nor is the system able to perform any task. Solution: Remove the Kaspersky Anti-Virus NDIS 6 Filter from all network interfaces or uninstall the Kaspersky software until a fix is provided. No feedback was given by Kaspersky, and the reminder contained a warning that without feedback the bug would be disclosed on this day. Kaspersky Internet Security 2013 (and any other Kaspersky product which includes the firewall funcionality) is susceptible to a remote system As of the 3rd March 2013, the bug is still unfixed. eth0) target is the IPv6 address of the victim (e.g", "qas": [{"answers": [], "question": "What is root cause?", "id": "24580-0", "is_impossible": true}, {"answers": [{"answer_start": 254, "text": "freeze of the operating system"}], "question": "What is impact?", "id": "24580-1", "is_impossible": false}, {"answers": [{"answer_start": 169, "text": "a fragmented packet with multiple but one large extension header"}], "question": "What is attack vector?", "id": "24580-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Caudium is reported prone to a remote denial of service vulnerability. Remote attackers may exploit this vulnerability to crash affected Web servers, denying service to legitimate users. Versions of Caudium prior to 1.4.4 RC2 are reported susceptible to this vulnerability.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24715-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "denial of service"}], "question": "What is impact?", "id": "24715-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24715-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "(i only care about the spoof bytes)  read the cookie  now send my response  print spoof bytes  now calculate checksum of spoof bytes for i in ${cookie}; do done  now send some random crap for padding.", "qas": [{"answers": [], "question": "What is root cause?", "id": "2444-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "2444-1", "is_impossible": true}, {"answers": [{"answer_start": 166, "text": "send some random crap for padding"}], "question": "What is attack vector?", "id": "2444-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " A remote attacker could send a specially crafted \"SAMLOGON\" domain  logon packet, possibly leading to the execution of arbitrary code with  elevated privileges. Note that this vulnerability is exploitable only  when domain logon support is enabled in Samba", "qas": [{"answers": [], "question": "What is root cause?", "id": "4732-0", "is_impossible": true}, {"answers": [{"answer_start": 103, "text": "the execution of arbitrary code with  elevated privileges"}], "question": "What is impact?", "id": "4732-1", "is_impossible": false}, {"answers": [{"answer_start": 25, "text": "send a specially crafted \"SAMLOGON\" domain  logon packet"}], "question": "What is attack vector?", "id": "4732-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Opera fix: The vulnerability was fixed in the latest release candidate Opera RC3 : In shortly time we can expect the final verion of Opera with the fix.", "qas": [{"answers": [], "question": "What is root cause?", "id": "10187-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "10187-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "10187-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "OpenBSD is vulnerable to a remotely exploitable denial of service condition. The problem seems to be a lack of limits on the storage of pending arp requests, and a failure to handle the condition of too many. If an attacker somehow causes a victim machine to send out too many arp requests, it can cause a kernel panic and the target system to halt. an attacker can send it spoofed packets with addresses of hosts within its network. If a sufficient number of arp requests are sent out, the kernel will panic with the message: \"out of space in kmem_map\" and freeze take a look at procsysnetipv4confdefaultrp_filter] network is the beginning of the network of the target_ip count is the number of hosts we spoof from returns the number of characters sent, or 1 if an error occured  for a local DoS", "qas": [{"answers": [{"answer_start": 101, "text": "a lack of limits on the storage of pending arp requests, and a failure to handle the condition of too many"}], "question": "What is root cause?", "id": "20271-0", "is_impossible": false}, {"answers": [{"answer_start": 48, "text": "denial of service"}], "question": "What is impact?", "id": "20271-1", "is_impossible": false}, {"answers": [{"answer_start": 232, "text": "causes a victim machine to send out too many arp requests"}], "question": "What is attack vector?", "id": "20271-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The NTP service supports a monitoring service  that allows administrators to query the server  for traffic counts of connected clients. The basic attack technique consists  of an attacker sending a \"get monlist\" request  to a vulnerable NTP server, with the source  address spoofed to be the victim\u2019s address By using these programs you accept the fact  that any damage (dataloss, system crash,  system compromise, etc.) caused by the use  of these programs is not Todor Donev's  Use at your own risk and educational use Socket; print \" print \"This script use RAW Socket.\\n\";  Main program sub main { my $packet;  IP Packet return $iphdr; 'n n n n', return $udphdr;  Response bit to 0, More bit to 0, Version field to 2, Mode field to 7   |  where the fields are (note that the client sends requests, the server  Response Bit: This packet is a response (if clear, packet is a request) my $request = 0x2a; # Request code is an implementation-specific code which specifies the  operation to be (which has been) performed andor the  format and semantics of the data included in the packet return $ntphdr;", "qas": [{"answers": [], "question": "What is root cause?", "id": "37562-0", "is_impossible": true}, {"answers": [{"answer_start": 388, "text": "crash"}], "question": "What is impact?", "id": "37562-1", "is_impossible": false}, {"answers": [{"answer_start": 188, "text": "sending a \"get monlist\" request  to a vulnerable NTP server, with the source  address spoofed to be the victim\u2019s address"}], "question": "What is attack vector?", "id": "37562-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Since tests \u201cin the wild\u201d have shown the attack to be real this advisory was released. The vulnerability allows remote unauthenticated attackers to force the IIS server to become unresponsive until the IIS service is restarted manually by the administrator. When the following ASP script is hosted by IIS the attacker can run the Dim variable This small script reads out a POST request argument from the client side. The exploit is simple: The attacker sends a POST request to the ASP site which reads out POST arguments. The IIS shows a \u201cService Unavailable\u201d response to requesting clients until the World Wide Web Publishing Service is restarted manually by the administrator. Affected Vendors Affected Products Only Microsoft IIS 6.0 was tested successfully On a Windows Server 2003 SP2 System Windows Server 2003 Standard SP2, Windows Server 2003 Standard SP1, Windows Server 2003 Standard SP0", "qas": [{"answers": [], "question": "What is root cause?", "id": "15167-0", "is_impossible": true}, {"answers": [{"answer_start": 148, "text": "force the IIS server to become unresponsive until the IIS service is restarted manually by the administrator"}], "question": "What is impact?", "id": "15167-1", "is_impossible": false}, {"answers": [{"answer_start": 277, "text": "ASP script"}], "question": "What is attack vector?", "id": "15167-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "DoS Multiple Files  Juke will Crash when you run this script to make  a file with any of the following extensions  Usage:", "qas": [{"answers": [], "question": "What is root cause?", "id": "12096-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "Crash"}], "question": "What is impact?", "id": "12096-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "12096-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow vulnerability has been reported in Pserv. The buffer overflow condition is due to the way Pserv handles data streams from remote connections. An attacker can exploit this vulnerability by issuing a HTTP request with an invalid HTTP version specifier. Due to insufficient buffers being allocated when processing the data, it may be possible to corrupt sensitive memory on the system stack.", "qas": [{"answers": [{"answer_start": 100, "text": "the way Pserv handles data streams from remote connections"}], "question": "What is root cause?", "id": "22056-0", "is_impossible": false}, {"answers": [{"answer_start": 361, "text": "corrupt sensitive memory on the system stack"}], "question": "What is impact?", "id": "22056-1", "is_impossible": false}, {"answers": [{"answer_start": 206, "text": "issuing a HTTP request with an invalid HTTP version specifier"}], "question": "What is attack vector?", "id": "22056-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Xilisoft Video Converter is prone to a stack-based buffer-overflow vulnerability because the application fails to perform adequate boundary checks on user-supplied input. Attackers may leverage this issue to execute arbitrary code in the context of the application. Failed attacks will cause denial-of-service conditions", "qas": [{"answers": [{"answer_start": 89, "text": "the application fails to perform adequate boundary checks on user-supplied input"}], "question": "What is root cause?", "id": "33775-0", "is_impossible": false}, {"answers": [{"answer_start": 208, "text": "execute arbitrary code in the context of the application"}], "question": "What is impact?", "id": "33775-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33775-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "602 LAN SUITE is reported prone to multiple remote denial of service vulnerabilities. The following specific issues are reported: It is reported that an attacker may consume CPU and memory resources on a target 602 LAN SUITE server. Reports indicate that this condition exists due to a lack of sanity checking prior to the allocation of regions of memory by the affected software. A remote attacker may exploit this vulnerability to consume system resources, ultimately impacting the performance of the target computer and potentially resulting in a denial of service. It is reported that the proxy does not perform sufficient sanity checks on the destination IP of a proxy request. A remote attacker may exploit this condition to exhaust all available sockets on a target computer that is running 602 LAN SUITE telnet proxy.", "qas": [{"answers": [{"answer_start": 284, "text": "a lack of sanity checking prior to the allocation of regions of memory by the affected software"}], "question": "What is root cause?", "id": "24726-0", "is_impossible": false}, {"answers": [{"answer_start": 51, "text": "denial of service"}], "question": "What is impact?", "id": "24726-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24726-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow vulnerability has been reported for Dr The vulnerability is due to insufficient bounds checking when processing folder names. An attacker is able to exploit this vulnerability by creating a malicious folder name of excessive length. When a virus scan is initiated, processing the folder name will trigger the buffer overflow condition. Successful exploitation of this issue will result in the execution of attacker-supplied code with the privileges of the Dr This vulnerability has been reported for Dr.", "qas": [{"answers": [{"answer_start": 85, "text": "insufficient bounds checking when processing folder names"}], "question": "What is root cause?", "id": "22328-0", "is_impossible": false}, {"answers": [{"answer_start": 323, "text": "the buffer overflow condition"}], "question": "What is impact?", "id": "22328-1", "is_impossible": false}, {"answers": [{"answer_start": 197, "text": "creating a malicious folder name of excessive length"}], "question": "What is attack vector?", "id": "22328-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "All Your Devices \u2013 You can use DirectPass password manager on Windows PCs, Android mobile, Android Tablet, iPads and iPhones, and all devices are automatically encrypted and synchronized using the cloud The Vulnerability Laboratory Research Team discovered multiple software vulnerabilities in the official Trend Micro DirectPass v1.5.0.1060 Software. The vulnerability allows local low privileged system user accounts to inject system specific commands or local path requests to compromise the software. The vulnerability is located in the direct-pass master password setup module of the Trend Micro InstallWorkspace.exe file. Exploitation of the vulnerability requires a low privilege system user account with direct-pass access and low or medium user interaction. Successful exploitation of the vulnerability results in software and system process compromise or execution of local system specific commands/path. The bug allows local attackers with low privileged system user account to implement/inject malicious script code on application side (persistent) of the software. To bypass the validation the and execute the injected script code the attacker needs to split (%20) the input request. Exploitation of the vulnerability requires medium user interaction and a low privilege system user account with direct-pass. Successful exploitation of the vulnerability can lead to persistent session hijacking (customers), persistent phishing, persistent external redirects to malware or scam and persistent web context manipulation of the affected vulnerable module. The bug allows local attackers with low privileged system user account to crash the software via pointer vulnerability. Successful exploitation of the denial of service vulnerability can lead to a software core crash and also stable software module hangups. [+] Master Password [+] Trend Micro DirectPass - All Affected OS: Proof of Concept: The code injection vulnerability can be exploited by local attackers with privileged system user account and medium or high user interaction. The persistent script code inject vulnerability can be exploited by local attackers with privileged system user account and medium or high user interaction. The pointer (DoS) vulnerability can be exploited by local attackers with privileged system user account and low, medium or high user interaction. The reproduce of the vulnerability can result in a permanent denial of service when the context is saved in the first instance and the save has been canceled. I was processing to load my debugger and attached it to the process when the request was sucessful and saved the address. After it i reproduced the same request with attached debugger and exploited the issue in the local cloud software mask. Then i was reviewing the changes and was able to use the injected frame test to see the location of the memory in the debugger. were the location of the password in the memory has been stored when the software is processing to redisplay the saved temp password. Both vulnerabilities can be patched by a secure parse or encode of the master password listing in the master password check module of the software. but the fixes will prevent the manually exploitation of the issue. To fix the issue in the software an update from the update-server is required after the install. The security risk of the pointer (DoS) software vulnerability is estimated as medium(-). Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission. The master password module of the software allows users to review the included password in the secound step for security reason. When the software is processing to display the hidden password in plain the command/path injection will be executed out of the not parsed master password context in in the field listing. The inserted context will be saved and the execution will be in the next step when processing to list the master password context in the last check module. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases or trade with fraud/stolen material.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25719-0", "is_impossible": true}, {"answers": [{"answer_start": 422, "text": "inject system specific commands or local path requests to compromise the software"}], "question": "What is impact?", "id": "25719-1", "is_impossible": false}, {"answers": [{"answer_start": 1166, "text": "split (%20) the input request"}], "question": "What is attack vector?", "id": "25719-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "RichFX Basic Player ActiveX Control is prone a buffer-overflow vulnerability because the application fails to perform adequate boundary checks on user-supplied data. Successfully exploiting these issues allows remote attackers to execute arbitrary code in the context of the application using the ActiveX control (typically Internet Explorer). Failed exploit attempts likely result in denial-of-service conditions.", "qas": [{"answers": [{"answer_start": 85, "text": "the application fails to perform adequate boundary checks on user-supplied data"}], "question": "What is root cause?", "id": "30805-0", "is_impossible": false}, {"answers": [{"answer_start": 85, "text": "the application fails to perform adequate boundary checks on user-supplied data"}], "question": "What is impact?", "id": "30805-1", "is_impossible": false}, {"answers": [{"answer_start": 293, "text": "the ActiveX control"}], "question": "What is attack vector?", "id": "30805-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Since the SetDestructuringAssignmentsScope method changes the scope from \"pos\" to the end of the list, it needs to call the RewindDestructuringAssignments method after fixing the scope.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44541-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "44541-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "44541-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue is due to a failure of the server application to properly sanitize user supplied network data. Ultimately this vulnerability could allow for execution of arbitrary code on the system implementing the affected server software, which would occur in the security context of the server process.", "qas": [{"answers": [{"answer_start": 21, "text": "a failure of the server application to properly sanitize user supplied network data"}], "question": "What is root cause?", "id": "23799-0", "is_impossible": false}, {"answers": [{"answer_start": 152, "text": "execution of arbitrary code on the system implementing the affected server software"}], "question": "What is impact?", "id": "23799-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23799-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "return true; If the previous section was a custom section, the check always returns true, even if the section is otherwise out of order. The attached html file causes a crash in Safari, the wasm file is attached as well. This particular use of the bug causes an overflow in the function vector. This leads to a number of possible overflows and type confusion bugs, as parsing assumes most sections are unique and in the right order.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44427-0", "is_impossible": true}, {"answers": [{"answer_start": 169, "text": "crash"}], "question": "What is impact?", "id": "44427-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "44427-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Subtract that number from 255  and use that TTL on the command line.", "qas": [{"answers": [], "question": "What is root cause?", "id": "59-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "59-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "59-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This script generates a POST header that makes PHP 5.4.0RC6 64 bit try to execute code at 0x1111111111111111 32bit requires you to create a fake 32bit Hashtable instead of a 64bit one Because this vulnerability also allows leaking memory addresses ASLR can be \"semi\"-defeated. This means around 4000 tries = 4000 requests = 4000 crashes are enough to bruteforce code addresses to execute arbitrary code despite ASLR/NX better exploit might be possible after deeper research + heap massage This specific attack only works if there is no Suhosin-Patch -> RHEL, CentOS (gdb) PHP 5.3.9 requires you to know the address of a writable address filled with NULL. c Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18460-0", "is_impossible": true}, {"answers": [{"answer_start": 381, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "18460-1", "is_impossible": false}, {"answers": [{"answer_start": 132, "text": "create a fake 32bit Hashtable"}], "question": "What is attack vector?", "id": "18460-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can leverage from this scenario to arbitrary code execution or denial of service attack. g First chance exceptions are reported before any exception handling.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15581-0", "is_impossible": true}, {"answers": [{"answer_start": 47, "text": "arbitrary code execution or denial of service attack"}], "question": "What is impact?", "id": "15581-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15581-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Python's 'imageop' module is prone to a buffer-overflow vulnerability. Successful exploits may allow attackers to execute arbitrary code in the context of applications using the vulnerable Python modules. Failed attempts may lead to a denial-of-service condition. These issues affect versions prior to Python 2.5.2-r6.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32534-0", "is_impossible": true}, {"answers": [{"answer_start": 114, "text": "execute arbitrary code in the context of applications"}], "question": "What is impact?", "id": "32534-1", "is_impossible": false}, {"answers": [{"answer_start": 174, "text": "the vulnerable Python modules"}], "question": "What is attack vector?", "id": "32534-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: Karaoke Video Creator Denial of Service Vulnerability close (myfile);", "qas": [{"answers": [], "question": "What is root cause?", "id": "14695-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "Denial of Service"}], "question": "What is impact?", "id": "14695-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "14695-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Battle Mages game server has been reported to be prone to a remote denial of service vulnerability. The issue is reported to present itself when the server receives incomplete client data. Specifically the affected server will attempt to read the expected data size infinitely until it is received, this may allow a remote attacker to tie up server resources and effectively deny service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23805-0", "is_impossible": true}, {"answers": [{"answer_start": 71, "text": "denial of service"}], "question": "What is impact?", "id": "23805-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23805-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This file contains XML code that tells Windows XP to use the XP controls. If XML code is modified, the associated application will not start, causing a denial of service. This issue could pose a more serious threat if the XML code associated with 'explorer.exe' is modified. If the 'explorer.exe.manifest' file is modified, then when the computer restarts, the system will hang and 'explorer.exe' will not load, causing a denial of service. Reportedly, the repair function will not resolve this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21240-0", "is_impossible": true}, {"answers": [{"answer_start": 152, "text": "denial of service"}], "question": "What is impact?", "id": "21240-1", "is_impossible": false}, {"answers": [{"answer_start": 247, "text": "'explorer.exe' is modified"}], "question": "What is attack vector?", "id": "21240-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability makes it possible for a local user to overwrite and corrupt files owned by the KFM user. KFM insecurely creates a directory to store Files beneath the directory can be created as symbolic links, making it possible to overwrite linked files.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20781-0", "is_impossible": true}, {"answers": [{"answer_start": 57, "text": "overwrite and corrupt files owned by the KFM user"}], "question": "What is impact?", "id": "20781-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20781-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This was already patched by the vendor silently.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19389-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "19389-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "19389-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Reports indicate that these issues facilitate format-string and buffer-overflow attacks. A remote attacker may leverage these vulnerabilities to trigger denial-of-service conditions or to execute arbitrary code to gain unauthorized access to a vulnerable computer. This would occur in the context of the application. 1.1.2 is reported vulnerable; other versions may be affected as well", "qas": [{"answers": [], "question": "What is root cause?", "id": "28775-0", "is_impossible": true}, {"answers": [{"answer_start": 145, "text": "trigger denial-of-service conditions or to execute arbitrary code to gain unauthorized access to a vulnerable computer"}], "question": "What is impact?", "id": "28775-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28775-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Apple security team confirmed this issue; 2016-03-22: Apple fixed this issue; 3) Technical details This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Apple QuickTime. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. By providing a malformed FPX file, an attacker is able to create controlled memory corruption, and execute code in the context of the current user.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39633-0", "is_impossible": true}, {"answers": [{"answer_start": 145, "text": "execute arbitrary code on vulnerable installations of Apple QuickTime"}], "question": "What is impact?", "id": "39633-1", "is_impossible": false}, {"answers": [{"answer_start": 351, "text": "providing a malformed FPX file"}], "question": "What is attack vector?", "id": "39633-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If the sharpness parameter is an object with valueOf set to a function which frees the TextField parent, it is used after it is freed.", "qas": [{"answers": [{"answer_start": 3, "text": "the sharpness parameter is an object with valueOf set to a function which frees the TextField parent"}], "question": "What is root cause?", "id": "39044-0", "is_impossible": false}, {"answers": [{"answer_start": 105, "text": "it is used after it is freed"}], "question": "What is impact?", "id": "39044-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39044-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "donotdelete.fla compiles to donotdelete.swf and contains the code that causes the use-after-free. To make the issue occur, put loadswf.swf and donotdelete.swf in the same folder on a webserver (the PoCs don't always work locally due to flash network sandboxing), and load loadswf.swf. In certain cases where a native AS2 class sets an internal variable, it can lead to a use-after-free if the variable is a SharedObject.", "qas": [{"answers": [], "question": "What is root cause?", "id": "37852-0", "is_impossible": true}, {"answers": [{"answer_start": 78, "text": "the use-after-free"}], "question": "What is impact?", "id": "37852-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37852-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported for Apple QuickTime/Darwin Streaming Server. Specifically, by specifying an extremely large value as an argument within an ANNOUNCE request, it is possible to trigger an unexpected calculation causing the server to crash. Although it has not been confirmed, it is speculated that this issue may be exploitable to corrupt memory.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22629-0", "is_impossible": true}, {"answers": [{"answer_start": 201, "text": "an unexpected calculation causing the server to crash"}], "question": "What is impact?", "id": "22629-1", "is_impossible": false}, {"answers": [{"answer_start": 96, "text": "specifying an extremely large value as an argument within an ANNOUNCE request"}], "question": "What is attack vector?", "id": "22629-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "When you create a file that contains 30k of A's with .mpga extension , and load it then play it from Switch Sound File converter , it crashs !!!", "qas": [{"answers": [], "question": "What is root cause?", "id": "10904-0", "is_impossible": true}, {"answers": [{"answer_start": 134, "text": "crashs"}], "question": "What is impact?", "id": "10904-1", "is_impossible": false}, {"answers": [{"answer_start": 9, "text": "create a file that contains 30k of A's with .mpga extension"}], "question": "What is attack vector?", "id": "10904-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack buffer overflow in gAlan 0.2.1 By creating a specially crafted galan file, an an attacker may be able to execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16664-0", "is_impossible": true}, {"answers": [{"answer_start": 134, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "16664-1", "is_impossible": false}, {"answers": [{"answer_start": 63, "text": "creating a specially crafted galan file"}], "question": "What is attack vector?", "id": "16664-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability exists in the InoculateIT Agent for MS Exchange that can allow a local attacker to pass a virus through both the agent and MS Exchange Server. There are reportedly numerous methods by which this can be accomplished, one of which is to remove the \"From:\" field in a infected message (MIME attachment included) and submit the message to the Exchange server. If different organizations are using MS Exchange Server and InoculateIT Agents (with MS IMC being used to send the messages) the following vulnerabilities can exist: If a message is sent with only an infected file in the body of the message and no text, the Inoculate IT Agents will not detect the virus. If a message contains embedded characters and an infected attachment, InoculateIT will not open the attachment for scanning. If a ruleset exists on the server whereby messages are directed to another mailbox, an infected file can bypass virus scanning. Get a message containing any infected attached MIME encoded file. Edit the file (I used MS Notepad.exe) and just remove the \"From: Remove this line: From: Test <Test@abc.com.br>", "qas": [{"answers": [], "question": "What is root cause?", "id": "20401-0", "is_impossible": true}, {"answers": [{"answer_start": 99, "text": "pass a virus through both the agent and MS Exchange Server"}], "question": "What is impact?", "id": "20401-1", "is_impossible": false}, {"answers": [{"answer_start": 251, "text": "remove the \"From:\" field in a infected message (MIME attachment included) and submit the message to the Exchange server"}], "question": "What is attack vector?", "id": "20401-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Vulnerabilities were discovered during a black box security assessment and therefore the vulnerability list should not be considered exhaustive. Memory corruption leading to free() of an attacker-controlled address Obi-2. Memory corruption leading to free() of an attacker-controlled address By providing a long URI (longer than 256 bytes) not containing a slash in a request, a pointer is overwritten which is later passed to free(). By controlling the location of the pointer, this would allow an attacker to affect control flow and gain control of the application. Note that the free() seems to occur during cleanup of the request, as a 404 is returned to the user before the segmentation fault. Denial of Service due to buffer overflow By providing a long URI (longer than 256 bytes) beginning with a slash, memory is overwritten beyond the end of mapped memory, leading to a crash. Though no exploitable behavior was observed, it is believed that memory containing information relevant to the request or control flow is likely overwritten in the process. strcpy() appears to write past the end of the stack for the current thread, but it does not appear that there are saved link registers on the stack for the devices under test. In formatting the message for the Unix socket, a new string is constructed on the stack. The only vectors leading to this code that were discovered during the assessment were authenticated, however unauthenticated code paths may exist. Combined with the command injection vector in ObiPhone-3, this would allow a remote attacker to execute arbitrary shell commands on the phone, provided the current browser session was logged-in to the Obi-6. The application does not verify that the nonce received is the one it sent   The application does not verify that the nc value does not repeat or go backwards Host: foo Connection: close HTTP/1.1 200 OK Connection: close Please note that the realm, nonce, cnonce, and nc values have all been chosen and the response generated offline. Invalid pointer dereference due to invalid header Sending an invalid HTTP Authorization header, such as \"Authorization: foo\", causes the program to attempt to read from an invalid memory address, leading to a segmentation fault and reboot of the device. This requires no authentication, only access to the network to which the device is Host: foo Authorization: foo This causes the server to dereference the address 0xFFFFFFFF, presumably returned as a -1 error code. This requires no authentication, only access to the network to which the device is connected. The issues were discovered by David Tomaschik of the Google Security Team. An authenticated user (including the lower-privileged \"user\" user) can enter a hidden network name similar to \"$(/usr/sbin/telnetd &)\", which starts the telnet Host: foo Note that telnetd is now running and accessible via user \"root\" with This appears to write a constant value of 0 to an address controlled by the Content-Length parameter, but since it appears to be relative to a freshly mapped page of memory (perhaps via mmap() or malloc()), it does not appear this can be used to gain control of the application.", "qas": [{"answers": [{"answer_start": 728, "text": "buffer overflow"}], "question": "What is root cause?", "id": "40289-0", "is_impossible": false}, {"answers": [{"answer_start": 383, "text": "pointer is overwritten which is later passed to free()"}], "question": "What is impact?", "id": "40289-1", "is_impossible": false}, {"answers": [{"answer_start": 299, "text": "providing a long URI (longer than 256 bytes) not containing a slash in a request"}], "question": "What is attack vector?", "id": "40289-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The part of the server running on this port uses a static buffer of 0x119 bytes to handle the incoming data so all the vulnerabilities explained below can be exploited using these fixed addresses. Then the exception handler used by the server allows to perform many attempts without altering the normal work of the program. _TCPIPS_BinOpenFileFP stack overflow E] Directory traversal Through opcode 0x78 is possible to open any file on the disk where it's running the server and with 0x96/0x97/0x98 is possible to read its The opcodes used for the file operations specify a 32bit number that is the element of the array returned by the server while opening the file and so it can be used to load a file pointer outside the array (stream lock table PUSH DWORD PTR DS:[EBX*4+5B0024]) and maybe reaching EnterCriticalSection with an arbitrary value: Anyway exploiting a similar bug is very theoretical because it's hard to bypass all the obstacles for using the own 32bit value with The lack of checks on the return value of the realloc function used by the software allows to put a 0x00 byte outside the existent buffer if the specified size to reallocate is negative or unallocable: 40004F47 58 POP EAX 3) Db@TDataSet@Close$qqrv code execution C] DbiSetToRecordNo code execution D] DbiGetRecordCount code execution B] @Db@TDataSet@Close$qqrv code execution C] DbiSetToRecordNo code execution D]", "qas": [{"answers": [], "question": "What is root cause?", "id": "19409-0", "is_impossible": true}, {"answers": [{"answer_start": 1228, "text": "code execution"}], "question": "What is impact?", "id": "19409-1", "is_impossible": false}, {"answers": [{"answer_start": 168, "text": "using these fixed addresses"}], "question": "What is attack vector?", "id": "19409-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, an attacker may be able to cause a denial of service to legitimate users of the HTTP service. It has been reported that the HTTP Stack distributed with Novell Netware and eDirectory does not properly handle some types of malformed packets.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22749-0", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "cause a denial of service to legitimate users of the HTTP service"}], "question": "What is impact?", "id": "22749-1", "is_impossible": false}, {"answers": [{"answer_start": 238, "text": "malformed packets"}], "question": "What is attack vector?", "id": "22749-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "strcpy(CIFFile,argv[1]); If the first argument is 80 characters or less, nothing happens, but if we put from 81 onwards the program fails with a Buffer Overflow To test the code use Python 3.6+ from os import system from sys import argv Output Example:  buffer overflow detected : ciftokic terminated", "qas": [{"answers": [], "question": "What is root cause?", "id": "47445-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "47445-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "47445-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack buffer overflow in Apple ITunes 4.7 build 4.7.0.42. By creating a URL link to a malicious PLS file, a remote attacker could overflow a buffer and execute arbitrary code. When using this module, be sure to set the URIPATH with an extension of '.pls'. the payload  Build the HTML content print_status(\"Sending exploit to #{cli.peerhost}:#{cli.peerport}...\")  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "16562-0", "is_impossible": true}, {"answers": [{"answer_start": 153, "text": "overflow a buffer and execute arbitrary cod"}], "question": "What is impact?", "id": "16562-1", "is_impossible": false}, {"answers": [{"answer_start": 84, "text": "creating a URL link to a malicious PLS file"}], "question": "What is attack vector?", "id": "16562-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "OpenBSD and NetBSD are prone to a denial-of-service vulnerability because they fail to properly parse format strings to the 'printf(1)' function. An attacker can exploit this issue to cause applications using the vulnerable call to crash with a segmentation fault, denying service to legitimate users.", "qas": [{"answers": [{"answer_start": 79, "text": "fail to properly parse format strings to the 'printf(1)' function"}], "question": "What is root cause?", "id": "33318-0", "is_impossible": false}, {"answers": [{"answer_start": 34, "text": "denial-of-service"}], "question": "What is impact?", "id": "33318-1", "is_impossible": false}, {"answers": [{"answer_start": 203, "text": "using the vulnerable call to crash with a segmentation fault"}], "question": "What is attack vector?", "id": "33318-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A problem with the package could lead to a local user gaining elevated privileges. db_loader does not correctly handle input from a user's TERM environment variable, making it possible for a local user to execute arbitrary code when 550 bytes of data is placed in TERM. Since the db_loader program is setuid root, this problem can result in a local user gaining administrative access on a vulnerable system Fill the rest of the buffer with 'A'   Butt in the return address   ", "qas": [{"answers": [], "question": "What is root cause?", "id": "21150-0", "is_impossible": true}, {"answers": [{"answer_start": 54, "text": "gaining elevated privileges"}], "question": "What is impact?", "id": "21150-1", "is_impossible": false}, {"answers": [{"answer_start": 233, "text": "550 bytes of data is placed in TERM"}], "question": "What is attack vector?", "id": "21150-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been discovered in Multitech RouteFinder 550 VPN firmware release 4.63 and earlier. By passing excessive data to the device it may be possible for a remote attacker to corrupt memory. Successful exploitation of this bug may result in a denial of service, causing the device to crash. Although it has not been confirmed, it may also be possible for an attacker to exploit this issue to execute arbitrary commands.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22345-0", "is_impossible": true}, {"answers": [{"answer_start": 188, "text": "corrupt memory"}], "question": "What is impact?", "id": "22345-1", "is_impossible": false}, {"answers": [{"answer_start": 107, "text": "passing excessive data to the device"}], "question": "What is attack vector?", "id": "22345-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Perl Net::DNS module is prone to a remote denial-of-service vulnerability because the module fails to properly handle malformed DNS responses. Successfully exploiting this issue allows attackers to crash applications that use the affected module. Net::DNS 0.60 is vulnerable; other versions may also be affected", "qas": [{"answers": [{"answer_start": 86, "text": "the module fails to properly handle malformed DNS responses"}], "question": "What is root cause?", "id": "30895-0", "is_impossible": false}, {"answers": [{"answer_start": 46, "text": "denial-of-service"}], "question": "What is impact?", "id": "30895-1", "is_impossible": false}, {"answers": [{"answer_start": 122, "text": "malformed DNS responses"}], "question": "What is attack vector?", "id": "30895-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "# <===== this trigger the vulnerability  evil evil packet  Example & Info  Sending evil packet   Segmentation fault  Debug info  Program received signal SIGSEGV, Segmentation fault ack,  sequence number of last packet received from other end  data_len;  length of data buffer  uint16_t seq_no,  sequence number of this packet  id_no;  id number, used to separate different tunnels from each other  char data[0];  optional data buffer  build packet state='CCCC'", "qas": [{"answers": [], "question": "What is root cause?", "id": "19987-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "19987-1", "is_impossible": true}, {"answers": [{"answer_start": 75, "text": "Sending evil packet"}], "question": "What is attack vector?", "id": "19987-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "note : this vulnerabities is just for educational purpose and showing vulnerability exist so author will be not be responsible for any damage using this vulnerabilty. in linux when you want open a directory for example php directory you need to go to /usr/bin/php and you can't use \\usr\\bin\\php .", "qas": [{"answers": [], "question": "What is root cause?", "id": "8799-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8799-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8799-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "ArGoSoft Mail Server has been reported prone to a denial of service condition when handling multiple GET requests, in rapid succession. An attacker may exploit this condition to effectively deny service to legitimate ArGoSoft Mail server users until the service is restarted", "qas": [{"answers": [], "question": "What is root cause?", "id": "22757-0", "is_impossible": true}, {"answers": [{"answer_start": 50, "text": "denial of service"}], "question": "What is impact?", "id": "22757-1", "is_impossible": false}, {"answers": [{"answer_start": 83, "text": "handling multiple GET requests, in rapid succession"}], "question": "What is attack vector?", "id": "22757-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Ironically, this command is being used for \"Protection Buffer Size\"  The PBSZ command in CoreFTP only allows for a certain length of the string to be vulnerable to a DoS Start the service or click \"Start\"    No need to add users or set anything specific: just run the script and watch it crash  Crash as service:    This script triggers the DoS and filling ECX with the intented buffer", "qas": [{"answers": [], "question": "What is root cause?", "id": "46532-0", "is_impossible": true}, {"answers": [{"answer_start": 166, "text": "DoS"}], "question": "What is impact?", "id": "46532-1", "is_impossible": false}, {"answers": [{"answer_start": 113, "text": "a certain length of the string"}], "question": "What is attack vector?", "id": "46532-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Local attackers can exploit this issue to execute arbitrary code with superuser privileges. Failed attacks will likely cause denial-of-service conditions", "qas": [{"answers": [], "question": "What is root cause?", "id": "30399-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "execute arbitrary code with superuser privileges"}], "question": "What is impact?", "id": "30399-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30399-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A remote denial of service vulnerability affects SecureAction Research Secure Network Messenger. This issue is due to a failure of the application to properly handle exceptional network data. An attacker may leverage this issue to cause a computer running the vulnerable application to crash, denying service to legitimate users. use IO::Socket; print (\"\\nSecure Network Messenger Crasher by ClearScreen\\n\"); print (\"\\nEnter host to crash: \"); chomp $h; ) or die \"\\nNo response from host.\"; sleep 1; print \"\\nSuccesfully connected to $h!\\n\"; close $socks;", "qas": [{"answers": [{"answer_start": 118, "text": "a failure of the application to properly handle exceptional network data"}], "question": "What is root cause?", "id": "24733-0", "is_impossible": false}, {"answers": [{"answer_start": 9, "text": "denial of service"}], "question": "What is impact?", "id": "24733-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24733-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that Microsoft Internet Explorer is prone to a vulnerability that may allow an attacker to cause a denial of service condition in the software. The problem occurs due to improper handling of scrollbar-base-color attribute of the div object. Successful exploitation of this issue may allow an attacker to create a webpage containing malicious script code that would cause a user's browser to crash upon visiting the site. Microsoft Internet Explorer 6.0 has been reported to be vulnerable to this issue, however other versions may be affected as well.", "qas": [{"answers": [{"answer_start": 191, "text": "improper handling of scrollbar-base-color attribute of the div object"}], "question": "What is root cause?", "id": "23273-0", "is_impossible": false}, {"answers": [{"answer_start": 112, "text": "cause a denial of service condition in the software"}], "question": "What is impact?", "id": "23273-1", "is_impossible": false}, {"answers": [{"answer_start": 325, "text": "create a webpage containing malicious script code"}], "question": "What is attack vector?", "id": "23273-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability is caused due to the \"Free_All_Memory()\" function not properly setting certain decoder elements to NULL after freeing them, which can be exploited to cause a double-free condition via specially crafted FPX images.", "qas": [{"answers": [{"answer_start": 35, "text": "the \"Free_All_Memory()\" function not properly setting certain decoder elements to NULL after freeing them"}], "question": "What is root cause?", "id": "18256-0", "is_impossible": false}, {"answers": [{"answer_start": 176, "text": "double-free condition"}], "question": "What is impact?", "id": "18256-1", "is_impossible": false}, {"answers": [{"answer_start": 202, "text": "specially crafted FPX images"}], "question": "What is attack vector?", "id": "18256-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits the vulnerability in mrxdav.sys described by MS16-016. The module will spawn a process on the target system and elevate it's privileges to NT AUTHORITY\\SYSTEM before executing the specified payload within the context of the elevated process Exploit::CheckCode::Safe end end def exploit if is_system? end print_status(\"Launching notepad to host the exploit...\") begin rescue Rex::Post::Meterpreter::RequestError print_status(\"Operation failed.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40085-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40085-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40085-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Local Crash PoC By SirGod Loading a corrupt save file(spider.sav) will result in a local crash of Spider Solitaire $username=\"pwn\"; //Replace with your computer username $junk=\"Spider Solitaire Local Crash\"; else echo \"File succesfully copied.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9971-0", "is_impossible": true}, {"answers": [{"answer_start": 83, "text": "local crash of Spider Solitair"}], "question": "What is impact?", "id": "9971-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "9971-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft DebugDiag 'CrashHangExt.dll' ActiveX control is prone to a denial-of-service vulnerability because of a NULL-pointer dereference error. A successful attack allows a remote attacker to crash the application using the ActiveX control (typically Internet Explorer), denying further service to legitimate users. Microsoft DebugDiag 1.0 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 112, "text": "a NULL-pointer dereference error"}], "question": "What is root cause?", "id": "32550-0", "is_impossible": false}, {"answers": [{"answer_start": 69, "text": "denial-of-service"}], "question": "What is impact?", "id": "32550-1", "is_impossible": false}, {"answers": [{"answer_start": 216, "text": "using the ActiveX control (typically Internet Explorer)"}], "question": "What is attack vector?", "id": "32550-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This code gets released due to another post to the Bugtraq mailing list", "qas": [{"answers": [], "question": "What is root cause?", "id": "270-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "270-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "270-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack-based buffer overflow vulnerability in Easy CD-DA Recorder 2007, caused by a long string in a playlist entry. file, a remote attacker could execute arbitrary code on the system or cause the application to crash. end end def exploit  Create the file end end By persuading the victim to open a specially-crafted .PLS", "qas": [{"answers": [], "question": "What is root cause?", "id": "31643-0", "is_impossible": true}, {"answers": [{"answer_start": 169, "text": "execute arbitrary code on the system or cause the application to crash"}], "question": "What is impact?", "id": "31643-1", "is_impossible": false}, {"answers": [{"answer_start": 104, "text": "a long string in a playlist entry"}], "question": "What is attack vector?", "id": "31643-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "and .bdi files will crash the application too!", "qas": [{"answers": [], "question": "What is root cause?", "id": "14698-0", "is_impossible": true}, {"answers": [{"answer_start": 20, "text": "crash the application"}], "question": "What is impact?", "id": "14698-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "14698-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The sctp_process_unk_param function in net/sctp/sm_make_chunk.c in the Linux kernel 2.6.33.3 and earlier, when SCTP is enabled, allows remote attackers to cause a denial of service (system crash) via an SCTPChunkInit packet containing multiple invalid parameters that require a large amount of error data.", "qas": [{"answers": [], "question": "What is root cause?", "id": "14594-0", "is_impossible": true}, {"answers": [{"answer_start": 155, "text": "cause a denial of service (system crash)"}], "question": "What is impact?", "id": "14594-1", "is_impossible": false}, {"answers": [{"answer_start": 200, "text": "an SCTPChunkInit packet containing multiple invalid parameters that require a large amount of error data"}], "question": "What is attack vector?", "id": "14594-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that tcpdump is vulnerable to a denial of service when some packet types are received. By sending a maliciously formatted packet to a system using a vulnerable version of tcpdump, it is possible for a remote user to cause tcpdump to ignore network traffic from the time the packet is received until the application is terminated and restarted.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22352-0", "is_impossible": true}, {"answers": [{"answer_start": 53, "text": "denial of service"}], "question": "What is impact?", "id": "22352-1", "is_impossible": false}, {"answers": [{"answer_start": 111, "text": "sending a maliciously formatted packet to a system using a vulnerable version of tcpdump"}], "question": "What is attack vector?", "id": "22352-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Facebook for iPhone persistent XSS Facebook application for iPhone is not encoding special characters in Notes detail Adding this code in a note will freeze application:", "qas": [{"answers": [], "question": "What is root cause?", "id": "10947-0", "is_impossible": true}, {"answers": [{"answer_start": 150, "text": "freeze application"}], "question": "What is impact?", "id": "10947-1", "is_impossible": false}, {"answers": [{"answer_start": 83, "text": "special characters"}], "question": "What is attack vector?", "id": "10947-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The issue is triggered when an array is concatenated to itself via fromstring() call: return Py_None; In most cases when this occurs, the function behaves as expected; while the dangling str pointer is technically pointing to deallocated memory, given the timing it is highly likely the memory contains the expected data. In applications that expose otherwise innocuous indirect object control of arrays as attack surface, it may be possible for an attacker to trigger the corruption of arrays. To fix the issue, array_fromstring should check if self->ob_item is pointing to the same memory as str, and handle the copy accordingly. The output should look something like this: In some applications, such as those that are web-based, similar circumstances may manifest that would allow for remote exploitation.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38616-0", "is_impossible": true}, {"answers": [{"answer_start": 469, "text": "the corruption of arrays"}], "question": "What is impact?", "id": "38616-1", "is_impossible": false}, {"answers": [{"answer_start": 67, "text": "fromstring() call"}], "question": "What is attack vector?", "id": "38616-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This is achieved if a user sends numerous empty TCP packets to a host on port 139. Successful exploitation of this vulnerability could render the system useless. This is a reference internet checksum implimentation, not very fast   Our algorithm is simple, using a 32 bit accumulator (sum), we add  sequential 16 bit words to it, and at the end, fold back all the  carry bits from the top 16 bits into the lower 16 bits", "qas": [{"answers": [], "question": "What is root cause?", "id": "21245-0", "is_impossible": true}, {"answers": [{"answer_start": 135, "text": "render the system useless"}], "question": "What is impact?", "id": "21245-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21245-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "While answering to a client's logon request, the vault discloses around 50 bytes of its memory to the client. In this case, \"Logon\" is invoked for the user \"PacliScriptUser\". RedTeam Pentesting discovered that the message sent by the vault in response to a \"Logon\" command contains about 50 bytes of the vault's Proof of Concept To trigger the vulnerability, a previously captured logon message is sent to the vault using netcat: Ncat: Connected to 10.0.0.5:1858 Starting at offset 0xe0, the vault discloses a total of 49 bytes of its memory to the client. This vulnerability is rated as a high risk. Although each request only discloses about 50 bytes of memory, sustained exploitation will likely reveal sensitive information at some point in time. Various clients, such as web applications or command line tools, are provided by CyberArk to interface with a vault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44428-0", "is_impossible": true}, {"answers": [{"answer_start": 699, "text": "reveal sensitive information at some point in time"}], "question": "What is impact?", "id": "44428-1", "is_impossible": false}, {"answers": [{"answer_start": 210, "text": "the message sent by the vault in response to a \"Logon\" command contains about 50 bytes of the vault's"}], "question": "What is attack vector?", "id": "44428-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This module is useful for post exploitation of ZPanel vulnerabilities, where typically web server privileges are acquired, and this user is allowed to execute zsudo on the sudoers file. CheckCode::Unknown end def exploit   Using this way of writing the payload to avoid issues when failing to find  a command on the victim for writing binary data else end This module abuses the zsudo binary, installed with zpanel, to escalate privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26451-0", "is_impossible": true}, {"answers": [{"answer_start": 419, "text": "escalate privileges"}], "question": "What is impact?", "id": "26451-1", "is_impossible": false}, {"answers": [{"answer_start": 368, "text": "abuses the zsudo binary, installed with zpanel"}], "question": "What is attack vector?", "id": "26451-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "KDE Konqueror is prone to a remote denial-of-service vulnerability because of an error in KDE's JavaScript implementation. An attacker may exploit this vulnerability to cause Konquerer to crash, resulting in denial-of-service conditions. Konqueror included with KDE version 3.5.5 is vulnerable; other versions may also be affected. Simply load this file in Konqueror.", "qas": [{"answers": [{"answer_start": 78, "text": "an error in KDE's JavaScript implementation"}], "question": "What is root cause?", "id": "29713-0", "is_impossible": false}, {"answers": [{"answer_start": 35, "text": "denial-of-service"}], "question": "What is impact?", "id": "29713-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "29713-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "21 user pass 1 or read for more information", "qas": [{"answers": [], "question": "What is root cause?", "id": "16270-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16270-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16270-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Allowing low privileged users to execute arbitrary code in the security context of ANY other users with elevated privileges on the affected system. Any user (even guest) will be able to replace, modify or change the file. This would allow an attacker the ability to inject code or replace the \"HPTouchSmartSyncCalReminderApp.exe\" executable and have it run in the context of the system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40636-0", "is_impossible": true}, {"answers": [{"answer_start": 33, "text": "execute arbitrary code in the security context of ANY other users with elevated privileges on the affected system"}], "question": "What is impact?", "id": "40636-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40636-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "From there, it can be extracted by an attacker by loading the SVG image into a canvas element. Shadow bytes around the buggy address: 0x0ff21a520c10: fa fa fa", "qas": [{"answers": [], "question": "What is root cause?", "id": "42072-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "42072-1", "is_impossible": true}, {"answers": [{"answer_start": 50, "text": "loading the SVG image into a canvas element"}], "question": "What is attack vector?", "id": "42072-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Shadow bytes around the buggy address: 0x0c088000bad0:", "qas": [{"answers": [], "question": "What is root cause?", "id": "39529-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39529-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39529-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability in Microsoft SharePoint Server could allow a remote attacker to make the server unavailable. The vulnerability is a result of the dependency SharePoint has in Microsoft. The exploit is done by sending a crafted request that contains an OData filter that triggers the vulnerability in Microsoft. Sending such request, will terminate the process that runs the server. If more than 10 malicious requests are sent in 5 minutes interval, the server will not recover and will be down until it is manually restarted.", "qas": [{"answers": [{"answer_start": 142, "text": "the dependency SharePoint has in Microsoft"}], "question": "What is root cause?", "id": "46101-0", "is_impossible": false}, {"answers": [{"answer_start": 80, "text": "make the server unavailable"}], "question": "What is impact?", "id": "46101-1", "is_impossible": false}, {"answers": [{"answer_start": 209, "text": "sending a crafted request that contains an OData filter"}], "question": "What is attack vector?", "id": "46101-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Multiple BSD distributions are prone to a memory-corruption vulnerability because the software fails to properly bounds-check data used as an array index. An attacker can exploit this issue to cause applications to crash with a segmentation fault, denying service to legitimate users. Given the nature of this issue, the attacker may also be able to run arbitrary code, but this has not been confirmed.", "qas": [{"answers": [{"answer_start": 82, "text": "the software fails to properly bounds-check data used as an array index"}], "question": "What is root cause?", "id": "33319-0", "is_impossible": false}, {"answers": [{"answer_start": 215, "text": "crash with a segmentation fault, denying service to legitimate users"}], "question": "What is impact?", "id": "33319-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33319-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer is prone to a denial-of-service vulnerability because it fails to handle ActiveX controls properly. This issue is triggered when an attacker convinces a victim user to activate a malicious ActiveX control. Remote attackers may exploit this issue to crash Internet Explorer, effectively denying service to legitimate users.", "qas": [{"answers": [{"answer_start": 85, "text": "fails to handle ActiveX controls properly"}], "question": "What is root cause?", "id": "28169-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "28169-1", "is_impossible": false}, {"answers": [{"answer_start": 169, "text": "convinces a victim user to activate a malicious ActiveX control"}], "question": "What is attack vector?", "id": "28169-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "() printf(\"Attempts to utilize the vulnerabilities described in:\\n\"); void patch_file(FILE *hfile, unsigned long offset)", "qas": [{"answers": [], "question": "What is root cause?", "id": "629-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "629-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "629-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The 'lighttpd' webserver is prone to a denial-of-service vulnerability. Remote attackers can exploit this issue to cause the application to hang, denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33591-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "denial-of-service"}], "question": "What is impact?", "id": "33591-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33591-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "There are two paths in this function, one that operates on 4 byte boundaries and one that operates on 8 byte boundaries depending on the last argument where true indicates an 8-byte boundary and false indicates a 4-byte boundary. Pseudocode for one path in the function is: do The issue here is that when dbcs_flag is false the 4 byte boundary version can actually process 8 bytes of the source buffer (cur_src is incremented twice) and the 8 byte version is capable of processing 16 bytes per iteration. The value in tmp is instead added to the contents of cur_dest.", "qas": [{"answers": [{"answer_start": 300, "text": "when dbcs_flag is false the 4 byte boundary version can actually process 8 bytes of the source buffer (cur_src is incremented twice) and the 8 byte version is capable of processing 16 bytes per iteration"}], "question": "What is root cause?", "id": "41419-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "41419-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "41419-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A successful attempt would require the local user to be able to insert their code in the system root path undetected by the OS or other security applications where it could potentially be executed during application startup or reboot.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40442-0", "is_impossible": true}, {"answers": [{"answer_start": 64, "text": "insert their code in the system root path"}], "question": "What is impact?", "id": "40442-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40442-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "package Msf::Exploit::hpux_ftpd_preauth_list; use base \"Msf::Exploit\"; use IO::Socket; use IO::Select; use strict; use Pex::Text; This exploit abuses an unpublished vulnerability in the HP-UX FTP service. This flaw allows an unauthenticated remote user to obtain directory listings from this server with the privileges of the root user. This vulnerability was silently patched by HP sometime between  None sub new { sub Exploit { my $r; $self->PrintLine(\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "1259-0", "is_impossible": true}, {"answers": [{"answer_start": 256, "text": "obtain directory listings from this server with the privileges of the root user"}], "question": "What is impact?", "id": "1259-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1259-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been discovered in WebBBS Pro, which may allow a remote attacker to trigger a denial of service condition in the WebBBS HTTP server. It has been reported that a remote attacker may cause the web server to throw an exception by making a malformed HTTP request.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22759-0", "is_impossible": true}, {"answers": [{"answer_start": 98, "text": "denial of service condition in the WebBBS HTTP server"}], "question": "What is impact?", "id": "22759-1", "is_impossible": false}, {"answers": [{"answer_start": 140, "text": "HTTP"}], "question": "What is attack vector?", "id": "22759-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of IBM Tivoli Directory Server. Authentication is not required to exploit this vulnerability. When the process receives an LDAP CRAM-MD5 packet, it uses libibmldap.dll to handle the allocation of a buffer for the packet data. A specially crafted packet can cause the ber_get_int function to allocate a buffer that is too small to fit the packet data, causing a subsequent stack-based buffer overflow. This can be leveraged by a remote attacker to execute arbitrary code under the context of the SYSTEM user.", "qas": [{"answers": [{"answer_start": 360, "text": "the ber_get_int function to allocate a buffer that is too small to fit the packet data"}], "question": "What is root cause?", "id": "17188-0", "is_impossible": false}, {"answers": [{"answer_start": 46, "text": "execute arbitrary code on vulnerable installations of IBM Tivoli Directory Server"}], "question": "What is impact?", "id": "17188-1", "is_impossible": false}, {"answers": [{"answer_start": 323, "text": "A specially crafted packet"}], "question": "What is attack vector?", "id": "17188-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported for myServer that may result in a denial of service condition. The vulnerability exists when myServer receives certain signals.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22774-0", "is_impossible": true}, {"answers": [{"answer_start": 68, "text": "denial of service condition"}], "question": "What is impact?", "id": "22774-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22774-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When this malicious file is opened with gv, the code would be executed in the security context of the user opening the file if  someone has been able to exploit the heap overflow in cfengine, please email  me and teach me something.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21872-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21872-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21872-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "provides a listing of users online and their activities. whodo' contains a buffer overflow which can be exploited to gain root privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20974-0", "is_impossible": true}, {"answers": [{"answer_start": 0, "text": "provides a listing of users online and their activities"}], "question": "What is impact?", "id": "20974-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20974-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "All the vulnerabilities below are exploitable by unauthenticated users and even via one single UDP packet making it possible to spoof it and bypassing any possible IP based filter on the server. They can be used to change practically any aspect of the server and the hosted virtual servers but obviously they require some permissions. The problem is that through this particular way (the standard port's channel) and before any login/join on the server (so just the first packet) The following is a list of commands that have been tested with success: some others channelgroup The following are some examples and scenarios: through this command is possible to configure the server/virtual server modifying any possible option like adding a custom join password, setting the number of max clients to zero so that nobody can join, changing the admin group, setting a custom filebase (the disk location where are saved all the avatars of the clients and other files), setting custom banners and host message, disable logs, disable uploads and downloads, change the server's port, retrieving all the IPs and \"suid\" of any client in the server through the setting of virtualserver_hostbanner_gfx_url and other things it's possible to use this command for sending a message to the main channel or to specific channels and clients from the user \"Server\", good for social engineering and flooding (clients will freeze in some cases) it's possible to delete and move the channels created by the users it's possible to kick and ban any client currently in the server and even unban any permanent and temporary ban or deleting the users from the database and so on this particular command spawns a dialog box on the client containing a message (annoyance) sends offline messages from the server (possible social engineering) these commands could be used for gaining more privileges anyway I have not understood and tested them much Note that, upon success, the output of the commands is not returned making the \"view-only\" commands available through this method (like version, permissionlist, clientgetids and the others) enough useless while a message is returned in case of errors and unavailable or incomplete commands. Note also that exist some commands not listed yet in the official ServerQuery manual because are commands used by the client for itself like clientsitereport, setwhisperlist and so on. Although \"serveredit\" is already a critical command I have not tested if it's possible to become superadmin (I mean to login in the server through a token or the TCP interface for administering it \"normally\" like a normal admin without using this vulnerability because \"serveredit\" is already a superadmin command) or causing more system damages like files reading and overwriting. It's also important to highlight the \"virtualserver_hostbanner_gfx_url\" parameter of \"serveredit\" because the client automatically loads that url at regular intervals or when it joins the server or each time it gets modified and http:// is not the only protocol handler that can be used (ftp://, file:// and any other one supported by the client's browser) so it \"could\" be used for exploiting particular clientside bugs (like freezing/crashing it with particular files) or for forcing the clients to exploit external web server vulnerabilities and other possible things. Some of the available TeamSpeak 3 commands used via the standard's port method cause various failed assertions on the server that will terminate silently. The following is the list of the commands and relative assertions: servernotifyunregister not implemented servernotifyregister event=server not implemented C] various NULL pointer dereferences Exactly as above except that the following are all NULL pointers that cause a crash of the server: 3) The Code 4) other commands Who knows a bit how the configuration of TeamSpeak works or has given a quick look to the manual can understand the dangerousness caused by the execution of some of these commands. the \"serveraddgroupclient\" command is the one for assigning superadmin privileges to users. Bugs First a small introduction and a little explanation about why the old From the major version 3.x TeamSpeak has completely changed the whole protocol used by the Standard Port (UDP 9987) adding encryption with variable ivec (uses libtomcrypt) and using 7 channels for each type of packet, like channel 2 for the commands packets.", "qas": [{"answers": [], "question": "What is root cause?", "id": "13959-0", "is_impossible": true}, {"answers": [{"answer_start": 128, "text": "spoof it and bypassing any possible IP based filter on the server"}], "question": "What is impact?", "id": "13959-1", "is_impossible": false}, {"answers": [{"answer_start": 84, "text": "one single UDP packet"}], "question": "What is attack vector?", "id": "13959-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Python Pickle module is provided to convert object variables into a serialized form (\"pickling\"), and later recover the data back into an object hierarchy (\"unpickling\"). A vulnerability has been reported in the Pickle implementation included with some versions of Python. Exploitation of this vulnerability will be highly dependent on a specific Python application which accepts a \"pickle\" string from an untrusted source.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21623-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21623-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21623-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Linux kernel is prone to a local denial-of-service vulnerability that affects the Kernel-based Virtual Machine (KVM). Attackers with local access to a guest operating system can exploit this issue to crash the host operating system. Successful exploits will deny service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33592-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "denial-of-service"}], "question": "What is impact?", "id": "33592-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33592-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "As a result, a malicious NASL script may be able to break outside of the established sandbox environment and execute arbitrary commands on the local system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22634-0", "is_impossible": true}, {"answers": [{"answer_start": 109, "text": "execute arbitrary commands on the local system"}], "question": "What is impact?", "id": "22634-1", "is_impossible": false}, {"answers": [{"answer_start": 13, "text": "a malicious NASL script"}], "question": "What is attack vector?", "id": "22634-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is reported that VPOP3 is reported prone to a remote denial of service vulnerability. This issue presents itself when an attacker issues a URI request containing a large value for the 'msglistlen' parameter to the web mail interface. VPOP3 2.0.0k is reported prone to this issue, however, it is likely that other versions are affected as well.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24305-0", "is_impossible": true}, {"answers": [{"answer_start": 56, "text": "denial of service"}], "question": "What is impact?", "id": "24305-1", "is_impossible": false}, {"answers": [{"answer_start": 140, "text": "a URI request containing a large value for the 'msglistlen' parameter to the web mail interface"}], "question": "What is attack vector?", "id": "24305-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "An issue has been reported in Xpede, which could lead to a compromise of user authentication information. Therefore if a user obtains access to cookies reisding on a system, he/she may be able to reveal authentication information of Xpede users", "qas": [{"answers": [], "question": "What is root cause?", "id": "21351-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21351-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21351-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Due to a problem dropping privileges completely before running user-specified post-processing commands in the Sendfile daemon, it may be possible for a local user to execute arbitrary commands with elevated privileges", "qas": [{"answers": [], "question": "What is root cause?", "id": "20795-0", "is_impossible": true}, {"answers": [{"answer_start": 55, "text": "running user-specified post-processing commands in the Sendfile daemon"}], "question": "What is impact?", "id": "20795-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20795-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "True This activex contains the \"SaveToFile\" which could be used to overwite arbitrary files on pc users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24319-0", "is_impossible": true}, {"answers": [{"answer_start": 67, "text": "overwite arbitrary files on pc users"}], "question": "What is impact?", "id": "24319-1", "is_impossible": false}, {"answers": [{"answer_start": 10, "text": "activex contains the \"SaveToFile\""}], "question": "What is attack vector?", "id": "24319-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This may cause a system to become unstable and crash, allowing a remote attacker to deny service to the system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22780-0", "is_impossible": true}, {"answers": [{"answer_start": 17, "text": "system to become unstable and crash, allowing a remote attacker to deny service to the system"}], "question": "What is impact?", "id": "22780-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22780-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Successfully exploiting this issue may allow an attacker to execute arbitrary code with the privileges of the user running the affected application.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32995-0", "is_impossible": true}, {"answers": [{"answer_start": 60, "text": "execute arbitrary code with the privileges of the user running the affected application"}], "question": "What is impact?", "id": "32995-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32995-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Exploitation of this vulnerability will be highly dependent on a specific Python application which accepts a pickle string from an untrusted source. module  Create the evil pickle  Show the user how it looks print repr(t)   Now, load the pickle  creates the file tmppythonisbuggy (by calling  the builtin open() function, then raises an exception.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21624-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21624-1", "is_impossible": true}, {"answers": [{"answer_start": 157, "text": "Create the evil pickle"}], "question": "What is attack vector?", "id": "21624-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "And you will see a crash !", "qas": [{"answers": [], "question": "What is root cause?", "id": "46338-0", "is_impossible": true}, {"answers": [{"answer_start": 19, "text": "crash"}], "question": "What is impact?", "id": "46338-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46338-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "There are two interesting background posts on CS_OWNDC and CS_CLASSDC here: Here is a minimal testcase: ATOM Atom; return 0; This might take a while to crash though, something has to cause the list to be traversed (e.g We can speed the process up by trying to get the allocation ourselves. First I need to know the size of a WND structure. This reliably crashes Windows 10 with version 10.0.15063.674, the crash looks like this: So let's dump the DC Cache and see what it looks like, an entry looks something like: HANDLE hDC;  Now dump the whole list:", "qas": [{"answers": [], "question": "What is root cause?", "id": "43446-0", "is_impossible": true}, {"answers": [{"answer_start": 152, "text": "crash"}], "question": "What is impact?", "id": "43446-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "43446-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overrun vulnerability has been reported for CesarFTP. When the issue is triggered, it may be possible to overwrite sensitive locations in memory. Although unconfirmed, it may be possible to exploit this issue to execute arbitrary code on a target system Now if you are lucky the server will crash:)\\n\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "22788-0", "is_impossible": true}, {"answers": [{"answer_start": 114, "text": "overwrite sensitive locations in memory"}], "question": "What is impact?", "id": "22788-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22788-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The issue reportedly presents itself when handling width and column display command line arguments. Additionally it has been reported that this vulnerability may be exploited in software that implements and invokes the vulnerable 'ls' utility to trigger a denial of service in the affected software", "qas": [{"answers": [], "question": "What is root cause?", "id": "23274-0", "is_impossible": true}, {"answers": [{"answer_start": 256, "text": "denial of service"}], "question": "What is impact?", "id": "23274-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23274-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The impact varies from null pointer dereference (no more memory,hence crashing the browser) to the reboot of the complete Operation System Ubuntu's memory management system appears to be configured as to NOT stop the process that consumes too much memory, but a random process. Some have not understood what this code does, it does NOT loop as some vendors claimed, it just calls select.lenght() ONCE with a huge integer. One might wonder if over the 9 last years that this bug existed, nobody ever entered a large number in a select.lenght() call. The language is widely used on the web, especially in the form of its three best-known II.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9160-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9160-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9160-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If an attacker sends a HTTP Request to port 8181 without waiting for a response the webserver crashes. The server can not response to the request anymore and dies. By default the service will always restart after a crash. So the poc will send the request until it will be stopped. Proof of Concept : use Socket; print \"\\nThe Webserver on http://$target:$port should be dead until\", \"this script is running\\n\"; print SOCKET \"GET /index.asp\"; print \"Request sent ...\\n\"; sleep 1; Vendor released a patch. The path will be available in Version 7.2 which will be released in ~2 weeks 2009.10.13: Ask for a list of affected versions/products and changed the release date to 2009.10.29.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9980-0", "is_impossible": true}, {"answers": [{"answer_start": 80, "text": "the webserver crashes"}], "question": "What is impact?", "id": "9980-1", "is_impossible": false}, {"answers": [{"answer_start": 21, "text": "a HTTP Request to port 8181 without waiting for a response"}], "question": "What is attack vector?", "id": "9980-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "When a Makefile is executed by pmake, certain user-defined variables can be set in the Makefile by the user. By supplying a format string in the check= field of the .SHELL variable, it is possible to write to an arbitrary memory address of the program. This could result in the overwriting of the return address, and execution of arbitrary code with root privileges construct write 'head':  brute force RET on the stack upon success printf(\"\\n\\tcreating shell in the environment\");  create env shell  phase 4: brute force printf(BD GR\"\\n\\nParadox, created suid shell at else {  failure else {  start target and read output else { return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "21158-0", "is_impossible": true}, {"answers": [{"answer_start": 200, "text": "write to an arbitrary memory address of the program"}], "question": "What is impact?", "id": "21158-1", "is_impossible": false}, {"answers": [{"answer_start": 38, "text": "certain user-defined variables"}], "question": "What is attack vector?", "id": "21158-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If the client has UID 0 but passes an invalid client port this code will drop a UREF on client port then return KERN_FAILURE. The TL;DR is that an attacker can drop an extra UREF on any send rights in kextd for which the attacker also has a send right; you could use this to cause a name for a privileged service to be deallocated then cause the name to be reused to name a port you control. Exploitation of this would be a privesc from unentitled root to root with which at least last time I looked was equal to kernel code execution.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44561-0", "is_impossible": true}, {"answers": [{"answer_start": 520, "text": "code execution"}], "question": "What is impact?", "id": "44561-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "44561-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This means we can cause two references to be dropped on the port when only one is held leading to a use after free in the kernel.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41791-0", "is_impossible": true}, {"answers": [{"answer_start": 100, "text": "use after free in the kernel"}], "question": "What is impact?", "id": "41791-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41791-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Several implementations of the Java Virtual Machine have been reported to be prone to a denial of service condition. This vulnerability occurs in several methods in the java.util.zip class.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22358-0", "is_impossible": true}, {"answers": [{"answer_start": 88, "text": "denial of service"}], "question": "What is impact?", "id": "22358-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22358-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Author: Anonymous Info: In ordinary cases browser would redirect to \"http:www.google.com\" but in this case browser will report error for something that should be possible and is possible on other browsers.", "qas": [{"answers": [], "question": "What is root cause?", "id": "10960-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "10960-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "10960-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been found in some Skybox View Appliances\u2019 Admin interfaces which would allow a potential malicious party to bypass the authentication mechanism and execute reboot and/or shutdown of appliance self Skybox Security has a complete portfolio of security management tools that deliver the security intelligence needed to act fast to minimize risks and eliminate attack vectors. It's possible to open and execute the reboot and shutdown script without autentication at the following links: VERSIONS AFFECTED Skybox View Appliances with ISO versions: 6.3.33-2.14, 6.3.31-2.14, Please refer to the vendor security advisor:", "qas": [{"answers": [], "question": "What is root cause?", "id": "33328-0", "is_impossible": true}, {"answers": [{"answer_start": 411, "text": "open and execute the reboot and shutdown script without autentication"}], "question": "What is impact?", "id": "33328-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33328-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When using SUN-DES-1 to share keys with other hosts on the network to facilitate secure communication via protocols such as NFS and NIS+, the keys are shared between hosts using the private key of the user and a cryptographic algorithm to secure the contents of the key, which is stored on the NIS+ primary. The problem occurs when the key is encrypted with the SUN-DES-1 magic phrase prior to having done a keylogin (the keyserv does not have the users DH private key). A step in the private key encryption process is skipped, and the users private key is then encrypted only with the public key of the target server and the SUN-DES-1 magic phrase, a phrase that is guessable due to the way it is generated. A user from the same host can then execute a function that returns another users magic phrase, and use this to decrypt the private key of the victim. This makes it possible for a user with malicious intent to gain knowledge of a users secret key, and decrypt sensitive traffic between two hosts, with the possibility of gaining access and elevated privileges on the hosts and/or NIS+ domain. A design flaw in the software that shares the key with the NIS+ master will inconsistently return the correct value for an attempted keyshare that has failed.", "qas": [{"answers": [{"answer_start": 332, "text": "the key is encrypted with the SUN-DES-1 magic phrase prior to having done a keylogin (the keyserv does not have the users DH private key)"}], "question": "What is root cause?", "id": "20560-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "20560-1", "is_impossible": true}, {"answers": [{"answer_start": 820, "text": "decrypt the private key of the victim"}], "question": "What is attack vector?", "id": "20560-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "NetNote server is reported prone to a remote denial of service vulnerability. This issue occurs because the application does not handle exceptional conditions properly. NetNote server 2.2 build 230 is reported vulnerable to this issue, however, it is likely that other versions are affected as well. The exploit crash the server.", "qas": [{"answers": [{"answer_start": 104, "text": "the application does not handle exceptional conditions properly"}], "question": "What is root cause?", "id": "24738-0", "is_impossible": false}, {"answers": [{"answer_start": 45, "text": "denial of service"}], "question": "What is impact?", "id": "24738-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24738-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "During mark and sweep the GC roots the vectors representing the JS stack as well as a few other hardcoded objects, traversing reachable objects from those roots then frees any unreachable objects. The problem is that this flag isn't a global GC disable flag, it only applies to this particular JsTree frame. If we can cause another JsTree to be run inside the callback which passes 0 for the gc disable flag then the script running under * a string which will cause a GC when executed. The final piece is to find a construct where native code has a JsObject pointer on the stack that is not being kept alive by other references reachable from GC roots. JsDelegateObject_StringProto::slice which implements the String.prototype.slice method has such a construct, in high-level pseudo-code the logic of the functions looks like this: the code continues and does something like this:  that ends up calling a virtual method on the free\u2019d this_str PoC zip file also attached which will trigger on Windows when decrypted with password \"nscriptgc\" the first PoC didn't return a string here so toString ended up being the string 'undefined'  if we do want to return a string object it has to have more than three characters", "qas": [{"answers": [], "question": "What is root cause?", "id": "42088-0", "is_impossible": true}, {"answers": [{"answer_start": 115, "text": "traversing reachable objects from those roots then frees any unreachable objects"}], "question": "What is impact?", "id": "42088-1", "is_impossible": false}, {"answers": [{"answer_start": 7, "text": "mark and sweep the GC roots the vectors representing the JS stack as well as a few other hardcoded objects"}], "question": "What is attack vector?", "id": "42088-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The issue in __lgto_svcauth_unix", "qas": [{"answers": [], "question": "What is root cause?", "id": "12109-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "12109-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "12109-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This causes memory corruption leading to possible arbitrary code execution upon opening a maliciously created .Fla", "qas": [{"answers": [], "question": "What is root cause?", "id": "40915-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "possible arbitrary code execution"}], "question": "What is impact?", "id": "40915-1", "is_impossible": false}, {"answers": [{"answer_start": 80, "text": "opening a maliciously created .Fla"}], "question": "What is attack vector?", "id": "40915-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Prishtina FTP client is allegedly prone to a denial of service vulnerability. As a result, a malicious attacker-controlled server may be used to crash a target users FTP client.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22637-0", "is_impossible": true}, {"answers": [{"answer_start": 45, "text": "denial of service"}], "question": "What is impact?", "id": "22637-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22637-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The flaws reside in the st_wavstartread() function in 'wav.c', where the function reads data based on a user-supplied size variable into a buffer without checking to see if the specified amount of data will fit into the buffer. Impact: A remote user can create a WAV file that, when processed by the target user, will execute arbitrary code on the target system with the privileges of the SoX process. Solution: No vendor solution was available at the time of this entry This exploit will create a malevolent .wav file that will execute the shellcode (it's a port_bind() opening the port 5074) When you play the file malevolent.wav the shellcode is executed s\\n\", argv[2]); printf(\"[+] Overflowing the buffer with %d Bytes\\n\",size); printf(\"[+] Connecting to localhost\\n\"); return EXIT_SUCCESS;", "qas": [{"answers": [{"answer_start": 146, "text": "without checking to see if the specified amount of data will fit into the buffer"}], "question": "What is root cause?", "id": "374-0", "is_impossible": false}, {"answers": [{"answer_start": 318, "text": "execute arbitrary code on the target system with the privileges of the SoX process"}], "question": "What is impact?", "id": "374-1", "is_impossible": false}, {"answers": [{"answer_start": 254, "text": "create a WAV file"}], "question": "What is attack vector?", "id": "374-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is possible for a user to cause A restart of the system is required in order to gain normal functionality. Exploitation of this vulnerability could be more serious with repeated attacks Conflicting reports exist, some users have been unable to reproduce this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20515-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "20515-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "20515-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Feel free to modify this code as you like, as long as you include   the above copyright statement Please use this code only to check your OWN cisco routers This exploit uses the bug in recent IOS versions to stop router   from processing traffic once the input queue is full This code was only tested on linux, no warranty is or will be   Source IP: Your source IP (or a spoofed source IP)   Destination IP: The IP of the vulnerable cisco router   Hops: The number of hops between you and the router,   the time to live (ttl) should be 0 when the packet   is received by the cisco router DEBUG  Calculate checksum  ifdef DEBUG ifdef DEBUG ifdef DEBUG unsigned short answer = 0; register unsigned short *w = addr;  Our algorithm is simple, using a 32 bit accumulator (sum), we add  sequential 16 bit words to it, and at the end, fold back all the  carry bits from the top 16 bits into the lower 16 bits", "qas": [{"answers": [], "question": "What is root cause?", "id": "60-0", "is_impossible": true}, {"answers": [{"answer_start": 209, "text": "stop router   from processing traffic once the input queue is full"}], "question": "What is impact?", "id": "60-1", "is_impossible": false}, {"answers": [{"answer_start": 175, "text": "the bug in recent IOS versions"}], "question": "What is attack vector?", "id": "60-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "1.9.1 (latest) suffers from a crash when trying to parse an incorrectly formatted <img> tag. Copy the following into your local /var/spool/mail/`whoami` or send a mail containing the HTML part to cause a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "2515-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "crash"}], "question": "What is impact?", "id": "2515-1", "is_impossible": false}, {"answers": [{"answer_start": 57, "text": "an incorrectly formatted <img> tag"}], "question": "What is attack vector?", "id": "2515-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "SILC Server is prone to a denial-of-service vulnerability because the application fails to handle exceptional conditions. An attacker can exploit this issue to crash the affected server, effectively denying service to legitimate users. This issue affects version 1.0.2; other versions may also be affected. The following proof of concept demonstrates this issue: connect yourserver join nonexistent -hmac nonexistent", "qas": [{"answers": [{"answer_start": 66, "text": "the application fails to handle exceptional conditions"}], "question": "What is root cause?", "id": "29716-0", "is_impossible": false}, {"answers": [{"answer_start": 26, "text": "denial-of-service"}], "question": "What is impact?", "id": "29716-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "29716-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This exploit was dedicated to the previous version \"im to lazy to make other exploit for the newest version :) \" 2.2.1 if you want to build your own exploit, pay attention to the address of shellcode and the buffer befor and after the shellcode. files\" can lead to Overwrite the pointer of WindowCallProcA that was stored in memory. So we will over write the pointer and make it point to our shellcode address", "qas": [{"answers": [], "question": "What is root cause?", "id": "7334-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7334-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7334-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Dovecot is prone to a remote denial-of-service vulnerability because it fails to handle certain specially crafted email headers. An attacker can exploit this issue to prevent recipients from accessing their mailboxes. The issue affects Dovecot 1.1.4 and 1.1.5. The following invalid message address header is sufficient to trigger this issue:", "qas": [{"answers": [{"answer_start": 72, "text": "fails to handle certain specially crafted email headers"}], "question": "What is root cause?", "id": "32551-0", "is_impossible": false}, {"answers": [{"answer_start": 29, "text": "denial-of-service"}], "question": "What is impact?", "id": "32551-1", "is_impossible": false}, {"answers": [{"answer_start": 106, "text": "crafted email headers"}], "question": "What is attack vector?", "id": "32551-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Preparing the exploit...", "qas": [{"answers": [], "question": "What is root cause?", "id": "15566-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15566-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15566-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Google Earth is prone to a buffer-overflow vulnerability because the application to properly verify the size of user-supplied data before copying it into an insufficiently sized process buffer. This issue allows remote attackers to execute arbitrary machine code in the context of the user running the affected application. Google Earth version v4.0.2091(beta) is vulnerable to this issue Failed exploit attempts will likely crash applications, denying service to legitimate users.", "qas": [{"answers": [{"answer_start": 65, "text": "the application to properly verify the size of user-supplied data before copying it into an insufficiently sized process buffer"}], "question": "What is root cause?", "id": "28785-0", "is_impossible": false}, {"answers": [{"answer_start": 232, "text": "execute arbitrary machine code in the context of the user running the affected application"}], "question": "What is impact?", "id": "28785-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28785-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can exploit this vulnerability by issuing a HTTP request with an overly long GET request for a document.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22059-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "22059-1", "is_impossible": true}, {"answers": [{"answer_start": 46, "text": "issuing a HTTP request with an overly long GET request for a document"}], "question": "What is attack vector?", "id": "22059-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Roger Wilco Server has been reported prone to a remote denial of service vulnerability. The issue is reported to exist due to a flaw when handling malicious UDP payloads that are destined for the vulnerable server. A remote attacker may exploit this condition to deny service to legitimate users.", "qas": [{"answers": [{"answer_start": 126, "text": "a flaw when handling malicious UDP payloads that are destined for the vulnerable server"}], "question": "What is root cause?", "id": "23902-0", "is_impossible": false}, {"answers": [{"answer_start": 55, "text": "denial of service"}], "question": "What is impact?", "id": "23902-1", "is_impossible": false}, {"answers": [{"answer_start": 147, "text": "malicious UDP payloads that are destined for the vulnerable server"}], "question": "What is attack vector?", "id": "23902-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Code stop after at least 50 dots and relaunch the command again till the crashing of the server during a memcpy.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17879-0", "is_impossible": true}, {"answers": [{"answer_start": 77, "text": "crash"}], "question": "What is impact?", "id": "17879-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "17879-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It allows the administrator to carefully limit the access of special  commands and files to the users whose duties require their use, while  at the same time automatically maintaining audit records. The configuration  file for Osh contains an administrator defined access profile for each  authorized user or group The patch for the overflows published by Steve Kemp seems lacking. (So I found \"exit\" in the executable  I also point Table[0].path to the NULL at the end of \"exit\" to prevent a  crash. Risk: Medium since user would have to be in the operator group which  the admin would have to grant explicitly The code is basically beyond repair. so ret is easier to guess  Create the payload... So I decided to try and  overwrite the first entry with the address of my shellcode. Here's how to get the addresses in case it doesn't work on your box:   ^ add this together with 0x5080 to get the address of \"exit\"  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "788-0", "is_impossible": true}, {"answers": [{"answer_start": 494, "text": "crash"}], "question": "What is impact?", "id": "788-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "788-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Vulnerabilities were found in the implementation of this protocol, that could lead to remote code execution and information leak (credentials acquisition). This vulnerability was discovered and researched by Andres Lopez Luksenberg from Core Security Exploit Team. Vulnerabilities were found using this protocol, that could lead to remote code execution or information leak. If version 1 is selected when communicating with the TDDP service, there is a lack of authentication in place. The following is a proof of concept to demonstrate the vulnerability (Impacket [2] is required for the PoC to work): A buffer overflow vulnerability was found when sending a handcrafted \"set configuration\" message to the TDDP service with an extensive configuration file and forcing version 1 in the packet. The following is a proof of concept to demonstrate the vulnerability by crashing the TDDP service (Impacket [2] is required for the PoC to work). To reestablish the TDDP service the device must be restarted: import socket import re import string from impacket.winregistry import hexdump from impacket.structure import Structure import struct class TDDP(Structure) 2016-11-10: Core Security sent a request to Mitre for two CVE ID's for this advisory. 2016-11-12: Mitre replied that the vulnerabilities didn't affected products that were in the scope for CVE. The contents of this advisory are copyright (c) 2016 The publication of this advisory was coordinated by Joaquin Rodriguez Varela from Core Advisories Team. Additionally if the message handler accepts the \"Get configuration\" message type, this will result in the program leaking the web interface configuration file, which includes the web login credentials.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40814-0", "is_impossible": true}, {"answers": [{"answer_start": 86, "text": "remote code execution and information leak (credentials acquisition)"}], "question": "What is impact?", "id": "40814-1", "is_impossible": false}, {"answers": [{"answer_start": 650, "text": "sending a handcrafted \"set configuration\" message to the TDDP service with an extensive configuration file and forcing version 1 in the packet"}], "question": "What is attack vector?", "id": "40814-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If the thickness parameter is an object with valueOf set to a function which frees the TextField parent, it is used after it is freed.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39045-0", "is_impossible": true}, {"answers": [{"answer_start": 105, "text": "it is used after it is freed"}], "question": "What is impact?", "id": "39045-1", "is_impossible": false}, {"answers": [{"answer_start": 3, "text": "the thickness parameter is an object with valueOf set to a function which frees the TextField parent"}], "question": "What is attack vector?", "id": "39045-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Specifies the file to be opened. Microsoft Windows MSINFO32.exe is vulnerable to XML External Entity attack which can potentially allow remote attackers to gain access to and exfiltrate files from the victims computer if they open a malicious \".nfo\" file via remote share / USB etc. Upon open the file user will see error message like \"System Information is unable to open this .nfo file. The file might be corrupt etc.. This file contains credentials for MS ADO Remote Data Services.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40864-0", "is_impossible": true}, {"answers": [{"answer_start": 156, "text": "gain access to and exfiltrate files from the victims computer"}], "question": "What is impact?", "id": "40864-1", "is_impossible": false}, {"answers": [{"answer_start": 226, "text": "open a malicious \".nfo\" file via remote share / USB etc"}], "question": "What is attack vector?", "id": "40864-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "at this point the scanner gets stuck in an infinite loop and will not finish or continue to other files if told to scan a directory.", "qas": [{"answers": [], "question": "What is root cause?", "id": "6174-0", "is_impossible": true}, {"answers": [{"answer_start": 14, "text": "the scanner gets stuck in an infinite loop and will not finish or continue to other files"}], "question": "What is impact?", "id": "6174-1", "is_impossible": false}, {"answers": [{"answer_start": 107, "text": "told to scan a directory"}], "question": "What is attack vector?", "id": "6174-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Motorola SBG6580 Cable Modem & WirelessN Router Denial of Service  POSTing a bad login page parameter causes the router to reboot. No response from the modem.'", "qas": [{"answers": [], "question": "What is root cause?", "id": "30688-0", "is_impossible": true}, {"answers": [{"answer_start": 109, "text": "the router to reboot"}], "question": "What is impact?", "id": "30688-1", "is_impossible": false}, {"answers": [{"answer_start": 67, "text": "POSTing a bad login page parameter"}], "question": "What is attack vector?", "id": "30688-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This can be exploited  to execute arbitrary commands on the affected system via  SE attacks when an attacker inserts formula payload in the  'Name' field when adding a user or using the custom fields  and 'Address'. Upon importing, the application will launch  Excel program and execute the malicious macro formula.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45765-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "execute arbitrary commands on the affected system"}], "question": "What is impact?", "id": "45765-1", "is_impossible": false}, {"answers": [{"answer_start": 81, "text": "SE attacks when an attacker inserts formula payload in the  'Name' field when adding a user or using the custom fields  and 'Address'"}], "question": "What is attack vector?", "id": "45765-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Although this bug doesn't crash 2.0.0.8, it causes not showing html code by viewing source in Mozilla Firefox 2.0.0.8 no code will be showed by viewing the source.", "qas": [{"answers": [], "question": "What is root cause?", "id": "4559-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4559-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4559-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that Secure FTP Server may be prone to a remote buffer overflow vulnerability that may allow attackers to execute arbitrary code on a vulnerable system in order to gain unauthorized access. An attacker may cause the buffer overflow condition to occur by sending about 252 bytes of data via a parameter of the SITE Command. Immediate consequences of an attack may result in a denial of service condition. The possibility of remote code execution has not been confirmed at the moment. Secure FTP Server version 2.0 Build 03.11.2004.2 has been reported to prone to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23839-0", "is_impossible": true}, {"answers": [{"answer_start": 127, "text": "execute arbitrary code on a vulnerable system in order to gain unauthorized access"}], "question": "What is impact?", "id": "23839-1", "is_impossible": false}, {"answers": [{"answer_start": 275, "text": "sending about 252 bytes of data via a parameter of the SITE Command"}], "question": "What is attack vector?", "id": "23839-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Local attackers can exploit this issue to corrupt memory and execute arbitrary code with kernellevel privileges. Successful exploits may facilitate a complete system compromise", "qas": [{"answers": [], "question": "What is root cause?", "id": "28764-0", "is_impossible": true}, {"answers": [{"answer_start": 43, "text": "corrupt memory and execute arbitrary code with kernellevel privileges"}], "question": "What is impact?", "id": "28764-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28764-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The index into this  array is provided directly by the user and is a signed integer, so the  comparison to ensure that it falls within the bounds of this array will  fail when provided with a negative index We can disclose 4 bytes of arbitrary kernel memory per ioctl call by  specifying a large negative device index, causing the kernel to  dereference to our fake pktcdvd_device structure in userspace and copy  data to userspace from an attackercontrolled address. The PKT_CTRL_CMD_STATUS device ioctl retrieves a pointer to a  pktcdvd_device from the global pkt_devs array.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15150-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15150-1", "is_impossible": true}, {"answers": [{"answer_start": 190, "text": "a negative index"}], "question": "What is attack vector?", "id": "15150-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Here is a modified version from the script written by the researcher Jeremy Brown use IO::Socket; use String::Random; or logit();", "qas": [{"answers": [], "question": "What is root cause?", "id": "11009-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "11009-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "11009-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack based buffer overflow in CCMPlayer 1.5. end def exploit  junk  need an access violation when reading next 4 bytes as address (0xFFFFFFFF)  to trigger SEH  pad  long jmp: SEH execution is triggered after an invalid read of an injectible address, thus allowing arbitrary code execution", "qas": [{"answers": [], "question": "What is root cause?", "id": "18178-0", "is_impossible": true}, {"answers": [{"answer_start": 100, "text": "access violation"}], "question": "What is impact?", "id": "18178-1", "is_impossible": false}, {"answers": [{"answer_start": 232, "text": "an invalid read of an injectible address"}], "question": "What is attack vector?", "id": "18178-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "require 'msf/core' include Msf::Exploit::FILEFORMAT include Msf::Exploit::Remote::Seh This module exploits a stack-based buffer overflow in Audiotran 1.4.1. An attacker must send the file to victim and the victim must open the file. This functionality has not been tested in this module.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16626-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16626-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16626-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue is due to a failure of the kernel module to properly clear used memory prior to its reuse. This vulnerability allows malicious local users to gain access to potentially sensitive kernel memory, aiding them in further attacks. FUSE versions 2.2, 2.2.1, 2.3-pre*, and 2.3-rc1, running on Linux kernel versions 2.4, through 2.6 are affected by this issue. This program can be distributed under the terms of the GNU GPL.", "qas": [{"answers": [{"answer_start": 21, "text": "a failure of the kernel module to properly clear used memory prior to its reuse"}], "question": "What is root cause?", "id": "25789-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "25789-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "25789-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Remote Help is prone to a denial-of-service vulnerability. Remote attackers can exploit this issue to cause the application to crash, denying service to legitimate users. Due to the nature of this issue arbitrary code-execution may be possible; however this has not been confirmed. Remote Help 0.0.7 is vulnerable; other versions may also be affected", "qas": [{"answers": [], "question": "What is root cause?", "id": "33778-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "denial-of-service"}], "question": "What is impact?", "id": "33778-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33778-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The problem occurs when a process re-opens the standard input stream for reading from it's associated 'mem' file prior to executing another program using the exec() family of functions. This could have serious ramifications in some situations if an attacker were to reposition the read offset of the file to an arbitrary location prior to executing a setuid program that obtains data from stdin. open(\"/dev/urandom\",0)))exit(1);//check for resource starvation  to get the address, ltrace a copy of the program as a normal user, or brute force it over the expected range.", "qas": [{"answers": [{"answer_start": 24, "text": "a process re-opens the standard input stream for reading from it's associated 'mem' file prior to executing another program using the exec() family of functions"}], "question": "What is root cause?", "id": "20979-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "20979-1", "is_impossible": true}, {"answers": [{"answer_start": 266, "text": "reposition the read offset of the file to an arbitrary location prior to executing a setuid program that obtains data from stdin"}], "question": "What is attack vector?", "id": "20979-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Vulnerability Laboratory Research Team discovered a local stack buffer overflow vulnerability in the Yandex xdLab TagScanner v5.1 software. The buffer overflow occurs when data written to a buffer, due to insufficient bounds checking, corrupts data values in memory addresses adjacent to the allocated buffer. The vulnerability is located in the `rename` module of the software when processing to load the `rename folder by tag` function as listing. When the victim is processing to click with another system user account the syncronized software context and clicks on the rename function for the tag listing the overflow occurs. The vulnerability can be exploited by privileged system user accounts with low or medium required user interaction. Successful exploitation of the buffer overflow vulnerability results in overruns of the buffer(s) boundary and overwrites adjacent memory. [+] Rename Folder by TAG - TAG Listing (Component) Proof of Concept: The vulnerability can be exploited by local attackers with privileged system user account and medium required user interaction. Click (Right) with the mouse on the listed track and open the rename folder by tag main function 4. Start your fuzzer to process the request or include manually a large string (x bytes) since the block is empty 8. The software will crash the and the overflow with the ability to overwrite occurs eip=41414141 esp=0018ea90 ebp=0018eab0 iopl=0 nv up ei pl zr na pe nc Invalid exception stack at 41414141 0:000 The vulnerability can be patched by a restriction of the input fields when processing to load the rename folder by tag listing. The security risk of the local buffer overflow vulnerability is estimated as high(-). All pictures, texts, advisories, sourcecode, videos and other information on this website is trademark of vulnerability-lab team & the specific authors or managers. Start the software and include any random track from your hd to the main listing 3.", "qas": [{"answers": [{"answer_start": 209, "text": "insufficient bounds checking"}], "question": "What is root cause?", "id": "24741-0", "is_impossible": false}, {"answers": [{"answer_start": 239, "text": "corrupts data values in memory addresses adjacent to the allocated buffer"}], "question": "What is impact?", "id": "24741-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24741-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Polipo is prone to a denial-of-service vulnerability. Polipo 1.0.4.1 is vulnerable; other versions may also be affected [This code is for Educational Purposes , I would Not be responsible for any misuse of this code]  Company: [This code is for Educational Purposes , +\\n\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "36198-0", "is_impossible": true}, {"answers": [{"answer_start": 21, "text": "denial-of-service"}], "question": "What is impact?", "id": "36198-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "36198-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "later <http://gnu.org/licenses/gpl.html> This is free software: you are free to change and redistribute it.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17806-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17806-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17806-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "D-Link released new firmware designed to protect against malware that alters DNS settings by logging in to the router using default administrative credentials. There is a flaw in the captcha authentication system that allows an attacker to glean your WiFi WPA pass phrase from the router with only user-level access, and without properly solving the captcha. When you login with the captcha enabled, the request looks like this: GET /post_login.xml?hash= The hash is a salted MD5 hash of your password, the auth_code is the captcha value that you entered, and the auth_id is unique to the captcha image that you viewed (this presumably allows the router to check the auth_code against the proper captcha image). The problem is that if you leave off the auth_code and auth_id values, some pages in the D-Link Web interface think that you\u00e2\u20ac\u2122ve properly authenticated, as long as you get the hash Most notably, once you\u00e2\u20ac\u2122ve made the request to post_login.xml, you can activate WPS with the following request: GET /wifisc_add_sta.xml?method= When WPS is activated, anyone within WiFi range can claim to be a valid WPS client and retrieve the WPA passphrase directly from the router.", "qas": [{"answers": [{"answer_start": 169, "text": "a flaw in the captcha authentication system"}], "question": "What is root cause?", "id": "8696-0", "is_impossible": false}, {"answers": [{"answer_start": 240, "text": "glean your WiFi WPA pass phrase from the router with only user-level access, and without properly solving the captcha"}], "question": "What is impact?", "id": "8696-1", "is_impossible": false}, {"answers": [{"answer_start": 1044, "text": "WPS is activated"}], "question": "What is attack vector?", "id": "8696-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "WebKitPluginProcess returned 256 exit status Thread 22 \"pool\" received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45249-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45249-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45249-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It loads these values into memory without proper bounds checks which enables the exploit   Modification of these registry values Open GOM Player   Note: GOM Player must have been run at least once on the target machine before   running the .reg file or the necessary registry entries will not exist   Once the registry has been modified, this exploit will be persistent and execute every time   GOM player is run   27 Nov: Contacted Mitre for CVE coord; informed that despite past precedent (CVE 20136356), a   vuln that requires a user to openrun a file such as .reg should not be assigned a CVE   09 Dec: \"0,0,0,0,0,0\"; # the line feed (0a) is required to trigger the exploit  the additional 0s represent dummyplaceholder equalizer settings my $junk = x 568; # offset to next seh at 568 my $sploit = $junk.$nseh.$seh.$nops.$shell; # assemble the exploit portion of the buffer my $fill = \"43,\" x ($buffsize - (length($sploit))/3); # fill remainder of buffer with junk; divide by 3 to compensate for hex format my $buffer = $sploit.$fill; # assemble the final buffer my $regfile = $regfilestart .", "qas": [{"answers": [], "question": "What is root cause?", "id": "30154-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "30154-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "30154-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "To reliably exploit this vulnerability, we need to fill almost a gigabyte of memory with our nop sled and payload. Break out if we reach the end of the headers ; $self->PrintLine(\"[*] Client connected from $rhost:$rport ($os/$vl).\"); $self->PrintLine(\"[*] Invalid target for this exploit, trying anyways...\"); $self->PrintLine(\"[*] Sending payload and waiting for execution...\");  Encode the shellcode via %u sequences for JS's unescape() function return $code;  Filler var m = \" sub new { sub Exploit my $client;  Did the listener create fail?", "qas": [{"answers": [], "question": "What is root cause?", "id": "1474-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1474-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1474-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Plus, a service named as 'Panda Endpoint Administration Agent' is installed in the host. However, due to weak ACLs set to the installation directory (\"C:\\Program Files\\Panda Security\\WaAgent\") of this application and its subdirectories, any user can modify or overwrite any executable module (dynamic link libraries and executables) installed in those directories.", "qas": [{"answers": [{"answer_start": 105, "text": "weak ACLs set to the installation directory (\"C:\\Program Files\\Panda Security\\WaAgent\") of this application and its subdirectories"}], "question": "What is root cause?", "id": "39671-0", "is_impossible": false}, {"answers": [{"answer_start": 250, "text": "modify or overwrite any executable module (dynamic link libraries and executables) installed in those directories"}], "question": "What is impact?", "id": "39671-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39671-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A somewhat realistic exploit scenario would involve someone breaking out of a L2 guest (for example by exploiting a bug in the L1 qemu process) and then using this bug for privilege escalation on the L1 system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44944-0", "is_impossible": true}, {"answers": [{"answer_start": 172, "text": "privilege escalation on the L1 system"}], "question": "What is impact?", "id": "44944-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "44944-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Programs embeded in Maya files using scripting code are automatically executed upon opening of the file. An attacker can take control of a system where Maya is installed by sending a specially crafted scene package and enticing the user to open it. The scripting code will run with the privileges of the user running the Maya application The vendor did not provide fixes or workaround information. You can prevent script nodes from executing when you open a file by following these steps: . This vulnerability was discovered and researched by Diego Juarez from Core Security Technologies during Bugweek 2009 [1]. Script nodes are saved on the '.mb' and '.ma' file formats along with geometry and the rest of the scene data. By using files with embedded scripting code it is possible to execute arbitrary commands without any restriction and without requiring any user interaction after a user opened a malicious scene The following steps work as Proof of Concept: . Put a name on it, set \"Evaluate On\" to \"Open/Close\", insert python code within quotes like this: Save scene to a file with '.mb' or '.ma' format. Core Security Technologies ask the Autodesk Assistance Team for a security contact to report the vulnerability. Core asks the Autodesk Assistance Team for a security contact to report the vulnerability. Core notifies Autodesk of the vulnerabilty report and announces its initial plan to publish the content on November 2nd, 2009. Autodesk acknowledges the report and requests the information to be provided in encrypted form. Core sends draft advisory and steps to reproduce the issue. Core asks Autodesk about the status of the vulnerability report sent on October 20th, 2009. The contents of this advisory are copyright (c) 2009 Core Security Technologies and (c) 2009 CoreLabs, and may be distributed freely provided that no fee is charged for this distribution and proper credit is given. The publication of this advisory was coordinated by Fernando Russ from Core Security Advisories Team. Based in Boston, MA and Buenos Aires, Argentina, Core Security Technologies can be reached at 617-399-6980 or on the Web at http://www.coresecurity.com.", "qas": [{"answers": [], "question": "What is root cause?", "id": "10213-0", "is_impossible": true}, {"answers": [{"answer_start": 121, "text": "take control of a system where Maya is installed"}], "question": "What is impact?", "id": "10213-1", "is_impossible": false}, {"answers": [{"answer_start": 173, "text": "sending a specially crafted scene package and enticing the user to open it"}], "question": "What is attack vector?", "id": "10213-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "PlatinumFTPServer is prone to a denial-of-service vulnerability. This issue is reported to occur when a remote user makes 50 or more connections that attempt to authenticate with a malformed user name If you don't get the server down try to changeplay a little bit with  revised and all guys at www.whitehat.co.il use strict; use Net::FTP; my $host; print \"denial of service in progress\\n\"; print \"server is down.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25218-0", "is_impossible": true}, {"answers": [{"answer_start": 32, "text": "denial-of-service"}], "question": "What is impact?", "id": "25218-1", "is_impossible": false}, {"answers": [{"answer_start": 116, "text": "makes 50 or more connections that attempt to authenticate with a malformed user name"}], "question": "What is attack vector?", "id": "25218-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "MICO is susceptible to a remote denial-of-service vulnerability. This issue is due to a failure of the application to properly handle unexpected input. This issue allows remote attackers to crash affected applications, denying further service to legitimate users. MICO versions 2.3.12RC3 and 2.3.12 are vulnerable to this issue; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 86, "text": "a failure of the application to properly handle unexpected input"}], "question": "What is root cause?", "id": "28182-0", "is_impossible": false}, {"answers": [{"answer_start": 32, "text": "denial-of-service"}], "question": "What is impact?", "id": "28182-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28182-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Catirpc.exe  Provides the endpoint mapper and enables RPC services for BrightStor Backup products", "qas": [{"answers": [], "question": "What is root cause?", "id": "3248-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "3248-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "3248-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Unfortunately Interchange is subject to a denial of service. A restart of the service is required in order to gain normal functionality. This vulnerability may be the result of a buffer overflow, although not verified this could lead to the execution of arbitrary code on the target host.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20518-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "denial of service"}], "question": "What is impact?", "id": "20518-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20518-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "(y or n) y warning: shared library handler failed to enable breakpoint Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "924-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "924-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "924-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A denial of service vulnerability has been alleged in ZoneAlarm. It is reportedly possible to reproduce this condition by sending a flood of UDP packets of random sizes to random ports on a system hosting the vulnerable software www.zonelabs.com  ZoneAlarm was found vulnerable to a  serious vulnerability leading to a  remote Denial Of Service condition due  to failure to handle udp random  packets, if an attacker sends multiple  udp packets to multiple ports 065000,  the machine will hang up until the  attacker stop flooding The following is a simple code written  in perl to demonstrate that, the code  is clean, it wont eat your cpu usage  and it doesnt need to be run as root  ", "qas": [{"answers": [{"answer_start": 363, "text": "failure to handle udp random  packets"}], "question": "What is root cause?", "id": "23088-0", "is_impossible": false}, {"answers": [{"answer_start": 2, "text": "denial of service"}], "question": "What is impact?", "id": "23088-1", "is_impossible": false}, {"answers": [{"answer_start": 122, "text": "sending a flood of UDP packets of random sizes to random ports on a system hosting the vulnerable software"}], "question": "What is attack vector?", "id": "23088-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "pspa_count is supposed to be the number of entries in this array. The code then attempts to check whether the pspa_count valid is correct:   With a carefully chosen value for pspa_count we can make it very large but when it's passed to the PS_PORT_ACTIONS_SIZE macro the result is equal to port_actions_size. exec_handle_port_actions then uses portwatch ports like this: case PSPA_IMP_WATCHPORTS:  hold on to this till end of spawn  note that pspa_actions was allocated earlier also based on the result of an integer overflow. The third argument is a pointer to a further arguments descriptor in userspace with the following structure (on 32-bit):", "qas": [{"answers": [], "question": "What is root cause?", "id": "43325-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "43325-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "43325-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported for CesarFTP. Reportedly, an attacker may crash a target server by supplying excessive data as the argument to the 'CWD' command.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22789-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "crash a target server"}], "question": "What is impact?", "id": "22789-1", "is_impossible": false}, {"answers": [{"answer_start": 101, "text": "supplying excessive data as the argument to the 'CWD' command"}], "question": "What is attack vector?", "id": "22789-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "that leads to a stack buffer overflow:  size is user controlled. This overrun could potentially allow a malicious user to gain control of this machine.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40667-0", "is_impossible": true}, {"answers": [{"answer_start": 122, "text": "gain control of this machine"}], "question": "What is impact?", "id": "40667-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40667-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Internet Explorer", "qas": [{"answers": [], "question": "What is root cause?", "id": "4056-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4056-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4056-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Versions of MySQL up to and including 3.23.30 are vulnerable to a buffer overflow attack. As a result of this overflow, excessive data copied onto the stack can overwrite critical parts of the stack frame such as the calling function's return address. Since this data is supplied by the user, it can be made to alter the program's flow of execution. ] Run with: You can specify the offset for the exploit passing it as the 1st arg... > this is the default offset :] all versions of MySQL < 3.23.31 have a buffer-overflow which crashs the server and which seems to be exploitable (ie Problem : An attacker could gain mysqld privileges (gaining access to all the Requirements :) Here the reponse to a email I send today to the MySQL list :   Still not any info about the bufferoverflow discovered last week ?    07:10:54 WET 2001  mysqld daemon ended  usrsbinmysqld: ready for connections  Program received signal SIGSEGV, Segmentation fault", "qas": [{"answers": [], "question": "What is root cause?", "id": "20581-0", "is_impossible": true}, {"answers": [{"answer_start": 161, "text": "overwrite critical parts of the stack frame such as the calling function's return address"}], "question": "What is impact?", "id": "20581-1", "is_impossible": false}, {"answers": [{"answer_start": 120, "text": "excessive data copied onto the stack"}], "question": "What is attack vector?", "id": "20581-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "IBM Director is prone to a privilege-escalation vulnerability that affects the CIM server. Attackers can leverage this issue to execute arbitrary code with elevated privileges in the context of the CIM server process.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32845-0", "is_impossible": true}, {"answers": [{"answer_start": 27, "text": "privilege-escalation"}], "question": "What is impact?", "id": "32845-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32845-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The issue  was discovered using the Domato fuzzer Microsoft Internet Explorer 11 Tree::Notify_InvalidateDisplay Null Pointer Dereference (e9c.142c): k First chance exceptions are reported before any exception handling.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45778-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45778-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45778-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Some bytes must be changed manually to trigger the issue (see below). Here are a few steps to trigger the issue: 1) Create a BitmapData and store it somewhere, for example as a static member of a custom class. 4) Create an object o and change its valueOf method so that it points to a function that calls the DisplacementMapFilter.mapBitmap property. Flash caches first the BitmapData in the stack before calling o.valueOf. But since we can provide our own constructor, we can do anything with the AS2 stack, including having an in use BitmapData at the top of the stack when the constructor returns. So if the returned BitmapData has a refcounter set to 1, Flash frees the object and we end up with a garbage reference in the stack which crashes the player in BitmapData.getPixel32.", "qas": [{"answers": [], "question": "What is root cause?", "id": "37853-0", "is_impossible": true}, {"answers": [{"answer_start": 739, "text": "crashes the player in BitmapData.getPixel32"}], "question": "What is impact?", "id": "37853-1", "is_impossible": false}, {"answers": [{"answer_start": 213, "text": "Create an object o and change its valueOf method so that it points to a function that calls the DisplacementMapFilter.mapBitmap property"}], "question": "What is attack vector?", "id": "37853-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "MailEnable is reported prone to a remote denial of service vulnerability. This vulnerability is reported to exist in the MailEnable HTTP header parsing code. When reading a large content-length header field from an HTTP request, the operation overflows a fixed size memory buffer and the HTTP service will reportedly crash. The vulnerability can be exploited to crash the affected HTTP service, denying service to legitimate users. The possibility to execute arbitrary code may also be present.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24343-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "denial of service"}], "question": "What is impact?", "id": "24343-1", "is_impossible": false}, {"answers": [{"answer_start": 171, "text": "a large content-length header field from an HTTP request,"}], "question": "What is attack vector?", "id": "24343-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "PostgreSQL is prone to an information-disclosure vulnerability. Local attackers can exploit this issue to obtain sensitive information that may lead to further attacks. PostgreSQL 8.3.6 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32847-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "information-disclosure"}], "question": "What is impact?", "id": "32847-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32847-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "KpyM Telnet Server has been reported to be prone to a remote denial of service vulnerability. Due to a lack of resource limitations, a remote attacker may negotiate multiple connections to the affected server. No response from the server\", stdout); if ( err < 0 )", "qas": [{"answers": [{"answer_start": 101, "text": "a lack of resource limitations"}], "question": "What is root cause?", "id": "23530-0", "is_impossible": false}, {"answers": [{"answer_start": 61, "text": "denial of service"}], "question": "What is impact?", "id": "23530-1", "is_impossible": false}, {"answers": [{"answer_start": 155, "text": "negotiate multiple connections to the affected server"}], "question": "What is attack vector?", "id": "23530-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Address 1:79.119.103.68 START of algorithm static char buffer[BUFFERSIZE]; void Exit(int); void Wait_s(int); void Banner(); return -1; else { case 'h': case 'p': SOCKET s; return -1; return -1; return -1; for (a=0;a<Load;a++){strcat(buffer,\"\\x41\");} printf(\"\\tPayload not sent !", "qas": [{"answers": [], "question": "What is root cause?", "id": "9411-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9411-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "9411-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Written and coded by Jacky I saw this exploit written in python with SEH method ! my $presc=\"SEXY\"; my $sc=\"\\x90\"x50; print \"[+]Creating Malicious Playlist File!\\n\"; print \"[+]Real Author of the vulnerability is Sebastien Duquette!\\n\" print \"[+]All Rights are reserved to him !\\n\"; print \"[+]Coded by Jacky!\\n\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "11171-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "11171-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "11171-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "PRODUCTS Hauri ViRobot Desktop 5.5 and below Hauri ViRobot Server 3.5 and below VRsecos.sys create a device called \"VRsecos\" , and handles DeviceIoControl Code = 0x8307202c , which use the function \"strcpy\" to copy memory from irp systembuffer to driver's data area , can be overwrite critical kernel object memory in vrsecos.sys ' s data area  virobot0day.cpp : Defines the entry point for the console application.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15764-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15764-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15764-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "To reproduce, put the attached files on a server and visit http://127.0.0.1", "qas": [{"answers": [], "question": "What is root cause?", "id": "41420-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41420-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "41420-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Remote File Upload and Remote Code Execution 183,682 downloads at the time of publishing this exploit.", "qas": [{"answers": [], "question": "What is root cause?", "id": "7910-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "Code Execution"}], "question": "What is impact?", "id": "7910-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "7910-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Both IBM HTTP Server and Websphere are subject to a denial of service. A restart of the service is required inorder to gain normal functionality. This request must be made multiple times before the system will freeze.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20531-0", "is_impossible": true}, {"answers": [{"answer_start": 52, "text": "denial of service"}], "question": "What is impact?", "id": "20531-1", "is_impossible": false}, {"answers": [{"answer_start": 9, "text": "HTTP"}], "question": "What is attack vector?", "id": "20531-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Due to many responses i've improved the exploit to cover more systems! the time has come to push the button... sh-3.00# exit ong_bak now checks the value of ecx and launches the exploit in case a suitable value has been found! fuck things up if you stick to the following: play around with the negative argument until ecx points to our data segment: |- the time has come to push the button.. (\" |- the time has come to push the button.. the time has come to push the button..", "qas": [{"answers": [], "question": "What is root cause?", "id": "926-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "926-1", "is_impossible": true}, {"answers": [{"answer_start": 273, "text": "play around with the negative argument until ecx points to our data segment"}], "question": "What is attack vector?", "id": "926-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "package Msf::Exploit::sybase_easerver; use strict; use base \"Msf::Exploit\"; use Pex::Text; 'VHOST' => [0, 'DATA', 'The virtual host name of the server'], This module exploits a stack overflow in the Sybase EAServer Web Console.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1681-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1681-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1681-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "please find the PoC and brief analysis for the issue attached.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38265-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "38265-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "38265-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "but this exploit wouldn't exist if we didn't have that conversation a long long time ago) nolimit & buzzdee (I used most of your realplayer .smil exploit code because I didn't feel like writing this code from scratch :p)", "qas": [{"answers": [], "question": "What is root cause?", "id": "1470-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1470-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1470-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "char szWorkBuff[100]; SOCKET conn_socket; if (argc<2) printf( \"WSAStartup failed with error %d\\n\",iRetval);  Make a check on the length of the parameter provided else  Resolve the hostname into IP address or viceversa else { else { printf( \"Failed to resolve IP address, please provide host name.\\n\" ); printf( \"Target host seems to be down or the program failed to resolve host name.\");  Initialise Socket info return -1;} printf(\"[+] Ready to generate requests\\n\");  The count should be modified depending upon the number of links in the szBuff array */ delete szBuffer; return 1; char *szBuff[10];  Modify the list of links given below to your asp.net links.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1601-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1601-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1601-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "For example the chroot() call in ftpd.c can be bypassed by setting \"openfiles\" to a value of 5. The problem here is now we cannot \"ls\", \"get\" or \"put\" using the ftp client. All commands which do not require opening files are available though including mkdir, Example (the files .login_conf Another attack involves the option \"stacksize\" in ~/.login_conf, which can be used to set the maximum stack size the process may use after the setusercontext() call. I am currently researching if the SIGSEGVS in arbitrary locations (depended on the stacksize) may be used to execute arbitrary code. For now there is the really small possiblity that the sysctl setting \"kern.sugid_coredump\" is set on the target FreeBSD system to '1' and therefore allows setuid and setgid core dumps. As mentioned before this _might_ be used to execute arbitrary code I am still researching that.", "qas": [{"answers": [{"answer_start": 314, "text": "the option \"stacksize\" in ~/.login_conf"}], "question": "What is root cause?", "id": "9489-0", "is_impossible": false}, {"answers": [{"answer_start": 565, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "9489-1", "is_impossible": false}, {"answers": [{"answer_start": 59, "text": "setting \"openfiles\" to a value of 5"}], "question": "What is attack vector?", "id": "9489-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Lenovo ThinkPad System Management Mode arbitrary code execution exploit For more information about this project : This code exploits 0day privileges escalation vulnerability (or backdoor?)", "qas": [{"answers": [], "question": "What is root cause?", "id": "40040-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "40040-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40040-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "http:www.dnsstuff.com  Block their cookies to use the site wo paying.", "qas": [{"answers": [], "question": "What is root cause?", "id": "4560-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4560-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4560-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that the ftpd server, included in the Embedded Real Time Operating System (ERTOS) of 3Com Superstack 3 NBX IP phones, contains a denial of service vulnerability. This issue can be triggered by sending a CEL paramater of excessive length, effectively causing the ftpd server and various VoIP services to no longer respond. It should be noted that this issue may be similar to the vulnerability described in BID 679. Although unconfirmed, it should also be noted that due to the nature of this vulnerability under some circumstances it may be exploited to execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22060-0", "is_impossible": true}, {"answers": [{"answer_start": 150, "text": "denial of service"}], "question": "What is impact?", "id": "22060-1", "is_impossible": false}, {"answers": [{"answer_start": 214, "text": "sending a CEL paramater of excessive length"}], "question": "What is attack vector?", "id": "22060-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Successful exploits may allow authenticated users to elevate their privileges to NetworkService. This allows attackers to execute code with elevated privileges and aids in further exploits.", "qas": [{"answers": [], "question": "What is root cause?", "id": "31667-0", "is_impossible": true}, {"answers": [{"answer_start": 53, "text": "elevate their privileges to NetworkService"}], "question": "What is impact?", "id": "31667-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "31667-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "To reproduce, put LoadMP4.swf and yuvplane.flv on a server, and visit 127.0.0.1/LoadMP4.swf?file=yvplane.flv.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41423-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41423-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "41423-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Mozilla Firefox is prone to a remote denial-of-service vulnerability because it fails to adequately sanitize user-supplied input. Attackers can exploit this issue to cause denial-of-service conditions. Firefox 2.0.0.7 is vulnerable; other versions may also be affected", "qas": [{"answers": [{"answer_start": 80, "text": "fails to adequately sanitize user-supplied input"}], "question": "What is root cause?", "id": "30702-0", "is_impossible": false}, {"answers": [{"answer_start": 37, "text": "denial-of-service"}], "question": "What is impact?", "id": "30702-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30702-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Netscape creates a /tmp file which is world readable and writable in /tmp, without calling stat() or fstat() on the file. As such, it is possible, should a user be able to predict the file name, to cause a symbolic link to be created, and followed elsewhere on the file system. Additionally, as the file is created mode 666 prior to being fchmod()'d to 600, there may be a window of opportunity for altering the contents of this file. This issue has only been demonstrated on the Linux binary, for glibc. Predict the name of the temporary file. Alternately, a program which watches for the creation of these temporary files, opens them upon their creation, and alters the contents can be written.", "qas": [{"answers": [{"answer_start": 0, "text": "Netscape creates a /tmp file which is world readable and writable in /tmp, without calling stat() or fstat() on the file"}], "question": "What is root cause?", "id": "19912-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "19912-1", "is_impossible": true}, {"answers": [{"answer_start": 625, "text": "opens them upon their creation, and alters the contents can be written"}], "question": "What is attack vector?", "id": "19912-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow vulnerability has been reported for the MediaMail binary that may result in a user obtaining elevated privileges. Although unconfirmed, an attacker, using a custom crafted string, could overwrite stack memory, including the return address of a function, and potentially execute arbitrary code with group 'mail' privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22638-0", "is_impossible": true}, {"answers": [{"answer_start": 96, "text": "user obtaining elevated privileges"}], "question": "What is impact?", "id": "22638-1", "is_impossible": false}, {"answers": [{"answer_start": 167, "text": "using a custom crafted string"}], "question": "What is attack vector?", "id": "22638-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "so there may be additional vulnerable locations  This script generates two files:  1) a malfored .bmp file that will cause ImageMagick to generate a specific  error when opened (LengthAndFilesizeDoNotMatch), as defined in the  2) a modified english.xml file that replaces the original error message with  our exploit code  1) run the script, replace the original english.xml file (in App's folder)  2) # there are at least two possible offsets -- 1 for file-> open and 1 for the open file menubar button  this is just a POC shellcode that displays a messagebox using the FatalAppExit function my $sploit = $junk.$nseh.$seh.$junk2.$nseh.$seh.$nops.$shell; # assemble the exploit portion of the buffer my $fill = \"\\x43\" x ($buffsize - (length($sploit))); # fill remainder of buffer with junk $sploit =", "qas": [{"answers": [], "question": "What is root cause?", "id": "31688-0", "is_impossible": true}, {"answers": [{"answer_start": 123, "text": "ImageMagick to generate a specific  error when opened (LengthAndFilesizeDoNotMatch)"}], "question": "What is impact?", "id": "31688-1", "is_impossible": false}, {"answers": [{"answer_start": 86, "text": "a malfored .bmp file"}], "question": "What is attack vector?", "id": "31688-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Create the malicious .mp3 file , open up using Mthree , after that double click on the file ..", "qas": [{"answers": [], "question": "What is root cause?", "id": "14597-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "14597-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "14597-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This flaw allows for arbitrary commands to be executed with administrative privileges by calling the xp_cmdshell stored procedure. After the installer finishes, the password is permanently set to 'lyris' followed by the process ID of the installer (a 1-5 digit number). Additionally, a window of opportunity is opened during the ListManager for MSDE install process; the 'sa' account is set to the password 'lminstall' for a 5-10 minute period.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1366-0", "is_impossible": true}, {"answers": [{"answer_start": 21, "text": "arbitrary commands to be executed with administrative privilege"}], "question": "What is impact?", "id": "1366-1", "is_impossible": false}, {"answers": [{"answer_start": 89, "text": "calling the xp_cmdshell stored procedure"}], "question": "What is attack vector?", "id": "1366-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "D-Link DI-704P has been reported prone to a remote denial of service vulnerability. The issue presents itself in a D-Link web interface page. It has been reported that when excessive is data passed URI parameter in a request for the vulnerable page, the router firmware the device behaves in an unstable manner. Subsequent malicious requests may result in a complete denial of service condition requiring a device reboot, or in corruption of device logs.", "qas": [{"answers": [{"answer_start": 168, "text": "when excessive is data passed URI parameter in a request for the vulnerable page, the router firmware the device behaves in an unstable manner"}], "question": "What is root cause?", "id": "22647-0", "is_impossible": false}, {"answers": [{"answer_start": 51, "text": "denial of service"}], "question": "What is impact?", "id": "22647-1", "is_impossible": false}, {"answers": [{"answer_start": 191, "text": "passed URI parameter in a request for the vulnerable page"}], "question": "What is attack vector?", "id": "22647-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Gives you a shell with system privileges  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "271-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "271-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "271-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability within the xrvkp module allows an attacker to inject memory they control into an arbitrary location they define. This vulnerability can be used to overwrite function pointers in HalDispatchTable resulting in an elevation of 3. No response from vendor; no remediation available. This vulnerability was discovered by Matt Bergin of KoreLogic 6. The contents of this advisory are copyright(c)", "qas": [{"answers": [], "question": "What is root cause?", "id": "38055-0", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "inject memory they control into an arbitrary location they define"}], "question": "What is impact?", "id": "38055-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38055-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "php_Easycom5_3_0.dll 0day vuln POC minus the exploit, I'm bored goin to the park API Stack Buffer Overflow Security Issue: EasyCom PHP API suffers from multiple Buffer Overflow entry points, which can result in arbitrary code execution on affected system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41425-0", "is_impossible": true}, {"answers": [{"answer_start": 211, "text": "arbitrary code execution on affected system"}], "question": "What is impact?", "id": "41425-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41425-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability has been reported in versions of eBook Reader for Microsoft Windows.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21629-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21629-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21629-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Any way this script creates a listening Socket and act's as a ftp server then when the Client connect's a huge buffer is sent back to The client. Resulting and a buffer overflow.", "qas": [{"answers": [], "question": "What is root cause?", "id": "4058-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4058-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4058-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This exploit will work   You have limited space for the shellcode  (around 500, it can be tweaked for more space)  and there are no character restrictions To trigger the exploit, load the created executable and then  Check it out :) Author has no responsibility over the damage you do with this.", "qas": [{"answers": [{"answer_start": 34, "text": "limited space for the shellcode  (around 500, it can be tweaked for more space)  and there are no character restrictions"}], "question": "What is root cause?", "id": "7347-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "7347-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7347-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The file \"common.php\" is vulnerable to LFI through the \"AcceptLanguage\"   get the languages which are spetcified in the HTTP header   try to grab one after the other the language file   This exploit sends \"....common\" in the AcceptLanguage header in order to  generate a recursive inclusions and cause a denial of service via resource import java.io.PrintStream; import java.net.InetSocketAddress; import java.net.Socket; private static String host; private static String path; private Socket sk; public void run() { System.out.println(\"[+] Mission complete.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18023-0", "is_impossible": true}, {"answers": [{"answer_start": 304, "text": "denial of service"}], "question": "What is impact?", "id": "18023-1", "is_impossible": false}, {"answers": [{"answer_start": 51, "text": "the \"AcceptLanguage\"   get the languages which are spetcified in the HTTP header"}], "question": "What is attack vector?", "id": "18023-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This time, the culprit is automatic software update tool provided by the vendor. The Potential exploitation may lead to user files loss or altering vital system files (e.g One of the ActiveX controls deployed by default by the vendor contains an insecure method giving a potential attacker the remote system arbitrary file write access. There are two main attack vector schemes:  inducing remote user to launch WWW link after obtaining the information about the location of an arbitrary file(s) locations/names in the remote system. After clicking the link the files contents will be unrecoverably destroyed. This attack vector DOESN'T require any additional victim social engineering, because the system files are always placed in the predictable locations. The vulnerable ActiveX control EngineRules.dll is a component of HP Software Updates system designed by the vendor. The potentialy insecure method is: void SaveToFile(String dataFilePath); This method is used to store the software patch specific data (version, remote location, vendor name, software description) in the binary file beginning with the 32bit integer value containing the actual patches count stored in the data file. Noticing a specific vulnerability location (vendor's software update system), simple disabling of the vulnerable control by the vendor's patch (like in the other HP software vulnerbility case - HPInfo) would result in the machine software update system compromise in this case and would leave the user vulnerable to the future security issues. The exploit is using vulnerable SaveToFile() to overwrite the NT System kernel files with the 4 zero bytes. The exploit code has been attached to the end of this advisory. NOTE however that it is provided ONLY as a Proof of Concept code and has been released ONLY to estimate the impact level of the issue. Internet Explorer 6.0 Internet Explorer 7.0 It is possible that the vulnerable machine model list disclosed by the vendor as a confirmation to the previous issue concerning HP laptops - \"HP Info Center\" case, will be similar in this  Remote Arbitrary File Corruption Exploit  var filePath=\"c:\\\\temp\\\\testfile.txt\"; The flaw is located in the software called HP Software Update shipped with the HP notebooks to support automatic software updates and critical vulnerability patching. () can be exploited to store the empty-by-initialize software patch data in the existing file, which will result in previous file contents loss and resetting it to 4 zero-bytes, describing a zero-size patch. After the execution it will store an zero-initialized patch information using SaveToFile() method sequentially to ntoskrnl.exe, ntkrnlpa.exe, ntkrnlmp.exe ,ntkrpamp.exe NT kernel files , first in the System32\\DllCache\\ directory, second to \\System32\\ directory and finally to Windows\\Driver Cache\\ dir.", "qas": [{"answers": [{"answer_start": 243, "text": "an insecure method"}], "question": "What is root cause?", "id": "4757-0", "is_impossible": false}, {"answers": [{"answer_start": 120, "text": "user files loss or altering vital system files"}], "question": "What is impact?", "id": "4757-1", "is_impossible": false}, {"answers": [{"answer_start": 179, "text": "the ActiveX control"}], "question": "What is attack vector?", "id": "4757-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Furthermore, we can deny the registry editor its ability to show the default secondary status dialog box (Win 10), thereby hiding the fact that our attack was successful. Normally when a user opens a .reg file UAC will launch (if user is run as Admin) if targeting a non privleged user we can still hijack HKCU reg settings without having to deal with UAC. However, we can inject our own messages thru the filename to direct the user to wrongly click \"Yes\", as the expected \"Are you sure you want to continue?\" The registry dialog echoes back the filename plus any text we add and allows us to terminate part of its default security warning message. We achieve this using % encoded characters in the filename like %n or %r and %0. Potentially making a user think they are cancelling the registry import as the security warning dialog box is now lying to them. We can obstruct that behavior to deny this secondary registry editor dialog from appearing by tacking on a (null) right before the end of our filename using %1 or %25 like: \"Microsoft-Security-Update- You will have to manually refresh the registry written to in order to see the values stored when using these dialog denial of service methods. %5 (Windows 10) duplicates the default registry dialog box message by \"n\" amount of times per amount of %5 injected into the filename %25 (Windows 7) duplicates the default registry dialog box message by \"n\" amount of times per amount of %25 injected into the filename % Each injected character can be separated by a percent \"%\" sign without messing up our spoofed message, we can leverage this to obfuscate the end of the filename. The filename \"Microsoft-Security-Update-v1.2-Windows-10.r%e%g%r%nC%l%i%c%k%b%Y%e%s%b%b%b%1%0.reg\" will show as \"Microsoft-Security-Update-v1.2-Windows-10.reg\" in the registry dialog box, along with our spoofed user directions. While this spoofing vulnerability requires user interaction and bypassing Windows UAC (if targeting Admin) prompt to succeed, the fact the we can prevent secondary registry dialogs and modify registry messages displayed to the user makes it a viable attack vector. If we are successful in our attack we can achieve a persistent RCE backdoor all while the user thinks they have aborted the import. Then vendor sent me a link pointing me to the \"Definition of a Security Vulnerability\" Lol. After they will get the registry security warning dialog box asking them if they \"trust the source\" and \"Are you sure you want to continue?\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "46533-0", "is_impossible": true}, {"answers": [{"answer_start": 299, "text": "hijack HKCU reg settings without having to deal with UAC"}], "question": "What is impact?", "id": "46533-1", "is_impossible": false}, {"answers": [{"answer_start": 373, "text": "inject our own messages thru the filename to direct the user to wrongly click \"Yes\","}], "question": "What is attack vector?", "id": "46533-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "In order to prevent EL0 and EL1 code from creating disallowed memory mappings (e.g., disabling PXN on areas not in the kernel text or enabling write permissions to a kernel code page), RKP employs a system through which all modifications to the S1 translation table are validated by the hypervisor. Normally, an adversary running in EL1 would be able to directly modify the value of TTBR0_EL1 and TTBR1_EL1, which would allow them to subvert the S1 protections. In the case of RKP, this exception is handled by the function \"vmm_synchronous_handler\". The function checks whether the abort is due to an MRS/MSR from EL1, and if so, calls the function \"other_msr_system\" in order to service the request. These two registers are extremely sensitive and modifying their values allows an attacker to subvert the RKP memory protections. In the case of TCR_EL1, the attacker can set TCR_EL1.TG0 or TCR_EL1.TG1 in order to signal that the translation granule for TTBR0 or TTBR1 (accordingly) is any value other than the default 4KB granule used by the Linux Kernel. Modifying the translation granule allows an attacker to subvert the stage-1 memory mapping restrictions used by RKP. This is since RKP incorrectly assumes that the translation granule is 4KB without actually checking the value in TCR_EL1.TGx. This means that the bottom 60KB of the translation table remain unprotected by RKP, allowing an attacker in EL1 to freely modify it in order to point to any wanted IPA, with any AP and PXN/UXN values. In the case of SCTLR_EL1, the attacker can unset SCTLR_EL1.M in order to disable the stage 1 MMU for EL0 and EL1 translations. This would allow an attacker to trivially bypass the stage-1 protections (such as the ones discussed above), as no AP or XN permission checks would be present for stage 1 translations. As RKP's code pages are executable from EL1, an attacker can simply call these MSRs directly from RKP's code while running in EL1. I've statically verified this issue on the RKP binary (version \"RKP4.2_CL7572479\") present in the open-source kernel package \"SM-G935F_MM_Opensource\".", "qas": [{"answers": [{"answer_start": 1189, "text": "RKP incorrectly assumes that the translation granule is 4KB without actually checking the value in TCR_EL1.TGx"}], "question": "What is root cause?", "id": "41212-0", "is_impossible": false}, {"answers": [{"answer_start": 795, "text": "subvert the RKP memory protections"}], "question": "What is impact?", "id": "41212-1", "is_impossible": false}, {"answers": [{"answer_start": 750, "text": "modifying their values"}], "question": "What is attack vector?", "id": "41212-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The full path to the specified dentry is returned in a fixed length buffer of size PAGE_SIZE bytes.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21353-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21353-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21353-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The following proof of concept has been submitted and demonstrates the use of injectable xsl templates, to exploit this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22359-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "22359-1", "is_impossible": true}, {"answers": [{"answer_start": 78, "text": "injectable xsl templates"}], "question": "What is attack vector?", "id": "22359-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Tested on Windows 7 Microsoft Windows operating system is prone to a local DoS by interrupting the function IcmpSendEcho2Ex. The IP address argument should be a non-exist IP address on the net, so the function will wait longer time.", "qas": [{"answers": [], "question": "What is root cause?", "id": "14705-0", "is_impossible": true}, {"answers": [{"answer_start": 75, "text": "DoS"}], "question": "What is impact?", "id": "14705-1", "is_impossible": false}, {"answers": [{"answer_start": 82, "text": "interrupting the function IcmpSendEcho2Ex"}], "question": "What is attack vector?", "id": "14705-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Kontakt Player 4 suffers from a buffer overflow vulnerability when parsing \".nki The application fails in boundry checking of the user input resulting in a crash. The attacker can leverage from this scenario to exectute arbitrary code on the affected system. Failed attempts will result in denial of service.", "qas": [{"answers": [{"answer_start": 97, "text": "fails in boundry checking of the user input"}], "question": "What is root cause?", "id": "15582-0", "is_impossible": false}, {"answers": [{"answer_start": 156, "text": "crash"}], "question": "What is impact?", "id": "15582-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15582-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Although this information is present when we construct the  Document object, it is discard in the subsequent 'clear' statements below. `DocumentWriter::replaceDocument` is responsible for replacing the currently displayed document with a new one using the result of evaluating a javascript: If an attacker can perform another page load right before returning from `begin` , the method will append an attacker-controlled string to a potentially Under normal conditions, a javascript: URI load always makes `begin` associate the new document with a new DOMWindow object. Firstly, the attacker needs to initialize the <iframe> element's source URI to a sane value before it's inserted into the document. Then she has to call `open` on the frame's document right after the insertion to stop the initial load and set the document URL to a value that can pass When the window object is re-used, all event handlers defined for the window remain active. The attack won't work if the cross-origin document has no active parser by the time `begin` returns.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47450-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "47450-1", "is_impossible": true}, {"answers": [{"answer_start": 310, "text": "perform another page load right before returning from `begin`"}], "question": "What is attack vector?", "id": "47450-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "I've not test it since the device is rebooting and do not dump a core  for further analysing , this PoC show the first method  (direct connect to the device if we know the bdaddr) but you can  just wait for the device to search and overflow by itself when  You just have to wait until the wm device search for bluetooth devices  in range and it will be overflowed use Net::Bluetooth;  change this lame cmd ???", "qas": [{"answers": [], "question": "What is root cause?", "id": "6582-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "6582-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "6582-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "kscd uses the contents of the 'SHELL' environment variable to execute a browser. Using these privileges along with code provided in the exploit, it is possible to change attributes on raw disks. This in turns allows an attacker to create a root shell, thus compromising the intergrity of the machine.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19915-0", "is_impossible": true}, {"answers": [{"answer_start": 163, "text": "change attributes on raw disks"}], "question": "What is impact?", "id": "19915-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19915-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Msf::Exploit::Remote::Seh This module exploits a stack buffer overflow vulnerability in the handling of the TextBytesAtom records by Microsoft PowerPoint Viewer. end ret << data ret end def exploit  smash the stack, hit SEH, use the poppopret to execute code on the stack  jump ahead into the next atom distance = 10  Document container  assembled stream contents content << doc content << mm count =", "qas": [{"answers": [], "question": "What is root cause?", "id": "16665-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16665-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16665-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This exploits CVE20111485, a race condition in PolicyKit The problem with this is that  this returns the effective uid of the process which can easily be set to 0  by invoking a setuidroot binary such as usrbinchsh in the parent  process of pkexec(1). , there is still a short  window where an attacker can fool pkexecpolkitd into thinking that the parent  process has uid 0 and is therefore authorized. This exploit is known to work on polkit1 <= 0.101. Fortunately, this exploit is clean enough that you can try it out without  too much collateral", "qas": [{"answers": [], "question": "What is root cause?", "id": "17932-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17932-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17932-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This method takes an arbitrary sized input structure (passed in rsi) but doesn't check the size of that structure (passed in rcx.) we can see that the method is reading a dword at offset 0x800 of the input struct and comparing that value to 0x200. The first interesting conseqeuence of this is that if the value read is > 0x200 then it gets logged to /var/log/system.log which we can read from userspace allowing us to disclose some kernel memory. r15 is passed to IntelAccelerator::gstqConfigure: call __ZN16IntelAccelerator13gstqConfigureEP19GstConfigurationRec where we reach the following code: here the value at +0x800 is read again and used as the size for a memcpy assuming that it has already been verified, but since it's outside the bounds of the allocation this is actually a toctou bug since with some heap manipulation Tested on OS X ElCapitan 10.11.1 (15b42) on MacBookAir5,2 printf(\"unable to create service matching dictionary\\n\"); return 0; return 0; printf(\"unable to find service\\n\"); return 0; printf(\"unable to get user client connection\\n\"); return 0; char inputStruct[4096]; char outputStruct[4096]; printf(\"that was an error in the first call, don't care!\\n\"); return 0;", "qas": [{"answers": [{"answer_start": 302, "text": "the value read is > 0x20"}], "question": "What is root cause?", "id": "39368-0", "is_impossible": false}, {"answers": [{"answer_start": 419, "text": "disclose some kernel memory"}], "question": "What is impact?", "id": "39368-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39368-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An unsafe strcpy at abc.c:241 allows an attacker to overwrite the return address from the openIn function by providing a long input filename. We're going to place a breakpoint before and after abc.c:241 to show the overflow. $ make This is free software; see the source for copying conditions. (gdb) c (gdb) c file \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEDCBA\" does not exist Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47254-0", "is_impossible": true}, {"answers": [{"answer_start": 52, "text": "overwrite the return address from the openIn function"}], "question": "What is impact?", "id": "47254-1", "is_impossible": false}, {"answers": [{"answer_start": 109, "text": "providing a long input filename"}], "question": "What is attack vector?", "id": "47254-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "There is a memory corruption issue that occurs when processing a malformed RTP video stream in FaceTime. This bug can be reached if a user accepts a call from a malicious caller. This issue only affects FaceTime on iOS and Mac. To reproduce issue on a Mac: 1) Add the line: to the (allow file-read* file-write* section of /System/Library/Sandbox/Profiles/com.apple.avconferenced.sb 2) Add the line: to com.apple.identityservicesd.sb and restart the host 4) I performed these steps on a MacBook Air running 10.14.1 Taking a second look at this, the root cause of this issue is probably an overflow in splitting RED packets: Proof of Concept:", "qas": [{"answers": [{"answer_start": 132, "text": "a user accepts a call from a malicious caller"}], "question": "What is root cause?", "id": "46433-0", "is_impossible": false}, {"answers": [{"answer_start": 11, "text": "memory corruption"}], "question": "What is impact?", "id": "46433-1", "is_impossible": false}, {"answers": [{"answer_start": 52, "text": "processing a malformed RTP video stream in FaceTime"}], "question": "What is attack vector?", "id": "46433-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Attackers can exploit this issue to execute arbitrary code in the context of the user running the affected application. This issue only affects Adobe Reader and Acrobat running on Apple Mac OS X Technical details terminal 1: terminal 2: terminal 1: Program received signal EXC_BAD_ACCESS, Could not access memory. As can be seen from the above, we control the value in eax (in this case 12010, the length of the acrobat:// + the 12000 A's). This allows us to write the null byte anywhere in memory between ebp-0x420 (0xBFFFE4E8) and the end of the stack. The behaviour may be leveraged to modify the frame pointer, changing the execution flow and thus permitting arbitrary code execution in the context of the user running the program.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15212-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "execute arbitrary code in the context of the user running the affected application"}], "question": "What is impact?", "id": "15212-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "15212-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A remote denial of service vulnerability affects Spinworks Application Server. This issue is due to a failure of the application to properly handle malformed requests. An attacker may leverage this issue to trigger a denial of service condition in the affected software.", "qas": [{"answers": [{"answer_start": 100, "text": "a failure of the application to properly handle malformed requests"}], "question": "What is root cause?", "id": "25219-0", "is_impossible": false}, {"answers": [{"answer_start": 9, "text": "denial of service"}], "question": "What is impact?", "id": "25219-1", "is_impossible": false}, {"answers": [{"answer_start": 148, "text": "malformed requests"}], "question": "What is attack vector?", "id": "25219-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "In some cases, when a user connects to the daemon, and upon negotiating the connection sends a login string of excessive length, a buffer overflow occurs. This could result in heap corruption and arbitrary words in memory being overwritten. It may be possible to exploit this issue to execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22061-0", "is_impossible": true}, {"answers": [{"answer_start": 176, "text": "heap corruption and arbitrary words in memory being overwritten"}], "question": "What is impact?", "id": "22061-1", "is_impossible": false}, {"answers": [{"answer_start": 88, "text": "ends a login string of excessive length"}], "question": "What is attack vector?", "id": "22061-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Generate exploit.txt, copy the contents to clipboard  2.) Paste the contents of exploit.txt under 'Select source image file' and \"Select Destination image file\"  4.) In the application, open 'Convert image to file format'  3.)", "qas": [{"answers": [], "question": "What is root cause?", "id": "46289-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "46289-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "46289-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The server should be frozen now with 100\\% cpu usage.\");", "qas": [{"answers": [], "question": "What is root cause?", "id": "1196-0", "is_impossible": true}, {"answers": [{"answer_start": 0, "text": "The server should be frozen now with 100\\% cpu usage"}], "question": "What is impact?", "id": "1196-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1196-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Windows is prone to a local denial-of-service vulnerability. Attackers may exploit this issue to deny further service to legitimate users. This issue affects Windows 2003 and Windows Vista; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32573-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "denial-of-service"}], "question": "What is impact?", "id": "32573-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32573-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability occurs due to insufficient allocation of memory for buffers. An attacker can exploit this vulnerability by issuing an overly long GET request to the vulnerable Linksys device. When the device attempts to process the malformed input, it will be possible to corrupt sensitive memory. This may allow an attacker to change configuration information on the vulnerable device.", "qas": [{"answers": [{"answer_start": 32, "text": "insufficient allocation of memory for buffers"}], "question": "What is root cause?", "id": "22062-0", "is_impossible": false}, {"answers": [{"answer_start": 274, "text": "corrupt sensitive memory"}], "question": "What is impact?", "id": "22062-1", "is_impossible": false}, {"answers": [{"answer_start": 125, "text": "issuing an overly long GET request to the vulnerable Linksys device"}], "question": "What is attack vector?", "id": "22062-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Reportedly, a denial of service vulnerability affects Microsoft Windows GDI library 'gdi32.dll'. This issue is due to a failure of the application to securely copy data from malformed EMF image files. An attacker may leverage this issue to trigger a denial of service condition in software implementing the vulnerable library. Other attacks may also be possible.", "qas": [{"answers": [{"answer_start": 118, "text": "a failure of the application to securely copy data from malformed EMF image files"}], "question": "What is root cause?", "id": "25231-0", "is_impossible": false}, {"answers": [{"answer_start": 14, "text": "denial of service"}], "question": "What is impact?", "id": "25231-1", "is_impossible": false}, {"answers": [{"answer_start": 174, "text": "malformed EMF image files"}], "question": "What is attack vector?", "id": "25231-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "LeapFTP client is prone to a remote buffer overflow vulnerability. The issue arises when the client handles a malformed LeapFTP Site Queue (.lsq) file. A remote attacker may gain unauthorized access in the context of the user running the application. LeapFTP versions prior to 2.7.6.612 are affected by this vulnerability.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26194-0", "is_impossible": true}, {"answers": [{"answer_start": 174, "text": "gain unauthorized access in the context of the user running the application"}], "question": "What is impact?", "id": "26194-1", "is_impossible": false}, {"answers": [{"answer_start": 108, "text": "a malformed LeapFTP Site Queue (.lsq) file"}], "question": "What is attack vector?", "id": "26194-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "exploit Note: Also you can use \"<<\" characters; reason Recursive functions call to each others, until the stack overflow.", "qas": [{"answers": [], "question": "What is root cause?", "id": "44946-0", "is_impossible": true}, {"answers": [{"answer_start": 102, "text": "the stack overflow"}], "question": "What is impact?", "id": "44946-1", "is_impossible": false}, {"answers": [{"answer_start": 27, "text": "use \"<<\" characters"}], "question": "What is attack vector?", "id": "44946-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Now we're able to start an unrestricted root shell and gain control over the file system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21666-0", "is_impossible": true}, {"answers": [{"answer_start": 18, "text": "start an unrestricted root shell and gain control over the file system"}], "question": "What is impact?", "id": "21666-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21666-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Exploit for the locale format string vulnerability in Solaris/SPARC 2.7 / 7 Based on the exploit by Warning3 <warning3@nsfocus.com> 6  default offset of the jump location from the beginning of the shell buffer  define PATTERN 1024  format string buffer size  define SHELL 1024  shell buffer size   get current stack point address  long get_sp(void)   prints a long to a string  return ptr;  check if a long contains zero bytes   create the shell buffer  char *ptr;  check align parameter   the vulnerable program using our custom environment   print the program usage  printf(\" dump Dumps the stack\\n\"); printf(\" shell Dumps the shell /eject\\n\\n\"); printf(\" --num=96 Number of words to dump from the stack\\n\"); printf(\" --align=2 Sets the alignment (0, 1, 2 or 3)\\n\"); printf(\" --shellofs=-6 Offset of the shell Adjust shellofs and align as neccessary\\n\"); if (retloc == RETLOC) { /* if retloc was not specified on the command line, calculate it */  create the format string   * put the address of the low order half-word of the return address on the stack */ ptr = put_long(ptr, 0x42424242); / * put the address of the high order half-word of the return address on the stack */  fill the shellbuf with NOP instructions but leave enough space for the shell code   add additional padding to the shell buffer to make sure its size is always the same   at this point the shell buffer should be exactly SHELL bytes long, including the nullterminator   printf(\" --retloc=0xeffffa3c Location of the return address\\n\"); char *ptr;  read the exploit arguments  else {  create the shell buffer   calculate memory addresses   sh_add now points to the beginning of the shell buffer  printf(\"Warning: sh_addr", "qas": [{"answers": [], "question": "What is root cause?", "id": "197-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "197-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "197-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\" Invalid Memory Reference Crash POC  for more information vist my blog it's very hard to implemented,if we can make the \"reference\" point to valid memory location contain  unicode string we can corrupt the memory and get code execution(it's not so easy as you can see,try it manually in olly).", "qas": [{"answers": [], "question": "What is root cause?", "id": "7962-0", "is_impossible": true}, {"answers": [{"answer_start": 2, "text": "Invalid Memory Reference Crash"}], "question": "What is impact?", "id": "7962-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "7962-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The main source of problems is due to a buffer overflow in the krb_rd_req() library function. Therefore, it is possible for a remote attacker to exploit this vulnerability and gain root access on affected machines, or obtain root level access once local. This program exploits a vulnerability in the 'ksu' utility included  with the MIT Kerberos distribution. This exploit is for Linuxx86 with Kerberos version 1.0. As a result, a copy of 'sh' must  reside in the current directory for the exploit to work. This function is used by every application that supports Kerberos 4 authentication, including, but not limited to, kshrd, klogin, telnetd, ftpd, rkinitd, v4rcp and kpopd.", "qas": [{"answers": [{"answer_start": 38, "text": "a buffer overflow in the krb_rd_req() library function"}], "question": "What is root cause?", "id": "19925-0", "is_impossible": false}, {"answers": [{"answer_start": 176, "text": "gain root access on affected machines, or obtain root level access once local"}], "question": "What is impact?", "id": "19925-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19925-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Conquest is prone to multiple remotely exploitable vulnerabilities, including a stack-based buffer-overflow vulnerability and a memory-corruption vulnerability. An attacker can exploit these issues to execute arbitrary code within the context of the affected application or cause the affected application to crash, denying service to legitimate users. These issues affect version 8.2a; prior versions may also be affected. Launch the client, specifying the alternate metaserver: 3. conquest should have been crashed trying to executing the code at offset 0x61616161", "qas": [{"answers": [], "question": "What is root cause?", "id": "29717-0", "is_impossible": true}, {"answers": [{"answer_start": 201, "text": "execute arbitrary code within the context of the affected application or cause the affected application to crash, denying service to legitimate users"}], "question": "What is impact?", "id": "29717-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "29717-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Zope is prone to multiple remote denial-of-service vulnerabilities. Remote attackers can exploit this issue to cause the Zope server to halt or to consume excessive server resources, resulting in denial-of-service conditions. To halt the application: raise SystemExit To consume excessive resources: return 'foo'.encode('test.testall')", "qas": [{"answers": [], "question": "What is root cause?", "id": "32581-0", "is_impossible": true}, {"answers": [{"answer_start": 33, "text": "denial-of-service"}], "question": "What is impact?", "id": "32581-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32581-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Multiple vulnerabilities were identified in the Pictview image processing library embedded by the Toolkit and signed by ActivePDF. They could allow remote attackers to compromise applications relying on the Toolkit to process untrusted images. For more information and guidance, please contact the ActivePDF support through their portal (https://support.activepdf.com). Disclosure timeline 2017/11/28 - Report sent to ActivePDF support 2017/11/28 - Support acknowledges the issue and confirms that the library is scheduled to be removed from the product 2018/01/29 - Received notification from the ActivePDF support that the Pictview image processing library had been removed from ActivePDF in build 2017/02/26 - Public disclosure An image processing library embedded in the ActivePDF Toolkit product is prone to multiple BSS out-of-bound and signedess errors which can yield direct EIP control by overwriting function pointers, error handling structures or IAT entries.", "qas": [{"answers": [{"answer_start": 168, "text": "compromise applications relying on the Toolkit to process untrusted images"}], "question": "What is root cause?", "id": "44251-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "44251-1", "is_impossible": true}, {"answers": [{"answer_start": 226, "text": "untrusted images"}], "question": "What is attack vector?", "id": "44251-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If the domain was ok, now the service is down.\\n\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "8544-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8544-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8544-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "I haven't used the more common methods of overwritting  PEB or UEF as it seemed both of them were not called  when the heap was overflowed, probably due to clean  clear ups when the overflow is detected. The exploit is basically based on the PoC by r4x  and it recreates the scenario but also exploits it by  creating two sockets, which the vital point is the  Enjoy it ladies & gents Author has no responsibility over the damage you do use IO::Socket; use warnings; use strict; print \"[x] WFTPD Explorer Pro 1.0 Remote Heap Overflow Exploit\\n\"; (\"331 Password required.\\r\\n\", \"230 User logged in.\\r\\n\", \"200 Type set to I.\\r\\n\", \"257 '/' is current directory.\\r\\n\", \"227 Entering Passive Mode (127,0,0,1,100,100).\\r\\n\", \"150 Opening ASCII mode data connection for file list.\\r\\n\"); my $heapend =", "qas": [{"answers": [{"answer_start": 156, "text": "clean  clear ups when the overflow is detected"}], "question": "What is root cause?", "id": "7913-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "7913-1", "is_impossible": true}, {"answers": [{"answer_start": 309, "text": "creating two sockets"}], "question": "What is attack vector?", "id": "7913-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability in Outlook Express allows a malicious message sent to the users mailbox to halt POP mail download. The Microsoft tracking number of this issue is S2134 T6142. If a message contains a single dot in a line is must be escaped by added an extra dot. However if at the IP level a line containing two such dots falls at a packet boundary such as the one dot is at the end of one packet and the other dot is at the end of the next packet Outlook Express will interpret the dot in the second packet as the EOM marker. This result in Outlook Express switching back to POP3 command mode and interpreting the rest of the message as a POP3 response. This normally result in an error message or the hanging of the session. The message will not be removed from the server and any further attempts will meet with the same result. Include a few thousand lines like this in an email and the bug will trigger:", "qas": [{"answers": [], "question": "What is root cause?", "id": "19207-0", "is_impossible": true}, {"answers": [{"answer_start": 91, "text": "halt POP mail download"}], "question": "What is impact?", "id": "19207-1", "is_impossible": false}, {"answers": [{"answer_start": 44, "text": "malicious message sent to the users mailbox"}], "question": "What is attack vector?", "id": "19207-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This exploit is for the svnserve daemon (svn:// protocol) and will not work for Subversion over webdav (http[s]://). This exploit should never crash the daemon, and should be safe to do multi-hits. This exploit seems to (not very often, I've only seen it during testing) corrupt the subversion database, so be careful!  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "16284-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16284-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16284-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "In fslx.sys 's hook function of \"NtQueryValueKey\" , it directly write to the buffer of \"ResultLength\" without any check EXPLOIT CODE:", "qas": [{"answers": [], "question": "What is root cause?", "id": "26950-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "26950-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "26950-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " The crafted metafile (WMF) from this code when viewed in explorer crashes it. The issue is seen  when the field 'mtNoObjects' in the Metafile header is set to 0x0000 The code was tested on Windows 2000 server SP4. The issue does not occur with the  Disclaimer: This code is for educationaltesting purposes by authorized persons on  networkssystems setup for such a purpose. The author of this code shall not bear  any responsibility for any damage caused by using this code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1346-0", "is_impossible": true}, {"answers": [{"answer_start": 67, "text": "crash"}], "question": "What is impact?", "id": "1346-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1346-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The escape handler for 0x10000e9 lacks bounds checks, and passes a user specified size as the size to memcpy, resulting in a stack buffer overflow: return 0; return 1;  escape_buf is escape_data from previous function Crashing context (Win 10 x64, 372.54): A driver has overrun a stack-based buffer.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40668-0", "is_impossible": true}, {"answers": [{"answer_start": 218, "text": "Crash"}], "question": "What is impact?", "id": "40668-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40668-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Halo Combat Evolved game server is reported prone to a remote denial of service vulnerability. A remote attacker may exploit this vulnerability to deny service for legitimate game players. Patches are available to address the issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24586-0", "is_impossible": true}, {"answers": [{"answer_start": 66, "text": "denial of service"}], "question": "What is impact?", "id": "24586-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24586-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Host Integration Server is prone to a remote denial-of-service vulnerability. An attacker can exploit this issue to cause the application to become unresponsive or to crash, denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "36211-0", "is_impossible": true}, {"answers": [{"answer_start": 55, "text": "denial-of-service"}], "question": "What is impact?", "id": "36211-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "36211-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can exploit this vulnerability to run arbitrary code with superuser privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32848-0", "is_impossible": true}, {"answers": [{"answer_start": 46, "text": "run arbitrary code with superuser privileges"}], "question": "What is impact?", "id": "32848-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32848-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "NETGEAR WGR614 is prone to a denial-of-service vulnerability that occurs in the administration web interface. Successful exploits will cause the affected web interface to crash, denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32583-0", "is_impossible": true}, {"answers": [{"answer_start": 29, "text": "denial-of-service"}], "question": "What is impact?", "id": "32583-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32583-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "> 'UltraISO CUE File Parsing Buffer Overflow', This module exploits a stack-based buffer overflow in EZB Systems, Inc's UltraISO. When processing .CUE files, data is read from file into a fixed-size stack buffer. Since no bounds checking is done, a buffer overflow can occur. Attackers can execute arbitrary code by convincing their victim to open an CUE file. Opening either file will trigger the vulnerability, but the files must both exist An SEH exploit was  originally created for this vuln, but was tossed in favor of using  the return address method instead. # offset from the end to our jmp 'JmpOff' # offset from the end to our jmp end def exploit  Smashed return address. We utilize a single instruction near the end of the buffer space to  jump back to the beginning of the buffer..  'UltraISO CUE File Parsing Buffer Overflow', This module exploits a stack-based buffer overflow in EZB Systems, Inc's UltraISO. This prevents us from  writing data after the return address. This is due to the offset being  stable across different open methods", "qas": [{"answers": [{"answer_start": 219, "text": "no bounds checking is done"}], "question": "What is root cause?", "id": "16627-0", "is_impossible": false}, {"answers": [{"answer_start": 82, "text": "buffer overflow"}], "question": "What is impact?", "id": "16627-1", "is_impossible": false}, {"answers": [{"answer_start": 316, "text": "convincing their victim to open an CUE file"}], "question": "What is attack vector?", "id": "16627-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been identified in the Sun Java Virtual Machine packaged with JRE and SDK. This issue results in the circumvention of the Java Security Model, and can permit an attacker to execute arbitrary code on vulnerable hosts.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23276-0", "is_impossible": true}, {"answers": [{"answer_start": 193, "text": "execute arbitrary code on vulnerable hosts"}], "question": "What is impact?", "id": "23276-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23276-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow vulnerability has been reporting in the handling of some malformed SMB requests. An attacker may send a malformed SMB request packet in order to exploit this condition. It has been reported possible to corrupt heap memory, leading to a crash of the underlying system. It may prove possible to exploit this vulnerability to execute arbitrary code and gain local access to the vulnerable system. Reportedly, this vulnerability may be exploited both as an authenticated user, and with anonymous access to the service. andor  modify it under the terms of the GNU General Public License  as published by the Free Software Foundation; either version 2 of  the License or (at your option) any later version This program is distributed in the hope that it will be  useful, but WITHOUT ANY WARRANTY; without even the implied warranty  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details You should have received a copy of the GNU General Public License  along with this program; if not, write to the Free Software  USA  Compile this program using only GCC and no other compilers  (except if you think this one supports the __attribute Now convert the name to the rfc10011002 format you probably won't be able to crash this host\\n\"); printf (\"However, you can try setting one manually\\n\"); return NULL; char * else return p; void return 0; return 1; else return 0; switch (c) case 'N': case 'n': case 'p': case 'P': case 't': case 'T': case 'h': (\" -n [packets] Number of crafted packets to send (default: %d)\\n\", (\" -t [udp-timeout] This program is free software; you can redistribute it Another thing: The word counts are hardcoded, careful if you hack the sources the length of the first field into the output buffer d\\n\", exit (1); if (!name exit (1); else exit (1); for (;;) \"Timeout during TCP read - Seems like the remote host has crashed\\n\"); return 0; else return 1; (\"Nuke failed at state %#02x (EOF, wrong netbios name ?), exiting...\\n\", exit (1); exit (1); switch (state) case STATE_REQUESTING_SESSION_SETUP: case STATE_NEGOTIATING_PROTOCOL: case STATE_REQUESTING_SESSION_SETUP_ANDX: case STATE_REQUESTING_TREE_CONNECT_ANDX: exit (1); return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "21746-0", "is_impossible": true}, {"answers": [{"answer_start": 254, "text": "crash of the underlying system"}], "question": "What is impact?", "id": "21746-1", "is_impossible": false}, {"answers": [{"answer_start": 120, "text": "a malformed SMB request packet"}], "question": "What is attack vector?", "id": "21746-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This ISAPI filter runs in-process with inetinfo.exe, any attempt to exploit this flaw will result in the termination and potential restart of the IIS service", "qas": [{"answers": [], "question": "What is root cause?", "id": "1260-0", "is_impossible": true}, {"answers": [{"answer_start": 101, "text": "the termination and potential restart of the IIS service"}], "question": "What is impact?", "id": "1260-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1260-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "## The 00 controls the crash i = 0 for i in range(0,len(buf)):", "qas": [{"answers": [], "question": "What is root cause?", "id": "18270-0", "is_impossible": true}, {"answers": [{"answer_start": 23, "text": "crash"}], "question": "What is impact?", "id": "18270-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "18270-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The USR808054 wireless access point is reported to contain a denial of service vulnerability in its embedded web server. When malicious requests are received by the device, it will reportedly crash, denying service to legitimate users of the access point. This issue can be exploited by anybody with network connectivity to the administration HTTP server, no authentication is required. Version 1.21h of the device was found to be vulnerable, but other versions are also likely affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24344-0", "is_impossible": true}, {"answers": [{"answer_start": 61, "text": "denial of service"}], "question": "What is impact?", "id": "24344-1", "is_impossible": false}, {"answers": [{"answer_start": 126, "text": "malicious request"}], "question": "What is attack vector?", "id": "24344-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Indiatimes Messenger is reported prone to a remote buffer overflow vulnerability. A successful attack may trigger a crash in the client or lead to arbitrary code execution. The attacker may then gain unauthorized remote access in the context of the user running the application. Indiatimes Messenger 6.0 is affected by this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26216-0", "is_impossible": true}, {"answers": [{"answer_start": 114, "text": "a crash in the client or lead to arbitrary code execution"}], "question": "What is impact?", "id": "26216-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26216-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This could potentially allow an authorized but non-privileged local user to execute arbitrary code witystem privileges on the system. The application suffers from an unquoted service path issue impacting the service 'ASLDRService' deployed as part of ATK Hotkey", "qas": [{"answers": [], "question": "What is root cause?", "id": "40520-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "execute arbitrary code witystem privileges on the system"}], "question": "What is impact?", "id": "40520-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40520-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "With this, it should be possible to execute arbitrary code in the context of the application. For this reason, Microsoft has logged this as a bug, not a security issue or vulnerability since calling it with command line arguments will not give you elevated privileges that the calling entity did not already have. The executable, hhc.exe, does not properly check the length of user-supplied command line arguments.", "qas": [{"answers": [{"answer_start": 314, "text": "The executable, hhc.exe, does not properly check the length of user-supplied command line arguments"}], "question": "What is root cause?", "id": "11034-0", "is_impossible": false}, {"answers": [{"answer_start": 36, "text": "execute arbitrary code in the context of the application"}], "question": "What is impact?", "id": "11034-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "11034-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability could be exploited by a remote attacker to execute arbitrary code on the target machine, by enticing the user of IcoFX to open a specially crafted icon file There was no official answer from vendor after several attempts to report this vulnerability (see [Sec This vulnerability was discovered and researched by Marcos Accossatto from Core Exploit Writers Team. Below is shown the result of opening the maliciously crafted file The vulnerable function is located in 0x80D9F8. By loading the PoC, the loop [0x80DA74, 0x80DA93] fills the buffer and overwrite the Exception Will copy 16 bytes from file to buffer Index, will be overwritten with our value in the penultimate loop turn Counter, will be overwritten with our value in the penultimate loop turn At the 'MOVSX' of 0x80DA95, the CPU registers are as follows: the stack Exception Handler is overwritten (shellcode starts in 0012F380 0012FA10 As a result, the normal execution flow can be altered in order to execute arbitrary code. : The contents of this advisory are copyright (c) 2013 Core Security Technologies and (c) 2013 CoreLabs, and are licensed under a Creative This advisory has been signed with the GPG key of Core Security Technologies advisories team, which is available for download at The publication of this advisory was coordinated by Fernando Miranda from Core Advisories Team. Yes IcoFX [1] is prone to a (client side) security vulnerability when processing .ICO files. Core Security Technologies can be reached at +1 (617) 399-6980 or on the Web at", "qas": [{"answers": [], "question": "What is root cause?", "id": "30208-0", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "execute arbitrary code on the target machine"}], "question": "What is impact?", "id": "30208-1", "is_impossible": false}, {"answers": [{"answer_start": 111, "text": "enticing the user of IcoFX to open a specially crafted icon file"}], "question": "What is attack vector?", "id": "30208-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "By modifying the UserID value you can reset the password of any local user in the application without requiring administrative privileges. Authenticate to FileBound via the following web service method and SOAP request: After authentication a request can be sent to the following administrator's password reset web service method and SOAP request: By modifying the UserID value the password can be reset for any existing user in the system. A response code of -1 confirms the password reset was successful.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21892-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "reset the password of any local user in the application without requiring administrative privileges"}], "question": "What is impact?", "id": "21892-1", "is_impossible": false}, {"answers": [{"answer_start": 3, "text": "modifying the UserID value"}], "question": "What is attack vector?", "id": "21892-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "By creating a specially crafted ipj file, an an attacker may be able to execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "10332-0", "is_impossible": true}, {"answers": [{"answer_start": 72, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "10332-1", "is_impossible": false}, {"answers": [{"answer_start": 3, "text": "creating a specially crafted ipj file"}], "question": "What is attack vector?", "id": "10332-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can exploit this issue to execute arbitrary code within the context of the affected application. Failed exploit attempts will result in denial-of-service conditions.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32587-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "execute arbitrary code within the context of the affected application"}], "question": "What is impact?", "id": "32587-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32587-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "20 FF 75-1C FF 75 18 FF 75 14 FF\" print \"----------------------------------------------------------------\\n\" print \"To see application crash, encrease the number of characters. I was unable to execute arbitrary code", "qas": [{"answers": [], "question": "What is root cause?", "id": "3254-0", "is_impossible": true}, {"answers": [{"answer_start": 135, "text": "crash"}], "question": "What is impact?", "id": "3254-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "3254-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The DeferWindowPos() call will trigger and block on the execution of a window procedure in a separate thread from which we call EndDeferWindowPos on the same handle.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38266-0", "is_impossible": true}, {"answers": [{"answer_start": 43, "text": "block on the execution of a window procedure in a separate thread"}], "question": "What is impact?", "id": "38266-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38266-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "According to POSIX, the result of ftruncate(2) is unspecified for file types other than VREG, VDIR and shared memory objects. PR kern/98064 tested on FreeBSD 6.0-RELEASE-p5, 6.1-RELEASE-p10 (latest at the time of writing)   it just makes the system reboot, and with a bit of luck fucks up the filesystem.", "qas": [{"answers": [], "question": "What is root cause?", "id": "2541-0", "is_impossible": true}, {"answers": [{"answer_start": 232, "text": "makes the system reboot, and with a bit of luck fucks up the filesystem"}], "question": "What is impact?", "id": "2541-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "2541-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This file can't be deleted, nor renamed or edited by any means By the Phone. Folders such as Images Folder,Videos Folder etc,if renamed in Foldername.sest format, then this folder attains System Folder status, & no matter how many files are present in it, they become totally invisible.", "qas": [{"answers": [], "question": "What is root cause?", "id": "11043-0", "is_impossible": true}, {"answers": [{"answer_start": 261, "text": "become totally invisible"}], "question": "What is impact?", "id": "11043-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "11043-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Mozilla Thunderbird is prone to a remote denial-of-service vulnerability. The issue presents itself when the application handles a specially crafted address book file. Mozilla Thunderbird 1.5 is reportedly affected by this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "27246-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "denial-of-service"}], "question": "What is impact?", "id": "27246-1", "is_impossible": false}, {"answers": [{"answer_start": 129, "text": "a specially crafted address book file"}], "question": "What is attack vector?", "id": "27246-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been discovered in the Ximian Evolution Mail User Agent (MUA). The problem occurs when the mailer attempts to process a maliciously encoded e-mail message. When attempting to decode the message, the MUA will repeatedly attempt to allocate memory, resulting in system resource exhaustion and will eventually crash. This vulnerability affects Ximian Evolution version 1.2.2 and earlier.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22370-0", "is_impossible": true}, {"answers": [{"answer_start": 280, "text": "system resource exhaustion and will eventually crash"}], "question": "What is impact?", "id": "22370-1", "is_impossible": false}, {"answers": [{"answer_start": 138, "text": "a maliciously encoded e-mail message"}], "question": "What is attack vector?", "id": "22370-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "To trigger the exploit , go to fileImport  file.write junk end", "qas": [{"answers": [], "question": "What is root cause?", "id": "18902-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18902-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18902-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "In KisKrnl.sys 's hook function of \"NtQueryValueKey\" , it directly write to the buffer of \"ResultLength\" without any check EXPLOIT CODE\ufffd\ufffd LONG status; do if (mPtr) push 0 push mSize push mPtr", "qas": [{"answers": [], "question": "What is root cause?", "id": "17561-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17561-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17561-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "GeSHi is prone to a remote denial-of-service vulnerability. Remote attackers can exploit this issue to cause the vulnerable application to enter an infinite loop, consuming excessive resources. This issue affects versions prior to GeSHi 1.0.8.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32596-0", "is_impossible": true}, {"answers": [{"answer_start": 27, "text": "denial-of-service"}], "question": "What is impact?", "id": "32596-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32596-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If an integer parameter has valueOf defined, or the object parameter overrides a constructor, this method can free the TextField parent, which is subsequently used.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39046-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39046-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39046-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: [JetAudio memory corruption in latest Version 8.1.1 ]  Found by : Piece Dumb Fuzzer Jetaudio latest version V 8.1.1 suffers from an memory corruption Vulnerability via a malformed .ogg file format when load JetMPAd.ax data =  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "33332-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "memory corruption"}], "question": "What is impact?", "id": "33332-1", "is_impossible": false}, {"answers": [{"answer_start": 184, "text": "a malformed .ogg file format"}], "question": "What is attack vector?", "id": "33332-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Apache 2.x mod_ssl is reported prone to a remote denial of service vulnerability. This issue likely exists because the application fails to handle exceptional conditions. The vulnerability originates in the 'char_buffer_read' function of the 'ssl_engine_io.c' file. It is likely that this issue only results in a denial of service condition in child process. This BID will be updated as more information becomes available. Apache 2.0.50 is reported to be affected by this issue, however, it is possible that other versions are vulnerable as well. With the following configuration in httpd.conf: Listen 47290 SSLProxyEngine on RewriteEngine on The server may be crashed by issuing the following URI:", "qas": [{"answers": [{"answer_start": 115, "text": "the application fails to handle exceptional conditions"}], "question": "What is root cause?", "id": "24590-0", "is_impossible": false}, {"answers": [{"answer_start": 49, "text": "denial of service"}], "question": "What is impact?", "id": "24590-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24590-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The FreeBSD and OpenBSD 'ftpd' service is prone to a denial-of-service vulnerability because of a NULL-pointer dereference. Successful exploits may allow remote attackers to cause denial-of-service conditions. This issue affects the following releases: char **pop; char buffer[256]; return 0; else return 0;", "qas": [{"answers": [{"answer_start": 96, "text": "a NULL-pointer dereference"}], "question": "What is root cause?", "id": "11705-0", "is_impossible": false}, {"answers": [{"answer_start": 53, "text": "denial-of-service"}], "question": "What is impact?", "id": "11705-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "11705-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "More specifically, the \"a3a3a3a3\" bytes found in the EAX register at the time of the crash are a repetition of a random byte filled by Driver Verifier in each pool allocation before returning it to the caller. At the time of the bugcheck, EBX=8, so the code expects 8 valid pointers in the array; however, only 4 pointers are properly initialized: The issue reproduces on Windows 7. It is easiest to reproduce with Special Pools enabled for ATMFD.DLL (leading to an immediate crash when the bug is triggered), but it should also be possible to observe a crash on a default Windows installation in ATMFD.DLL. We have encountered a number of Windows kernel crashes in the ATMFD.DLL OpenType driver while processing corrupted OTF font files, such as: Invalid system memory was referenced.", "qas": [{"answers": [{"answer_start": 748, "text": "Invalid system memory was referenced"}], "question": "What is root cause?", "id": "37920-0", "is_impossible": false}, {"answers": [{"answer_start": 81, "text": "the crash"}], "question": "What is impact?", "id": "37920-1", "is_impossible": false}, {"answers": [{"answer_start": 713, "text": "corrupted OTF font files"}], "question": "What is attack vector?", "id": "37920-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Mozilla Firefox is prone to a remote denial-of-service vulnerability. An attacker may exploit this vulnerability to cause Mozilla Firefox to crash, resulting in denial-of-service conditions. Little is known regarding this vulnerability; this BID will be updated when more information is disclosed. Mozilla Firefox 2.0.0.2 is prone to this issue; other versions may also be affected. I think identify multiple vulnerabilities in Mozilla Firefox (default installation) which could be exploited by malicious users to bypass the same origin policy, cause a denial of service and conduct other attacks by writing the path of 'document.cookie' with tabulations or/and a large size.", "qas": [{"answers": [], "question": "What is root cause?", "id": "29720-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "denial-of-service"}], "question": "What is impact?", "id": "29720-1", "is_impossible": false}, {"answers": [{"answer_start": 600, "text": "writing the path of 'document.cookie' with tabulations or/and a large size"}], "question": "What is attack vector?", "id": "29720-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability has been confirmed in Internet Explorer on Windows 7 with the latest patches applied. (Note that Page Heap might need to be enabled to observe the crash.) 1st issue: In OLEAUT32!VariantClear, if the Variant is an object, the object destructor is going to be called and immediately after that the variant type is going to be (un)set. 2nd issue: Even if the 1st issue was fixed, the PoC would still trigger another issue, which is that VBADictionary::put_Item calls VariantCopy immediately after VariantClear in order to set the new value in the dictionary.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45923-0", "is_impossible": true}, {"answers": [{"answer_start": 165, "text": "crash"}], "question": "What is impact?", "id": "45923-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "45923-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Using host libthread_db library  Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39673-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39673-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39673-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that FreeWeb server of FreeProxy may be prone to a denial of service vulnerability that may allow an attacker to crash the server process by supplying a malformed HTTP request. The issue exists in the 'CreateFile' function of the web server. FreeProxy versions 3.6 and prior are reported to be prone to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23534-0", "is_impossible": true}, {"answers": [{"answer_start": 72, "text": "denial of service"}], "question": "What is impact?", "id": "23534-1", "is_impossible": false}, {"answers": [{"answer_start": 162, "text": "supplying a malformed HTTP request"}], "question": "What is attack vector?", "id": "23534-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A problem with the utility could allow a local user to gain elevated privileges. The ufsrestore utility is setuid root by default, and vulnerable to a buffer overflow attack. The problem is an oversight in code that was put in place to try and correct/prevent this very type of vulnerability. In a function in ufsrestore, two strncat calls (libc functions that are used to concatenate two NULL terminated arrays) are used to construct a string. The programmer made an effort to prevent a buffer overflow by using the strncat functions, which allow you to specify a maximum byte length. The number of bytes (the maximum that the function should copy) that are passed to the strncats are the size of the entire buffer (the one being constructed), meaning it is possible to overflow it via strncat. This problem makes it possible for a local user execute arbitrary code, and gain root priviliges This script creates a long path a dumps it with usrlibfsufsufsdump cd /var/tmp cd aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa cd aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa cd aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa cd aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa touch a cd /var/tmp   The exploit requires a file called 'dumpufs' created with the accompanying  'ufsscript' in the directory vartmp. This demonstration has only been  The problem is a programming error trying to fix an overflow bug I toyed a bit with some code to position the shellcode at a well defined  location, independent of the platform at run time. *fp;  Try to estimate the stack accurately so we are independent  of the platform and arch. calculate the offset of the shell code   Calculate the total size of the data on the stack. Get the top of the stack. Again padding is  used to create a predictable location of the shell code Then give the 'x' command to force ufsrestore to  return outof the command loop and at the same time overflow the return EXIT_SUCCESS;", "qas": [{"answers": [{"answer_start": 193, "text": "oversight"}], "question": "What is root cause?", "id": "20014-0", "is_impossible": false}, {"answers": [{"answer_start": 55, "text": "gain elevated privileges"}], "question": "What is impact?", "id": "20014-1", "is_impossible": false}, {"answers": [{"answer_start": 905, "text": "creates a long path a dumps it with usrlibfsufsufsdump cd /var/tmp cd"}], "question": "What is attack vector?", "id": "20014-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "G-WAN is prone to a buffer-overflow vulnerability and a denial-of-service vulnerability. Remote attackers can exploit these issues to execute arbitrary code in the context of the application or crash the affected application. 2.10.6 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "36234-0", "is_impossible": true}, {"answers": [{"answer_start": 56, "text": "denial-of-service"}], "question": "What is impact?", "id": "36234-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "36234-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that WWW File Share Pro HTTP server may be prone to a remote denial of service condition. Successful exploitation of this vulnerability may allow a remote attacker to cause the vulnerable server to crash or hang, affectively denying service to legitimate users. WWW File Share Pro versions 2.46 and prior may be prone to this issue. This vulnerability was originally fixed in WWW File Share Pro version 2.48, however, a new report suggests that version 2.60 is vulnerable to a similar attack.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23538-0", "is_impossible": true}, {"answers": [{"answer_start": 82, "text": "denial of service condition"}], "question": "What is impact?", "id": "23538-1", "is_impossible": false}, {"answers": [{"answer_start": 45, "text": "HTTP"}], "question": "What is attack vector?", "id": "23538-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "At the time of discovery, it was clear the code suffered from many insecure coding constructs like this and much more -- but there was no guideline around making security related bug reports (other than using the public issue tracker) *src_fname;  try to open the source file  we need to chroot  drop privileges  try to read the file  wait for the child to finish else  check destination file (host)  try to create the file else {  copy file  open source return -1;  open destination return -1;  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "41022-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41022-1", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "many insecure coding constructs"}], "question": "What is attack vector?", "id": "41022-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The code continues to use the freed copy of the buffer. An attacker would need to get a target user to open a specially crafted webpage. Disabling JavaScript should prevent an attacker from triggering the vulnerable code path. When the buffer is full, it is grown to 0x60 bytes. A new buffer is allocated at a different location in memory and the contents of the original buffer is copied there. The repro causes the code to do this, but the code continues to access the original buffer after it has been freed. If an attacker was able to cause MSIE to allocate 0x40 bytes of memory and have some control over the contents of this memory before MSIE reuses the freed memory, there is a chance that this issue could be used to execute arbitrary code. I did not attempt to write an exploit for this vulnerability myself. Timeline  April 2014: This vulnerability was found through fuzzing : This vulnerability was submitted to ZDI (From the credits given by Microsoft and ZDI, I surmise that it was Peter 'corelanc0d3r' Van Eeckhoutte of Corelan who reported this issue : Microsoft release MS14056, which addresses this issue", "qas": [{"answers": [], "question": "What is root cause?", "id": "40685-0", "is_impossible": true}, {"answers": [{"answer_start": 726, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "40685-1", "is_impossible": false}, {"answers": [{"answer_start": 108, "text": "a specially crafted webpage"}], "question": "What is attack vector?", "id": "40685-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " 20160902  Vendor released updated version which fix the vulnerability \"  characters which makes it possible to do a path traversal and write anywhere in the system The script will create a zip file named xvdf_fusebundle.zip with a filename test.bat (this can be changed) and will write this file to the root directory C:\\  3. You can change the directory go to startup and when the user reboots the script will get executed or you can write a malicious dll to a program directory or  system32 directory which will get loaded and we gain remote command execution", "qas": [{"answers": [], "question": "What is root cause?", "id": "40741-0", "is_impossible": true}, {"answers": [{"answer_start": 545, "text": "command execution"}], "question": "What is impact?", "id": "40741-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40741-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This exploit tested on Windows Xp SP3 EN", "qas": [{"answers": [], "question": "What is root cause?", "id": "18461-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18461-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18461-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is possible to cause a denial of service in NetScreen Firewall. Once the input URL is longer than 1220 bytes=", "qas": [{"answers": [], "question": "What is root cause?", "id": "20532-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "denial of service"}], "question": "What is impact?", "id": "20532-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20532-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "To properly exploit this vulnerability, the local attacker must insert an executable file in the path of the service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40443-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "40443-1", "is_impossible": true}, {"answers": [{"answer_start": 64, "text": "insert an executable file in the path of the service"}], "question": "What is attack vector?", "id": "40443-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "There is a buffer overflow in the username field when the username is between 200 and 500 characters. Although it may be possible to execute arbitrary code on the vulnerable server, current exploits only cause a denial of service on the remote machine", "qas": [{"answers": [{"answer_start": 0, "text": "There is a buffer overflow in the username field when the username is between 200 and 500 characters"}], "question": "What is root cause?", "id": "19616-0", "is_impossible": false}, {"answers": [{"answer_start": 133, "text": "execute arbitrary code on the vulnerable server, current exploits only cause a denial of service on the remote machine"}], "question": "What is impact?", "id": "19616-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19616-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If a very short RTP packet is received, FEC will assume the packet is longer and process data outside of the allocated buffer. cc To reproduce this issue: 1) Apply new.patch to a fresh WebRTC tree 3) Download the attached files and run ./video_replay This bug causes the following ASAN crash: READ of size 1 at 0x61b003b7ff70 thread T15 (Chrome_libJingl) 0x61b003b7ff70 is located 0 bytes to the right of 1520-byte region [0x61b003b7f980,0x61b003b7ff70) allocated by thread T15 (Chrome_libJingl) here: Shadow bytes around the buggy address: 0x0c3680767ff0: fa fa fa", "qas": [{"answers": [], "question": "What is root cause?", "id": "45444-0", "is_impossible": true}, {"answers": [{"answer_start": 286, "text": "crash"}], "question": "What is impact?", "id": "45444-1", "is_impossible": false}, {"answers": [{"answer_start": 3, "text": "a very short RTP packet"}], "question": "What is attack vector?", "id": "45444-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Thx for taking the time to go over my work and pointing me  pad = \"b33f\"*35 # pad ESP to our alignment (140-bytes)", "qas": [{"answers": [], "question": "What is root cause?", "id": "18693-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18693-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18693-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Just rewrote the exploit using egghunter to inject a bind shell payload  Bug found by Chris Gabriel credit goes to him  To exploit", "qas": [{"answers": [], "question": "What is root cause?", "id": "15575-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15575-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15575-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Please note, that you need to have a valid usernamepassword to execute the malformed command on the server. The server comes with an enabled by default Anonymous account, which is used below.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18469-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18469-1", "is_impossible": true}, {"answers": [{"answer_start": 71, "text": "the malformed command on the server"}], "question": "What is attack vector?", "id": "18469-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "An integer overflow vulnerability leading to a heap overflow in the file ..\\php-5.3.6\\ext\\phar\\tar.c Because php_stream_read () checks that the passed length does not exceed the amount of data available, the buffer overflow sizes are available from the data stream.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17201-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17201-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17201-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Mozilla Firefox is prone to a denial-of-service condition when parsing certain malformed HTML content. Successful exploitation will cause the browser to fail or hang. This issue may be related to BID 11440 Mozilla Invalid Pointer Dereference Vulnerability, but this has not been confirmed. Mozilla Firefox versions prior to 1.5.0.1 are prone to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "27253-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "denial-of-service"}], "question": "What is impact?", "id": "27253-1", "is_impossible": false}, {"answers": [{"answer_start": 79, "text": "malformed HTML content"}], "question": "What is attack vector?", "id": "27253-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Consider the case where a filter attempts to check whether args[0]<0x123456789abc. systemd also has some code that uses arithmetic comparisons in specifically for two purposes:  If you whitelist a range of address families for socket() using RestrictAddressFamilies, anything outside that range gets blocked with  If you restrict the use of scheduling classes, anything above the permitted class is blocked via SCMP_CMP_GT. The start of the second seccomp filter generated for a systemd unit with So this filter will e.g (and the kernel will ignore the high bit, meaning that in effect, this filter grants access to families like AF_AX25); but as far as I can tell, the other filter installed by systemd prevents this. In the open-source users of libseccomp that I have been able to find on codesearch.debian.net, this issue doesn't seem to have significant impact; but someone might rely on this behavior, so I've decided to treat this as a security bug.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46564-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "46564-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "46564-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This directory uses the name logwatch.$pid, where $pid is the process id of the executing script. It is therefore possible for a local user to create a malicious logwatch.$pid directory using predicted process IDs, and place malicious files in the directory which will be executed Upon execution, LogWatch creates a directory in /tmp.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21356-0", "is_impossible": true}, {"answers": [{"answer_start": 219, "text": "place malicious files in the directory which will be executed"}], "question": "What is impact?", "id": "21356-1", "is_impossible": false}, {"answers": [{"answer_start": 143, "text": "create a malicious logwatch.$pid directory using predicted process IDs,"}], "question": "What is attack vector?", "id": "21356-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This overflow may result in the corruption of critical heap memory structures, leading to possible remote code execution. An attacker can exploit this issue by crafting a malicious web page and having unsuspecting users view the page in a vulnerable version of Mozilla or Netscape. Netscape 7.0, 7.1, and versions of Mozilla prior to 1.7.1 are known to be vulnerable to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24346-0", "is_impossible": true}, {"answers": [{"answer_start": 28, "text": "the corruption of critical heap memory structures, leading to possible remote code execution"}], "question": "What is impact?", "id": "24346-1", "is_impossible": false}, {"answers": [{"answer_start": 160, "text": "crafting a malicious web page and having unsuspecting users view the page in a vulnerable version of Mozilla or Netscape"}], "question": "What is attack vector?", "id": "24346-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "ifnet_reset_order contains this code: at (a) a controlled 32-bit value is read into an unsigned 32-bit variable. this value is used as an unsigned index by providing a value with the most-significant bit set making it negative when cast to a signed type we can pass the bounds check at (b) and lead to reading an interface pointer out-of-bounds below the ifindex2ifnet array. This leads very directly to memory corruption at (d) which will add the value read out of bounds to a list structure. (on 64-bit platforms the array index wouldn't wrap around so the read would actually occur > 2GB above the array, not below) if 0 MacOS/iOS kernel memory corruption due to Bad bounds checking in SIOCSIFORDER socket ioctl SIOCSIFORDER is a new ioctl added in iOS 10.", "qas": [{"answers": [{"answer_start": 666, "text": "Bad bounds checking in SIOCSIFORDER socket"}], "question": "What is root cause?", "id": "41792-0", "is_impossible": false}, {"answers": [{"answer_start": 404, "text": "memory corruption"}], "question": "What is impact?", "id": "41792-1", "is_impossible": false}, {"answers": [{"answer_start": 156, "text": "providing a value with the most-significant bit set making it negative when cast to a signed type"}], "question": "What is attack vector?", "id": "41792-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This script actually works!", "qas": [{"answers": [], "question": "What is root cause?", "id": "62-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "62-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "62-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The following XML tag elements were found to be vulnerable to buffer overflows, which can be exploited to execute arbitrary code under the context of the user running Final Draft 8: By crafting a file that contains more than 10,032 characters in one of the above fields, the Final Draft 8 application will crash as a result of a buffer overflow overwriting the SEH (Structured Exception Handler). The latest version of Final Draft (version 8.02) remediates this vulnerability. > 'Final Draft 8 File Format Stack Buffer Overflow', This module exploits a stack-based buffer overflow in Final Draft 8. Multiple fields are vulnerable to the overflow, however <Word> in <IgnoredWords> is the only field to accept mixed-case characters. end def exploit <Text>Int. More forensic banter leads us to the end of the teaser.</Text", "qas": [{"answers": [], "question": "What is root cause?", "id": "18184-0", "is_impossible": true}, {"answers": [{"answer_start": 93, "text": "exploited to execute arbitrary code under the context of the user running Final Draft 8"}], "question": "What is impact?", "id": "18184-1", "is_impossible": false}, {"answers": [{"answer_start": 185, "text": "crafting a file that contains more than 10,032 characters in one of the above fields"}], "question": "What is attack vector?", "id": "18184-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "a denial  of service (disk consumption) and POSSIBILY (yeah, sure;) gain privileges  via the PR_SET_DUMPABLE argument of the prctl function and a program that  causes a core dump file to be created in a directory for which the user does  not have permissions (CVE20062451)  The suid_dumpable support in Linux kernel 2.6.13 up to versions before  2.6.17.4, and 2.6.16 before 2.6.16.24, allows a local user to cause", "qas": [{"answers": [], "question": "What is root cause?", "id": "2006-0", "is_impossible": true}, {"answers": [{"answer_start": 2, "text": "denial  of service (disk consumption) and POSSIBILY (yeah, sure;) gain privileges"}], "question": "What is impact?", "id": "2006-1", "is_impossible": false}, {"answers": [{"answer_start": 89, "text": "the PR_SET_DUMPABLE argument of the prctl function and a program"}], "question": "What is attack vector?", "id": "2006-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "By killing the corrisponding task we can free this pointer leaving the user client with a dangling pointer. This bug could be leveraged for kernel memory corruption and is reachable from interesting sandboxes including safari and chrome. No race conditions because the task struct pointer is on the kernel heap, not the stack.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40653-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "free this pointer leaving the user client with a dangling pointer"}], "question": "What is impact?", "id": "40653-1", "is_impossible": false}, {"answers": [{"answer_start": 3, "text": "killing the corrisponding task"}], "question": "What is attack vector?", "id": "40653-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Linux kernel is prone to a local denial-of-service vulnerability. Attackers can exploit this issue to cause an affected process to hang, denying service to legitimate users. This issue was introduced in Linux Kernel 2.6.19.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33015-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "denial-of-service"}], "question": "What is impact?", "id": "33015-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33015-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "*pht; // Program Header Table char *elfptr;  Synchronize the ELF in memory and the file system  Should never reach this point, however sometimes the OS didn't crash with  system() until the 2nd execution.", "qas": [{"answers": [], "question": "What is root cause?", "id": "35058-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "35058-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "35058-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The PoC triggers a crashes due to a pool buffer overflow while drawing the caption bar of window. The PoC takes an offset on the command line to be able to test with different values, I tested this on two different Win7 32-bit VM's and had success with 0 and 475000 A bruteforce Python script is also attached which should trigger a crash fairly quickly.", "qas": [{"answers": [{"answer_start": 34, "text": "a pool buffer overflow while drawing the caption bar of window"}], "question": "What is root cause?", "id": "38268-0", "is_impossible": false}, {"answers": [{"answer_start": 19, "text": "crashes"}], "question": "What is impact?", "id": "38268-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38268-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Mozilla Firefox is prone to a vulnerability that results in a persistent denial of service. This issue occurs when a victim sets a malicious bookmark and then follows it. This condition persists even after the browser is restarted. Mozilla Firefox 2.0.0.8 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30713-0", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "persistent denial of service"}], "question": "What is impact?", "id": "30713-1", "is_impossible": false}, {"answers": [{"answer_start": 124, "text": "sets a malicious bookmark"}], "question": "What is attack vector?", "id": "30713-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " The Linux kernel is reported prone to multiple vulnerabilities that occur because of \"rangechecking flaws\" present in the ISO9660 handling routines An attacker may exploit these issues to trigger kernelbased memory corruption. Ultimately, the attacker may be able to execute arbitrary malicious code with ringzero privileges These vulnerabilities are reported to be present in the ISO9660 filesystem handler including Rock Ridge and Juliet extensions for the Linux kernel up to and including version 2.6.11. *] Compiling mangler...' char buf[10240]; echo '[*] Preparing ISO master (feel free to alter this code)...' cd", "qas": [{"answers": [{"answer_start": 86, "text": "\"rangechecking flaws\" present in the ISO9660 handling routines"}], "question": "What is root cause?", "id": "25234-0", "is_impossible": false}, {"answers": [{"answer_start": 197, "text": "kernelbased memory corruption"}], "question": "What is impact?", "id": "25234-1", "is_impossible": false}, {"answers": [{"answer_start": 268, "text": "execute arbitrary malicious code with ringzero privileges"}], "question": "What is attack vector?", "id": "25234-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that FTPServer/X may be prone to a remote format string vulnerability when processing a malicious request from a client. The vulnerability presents itself when the server receives a malicious request containing embedded format string specifiers from a remote client when supplying a username during FTP authentication. This could be exploited to crash the server but could also theoretically permit corruption/disclosure of memory contents and execution of arbitrary code. FTPServer/X COM Object version 1.00.050 has been reported to be vulnerable to this issue, however, other versions could be affected as well. It should be noted that any software that implements the Mabry Software FTPServer/X control, is likely affected by this vulnerability. The vulnerable control is also used by PlatinumFTPServer, which is also vulnerable to this issue. It is noted that other FTP commands such as 'mkdir' and 'rename' are also affected by this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23539-0", "is_impossible": true}, {"answers": [{"answer_start": 367, "text": "crash"}], "question": "What is impact?", "id": "23539-1", "is_impossible": false}, {"answers": [{"answer_start": 96, "text": "processing a malicious request from a client"}], "question": "What is attack vector?", "id": "23539-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This PoC will Crash the server. Check if the webserver is dead.\\r\\n\")", "qas": [{"answers": [], "question": "What is root cause?", "id": "1199-0", "is_impossible": true}, {"answers": [{"answer_start": 14, "text": "Crash the server"}], "question": "What is impact?", "id": "1199-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1199-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Splunk is prone to a remote denial-of-service vulnerability. Exploiting this issue will exhaust system resources and cause the application to crash, denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "36247-0", "is_impossible": true}, {"answers": [{"answer_start": 28, "text": "denial-of-service"}], "question": "What is impact?", "id": "36247-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "36247-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When WebWeaver receives unusually long POST or HEAD requests, a denial of service condition may result. This vulnerability was reported for WebWeaver 1.04.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22650-0", "is_impossible": true}, {"answers": [{"answer_start": 64, "text": "denial of service condition"}], "question": "What is impact?", "id": "22650-1", "is_impossible": false}, {"answers": [{"answer_start": 34, "text": "long POST or HEAD requests"}], "question": "What is attack vector?", "id": "22650-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "SlimFTPd is prone to a remote denial of service vulnerability. This issue is due to a failure in the application to handle exceptional conditions. The application fails to handle malicious input in a proper manner resulting in a crash of the server, thus denying service to legitimate users.", "qas": [{"answers": [{"answer_start": 84, "text": "a failure in the application to handle exceptional conditions"}], "question": "What is root cause?", "id": "26219-0", "is_impossible": false}, {"answers": [{"answer_start": 30, "text": "denial of service"}], "question": "What is impact?", "id": "26219-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26219-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Offbyone error in the SMTP daemon in GroupWise Internet Agent (GWIA)  remote attackers to execute arbitrary code via a long email address in a  malformed RCPT command, leading to a buffer overflow To run this exploit on MS Windows replace \"!", "qas": [{"answers": [], "question": "What is root cause?", "id": "7985-0", "is_impossible": true}, {"answers": [{"answer_start": 91, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "7985-1", "is_impossible": false}, {"answers": [{"answer_start": 118, "text": "a long email address in a  malformed RCPT command"}], "question": "What is attack vector?", "id": "7985-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Opera Web Browser is prone to a denial-of-service vulnerability. Opera Web Browser 11.52 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "36260-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "denial-of-service"}], "question": "What is impact?", "id": "36260-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "36260-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This exploit utilizes a combination of heap spraying and the QuickTimeAuthoring.qtx module to bypass DEP and ASLR. As such, this module should be reliable on all Windows NOTE: The addresses may need to be adjusted for older versions of QuickTime Now we must copy our real payload into the buffer  Get ESI from EDI (which is now in EAX)   It will then use it as a COM-type pUnknown and lead to arbitrary code execution. We get the address of HeapCreate from the IAT here Save our buffer pointer off to this address  Write eax to the address   This module exploits a memory trust issue in Apple QuickTime control will treat a supplied parameter as a trusted pointer. We will spray to this address, hopefully  This is where our happy little dll is loaded  This first piece of code points the stack pointer to our data!   And the pointer value itself  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "16589-0", "is_impossible": true}, {"answers": [{"answer_start": 393, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "16589-1", "is_impossible": false}, {"answers": [{"answer_start": 13, "text": "utilizes a combination of heap spraying and the QuickTimeAuthoring.qtx module"}], "question": "What is attack vector?", "id": "16589-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It was discovered that the Unitrends bpserverd proprietary protocol, as exposed via xinetd, has an issue in which its authentication can be bypassed. A remote attacker could use this issue to execute arbitrary commands with root privilege on the target system. OptString.new(\"WritableDir\", [true, \"A directory where we can write files\", \"/tmp\"]), end def exploit print_status(\"Writing payload executable to '#{exe_path}'\")", "qas": [{"answers": [], "question": "What is root cause?", "id": "45913-0", "is_impossible": true}, {"answers": [{"answer_start": 192, "text": "execute arbitrary commands with root privilege on the target system"}], "question": "What is impact?", "id": "45913-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "45913-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A local attacker can exploit these issues to execute arbitrary code with SYSTEM-level privileges. Failed attacks will result in denial-of-service conditions.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32850-0", "is_impossible": true}, {"answers": [{"answer_start": 45, "text": "execute arbitrary code with SYSTEM-level privileges"}], "question": "What is impact?", "id": "32850-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32850-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer 6 is reportedly prone to a denial-of-service vulnerability because the application fails to perform boundary checks before copying user-supplied data into sensitive process buffers. This issue is triggered when an attacker convinces a victim to activate a malicious ActiveX control object. Remote attackers may exploit this issue to crash Internet Explorer 6, effectively denying service to legitimate users. A stack-based heap overflow may be possible; as a result, remote code could run in the context of the user running the affected application.", "qas": [{"answers": [{"answer_start": 95, "text": "the application fails to perform boundary checks before copying user-supplied data into sensitive process buffers"}], "question": "What is root cause?", "id": "28194-0", "is_impossible": false}, {"answers": [{"answer_start": 55, "text": "denial-of-service"}], "question": "What is impact?", "id": "28194-1", "is_impossible": false}, {"answers": [{"answer_start": 282, "text": "a malicious ActiveX control object"}], "question": "What is attack vector?", "id": "28194-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "now click applications in panel,\\nslide to places, wait and see the result!", "qas": [{"answers": [], "question": "What is root cause?", "id": "11044-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "11044-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "11044-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "$stdout.puts \"Cannot open the file #{filename} for writing!\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "35870-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "35870-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "35870-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Corelan does not want anyone to use this script  for malicious andor illegal purposes", "qas": [{"answers": [], "question": "What is root cause?", "id": "12356-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "12356-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "12356-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Go to Register  Amac Register Form and paste the result in all fields: \"Your Name\", \"Your Company\", \"Register Code\"  4. Click in Register button and you will see a crash", "qas": [{"answers": [], "question": "What is root cause?", "id": "46292-0", "is_impossible": true}, {"answers": [{"answer_start": 164, "text": "crash"}], "question": "What is impact?", "id": "46292-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46292-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Failed exploit attempts will result in a denial of service. This issue may be related to the IMAP buffer-overflow vulnerability described in BID 26176.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30714-0", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "denial of service"}], "question": "What is impact?", "id": "30714-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30714-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability presents itself when an attacker supplies a specially crafted email to a user containing malicious script code in an IFRAME and the user tries to reply to the mail. Arbitrary JavaScript can be executed even if the user has disabled JavaScript execution in the client. The following mozilla products are vulnerable to this issue:  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "27257-0", "is_impossible": true}, {"answers": [{"answer_start": 183, "text": "Arbitrary JavaScript can be executed even if the user has disabled JavaScript execution in the client"}], "question": "What is impact?", "id": "27257-1", "is_impossible": false}, {"answers": [{"answer_start": 60, "text": "a specially crafted email to a user containing malicious script code in an IFRAME"}], "question": "What is attack vector?", "id": "27257-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Multiple Nokia phones are prone to a remote denial-of-service vulnerability in their handling of the Object Exchange protocol. Attackers may exploit this issue to crash a vulnerable phone, creating a denial-of-service condition. Note that attackers must be able to communicate with the device via Bluetooth to take advantage of this issue. This issue is reported in N70 and N73 phones; additional devices may also be vulnerable PoC code to demonstrate the flaw in the OBEX implementation of Nokia phones  Tested under Windows XP SP2  Coded by the penetration test team Of NCNIPC (China)  PyBluez are required to run the code from bluetooth import *  Bluetooth address and OBEX channel of the target device  Replace them with the appropriate values for your device  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "32657-0", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "denial-of-service"}], "question": "What is impact?", "id": "32657-1", "is_impossible": false}, {"answers": [{"answer_start": 297, "text": "Bluetooth"}], "question": "What is attack vector?", "id": "32657-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Apple iCal is prone to a denial-of-service vulnerability because it fails to handle specially crafted files. This issue affects iCal 3.0.1 running on Mac OS X 10.5.1; previous versions may also be affected.", "qas": [{"answers": [{"answer_start": 68, "text": "fails to handle specially crafted files"}], "question": "What is root cause?", "id": "31619-0", "is_impossible": false}, {"answers": [{"answer_start": 25, "text": "denial-of-service"}], "question": "What is impact?", "id": "31619-1", "is_impossible": false}, {"answers": [{"answer_start": 84, "text": "specially crafted files"}], "question": "What is attack vector?", "id": "31619-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability specifically exists  due to an integer overflow in usrsrcutscommonsyscallsysteminfo.c  ", "qas": [{"answers": [{"answer_start": 46, "text": "an integer overflow in usrsrcutscommonsyscallsysteminfo.c"}], "question": "What is root cause?", "id": "23540-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "23540-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "23540-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The latest PHP distributions contain a memory corruption bug while parsing malformed HTTP response packets. NO CRASH Actual result: READ of size 1 at 0xbfc038ef thread T0 Address 0xbfc038ef is located at offset 607 in frame <php_stream_url_wrap_http_ex> of T0's stack: This frame has 13 object(s): HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext Shadow bytes around the buggy address:", "qas": [{"answers": [], "question": "What is root cause?", "id": "44846-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "memory corruption"}], "question": "What is impact?", "id": "44846-1", "is_impossible": false}, {"answers": [{"answer_start": 75, "text": "malformed HTTP response packets"}], "question": "What is attack vector?", "id": "44846-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A malicious user can create a malformed like \",1\" entry in the counter.log file by requesting a URL of the form \"http://www.example.com/scripts/counter.exe?%0A\". Any further attempt for request will result in an Access Violation in counter.exe. A similar vulnerability exists if a user requests a URL of the form \"http://www.example.com/scripts/counter.exe?AAAAA\" with over 2200 A's. System memory may be decremented each time a request for counter.exe is queued.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19212-0", "is_impossible": true}, {"answers": [{"answer_start": 209, "text": "an Access Violation in counter.exe"}], "question": "What is impact?", "id": "19212-1", "is_impossible": false}, {"answers": [{"answer_start": 28, "text": "a malformed like \",1\" entry in the counter.log file"}], "question": "What is attack vector?", "id": "19212-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This issue was previously covered in BID 38918 (Mozilla Firefox Thunderbird and Seamonkey MFSA 2010-09 through -15 Multiple Vulnerabilities) but has been assigned its own record to better document it.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33800-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "33800-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "33800-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Crafted mDNS packet with source port 0 can cause avahidaemon  to abort() due to failed assertion assert(port  0); in  originates_from_local_legacy_unicast_socket() function in char buf[len]; printf(\"error: please specify a target ip address\\n\"); return 1; printf(\"error: root privileges needed for raw socket\\n\"); return 1; return 0;", "qas": [{"answers": [{"answer_start": 80, "text": "failed assertion assert(port  0); in  originates_from_local_legacy_unicast_socket() function in char buf[len]"}], "question": "What is root cause?", "id": "7520-0", "is_impossible": false}, {"answers": [{"answer_start": 49, "text": "avahidaemon  to abort()"}], "question": "What is impact?", "id": "7520-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "Crafted mDNS packet with source port 0"}], "question": "What is attack vector?", "id": "7520-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "+ Bug discovered & exploit coded by AmesianX in powerhacker.net (YoungHo Park - amesianx@gmail.com) + Impact: MS Internet Explorer The following bug was tested on the latest version of Internet Explorer 6 on a fully-patched Windows XP SP2 system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "3272-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "3272-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "3272-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a vulnerability in Viscosity 1.4.1 on Mac OS X. The vulnerability exists in the setuid ViscosityHelper, where an insufficient validation of path names allows execution of arbitrary python code as root.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24579-0", "is_impossible": true}, {"answers": [{"answer_start": 179, "text": "execution of arbitrary python code as root"}], "question": "What is impact?", "id": "24579-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24579-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "this exploits one of many overflows in load_abc.cpp lol vlc media player uses libmodplug date: 28 april 2011 return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "17222-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17222-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17222-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "57 push edi 2f36a30b 51 push ecx eax here points to location in the file 0xFB4.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17227-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17227-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17227-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Pingtel Xpressa handsets are reported prone to a remote denial of service vulnerability. The issue is reported to exist because of a lack of sufficient boundary checks performed on HTTP request data handled by the Xpressa administration web server. It is reported that a remote attacker may exploit this vulnerability to effectively deny service to the affected handset. Due to the nature of this vulnerability, it is reported that this issue may be exploited in order to execute arbitrary code.", "qas": [{"answers": [{"answer_start": 131, "text": "a lack of sufficient boundary checks performed on HTTP request data handled by the Xpressa administration web server"}], "question": "What is root cause?", "id": "24592-0", "is_impossible": false}, {"answers": [{"answer_start": 56, "text": "denial of service"}], "question": "What is impact?", "id": "24592-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24592-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is possible to cause a denial of service in ConferenceRoom. on clone type \"/ns auth accept 1\" and the services crashes and the services crashes. ConferenceRoom has a wide range of capabilities and a user friendly channel moderation feature.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20534-0", "is_impossible": true}, {"answers": [{"answer_start": 26, "text": "denial of service"}], "question": "What is impact?", "id": "20534-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20534-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Adobe Acrobat is prone to a denial-of-service vulnerability because it fails to perform adequate boundary checks on user-supplied data. Attackers can exploit this issue to cause the affected application to crash, effectively denying service. Attackers may also be able to execute arbitrary code, but this has not been confirmed. Acrobat 9.1.1 is vulnerable; other versions may also be affected. This BID was previously classified as a buffer-overflow issue, but further analysis reveals that it is a stack-exhaustion issue.", "qas": [{"answers": [{"answer_start": 71, "text": "fails to perform adequate boundary checks on user-supplied data"}], "question": "What is root cause?", "id": "33017-0", "is_impossible": false}, {"answers": [{"answer_start": 28, "text": "denial-of-service"}], "question": "What is impact?", "id": "33017-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "33017-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker can exploit this issue to execute arbitrary code within the context of the affected application; failed exploit attempts will result in a denial-of-service condition. This issue affects version 1.12; other versions may also be vulnerable.", "qas": [{"answers": [], "question": "What is root cause?", "id": "29310-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "execute arbitrary code within the context of the affected application; failed exploit attempts will result in a denial-of-service condition"}], "question": "What is impact?", "id": "29310-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "29310-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\u200bWhen using Special Pool we get the crash immediately on the overwrite. Without Special Pool we often get a crash in the same function, but sometimes it crashes in a different function (similar to another issue, however with a different offset). This might be a result of the memory corruption or an out-of-memory condition before the overflow is triggered.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38270-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "crash"}], "question": "What is impact?", "id": "38270-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38270-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "tested on FreeBSD 5.5-RELEASE, 6.0-RELEASE-p5, 6.1-RELEASE, 6.1-RELEASE-p10 (latest at the time of writing)", "qas": [{"answers": [], "question": "What is root cause?", "id": "2542-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "2542-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "2542-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This advisory supercedes the original advisory which was just related to OpenBSD because we had to publish an announcement in response to OpenBSD's Trying to fix it responsibly and get in contact with the vendor: We like to mention that the issued patch is just a workaround and does not patch or remove the affected code. Contacted and asked for confirmation 2009-04-15 06:56 UTC Were informed about further investigations 2009-04-15 7:56 UTC Were informed about not being vulnerable 2009-04-15 22:05 UTC Contacted and asked for confirmation 2009-04-15 06:10 UTC Were informed about not being vulnerable 2009-04-15 21:35 UTC Contacted and asked for official confirmation 2009-04-15 06:36 UTC Received confirmation for MirBSD 10 and prior 2009-04-15 17:57 UTC Contacted and asked for official confirmation 2009-04-15 20:17 UTC Received confirmation for MidnightBSD 2009-04-15 22:37 UTC Contacted and asked for official confirmation 2009-04-15 22:41 UTC Were informed about not being vulnerable 2009-04-15 23:35 UTC OpenBSDs PF firewall is prone to a remote Denial of Service due to a NULL- pointer dereference when handling special crafted IP datagrams. If the firewall handles such a packet the kernel panics. The problem stems from the unification of the rule processing in pf_test_rule(). Because the handling logic asserts that the common code in pf_test has verified that the packet contains a full ICMP header and has pulled up the mbuf up to that point. The affected function is in pf_change_a6 and the patch is just a workaround because it filters the packet in pf_test() except of fixing the affected source Steps to reproduce: If you have an affected OS in your network which does NAT or redirecting traffic you should be able to test your IPv4 device with this simple hping command:", "qas": [{"answers": [{"answer_start": 1082, "text": "a NULL- pointer dereference"}], "question": "What is root cause?", "id": "8581-0", "is_impossible": false}, {"answers": [{"answer_start": 1057, "text": "Denial of Service"}], "question": "What is impact?", "id": "8581-1", "is_impossible": false}, {"answers": [{"answer_start": 1124, "text": "special crafted IP datagrams"}], "question": "What is attack vector?", "id": "8581-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "package Msf::Exploit::hpux_lpd_exec; use base \"Msf::Exploit\"; use IO::Socket; use IO::Select; use strict; use Pex::Text; This exploit abuses an unpublished vulnerability in the HP-UX LPD service. This flaw allows an unauthenticated attacker to execute arbitrary commands with the privileges of the root user. The LPD service is only exploitable when the address of the attacking system can be resolved by the target. This vulnerability was silently patched with the buffer overflow flaws addressed in HP Security Bulletin HPSBUX0208-213. $self->PrintLine(\"[*] The target did not accept our control file\"); $self->PrintLine(\"[*] Remember to kill the telnet process when finished\"); $self->PrintLine(\"[*] Forcing an error and hijacking the cleanup routine...\");", "qas": [{"answers": [], "question": "What is root cause?", "id": "1261-0", "is_impossible": true}, {"answers": [{"answer_start": 244, "text": "execute arbitrary commands with the privileges of the root user"}], "question": "What is impact?", "id": "1261-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1261-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A problem with ActiveSync could make it possible for remote users to trigger a denial of service. This can result in the process crashing, requiring a manual restart to resume service Strictly for testing purposes only  unsigned char sendBuf[] =  Correct Header  \"\\x00\\x00\\x00\\x00\"  Correct start of packet  by removing these 4 bytes the crash occurs * Length of the rest of the packet */ exit (1); exit (0);", "qas": [{"answers": [], "question": "What is root cause?", "id": "22390-0", "is_impossible": true}, {"answers": [{"answer_start": 79, "text": "denial of service"}], "question": "What is impact?", "id": "22390-1", "is_impossible": false}, {"answers": [{"answer_start": 311, "text": "removing these 4 bytes"}], "question": "What is attack vector?", "id": "22390-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This issue can be exploited by opening a malicious PDF in Adobe Reader. Exploiting this issue allows for the execution of arbitrary Java code, which can result in a compromise of the documents stored in Reader and files stored on SD card. This issue was successfully verified on Adobe Reader for Android version 11.1.3. The app targets API Level 10, which renders the exposed Javascript interfaces vulnerable to code execution - provided that an attacker manages to run malicious Javascript code within Adobe Reader. An attacker can create a specially crafted PDF file containing Javascript that runs when the target user views (or interacts with) this PDF file.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32884-0", "is_impossible": true}, {"answers": [{"answer_start": 105, "text": "the execution of arbitrary Java code, which can result in a compromise of the documents stored in Reader and files stored on SD card"}], "question": "What is impact?", "id": "32884-1", "is_impossible": false}, {"answers": [{"answer_start": 31, "text": "opening a malicious PDF in Adobe Reader"}], "question": "What is attack vector?", "id": "32884-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "generate using this script The trick is by adding 49 bytes of malicious byte (represent with \\x41) into the .dll file, right after the PE (\\x50\\x45) header on the 244th byte of the file.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22653-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "22653-1", "is_impossible": true}, {"answers": [{"answer_start": 43, "text": "adding 49 bytes of malicious byte (represent with \\x41) into the .dll file, right after the PE (\\x50\\x45) header on the 244th byte of the file"}], "question": "What is attack vector?", "id": "22653-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Free Web Chat server is reported prone to multiple denial of service vulnerabilities. The following issues are reported: The first denial of service vulnerability reported results from a lack of sufficient sanitization performed on username data. It is reported that a user with a void name may be added. A remote attacker may exploit this vulnerability to deny service to legitimate users. The second denial of service vulnerability is reported to exist due to resource consumption. It is reported that the Free Web Chat server does not properly manage multiple connections that originate from the same location.", "qas": [{"answers": [{"answer_start": 462, "text": "resource consumption"}], "question": "What is root cause?", "id": "24351-0", "is_impossible": false}, {"answers": [{"answer_start": 51, "text": "denial of service"}], "question": "What is impact?", "id": "24351-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24351-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Internet Explorer is prone to a denial-of-service vulnerability. This issue is triggered when an attacker convinces a victim user to visit a malicious website that uses the 'DirectAnimation.", "qas": [{"answers": [], "question": "What is root cause?", "id": "28196-0", "is_impossible": true}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "28196-1", "is_impossible": false}, {"answers": [{"answer_start": 116, "text": "convinces a victim user to visit a malicious website that uses the 'DirectAnimation"}], "question": "What is attack vector?", "id": "28196-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "One could try to exploit this issue remotely (using CRSF) assuming that a victim did not change default password to the web management. The vendor (Cisco) was contacted in march '09 and confirmed the issue (but still it remains unpatched).", "qas": [{"answers": [], "question": "What is root cause?", "id": "8833-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "8833-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "8833-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Desc: WinLicense is prone to an unspecified memory corruption vulnerability An attacker can exploit this issue by tricking a victim into opening a malicious  XML file to tricking a victim into opening a malicious  XML file.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18637-0", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "memory corruption"}], "question": "What is impact?", "id": "18637-1", "is_impossible": false}, {"answers": [{"answer_start": 114, "text": "tricking a victim into opening a malicious  XML file"}], "question": "What is attack vector?", "id": "18637-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "windows 2000, mssqlserver no sp.\\n\"); printf(\"when buffersize is 9000, the server can be crashed.\\n\"); printf(\"When see the error message, the target may be crashed!!\\n\\n\"); return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "65-0", "is_impossible": true}, {"answers": [{"answer_start": 89, "text": "crashed"}], "question": "What is impact?", "id": "65-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "65-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: BOINC Manager 7.0.64 Field stack based buffer overflow BOINC 7.0.64 Manager Field stack based buffer overflow  SEH based BOINC is a program that lets you donate your idle computer time to science projects like In order to exploit the vulnerability the attacker must convince the victim to use the very long URL as Account Manager URL. This URL is generated by the exploit into the exploit.txt file. Add project  Use account manager  Account Manager URL As with all Field BOF the severity is rather low but hey watch the movie and read below Developers team @ berkley.edu was informed about the issue and released the BOINC 7.1.3 version including the fix within a week timeframe.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25883-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "25883-1", "is_impossible": true}, {"answers": [{"answer_start": 282, "text": "convince the victim to use the very long URL as Account Manager URL"}], "question": "What is attack vector?", "id": "25883-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This issue is very likely a null pointer issue affecting 32-bit Windows version. The offset is from add onto another offset which isn't quite zero, so not 100% convinced it is just a null pointer, however I wasn't able to influence the values.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38271-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "38271-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "38271-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Ipswitch WhatsUp Professional 2006 is susceptible to a remote denial-of-service vulnerability. This issue is due to the application's failure to properly handle certain HTTP GET requests. This issue allows remote attackers to consume excessive CPU resources on targeted computers, denying service to legitimate users. An example script to exploit this issue is also available: while [ 1 ] do done", "qas": [{"answers": [{"answer_start": 116, "text": "the application's failure to properly handle certain HTTP GET requests"}], "question": "What is root cause?", "id": "27258-0", "is_impossible": false}, {"answers": [{"answer_start": 62, "text": "denial-of-service"}], "question": "What is impact?", "id": "27258-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "27258-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "create space for our buffer   use the force, read the source :), determine %esp for xlock the first third  this can be adjusted  of the buffer with nop's, remembering to leave space for the remaining shellcode to be added. */  fill the buffer with the shellcode centered around the border between the first and second third of the buffer. */  don't forget to end with the dreaded null byte or the processor won't determine the end of our code. in this case our bof is a user specified environment variable of fixed length, so we set our buffer \"$XLOCALEDIR\" and that should overflow the programs buffer", "qas": [{"answers": [], "question": "What is root cause?", "id": "22322-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "22322-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "22322-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that Tru64 systems may be prone to a denial of service condition when handling malformed TCP packets. Specifically, when processing a malformed TCP packet with both the SYN and FIN flags set, vulnerable Tru64 systems may block indefinitely, thus causing a denial of service. As a result other legitimate users may no longer be capable of accessing remote services. This vulnerability is said to affect Tru64 4.0E as well as various versions of Digital Unix and VxWorks.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21261-0", "is_impossible": true}, {"answers": [{"answer_start": 58, "text": "denial of service"}], "question": "What is impact?", "id": "21261-1", "is_impossible": false}, {"answers": [{"answer_start": 100, "text": "malformed TCP packets"}], "question": "What is attack vector?", "id": "21261-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The MM Shared Memory library is reported to be prone to a race condition with regards to temporary files which may enable a local attacker to gain elevated privileges. This issue may reportedly be exploited by an attacker with shell access as the Apache webserver user to gain root privileges on a vulnerable host", "qas": [{"answers": [], "question": "What is root cause?", "id": "21667-0", "is_impossible": true}, {"answers": [{"answer_start": 142, "text": "gain elevated privileges"}], "question": "What is impact?", "id": "21667-1", "is_impossible": false}, {"answers": [{"answer_start": 227, "text": "shell access as the Apache webserver"}], "question": "What is attack vector?", "id": "21667-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "provide a vulnerable tomcat init script that allows local attackers who have already gained access to the tomcat account (for example, by exploiting an RCE vulnerability in a java web application hosted on Tomcat, uploading a webshell etc.) The vulnerability is located in the tomcat init script provided by affected packages, normally installed at /etc/init.d The script for tomcat7 contains the following lines:  Run the catalina.sh script as a daemon set +e Local attackers who have gained access to the server in the context of the tomcat user (for example, through a vulnerability in a web application) would be able to replace the log file with a symlink to an arbitrary system file and escalate their privileges to root once Tomcat init script (running as root) re-opens the catalina.out file after a service restart, reboot etc. As attackers would already have a tomcat account at the time of exploitation, they could also kill the tomcat processes to introduce the need for a restart. This exploit targets Tomcat (versions 6, 7 and The exploit can used in two ways:  active (assumed by default)  which waits for a Tomcat restart in a loop and instantly  gainsexecutes a rootshell via ld.so.preload as soon as Tomcat service is restarted It removes the need for the exploit to run in a loop waiting Upon a  Tomcat restart  server reboot, the file should be owned by tomcat user. The attackers can  then add arbitrary commands to the file which will be executed with root privileges by   echo -e \"\\n[+] Starting the exploit in [\\033[94m$mode\\033[0m] mode with the following privileges: \\n`id`\" echo -e \"\\n You need to execute the exploit as tomcat user! The current owner of the file is: \\n`ls -l /etc/default/locale`\" echo -ne \"\\n you'll be able to add arbitrary commands to the file which will get executed with root privileges\" echo -ne \"\\n at ~6:25am by the /etc/cron.daily/tomcatN log rotation cron. all Servlet and JSP engine -- common files Tomcat 6/7/8 on Debian-based distros - Local Root Privilege Escalation Exploit Discovered and coded by: [+] Starting the exploit in [active] mode with the following privileges: The vulnerability has been discovered by Dawid Golunski XI. I accept no responsibility for any damage caused by the use or misuse of this information. to escalate their privileges from tomcat user to root and fully compromise the target system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40450-0", "is_impossible": true}, {"answers": [{"answer_start": 693, "text": "escalate their privileges to root once Tomcat init script (running as root) re-opens the catalina.out file after a service restart, reboot etc"}], "question": "What is impact?", "id": "40450-1", "is_impossible": false}, {"answers": [{"answer_start": 625, "text": "replace the log file with a symlink to an arbitrary system file"}], "question": "What is attack vector?", "id": "40450-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability in the Compaq Management Agents and the Compaq Survey Utility when running as an agent allows remote malicious users to steal local files. The web server in the agents fails to check whether requested files fall outside its document tree (by using \"..\" in the URL). Thus attackers can retrieve files in the same drives as that on which the software resides if they know or can get it's filename. One an attacker has access to on such machine, using Compaq's HTTP Auto-Discovery Device List at the URL http://www.example.com/cpqdev.htm they can locate other machines. The web agent service also appears to be vulnerable a a denial of service. By sending it a request for over 223 bytes long (\"AAAA...\") the service will fail with an access violation.", "qas": [{"answers": [{"answer_start": 155, "text": "The web server in the agents fails to check whether requested files fall outside its document tree (by using \"..\" in the URL)"}], "question": "What is root cause?", "id": "19225-0", "is_impossible": false}, {"answers": [{"answer_start": 136, "text": "steal local files"}], "question": "What is impact?", "id": "19225-1", "is_impossible": false}, {"answers": [{"answer_start": 459, "text": "using Compaq's HTTP Auto-Discovery Device List at the URL http://www.example.com/cpqdev.htm they can locate other machines"}], "question": "What is attack vector?", "id": "19225-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A problem with the toolkit could allow elevated privileges, and potentially unauthorized access to restricted resources. This makes it possible for a local user to execute commands as the HTTP process UID, and potentially gain access with the same privileges of the HTTP UID. It has been reported that the proposed fix does not entirely fix the problem, as it's possible to pass command line parameters to sendmail when safe_mode is enabled.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20985-0", "is_impossible": true}, {"answers": [{"answer_start": 39, "text": "elevated privileges, and potentially unauthorized access to restricted resources"}], "question": "What is impact?", "id": "20985-1", "is_impossible": false}, {"answers": [{"answer_start": 188, "text": "HTTP"}], "question": "What is attack vector?", "id": "20985-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A denial of service condition exists in GuildFTPD that may allow a remote user to deny service to legitimate GuildFTPD users. The denial of service occurs when the server receives several successive malformed CWD commands from an authenticated client.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22790-0", "is_impossible": true}, {"answers": [{"answer_start": 82, "text": "deny service to legitimate GuildFTPD users"}], "question": "What is impact?", "id": "22790-1", "is_impossible": false}, {"answers": [{"answer_start": 180, "text": "several successive malformed CWD commands from an authenticated client"}], "question": "What is attack vector?", "id": "22790-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Universal Local Buffer Overflow Exploit  just the ret adress is changed for make the exploit universal my $file=\"hsmx.pls\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "7973-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7973-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7973-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Chrome Engine 4 is prone to a denial-of-service vulnerability. An attacker can exploit this issue to crash the affected server, resulting in denial-of-service conditions. Chrome Engine version 4 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "34158-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "denial-of-service"}], "question": "What is impact?", "id": "34158-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "34158-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Appian Business Process Management Suite (BPMS) is prone to a remote denial-of-service vulnerability because it fails to handle specially crafted packets. Successfully exploiting this issue allows remote attackers to crash the affected application, denying further service to legitimate users. This issue affects Appian BPMS 5.6 SP1; other versions may be vulnerable as well.", "qas": [{"answers": [{"answer_start": 112, "text": "fails to handle specially crafted packets"}], "question": "What is root cause?", "id": "30896-0", "is_impossible": false}, {"answers": [{"answer_start": 69, "text": "denial-of-service"}], "question": "What is impact?", "id": "30896-1", "is_impossible": false}, {"answers": [{"answer_start": 128, "text": "specially crafted packets"}], "question": "What is attack vector?", "id": "30896-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, an attacker can cause the server to become unstable and crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22794-0", "is_impossible": true}, {"answers": [{"answer_start": 33, "text": "cause the server to become unstable and crash"}], "question": "What is impact?", "id": "22794-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22794-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "WebServer directory traversal Through the usage of a 3-dots pattern it's possible to download the files located in the disk of the project used by WebServer. and it's affected by a vulnerability in the Login method: nc First chance exceptions are reported before any exception handling. No additional research has been performed on the vulnerability, anyway in my test it's necessary to load any other unsafe ActiveX component first (tested on Windows 2003). F] integer stack overflow in SNMP NetDBServer Signed 8 bit value expanded due to its sign and used in a memcpy over a stack buffer, note that also in this case the chunked data is concatenable so there is also this other way to exploit the overflow: G] Denial of Service in SNMP NetDBServer H] Directory traversal in NetServer Through this server it's possible to read any file in the disk where is located the project via directory traversal. Opcodes 0x00 and 0x04 are used to open the file ( the first one only adds the full project path to the name) while 0x02 is used to read and send its content with the possibility of specifying also the offset. third party ActiveX code execution This software is bundled with the \"Cell Software\"'s YRWXls.ocx ActiveX component (BD9E5104-2F20-4A9F-AB14-82D558FF374E version 5.3.7.321 which is the latest) 6  whole system reboot through packet 6  endless loop during the handling of the interfaces through packet 6  whole system reboot through packet 7 D] Note that there is also a very limited heap overflow caused by some calculations performed on the offset where is possible to allocate a 0 bytes buffer for the reply packet but", "qas": [{"answers": [{"answer_start": 540, "text": "its sign and used in a memcpy over a stack buffer"}], "question": "What is root cause?", "id": "17885-0", "is_impossible": false}, {"answers": [{"answer_start": 10, "text": "directory traversal"}], "question": "What is impact?", "id": "17885-1", "is_impossible": false}, {"answers": [{"answer_start": 882, "text": "directory traversal"}], "question": "What is attack vector?", "id": "17885-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "You would normally never send a message yourself to ReportCrash but the kernel would do it on your behalf when you crash. Since this path will only be triggered if you can talk to a ReportCrash running with a different euid a plausible exploitation scenario would be trying to pivot from code execution in a sandbox root process to another one with more privileges (eg kextd on MacOS or amfid on iOS) going via ReportCrash (as ReportCrash will get sent their task ports if you can crash them.) This PoC demonstrates the bug by destroying ReportCrash's send right to logd; use a debugger or lsmp to see printf(\"this PoC should be run as root\\n\"); return 0;  take a look at our exception ports: printf(\"failed to get the exception ports\\n\"); return 0; return 0;  the port we will target: printf(\"unable to look up target service\\n\"); return 0;  triggering the bug requires that we send from a different uid  drop to everyone(12) return 0; return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "44562-0", "is_impossible": true}, {"answers": [{"answer_start": 115, "text": "crash"}], "question": "What is impact?", "id": "44562-1", "is_impossible": false}, {"answers": [{"answer_start": 527, "text": "destroying ReportCrash's send right to logd"}], "question": "What is attack vector?", "id": "44562-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This issue may also be exploited to deny service to legitimate users of the Half-Life dedicated server. The issue presents itself due to a flaw in download functionality that is provided by the Half-Life dedicated server. It has been reported that a malicious attacker may exploit this functionality to download any file from the root folder of the current running game type, or from the valve folder.", "qas": [{"answers": [{"answer_start": 137, "text": "a flaw in download functionality that is provided by the Half-Life dedicated server"}], "question": "What is root cause?", "id": "23388-0", "is_impossible": false}, {"answers": [{"answer_start": 36, "text": "deny service to legitimate users"}], "question": "What is impact?", "id": "23388-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23388-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Stackbased buffer overflow in Remote Control Server in Free Download Manager  (FDM) 2.5 Build 758 and 3.0 Build 844 allows remote attackers to execute  arbitrary code via a long Authorization header in an HTTP request", "qas": [{"answers": [], "question": "What is root cause?", "id": "7986-0", "is_impossible": true}, {"answers": [{"answer_start": 144, "text": "execute  arbitrary code"}], "question": "What is impact?", "id": "7986-1", "is_impossible": false}, {"answers": [{"answer_start": 172, "text": "a long Authorization header in an HTTP request"}], "question": "What is attack vector?", "id": "7986-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "File Open Crash  Exploit Title:DVDLab Studio 1.25 Malicious DAL File Denial of service DVDLab Studio File Denial of service vulnerability ,when opening a malicious .PCX file  To trigger the exploit , go to fileOpen  file.write junk end", "qas": [{"answers": [], "question": "What is root cause?", "id": "18903-0", "is_impossible": true}, {"answers": [{"answer_start": 69, "text": "Denial of service"}], "question": "What is impact?", "id": "18903-1", "is_impossible": false}, {"answers": [{"answer_start": 200, "text": "go to fileOpen  file.write junk"}], "question": "What is attack vector?", "id": "18903-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "return NULL; return p + XDR_QUADLEN(size); This code is called by quite a few XDR decoding routines. The below POC demonstrates the vulnerability by encoding a malicious fhsize at the beginning of a diroparg xdr argument. To test this, the vulnerable host must have an accessible exported directory which was previously mounted by the attacker.", "qas": [{"answers": [], "question": "What is root cause?", "id": "68-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "68-1", "is_impossible": true}, {"answers": [{"answer_start": 149, "text": "encoding a malicious fhsize at the beginning of a diroparg xdr argument"}], "question": "What is attack vector?", "id": "68-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that a denial of service exists in Apache Webserver and Tomcat when mod_jk is used. Due to design problems in the module, a user submitting malicious requests to the Apache Webserver may cause desynchronization between Apache and Tomcat.", "qas": [{"answers": [{"answer_start": 112, "text": "design problems in the module"}], "question": "What is root cause?", "id": "22068-0", "is_impossible": false}, {"answers": [{"answer_start": 28, "text": "denial of service"}], "question": "What is impact?", "id": "22068-1", "is_impossible": false}, {"answers": [{"answer_start": 161, "text": "malicious requests to the Apache Webserver"}], "question": "What is attack vector?", "id": "22068-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Desc: The UltraCam ActiveX Control 'UltraCamX.ocx' suffers from a stack buffer overflow vulnerability when parsing large amount of bytes to several functions in UltraCamLib, resulting in memory corruption overwriting severeal registers including the SEH. An attacker can gain access to the system of the affected node and execute arbitrary code", "qas": [{"answers": [], "question": "What is root cause?", "id": "35363-0", "is_impossible": true}, {"answers": [{"answer_start": 187, "text": "memory corruption overwriting severeal registers including the SEH"}], "question": "What is impact?", "id": "35363-1", "is_impossible": false}, {"answers": [{"answer_start": 115, "text": "large amount of bytes to several functions in UltraCamLib"}], "question": "What is attack vector?", "id": "35363-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Attackers can exploit this issue to execute arbitrary code in the context of the application. Failed attacks may cause a denial-of-service condition. Adobe SVG Viewer 3.03 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "34151-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "execute arbitrary code in the context of the application"}], "question": "What is impact?", "id": "34151-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "34151-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This does not affect other components of the system, only the ICQ client.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21262-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "21262-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "21262-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Our buffer on the heap looks like this:   By carefully choosing a value for EBX, we are able to manipulate  Effectively at 0049C004, we can write a DWORD 'BBBB' to ['CCCC'+4]  Choosing the rite values for 'BBBB' + 'CCCC', execution flow could  be reliably diverted into our shellcode In this exploit, I've chosen to install our code as the main thread's  top exception handler so that when exception is triggered at 0049C012,  our code will be called to 'handle' it..", "qas": [{"answers": [], "question": "What is root cause?", "id": "272-0", "is_impossible": true}, {"answers": [{"answer_start": 96, "text": "manipulate  Effectively at 0049C004, we can write a DWORD 'BBBB' to ['CCCC'+4]  Choosing the rite values for 'BBBB' + 'CCCC', execution flow could  be reliably diverted into our shellcode"}], "question": "What is impact?", "id": "272-1", "is_impossible": false}, {"answers": [{"answer_start": 45, "text": "carefully choosing a value for EBX"}], "question": "What is attack vector?", "id": "272-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Without encryption, your ISP can store information about the websites you use and sell that data to anyone willing to pay for it. By exploiting the vulnerabilities documented in this advisory, an attacker can fully compromise a MacOS system with an installation of the LiquidVPN Users are urged to uninstall the application until the vendor ships a new version of the LiquidVPN client. This means, regular users (local attackers) can craft arbitrary XPC messages and send them to the service. This leads to the following issues: After receiving a message, the service checks for the existence of the If \"anycmd\" is found, the \"command_line\" parameter is extracted from the message and directly passed on to a call to popen() as an argument. Similar to the previous vulnerability, the service checks if the \"openvpn\" parameter exists. If it does, the \"openvpncmd\" parameter is extracted and passed on to a system() call as an argument: 3) OS Command Injection (reserved CVE-2018-18858) If the service detects the \"openvpn\" parameter in a message, it also checks if the parameters \"tun_path\" or \"tap_path\" exist. If one of them (or both) are found, the values are used as source paths for a copy process using the system() However, the paths are not sanitized before being passed to system(): 4) Loading of arbitrary Kernel Extensions (reserved CVE-2018-18859) When the client is installed, \"tun_path\" and \"tap_path\" are pointed to the application folder for installing \"/Applications/LiquidVPN.app/Contents/Resources/tun.kext\" and By crafting an XPC message containing attacker controlled kernel extension the helper tool installs the kernel extensions using a call to the system function Apple introduced user-approval for installing third party kernel as an attacker has local access to the system and user-approval does not require the user to enter a root or admin password, this is not a problem. \"path_tap\" is affected by the same bug case 4:  load arbitrary kext via \"path_tun\".", "qas": [{"answers": [], "question": "What is root cause?", "id": "45782-0", "is_impossible": true}, {"answers": [{"answer_start": 215, "text": "compromise a MacOS system"}], "question": "What is impact?", "id": "45782-1", "is_impossible": false}, {"answers": [{"answer_start": 246, "text": "an installation of the LiquidVPN Users are urged to uninstall the application until the vendor ships a new version of the LiquidVPN client"}], "question": "What is attack vector?", "id": "45782-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, an attacker could corrupt process memory, causing the service to crash", "qas": [{"answers": [], "question": "What is root cause?", "id": "22796-0", "is_impossible": true}, {"answers": [{"answer_start": 35, "text": "corrupt process memory, causing the service to crash"}], "question": "What is impact?", "id": "22796-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22796-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Please install ossec server and WUI 0.8 and run this exploit import socket import sys import time  specify payload print \"[+]", "qas": [{"answers": [], "question": "What is root cause?", "id": "37728-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "37728-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "37728-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, an attacker may be able to cause the switch to stall for period of time.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22797-0", "is_impossible": true}, {"answers": [{"answer_start": 50, "text": "the switch to stall for period of time"}], "question": "What is impact?", "id": "22797-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22797-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Xfire client has a dos exploit closing the client upon success full exploitation xfire will fail.. Ive provided the following Proof of concept for the exploit.. This exploit happens when a malicious packet is sent to the client on port udp port 25777 this is an example of the error on success full exploitation on the client side", "qas": [{"answers": [], "question": "What is root cause?", "id": "2571-0", "is_impossible": true}, {"answers": [{"answer_start": 19, "text": "dos"}], "question": "What is impact?", "id": "2571-1", "is_impossible": false}, {"answers": [{"answer_start": 187, "text": "a malicious packet is sent to the client on port udp port 25777"}], "question": "What is attack vector?", "id": "2571-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "These issues are due to a failure of the affected applications to validate user-supplied string lengths before copying them into finite process buffers. An attacker may leverage these issues to execute arbitrary code on the affected system within the context of the vulnerable applications; the applications are typically setuid applications.", "qas": [{"answers": [{"answer_start": 24, "text": "a failure of the affected applications to validate user-supplied string lengths before copying them into finite process buffers"}], "question": "What is root cause?", "id": "24593-0", "is_impossible": false}, {"answers": [{"answer_start": 194, "text": "execute arbitrary code on the affected system within the context of the vulnerable applications; the applications are typically setuid applications"}], "question": "What is impact?", "id": "24593-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24593-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is possible to create a directory with a long file name (the initial example displayed a directory with 768 characters), then attempt to list the file system using system binary ls or with built in shell function echo and create a Denial of Service. Upon attempting to list or echo the contents of the filesystem, a kernel buffer overflow occurs, overwriting variables on the stack including possibly the return address, as well as crashing the system. It may be possible for a malicious user to execute arbitrary code, deny service to legitimate users, and potentially break out of a chroot environment. This vulnerability is yet unverified.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20535-0", "is_impossible": true}, {"answers": [{"answer_start": 225, "text": "create a Denial of Service"}], "question": "What is impact?", "id": "20535-1", "is_impossible": false}, {"answers": [{"answer_start": 18, "text": "create a directory with a long file name (the initial example displayed a directory with 768 characters), then attempt to list the file system using system binary ls or with built in shell function echo"}], "question": "What is attack vector?", "id": "20535-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Due to the similarity of these issues it has been conjectured that the root of the problem may be a single function used to handle all affected procedures. Successful exploitation of this vulnerability could potentially result in the execution of arbitrary code, with the privileges of the Kerio MailServer process.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22800-0", "is_impossible": true}, {"answers": [{"answer_start": 230, "text": "the execution of arbitrary code, with the privileges of the Kerio MailServer process"}], "question": "What is impact?", "id": "22800-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22800-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This could potentially allow an authorized but non-privileged local user to execute arbitrary code with system privileges. The application suffers from an unquoted service path issue impacting the service 'ASUS InstantOn (InsOnSrv.exe)' deployed as part of Asus InstantOn", "qas": [{"answers": [], "question": "What is root cause?", "id": "40522-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "execute arbitrary code with system privileges"}], "question": "What is impact?", "id": "40522-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40522-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "2) Report Timeline 2016-05-18: S\u00e9bastien Morin of COSIG report this vulnerability to Adobe PSIRT; Adobe PSIRT confirm this vulnerability; 2016-07-12: Adobe fixed the issue (APSB16-26); 2016-07-12: Advisory released by COSIG; 3) Technical details The vulnerability allows a remote attacker to execute malicious code or access to part of dynamically allocated memory using a user interaction that opens a specially crafted PDF file containing an invalid font", "qas": [{"answers": [], "question": "What is root cause?", "id": "40099-0", "is_impossible": true}, {"answers": [{"answer_start": 292, "text": "execute malicious code or access to part of dynamically allocated memory"}], "question": "What is impact?", "id": "40099-1", "is_impossible": false}, {"answers": [{"answer_start": 371, "text": "a user interaction that opens a specially crafted PDF file containing an invalid font"}], "question": "What is attack vector?", "id": "40099-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A remote attacker can crash EchoVNC Viewer by sending a   malformed request. the crash occurs when EchoVNC   Viewer allocate a buffer from heap with the size specified   by the malicious server You need to configure EchoVNC Viewer with the specified   When running the exploit, you need to put the IP and press   OK button on EchoVNC Viewer main window \" # the first 4 bytes specifies if the  server needs authentication  \\x00\\x00\\x00\\x00 means the server  the last 4 bytes specifies the  buffer size that will be allocated  in heap print(\"[+] Trying to bind..\");", "qas": [{"answers": [], "question": "What is root cause?", "id": "27292-0", "is_impossible": true}, {"answers": [{"answer_start": 22, "text": "crash EchoVNC Viewer"}], "question": "What is impact?", "id": "27292-1", "is_impossible": false}, {"answers": [{"answer_start": 46, "text": "sending a   malformed request"}], "question": "What is attack vector?", "id": "27292-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "As Apache CouchDB runs as LOCALSYSTEM, standard users can now execute arbitrary code with the privileges of the SYSTEM.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40865-0", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "execute arbitrary code with the privileges of the SYSTEM"}], "question": "What is impact?", "id": "40865-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40865-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Exploiting this issue allows attackers to execute arbitrary machine code in the context of users running the affected software. Failed exploit attempts will likely result in denial-of-service conditions. This issue affects CUPS 1.2 and 1.3, prior to 1.3.5; other versions may also be vulnerable. Common UNIX Printing System (CUPS) is prone to a remote buffer-overflow vulnerability because the software fails to properly bounds-check user-supplied data before copying it to an insufficiently sized buffer.", "qas": [{"answers": [{"answer_start": 390, "text": "the software fails to properly bounds-check user-supplied data before copying it to an insufficiently sized buffer"}], "question": "What is root cause?", "id": "30898-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "execute arbitrary machine code in the context of users running the affected software"}], "question": "What is impact?", "id": "30898-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30898-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "By providing a malformed PSD file, an attacker is able to create an out of bound read condition and execute code in the context of the current user or may allow access to sensitive memory space.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39635-0", "is_impossible": true}, {"answers": [{"answer_start": 58, "text": "create an out of bound read condition and execute code in the context of the current user or may allow access to sensitive memory space"}], "question": "What is impact?", "id": "39635-1", "is_impossible": false}, {"answers": [{"answer_start": 13, "text": "a malformed PSD file"}], "question": "What is attack vector?", "id": "39635-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "but you can bypass the fix (which limited ProcessDeviceMap in a sandbox) by instead abusing shadow object directories. You can then construct the dos device path using something similar to my last poc by overriding the lookup for C: or GLOBALROOT by dropping an object directory or symlink. You can now release the inner object directory or symlink which means the shadow directory version of the name will be found meaning the higher privileged application will pick up the real target. The reparse point only works as long as the object directory exists, so probably the lifetime of the attacking process", "qas": [{"answers": [], "question": "What is root cause?", "id": "39311-0", "is_impossible": true}, {"answers": [{"answer_start": 12, "text": "bypass the fix (which limited ProcessDeviceMap in a sandbox)"}], "question": "What is impact?", "id": "39311-1", "is_impossible": false}, {"answers": [{"answer_start": 84, "text": "abusing shadow object directories"}], "question": "What is attack vector?", "id": "39311-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": ": case 'p': case 'v': case '?': if (op2==0) printf(\"\\t[+] Using first bug in Atari800\\n\"); printf(\"\\nExecuting the vuln program - %s\\n\\n\",PATH); return 0; printf(\"\\t[+] Using second bug in Atari800\\n\"); printf(\"\\nExecuting the vuln program - %s\\n\\n\",link); return 0; printf(\"\\t[+] Using third bug in Atari800\\n\"); printf(\"\\nExecuting the vuln program - %s\\n\\n\",PATH); return 0; printf(\"\\t[+]", "qas": [{"answers": [], "question": "What is root cause?", "id": "657-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "657-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "657-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "25/11/2009 : Apple acknowledges receipt and reproducability : \"After investigating this issue further, we've determined that the crash your test case triggers is caused by dereferencing a null pointer and not from a format string issue\" 20/01/2009 7.6\" 26/01/2009 : Ask apple for a fix timeline as this is an ridiculouly easy to fix vulnerability currently set to be part of the next QuickTime update. : Apple states \"Given that we are handling this as a crasher and not as a security exposure We plan to fix the ones you reported in the next available updates.\" We are investigating now to see if for some reason the latest version has picked up changes that address this issue and will send you feedback today about it.\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "8957-0", "is_impossible": true}, {"answers": [{"answer_start": 129, "text": "crash"}], "question": "What is impact?", "id": "8957-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "8957-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Yes A crash due to an invalid read in the Windows kernel can be reliably leveraged into privileged code execution resulting in a privilege escalation local vulnerability. with MS10-048 See Microsoft security bulletin at This vulnerability was discovered by Nicolas Economou from Core Security Technologies. This function addresses memory with a parameter). This bug can be exploited by surreptitiously registering a callback or \"hook\" that will cleverly modify parameters passed by the kernel into userland that are then reused when returning to kernel from the callback. The problem resides in the mechanism used to pass parameters back to the process creating the window, like for example the aforementioned 'hParent' parameter. These parameters are passed via the stack into userspace, and reused by the kernel after the callback function is executed. the crash occurs on '0xbf832763' ('xxxCreateWindowEx') The value of 'eax' on the crash is '0xfffffffe', the supplied vulnerable 'hParent' value. ; else p ++; else time ++; return ( FALSE );  Resolving the KiUserCallbackDispatcher address   Changing the privileges   Fixing the trampoline   Enabling the kernel callbacks   Creating a window  30 , NULL , NULL , NULL , NULL ); return ( 0 ); Initial notification to the vendor. Vendor acknowledges notification and says that the product team will look into the issue. Can't determine if it is a new bug, a variant of an existing one or an incomplete fix but expects to have more information by the 20th or 21st at the latest. Update from the vendor The issue has been determined to be a variant of CVE-2010-0485. Although the crash comes from the same vector (a window handle returned by a user mode windows hook callback) the bug is in a different function than the original issue and occurs due to a different, previously unknown, issue with the window Core says that its analysis coincides with the vendor's and therefore it will treat the issue as a new vulnerability assigning CORE-2010-0623 to the corresponding security advisory. The discoverer estimated that the issue is very likely to be exploitable. Publication is tentatively scheduled for July 13th, 2010 but may be postponed based on a firm commitment from MSRC and indication that the fix is lined up for testing. Core mentions that it is very likely that vulnerability research vendors have already found this issue and quite possible that exploits are already being developed. Should the information become public by a third-party Core will promptly publish its security advisory and notify the vendor. Core also informs that reliable exploitation of this bug had been achieved and restates that August should be a final date because this vulnerability has probably been already discovered by any with technical knowledge to reverse engineer MS010-032. Microsoft replies with the data Core asked for, and mentions that, if possible, they would like to see an advisory draft. Windows Server 2008 . Windows Server 2008 In normal execution when the 'CreateWindow' is called from userspace, the 'NtUserCreateWindowEx' kernel function is executed, the 'xxxCreateWindowEx' is next in the kernel-side call stack. Core replies with a draft of this advisory and a minor correction regarding an accent mark on the credits for the acknowledgement section.", "qas": [{"answers": [{"answer_start": 19, "text": "an invalid read in the Windows kernel"}], "question": "What is root cause?", "id": "14608-0", "is_impossible": false}, {"answers": [{"answer_start": 6, "text": "crash"}], "question": "What is impact?", "id": "14608-1", "is_impossible": false}, {"answers": [{"answer_start": 386, "text": "surreptitiously registering a callback or \"hook\" that will cleverly modify parameters passed by the kernel into userland that are then reused when returning to kernel from the callback"}], "question": "What is attack vector?", "id": "14608-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Perdition IMAP proxy server is prone to a remote format-string vulnerability because it fails to properly sanitize user-supplied input before passing it as the format specifier to a formatted-printing function. An attacker can exploit this issue to execute arbitrary machine code in the context of the affected application. A successful attack will compromise the application. Failed attempts may cause denial-of-service conditions. This issue affects Perdition 1.17 and prior versions.", "qas": [{"answers": [{"answer_start": 88, "text": "fails to properly sanitize user-supplied input before passing it as the format specifier to a formatted-printing function"}], "question": "What is root cause?", "id": "30724-0", "is_impossible": false}, {"answers": [{"answer_start": 249, "text": "execute arbitrary machine code in the context of the affected application"}], "question": "What is impact?", "id": "30724-1", "is_impossible": false}, {"answers": [{"answer_start": 142, "text": "passing it as the format specifier to a formatted-printing function"}], "question": "What is attack vector?", "id": "30724-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The issue occurs when the application fails to handle the data sent in the POST requests in a single socket connection causing heap memory corruption which results in a crash of the HTTP service.", "qas": [{"answers": [{"answer_start": 22, "text": "the application fails to handle the data sent in the POST requests in a single socket connection"}], "question": "What is root cause?", "id": "33018-0", "is_impossible": false}, {"answers": [{"answer_start": 119, "text": "causing heap memory corruption which results in a crash of the HTTP service"}], "question": "What is impact?", "id": "33018-1", "is_impossible": false}, {"answers": [{"answer_start": 22, "text": "the application fails to handle the data sent in the POST requests in a single socket connection"}], "question": "What is attack vector?", "id": "33018-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "[ not work, but this exploit ] [510 characters maximum allowed for ] [the command and its parameters..", "qas": [{"answers": [], "question": "What is root cause?", "id": "73-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "73-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "73-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Alright, so this exploits a fairly standard buffer  overflow in the default Solaris runtime linker (ld.so.1)   Only real deviation here from the standard overflow  and return into libc scenario is that at the time that  overflow occurs, the libc object file has not been loaded;  so it's not really possible to return into a libc function Some things to note:   obviously some of the predefined addresses will have to be changed   11241128 bytes into our buffer provided to LD_PRELOAD we will end up  overwriting a char ; this is actually very helpful for locating where  the rest of our information is stored in memory, as this pointer  will be used to display another error message, showing us what string  is stored at the address we overwrote this pointer with just look at the code to figure the rest out  setreuid(0,0)  for me at least, these both had to be called  unsigned long get_strcpy_addr(); char *prog[3]; char *envs[7]; char opt this is the location of the (char ) in ld.so.1 we are overwriting   use this to find the address of the environment  arguments (whatever value we write at this address  is what will be displayed in an error message  from ld.so.1 after the error message generated from  our insecure path provided in LD_PRELOAD)  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "114-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "114-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "114-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "In Flexense VX Search Enterprise Server v10.1.12, the Control Protocl suffers from a denial of service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "43451-0", "is_impossible": true}, {"answers": [{"answer_start": 85, "text": "denial of service"}], "question": "What is impact?", "id": "43451-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "43451-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This class initializes the string using [SGBigUTF8String initWithUTF8DataNullTerminated:] even though there is no guarantee the bytes provided to the decoder are null terminated. While this class is included in iMessage, it is more likely that this bug could be useful in local attacks. To reproduce this issue: leaked memory will be printed to the screen.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47257-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "47257-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "47257-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The SIZE FTP command causes the server to misallocate and leak small amounts of memory each time the command is executed. If a sufficient number of these commands are executed by the server, substantial amounts of system memory can be consumed, allowing a remote attacker to carry out a denial of service attack on the affected host. Recently I posted a remote DoS for ProFTPd based in the multiple use of the SIZE command in order to crash the system. Now and thanks to the information provided by Wojciech Purczynski I have coded a program that not only use the SIZE command but also the USER command. Request 15000 size's to the server (it may be enough)\"); ; else if (m==2) { System.out.print(\"Enter the password for that username: \"); System.out.print(\"Enter a valid filename on the FTP A memory leak has been reported in all versions of ProFTPd.", "qas": [{"answers": [{"answer_start": 122, "text": "If a sufficient number of these commands are executed by the server, substantial amounts of system memory can be consumed"}], "question": "What is root cause?", "id": "20536-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "misallocate and leak small amounts of memory each time the command is executed"}], "question": "What is impact?", "id": "20536-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "The SIZE FTP command"}], "question": "What is attack vector?", "id": "20536-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This issue could be exploited by enticing a user to open a hyperlink that references a malicious URI. Successful exploitation will allow execution of arbitrary code in the context of the client user.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24597-0", "is_impossible": true}, {"answers": [{"answer_start": 137, "text": "execution of arbitrary code in the context of the client user"}], "question": "What is impact?", "id": "24597-1", "is_impossible": false}, {"answers": [{"answer_start": 33, "text": "enticing a user to open a hyperlink that references a malicious URI"}], "question": "What is attack vector?", "id": "24597-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Xvt contains a buffer overflow in An attacker can exploit this buffer overflow to exploit arbitrary code with the enhanced privileges of Xvt. This may not be the case for all systems.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20986-0", "is_impossible": true}, {"answers": [{"answer_start": 82, "text": "exploit arbitrary code with the enhanced privileges of Xvt"}], "question": "What is impact?", "id": "20986-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20986-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This is likely due to an unchecked buffer of some sort, so the possibility of exploiting this condition to execute arbitrary attacker-supplied instructions does exist. This issue has been reported for ICQ For MacOS X version 2.6X Beta. Other versions may also be prone to this issue", "qas": [{"answers": [{"answer_start": 22, "text": "an unchecked buffer of some sort"}], "question": "What is root cause?", "id": "21275-0", "is_impossible": false}, {"answers": [{"answer_start": 107, "text": "execute arbitrary attacker-supplied instructions"}], "question": "What is impact?", "id": "21275-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21275-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A denial of service vulnerability has been reported for OpenBSD, specifically when handling malformed calls to sysctl. The precise technical details regarding this vulnerability are currently unknown.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23389-0", "is_impossible": true}, {"answers": [{"answer_start": 2, "text": "denial of service"}], "question": "What is impact?", "id": "23389-1", "is_impossible": false}, {"answers": [{"answer_start": 92, "text": "malformed calls to sysctl"}], "question": "What is attack vector?", "id": "23389-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "CUPS is prone to a remotely exploitable denial of service vulnerability that may be triggered through port 631 by a zero-length UDP packet.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24599-0", "is_impossible": true}, {"answers": [{"answer_start": 40, "text": "denial of service"}], "question": "What is impact?", "id": "24599-1", "is_impossible": false}, {"answers": [{"answer_start": 114, "text": "a zero-length UDP packet"}], "question": "What is attack vector?", "id": "24599-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Explorer.exe that ships with Microsoft Windows XP prior to Windows XP SP2 is reported prone to a denial of service vulnerability. The vulnerability is reported to exist when Explorer.exe handles certain TIFF format images. A remote attacker may exploit this vulnerability by presenting a malicious image to a victim user. This will impact the performance of the computer, effectively denying service to legitimate users. The following example TIFF image is available: This should be placed in a file and given a '.tif' extension.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24605-0", "is_impossible": true}, {"answers": [{"answer_start": 97, "text": "denial of service"}], "question": "What is impact?", "id": "24605-1", "is_impossible": false}, {"answers": [{"answer_start": 195, "text": "certain TIFF format images"}], "question": "What is attack vector?", "id": "24605-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This function effectively executes binaries resident on the system from within the program. Given that this call must execute binaries on the system at hand it relies on the $PATH variable to tell it where the system binaries reside. This variable is configurable by the user, and therefore a user can provide there own binary to be executed. In this particular case because the program also issues a setuid(0) call (a call which set's the UID of the process in this case, root) the program which the user substitutes is executed as root Certain versions of the software shipped to configure the Raptor GFX cards are vulnerable to an PATH environment variable attack due to insecure code within pgxconfig the main configuration utility.", "qas": [{"answers": [{"answer_start": 674, "text": "insecure code within pgxconfig the main configuration utility"}], "question": "What is root cause?", "id": "20147-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "20147-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "20147-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This program is free software; you can redistribute it andor modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; version 2 of the License This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.", "qas": [{"answers": [], "question": "What is root cause?", "id": "3769-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "3769-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "3769-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The FTP server that ships with QPC's QVT line of products is vulnerable to a denial of service attack. If a username/password pair is specified that is longer than 2000 characters combined, the server will drop the connection with an 'authentication failed' message. The next time someone tries to connect, the server will crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19619-0", "is_impossible": true}, {"answers": [{"answer_start": 77, "text": "denial of service"}], "question": "What is impact?", "id": "19619-1", "is_impossible": false}, {"answers": [{"answer_start": 106, "text": "a username/password pair is specified that is longer than 2000 characters combined"}], "question": "What is attack vector?", "id": "19619-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "// putting some garbage on the stack so the ECX would be 41414141 class foo { }", "qas": [{"answers": [], "question": "What is root cause?", "id": "18910-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18910-1", "is_impossible": true}, {"answers": [{"answer_start": 3, "text": "putting some garbage on the stack"}], "question": "What is attack vector?", "id": "18910-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "MySQL is prone to a remote denial-of-service vulnerability because the database server fails to properly handle unexpected input. Exploiting this issue allows remote attackers to crash affected database servers, denying service to legitimate users. This issue affects MySQL 5.1.23 and prior versions.", "qas": [{"answers": [{"answer_start": 67, "text": "the database server fails to properly handle unexpected input"}], "question": "What is root cause?", "id": "30744-0", "is_impossible": false}, {"answers": [{"answer_start": 27, "text": "denial-of-service"}], "question": "What is impact?", "id": "30744-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30744-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The G6 FTP Server, by Gene6, is vulnerable to a buffer overflow attack. If 2000 characters are sent as the username or password, the software will use up all available memory and CPU time and bring the host to a halt.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19624-0", "is_impossible": true}, {"answers": [{"answer_start": 129, "text": "the software will use up all available memory and CPU time and bring the host to a halt"}], "question": "What is impact?", "id": "19624-1", "is_impossible": false}, {"answers": [{"answer_start": 75, "text": "2000 characters are sent as the username or password"}], "question": "What is attack vector?", "id": "19624-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is possible for a user to execute fam to discover a list of monitored files. This list, while it may have been created by a user of elevated privileges, could leak information to an attacker that may be sensitive. This vulnerability requires only that the directory being 'fammed' already have had the program executed against it by a privileged user", "qas": [{"answers": [], "question": "What is root cause?", "id": "21720-0", "is_impossible": true}, {"answers": [{"answer_start": 162, "text": "leak information to an attacker that may be sensitive"}], "question": "What is impact?", "id": "21720-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21720-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Apple iCal is prone to a denial-of-service vulnerability because it fails to adequately sanitize user-supplied input data. Successful exploits will crash the application. iCal 3.0.1 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 68, "text": "fails to adequately sanitize user-supplied input data"}], "question": "What is root cause?", "id": "31620-0", "is_impossible": false}, {"answers": [{"answer_start": 25, "text": "denial-of-service"}], "question": "What is impact?", "id": "31620-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "31620-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\"Create a new project\"  in \"Project name:\" field paste the result (180 \"A\" or more)  4. Click in Next button and you will see a crash", "qas": [{"answers": [], "question": "What is root cause?", "id": "46293-0", "is_impossible": true}, {"answers": [{"answer_start": 128, "text": "crash"}], "question": "What is impact?", "id": "46293-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46293-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue is due to a failure of the affected kernel to properly handle user-supplied size values. An attacker may leverage this issue to overwrite low kernel memory. Well, at least let the scriptkids have fun for a while In memory of pwned.c (uselib)   Redistributions of source code is not permitted", "qas": [{"answers": [{"answer_start": 21, "text": "a failure of the affected kernel to properly handle user-supplied size values"}], "question": "What is root cause?", "id": "25202-0", "is_impossible": false}, {"answers": [{"answer_start": 139, "text": "overwrite low kernel memory"}], "question": "What is impact?", "id": "25202-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "25202-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: BulletProof FTP Client 2010  Buffer Overflow (SEH)  First chance exceptions are reported before any exception handling. You can also enter the contents of the file in the \"Enter URL\" to cause this crash. print('[+] Use the following as Server Name/IP with any user\\'s credentials!')", "qas": [{"answers": [], "question": "What is root cause?", "id": "34162-0", "is_impossible": true}, {"answers": [{"answer_start": 213, "text": "crash"}], "question": "What is impact?", "id": "34162-1", "is_impossible": false}, {"answers": [{"answer_start": 149, "text": "enter the contents of the file in the \"Enter URL\""}], "question": "What is attack vector?", "id": "34162-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A memory corruption vulnerability was found in the parsing of specially crafted archive files, that could lead to local code execution scenarios. This vulnerability was discovered and researched by Martin Gallo and Maximiliano Vidal from Core Security Consulting Services. This vulnerability is caused by a controlled heap buffer overflow when opening a specially crafted CAR archive file. The following python code can be used to generate an archive file that triggers the vulnerability: ! We write a file just to have some data to put into the archive fd.write(\"Some string to compress\")   Write the file Segmentation fault The CAR archive files in its version 2.00 are comprised of an archive header and a list of archived files [3]. Each archived file has a header containing the file's metadata, and the content of the file is split among several blocks. When the SAPCAR program opens a file containing an archived file block different than the known ones [4], it reads an additional 32 bytes of file metadata. The program then uses the last two bytes of the data read as a size field, and copies that amount of data into a fixed-length buffer previously allocated in the heap. As the length field is not properly validated, the operation results in a heap-based buffer overflow. It's worth mentioning that signature validation doesn't prevent the vulnerability to be triggered, as the signature file needs to be extracted from the archive file in order for the validation to be performed. : SAP confirmed the reception of the email and requested the draft version of the advisory. 2017-02-16: Core Security sent SAP a draft version of the advisory and informed them we would adjust our publication schedule according with the release of a solution to the issues. : SAP confirmed reception of the draft advisory and assigned the incident ticket 1780137949 for tracking this issue. 2017-03-08: Core Security researcher sent a PoC SAPCAR archive that can trigger the vulnerability. 2017-03-13: SAP confirmed they could reproduce the vulnerability. -04-03: Core Security asked SAP for an update about the final publication date for this vulnerability's patch. -04-05: SAP confirmed they will be able to release the fix in May, although there could be chances to release it in April. 2017-04-10: SAP informed the security note for this vulnerability and confirmed they will be releasing the fix in May 9th. The contents of this advisory are copyright (c) 2017 The publication of this advisory was coordinated by Alberto Solino from Core Advisories Team.", "qas": [{"answers": [{"answer_start": 305, "text": "a controlled heap buffer overflow when opening a specially crafted CAR archive file"}], "question": "What is root cause?", "id": "41991-0", "is_impossible": false}, {"answers": [{"answer_start": 114, "text": "local code execution scenarios"}], "question": "What is impact?", "id": "41991-1", "is_impossible": false}, {"answers": [{"answer_start": 62, "text": "specially crafted archive files"}], "question": "What is attack vector?", "id": "41991-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Sending a string to ViewProfile() , cause a crash on msnmsgr.exe must be signed in Msn Messenger account for triggerin the vulnerability.", "qas": [{"answers": [], "question": "What is root cause?", "id": "11070-0", "is_impossible": true}, {"answers": [{"answer_start": 44, "text": "crash on msnmsgr.exe"}], "question": "What is impact?", "id": "11070-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "Sending a string to ViewProfile()"}], "question": "What is attack vector?", "id": "11070-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "LICQ is prone to a remote denial-of-service vulnerability because the application fails to handle exceptional conditions. A remote attacker can exploit this issue to crash the affected application, denying service to legitimate users. The attacker may also be able to execute code, but this has not been confirmed", "qas": [{"answers": [{"answer_start": 66, "text": "the application fails to handle exceptional conditions"}], "question": "What is root cause?", "id": "31627-0", "is_impossible": false}, {"answers": [{"answer_start": 26, "text": "denial-of-service"}], "question": "What is impact?", "id": "31627-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "31627-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability exist due to the improper permissions, with the 'F' flag (Full) for 'Everyone' group, making the entire directory 'Ubisoft Game Launcher' and its files and sub-dirs Tested on: Microsoft Windows 7 Professional SP1 (EN)", "qas": [{"answers": [{"answer_start": 31, "text": "the improper permissions, with the 'F' flag (Full) for 'Everyone' group, making the entire directory 'Ubisoft Game Launcher'"}], "question": "What is root cause?", "id": "33961-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "33961-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "33961-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "You cannot make rpc.ttdbserver execute arbitrary code with this vulnerability. The consequence of this vulnerability being exploited is a denial of service condition (rpc.ttdbserver). it should compile on any normal system, to get HP-UX exploit compile with cmd is run through sh -c, and there is no practical limit for command length, but it has to fit in buffer (1024 bytes in this case), by default ttdbserver runs from inetd, so it will be respawned each time it die (I mean execute command), also because it dies correct reply is f file option: You should kill ttdbserver before, to make sure it doesn't have any files open except 0-2 fds passed from inetd. It happens on 6.3 at least, I need to look at other versions. When ttdbserver has connected clients, it simply returns an error (filename too long). You can find a buffer allocated by xdr surprizingly there are some differences between ttdbserver on above platforms, like solaris dup() of fds, start-up Irix behaviour, the fact that on Irix it first tries chdir to directory then do some task (it's the reason I have to add \"/f\" at the end of buffer to have it copy overflow part of the buffer on stack) etc. : case 'k': case 'u': case 'f': } else if (proto) else  record marking", "qas": [{"answers": [], "question": "What is root cause?", "id": "19635-0", "is_impossible": true}, {"answers": [{"answer_start": 138, "text": "denial of service"}], "question": "What is impact?", "id": "19635-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19635-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The VHDMP driver doesn\u2019t open physical disk drives securely when creating a new VHD leading to information disclosure and EoP by allowing a user to access data they\u2019re shouldn\u2019t have access to. 2) Execute the poc on Win 10 passing the path to the vhd file to create and the physical drive index of the drive to clone. 1) Compile the C# source code file.", "qas": [{"answers": [{"answer_start": 0, "text": "The VHDMP driver doesn\u2019t open physical disk drives securely"}], "question": "What is root cause?", "id": "40765-0", "is_impossible": false}, {"answers": [{"answer_start": 95, "text": "information disclosure and EoP by allowing a user to access data they\u2019re shouldn\u2019t have access to"}], "question": "What is impact?", "id": "40765-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40765-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When processing task files, the Windows Task Scheduler only uses a CRC32 checksum to validate that the file has not been tampered with. By modifying the task file and creating a CRC32 collision, an attacker can execute arbitrary commands with SYSTEM privileges. Thanks to webDEViL for the information about disable/enable. OptString.new(\"CMD\", [ false, \"Command to execute instead of a payload\" ]), end def check vuln = false if winver.include? Exploit::CheckCode::Appears end def exploit   WOW64 Filesystem Redirection prevents us opening the file directly. Read the contents of the newly creates task file  Doublecheck that we got what we expect we strip the BOM here to exclude it from the crc32 calculation end  Record the crc32 for later calculations  Convert the file contents from unicode  Mangle the contents to now run with SYSTEM privileges  Convert it back to unicode   the task file contents from #{taskfile}...\")  Can't read the file directly on 2008?", "qas": [{"answers": [], "question": "What is root cause?", "id": "19930-0", "is_impossible": true}, {"answers": [{"answer_start": 211, "text": "execute arbitrary commands with SYSTEM privileges"}], "question": "What is impact?", "id": "19930-1", "is_impossible": false}, {"answers": [{"answer_start": 139, "text": "modifying the task file and creating a CRC32 collision"}], "question": "What is attack vector?", "id": "19930-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If the string parameter of the method is set to an object with toString defined, this method can delete the TextField's parent, leading to a use-after-free.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39047-0", "is_impossible": true}, {"answers": [{"answer_start": 141, "text": "use-after-free"}], "question": "What is impact?", "id": "39047-1", "is_impossible": false}, {"answers": [{"answer_start": 3, "text": "the string parameter of the method is set to an object with toString defined"}], "question": "What is attack vector?", "id": "39047-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Traceroute is a well-known network diagnostic tool used for analyzing the path on a network between two hosts. savestr() does what strdup() does without the extra malloc() call and is used when parsing the hostname or \"dotted quad notation\" ip address argument to the -g parameter. Like in the first instance, free() is called on the pointer to where the data begins inside the old-buffer of unallocated memory. What makes this possibly exploitable is that the region of memory to which the pointer points is user-controlled and can be written to with (somewhat) arbitrary data before free() is called. An attacker may be able to construct a malicious malloc() header and carefully stuff it into the first savestr() buffer, so that is there when free() looks for it after the second savestr(). What complicates exploitation of this issue are the functions involved with savestr(), inet_addr() and gethostbyname(), which limit the type of user data that can be put into the buffer (which would need to be binary). If pulled off, however, it may be possible to overwrite aribitrary locations in the heap (such as a function pointer) with arbitrary data. If successfully exploited this would yield local root access for the attacker. Certain versions of LBNL traceroute are vulnerable to an interesting attack involving freeing of pointers pointing to unallocated memory. After the first instance of \"-g\" is parsed and savestr() is called, the pointer to the block used by savestr() is unallocated via free(). When free() doesn't find a valid malloc header before the pointer it is passed, traceroute crashes.", "qas": [{"answers": [{"answer_start": 111, "text": "savestr() does what strdup() does without the extra malloc() call"}], "question": "What is root cause?", "id": "20251-0", "is_impossible": false}, {"answers": [{"answer_start": 1059, "text": "overwrite aribitrary locations in the heap (such as a function pointer) with arbitrary data"}], "question": "What is impact?", "id": "20251-1", "is_impossible": false}, {"answers": [{"answer_start": 202, "text": "the hostname or \"dotted quad notation\" ip address argument to the -g parameter"}], "question": "What is attack vector?", "id": "20251-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is also interesting to note that the AFDKO copies in the above DLLs are much older than the latest version of the code on GitHub. Despite the fact that CoolType contains an old fork of the library, it includes multiple non-public fixes for various vulnerabilities, particularly a number of important bounds checks in read*() functions declared in cffread/cffread.c (e.g This means that the internal fork of the code has had many bugs fixed for the last 10 years, which are still not addressed in the open-source branch of the code. As the document stated: The Registry provides more permanent storage for a number of items that have predefined meanings. When a value smaller than 0 is specified for \"count\", many of the other sanity checks can be bypassed, and out-of-bounds read/write access can be triggered with a high degree of control over what is copied where. At the time of this writing, Adobe Acrobat for Windows is available as a 32-bit build only. To give an example, setting count to a value in the range of 0x80000000 At the same time, the value is so small that it bypasses all checks where \"i + count\" and \"j + count\" are involved for i, j in the range of 0-0x3fffffff, which also enables us to refer to the entire address space relative to the referenced buffer. As a result, the vulnerability gives us out-of-bounds access to both the stack and heap. An attacker could target generic data in memory related to the control flow such as return addresses, or application-specific data inside t1cCtx/t1cAuxData, which also contain many sensitive fields such as function pointers etc. NULL, which may result in a) operating on an uninitialized \"size\" variable in line 752, and b) passing NULL as the source parameter to memcpy() in line 755. The latter build of the code uses safe variants of many standard functions, such as memcpy_s() instead of memcpy(), vsprintf_s() instead of vsprintf() etc. Note the second argument, which is supposed to be the length of the buffer being copied to. Judging by the code the author meant to set it to the number of available bytes from element \"j\" to the end of the array, but used the sizeof(array) expression instead of the actual length stored in the \"size\" variable. In this case sizeof(array) is the size of a pointer and evaluates to 4 or 8, which is nowhere near the actual size of the array (16 or 64 depending on the register). Consequently, this bug effectively blocks access to the element at array[1] for j={0, 1}, and is incorrectly set to a huge unsigned value for j >= 2, rendering it ineffective. Considering that the 2nd \"destsz\" memcpy_s argument is not supposed to be a security boundary but just a safety net, and proper sanitization of the i, j, count values should prevent any kind of out-of-bounds access, we don't consider this a separate vulnerability. 67 17 load 18 endchar A brief description:  Line 1 constructs a float on the stack with a binary representation of 0x41414141  Lines 213 This results in copying 0x200 (0xc0000080  4) bytes from registry 0 to &hBCA[67], which points to the return address of the t2cParse() function on the stack the Type 1 Reader - t1r, Type 1 Writer - t1w, CFF reader - cfr etc.) has its own version number included in the source code, and they change over time. The registry arrays reside within t1cAuxData structures allocated on the heap.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47259-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "47259-1", "is_impossible": true}, {"answers": [{"answer_start": 1396, "text": "generic data in memory related to the control flow such as return addresses, or application-specific data inside t1cCtx/t1cAuxDat"}], "question": "What is attack vector?", "id": "47259-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " A denial of service vulnerability can be exploited to crash Serva32 import socket port =", "qas": [{"answers": [], "question": "What is root cause?", "id": "17266-0", "is_impossible": true}, {"answers": [{"answer_start": 3, "text": "denial of service"}], "question": "What is impact?", "id": "17266-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "17266-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "WFTPD server front end GUI has been reported to be prone to a denial of service. The issue is reported to present itself if a user who is logged into the affected service issues an FTP request with a large parameter. This will cause the server GUI to behave in an unstable manner, potentially preventing the GUI from opening", "qas": [{"answers": [], "question": "What is root cause?", "id": "23842-0", "is_impossible": true}, {"answers": [{"answer_start": 62, "text": "denial of service"}], "question": "What is impact?", "id": "23842-1", "is_impossible": false}, {"answers": [{"answer_start": 178, "text": "an FTP request with a large parameter"}], "question": "What is attack vector?", "id": "23842-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "require 'msf/core' include Msf::Exploit::FILEFORMAT include Msf::Exploit::EXE This module exploits a vulnerability found in Windows Object Linking and Embedding (OLE) allowing arbitrary code execution, publicly exploited in the wild as MS14-060 patch bypass. The Microsoft update tried to fix the vulnerability publicly known as \"Sandworm\". And please keep in mind that some other setups such as using Office 2010 SP1 might be less stable, and sometimes may end up with a crash due to a failure in the CPackage::CreateTempFileName function. Platforms such as Windows Vista SP2 all the way to Windows 8, Windows Server 2008 and 2012 are known to be vulnerable.", "qas": [{"answers": [{"answer_start": 485, "text": "a failure in the CPackage::CreateTempFileName function"}], "question": "What is root cause?", "id": "35236-0", "is_impossible": false}, {"answers": [{"answer_start": 176, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "35236-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "35236-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Session File Handling Buffer Overflow PoC  Desc: Adobe Audition suffers from a buffer overflow vulnerability when dealing with .SES  (session) format file. The application failz to sanitize the user input resulting in a  memory corruption, overwriting several memory registers which can aid the atacker to gain  the power of executing arbitrary code or denial of service", "qas": [{"answers": [{"answer_start": 156, "text": "The application failz to sanitize the user input"}], "question": "What is root cause?", "id": "17278-0", "is_impossible": false}, {"answers": [{"answer_start": 305, "text": "gain  the power of executing arbitrary code or denial of service"}], "question": "What is impact?", "id": "17278-1", "is_impossible": false}, {"answers": [{"answer_start": 127, "text": "SES  (session) format file"}], "question": "What is attack vector?", "id": "17278-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This code uses hardcoded (!) values for the pointer addresses, which you will need to adapt if you want to use it on any other build then the build that was used for their hacking challenge (i believe it was kernel 2.2.18, cylant version 1.1). in any case, i hope i don't have to say that with any other version this code will crash and burn.. i have testet this code locally on my own system and it works like a charm. lastly, a short outline of this code:  demasq's the rest of the packet (each byte after the initial code (64bytes) is decreased by 3... there was no 0xfd in the packet)   insert the module into the kernel  the module's init function reroutes the function pointers to the function stub in the module code  bind a shell to a tcp port (i'll leave it to you to figure out which one...take it as a script kiddie protection, even though i doubt this will find any real use... i want to congratulate all the (very nice and helpful) people at cylant for a fine product (they were already working on a fix to this particular attack, so this attack probably won't work in newer versions of cylant's software). This makes it possible for local users to execute system calls outside of the infrastructure, which could lead to the execution of malicious local programs.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20988-0", "is_impossible": true}, {"answers": [{"answer_start": 327, "text": "crash and burn"}], "question": "What is impact?", "id": "20988-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20988-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability has the most typical Buffer overflow vulnerabilities. OK [-] crash info First chance exceptions are reported before any exception handling. field is no limit to the length and does not check the length [-] Insert string \"A\"*1500 and press Ok,", "qas": [{"answers": [], "question": "What is root cause?", "id": "39480-0", "is_impossible": true}, {"answers": [{"answer_start": 79, "text": "crash"}], "question": "What is impact?", "id": "39480-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39480-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack overflow in HTML Help Workshop 4.74 By creating a specially crafted hhp file, an an attacker may be able to execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "10335-0", "is_impossible": true}, {"answers": [{"answer_start": 137, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "10335-1", "is_impossible": false}, {"answers": [{"answer_start": 77, "text": "a specially crafted hhp file"}], "question": "What is attack vector?", "id": "10335-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "> 'Photodex ProShow Producer 5.0.3256 load File Handling Buffer Overflow', This module exploits a stack-based buffer overflow in Photodex ProShow Producer v5.0.3256 in the handling of the plugins load list file. An attacker must send the crafted \"load\" file to victim, who must store it in the installation directory. The vulnerability will be triggered the next time ProShow is opened. end  Overriding file_create to allow the creation of a file without extension end end def exploit  jmp back to the payload  cause exception hitting the end of the stack end end  'Photodex ProShow Producer 5.0.3256 load File Handling Buffer Overflow', This module exploits a stack-based buffer overflow in Photodex ProShow Producer v5.0.3256 in the handling of the plugins load list file.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20109-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "20109-1", "is_impossible": true}, {"answers": [{"answer_start": 229, "text": "send the crafted \"load\" file to victim, who must store it in the installation directory"}], "question": "What is attack vector?", "id": "20109-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Linux kernel is prone to a remote denial-of-service vulnerability because it fails to adequately validate specially crafted IPv6 'Hop-By-Hop' headers. Attackers can exploit this issue to cause a kernel panic, denying service to legitimate users the buffer we want to send   overwrite our src and dst ip    send the buffer  else", "qas": [{"answers": [{"answer_start": 81, "text": "fails to adequately validate specially crafted IPv6 'Hop-By-Hop' headers"}], "question": "What is root cause?", "id": "30902-0", "is_impossible": false}, {"answers": [{"answer_start": 38, "text": "denial-of-service"}], "question": "What is impact?", "id": "30902-1", "is_impossible": false}, {"answers": [{"answer_start": 110, "text": "specially crafted IPv6 'Hop-By-Hop' headers"}], "question": "What is attack vector?", "id": "30902-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: [Gomplayer Memory Corruption vulnerability latest Version Gomplayer version 2.2.57.5189 and prior to that are vulnerable to a memory corruption vulnerability via a malformed ogg file format , Tested on data =  wait with pending attach Symbol search path The data from the faulting address is later used as the target for a branch.'''", "qas": [{"answers": [], "question": "What is root cause?", "id": "33335-0", "is_impossible": true}, {"answers": [{"answer_start": 27, "text": "Memory Corruption"}], "question": "What is impact?", "id": "33335-1", "is_impossible": false}, {"answers": [{"answer_start": 178, "text": "a malformed ogg file format"}], "question": "What is attack vector?", "id": "33335-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The attached PE file causes memory corruption in Avast, it looks related to authenticode parsing. Heap More info: heap owning the address: ! More info: heap segment More info: heap entry containing the address: ! And that DWORD appears in the input file at offset 316b3h:", "qas": [{"answers": [], "question": "What is root cause?", "id": "39530-0", "is_impossible": true}, {"answers": [{"answer_start": 28, "text": "memory corruption"}], "question": "What is impact?", "id": "39530-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39530-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability allows remote attackers to bypass access restrictions on vulnerable installations of Internet Information Server 6.0. Exploitation of this issue can result in the Authentication bypass of password protected folders Listing, downloading and uploading of files into a password protected WebDAV The password protection mechanism is not relevant for the attack to work. Inside this folder there is a file named \u00e2\u20ac\u017eprotected.zip\u00e2\u20ac\u0153 The attacker sends a HTTP GET request to the web server. f\u00e2\u20ac\u0153 instructs the web server to handle the request using WebDAV. Using this malicious URI construct the webserver sends the file located at \u00e2\u20ac\u017e/protected/protected.zip\u00e2\u20ac\u0153 back to the attacker without asking for proper authentication. Another valid request an attacker might send to the web server is: close IIS 6.0 will remove the \u00e2\u20ac\u017e%c0%af\u00e2\u20ac\u0153 unicode character internally from the request and send back the password protected file without asking for proper credentials. The attacker can bypass the access restrictions of the password protected folder and list, download, upload and modify files. The attacker sends a PROPFIND request to the web server. IIS responds with the directory listing of the folder without asking for a password. This vulnerability was discovered by:", "qas": [{"answers": [{"answer_start": 1158, "text": "IIS responds with the directory listing of the folder without asking for a password"}], "question": "What is root cause?", "id": "8704-0", "is_impossible": false}, {"answers": [{"answer_start": 46, "text": "bypass access restrictions on vulnerable installations of Internet Information Server 6.0"}], "question": "What is impact?", "id": "8704-1", "is_impossible": false}, {"answers": [{"answer_start": 465, "text": "a HTTP GET request to the web server"}], "question": "What is attack vector?", "id": "8704-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It will first freeze during 45s consuming 100% resources, and then, if   the user hits disconnect and then reconnects to the server it will enter   in an infinite loop trying to put data on the stack printf(\"[+] Note that user MUST click on disconnect and then reconnect\\n to trigger the bug.\\n\\n\"); return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "3276-0", "is_impossible": true}, {"answers": [{"answer_start": 14, "text": "freeze during 45s consuming 100% resources"}], "question": "What is impact?", "id": "3276-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "3276-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "require 'msf/core' include Msf::Exploit::FILEFORMAT include Msf::Exploit::Remote::Seh This module exploits a stack-based buffer overflow in the Zinf Audio Player 2.2.1.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16688-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16688-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16688-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that a denial of service exists in OS X When a user creates a directory, descends it, creates another directory of the same name, then attempts to move the directory up one level in the hierarchy, the system reacts unpredictably. It has been reported that this can cause a crash of the system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22074-0", "is_impossible": true}, {"answers": [{"answer_start": 28, "text": "denial of service"}], "question": "What is impact?", "id": "22074-1", "is_impossible": false}, {"answers": [{"answer_start": 73, "text": "creates a directory, descends it, creates another directory of the same name, then attempts to move the directory up one level in the hierarchy"}], "question": "What is attack vector?", "id": "22074-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It is possible for a remote attacker to deny service to legitimate users of the service by submitting an excessively long web request (approximately 3000+ bytes). It should be noted that this issue is due to a remotely exploitable buffer overflow condition", "qas": [{"answers": [{"answer_start": 208, "text": "a remotely exploitable buffer overflow condition"}], "question": "What is root cause?", "id": "21293-0", "is_impossible": false}, {"answers": [{"answer_start": 40, "text": "deny service to legitimate users of the service"}], "question": "What is impact?", "id": "21293-1", "is_impossible": false}, {"answers": [{"answer_start": 91, "text": "submitting an excessively long web request (approximately 3000+ bytes)"}], "question": "What is attack vector?", "id": "21293-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A successful exploit of this issue allows an attacker to gain superuser privileges, completely compromising the affected computer. Version 4.6.1 running on Sun Solaris 10 is vulnerable to this issue Local exploitation of a design error vulnerability in version 4.6.1 of  NSPR, as included with Sun Microsystems Solaris 10, allows attackers to  create or overwrite arbitrary files on the system. The problem exists  because environment variables are used to create log files. Even when the  program is setuid, users can specify a log file that will be created with  elevated privileges (CVE20064842)", "qas": [{"answers": [{"answer_start": 423, "text": "environment variables are used to create log files"}], "question": "What is root cause?", "id": "28788-0", "is_impossible": false}, {"answers": [{"answer_start": 57, "text": "gain superuser privileges, completely compromising the affected computer"}], "question": "What is impact?", "id": "28788-1", "is_impossible": false}, {"answers": [{"answer_start": 519, "text": "specify a log file that will be created with  elevated privileges"}], "question": "What is attack vector?", "id": "28788-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "At the time of this writing, based on the available source code, we conclude that AFDKO was originally developed to only process valid, well-formatted font files. It contains very few to no sanity checks of the input data, which makes it susceptible to memory corruption issues (e.g buffer overflows) and other memory safety problems, if the input file doesn't conform to the format specification. The code is reachable through dwrite!AdobeCFF2Snapshot, called by methods of the FontInstancer class, called by dwrite!DWriteFontFace::CreateInstancedStream and dwrite!DWriteFactory::CreateInstancedStream. This strongly indicates that the code is used for instancing the relatively new variable fonts [4], i.e If a user opens a specially crafted website with an embedded OpenType variable font and decides to print it (to PDF, XPS, or another physical or virtual printer), the AFDKO code will execute with the attacker's font file as input. The relevant part of the function is shown below: The \"iFD\" field is an unsigned char, as defined in afdko/c/public/lib/api/absfont.h: As shown above, it is initialized directly from the input stream and so the font file has complete control over it. There are no bounds checks to verify if the value is consistent with other structures in the font. The field is used to store an index into the h->fdicts array, whose size is determined by the length of the FDArray index, see readFDArray (): If any of the iFD fields are set to a value exceeding the lengths of the h->FDArray / h->fdicts arrays, the library may access invalid memory in the following locations in code: The second instance is especially dangerous in the context of memory safety, as the \"aux\" pointer fetched from an invalid memory location (potentially attacker-controlled) is later extensively used during the Type 2 CharString execution for reading and writing. In non-ASAN builds, the code crashes later on when trying to access an invalid h->FDArray.array[1].aux pointer. The original CFF2 table was left untouched, and a second copy of it with the modified iFD was inserted at the end of the font with the tag \"CFF \". A similar Microsoft Edge renderer process crash is also shown below: First chance exceptions are reported before any exception handling. Shadow bytes around the buggy address: 0x0c5e7fff9ab0:", "qas": [{"answers": [{"answer_start": 338, "text": "the input file doesn't conform to the format specification"}], "question": "What is root cause?", "id": "47097-0", "is_impossible": false}, {"answers": [{"answer_start": 253, "text": "memory corruption"}], "question": "What is impact?", "id": "47097-1", "is_impossible": false}, {"answers": [{"answer_start": 724, "text": "a specially crafted website with an embedded OpenType variable font"}], "question": "What is attack vector?", "id": "47097-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "VULNERABILITY DESCRIPTION Anonymous attacker can send a special request to the SAP Adaptive Server Enterprise and crash the server. SP02 To correct this vulnerability, install SAP Security Note 2330839 6. TECHNICAL DESCRIPTION Proof of Concept Sending special request to the SAP Adaptive Server Enterprise 16 (backup server) can get crash the server.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40593-0", "is_impossible": true}, {"answers": [{"answer_start": 114, "text": "crash the server"}], "question": "What is impact?", "id": "40593-1", "is_impossible": false}, {"answers": [{"answer_start": 54, "text": "a special request"}], "question": "What is attack vector?", "id": "40593-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft's JET database engine feature allows the embedding of Visual Basic for Application in SQL string expressions and the lack of metacharacter filtering by many web applications may allow remote users to execute commands on the system. VBA expressions withing two \"|\" characters within an SQL string will be executed and its result substituted in the string. The fact that it uses the \"|\" character to execute VBA code within SQL statements in JET is a largely unknown feature, meaning that few applications escape user input for this metacharacter. Microsoft's IIS in particular executes ODBC commands in the context of the System account. This may allow remote attackers to input VBA code in web enabled applications that will be executed by IIS as the System user. The most dangerous VBA command available to an attacker is shell(), which enables it to run any command in the system. Tests seem to indicate JET 4.0 is not vulnerable to this issue. This exploit uses an ASP sample page (catalog_type.asp). so it runs the query as a local user and doesn't need any type of Remote Data Service to access the DSN. somehost.netscriptssamplesdetails.idc exists  return 0;  Checks out if newdsn.exe, ctguestb.idc and details.idc are present   Make a DSN with the name of \"Web SQL\"  return 1 if $line=~/<H2>Datasource creation successful<\\/H2>/;}} return 0;}  Use .idc flaw to get absolute path  return $1;  Use .ida It also ships with MSADC which allows remote uses to execute SQL queries on a DNS via HTTP. Microsoft's IIS 4.0 ships with a number of sample scripts that are vulnerable if used with the JET ODBC driver (e.g", "qas": [{"answers": [{"answer_start": 123, "text": "the lack of metacharacter filtering by many web applications"}], "question": "What is root cause?", "id": "19228-0", "is_impossible": false}, {"answers": [{"answer_start": 210, "text": "execute commands on the system"}], "question": "What is impact?", "id": "19228-1", "is_impossible": false}, {"answers": [{"answer_start": 387, "text": "the \"|\" character"}], "question": "What is attack vector?", "id": "19228-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Paste the content into the field: ' Click 'OK' button and you will see a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46294-0", "is_impossible": true}, {"answers": [{"answer_start": 73, "text": "crash"}], "question": "What is impact?", "id": "46294-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46294-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "\"The vulnerability results because the Messenger Service does not properly validate the length of a message before passing it to the allocated buffer\" according to MS bulletin. in encountered in the 'body' part of the message, it is replaced by a CR+LF. The buffer allocated for this operation is twice the size of the string, which is the way to go, but is then copied to a buffer which was only allocated 11CAh bytes.", "qas": [{"answers": [{"answer_start": 35, "text": "the Messenger Service does not properly validate the length of a message before passing it to the allocated buffer\" according to MS bulletin"}], "question": "What is root cause?", "id": "111-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "111-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "111-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The common JACK configuration on Linux systems appears to be a JACK server running under the current user account, and interacting with JACK clients from the same user account; so with a minimal privilege difference; this is not the case with the configuration on Android, where the JACK service runs as a more privileged user in a less restrictive SELinux domain to the clients that can connect to it. There are multiple possible ways to corrupt the internal state of any of the shared-memory backed c++ objects in use; attached is a PoC that uses the shared memory service to map the JackEngineControl object in use, and modify the value of the fDriverNum member, which is used in several places without validation. This is highly likely not the only variable stored in shared memory that is used without proper validation; and the function shown below is definitely not the only place that this particular variable is used dangerously. This is quite a convenient exploitation primitive, as a small negative value will cause the code in several places to index backwards from a known array; when (any of the similar functions to the below are called, table is pointing to the fClientTable array inside a JackEngine instance) Since we are treating the pointer read from table as a c++ object with a vtable pointer, this lets us trivially gain control of the flow of Fatal signal 11 (SIGSEGV), code 1, fault addr 0x41414140 This means that whenever the JACK server creates an object backed by shared memory, it also stores a pointer to that object (in the address space of the JACK server), allowing a malicious client to bypass ASLR in the JACK server", "qas": [{"answers": [{"answer_start": 1508, "text": "it also stores a pointer to that object"}], "question": "What is root cause?", "id": "40066-0", "is_impossible": false}, {"answers": [{"answer_start": 439, "text": "corrupt the internal state of any of the shared-memory backed c++ objects in use"}], "question": "What is impact?", "id": "40066-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40066-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The issue is that while m_associatedElements vector is being iterated, its content can change (HTMLFormControlElement being added or removed from it). However, this by itself is not sufficient to exploit this issue as m_associatedElements.remove(index) (called from The loop inside HTMLFormElement::reset() continues to iterate over now deleted buffer, causing the use-after free condition. If an attacker manages to reclaim the space of the freed buffer and fill it with attacker-controlled data (there is plenty of opportunity to do this inside the DOMSubtreeModified event handler. Also note that the size of the freed buffer can be chosen by the attacker), subsequent iterations over m_associatedElements will cause HTMLFormControlElement::reset() method to be called on the attacker-controlled pointer. Since HTMLFormControlElement::reset() is a virtual function, this can easily lead to code execution. Shadow bytes around the buggy address:", "qas": [{"answers": [], "question": "What is root cause?", "id": "41213-0", "is_impossible": true}, {"answers": [{"answer_start": 361, "text": "the use-after free condition"}], "question": "What is impact?", "id": "41213-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41213-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "In Disk Pulse Enterprise Server v10.1.18, the Control Protocol suffers from a denial of service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "43452-0", "is_impossible": true}, {"answers": [{"answer_start": 78, "text": "denial of service"}], "question": "What is impact?", "id": "43452-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "43452-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "control systemd units in the system instance from an active session over DBus, the access is gated by a polkit policy that requires \"auth_admin_keep\" auth. This results in an auth prompt being shown to the user, asking the user to confirm the action by entering the password of an administrator account. Without the start time check, this would obviously be buggy because an attacker could simply wait for the legitimate client to disappear, then create a new client with the same PID. Looking at the source code of copy_process() in the kernel: if (retval) The ktime_get_boot_ns() call is where the \"start time\" of the process is recorded. In between these, some time passes; and because the copy_thread_tls() call between them can access userspace memory when sys_clone() is invoked through the 32-bit syscall entry point, an attacker can even stall the kernel arbitrarily long at this point (by supplying a pointer into userspace memory that is associated with a userfaultfd or is backed by a custom FUSE filesystem). This means that an attacker can immediately call sys_clone() when the victim process is created, often resulting in a process that has the exact same start time reported in procfs; and then the attacker can delay the alloc_pid() call until after the victim process has died and the PID assignment has cycled around. If the attack worked, user A should show see something like this: got uffd msg good pagefault old start time: 2454277 awaiting death of 16466... 2454277 child died, exiting cups.service should be running afterwards because the PoC running as user A restarted it. Sometimes the attack fails because the start time of the attacker process is off by one (\"old start time\" and \"new start time\" don't match); in that case, user A will get an auth popup. (The attack would likely work much more reliably if the PoC triggered the sys_clone() on victim process creation; at the moment, it only triggers when the victim process calls execve().)", "qas": [{"answers": [], "question": "What is root cause?", "id": "46105-0", "is_impossible": true}, {"answers": [{"answer_start": 846, "text": "stall the kernel arbitrarily long at this point"}], "question": "What is impact?", "id": "46105-1", "is_impossible": false}, {"answers": [{"answer_start": 253, "text": "entering the password of an administrator account"}], "question": "What is attack vector?", "id": "46105-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "GSWKT (Generic Software Wrappers Toolkit) is prone to multiple concurrency vulnerabilities because of its implementation of system call wrappers. This problem can result in a race condition between a user thread and the kernel. Attackers can exploit these issues by replacing certain values in system call wrappers with malicious data to elevate privileges or to bypass auditing. GSWKT 1.6.3 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 102, "text": "its implementation of system call wrappers"}], "question": "What is root cause?", "id": "30464-0", "is_impossible": false}, {"answers": [{"answer_start": 175, "text": "race condition between a user thread and the kernel"}], "question": "What is impact?", "id": "30464-1", "is_impossible": false}, {"answers": [{"answer_start": 320, "text": "malicious data"}], "question": "What is attack vector?", "id": "30464-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Paste the buffer in the input then press ok print author print overflow print instruction", "qas": [{"answers": [], "question": "What is root cause?", "id": "42073-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "42073-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "42073-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the function is called with a string parameter with toString defined, or an integer parameter with valueOf defined, the parent object of the TextField can be used after it is freed. Please note that all three parameters of this function are susceptible to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39048-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39048-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39048-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A problem in Microsoft Internet Explorer could lead to the disclosure of sensitive information. Due to the design of the datasource applet, it may be possible for a user to view the contents of local files via a remote page. By building a custom-crafted page that specifies the code base as the local system, it would be possible to display the contents of known local files.", "qas": [{"answers": [{"answer_start": 103, "text": "the design of the datasource applet"}], "question": "What is root cause?", "id": "21721-0", "is_impossible": false}, {"answers": [{"answer_start": 55, "text": "the disclosure of sensitive information"}], "question": "What is impact?", "id": "21721-1", "is_impossible": false}, {"answers": [{"answer_start": 210, "text": "a remote page"}], "question": "What is attack vector?", "id": "21721-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "MacOS kernel memory corruption due to off-by-one in audit_pipe_open audit_pipe_open is the special file open handler for the auditpipe device (major number 10.)", "qas": [{"answers": [{"answer_start": 38, "text": "off-by-one in audit_pipe_open audit_pipe_open is the special file open handler for the auditpipe device (major number 10.)"}], "question": "What is root cause?", "id": "41797-0", "is_impossible": false}, {"answers": [{"answer_start": 13, "text": "memory corruption"}], "question": "What is impact?", "id": "41797-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "41797-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Squid is prone to a remote denial-of-service vulnerability because the proxy server fails to handle certain FTP requests. Successfully exploiting this issue allows remote attackers to crash affected proxy applications, denying futher service to legitimate users. Squid versions from 2.5.STABLE11 to 2.6.STABLE6 are vulnerable to this issue.", "qas": [{"answers": [{"answer_start": 67, "text": "the proxy server fails to handle certain FTP requests"}], "question": "What is root cause?", "id": "29473-0", "is_impossible": false}, {"answers": [{"answer_start": 27, "text": "denial-of-service"}], "question": "What is impact?", "id": "29473-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "29473-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "For example, the user could scp the following to Subsequently, the user could upload the following file to their home directory, and call it scp:  end When they next scp a file: Due to this oversight, it is possible for a remote user to upload files which may allow command execution.", "qas": [{"answers": [{"answer_start": 190, "text": "oversight"}], "question": "What is root cause?", "id": "21732-0", "is_impossible": false}, {"answers": [{"answer_start": 237, "text": "upload files which may allow command execution"}], "question": "What is impact?", "id": "21732-1", "is_impossible": false}, {"answers": [{"answer_start": 78, "text": "upload the following file to their home directory"}], "question": "What is attack vector?", "id": "21732-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Sync Breeze Enterprise Server v10.1.16, the Control Protocol suffers from a denial of service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "43453-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "denial of service"}], "question": "What is impact?", "id": "43453-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "43453-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The Vulnerability Laboratory Research Team discovered multiple vulnerabilities in the SharkFood Air Gallery 1.0 Air Photo Browser mobile application for Apple iOS. The vulnerability is located in the vulnerable `devicename` value of the file dir und sub category `header` (header-title) section. The execute of the injected command or path request occurs with persistent attack vector in the index and sub category list of the web interface. Successful exploitation of the vulnerability results in unauthorized execute of system specific commands or unauthorized path requests. Successful exploitation of the vulnerability results unauthorized execution of system specific commands or unauthorized path requests. [+] album name Affected Module(s): [+] Index - Item Name List [+] Sub Category - Title List Proof of Concept (PoC): The local command/path inject web vulnerability can be exploited by local attackers with restricted or low privileged device user account without user interaction. For security demonstration or to reproduce the vulnerability follow the provided information and steps below. Open the settings menu in the mobile iOS and click the info button to have an influence on the devicename value 3. Now change the local devicename value to your own script code with a frame + local command inject settings or path request 4. The local command/path inject web vulnerability can be exploited by local attackers with restricted or low privileged device user account without user interaction. Note: Now the attackers is able to change an exisiting albumname or can add a new album (name) 3. To record, list (feed), modify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission. Exploitation of the command/path inject vulnerability requires a low privileged iOS device account with restricted access and no user interaction. The security risk of the local command/path inject vulnerability is estimated as high(-) with a cvss (common vulnerability scoring system) count of 6.5(+)|(-)6.6. The security risk of the command/path inject vulnerabilities are estimated as high(-) with a cvss (common vulnerability scoring system) count of 6.6(+).", "qas": [{"answers": [], "question": "What is root cause?", "id": "30183-0", "is_impossible": true}, {"answers": [{"answer_start": 498, "text": "unauthorized execute of system specific commands or unauthorized path requests"}], "question": "What is impact?", "id": "30183-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30183-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "These issues were previously covered in BID 38918 (Mozilla Firefox Thunderbird and Seamonkey MFSA 2010-09 through -15 Multiple Vulnerabilities) but have been assigned their own record to better document them.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33801-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "33801-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "33801-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Flock is prone to a denial-of-service vulnerability. Successful exploits will consume excessive resources and will eventually crash the application and possibly the underlying computer, effectively denying service to legitimate users. Flock 2.6.1 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "37036-0", "is_impossible": true}, {"answers": [{"answer_start": 20, "text": "denial-of-service"}], "question": "What is impact?", "id": "37036-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37036-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Remotely change the administrator password (or password hash) of  Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions  1. my $ua; return $ua;  Example of service string to be parsed:  Sends a request to obtain the password hash. Set the administrator password hash. Set the password hash instead of a parti\". Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer", "qas": [{"answers": [], "question": "What is root cause?", "id": "1703-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1703-1", "is_impossible": true}, {"answers": [{"answer_start": 274, "text": "a request"}], "question": "What is attack vector?", "id": "1703-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Cisco products contain multiple vulnerabilities in handling of SNMP requests and traps. It is reportedly possible for a remote attacker to create a denial of service condition by transmitting a malformed SNMP request to a vulnerable Cisco Operating System or Appliance. This program send a spoofed snmpv1 get request that cause system reboot on Cisco 2600 routers with IOS version 12.0(10) Our algorithm is simple, using a 32bit accumulator (sum),  we add sequential 16bit words to it, and at the end, fold back  all the carry bits from the top 16 bits into the lower 16 bits", "qas": [{"answers": [], "question": "What is root cause?", "id": "21296-0", "is_impossible": true}, {"answers": [{"answer_start": 139, "text": "create a denial of service condition"}], "question": "What is impact?", "id": "21296-1", "is_impossible": false}, {"answers": [{"answer_start": 63, "text": "SNMP requests and traps"}], "question": "What is attack vector?", "id": "21296-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Creating a device context with the flag (DCX_NORESETATTRS\u200b) and selecting a brush object into the device context will result in the brush being freed on process exit without the reference to the object being cleared. poc304 will execute prime304, which triggers the issue and allows poc304 to retrieve a handle to the device context with the pointer to the freed object. In some cases the issue leads to memory corruption when for example another object is allocated into the space of the free brush object (see attached crash logs for examples). We can confirm this by requesting the handle for the brush object from the device context, resulting in reading freed memory.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38272-0", "is_impossible": true}, {"answers": [{"answer_start": 128, "text": "the brush being freed on process exit without the reference to the object being cleared"}], "question": "What is impact?", "id": "38272-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "Creating a device context with the flag (DCX_NORESETATTRS\u200b) and selecting a brush object into the device context"}], "question": "What is attack vector?", "id": "38272-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Publisher 2013 memory corruption Version : Microsoft Office Publisher professional Plus 2013 tested : Windows 7 Bug : memory corruption during the handling of the pub files a context-dependent attacker can execute arbitrary code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22655-0", "is_impossible": true}, {"answers": [{"answer_start": 25, "text": "memory corruption"}], "question": "What is impact?", "id": "22655-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22655-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A heap overflow vulnerability has been reported for the pr-edit utility of GNATS. The vulnerability occurs due to insufficient checks performed on the arguments to the '-d' commandline option. Successful exploitation may result in the execution of attacker-supplied code with potentially elevated privileges.", "qas": [{"answers": [{"answer_start": 114, "text": "insufficient checks performed on the arguments to the '-d' commandline option"}], "question": "What is root cause?", "id": "22814-0", "is_impossible": false}, {"answers": [{"answer_start": 231, "text": "the execution of attacker-supplied code with potentially elevated privileges"}], "question": "What is impact?", "id": "22814-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22814-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Battlefield 2 and 2142 are prone to a remote denial-of-service vulnerability due to a NULL-pointer dereference condition. An attacker may exploit this issue to crash the application, resulting in a denial-of-service condition.", "qas": [{"answers": [{"answer_start": 84, "text": "a NULL-pointer dereference condition"}], "question": "What is root cause?", "id": "35369-0", "is_impossible": false}, {"answers": [{"answer_start": 45, "text": "denial-of-service"}], "question": "What is impact?", "id": "35369-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "35369-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "trigger.cpp should fire the issue, with caveats:  PoC MUST be compiled in release mode PoC may need to be run a few times to trigger the crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38273-0", "is_impossible": true}, {"answers": [{"answer_start": 133, "text": "the crash"}], "question": "What is impact?", "id": "38273-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38273-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "www.kali.org  Program description: NRSS is a console based RSS reader allowing  uses to read and manage RSS feeds  Program received signal SIGSEGV, Segmentation fault", "qas": [{"answers": [], "question": "What is root cause?", "id": "39810-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39810-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39810-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability was disclosed according to the terms of my public disclosure policy ( from sys import argv f.write(\"\\xEB\\x06\\x90\\x90\")", "qas": [{"answers": [], "question": "What is root cause?", "id": "34512-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "34512-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "34512-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This moves the directory containing the sub directory which creates the condition The issue is in the function that moves the files to the recycle bin  Replicate this using the following  5", "qas": [{"answers": [], "question": "What is root cause?", "id": "18272-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18272-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18272-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue is triggered when an attacker convinces a victim user to visit a malicious website.", "qas": [{"answers": [], "question": "What is root cause?", "id": "28197-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "28197-1", "is_impossible": true}, {"answers": [{"answer_start": 41, "text": "convinces a victim user to visit a malicious website"}], "question": "What is attack vector?", "id": "28197-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Desc: Massive suffers from a useafterfree error when parsing sound files (.KSD)  resulting in a crash. The user input is not properly sanitized which may give the  attackers the possibility for an arbitrary code execution on the affected system Failure of exploitation may result in a denial of service scenario", "qas": [{"answers": [{"answer_start": 103, "text": "The user input is not properly sanitized"}], "question": "What is root cause?", "id": "15583-0", "is_impossible": false}, {"answers": [{"answer_start": 96, "text": "crash"}], "question": "What is impact?", "id": "15583-1", "is_impossible": false}, {"answers": [{"answer_start": 61, "text": "sound files (.KSD)"}], "question": "What is attack vector?", "id": "15583-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability is found in playing avi file format.", "qas": [{"answers": [], "question": "What is root cause?", "id": "14713-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "14713-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "14713-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "when opened  In the main this vulnerability is very simple to exploit  although a little work is required to finally get to our  As per the original advisory, insufficient data  validation is not performed when msjet40.dll  parses a database file. The value goes through a signed expansion that is  used to access a 32bit pointer to the variable that  stores the address of a call table // Expanded ID Parameter (20 bytes) to accommodate this code \"\\x90\\x90\\x90\\x90\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "927-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "927-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "927-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Successful attacks may disclose sensitive information.", "qas": [{"answers": [], "question": "What is root cause?", "id": "34537-0", "is_impossible": true}, {"answers": [{"answer_start": 23, "text": "disclose sensitive information"}], "question": "What is impact?", "id": "34537-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "34537-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Meaning, Firefox appends 0 to approxLen and then appends the long string of dashes to the buffer instead. The following HTML code below will reproduce this issue:", "qas": [{"answers": [], "question": "What is root cause?", "id": "1204-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1204-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1204-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The next time that firefox is opened, it will instantly crash due to a buffer overflow -- this will happen everytime until you manually delete the history.dat file -- which most users won't figure out. however, code execution is possible with some modifcations.", "qas": [{"answers": [{"answer_start": 69, "text": "a buffer overflow"}], "question": "What is root cause?", "id": "1362-0", "is_impossible": false}, {"answers": [{"answer_start": 56, "text": "crash"}], "question": "What is impact?", "id": "1362-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1362-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Author will be not responsible for any damage.</font></b> Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7 Sub tryMe End Sub", "qas": [{"answers": [], "question": "What is root cause?", "id": "4801-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4801-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4801-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If a TextField variable is set to a value with toString defined, and the TextField is updated, a use-after-free can occur if the toString method frees the TextField's parent.", "qas": [{"answers": [{"answer_start": 125, "text": "the toString method frees the TextField's parent"}], "question": "What is root cause?", "id": "39049-0", "is_impossible": false}, {"answers": [{"answer_start": 97, "text": "use-after-free"}], "question": "What is impact?", "id": "39049-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "39049-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Additionally, because nautilus will automatically invoke evince-thumbnailer without any user-interaction, just browsing a website is enough to trigger the vulnerability. If you open the file manually, you're still in trouble though. One of the core access control features in postscript is the ability to mark procedures executeonly, this prevents users from peeking inside system routines and getting references to powerful operators they shouldn't have access to. Until recently you could install an error handler in errordict and if you cause an executeonly procedure to stop (\"stop\" is the postscript term for \"throw an exception\"), that would expose the faulting operator to the error handler. Unfortunately, the fix was incomplete, because you could still make the invocation of the errorhandler itself stop by filling up the stack with junk and making it /stackoverflow. Here is how to exploit it: % first, fill up the stack with junk so there is only a tiny bit of room for the errorhandler % We can make /switch_to_normal_marking_ops forceput is a very powerful operator that ignores all access controls, we can extract it from the stack, and then do whatever we like. Lets disable SAFER and give ourselves access to the whole filesystem (including .bashrc, ssh keys, chrome cookies, everything) Putting it all together, here is reading /etc/passwd just to demo: This software comes with NO WARRANTY: see the file PUBLIC for details.", "qas": [{"answers": [{"answer_start": 22, "text": "nautilus will automatically invoke evince-thumbnailer without any user-interaction"}], "question": "What is root cause?", "id": "45573-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "45573-1", "is_impossible": true}, {"answers": [{"answer_start": 540, "text": "cause an executeonly procedure to stop"}], "question": "What is attack vector?", "id": "45573-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Sending a large HTTP GETPOST request (10240) to the router results in DoS  After discovering this vulnerability I read about similar vulnerabilities  in different devices. It would seem this device is vulnerable to more  previously disclosed vulnerabilities also, just this device was not tested Apart from not being able to use the Web Administration Interface the device  seems to function fine.", "qas": [{"answers": [], "question": "What is root cause?", "id": "7535-0", "is_impossible": true}, {"answers": [{"answer_start": 70, "text": "DoS"}], "question": "What is impact?", "id": "7535-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "7535-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that the RuFSI Utility Class is vulnerable to a boundary condition error when invoked with long strings. This could potentially lead to the execution of code with the privileges of the user executing the web browser.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22816-0", "is_impossible": true}, {"answers": [{"answer_start": 157, "text": "the execution of code with the privileges of the user executing the web browser"}], "question": "What is impact?", "id": "22816-1", "is_impossible": false}, {"answers": [{"answer_start": 112, "text": "long strings"}], "question": "What is attack vector?", "id": "22816-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "When the Cisco about window appears then select the URL at the bottom. This will open Internet Explorer or you can select Chrome if installed. Once Internet Explorer is started press CTRL-O, then select browse.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41476-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "41476-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "41476-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "30/08/2011 - Sent Details of the vulnerability 31/08/2011 - Symantec Requested Affected Version Details", "qas": [{"answers": [], "question": "What is root cause?", "id": "18916-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18916-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18916-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Doing reverse engineering of the protocol was found several ways to cause a crash in the nvpmgr.exe process. 2015-01-09 Vendor notified via email 2015-05-26 Vendor notifies that the issue is fixed in version 10.0.5.x", "qas": [{"answers": [], "question": "What is root cause?", "id": "37739-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "crash in the nvpmgr.exe process"}], "question": "What is impact?", "id": "37739-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37739-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Desc: The vulnerability is caused due to a memset() boundary error in the  processing of incoming data thru raw socket connections on TCP port 1001,  which can be exploited to cause a stack based buffer overflow by sending a  long string of bytes on the second connection. Successful exploitation could  allow execution of arbitrary code on the affected node", "qas": [{"answers": [{"answer_start": 41, "text": "a memset() boundary error in the  processing of incoming data thru raw socket connections on TCP port 1001"}], "question": "What is root cause?", "id": "33804-0", "is_impossible": false}, {"answers": [{"answer_start": 184, "text": "stack based buffer overflow"}], "question": "What is impact?", "id": "33804-1", "is_impossible": false}, {"answers": [{"answer_start": 215, "text": "sending a  long string of bytes on the second connection"}], "question": "What is attack vector?", "id": "33804-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It comes with  a REST API to automate imaging flows and an SDK to integrate with native  Desc: The vulnerability is caused due to the usage of vulnerable collection  of libraries that are part of DCMTK Toolkit, specifically the parser for the  DICOM Upper Layer Protocol or DUL. StackHeap Buffer overflowunderflow can be  triggered when sending and processing wrong length of ACSE data structure received  over the network by the DICOM StoreSCP service. An attacker can overflow the stack  and the heap of the process when sending large array of bytes to the presentation  context item length segment of the DICOM standard, potentially resulting in remote  code execution andor denial of service scenario No limit on the number of stored patients  W1201 17:35:38.361704 ServerIndex.cpp:1409] No limit on the size of the storage area  W1201 17:35:38.715241", "qas": [{"answers": [{"answer_start": 130, "text": "the usage of vulnerable collection  of libraries that are part of DCMTK Toolkit,"}], "question": "What is root cause?", "id": "40925-0", "is_impossible": false}, {"answers": [{"answer_start": 279, "text": "StackHeap Buffer overflowunderflow"}], "question": "What is impact?", "id": "40925-1", "is_impossible": false}, {"answers": [{"answer_start": 337, "text": "sending and processing wrong length of ACSE data structure received  over the network by the DICOM StoreSCP service"}], "question": "What is attack vector?", "id": "40925-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "the SetSource() method is vulnerable to a buffer overflow 03238246 52 push edx 03238253", "qas": [{"answers": [], "question": "What is root cause?", "id": "18641-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18641-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18641-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The zygote applies a seccomp sandbox to system_server and all app processes; this seccomp sandbox permits the use of ptrace: The SELinux policy allows even isolated_app context, which is used for Chrome's renderer sandbox, to use ptrace:  Google Breakpad (crash reporter for Chrome) relies on ptrace  functionality. Without the ability to ptrace, the crash reporter  tool is broken. Chrome applies two extra layers of seccomp sandbox; but these also permit the use of clone and ptrace: return 0; If the attack works, you'll see \"-1", "qas": [{"answers": [], "question": "What is root cause?", "id": "46434-0", "is_impossible": true}, {"answers": [{"answer_start": 256, "text": "crash"}], "question": "What is impact?", "id": "46434-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46434-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "(Note that Page Heap might need to be enabled to observe the crash) The Filter() function takes an array of strings and a string as params and returns another array containing just those elements from the original array that contain the specified (sub)string. The issue is that the input array can be resized during the rtFilter call (by invoking a default getter on one of the input array members) and rtFilter fails to handle this case correctly. While rtFilter does implement some logic to determine if the input array has been resized, this logic fails to take into account elements of the input array that *do not match* the input string (Notice the \"b\" strings in the PoC and how the PoC would stop to work if those are all changed to \"a\").", "qas": [{"answers": [{"answer_start": 278, "text": "the input array can be resized during the rtFilter call"}], "question": "What is root cause?", "id": "45924-0", "is_impossible": false}, {"answers": [{"answer_start": 61, "text": "crash"}], "question": "What is impact?", "id": "45924-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "45924-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow has been reported in the sqlcpp program included with Progress, used as a SQL preprocessor. Execution of arbitrary code is possible. This issue has been reported to affect Unix systems. This vulnerability may also exist under Windows, this has not however been confirmed The vulnerability was found by KF  Snosoft (http:www.snosoft.com)  Exploit coded up by The Itch  Promisc (http:www.promisc.org)   This exploit was developed on the Snosoft vulnerability research machines  mail dotslash@snosoft.com if you are interested in contributing research time   The Itch   Technical details concerning the exploit   1). Buffer overflow occurs after writing more then 56 bytes into the buffer at the command line  (56 to overwrite ebp, 60 to overwrite eip) If you write more then 65 bytes, other frames will be overwritten afterwards and will mess up  your flow of arbitrary code execution.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21359-0", "is_impossible": true}, {"answers": [{"answer_start": 110, "text": "Execution of arbitrary code"}], "question": "What is impact?", "id": "21359-1", "is_impossible": false}, {"answers": [{"answer_start": 775, "text": "write more then 65 byte"}], "question": "What is attack vector?", "id": "21359-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "the Control Protocol suffers from a denial of service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "43454-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "denial of service"}], "question": "What is impact?", "id": "43454-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "43454-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Fixed The Python 2.7 strop.replace() method suffers from an integer overflow that can be exploited to write outside the bounds of the string buffer and potentially achieve code execution. The issue can be triggered by performing a large substitution that overflows the arithmetic used in mymemreplace() to calculate the size of the new string: static char * const char *pat, Py_ssize_t pat_len, /* pattern string to find */  Have to allocate something for the caller to free() The following script demonstrates the issue: import strop To fix the issue, mymemreplace should validate that the computed value new_len has not overflowed.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38617-0", "is_impossible": true}, {"answers": [{"answer_start": 102, "text": "write outside the bounds of the string buffer and potentially achieve code execution"}], "question": "What is impact?", "id": "38617-1", "is_impossible": false}, {"answers": [{"answer_start": 218, "text": "performing a large substitution that overflows the arithmetic used in mymemreplace() to calculate the size of the new string"}], "question": "What is attack vector?", "id": "38617-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "package Msf::Exploit::cacam_logsecurity_win32; use base \"Msf::Exploit\"; use strict; use Pex::Text; This module exploits a vulnerability in the CA CAM service by passing a long parameter to the log_security() function.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1262-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1262-1", "is_impossible": true}, {"answers": [{"answer_start": 161, "text": "passing a long parameter to the log_security() function"}], "question": "What is attack vector?", "id": "1262-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "However, in some cases, you will get This is because it depends on the state of the stack prior to the \"overflow\". You need a slash on the stack prior to the input buffer.", "qas": [{"answers": [], "question": "What is root cause?", "id": "6824-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "6824-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "6824-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A denial of service vulnerability has been reported for ProFTPD. This will result in a denial of service condition 1.2.7rc3 DoS  Requires anonymousftp login at least  might work against many other FTP daemons  consumes nearly all memory and alot of CPU  do this some more to make sure the system eventually dies o $1 quote user $2 quote pass $3 quit", "qas": [{"answers": [], "question": "What is root cause?", "id": "22079-0", "is_impossible": true}, {"answers": [{"answer_start": 2, "text": "denial of service"}], "question": "What is impact?", "id": "22079-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22079-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability exist due to the improper permissions, with the \"C\" flag (Change(write)) for \"Everyone\", for the installed files ServiceCenter.exe and Reloader.exe.", "qas": [{"answers": [{"answer_start": 31, "text": "the improper permissions"}], "question": "What is root cause?", "id": "15584-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "15584-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15584-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The vulnerability takes place in the SEAS module, which enables Kamailio to transfer the execution logic control of a SIP message to a given external entity, called the Application Server. msg->buf is a buffer which holds the packet's contents and msg->len Unsurprisingly, msg->len can take arbitrary values (bound by the packet size) while j takes the value of 180 in most cases. holds the value 34. If a user makes a request with a large enough packet then the buffer will overflow. A proof-of-concept packet is provided below that crashes the Kamailio process handling the request. From bash the packet can be sent using the following command: This bug may potentially provide attackers with remote code execution capabilities. The heap overflow is located in function encode_msg(), file encode_msg.c, line 269: now we copy the actual message after the headersmetasection msg is a pointer to a sip_msg structure and it is basically the current SIP packet being processed by Kamailio.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39638-0", "is_impossible": true}, {"answers": [{"answer_start": 459, "text": "the buffer will overflow"}], "question": "What is impact?", "id": "39638-1", "is_impossible": false}, {"answers": [{"answer_start": 417, "text": "a request with a large enough packet"}], "question": "What is attack vector?", "id": "39638-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "the heap is smashed, leading to DoS and to code   There are also two buffer overflow in the fields Address and Login", "qas": [{"answers": [], "question": "What is root cause?", "id": "3277-0", "is_impossible": true}, {"answers": [{"answer_start": 32, "text": "DoS"}], "question": "What is impact?", "id": "3277-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "3277-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported for eDonkey clients for Windows that will result in a denial of service condition. The vulnerability occurs when numerous chat dialog boxes are opened by the eDonkey or Overnet clients. An attacker can exploit this vulnerability by connecting to a vulnerable eDonkey user and issuing numerous chat requests.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22395-0", "is_impossible": true}, {"answers": [{"answer_start": 88, "text": "denial of service condition"}], "question": "What is impact?", "id": "22395-1", "is_impossible": false}, {"answers": [{"answer_start": 266, "text": "connecting to a vulnerable eDonkey user and issuing numerous chat requests"}], "question": "What is attack vector?", "id": "22395-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "ZDaemon is prone to a remote denial-of-service vulnerability because the application fails to handle NULL-pointer exceptions. An attacker could exploit this issue to crash the affected application, denying service to legitimate users. This issue affects ZDaemon 1.08.07 and earlier versions.", "qas": [{"answers": [{"answer_start": 69, "text": "the application fails to handle NULL-pointer exceptions"}], "question": "What is root cause?", "id": "32104-0", "is_impossible": false}, {"answers": [{"answer_start": 29, "text": "denial-of-service"}], "question": "What is impact?", "id": "32104-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32104-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "DNS4Me is reported to be susceptible to a denial of service vulnerability, and a cross-site scripting vulnerability. These vulnerabilities affect the built-in web server contained in the package. The first vulnerability reportedly allows attackers to cause the web server to consume all available CPU resources, and eventually crash the application. The second vulnerability is due to a failure of the application to properly sanitize user-supplied URI input. This issue could permit a remote attacker to create a malicious URI link that includes hostile HTML and script code. If this link were to be followed, the hostile code may be rendered in the web browser of the victim user. This would occur in the security context of the affected web site and may allow for theft of cookie-based authentication credentials or other attacks. Although these vulnerabilities are reported to exist in version 3.0.0.4 of DNS4Me, other versions may also be affected.", "qas": [{"answers": [{"answer_start": 385, "text": "a failure of the application to properly sanitize user-supplied URI input"}], "question": "What is root cause?", "id": "24610-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "denial of service"}], "question": "What is impact?", "id": "24610-1", "is_impossible": false}, {"answers": [{"answer_start": 505, "text": "create a malicious URI link that includes hostile HTML and script code"}], "question": "What is attack vector?", "id": "24610-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The files are compressed and deployed in a binary format with the extension .CHM, for Compiled HTML. However, I find a way to bypass using this program and create them easily by simply adding double .chm extension to the file \".chm.chm\". Compiled HTML Help is also vulnerable to XML External Entity attacks allowing remote attackers to steal and exfiltrate local system files. Whats interesting about this one is we can create the file without using the \"Microsoft HTML Help Workshop\" program. I thought this was an interesting way to create CHM files \"Uncompiled\" bypassing the default creation steps while stealing local files in the process. Note: User interaction is required to exploit this vulnerability.", "qas": [{"answers": [], "question": "What is root cause?", "id": "47127-0", "is_impossible": true}, {"answers": [{"answer_start": 336, "text": "steal and exfiltrate local system files"}], "question": "What is impact?", "id": "47127-1", "is_impossible": false}, {"answers": [{"answer_start": 185, "text": "adding double .chm extension to the file \".chm.chm\""}], "question": "What is attack vector?", "id": "47127-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "These vulnerabilities present themselves when the application handles excessive data supplied through command line arguments. Some reports indicate that this issue cannot be reproduced. It is also reported that this issue is only exploitable on the Solaris x86 platform.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25896-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "25896-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "25896-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "One of these tools, modprobe, loads a set of modules that correspond to a provided \"name\" (passed at the command line) automatically. Modprobe version 2.3.9 and possibly others around it contain a vulnerability (present since March 12, 1999) that can lead to a local root compromise Because popen() relies on binsh to parse the command string and execute \"echo\", unescaped shell metacharacters can be included in user input to execute other commands Though modprobe is not installed setuid root, this vulnerability can be exploited to gain root access provided When a device is specified at the commandline that doesnt exist, request_module is called with the usersupplied arguments passed to the kernel. Successful exploitation of this will yield root access for the attacker. This exploit is really hackish, because slashes are not allowed in\" echo \"modprobe parameters, thus we have to play in modprobe's cwd (/). The problem has to do with modprobe using popen() to execute the \"echo\" program argumented with user input.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20402-0", "is_impossible": true}, {"answers": [{"answer_start": 261, "text": "local root compromise"}], "question": "What is impact?", "id": "20402-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20402-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Symantec Client Firewall has been reported to be prone to a remote denial of service vulnerability. The issue is reported to present itself in the TCP packet processing routines of the affected software. It is reported that this vulnerability will have a system wide impact, causing Windows GUI and peripherals that are attached to the host to become unresponsive. A hard reset is reported to be required to restore normal functionality to the system.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23846-0", "is_impossible": true}, {"answers": [{"answer_start": 67, "text": "denial of service"}], "question": "What is impact?", "id": "23846-1", "is_impossible": false}, {"answers": [{"answer_start": 143, "text": "the TCP packet processing routines of the affected software"}], "question": "What is attack vector?", "id": "23846-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Remote attackers can DOS MXView server by sending large string of junk characters for the user ID and password field login credentials.", "qas": [{"answers": [], "question": "What is root cause?", "id": "41851-0", "is_impossible": true}, {"answers": [{"answer_start": 21, "text": "DOS MXView server"}], "question": "What is impact?", "id": "41851-1", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "sending large string of junk characters for the user ID and password field login credentials"}], "question": "What is attack vector?", "id": "41851-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A local attacker can exploit this issue to execute arbitrary code and elevate their privileges to the NetworkService account level. Failed exploit attempts may cause a denial-of-service condition. The issue affects Microsoft Windows XP SP3; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "34822-0", "is_impossible": true}, {"answers": [{"answer_start": 43, "text": "execute arbitrary code and elevate their privileges to the NetworkService account level"}], "question": "What is impact?", "id": "34822-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "34822-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "if you ctrl-c now the kernel will hang. There are offsets included for older kernels, but they're untested so be aware that this exploit will probably crash kernels older than 4.4. void pad_kmalloc(void) try to set the timeout to 10 seconds the default timeout might still be used though depending on when the race was won return 1; fprintf(stderr,\"removing barrier and spraying..\\n\"); fprintf(stderr,\"could not map pbd\\n\"); else { else { fprintf(stderr,\"please wait up to a few minutes for timer to be executed.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40871-0", "is_impossible": true}, {"answers": [{"answer_start": 151, "text": "crash kernels older than 4.4"}], "question": "What is impact?", "id": "40871-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40871-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " Tested on Windows Server 2003 with FeedMon 2.7.0.0.", "qas": [{"answers": [], "question": "What is root cause?", "id": "7995-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "7995-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "7995-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The \\\\.\\UVMLiteController device is created by the nvlddmkm.sys driver, and can be opened by any user. The driver handles various control codes for this device, but there is no validation for the input/output buffer and their sizes. In addition to potential overreads on the input, the driver writes output directly to Irp->UserBuffer, which is the output pointer passed to DeviceIoControl() by the user. The IO control codes handled specify METHOD_BUFFERED, but the kernel does no validation that the output pointer is accessible by the user process if the user passes an output buffer size of 0. This means that a user mode program can cause a write of (at least) the 32-bit values 0 or 31, or the 8-bit value 0 to any address given to the driver. A PoC is attached that causes a bsod when the kernel tries to write to 0x4141414141414141", "qas": [{"answers": [{"answer_start": 463, "text": "the kernel does no validation that the output pointer is accessible by the user process if the user passes an output buffer size of 0"}], "question": "What is root cause?", "id": "40655-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "40655-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "40655-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "RunningBon This is a DLL, which gets injected into the server exe. You will need Microsoft Detours library to compile this exploit ( The string is heavily filtered before the overflow occurs, so a lot of bytes get stripped.", "qas": [{"answers": [], "question": "What is root cause?", "id": "1976-0", "is_impossible": true}, {"answers": [{"answer_start": 171, "text": "the overflow"}], "question": "What is impact?", "id": "1976-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1976-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This exploit triggers a denial of service condition within the Openlitespeed web  server. By looping this request, a memmove call within the HttpReq  class is triggered with a freed pointer, resulting in a reference to an invalid  memory location and thus a segmentation fault", "qas": [{"answers": [], "question": "What is root cause?", "id": "37051-0", "is_impossible": true}, {"answers": [{"answer_start": 24, "text": "denial of service"}], "question": "What is impact?", "id": "37051-1", "is_impossible": false}, {"answers": [{"answer_start": 93, "text": "looping this request"}], "question": "What is attack vector?", "id": "37051-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "1)PHP pack() function bug has been there for about a long time, were if PHP try to allocate more memory more than generally allocated to PHP function then the the request is terminated and PHP exits/Crashes, this might even send a huge load to the server. 2)PHP memory allocation is done via the php.ini file of PHP installation, So if we could make PHP try to load with more memmory than it could handle then we cold possibly crash php or even the server causing a huge CPU usage. 3)A vulnerability exist in vBulletin add-on \"Cyb - Advanced Forum Statistics\" in the misc.php file show=latestposts&vsacb_resnr=, were application loads all latest 'n' no of post depending on (vsacb_resnr= n) value. Either You could Use the attached exploit code to DOS the server or you could Simply move to the vulnerable page and sent simultaneous request by refreshing the page. An attacker could exploit this issue to crash the php installed and the crash might DOS the entire server for hours or attacker will be able to download php files from the server.", "qas": [{"answers": [{"answer_start": 72, "text": "PHP try to allocate more memory more than generally allocated to PHP function"}], "question": "What is root cause?", "id": "12154-0", "is_impossible": false}, {"answers": [{"answer_start": 155, "text": "the the request is terminated and PHP exits/Crashes,"}], "question": "What is impact?", "id": "12154-1", "is_impossible": false}, {"answers": [{"answer_start": 224, "text": "send a huge load to the server"}], "question": "What is attack vector?", "id": "12154-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "When one is received, the stack will sometimes fail with unpredictable results ranging from a Blue Screen to instantaneous reboot. and this is the result :::", "qas": [{"answers": [], "question": "What is root cause?", "id": "19414-0", "is_impossible": true}, {"answers": [{"answer_start": 57, "text": "unpredictable results ranging from a Blue Screen to instantaneous reboot"}], "question": "What is impact?", "id": "19414-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "19414-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The issue presents itself, likely due to a lack of sufficient bounds checking, performed on arguments that are supplied via malicious HTTP GET requests. It has been reported that a remote attacker may invoke a malicious HTTP GET request containing excessive data, that will supposedly trigger a segmentation fault in the server executable and the software will fail.", "qas": [{"answers": [{"answer_start": 41, "text": "a lack of sufficient bounds checking, performed on arguments that are supplied via malicious HTTP GET requests"}], "question": "What is root cause?", "id": "22817-0", "is_impossible": false}, {"answers": [{"answer_start": 274, "text": "supposedly trigger a segmentation fault in the server executable and the software will fail"}], "question": "What is impact?", "id": "22817-1", "is_impossible": false}, {"answers": [{"answer_start": 124, "text": "malicious HTTP GET requests"}], "question": "What is attack vector?", "id": "22817-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The 'id3lib' library is prone to a buffer-overflow vulnerability. An attacker can exploit this issue to execute arbitrary code with the privileges of the user running the affected application or to crash the application, denying further service to legitimate users. This issue affects versions of id3lib committed to the CVS repository; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30903-0", "is_impossible": true}, {"answers": [{"answer_start": 104, "text": "execute arbitrary code with the privileges of the user running the affected application or to crash the application, denying further service to legitimate users"}], "question": "What is impact?", "id": "30903-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30903-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "If the variable name that is added is an object with toString defined, the toString function can free the field's parent object, which is then used.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39050-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39050-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39050-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Wireshark is prone to a remote denial-of-service vulnerability caused by a NULL-pointer-dereference error. An attacker can exploit this issue to crash the application, resulting in a denial-of-service condition.", "qas": [{"answers": [{"answer_start": 73, "text": "a NULL-pointer-dereference error"}], "question": "What is root cause?", "id": "35873-0", "is_impossible": false}, {"answers": [{"answer_start": 31, "text": "denial-of-service"}], "question": "What is impact?", "id": "35873-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "35873-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An issue was discovered in firefox 55.0.3 which an attacker can create a  webpage and put javascript payload to crash user's browser or put user in  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "45257-0", "is_impossible": true}, {"answers": [{"answer_start": 112, "text": "crash user's browser or put user in"}], "question": "What is impact?", "id": "45257-1", "is_impossible": false}, {"answers": [{"answer_start": 71, "text": "a  webpage and put javascript payload"}], "question": "What is attack vector?", "id": "45257-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "In no event shall the author be liable for any damages  whatsoever arising out of or in connection with the use  or spread of this information Any use of this information is at the user's own risk", "qas": [{"answers": [], "question": "What is root cause?", "id": "2013-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "2013-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "2013-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "MailEnable is prone to a remote denial of service vulnerability. The vulnerability presents itself when a user issues a malicious rename request following authentication. Remote attackers can exploit this issue to trigger a denial of service condition.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26575-0", "is_impossible": true}, {"answers": [{"answer_start": 32, "text": "denial of service"}], "question": "What is impact?", "id": "26575-1", "is_impossible": false}, {"answers": [{"answer_start": 118, "text": "a malicious rename request following authentication"}], "question": "What is attack vector?", "id": "26575-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "From here, another vulnerability in the crypto.generateCRMFRequest function is used to \"peek\" into the context's private scope.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30474-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "30474-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "30474-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "OpenBSD is prone to a remote denial-of-service vulnerability. Successful exploits may allow the attacker to cause the application to crash, resulting in denial-of-service conditions.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38059-0", "is_impossible": true}, {"answers": [{"answer_start": 29, "text": "denial-of-service"}], "question": "What is impact?", "id": "38059-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38059-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Attackers can exploit these issues to perform unauthorized actions or execute arbitrary programs. Successful exploits may result in compromise of affected computers. Easewe FTP OCX ActiveX control 4.5.0.9 is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "35876-0", "is_impossible": true}, {"answers": [{"answer_start": 38, "text": "perform unauthorized actions or execute arbitrary programs"}], "question": "What is impact?", "id": "35876-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "35876-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a flaw in the nicm.sys driver to execute arbitrary code in kernel space. The vulnerability occurs while handling ioctl requests with code 0x143B6B, where a user provided pointer is used as function pointer. end print_status(\"Triggering the vulnerability to execute the Kernel Handler\") = 0 print_error(\"Something wrong while triggering the vulnerability, anyway checking privileges...\") fail_with(Exploit::Failure::Unknown, \"Error while executing the payload\") else", "qas": [{"answers": [{"answer_start": 134, "text": "ioctl requests with code 0x143B6B,"}], "question": "What is root cause?", "id": "26452-0", "is_impossible": false}, {"answers": [{"answer_start": 54, "text": "execute arbitrary code in kernel space"}], "question": "What is impact?", "id": "26452-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26452-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Foxit Reader 2.0 for Windows Remote dos exploit created by n00b Foxit pdf viewer is prone to a dos exploit by opening a malformed pdf document it is possible to crash foxit reader which could cause the vic to lose any unsaved data.. Credits go to n00b for finding this vulnerability. File; printf(\"fuck We are Unable to build the file %s\", PDF); return 0;", "qas": [{"answers": [], "question": "What is root cause?", "id": "3770-0", "is_impossible": true}, {"answers": [{"answer_start": 36, "text": "dos"}], "question": "What is impact?", "id": "3770-1", "is_impossible": false}, {"answers": [{"answer_start": 118, "text": "a malformed pdf document"}], "question": "What is attack vector?", "id": "3770-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "[+] Apple Iphone/Ipod - Udisk FTP basic edition Remote DOS exploit\" import socket import sys print \"[+] Connecting to the target..\" print (\"[-] Connection error!\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "11117-0", "is_impossible": true}, {"answers": [{"answer_start": 55, "text": "DOS"}], "question": "What is impact?", "id": "11117-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "11117-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "HP OpenView Network Node Manager is prone to a buffer-overflow vulnerability. Successfully exploiting this issue allows remote attackers to execute arbitrary code in the context of the Network Node Manager process. Network Node Manager 7.53 running on Microsoft Windows is affected by this issue; other versions and platforms may also be vulnerable.", "qas": [{"answers": [], "question": "What is root cause?", "id": "31629-0", "is_impossible": true}, {"answers": [{"answer_start": 140, "text": "execute arbitrary code in the context of the Network Node Manager process"}], "question": "What is impact?", "id": "31629-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "31629-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "> 'Microsoft Plug and Play Service Overflow', This module exploits a stack buffer overflow in the Windows Plug and Play service. This vulnerability can be exploited on Windows 2000 without a valid user account. Since the PnP service runs inside the service.exe process, a failed exploit attempt will cause the system to automatically reboot to the Heap Base  Setup eax to load our saved stack pointer  Store a pointer to the stack to a known address (ebp0x18), flows to eax after  Call lstrcpyW to copy shellcode into executable heap  Skip the junk  Call the executable segment!   Allocate a buffer using this new heap Exploit::CheckCode::Safe end def exploit   then if target['RopStack']  Start with a randomized base buffer  Put the rest of the stack data at where esp ends up... the string up to reach our SEH frame  Jump over the address and our invalid pointer to the payload    'Microsoft Plug and Play Service Overflow', This module exploits a stack buffer overflow in the Windows Plug and Play service. # pointer to HeapAlloc import  Save the address of HeapAlloc in esi 0x00010001, Save the heap address into ebx  Put heap address in edi  Store the first byte", "qas": [{"answers": [{"answer_start": 217, "text": "the PnP service runs inside the service.exe process"}], "question": "What is root cause?", "id": "16365-0", "is_impossible": false}, {"answers": [{"answer_start": 300, "text": "cause the system to automatically reboot"}], "question": "What is impact?", "id": "16365-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "16365-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A problem in the handling of nicknames is reported in the Lords of the Realm III server. Because of this, an attacker may be able to deny service to users of the game server. It should be noted that this vulnerability only occurs when the server enters \"lobby mode,\" which is a brief window of time before the initiation of a new game.", "qas": [{"answers": [{"answer_start": 0, "text": "A problem in the handling of nicknames"}], "question": "What is root cause?", "id": "24618-0", "is_impossible": false}, {"answers": [{"answer_start": 133, "text": "deny service to users of the game server"}], "question": "What is impact?", "id": "24618-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24618-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Here's a snippet from its mach message handling loop listening on the service port:   dead name notification includes a dead name right  An attacker with a send-right to the service can spoof a MACH_NOTIFY_DEAD_NAME message and cause an arbitrary port name to be passed to mach_port_deallocate as deadname->not_port doesn't name a port right but is a mach_port_name_t which is just a controlled integer. An attacker could cause syslogd to free a privilged port name and get it reused to name a port for which the attacker holds a receive right.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40959-0", "is_impossible": true}, {"answers": [{"answer_start": 234, "text": "an arbitrary port name to be passed to mach_port_deallocate as deadname"}], "question": "What is impact?", "id": "40959-1", "is_impossible": false}, {"answers": [{"answer_start": 186, "text": "spoof a MACH_NOTIFY_DEAD_NAME message"}], "question": "What is attack vector?", "id": "40959-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "use strict; use warnings; print FILE $zip; print \"[+] ZIP File Created With Sucess:)\\n\"; First chance exceptions are reported before any exception handling.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17509-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17509-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17509-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " This vulnerability allows a remote unauthenticated user to overwrite big chunks  of the heap used by the inetinfo.exe process. Reliably exploiting this bug is  nontrivial; even though the entire buffer is binary safe (even nulls) and can be  just about any size, the actual code that crashes varies widely with each request [*] This server has been patched or is not vulnerable.\\n\"; print \"[*] Sending massive heap-smashing string...\\n\";  sometimes a second connection is required to trigger the crash sub usage sub SMTP return undef if !", "qas": [{"answers": [], "question": "What is root cause?", "id": "113-0", "is_impossible": true}, {"answers": [{"answer_start": 61, "text": "verwrite big chunks  of the heap used"}], "question": "What is impact?", "id": "113-1", "is_impossible": false}, {"answers": [{"answer_start": 102, "text": "the inetinfo.exe process"}], "question": "What is attack vector?", "id": "113-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "y Connection refused Invalid response received from host Program received signal SIGSEGV, Segmentation fault. next test Connection refused Invalid response received from host Segmentation fault", "qas": [{"answers": [], "question": "What is root cause?", "id": "18278-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18278-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18278-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Office Web Component is prone to a denial-of-service vulnerability because of a memory access violation. Attackers can exploit this issue to crash Internet Explorer and deny service to legitimate users. This issue affects OWC11 for Microsoft Office 2003.", "qas": [{"answers": [{"answer_start": 88, "text": "a memory access violation"}], "question": "What is root cause?", "id": "30749-0", "is_impossible": false}, {"answers": [{"answer_start": 45, "text": "denial-of-service"}], "question": "What is impact?", "id": "30749-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30749-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "require 'msf/core' include Msf::Exploit::FILEFORMAT include Msf::Exploit::Remote::Seh This module exploits a stack-based buffer overflow in Audiotran This alternate vector has not been tested and cannot be exercised directly with this module.", "qas": [{"answers": [], "question": "What is root cause?", "id": "31766-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "31766-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "31766-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a buffer overflow in Csound before 5.16.6. In order to achieve exploitation the user should import the malicious file through csound with a command like \"csound -U het_import msf.csd file.het\". This exploit doesn't work if the \"het_import\" command is used directly to convert the file", "qas": [{"answers": [], "question": "What is root cause?", "id": "18710-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18710-1", "is_impossible": true}, {"answers": [{"answer_start": 113, "text": "import the malicious file through csound with a command like \"csound -U het_import msf.csd file.het\""}], "question": "What is attack vector?", "id": "18710-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Click evil.zip go to Express Zip and click Extract Here  3 File will be extracted to the root of the partition in this case", "qas": [{"answers": [], "question": "What is root cause?", "id": "39674-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39674-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39674-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A remote denial-of-service vulnerability affects the DB Hub application because of a memory-corruption flaw when the application attempts to process specially crafted network traffic. An attacker may exploit this issue to crash affected applications, denying service to legitimate users. DB Hub version 0.3 is vulnerable to this issue; other versions may also be affected", "qas": [{"answers": [{"answer_start": 83, "text": "a memory-corruption flaw"}], "question": "What is root cause?", "id": "29362-0", "is_impossible": false}, {"answers": [{"answer_start": 9, "text": "denial-of-service"}], "question": "What is impact?", "id": "29362-1", "is_impossible": false}, {"answers": [{"answer_start": 149, "text": "specially crafted network traffic"}], "question": "What is attack vector?", "id": "29362-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "At this point the persona is actually in the global list and the reference has been transfered there; this code is mistakenly assuming that userspace can't still race a dealloc call because it doesn't know the i It's probably possible to make the failing copyout take a long time, allowing us to gc and zone-swap the page leading to the code attempting to drop a ref on a different type. I have taken a look at an iOS 12 beta and it looks like the vuln is still there, but I cannot test it.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45652-0", "is_impossible": true}, {"answers": [{"answer_start": 296, "text": "gc and zone-swap the page leading to the code attempting to drop a ref on a different type"}], "question": "What is impact?", "id": "45652-1", "is_impossible": false}, {"answers": [{"answer_start": 238, "text": "make the failing copyout take a long time"}], "question": "What is attack vector?", "id": "45652-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Successfully exploiting these issues may allow remote attackers to execute arbitrary code in the context of the application. Failed exploit attempts will cause denial-of-service conditions.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32105-0", "is_impossible": true}, {"answers": [{"answer_start": 67, "text": "execute arbitrary code in the context of the application"}], "question": "What is impact?", "id": "32105-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32105-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Compaq Web-Based Management Agent has been reported prone to a remote denial of service vulnerability. The problem occurs when making malformed requests to the service. The resulting error reports a stack overflow, however it has not been confirmed whether this issue is exploitable to corrupt memory. The problem may in fact be the result of a NULL pointer dereference.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22822-0", "is_impossible": true}, {"answers": [{"answer_start": 70, "text": "denial of service"}], "question": "What is impact?", "id": "22822-1", "is_impossible": false}, {"answers": [{"answer_start": 134, "text": "malformed requests to the service"}], "question": "What is attack vector?", "id": "22822-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Look for the filename by scanning for backslash. wcscpy_s is used incorrectly here, as the second argument is not the size of |Dst|, but rather the calculated size of the filename. The the maximum component paths of most filesystems on Windows have a limit that is <= 255 though, so this shouldn't be an issue on normal filesystems. However, one can pass UNC paths to CreateProcessW containing forward slashes as the path delimiter, which means that the extracted filename here can be \"a/b/c/...\", leading to a buffer overflow. Then, run setup to create the long path to the target executable (you'll need to change the base directories), and then run poc_part1, and then poc_part2", "qas": [{"answers": [], "question": "What is root cause?", "id": "40660-0", "is_impossible": true}, {"answers": [{"answer_start": 511, "text": "buffer overflow"}], "question": "What is impact?", "id": "40660-1", "is_impossible": false}, {"answers": [{"answer_start": 355, "text": "UNC paths to CreateProcessW containing forward slashes as the path delimite"}], "question": "What is attack vector?", "id": "40660-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "bored on a weeknight :(  nothing to write home to mother about due to the fact that  you need a local user account on a server and all you  get is to read other people's emails ", "qas": [{"answers": [], "question": "What is root cause?", "id": "1009-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1009-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1009-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "I observed this crash in Avast Antivirus, but the origin of the code appears to be the unrar source distribution.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38930-0", "is_impossible": true}, {"answers": [{"answer_start": 16, "text": "crash"}], "question": "What is impact?", "id": "38930-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38930-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The FireWall-1 rulebase cannot prevent this attack and it is not logged in the firewall logs This code causes cpu utilization  to go to 100% It's a trivial exploit, so I won't take credit  for anything except putting this file together.", "qas": [{"answers": [], "question": "What is root cause?", "id": "19994-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "19994-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "19994-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "AutoIndex PHP Script is prone to a remote denial-of-service vulnerability because the application fails to properly handle unexpected input. Successfully exploiting this issue allows remote attackers to consume excessive CPU resources, potentially denying service to legitimate users. AutoIndex PHP Script 2.2.2 and 2.2.3 are vulnerable to this issue; prior versions may also be affected.", "qas": [{"answers": [{"answer_start": 82, "text": "the application fails to properly handle unexpected input"}], "question": "What is root cause?", "id": "30753-0", "is_impossible": false}, {"answers": [{"answer_start": 42, "text": "denial-of-service"}], "question": "What is impact?", "id": "30753-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30753-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "No RUNPATH make Program received signal SIGSEGV, Segmentation fault. Overflow Code : Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [], "question": "What is root cause?", "id": "34164-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "34164-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "34164-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Compaq Web-Based Management Agent has been reported prone to a remote denial of service vulnerability when handling malformed GET requests. The resulting error reports an access violation, effectively causing the service to crash. A remote attacker could exploit this issue to deny agent services to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22823-0", "is_impossible": true}, {"answers": [{"answer_start": 70, "text": "denial of service"}], "question": "What is impact?", "id": "22823-1", "is_impossible": false}, {"answers": [{"answer_start": 116, "text": "malformed GET requests"}], "question": "What is attack vector?", "id": "22823-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Web service buffer overflow and leading to a stop web service, and the device rebooted.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40687-0", "is_impossible": true}, {"answers": [{"answer_start": 67, "text": "the device rebooted"}], "question": "What is impact?", "id": "40687-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "40687-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "trigger.cpp should fire the issue, with a caveat  PoC might NOT work if compiled as a debug build. Quick analysis: The trigger creates a new window station which is freed during the process clean up.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38274-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "38274-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "38274-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The file I have attached is a very basic two stage bug. stage 1 (the first mod) forces the code down a wrong path. I have made it crash the wordviewer again to make it more obvious are probably the most useful for trying to overwrite a pointer.", "qas": [{"answers": [], "question": "What is root cause?", "id": "2922-0", "is_impossible": true}, {"answers": [{"answer_start": 130, "text": "crash the wordviewer"}], "question": "What is impact?", "id": "2922-1", "is_impossible": false}, {"answers": [{"answer_start": 224, "text": "overwrite a pointer"}], "question": "What is attack vector?", "id": "2922-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The Google chrome browser is vulnerable to window object based denial of service attack. This inability of Google Chrome diversifies the attack pattern as number of events can execute this function without a security check,prompting a user to allow the event to trigger. This security issue is a result of design flaw in the browser as function show stringent behavior in many cases. SecNiche confirmed this vulnerability affects Google Chrome on Disclosed: 25 September 2008 Release Date. Google acknowledges this vulnerability as security bug and \"fix\" will be released soon. The information in the advisory is believed to be accurate at the time of publishing based on currently available information. Use of the information constitutes acceptance for use in an AS IS condition.", "qas": [{"answers": [{"answer_start": 306, "text": "design flaw in the browser as function show stringent behavior in many cases"}], "question": "What is root cause?", "id": "6609-0", "is_impossible": false}, {"answers": [{"answer_start": 63, "text": "denial of service"}], "question": "What is impact?", "id": "6609-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "6609-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "BMP Image Processing Integer Overflow Vulnerability Platforms: Windows Versions : The vulnerability is confirmed in version 4.6.2 Freeware Edition Browse and fine your media files, view Images and videos, transfer photos from digital camera, produce fun content out of your favorite images: Make Web albums, galleries, and slideshows. No response has been received 2013-02-05: Vulnerability reported again to vendor No response has been received 2013-02-26: No response has been received 2013-03-13: Public Disclosure 3) The vulnerability is caused due to an integer overflow error in the cam2pc.exe Successful exploitation may allow execution of arbitrary code, but requires tricking a user into opening a malicious file.", "qas": [{"answers": [{"answer_start": 556, "text": "an integer overflow error in the cam2pc.exe"}], "question": "What is root cause?", "id": "24743-0", "is_impossible": false}, {"answers": [{"answer_start": 634, "text": "execution of arbitrary code"}], "question": "What is impact?", "id": "24743-1", "is_impossible": false}, {"answers": [{"answer_start": 705, "text": "a malicious file"}], "question": "What is attack vector?", "id": "24743-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Exploitation of this vulnerability would result in the remote service crashing. Although unconfirmed, due to the nature of this vulnerability it may be possible to supply and execute arbitrary code", "qas": [{"answers": [], "question": "What is root cause?", "id": "22825-0", "is_impossible": true}, {"answers": [{"answer_start": 51, "text": "the remote service crashing"}], "question": "What is impact?", "id": "22825-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22825-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that RapidCache server may be prone to a denial of service vulnerability that may allow an attacker to cause the server to crash or hang. The issue presents itself when an attacker sends an excessively large string value to the server via the 'Host' argument through an HTTP GET request. RapidCache versions 2.2.6 and prior have been reported to be prone to this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23543-0", "is_impossible": true}, {"answers": [{"answer_start": 144, "text": "crash or hang"}], "question": "What is impact?", "id": "23543-1", "is_impossible": false}, {"answers": [{"answer_start": 208, "text": "an excessively large string value to the server via the 'Host' argument through an HTTP GET request"}], "question": "What is attack vector?", "id": "23543-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If successfully exploited this would yield local root access for the attacker Updated versions of this exploit and the corresponding advisory will  be made available at:   This program is free software; you can redistribute it andor modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. You should have received a copy of the GNU General Public License  along with this program; if not, write to the Free Software void usage( char * string )", "qas": [{"answers": [], "question": "What is root cause?", "id": "20252-0", "is_impossible": true}, {"answers": [{"answer_start": 37, "text": "yield local root access for the attacker"}], "question": "What is impact?", "id": "20252-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20252-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "We tested this code on:  Windows Vista Bussines SP1 The vulnerability was discovered Cisco PSIRT was notified about the issue The development team working the fix The BETA program should be finished by the end of Oct  and the client posted next month The vulnerability goes public and PSIRT is informed If an application read a malformed chars  file like this POC, the application will be crashed", "qas": [{"answers": [], "question": "What is root cause?", "id": "10190-0", "is_impossible": true}, {"answers": [{"answer_start": 365, "text": "the application will be crashed"}], "question": "What is impact?", "id": "10190-1", "is_impossible": false}, {"answers": [{"answer_start": 326, "text": "a malformed chars  file"}], "question": "What is attack vector?", "id": "10190-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The GetWare Web Server component has been reported prone to a remote denial of service vulnerability. It has been reported that the issue will present itself when the affected web server receives malicious HTTP requests that contain negative values for the Content-Length field in the HTTP header. A remote attacker may exploit this issue to deny service to the GetWare Web Server.", "qas": [{"answers": [], "question": "What is root cause?", "id": "23556-0", "is_impossible": true}, {"answers": [{"answer_start": 69, "text": "denial of service"}], "question": "What is impact?", "id": "23556-1", "is_impossible": false}, {"answers": [{"answer_start": 196, "text": "malicious HTTP requests that contain negative values for the Content-Length field in the HTTP header"}], "question": "What is attack vector?", "id": "23556-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "As a result, thousands of corporations, airports, ports, government agencies, hospitals, universities, and other organizations worldwide are using SiPass integrated access control systems. The vulnerability exists within AscoServer.exe during the handling of RPC messages over the Ethernet Bus. This flaw allows remote attackers to execute arbitrary code on the target system, under the context of the SYSTEM account, where the vulnerable versions of SIEMENS SiPass Integrated are installed. Each controller sends and receives messages to and from the Server and the hardware devices that monitor the system. Various networking options (LAN/WAN/PSTN) can expand the system to include buildings and locations all over the world. After creating an I/O completion port with an existing file descriptor, the server begins listening for IOCP messages on that port. When the server receives an IOCP message, it creates substructure elements that are copied into shared memory between threads. Due to insufficient sanity checking when manipulating an IOCP message, it is possible to alter the behavior of message parsing, allowing another IOCP message to subvert the listener of IOCP messages, leading to export of a write-n primitive. This allows an attacker to write arbitrary data within the application, leading to remote code execution. Since the application spawns multiple threads for handling Ethernet connections, one approach for exploiting the vulnerability would be to overwrite a pointer to the first exception handler in any of the Thread Environment Block (TEB) structures and seize control of the exception-handling thread after an access violation. Remediation For customers of SiPass integrated MP2.4, MP2.5 and MP2.6, Siemens provides a software hotfix that fixes the vulnerability. More advanced payloads could modify the behavior of the application\u2019s internal controllers to unlock doors, control specific hardware, or expose businesses to other security risks.", "qas": [{"answers": [{"answer_start": 994, "text": "insufficient sanity checking when manipulating an IOCP message,"}], "question": "What is root cause?", "id": "22397-0", "is_impossible": false}, {"answers": [{"answer_start": 332, "text": "execute arbitrary code on the target system, under the context of the SYSTEM account, where the vulnerable versions of SIEMENS SiPass Integrated are installed"}], "question": "What is impact?", "id": "22397-1", "is_impossible": false}, {"answers": [{"answer_start": 1474, "text": "overwrite a pointer"}], "question": "What is attack vector?", "id": "22397-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Go to \"NTUtilities\"  \"Form Send Message\"  Tab \"Message\"  \"Add\"  \"Add target\" and paste the result from this python script  4. Paste the result from this python script in \"Message text:\", same form Click in Send button and you will see a crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "46295-0", "is_impossible": true}, {"answers": [{"answer_start": 237, "text": "crash"}], "question": "What is impact?", "id": "46295-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "46295-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "When used in conjunction with other problems found in the daemon, it may be possible for a local user to execute arbitrary commands as root and gain elevated privileges ** done, the shell wrapper should be suid root after the mailer is done\" echo exit 1", "qas": [{"answers": [], "question": "What is root cause?", "id": "20798-0", "is_impossible": true}, {"answers": [{"answer_start": 105, "text": "execute arbitrary commands as root and gain elevated privileges"}], "question": "What is impact?", "id": "20798-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "20798-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Forms 2.0 ActiveX Control is prone to multiple memory-access violation denial-of-service vulnerabilities. Attackers can exploit these issues to crash Internet Explorer and deny service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30756-0", "is_impossible": true}, {"answers": [{"answer_start": 81, "text": "denial-of-service"}], "question": "What is impact?", "id": "30756-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30756-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Windows XP SP3, Windows Vista SP2, Windows 7 SP1  Take a look at mona.py :) awesome tool developed by corelanc0d3r and his team:  ", "qas": [{"answers": [], "question": "What is root cause?", "id": "17939-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17939-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17939-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "GNU Info is reported prone to a buffer overrun vulnerability. The vulnerability is reported to present itself due to a lack of boundary checks performed on argument data for the (f) follow xref Info command. An attacker may exploit this vulnerability by crafting a malicious Info script that is sufficient to trigger the issue. Although this vulnerability is reported to affect info version 4.7-2.1, other versions might also be affected. The following can be saved to a file and called as: info info --restore=info.bug to create a segmentation fault.", "qas": [{"answers": [{"answer_start": 117, "text": "a lack of boundary checks performed on argument data for the (f) follow xref Info command"}], "question": "What is root cause?", "id": "24355-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "24355-1", "is_impossible": true}, {"answers": [{"answer_start": 254, "text": "crafting a malicious Info script"}], "question": "What is attack vector?", "id": "24355-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Attacking port 1723(flood), it restarts the device almost instantly, here's the code in PHP.", "qas": [{"answers": [], "question": "What is root cause?", "id": "9646-0", "is_impossible": true}, {"answers": [{"answer_start": 31, "text": "restarts the device almost instantly"}], "question": "What is impact?", "id": "9646-1", "is_impossible": false}, {"answers": [{"answer_start": 0, "text": "Attacking port 1723(flood)"}], "question": "What is attack vector?", "id": "9646-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Reportedly EmuLive Server4 is affected by an authentication bypass vulnerability and a denial of service vulnerability. These issues are due to an access validation issue and a failure to handle exceptional conditions. An attacker may leverage the authentication bypass issue to gain unauthorized access to the administrator scripts of the affected application, facilitating manipulation of various server settings. The denial of service issue may be exploited to cause the affected computer to freeze, denying service to legitimate users. ID is used to authenticate the attacker.", "qas": [{"answers": [{"answer_start": 144, "text": "an access validation issue and a failure to handle exceptional conditions"}], "question": "What is root cause?", "id": "24619-0", "is_impossible": false}, {"answers": [{"answer_start": 87, "text": "denial of service"}], "question": "What is impact?", "id": "24619-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24619-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Run this script to setup the fake web server Scan the server with AppScan QA, either in Interactive or Manual mode $!\\n\"; print \"Waiting for connections...\\n\";  If Request is for \"admin\", launch the exploit else {  Else send a normal response", "qas": [{"answers": [], "question": "What is root cause?", "id": "1374-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1374-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1374-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Microsoft Windows Explorer for Windows XP has been reported to be prone to a remote denial of service vulnerability. This issue is due to a failure of the application to properly validate user-supplied input via the 'shell:' command. command is a parameter that a user can specify when including a URI in an HTML tag. Successful exploitation of this issue would cause the affected application to crash, denying service to legitimate users. The issue may be triggered when a user follows an HTML link formatted like so: This issue may be triggered when a user views an HTML document containing the following tag:", "qas": [{"answers": [{"answer_start": 138, "text": "a failure of the application to properly validate user-supplied input via the 'shell:' command"}], "question": "What is root cause?", "id": "23850-0", "is_impossible": false}, {"answers": [{"answer_start": 84, "text": "denial of service"}], "question": "What is impact?", "id": "23850-1", "is_impossible": false}, {"answers": [{"answer_start": 286, "text": "including a URI in an HTML tag"}], "question": "What is attack vector?", "id": "23850-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This exploit compiles to a service that uses the original service's id.", "qas": [{"answers": [], "question": "What is root cause?", "id": "16940-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "16940-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "16940-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "trigger.cpp should fire the issue, with two caveats:  PoC will NOT work if compiled as a debug build PoC will trigger the condition every time but the subsequent corruption might not cause a crash every time. We are not able to reuse this object through the original handle, however another free is triggered when quitting the trigger process, which will decrement the reference counter on the freed or replaced object, either modifying heap metadata or freeing the object which was allocated in the place of the original bitmap object.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38275-0", "is_impossible": true}, {"answers": [{"answer_start": 191, "text": "crash"}], "question": "What is impact?", "id": "38275-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38275-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Desc: The vulnerability is caused due to the Search box function  not checking the boundary of user input. Vendor has some knowledge about the issue", "qas": [{"answers": [{"answer_start": 41, "text": "the Search box function  not checking the boundary of user input"}], "question": "What is root cause?", "id": "18654-0", "is_impossible": false}, {"answers": [], "question": "What is impact?", "id": "18654-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "18654-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "I have tried to exploit this vulnerability and I am sure there is a way (or several) to elevate privileges", "qas": [{"answers": [], "question": "What is root cause?", "id": "36267-0", "is_impossible": true}, {"answers": [{"answer_start": 88, "text": "elevate privileges"}], "question": "What is impact?", "id": "36267-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "36267-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This can be exploited by a remote attacker to potentially execute arbitrary attacker supplied code. User would have to visit a malicious webpage using InternetExplorer where the exploit could be triggered.", "qas": [{"answers": [], "question": "What is root cause?", "id": "43456-0", "is_impossible": true}, {"answers": [{"answer_start": 58, "text": "execute arbitrary attacker supplied code"}], "question": "What is impact?", "id": "43456-1", "is_impossible": false}, {"answers": [{"answer_start": 125, "text": "a malicious webpage"}], "question": "What is attack vector?", "id": "43456-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported in the FTP server included with Worldgroup. If a LIST command is received by the server including a long string of '*/../' characters, the server may halt. Earlier versions of Worldgroup may share this vulnerability.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21305-0", "is_impossible": true}, {"answers": [{"answer_start": 169, "text": "the server may halt"}], "question": "What is impact?", "id": "21305-1", "is_impossible": false}, {"answers": [{"answer_start": 132, "text": "a long string of '*/../' characters"}], "question": "What is attack vector?", "id": "21305-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The crash represents a read from invalid memory; prior to being dereferenced as an address, the ESI register is loaded with a value from EAX+0x30 (on 32-bit Windows), which points into an \"Adbe\" pool allocation: Pool page 9d619018 region is Paged session pool 9d619000 is not a valid large pool allocation, checking large session pool... The surrounding code is a loop over a linked list of structures; the ESI register at the time of the crash holds a [F/B]link address which points to unmapped memory, potentially suggesting that the root cause of the crash is a use-after-free condition, or some kind of corruption of the linked list. Since the invalid address is later used to manipulate memory, we expect that this issue could be used to achieve remote code execution in the security context of the Windows kernel. Moreover, we have also encountered similar crashes one instruction further in the code - in these cases, ESI turned out to accidentally point to mapped memory, but its contents did not correspond to the ATMFD's expectations (reinforcing the use-after-free hypothesis), thus resulting in an attempt to dereference a completely wild memory address, e.g.: Invalid system memory was referenced. Arg3: 9205440e, If non-zero, the instruction address which referenced the bad memory The issue reproduces on Windows 7 and 8.1. Note that this crash is very similar in its nature to Issue 383 (invalid memory access while traversing a linked list of \"Adbe\" structures); however, due to uncertainty about the reason of the crash and the different stack traces, I am filing this as a separate report for now.", "qas": [{"answers": [{"answer_start": 21, "text": "a read from invalid memory"}], "question": "What is root cause?", "id": "37921-0", "is_impossible": false}, {"answers": [{"answer_start": 4, "text": "crash"}], "question": "What is impact?", "id": "37921-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "37921-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Minix is prone to a denial-of-service vulnerability. An attacker can exploit this issue to prevent users from opening new pseudo terminals, denying service to legitimate users. Minix 3.1.2a is vulnerable; other versions may also be affected.", "qas": [{"answers": [], "question": "What is root cause?", "id": "32112-0", "is_impossible": true}, {"answers": [{"answer_start": 20, "text": "denial-of-service"}], "question": "What is impact?", "id": "32112-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "32112-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The following proof of concept causes the chan_skippy to crash in different locations and due to  memory corruption as well as double free calls, this is based on the finding of  SecurityAssessment.com, and proves that the vulnerability is indeed exploitable and there.. use IO::Socket; use strict; unless ($remote) { die \"cannot connect to skinny daemon on $target\" } my $packet = \"\\xF0\\xFF\\xFF\\xFF\".(\"A\"x996); # Program received signal SIGSEGV, Segmentation fault.", "qas": [{"answers": [{"answer_start": 98, "text": "memory corruption as well as double free calls"}], "question": "What is root cause?", "id": "2597-0", "is_impossible": false}, {"answers": [{"answer_start": 57, "text": "crash"}], "question": "What is impact?", "id": "2597-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "2597-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "WinWebMail is prone to a denial-of-service vulnerability because it fails to perform adequate boundary checks on user-supplied input. Remote attackers can exploit this issue to crash the server and deny service to legitimate users. Given the nature of this issue, attackers may also be able to execute arbitrary code, but this has not been confirmed. WinWebMail 3.7.3.2 is vulnerable; other versions may also be affected [+] Connecting to 192.168.1.3 on port 143  [+] Let's wait 5 secs and see if the server crashed.. Let's wait 5 secs and see if the server crashed...\" except error,e: print \"[", "qas": [{"answers": [{"answer_start": 68, "text": "fails to perform adequate boundary checks on user-supplied input"}], "question": "What is root cause?", "id": "31635-0", "is_impossible": false}, {"answers": [{"answer_start": 25, "text": "denial-of-service"}], "question": "What is impact?", "id": "31635-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "31635-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Propably other devices are affected as well Type : Denial of Service Trying to fix it responsible and get in contact with the vendor: \" The problem is related to a propietary CGI binary and makes is impossible for users to patch the router. If you download the source code the affected binary can be found at: Steps to reproduce: You will see a login field and a password field. The URL will include a path like: If you modify the URL as below and resend your http request the device will crash and needs a hard reboot. StudiVZ Simple google dork: Preventing others to gain access to the webinterface of the router prevents the attack.", "qas": [{"answers": [], "question": "What is root cause?", "id": "8008-0", "is_impossible": true}, {"answers": [{"answer_start": 51, "text": "Denial of Service"}], "question": "What is impact?", "id": "8008-1", "is_impossible": false}, {"answers": [{"answer_start": 420, "text": "modify the URL as below and resend your http request"}], "question": "What is attack vector?", "id": "8008-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Desc: The vulnerability is caused due to a boundary error in WebServices.dll when handling the value assigned to the 'bstrFile' item in the DownloadURLToFile function and can be exploited to cause a stack-based buffer overflow via an overly long string which may lead to execution of arbitrary code on the affected machine. STATUS_STACK_BUFFER_OVERRUN encountered First chance exceptions are reported before any exception handling. [15.11.2012] Contact with the vendor. Vendor responds asking more details. Sent detailed information to the vendor. Vendor is investigating the issue. Vendor confirms the vulnerability. [30.11.2012] Working with the vendor. [19.12.2012] Notified the vendor that the advisory will be published on 20th of December. Summary: PC Companion is a computer application that acts as a portal to Sony Xperia and operator features and applications, such as phone software updates, management of contacts and calendar, media management with Media Go, and a backup and restore feature for your phone content.", "qas": [{"answers": [{"answer_start": 41, "text": "a boundary error in WebServices.dll when handling the value assigned to the 'bstrFile' item in the DownloadURLToFile function"}], "question": "What is root cause?", "id": "23565-0", "is_impossible": false}, {"answers": [{"answer_start": 271, "text": "execution of arbitrary code"}], "question": "What is impact?", "id": "23565-1", "is_impossible": false}, {"answers": [{"answer_start": 231, "text": "an overly long string"}], "question": "What is attack vector?", "id": "23565-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Note: if you receive a SIGPIPE then you crashed the server  but at too high a memory address..", "qas": [{"answers": [], "question": "What is root cause?", "id": "3289-0", "is_impossible": true}, {"answers": [{"answer_start": 40, "text": "crashed the server"}], "question": "What is impact?", "id": "3289-1", "is_impossible": false}, {"answers": [{"answer_start": 21, "text": "a SIGPIPE"}], "question": "What is attack vector?", "id": "3289-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "char cmd[80]; FILE *source; char loadwhat[16];\\n\\ return 1;\\n\\  manual union, since a real union won't do ptrs for 64bit\\n\\  beat memory into the stack...", "qas": [{"answers": [], "question": "What is root cause?", "id": "15344-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15344-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15344-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "its allow the server crashedclosed print \"\\n\"; use Socket; print \"\\n[+] Connect to host..\\n\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "1212-0", "is_impossible": true}, {"answers": [{"answer_start": 21, "text": "crashed"}], "question": "What is impact?", "id": "1212-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "1212-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported in Cobalt RaQ that may allow attackers to obtain elevated privileges. The vulnerability exists in the /usr/lib/authenticate utility which is used by Apache for authentication purposes. This vulnerability is further exacerbated by the fact that /usr/lib/authenticate is a setuid root binary", "qas": [{"answers": [], "question": "What is root cause?", "id": "21733-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "obtain elevated privileges"}], "question": "What is impact?", "id": "21733-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "21733-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This allows non-administrator users the ability to create files in the directory but not delete or modify existing files. By planting a malicious SHFOLDER.DLL in the C:\\ProgramData\\Comodo\\lps4\\temp\\ and triggering an update or client connection to secure servers (which occurs automatically at user login) a user can elevate their privileges to SYSTEM and compromise the system fully. Red Now manually update Comodo Anti-Virus using the GUI or Reboot the system to gain SYSTEM Level Privileges\"", "qas": [{"answers": [], "question": "What is root cause?", "id": "39508-0", "is_impossible": true}, {"answers": [{"answer_start": 51, "text": "create files in the directory but not delete or modify existing files"}], "question": "What is impact?", "id": "39508-1", "is_impossible": false}, {"answers": [{"answer_start": 125, "text": "planting a malicious SHFOLDER.DLL in the C:\\ProgramData\\Comodo\\lps4\\temp\\"}], "question": "What is attack vector?", "id": "39508-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Successfully exploiting these issues allows remote attackers to execute arbitrary code in the context of the application. These issues affect ProWizard 4 PC 1.62 and prior versions; other versions may also be vulnerable.", "qas": [{"answers": [], "question": "What is root cause?", "id": "30906-0", "is_impossible": true}, {"answers": [{"answer_start": 64, "text": "execute arbitrary code in the context of the application"}], "question": "What is impact?", "id": "30906-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30906-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The application does not check bounds when reading the file that will execute the script, resulting in a classic Buffer Overflow overwriting SEH To exploit the vulnerability only is needed create a local script to interact with the application. This vulnerability has been discovered and reported X : Vendor fix the vulnerability and release a new version January 12, 2018 4:", "qas": [{"answers": [], "question": "What is root cause?", "id": "43548-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "43548-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "43548-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "there's a stackbased buffer overflow in the ReadGIF and ReadGIF2 methods,  the funny thing is that after the first exception that will be handled by IE,  when the object is released we reach RtlpCoalesceFreeBlocks owning eax and ecx  with windogs xp sp1 or the second check of safeunlink with sp2 in a standard heap var buf;", "qas": [{"answers": [], "question": "What is root cause?", "id": "6216-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "6216-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "6216-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Windows 7, Gentoo  Invalid Unicode sequences, such as 0x2665 0xfe0e 0xfe0f, can trick the  Emoji iter code into returning an empty segment, which then triggers  an assertion in the itemizer This is a rudimentary example of how this attack can be used Save this script as irc_com_dump  run as follows on irc.laks.ml or a server of your choice  When the user receives the message it will trigger the assertion fail.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45263-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45263-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45263-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "LeadMind Pop Messenger is reported prone to a remote denial of service vulnerability. The issue exists because the messenger application fails to gracefully handle certain characters that are received. A remote attacker may exploit this vulnerability to crash the LeadMind Pop Messenger client. Additionally, it is reported that an attacker may broadcast a malicious message to all clients on the connected local network segment and deny service to all of the clients at once. by Luigi Auriemma define MAX 30  we need less then 20 packets void std_err(void); \"%\\1\"; // the crash happens when the program receives  multiple packets containing an incorrect base64  char in the message field Note: you can also launch this tool versus broadcast IP (like \"BCAST\")\\n\" printf(\"- send %d messages with an illegal base64 char to cause the crash\\n\", MAX); fputs(\"\\n- data sent, the application should be crashed\\n\\n\", stdout);", "qas": [{"answers": [{"answer_start": 111, "text": "the messenger application fails to gracefully handle certain characters that are received"}], "question": "What is root cause?", "id": "24620-0", "is_impossible": false}, {"answers": [{"answer_start": 53, "text": "denial of service"}], "question": "What is impact?", "id": "24620-1", "is_impossible": false}, {"answers": [{"answer_start": 345, "text": "broadcast a malicious message to all clients on the connected local network segment"}], "question": "What is attack vector?", "id": "24620-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Windows 7 32bit  Steps to Reproduce:  Run the python exploit script, it will create a new file with the name \"exploit.wma\" Find the file \"exploit.wma\" and click \"Open\"  You will see a calculator poped up.", "qas": [{"answers": [], "question": "What is root cause?", "id": "45412-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45412-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45412-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "KDE Konqueror is prone to a denial-of-service vulnerability. Remote attackers may exploit this issue to crash Konqueror, effectively denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "28220-0", "is_impossible": true}, {"answers": [{"answer_start": 28, "text": "denial-of-service"}], "question": "What is impact?", "id": "28220-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "28220-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Buffer Overflow Vulnerability DoS POC Description: If the client recieves a large banner when attempting to send a file the application will freeze, resulting in the user having to kill the application. Alternatively the application will immediately crash with an exception report.", "qas": [{"answers": [], "question": "What is root cause?", "id": "4126-0", "is_impossible": true}, {"answers": [{"answer_start": 120, "text": "the application will freeze"}], "question": "What is impact?", "id": "4126-1", "is_impossible": false}, {"answers": [{"answer_start": 74, "text": "a large banner"}], "question": "What is attack vector?", "id": "4126-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A remote attacker can cause a game server to stop responding by sending an empty UDP packet. Another vulnerability can allow a remote attacker to send a malformed join packet and crash the server. These issues can be exploited to cause a denial of service condition in the server.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25255-0", "is_impossible": true}, {"answers": [{"answer_start": 30, "text": "game server to stop responding"}], "question": "What is impact?", "id": "25255-1", "is_impossible": false}, {"answers": [{"answer_start": 72, "text": "an empty UDP packet"}], "question": "What is attack vector?", "id": "25255-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The same bug is present in all versions of TextureXX::copyImage, below is the simplest function: ERR(\"Failed to retrieve the render target.\"); return error(GL_OUT_OF_MEMORY); return error(GL_OUT_OF_MEMORY); egl::Image objects are manually reference counted with a 32-bit reference count (see OpenGL/common/Object{.hpp,.cpp}), using addRef/release, and there is an error path here (when egl::Image::create fails) where the reference taken on renderTarget by source->getRenderTarget - I'm looking at the code for the latest dev, and various changes have been made to the allocations of egl::Image in dev in the fixes to crbug.com/835299 - the attached PoC is tested against 68.0.3440.7, and for versions prior to the fixes I think a different strategy (or at least texture sizes) will be needed to cause the allocations to fail. (In 68.0.3440.7, it's possible to create allocations such that the initial texture allocation succeeds, but that the size of the equivalent cube map texture will fail, since cube maps get an additional border pixel - this is the strategy used in the PoC). Note also that the PoC is triggering the bug directly from javascript - this will take some time!", "qas": [{"answers": [], "question": "What is root cause?", "id": "45061-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45061-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45061-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is reported that Microsoft Windows XP Service Pack 1 is prone to a local denial of service vulnerability. The issue is reported to manifest when a raw IP over IP socket is created and data is transferred over the newly created socket. It is reported that this operation causes the kernel of the Windows computer to crash, resulting in the computer rebooting. If this issue can be triggered reliably, a local attacker may exploit the issue to deny service for legitimate users. Further investigation into this issue is ongoing; this BID will be updated as soon as more details are available.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25259-0", "is_impossible": true}, {"answers": [{"answer_start": 76, "text": "denial of service"}], "question": "What is impact?", "id": "25259-1", "is_impossible": false}, {"answers": [{"answer_start": 148, "text": "a raw IP over IP socket is created and data is transferred over the newly created socket"}], "question": "What is attack vector?", "id": "25259-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The channel must be EMPTY to let the exploit use", "qas": [{"answers": [], "question": "What is root cause?", "id": "789-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "789-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "789-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "NCH Office Intercom is prone to a remote denial of service attack when parsing a maliscous SIP invite request If the ContentLength field has a value of 1 (or a large integer such as 3645363) the server will crash due to a NULL pointer  reference, causing an access violation", "qas": [{"answers": [{"answer_start": 220, "text": "a NULL pointer  reference"}], "question": "What is root cause?", "id": "15613-0", "is_impossible": false}, {"answers": [{"answer_start": 41, "text": "denial of service"}], "question": "What is impact?", "id": "15613-1", "is_impossible": false}, {"answers": [{"answer_start": 79, "text": "a maliscous SIP invite request"}], "question": "What is attack vector?", "id": "15613-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "PHP is prone to multiple denial-of-service vulnerabilities because it fails to perform adequate boundary checks on user-supplied input. Attackers can exploit these issues to cause denial-of-service conditions. Given the nature of these issues, attackers may also be able to execute arbitrary code, but this has not been confirmed. PHP 5.2.5 is vulnerable; other versions may also be affected.", "qas": [{"answers": [{"answer_start": 70, "text": "fails to perform adequate boundary checks on user-supplied input"}], "question": "What is root cause?", "id": "30760-0", "is_impossible": false}, {"answers": [{"answer_start": 25, "text": "denial-of-service"}], "question": "What is impact?", "id": "30760-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "30760-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "By creating a specially crafted whatsnew.txt file, an an attacker may be able to execute arbitrary code. This exploit is triggered by accessing the help - winamp  version history option once the whatsnew.txt file has been placed in the Winamp directory.", "qas": [{"answers": [], "question": "What is root cause?", "id": "12255-0", "is_impossible": true}, {"answers": [{"answer_start": 81, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "12255-1", "is_impossible": false}, {"answers": [{"answer_start": 12, "text": "a specially crafted whatsnew.txt file"}], "question": "What is attack vector?", "id": "12255-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This provides several benefits to end users and organizations, including efficiency gains in the use of hardware resources, reduction of operational costs, dynamic re-allocation of computing resources and rapid deployment and configuration of software development and testing VirtualBox is an open source virtualization technology project originally developed by Innotek, a software company based in Germany. In May 2008, Sun Microsystems announced that the number of downloads of the open source VirtualBox software package passed the five million mark [2]. An input validation vulnerability was discovered within VirtualBox's 'VBoxDrv.sys' driver that could allow an attacker, with local but un-privileged access to a host where VirtualBox is installed, to execute arbitrary code within the kernel of the Windows host operating system and to gain complete control of a vulnerable computer system This issue only occurs in the Microsoft Windows versions of xVM No workarounds exist for this issue. A security bulletin from the vendor that describes this issue is available here: This vulnerability was discovered and researched by Anibal Sacco from the CORE IMPACT Exploit Writing Team (EWT) at Core Security Technologies. With specially constructed input, a malicious user can use functionality within the driver to patch kernel addresses and execute arbitrary code in kernel mode. The 'METHOD_NEITHER' is a very dangerous method because the pointer passed to 'DeviceIoControl' as input or output buffer will be sent directly to the driver, thus transferring it the responsibility of doing the proper checks to validate the addresses sent from user mode. The 'VBoxDrv.sys' driver uses the 'METHOD_NEITHER' communication method when handling IOCTLs request and does not validate properly the buffer sent in the Irp object allowing an attacker to write to any memory address in the kernel-mode. This is the function used to handle the IOCTL requests at 'SUPDrv-win.cpp' that takes it's arguments from  the session and iCmd, and only returns a VBox status code Then at (2) the value returned by 'supdrvIOCtlFast()' is saved in 'rc' and this is where the problem starts because at (3), the value in 'rc' is written directly to the buffer pointer sent from usermode without any check to validate that it is really pointing to an usermode address or even a valid one. In this scenario, it is possible to feed the IOCTL with kernel addresses to write the value returned by 'supdrvIOCtlFast()' ANY address in kernel space memory as many times as necessary to modify kernel code or kernel pointers to subsequently get code execution in ring 0 context (that means, with system privileges). This is the Proof of Concept I have made to trigger and show the vulnerability. 2008-07-16: Core Security Technologies notifies the VirtualBox team of the vulnerability : Core asks the vendor for a status update in the fixing . : Core asks the vendor to provide URL to their alert and to confirm which versions are vulnerable and which version will include the  Core provides its URL to the vendor and indicates that the vendor cataloged the issue as a Denial of Service bug : Vendor confirms that this issue can lead to arbitrary code execution by an unprivileged user. Core Security Technologies Core Security Technologies develops strategic solutions that help security-conscious organizations worldwide develop and maintain a proactive process for securing their networks. Based in Boston, MA and Buenos Aires, Argentina, Core Security Technologies can be reached at 617-399-6980 or on the Web at The contents of this advisory Let's see the bug on the source.", "qas": [{"answers": [{"answer_start": 2185, "text": "he value in 'rc' is written directly to the buffer pointer sent from usermode without any check to validate that it is really pointing to an usermode address or even a valid one"}], "question": "What is root cause?", "id": "6218-0", "is_impossible": false}, {"answers": [{"answer_start": 759, "text": "execute arbitrary code within the kernel of the Windows host operating system and to gain complete control of a vulnerable computer system"}], "question": "What is impact?", "id": "6218-1", "is_impossible": false}, {"answers": [{"answer_start": 1283, "text": "functionality within the driver"}], "question": "What is attack vector?", "id": "6218-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A vulnerability has been reported in the web server included with Worldgroup. If a HTTP GET request is received by the server consisting of a long string of arbitrary characters, the server will crash.", "qas": [{"answers": [], "question": "What is root cause?", "id": "21306-0", "is_impossible": true}, {"answers": [{"answer_start": 195, "text": "crash"}], "question": "What is impact?", "id": "21306-1", "is_impossible": false}, {"answers": [{"answer_start": 81, "text": "a HTTP GET request is received by the server consisting of a long string of arbitrary characters"}], "question": "What is attack vector?", "id": "21306-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Wireshark is prone to a denial-of-service vulnerability because it fails to properly allocate memory. Successful exploits may allow attacker to crash the affected application, denying service to legitimate users.", "qas": [{"answers": [{"answer_start": 67, "text": "fails to properly allocate memory"}], "question": "What is root cause?", "id": "18918-0", "is_impossible": false}, {"answers": [{"answer_start": 24, "text": "denial-of-service"}], "question": "What is impact?", "id": "18918-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "18918-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The issue is with the cairo_image_surface_get_data() function in Cairo.", "qas": [{"answers": [], "question": "What is root cause?", "id": "33384-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "33384-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "33384-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Because of this, a remote attacker may be able to submit a string that causes a denial of service to legitmate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22660-0", "is_impossible": true}, {"answers": [{"answer_start": 80, "text": "denial of service to legitmate users"}], "question": "What is impact?", "id": "22660-1", "is_impossible": false}, {"answers": [{"answer_start": 50, "text": "submit a string"}], "question": "What is attack vector?", "id": "22660-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "If the htmlText the field is set to is an object with toString defined, the toString function can free the field's parent object, which is then used.", "qas": [{"answers": [], "question": "What is root cause?", "id": "39051-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "39051-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "39051-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This module exploits a stack buffer overflow in Wireshark <= This exploit bypasses DEP & ASLR and works on XP, Vista & Windows 7. dadr00p (https:twitter.comdietersar) for testing the offsets below 0x618d7d0e, # RET <- don't count on this one ! 0x00000800, 1.4.4 When opening a malicious .pcap file in Wireshark, a stack buffer occurs, resulting in arbitrary code execution.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17186-0", "is_impossible": true}, {"answers": [{"answer_start": 348, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "17186-1", "is_impossible": false}, {"answers": [{"answer_start": 275, "text": "a malicious .pcap file in Wireshark"}], "question": "What is attack vector?", "id": "17186-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A buffer overflow vulnerability has been reported for Tornado www-Server. The vulnerability exists when Tornado processes overly long HTTP requests. Although unconfirmed, it may be possible to exploit this vulnerability to execute malicious attacker-supplied code.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22666-0", "is_impossible": true}, {"answers": [{"answer_start": 223, "text": "execute malicious attacker-supplied code"}], "question": "What is impact?", "id": "22666-1", "is_impossible": false}, {"answers": [{"answer_start": 122, "text": "overly long HTTP requests"}], "question": "What is attack vector?", "id": "22666-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": ", This module exploits a vulnerability in Linux kernels 4.15.0 to 4.18.18, and 4.19.0 to 4.19.1, where broken uid/gid mappings between nested user namespaces and kernel uid Failure::BadConfig, 'Session already has root privileges. /gid mappings allow elevation to root The target system must have unprivileged user namespaces enabled and This module has been tested successfully on: Fedora Workstation 28 kernel 4.16.3-301.fc28.x86_64; Linux Mint 19 kernel 4.15.0-20-generic (x86_64); 'Jann Horn', # Discovery and exploit OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])", "qas": [{"answers": [], "question": "What is root cause?", "id": "45915-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "45915-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "45915-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "It is reported that the xine media library is affected by a remote buffer overflow vulnerability. This issue can allow a remote attacker to gain unauthorized access to a vulnerable computer. xine-lib rc-5 and prior versions are reportedly affected by this issue.", "qas": [{"answers": [], "question": "What is root cause?", "id": "24358-0", "is_impossible": true}, {"answers": [{"answer_start": 140, "text": "gain unauthorized access to a vulnerable computer"}], "question": "What is impact?", "id": "24358-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "24358-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "PALLOCMEM() will always zero the buffer returned However, the PATHALLOC allocator includes it's own freelist implementation, and  if that codepath can satisfy a request the memory isn't zeroed and returned  directly to the caller. The code to do this is something along the lines of:  We can verify this is working by putting a breakpoint after newpathrec, and  verifying the buffer is filled with recognisable values when it returns:   First, we create a watchdog thread that will patch the list atomically  when we're ready. So we create a list node like this:   Then EPATHOBJ::bFlatten() spins forever doing nothing:  While it's spinning, we clean up in another thread, then patch the thread (we  can do this, because it's now in userspace) to trigger the exploit. It looks like the main thread is stuck in a call to FlattenPath(),   because the kernel is spinning in EPATHOBJ::bFlatten(). We can clean   up, and then patch the list to trigger our exploit Thanks to progmboy for coming up with the solution: you reach back up the  stack and pull a SystemCall parameter out of the stack. Record that the exploit completed the corrupted HalDispatchTable,  Find the EPROCESS structure for the process I want to escalate  Find the Token object for my target process, and the SYSTEM process Find the token in the target process, and replace with the system token. It looks like we've taken control of the list, and the main thread  is spinning in EPATHOBJ::bFlatten. The  0x40 offset is the location of the PULONG parameter to  nt!NtQueryIntervalProfile. Now we need to create a PATHRECORD at an address that is also a valid  x86 instruction, because the pointer will be interpreted as a function I've created a list of candidates in DispatchRedirect. This PATHRECORD must terminate the list and recover The question is how to turn that into code execution? the address of system modules The question is how to get PATHALLOC() to succeed under memory pressure so we  can make this exploitable? We're somewhat limited with what we can do, as we don't control what's  written, it's always a pointer to a PATHRECORD object.", "qas": [{"answers": [], "question": "What is root cause?", "id": "25912-0", "is_impossible": true}, {"answers": [{"answer_start": 1840, "text": "code execution"}], "question": "What is impact?", "id": "25912-1", "is_impossible": false}, {"answers": [{"answer_start": 645, "text": "clean up in another thread, then patch the thread"}], "question": "What is attack vector?", "id": "25912-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Windows 7 IObit Advanced SystemCare installs a service with an unquoted service path To properly exploit this vulnerability, the local attacker must insert an executable file in the path of the service.", "qas": [{"answers": [], "question": "What is root cause?", "id": "40577-0", "is_impossible": true}, {"answers": [{"answer_start": 149, "text": "insert an executable file in the path of the service"}], "question": "What is impact?", "id": "40577-1", "is_impossible": false}, {"answers": [{"answer_start": 149, "text": "insert an executable file in the path of the service"}], "question": "What is attack vector?", "id": "40577-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " ========The vulnerable section of code is:========  The vulnerability can be triggered by using one computer to create a filesystem on a USB key  (or other removable media), then editing it's filesystem label to include a bunch of %n's, removing and  inserting the media into another computer running udisks2 <= This will cause a denial of service,  crashing udisks2 and not letting it restart (or until varlibudisks2mountedfs is  removed and the system is restarted). This keeps the system from automounting things like USB drives and CDs The vulnerability may be exploitable beyond a DoS by crafting a format string exploit and putting it  in the label of the drive. I tried to exploit it for a couple days, but cannot find a filesystem with a  lengthy enough label to be able to fit the exploit and spawn a root shell, as the smallest shellcode I  could make was around 50 characters, and the longest filesystem labels I could find are limited to 32 characters This code will destroy any information on devsdb1!!!!", "qas": [{"answers": [], "question": "What is root cause?", "id": "45450-0", "is_impossible": true}, {"answers": [{"answer_start": 331, "text": "denial of service,  crashing udisks2 and not letting it restart (or until varlibudisks2mountedfs is  removed and the system is restarted)"}], "question": "What is impact?", "id": "45450-1", "is_impossible": false}, {"answers": [{"answer_start": 97, "text": "one computer to create a filesystem on a USB key  (or other removable media), then editing it's filesystem label to include a bunch of %n's, removing and  inserting the media into another computer running udisks2 <="}], "question": "What is attack vector?", "id": "45450-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "{ check if it's the one we are searching for if (!strncmp(sObjName,\"DfSharedHeap\",12)) { if (bFound) else { printf(\"Shared Section Not Found\"); strcat(sTmp,sObjName); //append global prefix to support Terminal Services the shared section name couldn't be the one we are searching for", "qas": [{"answers": [], "question": "What is root cause?", "id": "1019-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1019-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1019-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Called From Returns To The example code below triggers the vulnerability", "qas": [{"answers": [], "question": "What is root cause?", "id": "27317-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "27317-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "27317-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker (unprivileged user) renames one of the Protector program files (below, the FILE). An attacker copies his malicious executable file (with same name as the old filename of the FILE - PPAVMON.exe) to Protector folder. Restart the system. An attacker must have valid logon credentials to a system where vulnerable software is No workarounds Protector Plus 2009 for Windows Server (8.0.E03)", "qas": [{"answers": [], "question": "What is root cause?", "id": "9680-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "9680-1", "is_impossible": true}, {"answers": [{"answer_start": 117, "text": "malicious executable file (with same name as the old filename of the FILE - PPAVMON.exe) to Protector folder"}], "question": "What is attack vector?", "id": "9680-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " tcpdump(v3.9.1 and earlier versions) contains a remote denial   of service vulnerability in the form of a single (RSVP) packet   causing an infinite loop this bug also effects ethereal[v0.10.10] in a similar way, i   did not check ethereals source code to find out why, tcpdump   was the focus. (the packet usually must be clicked on, the   ICMP replies given back will cause it too)   as this bug doesn't appear to be fixed in the new(3.9.xCVS)    \",1);  allow (on some systems) for the usersupplied ip header (correct)   put the packet together", "qas": [{"answers": [], "question": "What is root cause?", "id": "956-0", "is_impossible": true}, {"answers": [{"answer_start": 56, "text": "denial   of service"}], "question": "What is impact?", "id": "956-1", "is_impossible": false}, {"answers": [{"answer_start": 105, "text": "a single (RSVP) packet"}], "question": "What is attack vector?", "id": "956-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "This seems to be the issue described in bid 22323.", "qas": [{"answers": [], "question": "What is root cause?", "id": "4881-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "4881-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "4881-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "GKrellMd has been reported prone to a remote buffer overflow vulnerability, arbitrary code execution is possible. The issue presents itself due to a lack of sufficient bounds checking performed on network-based data. A remote attacker may ultimately exploit this issue remotely to seize control of the affected daemon and execute arbitrary code. This vulnerability has been reported to affect Gkrellm 2.1.13.", "qas": [{"answers": [{"answer_start": 147, "text": "a lack of sufficient bounds checking performed on network-based data"}], "question": "What is root cause?", "id": "22831-0", "is_impossible": false}, {"answers": [{"answer_start": 76, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "22831-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "22831-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Slimpdf Reader from investintech, http://www.investintech.com/resources/freetools/slimpdfreader/ is prone to several overflows that can lead to code execution.", "qas": [{"answers": [], "question": "What is root cause?", "id": "17274-0", "is_impossible": true}, {"answers": [{"answer_start": 144, "text": "code execution"}], "question": "What is impact?", "id": "17274-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "17274-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": " httpdx Web Server 1.4 'Host Header' Remote Format String Denial of Service PoC  httpdx web server 1.4 is vulnerable to a remote format string vulnerability through the Host header The vulnerability lies in httpd_srchttp.cpp in h_readrequest() : snprintf(temp[1],MAX,clienthost); use LWP; print \"Connecting to $target on port $port\\n\"; print \"Sending evil header \\n\";", "qas": [{"answers": [], "question": "What is root cause?", "id": "9657-0", "is_impossible": true}, {"answers": [{"answer_start": 58, "text": "Denial of Service"}], "question": "What is impact?", "id": "9657-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "9657-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Apache Web Server and MessageMedia UnityMail are susceptible to a denial of service attack if a significant amount of 8000 byte MIME headers are sent. Other web servers may be also be vulnerable to this attack Both will crash and restart of the application is required in order to regain normal functionality. i didnt installed 1.3.1 but looking at the source code,  i think the problem is there too.", "qas": [{"answers": [], "question": "What is root cause?", "id": "20272-0", "is_impossible": true}, {"answers": [{"answer_start": 66, "text": "denial of service"}], "question": "What is impact?", "id": "20272-1", "is_impossible": false}, {"answers": [{"answer_start": 94, "text": "a significant amount of 8000 byte MIME headers are sent"}], "question": "What is attack vector?", "id": "20272-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "It has been reported that Picophone is prone to a remote buffer overflow vulnerability. This issue is due to the application failing to verify the size of user input before storing it in a finite buffer. Successful exploitation of this issue will cause a denial of service condition to be triggered. The attacker may also leverage this issue to execute arbitrary code; this code would be executed in the security context of the user running the affected process.", "qas": [{"answers": [{"answer_start": 109, "text": "the application failing to verify the size of user input before storing it in a finite buffer"}], "question": "What is root cause?", "id": "23876-0", "is_impossible": false}, {"answers": [{"answer_start": 255, "text": "denial of service condition"}], "question": "What is impact?", "id": "23876-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "23876-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This issue is due to the application's failure to properly sanitize user-supplied input before using it in the format-specifier argument to a formatted printing function. This vulnerability may be leveraged to consume excessive CPU resources or to crash the service. Due to the nature of this issue, remote code execution is likely possible, although this has not been confirmed.", "qas": [{"answers": [{"answer_start": 39, "text": "failure to properly sanitize user-supplied input before using it in the format-specifier argument to a formatted printing function"}], "question": "What is root cause?", "id": "27329-0", "is_impossible": false}, {"answers": [{"answer_start": 210, "text": "consume excessive CPU resources or to crash the service"}], "question": "What is impact?", "id": "27329-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "27329-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Limit the amount of memory used by matches to This option should be set for programs that can be coerced to a denial of service attack via patterns that expand to a very large number of matches, such as a long string of */ This option should be set for programs that can be coerced to a denial of service attack via patterns that expand to a very large number of mat ches, such as a long string of */.. On the end of pattern, we need add some not existed filename (like /cxib*). good fix for this issue, should control, how many times glob(3) will call to readdirfunc(),stat(2) and reducing memory usage. Oracle 25.09.2010 CET: Being fixed in main codeline Very thanks for NetBSD project and help NetBSD project like they help you in fixing this issue Fix for openssh (sftp): If we don't have many files or directories in attacked direcotry, we need create some dir-structure. : dump succeeded  ls Segmentation fault (core dumped) or ftpd.core (no debugging symbols found)", "qas": [{"answers": [], "question": "What is root cause?", "id": "15215-0", "is_impossible": true}, {"answers": [{"answer_start": 110, "text": "denial of service"}], "question": "What is impact?", "id": "15215-1", "is_impossible": false}, {"answers": [{"answer_start": 139, "text": "patterns that expand to a very large number of matches"}], "question": "What is attack vector?", "id": "15215-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "Working out the details of the attack is left as an exercise for the reader. This restriction can be subverted by requesting the NTVDM subsystem, and then using CreateRemoteThread() to execute in the context of the subsystem process, which will already have this flag set Therefore, I must be permitted to set cs to any value, and checks for disallowed or privileged selectors can be bypassed (PsSetLdtEnties will reject any selector where any of the three lower bits are unset, as is the case with the required cs pair) Upon successful exploitation, the kernel stack is switched to an attacker specified address. An attacker would trigger the vulnerability by setting up a specially formed VDM_TIB in their TEB, using a code sequence like this:  Magic CS required for exploitation  Pointer to fake kernel stack  Magic IP required for exploitation Followed by Which will reach the following code sequence via the #GP trap handler, nt!KiTrap0D. Please note how the stack pointer is restored from the saved (untrusted) trap frame at 43C3E6, undoubtedly resulting in the condition described above add esp, 4 Possibly naive example code for triggering this condition is available from the link below. The code has been tested on Windows XP, Windows Server 2003/2008, Windows Vista and Windows 7. Temporarily disabling the MSDOS and WOWEXEC subsystems will prevent the attack from functioning, as without a process with VdmAllowed, it is not possible to The policy template Further information is available from the Windows Server Group Policy Home To watch a demonstration of this policy being applied to a Windows Server 2003 domain controller, see the link below. To watch a demonstration of this policy being applied to a Windows Server 2008 domain controller, see the link below. To watch a demonstration of this policy being applied to a shared but unjoined Windows XP Professional machine, see the link below. Solution Microsoft was informed about this vulnerability on 12-Jun-2009, and they confirmed receipt of my report on 22-Jun-2009. It should be noted that very few users rely on NT security, the primary audience of this advisory is expected to be domain administrators and security professionals. References Derek Soeder has previously reported some legendary NT bugs, including multiple vdm bugs that, while unrelated to this issue, make fascinating reading The final requirement involves predicting the address of the second-stage BIOS call handler. On Windows NT4, the following knowledgebase article explains how to disable the Applying these configuration changes will temporarily prevent users from accessing legacy 16-bit MS-DOS and Windows 3.1 applications, however, few users require this functionality.", "qas": [{"answers": [], "question": "What is root cause?", "id": "11199-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "11199-1", "is_impossible": true}, {"answers": [{"answer_start": 713, "text": "using a code sequence"}], "question": "What is attack vector?", "id": "11199-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": " Exploit Title: pkexec Race condition (CVE20111485) exploit", "qas": [{"answers": [], "question": "What is root cause?", "id": "17942-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "17942-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "17942-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Wireshark is prone to multiple denial-of-service vulnerabilities. An attacker can exploit these issues to crash the affected application, denying service to legitimate users.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18919-0", "is_impossible": true}, {"answers": [{"answer_start": 31, "text": "denial-of-service"}], "question": "What is impact?", "id": "18919-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "18919-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "This vulnerability is obviously exploitable for remote arbitrary code execution as NT AUTHORITY\\SYSTEM.", "qas": [{"answers": [], "question": "What is root cause?", "id": "38933-0", "is_impossible": true}, {"answers": [{"answer_start": 55, "text": "arbitrary code execution"}], "question": "What is impact?", "id": "38933-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "38933-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "Enceladus Server Suite is prone to a remotely exploitable buffer overflow vulnerability. It is possible to trigger this condition by supplying an overly long value for several FTP commands. To exploit this issue, the attacker must be able to authenticate to the FTP server included in Enceladus and issue a maliciously crafted command. Successful exploitation will enable a remote attacker to execute arbitrary code with the privileges of the Enceladus Server Suite software, which will most likely run with SYSTEM (or equivalent) privileges. This vulnerability may also be used to cause a denial of service. This issue has been reported for Enceladus Server Suite 3.9.", "qas": [{"answers": [], "question": "What is root cause?", "id": "22081-0", "is_impossible": true}, {"answers": [{"answer_start": 393, "text": "execute arbitrary code with the privileges of the Enceladus Server Suite software, which will most likely run with SYSTEM (or equivalent) privileges"}], "question": "What is impact?", "id": "22081-1", "is_impossible": false}, {"answers": [{"answer_start": 133, "text": "supplying an overly long value for several FTP commands"}], "question": "What is attack vector?", "id": "22081-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "GDB is free software, covered by the GNU General Public License, and you are welcome to change it and/or distribute copies of it under certain Type \"show copying\" to see the conditions.", "qas": [{"answers": [], "question": "What is root cause?", "id": "669-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "669-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "669-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "McAfee VirusScan is prone to a vulnerability that could allow an arbitrary file to be executed. Successful exploitation may allow local attackers to gain elevated privileges.", "qas": [{"answers": [], "question": "What is root cause?", "id": "26970-0", "is_impossible": true}, {"answers": [{"answer_start": 56, "text": "allow an arbitrary file to be executed"}], "question": "What is impact?", "id": "26970-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "26970-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "An attacker able to trigger this vulnerability can execute arbitrary code. In order to trigger the issue, the web-page needs to either programmatically copy /paste an image using Javascript or get the user to do this (for instance by tricking the user into typing keyboard shortcuts such as CTRL+C/CTRL+V) . By default, MSIE prompts the user to allow or disallow programmatically copy/pasting the first time a website tries to do this, so user-interaction is normally required in such cases. Please note that neither option prevents a website from social engineering the user into typing a keyboard shortcut to copy/paste the image. This function incorrectly uses the size of the original BMP image to allocate memory for storing the converted PNG image. The PNG image will be smaller than the BMP under most circumstances, but if a specially crafted image leads to the original BMP image being smaller than the converted PNG, the function will write PNG data beyond the bounds of the allocated memory. Here is some pseudo code that was created by reverse engineering the CPaste\u00adCommand::Convert\u00adBitmapto\u00adPng function, which shows the vulnerability:  Convert a BMP formatted image to a PNG formatted image The code uses the wrong size to allocate memory in po\u00adPng\u00adImage->New(u\u00adBitmap\u00adSize);. Changing this line of code to po\u00adPng\u00adImage->New(*pu\u00adPng\u00adImage\u00adSize); should address the issue. This is where the code can potentially write beyond the boundaries of the allocated memory if u\u00adBitmap\u00adSize is smaller than *pu\u00adPng\u00adImage\u00adSize. Below are my notes from reversing the code for your viewing pleasure. There are a few flaws/omissions in the parts that are not directly relevant to the bug, as I did not attempt to finish all the details after I figured out enough to determine root cause, exploitability and attack vectors. 57 push edi 0x\u00adE<edx>, h\u00adResult = error code on integer overflow Exploit An attacker looking to exploit this issue will commonly attempt to get the memory allocated to store the PNG image in a location that is followed by a pre-allocated memory block that contains information the attacker would like to modify. Using the buffer overflow, the attacker can overwrite this pre-allocated memory block with attacker controlled data. Depending on the type of the pre-allocated memory, this could allow the attacker to read or modify arbitrary information within the process and take control of execution flow. 8 May 2014: This vulnerability was submitted to ZDI. 9 June 2014: This vulnerability was acquired by ZDI. 23 June 2014: This vulnerability was disclosed to Microsoft by ZDI. This vulnerability was address by Microsoft in MS14-056. 21 December 2016: Details of this vulnerability are released.", "qas": [{"answers": [{"answer_start": 633, "text": "This function incorrectly uses the size of the original BMP image to allocate memory for storing the converted PNG image"}], "question": "What is root cause?", "id": "40960-0", "is_impossible": false}, {"answers": [{"answer_start": 51, "text": "execute arbitrary code"}], "question": "What is impact?", "id": "40960-1", "is_impossible": false}, {"answers": [{"answer_start": 831, "text": "a specially crafted image"}], "question": "What is attack vector?", "id": "40960-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "The problem is a buffer-overflow which happens during the filling of the LCD-like screen containing info about the status of the connection. For exploiting this vulnerability is only needed that an user follows a rtsp:// link, if the port 554 of the server is closed Quicktime will automatically change the transport and will try the HTTP protocol on port 80, the 404 error message of the server (other error numbers are valid too) will be visualized in the LCD-like screen. During my tests I have been able to fully overwrite the return address anyway note that the visible effects of the vulnerability could change during the usage of the debugger (in attaching mode The Code and then 4)", "qas": [{"answers": [], "question": "What is root cause?", "id": "4885-0", "is_impossible": true}, {"answers": [{"answer_start": 511, "text": "fully overwrite the return address"}], "question": "What is impact?", "id": "4885-1", "is_impossible": false}, {"answers": [], "question": "What is attack vector?", "id": "4885-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "greetz to raptor for sharing this vulnerability and in no specific  order just want to show love for: nemo, andrewg, jduck, bannedit,  PRIVATE  DO NOT DISTRIBUTE  PRIVATE   so ret is easier to guess  Create the payload..", "qas": [{"answers": [], "question": "What is root cause?", "id": "1248-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "1248-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "1248-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "BaSoMail POP3 server has been reported prone to a remote denial of service vulnerability. If the attacker then invokes the QUIT command the BaSoMail server will reportedly fail, possibly due to an internal exception. It has been reported that a remote authenticated attacker, may supply negative value integers to several POP3 commands successively.", "qas": [{"answers": [{"answer_start": 194, "text": "an internal exception"}], "question": "What is root cause?", "id": "22667-0", "is_impossible": false}, {"answers": [{"answer_start": 57, "text": "denial of service"}], "question": "What is impact?", "id": "22667-1", "is_impossible": false}, {"answers": [{"answer_start": 119, "text": "the QUIT command"}], "question": "What is attack vector?", "id": "22667-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "laptop), but the exploit will still tell you if you're vulnerable  regardless.", "qas": [{"answers": [], "question": "What is root cause?", "id": "15774-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "15774-1", "is_impossible": true}, {"answers": [], "question": "What is attack vector?", "id": "15774-2", "is_impossible": true}]}]}, {"title": "", "paragraphs": [{"context": "The protocol is composed by fields that have particular types, for example 10 for strings or 8 for integers and so on like any RPC Through the \"createsearch\" command sent from a valid account and a type 9 value is possible to write a 0x00000000 in an arbitrary memory Seems that this vulnerability can be reached only with a valid account.", "qas": [{"answers": [], "question": "What is root cause?", "id": "18488-0", "is_impossible": true}, {"answers": [], "question": "What is impact?", "id": "18488-1", "is_impossible": true}, {"answers": [{"answer_start": 226, "text": "write a 0x00000000 in an arbitrary memory"}], "question": "What is attack vector?", "id": "18488-2", "is_impossible": false}]}]}, {"title": "", "paragraphs": [{"context": "A local user can use a WM_COPYDATA message to send arbitrary code to NetDDE, which will a WM_COPYDATA message to send arbitrary code to NetDDE", "qas": [{"answers": [], "question": "What is root cause?", "id": "21922-0", "is_impossible": true}, {"answers": [{"answer_start": 46, "text": "send arbitrary code to NetDD"}], "question": "What is impact?", "id": "21922-1", "is_impossible": false}, {"answers": [{"answer_start": 17, "text": "use a WM_COPYDATA message"}], "question": "What is attack vector?", "id": "21922-2", "is_impossible": false}]}]}], "version": "2.0"}